import * as pulumi from "@pulumi/pulumi";
import * as outputs from "../../types/output";
/**
 * Get a BgpPeer
 */
export declare function getBgpPeer(args: GetBgpPeerArgs, opts?: pulumi.InvokeOptions): Promise<GetBgpPeerResult>;
export interface GetBgpPeerArgs {
    /**
     * The name of the BgpPeer
     */
    bgpPeerName: string;
    /**
     * The fully qualified Azure Resource manager identifier of the resource.
     */
    resourceUri: string;
}
/**
 * A BgpPeer resource for an Arc connected cluster (Microsoft.Kubernetes/connectedClusters)
 */
export interface GetBgpPeerResult {
    /**
     * Fully qualified resource ID for the resource. E.g. "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
     */
    readonly id: string;
    /**
     * My ASN
     */
    readonly myAsn: number;
    /**
     * The name of the resource
     */
    readonly name: string;
    /**
     * Peer Address
     */
    readonly peerAddress: string;
    /**
     * Peer ASN
     */
    readonly peerAsn: number;
    /**
     * Resource provision state
     */
    readonly provisioningState: string;
    /**
     * Azure Resource Manager metadata containing createdBy and modifiedBy information.
     */
    readonly systemData: outputs.kubernetesruntime.v20240301.SystemDataResponse;
    /**
     * The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
     */
    readonly type: string;
}
/**
 * Get a BgpPeer
 */
export declare function getBgpPeerOutput(args: GetBgpPeerOutputArgs, opts?: pulumi.InvokeOutputOptions): pulumi.Output<GetBgpPeerResult>;
export interface GetBgpPeerOutputArgs {
    /**
     * The name of the BgpPeer
     */
    bgpPeerName: pulumi.Input<string>;
    /**
     * The fully qualified Azure Resource manager identifier of the resource.
     */
    resourceUri: pulumi.Input<string>;
}
