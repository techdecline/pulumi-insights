import * as pulumi from "@pulumi/pulumi";
import * as outputs from "../../types/output";
import * as enums from "../../types/enums";
/**
 * An Azure Monitor Workspace definition
 */
export declare class AzureMonitorWorkspace extends pulumi.CustomResource {
    /**
     * Get an existing AzureMonitorWorkspace resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    static get(name: string, id: pulumi.Input<pulumi.ID>, opts?: pulumi.CustomResourceOptions): AzureMonitorWorkspace;
    /**
     * Returns true if the given object is an instance of AzureMonitorWorkspace.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    static isInstance(obj: any): obj is AzureMonitorWorkspace;
    /**
     * The immutable Id of the Azure Monitor Workspace. This property is read-only.
     */
    readonly accountId: pulumi.Output<string>;
    /**
     * The Data Collection Rule and Endpoint used for ingestion by default.
     */
    readonly defaultIngestionSettings: pulumi.Output<outputs.monitor.v20230403.AzureMonitorWorkspaceResponseDefaultIngestionSettings>;
    /**
     * Resource entity tag (ETag)
     */
    readonly etag: pulumi.Output<string>;
    /**
     * The geo-location where the resource lives
     */
    readonly location: pulumi.Output<string>;
    /**
     * Properties related to the metrics container in the Azure Monitor Workspace
     */
    readonly metrics: pulumi.Output<outputs.monitor.v20230403.AzureMonitorWorkspaceResponseMetrics>;
    /**
     * The name of the resource
     */
    readonly name: pulumi.Output<string>;
    /**
     * List of private endpoint connections
     */
    readonly privateEndpointConnections: pulumi.Output<outputs.monitor.v20230403.PrivateEndpointConnectionResponse[]>;
    /**
     * The provisioning state of the Azure Monitor Workspace. Set to Succeeded if everything is healthy.
     */
    readonly provisioningState: pulumi.Output<string>;
    /**
     * Gets or sets allow or disallow public network access to Azure Monitor Workspace
     */
    readonly publicNetworkAccess: pulumi.Output<string | undefined>;
    /**
     * Azure Resource Manager metadata containing createdBy and modifiedBy information.
     */
    readonly systemData: pulumi.Output<outputs.monitor.v20230403.SystemDataResponse>;
    /**
     * Resource tags.
     */
    readonly tags: pulumi.Output<{
        [key: string]: string;
    } | undefined>;
    /**
     * The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
     */
    readonly type: pulumi.Output<string>;
    /**
     * Create a AzureMonitorWorkspace resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: AzureMonitorWorkspaceArgs, opts?: pulumi.CustomResourceOptions);
}
/**
 * The set of arguments for constructing a AzureMonitorWorkspace resource.
 */
export interface AzureMonitorWorkspaceArgs {
    /**
     * The name of the Azure Monitor Workspace. The name is case insensitive
     */
    azureMonitorWorkspaceName?: pulumi.Input<string>;
    /**
     * The geo-location where the resource lives
     */
    location?: pulumi.Input<string>;
    /**
     * Gets or sets allow or disallow public network access to Azure Monitor Workspace
     */
    publicNetworkAccess?: pulumi.Input<string | enums.monitor.v20230403.PublicNetworkAccess>;
    /**
     * The name of the resource group. The name is case insensitive.
     */
    resourceGroupName: pulumi.Input<string>;
    /**
     * Resource tags.
     */
    tags?: pulumi.Input<{
        [key: string]: pulumi.Input<string>;
    }>;
}
