import * as pulumi from "@pulumi/pulumi";
import * as outputs from "../../types/output";
/**
 * Returns the specific Azure Monitor workspace
 */
export declare function getAzureMonitorWorkspace(args: GetAzureMonitorWorkspaceArgs, opts?: pulumi.InvokeOptions): Promise<GetAzureMonitorWorkspaceResult>;
export interface GetAzureMonitorWorkspaceArgs {
    /**
     * The name of the Azure Monitor workspace. The name is case insensitive.
     */
    azureMonitorWorkspaceName: string;
    /**
     * The name of the resource group. The name is case insensitive.
     */
    resourceGroupName: string;
}
/**
 * An Azure Monitor Workspace definition.
 */
export interface GetAzureMonitorWorkspaceResult {
    /**
     * The immutable ID of the Azure Monitor workspace. This property is read-only.
     */
    readonly accountId: string;
    /**
     * The Data Collection Rule and Endpoint used for ingestion by default.
     */
    readonly defaultIngestionSettings: outputs.monitor.v20231001preview.IngestionSettingsResponse;
    /**
     * Resource entity tag (ETag)
     */
    readonly etag: string;
    /**
     * Fully qualified resource ID for the resource. E.g. "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
     */
    readonly id: string;
    /**
     * The geo-location where the resource lives
     */
    readonly location: string;
    /**
     * Information about metrics for the Azure Monitor workspace
     */
    readonly metrics?: outputs.monitor.v20231001preview.MetricsResponse;
    /**
     * The name of the resource
     */
    readonly name: string;
    /**
     * List of private endpoint connections.
     */
    readonly privateEndpointConnections: outputs.monitor.v20231001preview.PrivateEndpointConnectionResponse[];
    /**
     * The provisioning state of the Azure Monitor workspace. Set to Succeeded if everything is healthy.
     */
    readonly provisioningState: string;
    /**
     * Gets or sets allow or disallow public network access to workspace
     */
    readonly publicNetworkAccess: string;
    /**
     * Azure Resource Manager metadata containing createdBy and modifiedBy information.
     */
    readonly systemData: outputs.monitor.v20231001preview.SystemDataResponse;
    /**
     * Resource tags.
     */
    readonly tags?: {
        [key: string]: string;
    };
    /**
     * The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
     */
    readonly type: string;
}
/**
 * Returns the specific Azure Monitor workspace
 */
export declare function getAzureMonitorWorkspaceOutput(args: GetAzureMonitorWorkspaceOutputArgs, opts?: pulumi.InvokeOutputOptions): pulumi.Output<GetAzureMonitorWorkspaceResult>;
export interface GetAzureMonitorWorkspaceOutputArgs {
    /**
     * The name of the Azure Monitor workspace. The name is case insensitive.
     */
    azureMonitorWorkspaceName: pulumi.Input<string>;
    /**
     * The name of the resource group. The name is case insensitive.
     */
    resourceGroupName: pulumi.Input<string>;
}
