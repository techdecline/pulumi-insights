import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
/**
 * A pipeline group definition.
 * Azure REST API version: 2023-10-01-preview.
 *
 * Other available API versions: 2024-10-01-preview.
 */
export declare class PipelineGroup extends pulumi.CustomResource {
    /**
     * Get an existing PipelineGroup resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    static get(name: string, id: pulumi.Input<pulumi.ID>, opts?: pulumi.CustomResourceOptions): PipelineGroup;
    /**
     * Returns true if the given object is an instance of PipelineGroup.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    static isInstance(obj: any): obj is PipelineGroup;
    /**
     * The exporters specified for a pipeline group instance.
     */
    readonly exporters: pulumi.Output<outputs.monitor.ExporterResponse[]>;
    /**
     * The extended location for given pipeline group.
     */
    readonly extendedLocation: pulumi.Output<outputs.monitor.AzureResourceManagerCommonTypesExtendedLocationResponse | undefined>;
    /**
     * The geo-location where the resource lives
     */
    readonly location: pulumi.Output<string>;
    /**
     * The name of the resource
     */
    readonly name: pulumi.Output<string>;
    /**
     * Networking configurations for the pipeline group instance.
     */
    readonly networkingConfigurations: pulumi.Output<outputs.monitor.NetworkingConfigurationResponse[] | undefined>;
    /**
     * The processors specified for a pipeline group instance.
     */
    readonly processors: pulumi.Output<outputs.monitor.ProcessorResponse[]>;
    /**
     * The provisioning state of a pipeline group instance. Set to Succeeded if everything is healthy.
     */
    readonly provisioningState: pulumi.Output<string>;
    /**
     * The receivers specified for a pipeline group instance.
     */
    readonly receivers: pulumi.Output<outputs.monitor.ReceiverResponse[]>;
    /**
     * Defines the amount of replicas of the pipeline group instance.
     */
    readonly replicas: pulumi.Output<number | undefined>;
    /**
     * The service section for a given pipeline group instance.
     */
    readonly service: pulumi.Output<outputs.monitor.ServiceResponse>;
    /**
     * Azure Resource Manager metadata containing createdBy and modifiedBy information.
     */
    readonly systemData: pulumi.Output<outputs.monitor.SystemDataResponse>;
    /**
     * Resource tags.
     */
    readonly tags: pulumi.Output<{
        [key: string]: string;
    } | undefined>;
    /**
     * The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
     */
    readonly type: pulumi.Output<string>;
    /**
     * Create a PipelineGroup resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: PipelineGroupArgs, opts?: pulumi.CustomResourceOptions);
}
/**
 * The set of arguments for constructing a PipelineGroup resource.
 */
export interface PipelineGroupArgs {
    /**
     * The exporters specified for a pipeline group instance.
     */
    exporters: pulumi.Input<pulumi.Input<inputs.monitor.ExporterArgs>[]>;
    /**
     * The extended location for given pipeline group.
     */
    extendedLocation?: pulumi.Input<inputs.monitor.AzureResourceManagerCommonTypesExtendedLocationArgs>;
    /**
     * The geo-location where the resource lives
     */
    location?: pulumi.Input<string>;
    /**
     * Networking configurations for the pipeline group instance.
     */
    networkingConfigurations?: pulumi.Input<pulumi.Input<inputs.monitor.NetworkingConfigurationArgs>[]>;
    /**
     * The name of pipeline group. The name is case insensitive.
     */
    pipelineGroupName?: pulumi.Input<string>;
    /**
     * The processors specified for a pipeline group instance.
     */
    processors: pulumi.Input<pulumi.Input<inputs.monitor.ProcessorArgs>[]>;
    /**
     * The receivers specified for a pipeline group instance.
     */
    receivers: pulumi.Input<pulumi.Input<inputs.monitor.ReceiverArgs>[]>;
    /**
     * Defines the amount of replicas of the pipeline group instance.
     */
    replicas?: pulumi.Input<number>;
    /**
     * The name of the resource group. The name is case insensitive.
     */
    resourceGroupName: pulumi.Input<string>;
    /**
     * The service section for a given pipeline group instance.
     */
    service: pulumi.Input<inputs.monitor.ServiceArgs>;
    /**
     * Resource tags.
     */
    tags?: pulumi.Input<{
        [key: string]: pulumi.Input<string>;
    }>;
}
