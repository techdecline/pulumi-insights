import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
/**
 * Connects an edge site to an orbital gateway and describes what layer 2 traffic to forward between them.
 * Azure REST API version: 2024-03-01-preview.
 *
 * Other available API versions: 2024-03-01.
 */
export declare class L2Connection extends pulumi.CustomResource {
    /**
     * Get an existing L2Connection resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    static get(name: string, id: pulumi.Input<pulumi.ID>, opts?: pulumi.CustomResourceOptions): L2Connection;
    /**
     * Returns true if the given object is an instance of L2Connection.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    static isInstance(obj: any): obj is L2Connection;
    /**
     * Globally-unique identifier for this connection that is to be used as a circuit ID.
     */
    readonly circuitId: pulumi.Output<string>;
    /**
     * A reference to an Microsoft.Orbital/edgeSites resource to route traffic for.
     */
    readonly edgeSite: pulumi.Output<outputs.orbital.L2ConnectionsPropertiesResponseEdgeSite>;
    /**
     * A reference to an Microsoft.Orbital/groundStations resource to route traffic for.
     */
    readonly groundStation: pulumi.Output<outputs.orbital.L2ConnectionsPropertiesResponseGroundStation>;
    /**
     * The geo-location where the resource lives
     */
    readonly location: pulumi.Output<string>;
    /**
     * The name of the resource
     */
    readonly name: pulumi.Output<string>;
    /**
     * Azure Resource Manager metadata containing createdBy and modifiedBy information.
     */
    readonly systemData: pulumi.Output<outputs.orbital.SystemDataResponse>;
    /**
     * Resource tags.
     */
    readonly tags: pulumi.Output<{
        [key: string]: string;
    } | undefined>;
    /**
     * The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
     */
    readonly type: pulumi.Output<string>;
    /**
     * The VLAN ID for the L2 connection.
     */
    readonly vlanId: pulumi.Output<number>;
    /**
     * Create a L2Connection resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: L2ConnectionArgs, opts?: pulumi.CustomResourceOptions);
}
/**
 * The set of arguments for constructing a L2Connection resource.
 */
export interface L2ConnectionArgs {
    /**
     * A reference to an Microsoft.Orbital/edgeSites resource to route traffic for.
     */
    edgeSite: pulumi.Input<inputs.orbital.L2ConnectionsPropertiesEdgeSiteArgs>;
    /**
     * A reference to an Microsoft.Orbital/groundStations resource to route traffic for.
     */
    groundStation: pulumi.Input<inputs.orbital.L2ConnectionsPropertiesGroundStationArgs>;
    /**
     * L2 Connection name.
     */
    l2ConnectionName?: pulumi.Input<string>;
    /**
     * The geo-location where the resource lives
     */
    location?: pulumi.Input<string>;
    /**
     * The unique name of the partner router that cross-connects with the Orbital Edge Router at the ground station site.
     */
    name: pulumi.Input<string>;
    /**
     * The name of the resource group. The name is case insensitive.
     */
    resourceGroupName: pulumi.Input<string>;
    /**
     * Resource tags.
     */
    tags?: pulumi.Input<{
        [key: string]: pulumi.Input<string>;
    }>;
    /**
     * The VLAN ID for the L2 connection.
     */
    vlanId: pulumi.Input<number>;
}
