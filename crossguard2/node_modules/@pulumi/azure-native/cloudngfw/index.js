"use strict";
// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __exportStar = (this && this.__exportStar) || function(m, exports) {
    for (var p in m) if (p !== "default" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.listGlobalRulestackAdvancedSecurityObjectsOutput = exports.listGlobalRulestackAdvancedSecurityObjects = exports.GlobalRulestack = exports.getPrefixListLocalRulestackOutput = exports.getPrefixListLocalRulestack = exports.getPrefixListGlobalRulestackOutput = exports.getPrefixListGlobalRulestack = exports.getPreRuleCountersOutput = exports.getPreRuleCounters = exports.getPreRuleOutput = exports.getPreRule = exports.getPostRuleCountersOutput = exports.getPostRuleCounters = exports.getPostRuleOutput = exports.getPostRule = exports.getLocalRulestackSupportInfoOutput = exports.getLocalRulestackSupportInfo = exports.getLocalRulestackChangeLogOutput = exports.getLocalRulestackChangeLog = exports.getLocalRulestackOutput = exports.getLocalRulestack = exports.getLocalRuleCountersOutput = exports.getLocalRuleCounters = exports.getLocalRuleOutput = exports.getLocalRule = exports.getGlobalRulestackChangeLogOutput = exports.getGlobalRulestackChangeLog = exports.getGlobalRulestackOutput = exports.getGlobalRulestack = exports.getFqdnListLocalRulestackOutput = exports.getFqdnListLocalRulestack = exports.getFqdnListGlobalRulestackOutput = exports.getFqdnListGlobalRulestack = exports.getFirewallSupportInfoOutput = exports.getFirewallSupportInfo = exports.getFirewallLogProfileOutput = exports.getFirewallLogProfile = exports.getFirewallGlobalRulestackOutput = exports.getFirewallGlobalRulestack = exports.getFirewallOutput = exports.getFirewall = exports.getCertificateObjectLocalRulestackOutput = exports.getCertificateObjectLocalRulestack = exports.getCertificateObjectGlobalRulestackOutput = exports.getCertificateObjectGlobalRulestack = exports.FqdnListLocalRulestack = exports.FqdnListGlobalRulestack = exports.Firewall = exports.CertificateObjectLocalRulestack = exports.CertificateObjectGlobalRulestack = void 0;
exports.v20250206preview = exports.v20240207preview = exports.v20240119preview = exports.v20231010preview = exports.v20230901preview = exports.v20230901 = exports.v20220829preview = exports.v20220829 = exports.PrefixListLocalRulestack = exports.PrefixListGlobalRulestack = exports.PreRule = exports.PostRule = exports.LocalRulestack = exports.LocalRule = exports.listPaloAltoNetworksCloudngfwSupportInfoOutput = exports.listPaloAltoNetworksCloudngfwSupportInfo = exports.listPaloAltoNetworksCloudngfwProductSerialNumberStatusOutput = exports.listPaloAltoNetworksCloudngfwProductSerialNumberStatus = exports.listPaloAltoNetworksCloudngfwCloudManagerTenantsOutput = exports.listPaloAltoNetworksCloudngfwCloudManagerTenants = exports.listLocalRulestackSecurityServicesOutput = exports.listLocalRulestackSecurityServices = exports.listLocalRulestackPredefinedUrlCategoriesOutput = exports.listLocalRulestackPredefinedUrlCategories = exports.listLocalRulestackFirewallsOutput = exports.listLocalRulestackFirewalls = exports.listLocalRulestackCountriesOutput = exports.listLocalRulestackCountries = exports.listLocalRulestackAppIdsOutput = exports.listLocalRulestackAppIds = exports.listLocalRulestackAdvancedSecurityObjectsOutput = exports.listLocalRulestackAdvancedSecurityObjects = exports.listGlobalRulestackSecurityServicesOutput = exports.listGlobalRulestackSecurityServices = exports.listGlobalRulestackPredefinedUrlCategoriesOutput = exports.listGlobalRulestackPredefinedUrlCategories = exports.listGlobalRulestackFirewallsOutput = exports.listGlobalRulestackFirewalls = exports.listGlobalRulestackCountriesOutput = exports.listGlobalRulestackCountries = exports.listGlobalRulestackAppIdsOutput = exports.listGlobalRulestackAppIds = void 0;
const pulumi = require("@pulumi/pulumi");
const utilities = require("../utilities");
exports.CertificateObjectGlobalRulestack = null;
utilities.lazyLoad(exports, ["CertificateObjectGlobalRulestack"], () => require("./certificateObjectGlobalRulestack"));
exports.CertificateObjectLocalRulestack = null;
utilities.lazyLoad(exports, ["CertificateObjectLocalRulestack"], () => require("./certificateObjectLocalRulestack"));
exports.Firewall = null;
utilities.lazyLoad(exports, ["Firewall"], () => require("./firewall"));
exports.FqdnListGlobalRulestack = null;
utilities.lazyLoad(exports, ["FqdnListGlobalRulestack"], () => require("./fqdnListGlobalRulestack"));
exports.FqdnListLocalRulestack = null;
utilities.lazyLoad(exports, ["FqdnListLocalRulestack"], () => require("./fqdnListLocalRulestack"));
exports.getCertificateObjectGlobalRulestack = null;
exports.getCertificateObjectGlobalRulestackOutput = null;
utilities.lazyLoad(exports, ["getCertificateObjectGlobalRulestack", "getCertificateObjectGlobalRulestackOutput"], () => require("./getCertificateObjectGlobalRulestack"));
exports.getCertificateObjectLocalRulestack = null;
exports.getCertificateObjectLocalRulestackOutput = null;
utilities.lazyLoad(exports, ["getCertificateObjectLocalRulestack", "getCertificateObjectLocalRulestackOutput"], () => require("./getCertificateObjectLocalRulestack"));
exports.getFirewall = null;
exports.getFirewallOutput = null;
utilities.lazyLoad(exports, ["getFirewall", "getFirewallOutput"], () => require("./getFirewall"));
exports.getFirewallGlobalRulestack = null;
exports.getFirewallGlobalRulestackOutput = null;
utilities.lazyLoad(exports, ["getFirewallGlobalRulestack", "getFirewallGlobalRulestackOutput"], () => require("./getFirewallGlobalRulestack"));
exports.getFirewallLogProfile = null;
exports.getFirewallLogProfileOutput = null;
utilities.lazyLoad(exports, ["getFirewallLogProfile", "getFirewallLogProfileOutput"], () => require("./getFirewallLogProfile"));
exports.getFirewallSupportInfo = null;
exports.getFirewallSupportInfoOutput = null;
utilities.lazyLoad(exports, ["getFirewallSupportInfo", "getFirewallSupportInfoOutput"], () => require("./getFirewallSupportInfo"));
exports.getFqdnListGlobalRulestack = null;
exports.getFqdnListGlobalRulestackOutput = null;
utilities.lazyLoad(exports, ["getFqdnListGlobalRulestack", "getFqdnListGlobalRulestackOutput"], () => require("./getFqdnListGlobalRulestack"));
exports.getFqdnListLocalRulestack = null;
exports.getFqdnListLocalRulestackOutput = null;
utilities.lazyLoad(exports, ["getFqdnListLocalRulestack", "getFqdnListLocalRulestackOutput"], () => require("./getFqdnListLocalRulestack"));
exports.getGlobalRulestack = null;
exports.getGlobalRulestackOutput = null;
utilities.lazyLoad(exports, ["getGlobalRulestack", "getGlobalRulestackOutput"], () => require("./getGlobalRulestack"));
exports.getGlobalRulestackChangeLog = null;
exports.getGlobalRulestackChangeLogOutput = null;
utilities.lazyLoad(exports, ["getGlobalRulestackChangeLog", "getGlobalRulestackChangeLogOutput"], () => require("./getGlobalRulestackChangeLog"));
exports.getLocalRule = null;
exports.getLocalRuleOutput = null;
utilities.lazyLoad(exports, ["getLocalRule", "getLocalRuleOutput"], () => require("./getLocalRule"));
exports.getLocalRuleCounters = null;
exports.getLocalRuleCountersOutput = null;
utilities.lazyLoad(exports, ["getLocalRuleCounters", "getLocalRuleCountersOutput"], () => require("./getLocalRuleCounters"));
exports.getLocalRulestack = null;
exports.getLocalRulestackOutput = null;
utilities.lazyLoad(exports, ["getLocalRulestack", "getLocalRulestackOutput"], () => require("./getLocalRulestack"));
exports.getLocalRulestackChangeLog = null;
exports.getLocalRulestackChangeLogOutput = null;
utilities.lazyLoad(exports, ["getLocalRulestackChangeLog", "getLocalRulestackChangeLogOutput"], () => require("./getLocalRulestackChangeLog"));
exports.getLocalRulestackSupportInfo = null;
exports.getLocalRulestackSupportInfoOutput = null;
utilities.lazyLoad(exports, ["getLocalRulestackSupportInfo", "getLocalRulestackSupportInfoOutput"], () => require("./getLocalRulestackSupportInfo"));
exports.getPostRule = null;
exports.getPostRuleOutput = null;
utilities.lazyLoad(exports, ["getPostRule", "getPostRuleOutput"], () => require("./getPostRule"));
exports.getPostRuleCounters = null;
exports.getPostRuleCountersOutput = null;
utilities.lazyLoad(exports, ["getPostRuleCounters", "getPostRuleCountersOutput"], () => require("./getPostRuleCounters"));
exports.getPreRule = null;
exports.getPreRuleOutput = null;
utilities.lazyLoad(exports, ["getPreRule", "getPreRuleOutput"], () => require("./getPreRule"));
exports.getPreRuleCounters = null;
exports.getPreRuleCountersOutput = null;
utilities.lazyLoad(exports, ["getPreRuleCounters", "getPreRuleCountersOutput"], () => require("./getPreRuleCounters"));
exports.getPrefixListGlobalRulestack = null;
exports.getPrefixListGlobalRulestackOutput = null;
utilities.lazyLoad(exports, ["getPrefixListGlobalRulestack", "getPrefixListGlobalRulestackOutput"], () => require("./getPrefixListGlobalRulestack"));
exports.getPrefixListLocalRulestack = null;
exports.getPrefixListLocalRulestackOutput = null;
utilities.lazyLoad(exports, ["getPrefixListLocalRulestack", "getPrefixListLocalRulestackOutput"], () => require("./getPrefixListLocalRulestack"));
exports.GlobalRulestack = null;
utilities.lazyLoad(exports, ["GlobalRulestack"], () => require("./globalRulestack"));
exports.listGlobalRulestackAdvancedSecurityObjects = null;
exports.listGlobalRulestackAdvancedSecurityObjectsOutput = null;
utilities.lazyLoad(exports, ["listGlobalRulestackAdvancedSecurityObjects", "listGlobalRulestackAdvancedSecurityObjectsOutput"], () => require("./listGlobalRulestackAdvancedSecurityObjects"));
exports.listGlobalRulestackAppIds = null;
exports.listGlobalRulestackAppIdsOutput = null;
utilities.lazyLoad(exports, ["listGlobalRulestackAppIds", "listGlobalRulestackAppIdsOutput"], () => require("./listGlobalRulestackAppIds"));
exports.listGlobalRulestackCountries = null;
exports.listGlobalRulestackCountriesOutput = null;
utilities.lazyLoad(exports, ["listGlobalRulestackCountries", "listGlobalRulestackCountriesOutput"], () => require("./listGlobalRulestackCountries"));
exports.listGlobalRulestackFirewalls = null;
exports.listGlobalRulestackFirewallsOutput = null;
utilities.lazyLoad(exports, ["listGlobalRulestackFirewalls", "listGlobalRulestackFirewallsOutput"], () => require("./listGlobalRulestackFirewalls"));
exports.listGlobalRulestackPredefinedUrlCategories = null;
exports.listGlobalRulestackPredefinedUrlCategoriesOutput = null;
utilities.lazyLoad(exports, ["listGlobalRulestackPredefinedUrlCategories", "listGlobalRulestackPredefinedUrlCategoriesOutput"], () => require("./listGlobalRulestackPredefinedUrlCategories"));
exports.listGlobalRulestackSecurityServices = null;
exports.listGlobalRulestackSecurityServicesOutput = null;
utilities.lazyLoad(exports, ["listGlobalRulestackSecurityServices", "listGlobalRulestackSecurityServicesOutput"], () => require("./listGlobalRulestackSecurityServices"));
exports.listLocalRulestackAdvancedSecurityObjects = null;
exports.listLocalRulestackAdvancedSecurityObjectsOutput = null;
utilities.lazyLoad(exports, ["listLocalRulestackAdvancedSecurityObjects", "listLocalRulestackAdvancedSecurityObjectsOutput"], () => require("./listLocalRulestackAdvancedSecurityObjects"));
exports.listLocalRulestackAppIds = null;
exports.listLocalRulestackAppIdsOutput = null;
utilities.lazyLoad(exports, ["listLocalRulestackAppIds", "listLocalRulestackAppIdsOutput"], () => require("./listLocalRulestackAppIds"));
exports.listLocalRulestackCountries = null;
exports.listLocalRulestackCountriesOutput = null;
utilities.lazyLoad(exports, ["listLocalRulestackCountries", "listLocalRulestackCountriesOutput"], () => require("./listLocalRulestackCountries"));
exports.listLocalRulestackFirewalls = null;
exports.listLocalRulestackFirewallsOutput = null;
utilities.lazyLoad(exports, ["listLocalRulestackFirewalls", "listLocalRulestackFirewallsOutput"], () => require("./listLocalRulestackFirewalls"));
exports.listLocalRulestackPredefinedUrlCategories = null;
exports.listLocalRulestackPredefinedUrlCategoriesOutput = null;
utilities.lazyLoad(exports, ["listLocalRulestackPredefinedUrlCategories", "listLocalRulestackPredefinedUrlCategoriesOutput"], () => require("./listLocalRulestackPredefinedUrlCategories"));
exports.listLocalRulestackSecurityServices = null;
exports.listLocalRulestackSecurityServicesOutput = null;
utilities.lazyLoad(exports, ["listLocalRulestackSecurityServices", "listLocalRulestackSecurityServicesOutput"], () => require("./listLocalRulestackSecurityServices"));
exports.listPaloAltoNetworksCloudngfwCloudManagerTenants = null;
exports.listPaloAltoNetworksCloudngfwCloudManagerTenantsOutput = null;
utilities.lazyLoad(exports, ["listPaloAltoNetworksCloudngfwCloudManagerTenants", "listPaloAltoNetworksCloudngfwCloudManagerTenantsOutput"], () => require("./listPaloAltoNetworksCloudngfwCloudManagerTenants"));
exports.listPaloAltoNetworksCloudngfwProductSerialNumberStatus = null;
exports.listPaloAltoNetworksCloudngfwProductSerialNumberStatusOutput = null;
utilities.lazyLoad(exports, ["listPaloAltoNetworksCloudngfwProductSerialNumberStatus", "listPaloAltoNetworksCloudngfwProductSerialNumberStatusOutput"], () => require("./listPaloAltoNetworksCloudngfwProductSerialNumberStatus"));
exports.listPaloAltoNetworksCloudngfwSupportInfo = null;
exports.listPaloAltoNetworksCloudngfwSupportInfoOutput = null;
utilities.lazyLoad(exports, ["listPaloAltoNetworksCloudngfwSupportInfo", "listPaloAltoNetworksCloudngfwSupportInfoOutput"], () => require("./listPaloAltoNetworksCloudngfwSupportInfo"));
exports.LocalRule = null;
utilities.lazyLoad(exports, ["LocalRule"], () => require("./localRule"));
exports.LocalRulestack = null;
utilities.lazyLoad(exports, ["LocalRulestack"], () => require("./localRulestack"));
exports.PostRule = null;
utilities.lazyLoad(exports, ["PostRule"], () => require("./postRule"));
exports.PreRule = null;
utilities.lazyLoad(exports, ["PreRule"], () => require("./preRule"));
exports.PrefixListGlobalRulestack = null;
utilities.lazyLoad(exports, ["PrefixListGlobalRulestack"], () => require("./prefixListGlobalRulestack"));
exports.PrefixListLocalRulestack = null;
utilities.lazyLoad(exports, ["PrefixListLocalRulestack"], () => require("./prefixListLocalRulestack"));
// Export enums:
__exportStar(require("../types/enums/cloudngfw"), exports);
// Export sub-modules:
const v20220829 = require("./v20220829");
exports.v20220829 = v20220829;
const v20220829preview = require("./v20220829preview");
exports.v20220829preview = v20220829preview;
const v20230901 = require("./v20230901");
exports.v20230901 = v20230901;
const v20230901preview = require("./v20230901preview");
exports.v20230901preview = v20230901preview;
const v20231010preview = require("./v20231010preview");
exports.v20231010preview = v20231010preview;
const v20240119preview = require("./v20240119preview");
exports.v20240119preview = v20240119preview;
const v20240207preview = require("./v20240207preview");
exports.v20240207preview = v20240207preview;
const v20250206preview = require("./v20250206preview");
exports.v20250206preview = v20250206preview;
const _module = {
    version: utilities.getVersion(),
    construct: (name, type, urn) => {
        switch (type) {
            case "azure-native:cloudngfw:CertificateObjectGlobalRulestack":
                return new exports.CertificateObjectGlobalRulestack(name, undefined, { urn });
            case "azure-native:cloudngfw:CertificateObjectLocalRulestack":
                return new exports.CertificateObjectLocalRulestack(name, undefined, { urn });
            case "azure-native:cloudngfw:Firewall":
                return new exports.Firewall(name, undefined, { urn });
            case "azure-native:cloudngfw:FqdnListGlobalRulestack":
                return new exports.FqdnListGlobalRulestack(name, undefined, { urn });
            case "azure-native:cloudngfw:FqdnListLocalRulestack":
                return new exports.FqdnListLocalRulestack(name, undefined, { urn });
            case "azure-native:cloudngfw:GlobalRulestack":
                return new exports.GlobalRulestack(name, undefined, { urn });
            case "azure-native:cloudngfw:LocalRule":
                return new exports.LocalRule(name, undefined, { urn });
            case "azure-native:cloudngfw:LocalRulestack":
                return new exports.LocalRulestack(name, undefined, { urn });
            case "azure-native:cloudngfw:PostRule":
                return new exports.PostRule(name, undefined, { urn });
            case "azure-native:cloudngfw:PreRule":
                return new exports.PreRule(name, undefined, { urn });
            case "azure-native:cloudngfw:PrefixListGlobalRulestack":
                return new exports.PrefixListGlobalRulestack(name, undefined, { urn });
            case "azure-native:cloudngfw:PrefixListLocalRulestack":
                return new exports.PrefixListLocalRulestack(name, undefined, { urn });
            default:
                throw new Error(`unknown resource type ${type}`);
        }
    },
};
pulumi.runtime.registerResourceModule("azure-native", "cloudngfw", _module);
//# sourceMappingURL=data:application/json;base64,