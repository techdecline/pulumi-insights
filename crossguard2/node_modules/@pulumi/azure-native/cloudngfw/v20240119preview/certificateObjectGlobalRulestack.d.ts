import * as pulumi from "@pulumi/pulumi";
import * as outputs from "../../types/output";
import * as enums from "../../types/enums";
/**
 * GlobalRulestack Certificate Object
 */
export declare class CertificateObjectGlobalRulestack extends pulumi.CustomResource {
    /**
     * Get an existing CertificateObjectGlobalRulestack resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    static get(name: string, id: pulumi.Input<pulumi.ID>, opts?: pulumi.CustomResourceOptions): CertificateObjectGlobalRulestack;
    /**
     * Returns true if the given object is an instance of CertificateObjectGlobalRulestack.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    static isInstance(obj: any): obj is CertificateObjectGlobalRulestack;
    /**
     * comment for this object
     */
    readonly auditComment: pulumi.Output<string | undefined>;
    /**
     * use certificate self signed
     */
    readonly certificateSelfSigned: pulumi.Output<string>;
    /**
     * Resource Id of certificate signer, to be populated only when certificateSelfSigned is false
     */
    readonly certificateSignerResourceId: pulumi.Output<string | undefined>;
    /**
     * user description for this object
     */
    readonly description: pulumi.Output<string | undefined>;
    /**
     * read only string representing last create or update
     */
    readonly etag: pulumi.Output<string | undefined>;
    /**
     * The name of the resource
     */
    readonly name: pulumi.Output<string>;
    /**
     * Provisioning state of the resource.
     */
    readonly provisioningState: pulumi.Output<string>;
    /**
     * Azure Resource Manager metadata containing createdBy and modifiedBy information.
     */
    readonly systemData: pulumi.Output<outputs.cloudngfw.v20240119preview.SystemDataResponse>;
    /**
     * The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
     */
    readonly type: pulumi.Output<string>;
    /**
     * Create a CertificateObjectGlobalRulestack resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: CertificateObjectGlobalRulestackArgs, opts?: pulumi.CustomResourceOptions);
}
/**
 * The set of arguments for constructing a CertificateObjectGlobalRulestack resource.
 */
export interface CertificateObjectGlobalRulestackArgs {
    /**
     * comment for this object
     */
    auditComment?: pulumi.Input<string>;
    /**
     * use certificate self signed
     */
    certificateSelfSigned: pulumi.Input<string | enums.cloudngfw.v20240119preview.BooleanEnum>;
    /**
     * Resource Id of certificate signer, to be populated only when certificateSelfSigned is false
     */
    certificateSignerResourceId?: pulumi.Input<string>;
    /**
     * user description for this object
     */
    description?: pulumi.Input<string>;
    /**
     * GlobalRulestack resource name
     */
    globalRulestackName: pulumi.Input<string>;
    /**
     * certificate name
     */
    name?: pulumi.Input<string>;
}
