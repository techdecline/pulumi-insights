import * as pulumi from "@pulumi/pulumi";
import * as outputs from "../../types/output";
/**
 * Retrieves information about the model view or the instance view of a hybrid machine.
 */
export declare function getMachine(args: GetMachineArgs, opts?: pulumi.InvokeOptions): Promise<GetMachineResult>;
export interface GetMachineArgs {
    /**
     * The expand expression to apply on the operation.
     */
    expand?: string;
    /**
     * The name of the hybrid machine.
     */
    machineName: string;
    /**
     * The name of the resource group. The name is case insensitive.
     */
    resourceGroupName: string;
}
/**
 * Describes a hybrid machine.
 */
export interface GetMachineResult {
    /**
     * Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
     */
    readonly id: string;
    /**
     * Identity for the resource.
     */
    readonly identity?: outputs.hybridcompute.v20220510preview.IdentityResponse;
    /**
     * The geo-location where the resource lives
     */
    readonly location: string;
    /**
     * The name of the resource
     */
    readonly name: string;
    /**
     * Hybrid Compute Machine properties
     */
    readonly properties: outputs.hybridcompute.v20220510preview.MachinePropertiesResponse;
    /**
     * The list of extensions affiliated to the machine
     */
    readonly resources: outputs.hybridcompute.v20220510preview.MachineExtensionResponse[];
    /**
     * The system meta data relating to this resource.
     */
    readonly systemData: outputs.hybridcompute.v20220510preview.SystemDataResponse;
    /**
     * Resource tags.
     */
    readonly tags?: {
        [key: string]: string;
    };
    /**
     * The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
     */
    readonly type: string;
}
/**
 * Retrieves information about the model view or the instance view of a hybrid machine.
 */
export declare function getMachineOutput(args: GetMachineOutputArgs, opts?: pulumi.InvokeOutputOptions): pulumi.Output<GetMachineResult>;
export interface GetMachineOutputArgs {
    /**
     * The expand expression to apply on the operation.
     */
    expand?: pulumi.Input<string>;
    /**
     * The name of the hybrid machine.
     */
    machineName: pulumi.Input<string>;
    /**
     * The name of the resource group. The name is case insensitive.
     */
    resourceGroupName: pulumi.Input<string>;
}
