import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../../types/input";
import * as outputs from "../../types/output";
/**
 * Describes a Run Command
 */
export declare class MachineRunCommand extends pulumi.CustomResource {
    /**
     * Get an existing MachineRunCommand resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    static get(name: string, id: pulumi.Input<pulumi.ID>, opts?: pulumi.CustomResourceOptions): MachineRunCommand;
    /**
     * Returns true if the given object is an instance of MachineRunCommand.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    static isInstance(obj: any): obj is MachineRunCommand;
    /**
     * Optional. If set to true, provisioning will complete as soon as script starts and will not wait for script to complete.
     */
    readonly asyncExecution: pulumi.Output<boolean | undefined>;
    /**
     * User-assigned managed identity that has access to errorBlobUri storage blob. Use an empty object in case of system-assigned identity. Make sure managed identity has been given access to blob's container with 'Storage Blob Data Contributor' role assignment. In case of user-assigned identity, make sure you add it under VM's identity. For more info on managed identity and Run Command, refer https://aka.ms/ManagedIdentity and https://aka.ms/RunCommandManaged
     */
    readonly errorBlobManagedIdentity: pulumi.Output<outputs.hybridcompute.v20231003preview.RunCommandManagedIdentityResponse | undefined>;
    /**
     * Specifies the Azure storage blob where script error stream will be uploaded. Use a SAS URI with read, append, create, write access OR use managed identity to provide the VM access to the blob. Refer errorBlobManagedIdentity parameter.
     */
    readonly errorBlobUri: pulumi.Output<string | undefined>;
    /**
     * The machine run command instance view.
     */
    readonly instanceView: pulumi.Output<outputs.hybridcompute.v20231003preview.MachineRunCommandInstanceViewResponse>;
    /**
     * The geo-location where the resource lives
     */
    readonly location: pulumi.Output<string>;
    /**
     * The name of the resource
     */
    readonly name: pulumi.Output<string>;
    /**
     * User-assigned managed identity that has access to outputBlobUri storage blob. Use an empty object in case of system-assigned identity. Make sure managed identity has been given access to blob's container with 'Storage Blob Data Contributor' role assignment. In case of user-assigned identity, make sure you add it under VM's identity. For more info on managed identity and Run Command, refer https://aka.ms/ManagedIdentity and https://aka.ms/RunCommandManaged
     */
    readonly outputBlobManagedIdentity: pulumi.Output<outputs.hybridcompute.v20231003preview.RunCommandManagedIdentityResponse | undefined>;
    /**
     * Specifies the Azure storage blob where script output stream will be uploaded. Use a SAS URI with read, append, create, write access OR use managed identity to provide the VM access to the blob. Refer outputBlobManagedIdentity parameter.
     */
    readonly outputBlobUri: pulumi.Output<string | undefined>;
    /**
     * The parameters used by the script.
     */
    readonly parameters: pulumi.Output<outputs.hybridcompute.v20231003preview.RunCommandInputParameterResponse[] | undefined>;
    /**
     * The parameters used by the script.
     */
    readonly protectedParameters: pulumi.Output<outputs.hybridcompute.v20231003preview.RunCommandInputParameterResponse[] | undefined>;
    /**
     * The provisioning state, which only appears in the response.
     */
    readonly provisioningState: pulumi.Output<string>;
    /**
     * Specifies the user account password on the machine when executing the run command.
     */
    readonly runAsPassword: pulumi.Output<string | undefined>;
    /**
     * Specifies the user account on the machine when executing the run command.
     */
    readonly runAsUser: pulumi.Output<string | undefined>;
    /**
     * The source of the run command script.
     */
    readonly source: pulumi.Output<outputs.hybridcompute.v20231003preview.MachineRunCommandScriptSourceResponse | undefined>;
    /**
     * Azure Resource Manager metadata containing createdBy and modifiedBy information.
     */
    readonly systemData: pulumi.Output<outputs.hybridcompute.v20231003preview.SystemDataResponse>;
    /**
     * Resource tags.
     */
    readonly tags: pulumi.Output<{
        [key: string]: string;
    } | undefined>;
    /**
     * The timeout in seconds to execute the run command.
     */
    readonly timeoutInSeconds: pulumi.Output<number | undefined>;
    /**
     * The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
     */
    readonly type: pulumi.Output<string>;
    /**
     * Create a MachineRunCommand resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: MachineRunCommandArgs, opts?: pulumi.CustomResourceOptions);
}
/**
 * The set of arguments for constructing a MachineRunCommand resource.
 */
export interface MachineRunCommandArgs {
    /**
     * Optional. If set to true, provisioning will complete as soon as script starts and will not wait for script to complete.
     */
    asyncExecution?: pulumi.Input<boolean>;
    /**
     * User-assigned managed identity that has access to errorBlobUri storage blob. Use an empty object in case of system-assigned identity. Make sure managed identity has been given access to blob's container with 'Storage Blob Data Contributor' role assignment. In case of user-assigned identity, make sure you add it under VM's identity. For more info on managed identity and Run Command, refer https://aka.ms/ManagedIdentity and https://aka.ms/RunCommandManaged
     */
    errorBlobManagedIdentity?: pulumi.Input<inputs.hybridcompute.v20231003preview.RunCommandManagedIdentityArgs>;
    /**
     * Specifies the Azure storage blob where script error stream will be uploaded. Use a SAS URI with read, append, create, write access OR use managed identity to provide the VM access to the blob. Refer errorBlobManagedIdentity parameter.
     */
    errorBlobUri?: pulumi.Input<string>;
    /**
     * The geo-location where the resource lives
     */
    location?: pulumi.Input<string>;
    /**
     * The name of the hybrid machine.
     */
    machineName: pulumi.Input<string>;
    /**
     * User-assigned managed identity that has access to outputBlobUri storage blob. Use an empty object in case of system-assigned identity. Make sure managed identity has been given access to blob's container with 'Storage Blob Data Contributor' role assignment. In case of user-assigned identity, make sure you add it under VM's identity. For more info on managed identity and Run Command, refer https://aka.ms/ManagedIdentity and https://aka.ms/RunCommandManaged
     */
    outputBlobManagedIdentity?: pulumi.Input<inputs.hybridcompute.v20231003preview.RunCommandManagedIdentityArgs>;
    /**
     * Specifies the Azure storage blob where script output stream will be uploaded. Use a SAS URI with read, append, create, write access OR use managed identity to provide the VM access to the blob. Refer outputBlobManagedIdentity parameter.
     */
    outputBlobUri?: pulumi.Input<string>;
    /**
     * The parameters used by the script.
     */
    parameters?: pulumi.Input<pulumi.Input<inputs.hybridcompute.v20231003preview.RunCommandInputParameterArgs>[]>;
    /**
     * The parameters used by the script.
     */
    protectedParameters?: pulumi.Input<pulumi.Input<inputs.hybridcompute.v20231003preview.RunCommandInputParameterArgs>[]>;
    /**
     * The name of the resource group. The name is case insensitive.
     */
    resourceGroupName: pulumi.Input<string>;
    /**
     * Specifies the user account password on the machine when executing the run command.
     */
    runAsPassword?: pulumi.Input<string>;
    /**
     * Specifies the user account on the machine when executing the run command.
     */
    runAsUser?: pulumi.Input<string>;
    /**
     * The name of the run command.
     */
    runCommandName?: pulumi.Input<string>;
    /**
     * The source of the run command script.
     */
    source?: pulumi.Input<inputs.hybridcompute.v20231003preview.MachineRunCommandScriptSourceArgs>;
    /**
     * Resource tags.
     */
    tags?: pulumi.Input<{
        [key: string]: pulumi.Input<string>;
    }>;
    /**
     * The timeout in seconds to execute the run command.
     */
    timeoutInSeconds?: pulumi.Input<number>;
}
