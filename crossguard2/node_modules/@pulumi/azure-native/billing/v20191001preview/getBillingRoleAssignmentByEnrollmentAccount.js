"use strict";
// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***
Object.defineProperty(exports, "__esModule", { value: true });
exports.getBillingRoleAssignmentByEnrollmentAccountOutput = exports.getBillingRoleAssignmentByEnrollmentAccount = void 0;
const pulumi = require("@pulumi/pulumi");
const utilities = require("../../utilities");
/**
 * Gets a role assignment for the caller on a enrollment Account. The operation is supported only for billing accounts with agreement type Enterprise Agreement.
 */
function getBillingRoleAssignmentByEnrollmentAccount(args, opts) {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("azure-native:billing/v20191001preview:getBillingRoleAssignmentByEnrollmentAccount", {
        "billingAccountName": args.billingAccountName,
        "billingRoleAssignmentName": args.billingRoleAssignmentName,
        "enrollmentAccountName": args.enrollmentAccountName,
    }, opts);
}
exports.getBillingRoleAssignmentByEnrollmentAccount = getBillingRoleAssignmentByEnrollmentAccount;
/**
 * Gets a role assignment for the caller on a enrollment Account. The operation is supported only for billing accounts with agreement type Enterprise Agreement.
 */
function getBillingRoleAssignmentByEnrollmentAccountOutput(args, opts) {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invokeOutput("azure-native:billing/v20191001preview:getBillingRoleAssignmentByEnrollmentAccount", {
        "billingAccountName": args.billingAccountName,
        "billingRoleAssignmentName": args.billingRoleAssignmentName,
        "enrollmentAccountName": args.enrollmentAccountName,
    }, opts);
}
exports.getBillingRoleAssignmentByEnrollmentAccountOutput = getBillingRoleAssignmentByEnrollmentAccountOutput;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZ2V0QmlsbGluZ1JvbGVBc3NpZ25tZW50QnlFbnJvbGxtZW50QWNjb3VudC5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uL2JpbGxpbmcvdjIwMTkxMDAxcHJldmlldy9nZXRCaWxsaW5nUm9sZUFzc2lnbm1lbnRCeUVucm9sbG1lbnRBY2NvdW50LnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7QUFBQSxzRUFBc0U7QUFDdEUsaUZBQWlGOzs7QUFFakYseUNBQXlDO0FBQ3pDLDZDQUE2QztBQUU3Qzs7R0FFRztBQUNILFNBQWdCLDJDQUEyQyxDQUFDLElBQXFELEVBQUUsSUFBMkI7SUFDMUksSUFBSSxHQUFHLE1BQU0sQ0FBQyxZQUFZLENBQUMsU0FBUyxDQUFDLG9CQUFvQixFQUFFLEVBQUUsSUFBSSxJQUFJLEVBQUUsQ0FBQyxDQUFDO0lBQ3pFLE9BQU8sTUFBTSxDQUFDLE9BQU8sQ0FBQyxNQUFNLENBQUMsbUZBQW1GLEVBQUU7UUFDOUcsb0JBQW9CLEVBQUUsSUFBSSxDQUFDLGtCQUFrQjtRQUM3QywyQkFBMkIsRUFBRSxJQUFJLENBQUMseUJBQXlCO1FBQzNELHVCQUF1QixFQUFFLElBQUksQ0FBQyxxQkFBcUI7S0FDdEQsRUFBRSxJQUFJLENBQUMsQ0FBQztBQUNiLENBQUM7QUFQRCxrR0FPQztBQTBFRDs7R0FFRztBQUNILFNBQWdCLGlEQUFpRCxDQUFDLElBQTJELEVBQUUsSUFBaUM7SUFDNUosSUFBSSxHQUFHLE1BQU0sQ0FBQyxZQUFZLENBQUMsU0FBUyxDQUFDLG9CQUFvQixFQUFFLEVBQUUsSUFBSSxJQUFJLEVBQUUsQ0FBQyxDQUFDO0lBQ3pFLE9BQU8sTUFBTSxDQUFDLE9BQU8sQ0FBQyxZQUFZLENBQUMsbUZBQW1GLEVBQUU7UUFDcEgsb0JBQW9CLEVBQUUsSUFBSSxDQUFDLGtCQUFrQjtRQUM3QywyQkFBMkIsRUFBRSxJQUFJLENBQUMseUJBQXlCO1FBQzNELHVCQUF1QixFQUFFLElBQUksQ0FBQyxxQkFBcUI7S0FDdEQsRUFBRSxJQUFJLENBQUMsQ0FBQztBQUNiLENBQUM7QUFQRCw4R0FPQyJ9