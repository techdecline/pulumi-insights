import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
/**
 * Azure REST API version: 2022-01-01-preview. Prior API version in Azure Native 1.x: 2022-01-01-preview.
 */
export declare class MetricsSource extends pulumi.CustomResource {
    /**
     * Get an existing MetricsSource resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    static get(name: string, id: pulumi.Input<pulumi.ID>, opts?: pulumi.CustomResourceOptions): MetricsSource;
    /**
     * Returns true if the given object is an instance of MetricsSource.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    static isInstance(obj: any): obj is MetricsSource;
    readonly identity: pulumi.Output<outputs.logz.IdentityPropertiesResponse | undefined>;
    readonly location: pulumi.Output<string>;
    /**
     * Name of the monitor resource.
     */
    readonly name: pulumi.Output<string>;
    /**
     * Properties specific to the monitor resource.
     */
    readonly properties: pulumi.Output<outputs.logz.MonitorPropertiesResponse>;
    /**
     * The system metadata relating to this resource
     */
    readonly systemData: pulumi.Output<outputs.logz.SystemDataResponse>;
    readonly tags: pulumi.Output<{
        [key: string]: string;
    } | undefined>;
    /**
     * The type of the monitor resource.
     */
    readonly type: pulumi.Output<string>;
    /**
     * Create a MetricsSource resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: MetricsSourceArgs, opts?: pulumi.CustomResourceOptions);
}
/**
 * The set of arguments for constructing a MetricsSource resource.
 */
export interface MetricsSourceArgs {
    identity?: pulumi.Input<inputs.logz.IdentityPropertiesArgs>;
    location?: pulumi.Input<string>;
    /**
     * Metrics Account resource name
     */
    metricsSourceName?: pulumi.Input<string>;
    /**
     * Monitor resource name
     */
    monitorName: pulumi.Input<string>;
    /**
     * Properties specific to the monitor resource.
     */
    properties?: pulumi.Input<inputs.logz.MonitorPropertiesArgs>;
    /**
     * The name of the resource group. The name is case insensitive.
     */
    resourceGroupName: pulumi.Input<string>;
    tags?: pulumi.Input<{
        [key: string]: pulumi.Input<string>;
    }>;
}
