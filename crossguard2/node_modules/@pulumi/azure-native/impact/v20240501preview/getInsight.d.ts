import * as pulumi from "@pulumi/pulumi";
import * as outputs from "../../types/output";
/**
 * Get Insight resources by workloadImpactName and insightName
 */
export declare function getInsight(args: GetInsightArgs, opts?: pulumi.InvokeOptions): Promise<GetInsightResult>;
export interface GetInsightArgs {
    /**
     * Name of the insight
     */
    insightName: string;
    /**
     * workloadImpact resource
     */
    workloadImpactName: string;
}
/**
 * Insight resource
 */
export interface GetInsightResult {
    /**
     * Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
     */
    readonly id: string;
    /**
     * The name of the resource
     */
    readonly name: string;
    /**
     * The resource-specific properties for this resource.
     */
    readonly properties: outputs.impact.v20240501preview.InsightPropertiesResponse;
    /**
     * Azure Resource Manager metadata containing createdBy and modifiedBy information.
     */
    readonly systemData: outputs.impact.v20240501preview.SystemDataResponse;
    /**
     * The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
     */
    readonly type: string;
}
/**
 * Get Insight resources by workloadImpactName and insightName
 */
export declare function getInsightOutput(args: GetInsightOutputArgs, opts?: pulumi.InvokeOutputOptions): pulumi.Output<GetInsightResult>;
export interface GetInsightOutputArgs {
    /**
     * Name of the insight
     */
    insightName: pulumi.Input<string>;
    /**
     * workloadImpact resource
     */
    workloadImpactName: pulumi.Input<string>;
}
