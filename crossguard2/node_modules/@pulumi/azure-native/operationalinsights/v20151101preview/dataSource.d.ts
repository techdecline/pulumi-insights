import * as pulumi from "@pulumi/pulumi";
import * as enums from "../../types/enums";
/**
 * Datasources under OMS Workspace.
 */
export declare class DataSource extends pulumi.CustomResource {
    /**
     * Get an existing DataSource resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    static get(name: string, id: pulumi.Input<pulumi.ID>, opts?: pulumi.CustomResourceOptions): DataSource;
    /**
     * Returns true if the given object is an instance of DataSource.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    static isInstance(obj: any): obj is DataSource;
    /**
     * The ETag of the data source.
     */
    readonly eTag: pulumi.Output<string | undefined>;
    /**
     * The kind of the DataSource.
     */
    readonly kind: pulumi.Output<string>;
    /**
     * Resource name.
     */
    readonly name: pulumi.Output<string>;
    /**
     * The data source properties in raw json format, each kind of data source have it's own schema.
     */
    readonly properties: pulumi.Output<any>;
    /**
     * Resource tags
     */
    readonly tags: pulumi.Output<{
        [key: string]: string;
    } | undefined>;
    /**
     * Resource type.
     */
    readonly type: pulumi.Output<string>;
    /**
     * Create a DataSource resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: DataSourceArgs, opts?: pulumi.CustomResourceOptions);
}
/**
 * The set of arguments for constructing a DataSource resource.
 */
export interface DataSourceArgs {
    /**
     * The name of the datasource resource.
     */
    dataSourceName?: pulumi.Input<string>;
    /**
     * The ETag of the data source.
     */
    eTag?: pulumi.Input<string>;
    /**
     * The kind of the DataSource.
     */
    kind: pulumi.Input<string | enums.operationalinsights.v20151101preview.DataSourceKind>;
    /**
     * The data source properties in raw json format, each kind of data source have it's own schema.
     */
    properties: any;
    /**
     * The name of the resource group to get. The name is case insensitive.
     */
    resourceGroupName: pulumi.Input<string>;
    /**
     * Resource tags
     */
    tags?: pulumi.Input<{
        [key: string]: pulumi.Input<string>;
    }>;
    /**
     * Name of the Log Analytics Workspace that will contain the datasource
     */
    workspaceName: pulumi.Input<string>;
}
