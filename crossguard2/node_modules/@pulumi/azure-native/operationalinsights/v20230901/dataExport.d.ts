import * as pulumi from "@pulumi/pulumi";
/**
 * The top level data export resource container.
 */
export declare class DataExport extends pulumi.CustomResource {
    /**
     * Get an existing DataExport resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    static get(name: string, id: pulumi.Input<pulumi.ID>, opts?: pulumi.CustomResourceOptions): DataExport;
    /**
     * Returns true if the given object is an instance of DataExport.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    static isInstance(obj: any): obj is DataExport;
    /**
     * The latest data export rule modification time.
     */
    readonly createdDate: pulumi.Output<string | undefined>;
    /**
     * The data export rule ID.
     */
    readonly dataExportId: pulumi.Output<string | undefined>;
    /**
     * Active when enabled.
     */
    readonly enable: pulumi.Output<boolean | undefined>;
    /**
     * Optional. Allows to define an Event Hub name. Not applicable when destination is Storage Account.
     */
    readonly eventHubName: pulumi.Output<string | undefined>;
    /**
     * Date and time when the export was last modified.
     */
    readonly lastModifiedDate: pulumi.Output<string | undefined>;
    /**
     * The name of the resource
     */
    readonly name: pulumi.Output<string>;
    /**
     * The destination resource ID. This can be copied from the Properties entry of the destination resource in Azure.
     */
    readonly resourceId: pulumi.Output<string>;
    /**
     * An array of tables to export, for example: [“Heartbeat, SecurityEvent”].
     */
    readonly tableNames: pulumi.Output<string[]>;
    /**
     * The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
     */
    readonly type: pulumi.Output<string>;
    /**
     * Create a DataExport resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: DataExportArgs, opts?: pulumi.CustomResourceOptions);
}
/**
 * The set of arguments for constructing a DataExport resource.
 */
export interface DataExportArgs {
    /**
     * The latest data export rule modification time.
     */
    createdDate?: pulumi.Input<string>;
    /**
     * The data export rule ID.
     */
    dataExportId?: pulumi.Input<string>;
    /**
     * The data export rule name.
     */
    dataExportName?: pulumi.Input<string>;
    /**
     * Active when enabled.
     */
    enable?: pulumi.Input<boolean>;
    /**
     * Optional. Allows to define an Event Hub name. Not applicable when destination is Storage Account.
     */
    eventHubName?: pulumi.Input<string>;
    /**
     * Date and time when the export was last modified.
     */
    lastModifiedDate?: pulumi.Input<string>;
    /**
     * The name of the resource group. The name is case insensitive.
     */
    resourceGroupName: pulumi.Input<string>;
    /**
     * The destination resource ID. This can be copied from the Properties entry of the destination resource in Azure.
     */
    resourceId: pulumi.Input<string>;
    /**
     * An array of tables to export, for example: [“Heartbeat, SecurityEvent”].
     */
    tableNames: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The name of the workspace.
     */
    workspaceName: pulumi.Input<string>;
}
