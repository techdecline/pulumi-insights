import * as pulumi from "@pulumi/pulumi";
import * as outputs from "../../types/output";
/**
 * Gets the Hybrid AKS provisioned cluster
 */
export declare function getProvisionedCluster(args: GetProvisionedClusterArgs, opts?: pulumi.InvokeOptions): Promise<GetProvisionedClusterResult>;
export interface GetProvisionedClusterArgs {
    /**
     * Parameter for the name of the provisioned cluster
     */
    provisionedClustersName: string;
    /**
     * The name of the resource group. The name is case insensitive.
     */
    resourceGroupName: string;
}
/**
 * The provisionedClusters resource definition.
 */
export interface GetProvisionedClusterResult {
    readonly extendedLocation?: outputs.hybridcontainerservice.v20220501preview.ProvisionedClustersResponseResponseExtendedLocation;
    /**
     * Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
     */
    readonly id: string;
    /**
     * Identity for the Provisioned cluster.
     */
    readonly identity?: outputs.hybridcontainerservice.v20220501preview.ProvisionedClusterIdentityResponse;
    /**
     * The geo-location where the resource lives
     */
    readonly location: string;
    /**
     * The name of the resource
     */
    readonly name: string;
    readonly properties: outputs.hybridcontainerservice.v20220501preview.ProvisionedClustersResponsePropertiesResponse;
    /**
     * Metadata pertaining to creation and last modification of the resource.
     */
    readonly systemData: outputs.hybridcontainerservice.v20220501preview.SystemDataResponse;
    /**
     * Resource tags.
     */
    readonly tags?: {
        [key: string]: string;
    };
    /**
     * The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
     */
    readonly type: string;
}
/**
 * Gets the Hybrid AKS provisioned cluster
 */
export declare function getProvisionedClusterOutput(args: GetProvisionedClusterOutputArgs, opts?: pulumi.InvokeOutputOptions): pulumi.Output<GetProvisionedClusterResult>;
export interface GetProvisionedClusterOutputArgs {
    /**
     * Parameter for the name of the provisioned cluster
     */
    provisionedClustersName: pulumi.Input<string>;
    /**
     * The name of the resource group. The name is case insensitive.
     */
    resourceGroupName: pulumi.Input<string>;
}
