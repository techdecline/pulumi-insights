"use strict";
// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __exportStar = (this && this.__exportStar) || function(m, exports) {
    for (var p in m) if (p !== "default" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.VMSkus = exports.VirtualNetworkRetrieve = exports.ProvisionedClusterInstance = exports.listprovisionedClusterInstanceUserKubeconfigOutput = exports.listprovisionedClusterInstanceUserKubeconfig = exports.listprovisionedClusterInstanceAdminKubeconfigOutput = exports.listprovisionedClusterInstanceAdminKubeconfig = exports.KubernetesVersions = exports.HybridIdentityMetadatum = exports.getVirtualNetworkRetrieveOutput = exports.getVirtualNetworkRetrieve = exports.getVMSkusOutput = exports.getVMSkus = exports.getProvisionedClusterInstanceOutput = exports.getProvisionedClusterInstance = exports.getKubernetesVersionsOutput = exports.getKubernetesVersions = exports.getHybridIdentityMetadatumOutput = exports.getHybridIdentityMetadatum = exports.getAgentPoolOutput = exports.getAgentPool = exports.AgentPool = void 0;
const pulumi = require("@pulumi/pulumi");
const utilities = require("../../utilities");
exports.AgentPool = null;
utilities.lazyLoad(exports, ["AgentPool"], () => require("./agentPool"));
exports.getAgentPool = null;
exports.getAgentPoolOutput = null;
utilities.lazyLoad(exports, ["getAgentPool", "getAgentPoolOutput"], () => require("./getAgentPool"));
exports.getHybridIdentityMetadatum = null;
exports.getHybridIdentityMetadatumOutput = null;
utilities.lazyLoad(exports, ["getHybridIdentityMetadatum", "getHybridIdentityMetadatumOutput"], () => require("./getHybridIdentityMetadatum"));
exports.getKubernetesVersions = null;
exports.getKubernetesVersionsOutput = null;
utilities.lazyLoad(exports, ["getKubernetesVersions", "getKubernetesVersionsOutput"], () => require("./getKubernetesVersions"));
exports.getProvisionedClusterInstance = null;
exports.getProvisionedClusterInstanceOutput = null;
utilities.lazyLoad(exports, ["getProvisionedClusterInstance", "getProvisionedClusterInstanceOutput"], () => require("./getProvisionedClusterInstance"));
exports.getVMSkus = null;
exports.getVMSkusOutput = null;
utilities.lazyLoad(exports, ["getVMSkus", "getVMSkusOutput"], () => require("./getVMSkus"));
exports.getVirtualNetworkRetrieve = null;
exports.getVirtualNetworkRetrieveOutput = null;
utilities.lazyLoad(exports, ["getVirtualNetworkRetrieve", "getVirtualNetworkRetrieveOutput"], () => require("./getVirtualNetworkRetrieve"));
exports.HybridIdentityMetadatum = null;
utilities.lazyLoad(exports, ["HybridIdentityMetadatum"], () => require("./hybridIdentityMetadatum"));
exports.KubernetesVersions = null;
utilities.lazyLoad(exports, ["KubernetesVersions"], () => require("./kubernetesVersions"));
exports.listprovisionedClusterInstanceAdminKubeconfig = null;
exports.listprovisionedClusterInstanceAdminKubeconfigOutput = null;
utilities.lazyLoad(exports, ["listprovisionedClusterInstanceAdminKubeconfig", "listprovisionedClusterInstanceAdminKubeconfigOutput"], () => require("./listprovisionedClusterInstanceAdminKubeconfig"));
exports.listprovisionedClusterInstanceUserKubeconfig = null;
exports.listprovisionedClusterInstanceUserKubeconfigOutput = null;
utilities.lazyLoad(exports, ["listprovisionedClusterInstanceUserKubeconfig", "listprovisionedClusterInstanceUserKubeconfigOutput"], () => require("./listprovisionedClusterInstanceUserKubeconfig"));
exports.ProvisionedClusterInstance = null;
utilities.lazyLoad(exports, ["ProvisionedClusterInstance"], () => require("./provisionedClusterInstance"));
exports.VirtualNetworkRetrieve = null;
utilities.lazyLoad(exports, ["VirtualNetworkRetrieve"], () => require("./virtualNetworkRetrieve"));
exports.VMSkus = null;
utilities.lazyLoad(exports, ["VMSkus"], () => require("./vmskus"));
// Export enums:
__exportStar(require("../../types/enums/hybridcontainerservice/v20240101"), exports);
const _module = {
    version: utilities.getVersion(),
    construct: (name, type, urn) => {
        switch (type) {
            case "azure-native:hybridcontainerservice/v20240101:AgentPool":
                return new exports.AgentPool(name, undefined, { urn });
            case "azure-native:hybridcontainerservice/v20240101:HybridIdentityMetadatum":
                return new exports.HybridIdentityMetadatum(name, undefined, { urn });
            case "azure-native:hybridcontainerservice/v20240101:KubernetesVersions":
                return new exports.KubernetesVersions(name, undefined, { urn });
            case "azure-native:hybridcontainerservice/v20240101:ProvisionedClusterInstance":
                return new exports.ProvisionedClusterInstance(name, undefined, { urn });
            case "azure-native:hybridcontainerservice/v20240101:VMSkus":
                return new exports.VMSkus(name, undefined, { urn });
            case "azure-native:hybridcontainerservice/v20240101:VirtualNetworkRetrieve":
                return new exports.VirtualNetworkRetrieve(name, undefined, { urn });
            default:
                throw new Error(`unknown resource type ${type}`);
        }
    },
};
pulumi.runtime.registerResourceModule("azure-native", "hybridcontainerservice/v20240101", _module);
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaW5kZXguanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi9oeWJyaWRjb250YWluZXJzZXJ2aWNlL3YyMDI0MDEwMS9pbmRleC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiO0FBQUEsc0VBQXNFO0FBQ3RFLGlGQUFpRjs7Ozs7Ozs7Ozs7Ozs7Ozs7QUFFakYseUNBQXlDO0FBQ3pDLDZDQUE2QztBQUtoQyxRQUFBLFNBQVMsR0FBMkMsSUFBVyxDQUFDO0FBQzdFLFNBQVMsQ0FBQyxRQUFRLENBQUMsT0FBTyxFQUFFLENBQUMsV0FBVyxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsT0FBTyxDQUFDLGFBQWEsQ0FBQyxDQUFDLENBQUM7QUFHNUQsUUFBQSxZQUFZLEdBQWlELElBQVcsQ0FBQztBQUN6RSxRQUFBLGtCQUFrQixHQUF1RCxJQUFXLENBQUM7QUFDbEcsU0FBUyxDQUFDLFFBQVEsQ0FBQyxPQUFPLEVBQUUsQ0FBQyxjQUFjLEVBQUMsb0JBQW9CLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxPQUFPLENBQUMsZ0JBQWdCLENBQUMsQ0FBQyxDQUFDO0FBR3ZGLFFBQUEsMEJBQTBCLEdBQTZFLElBQVcsQ0FBQztBQUNuSCxRQUFBLGdDQUFnQyxHQUFtRixJQUFXLENBQUM7QUFDNUksU0FBUyxDQUFDLFFBQVEsQ0FBQyxPQUFPLEVBQUUsQ0FBQyw0QkFBNEIsRUFBQyxrQ0FBa0MsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLE9BQU8sQ0FBQyw4QkFBOEIsQ0FBQyxDQUFDLENBQUM7QUFHakksUUFBQSxxQkFBcUIsR0FBbUUsSUFBVyxDQUFDO0FBQ3BHLFFBQUEsMkJBQTJCLEdBQXlFLElBQVcsQ0FBQztBQUM3SCxTQUFTLENBQUMsUUFBUSxDQUFDLE9BQU8sRUFBRSxDQUFDLHVCQUF1QixFQUFDLDZCQUE2QixDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsT0FBTyxDQUFDLHlCQUF5QixDQUFDLENBQUMsQ0FBQztBQUdsSCxRQUFBLDZC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