import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../../types/input";
import * as outputs from "../../types/output";
import * as enums from "../../types/enums";
/**
 * The agentPool resource definition
 */
export declare class AgentPool extends pulumi.CustomResource {
    /**
     * Get an existing AgentPool resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    static get(name: string, id: pulumi.Input<pulumi.ID>, opts?: pulumi.CustomResourceOptions): AgentPool;
    /**
     * Returns true if the given object is an instance of AgentPool.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    static isInstance(obj: any): obj is AgentPool;
    /**
     * AvailabilityZones - The list of Availability zones to use for nodes. Datacenter racks modelled as zones
     */
    readonly availabilityZones: pulumi.Output<string[] | undefined>;
    /**
     * Count - Number of agents to host docker containers. Allowed values must be in the range of 1 to 100 (inclusive). The default value is 1.
     */
    readonly count: pulumi.Output<number | undefined>;
    /**
     * Extended Location definition
     */
    readonly extendedLocation: pulumi.Output<outputs.hybridcontainerservice.v20231115preview.ExtendedLocationResponse | undefined>;
    /**
     * The resource location
     */
    readonly location: pulumi.Output<string | undefined>;
    /**
     * Resource Name
     */
    readonly name: pulumi.Output<string>;
    /**
     * The version of node image
     */
    readonly nodeImageVersion: pulumi.Output<string | undefined>;
    /**
     * Specifies the OS SKU used by the agent pool. The default is CBLMariner if OSType is Linux. The default is Windows2019 when OSType is Windows.
     */
    readonly osSKU: pulumi.Output<string | undefined>;
    /**
     * OsType - OsType to be used to specify os type. Choose from Linux and Windows. Default to Linux. Possible values include: 'Linux', 'Windows'
     */
    readonly osType: pulumi.Output<string | undefined>;
    /**
     * Provisioning state of the resource
     */
    readonly provisioningState: pulumi.Output<string>;
    /**
     * Defines the observed state of the agent pool
     */
    readonly status: pulumi.Output<outputs.hybridcontainerservice.v20231115preview.AgentPoolProvisioningStatusResponseStatus | undefined>;
    /**
     * Metadata pertaining to creation and last modification of the resource.
     */
    readonly systemData: pulumi.Output<outputs.hybridcontainerservice.v20231115preview.SystemDataResponse>;
    /**
     * Resource tags
     */
    readonly tags: pulumi.Output<{
        [key: string]: string;
    } | undefined>;
    /**
     * Resource Type
     */
    readonly type: pulumi.Output<string>;
    /**
     * VmSize - The size of the agent pool VMs.
     */
    readonly vmSize: pulumi.Output<string | undefined>;
    /**
     * Create a AgentPool resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: AgentPoolArgs, opts?: pulumi.CustomResourceOptions);
}
/**
 * The set of arguments for constructing a AgentPool resource.
 */
export interface AgentPoolArgs {
    /**
     * Parameter for the name of the agent pool in the provisioned cluster
     */
    agentPoolName?: pulumi.Input<string>;
    /**
     * AvailabilityZones - The list of Availability zones to use for nodes. Datacenter racks modelled as zones
     */
    availabilityZones?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The fully qualified Azure Resource manager identifier of the connected cluster resource.
     */
    connectedClusterResourceUri: pulumi.Input<string>;
    /**
     * Count - Number of agents to host docker containers. Allowed values must be in the range of 1 to 100 (inclusive). The default value is 1.
     */
    count?: pulumi.Input<number>;
    /**
     * Extended Location definition
     */
    extendedLocation?: pulumi.Input<inputs.hybridcontainerservice.v20231115preview.ExtendedLocationArgs>;
    /**
     * The resource location
     */
    location?: pulumi.Input<string>;
    /**
     * The version of node image
     */
    nodeImageVersion?: pulumi.Input<string>;
    /**
     * Specifies the OS SKU used by the agent pool. The default is CBLMariner if OSType is Linux. The default is Windows2019 when OSType is Windows.
     */
    osSKU?: pulumi.Input<string | enums.hybridcontainerservice.v20231115preview.OSSKU>;
    /**
     * OsType - OsType to be used to specify os type. Choose from Linux and Windows. Default to Linux. Possible values include: 'Linux', 'Windows'
     */
    osType?: pulumi.Input<string | enums.hybridcontainerservice.v20231115preview.OsType>;
    /**
     * Defines the observed state of the agent pool
     */
    status?: pulumi.Input<inputs.hybridcontainerservice.v20231115preview.AgentPoolProvisioningStatusStatusArgs>;
    /**
     * Resource tags
     */
    tags?: pulumi.Input<{
        [key: string]: pulumi.Input<string>;
    }>;
    /**
     * VmSize - The size of the agent pool VMs.
     */
    vmSize?: pulumi.Input<string>;
}
