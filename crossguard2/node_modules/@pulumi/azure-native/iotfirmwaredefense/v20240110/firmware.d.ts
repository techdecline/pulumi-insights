import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../../types/input";
import * as outputs from "../../types/output";
import * as enums from "../../types/enums";
/**
 * Firmware definition
 */
export declare class Firmware extends pulumi.CustomResource {
    /**
     * Get an existing Firmware resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    static get(name: string, id: pulumi.Input<pulumi.ID>, opts?: pulumi.CustomResourceOptions): Firmware;
    /**
     * Returns true if the given object is an instance of Firmware.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    static isInstance(obj: any): obj is Firmware;
    /**
     * User-specified description of the firmware.
     */
    readonly description: pulumi.Output<string | undefined>;
    /**
     * File name for a firmware that user uploaded.
     */
    readonly fileName: pulumi.Output<string | undefined>;
    /**
     * File size of the uploaded firmware image.
     */
    readonly fileSize: pulumi.Output<number | undefined>;
    /**
     * Firmware model.
     */
    readonly model: pulumi.Output<string | undefined>;
    /**
     * The name of the resource
     */
    readonly name: pulumi.Output<string>;
    /**
     * Provisioning state of the resource.
     */
    readonly provisioningState: pulumi.Output<string>;
    /**
     * The status of firmware scan.
     */
    readonly status: pulumi.Output<string | undefined>;
    /**
     * A list of errors or other messages generated during firmware analysis
     */
    readonly statusMessages: pulumi.Output<outputs.iotfirmwaredefense.v20240110.StatusMessageResponse[] | undefined>;
    /**
     * Azure Resource Manager metadata containing createdBy and modifiedBy information.
     */
    readonly systemData: pulumi.Output<outputs.iotfirmwaredefense.v20240110.SystemDataResponse>;
    /**
     * The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
     */
    readonly type: pulumi.Output<string>;
    /**
     * Firmware vendor.
     */
    readonly vendor: pulumi.Output<string | undefined>;
    /**
     * Firmware version.
     */
    readonly version: pulumi.Output<string | undefined>;
    /**
     * Create a Firmware resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: FirmwareArgs, opts?: pulumi.CustomResourceOptions);
}
/**
 * The set of arguments for constructing a Firmware resource.
 */
export interface FirmwareArgs {
    /**
     * User-specified description of the firmware.
     */
    description?: pulumi.Input<string>;
    /**
     * File name for a firmware that user uploaded.
     */
    fileName?: pulumi.Input<string>;
    /**
     * File size of the uploaded firmware image.
     */
    fileSize?: pulumi.Input<number>;
    /**
     * The id of the firmware.
     */
    firmwareId?: pulumi.Input<string>;
    /**
     * Firmware model.
     */
    model?: pulumi.Input<string>;
    /**
     * The name of the resource group. The name is case insensitive.
     */
    resourceGroupName: pulumi.Input<string>;
    /**
     * The status of firmware scan.
     */
    status?: pulumi.Input<string | enums.iotfirmwaredefense.v20240110.Status>;
    /**
     * A list of errors or other messages generated during firmware analysis
     */
    statusMessages?: pulumi.Input<pulumi.Input<inputs.iotfirmwaredefense.v20240110.StatusMessageArgs>[]>;
    /**
     * Firmware vendor.
     */
    vendor?: pulumi.Input<string>;
    /**
     * Firmware version.
     */
    version?: pulumi.Input<string>;
    /**
     * The name of the firmware analysis workspace.
     */
    workspaceName: pulumi.Input<string>;
}
