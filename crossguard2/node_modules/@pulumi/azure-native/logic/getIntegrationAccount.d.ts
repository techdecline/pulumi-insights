import * as pulumi from "@pulumi/pulumi";
import * as outputs from "../types/output";
/**
 * Gets an integration account.
 * Azure REST API version: 2019-05-01.
 *
 * Other available API versions: 2015-08-01-preview.
 */
export declare function getIntegrationAccount(args: GetIntegrationAccountArgs, opts?: pulumi.InvokeOptions): Promise<GetIntegrationAccountResult>;
export interface GetIntegrationAccountArgs {
    /**
     * The integration account name.
     */
    integrationAccountName: string;
    /**
     * The resource group name.
     */
    resourceGroupName: string;
}
/**
 * The integration account.
 */
export interface GetIntegrationAccountResult {
    /**
     * The resource id.
     */
    readonly id: string;
    /**
     * The integration service environment.
     */
    readonly integrationServiceEnvironment?: outputs.logic.ResourceReferenceResponse;
    /**
     * The resource location.
     */
    readonly location?: string;
    /**
     * Gets the resource name.
     */
    readonly name: string;
    /**
     * The sku.
     */
    readonly sku?: outputs.logic.IntegrationAccountSkuResponse;
    /**
     * The workflow state.
     */
    readonly state?: string;
    /**
     * The resource tags.
     */
    readonly tags?: {
        [key: string]: string;
    };
    /**
     * Gets the resource type.
     */
    readonly type: string;
}
/**
 * Gets an integration account.
 * Azure REST API version: 2019-05-01.
 *
 * Other available API versions: 2015-08-01-preview.
 */
export declare function getIntegrationAccountOutput(args: GetIntegrationAccountOutputArgs, opts?: pulumi.InvokeOutputOptions): pulumi.Output<GetIntegrationAccountResult>;
export interface GetIntegrationAccountOutputArgs {
    /**
     * The integration account name.
     */
    integrationAccountName: pulumi.Input<string>;
    /**
     * The resource group name.
     */
    resourceGroupName: pulumi.Input<string>;
}
