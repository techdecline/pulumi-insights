import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as enums from "../types/enums";
/**
 * The integration account agreement.
 * Azure REST API version: 2019-05-01. Prior API version in Azure Native 1.x: 2019-05-01.
 *
 * Other available API versions: 2015-08-01-preview.
 */
export declare class IntegrationAccountAgreement extends pulumi.CustomResource {
    /**
     * Get an existing IntegrationAccountAgreement resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    static get(name: string, id: pulumi.Input<pulumi.ID>, opts?: pulumi.CustomResourceOptions): IntegrationAccountAgreement;
    /**
     * Returns true if the given object is an instance of IntegrationAccountAgreement.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    static isInstance(obj: any): obj is IntegrationAccountAgreement;
    /**
     * The agreement type.
     */
    readonly agreementType: pulumi.Output<string>;
    /**
     * The changed time.
     */
    readonly changedTime: pulumi.Output<string>;
    /**
     * The agreement content.
     */
    readonly content: pulumi.Output<outputs.logic.AgreementContentResponse>;
    /**
     * The created time.
     */
    readonly createdTime: pulumi.Output<string>;
    /**
     * The business identity of the guest partner.
     */
    readonly guestIdentity: pulumi.Output<outputs.logic.BusinessIdentityResponse>;
    /**
     * The integration account partner that is set as guest partner for this agreement.
     */
    readonly guestPartner: pulumi.Output<string>;
    /**
     * The business identity of the host partner.
     */
    readonly hostIdentity: pulumi.Output<outputs.logic.BusinessIdentityResponse>;
    /**
     * The integration account partner that is set as host partner for this agreement.
     */
    readonly hostPartner: pulumi.Output<string>;
    /**
     * The resource location.
     */
    readonly location: pulumi.Output<string | undefined>;
    /**
     * The metadata.
     */
    readonly metadata: pulumi.Output<any | undefined>;
    /**
     * Gets the resource name.
     */
    readonly name: pulumi.Output<string>;
    /**
     * The resource tags.
     */
    readonly tags: pulumi.Output<{
        [key: string]: string;
    } | undefined>;
    /**
     * Gets the resource type.
     */
    readonly type: pulumi.Output<string>;
    /**
     * Create a IntegrationAccountAgreement resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: IntegrationAccountAgreementArgs, opts?: pulumi.CustomResourceOptions);
}
/**
 * The set of arguments for constructing a IntegrationAccountAgreement resource.
 */
export interface IntegrationAccountAgreementArgs {
    /**
     * The integration account agreement name.
     */
    agreementName?: pulumi.Input<string>;
    /**
     * The agreement type.
     */
    agreementType: pulumi.Input<enums.logic.AgreementType>;
    /**
     * The agreement content.
     */
    content: pulumi.Input<inputs.logic.AgreementContentArgs>;
    /**
     * The business identity of the guest partner.
     */
    guestIdentity: pulumi.Input<inputs.logic.BusinessIdentityArgs>;
    /**
     * The integration account partner that is set as guest partner for this agreement.
     */
    guestPartner: pulumi.Input<string>;
    /**
     * The business identity of the host partner.
     */
    hostIdentity: pulumi.Input<inputs.logic.BusinessIdentityArgs>;
    /**
     * The integration account partner that is set as host partner for this agreement.
     */
    hostPartner: pulumi.Input<string>;
    /**
     * The integration account name.
     */
    integrationAccountName: pulumi.Input<string>;
    /**
     * The resource location.
     */
    location?: pulumi.Input<string>;
    /**
     * The metadata.
     */
    metadata?: any;
    /**
     * The resource group name.
     */
    resourceGroupName: pulumi.Input<string>;
    /**
     * The resource tags.
     */
    tags?: pulumi.Input<{
        [key: string]: pulumi.Input<string>;
    }>;
}
