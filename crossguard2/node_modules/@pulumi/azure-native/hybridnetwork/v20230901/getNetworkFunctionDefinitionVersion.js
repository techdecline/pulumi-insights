"use strict";
// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***
Object.defineProperty(exports, "__esModule", { value: true });
exports.getNetworkFunctionDefinitionVersionOutput = exports.getNetworkFunctionDefinitionVersion = void 0;
const pulumi = require("@pulumi/pulumi");
const utilities = require("../../utilities");
/**
 * Gets information about a network function definition version.
 */
function getNetworkFunctionDefinitionVersion(args, opts) {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("azure-native:hybridnetwork/v20230901:getNetworkFunctionDefinitionVersion", {
        "networkFunctionDefinitionGroupName": args.networkFunctionDefinitionGroupName,
        "networkFunctionDefinitionVersionName": args.networkFunctionDefinitionVersionName,
        "publisherName": args.publisherName,
        "resourceGroupName": args.resourceGroupName,
    }, opts);
}
exports.getNetworkFunctionDefinitionVersion = getNetworkFunctionDefinitionVersion;
/**
 * Gets information about a network function definition version.
 */
function getNetworkFunctionDefinitionVersionOutput(args, opts) {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invokeOutput("azure-native:hybridnetwork/v20230901:getNetworkFunctionDefinitionVersion", {
        "networkFunctionDefinitionGroupName": args.networkFunctionDefinitionGroupName,
        "networkFunctionDefinitionVersionName": args.networkFunctionDefinitionVersionName,
        "publisherName": args.publisherName,
        "resourceGroupName": args.resourceGroupName,
    }, opts);
}
exports.getNetworkFunctionDefinitionVersionOutput = getNetworkFunctionDefinitionVersionOutput;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZ2V0TmV0d29ya0Z1bmN0aW9uRGVmaW5pdGlvblZlcnNpb24uanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi9oeWJyaWRuZXR3b3JrL3YyMDIzMDkwMS9nZXROZXR3b3JrRnVuY3Rpb25EZWZpbml0aW9uVmVyc2lvbi50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiO0FBQUEsc0VBQXNFO0FBQ3RFLGlGQUFpRjs7O0FBRWpGLHlDQUF5QztBQUl6Qyw2Q0FBNkM7QUFFN0M7O0dBRUc7QUFDSCxTQUFnQixtQ0FBbUMsQ0FBQyxJQUE2QyxFQUFFLElBQTJCO0lBQzFILElBQUksR0FBRyxNQUFNLENBQUMsWUFBWSxDQUFDLFNBQVMsQ0FBQyxvQkFBb0IsRUFBRSxFQUFFLElBQUksSUFBSSxFQUFFLENBQUMsQ0FBQztJQUN6RSxPQUFPLE1BQU0sQ0FBQyxPQUFPLENBQUMsTUFBTSxDQUFDLDBFQUEwRSxFQUFFO1FBQ3JHLG9DQUFvQyxFQUFFLElBQUksQ0FBQyxrQ0FBa0M7UUFDN0Usc0NBQXNDLEVBQUUsSUFBSSxDQUFDLG9DQUFvQztRQUNqRixlQUFlLEVBQUUsSUFBSSxDQUFDLGFBQWE7UUFDbkMsbUJBQW1CLEVBQUUsSUFBSSxDQUFDLGlCQUFpQjtLQUM5QyxFQUFFLElBQUksQ0FBQyxDQUFDO0FBQ2IsQ0FBQztBQVJELGtGQVFDO0FBc0REOztHQUVHO0FBQ0gsU0FBZ0IseUNBQXlDLENBQUMsSUFBbUQsRUFBRSxJQUFpQztJQUM1SSxJQUFJLEdBQUcsTUFBTSxDQUFDLFlBQVksQ0FBQyxTQUFTLENBQUMsb0JBQW9CLEVBQUUsRUFBRSxJQUFJLElBQUksRUFBRSxDQUFDLENBQUM7SUFDekUsT0FBTyxNQUFNLENBQUMsT0FBTyxDQUFDLFlBQVksQ0FBQywwRUFBMEUsRUFBRTtRQUMzRyxvQ0FBb0MsRUFBRSxJQUFJLENBQUMsa0NBQWtDO1FBQzdFLHNDQUFzQyxFQUFFLElBQUksQ0FBQyxvQ0FBb0M7UUFDakYsZUFBZSxFQUFFLElBQUksQ0FBQyxhQUFhO1FBQ25DLG1CQUFtQixFQUFFLElBQUksQ0FBQyxpQkFBaUI7S0FDOUMsRUFBRSxJQUFJLENBQUMsQ0FBQztBQUNiLENBQUM7QUFSRCw4RkFRQyJ9