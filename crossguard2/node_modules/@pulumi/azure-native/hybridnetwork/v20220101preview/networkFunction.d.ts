import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../../types/input";
import * as outputs from "../../types/output";
/**
 * Network function resource response.
 */
export declare class NetworkFunction extends pulumi.CustomResource {
    /**
     * Get an existing NetworkFunction resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    static get(name: string, id: pulumi.Input<pulumi.ID>, opts?: pulumi.CustomResourceOptions): NetworkFunction;
    /**
     * Returns true if the given object is an instance of NetworkFunction.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    static isInstance(obj: any): obj is NetworkFunction;
    /**
     * The reference to the device resource. Once set, it cannot be updated.
     */
    readonly device: pulumi.Output<outputs.hybridnetwork.v20220101preview.SubResourceResponse | undefined>;
    /**
     * A unique read-only string that changes whenever the resource is updated.
     */
    readonly etag: pulumi.Output<string | undefined>;
    /**
     * The geo-location where the resource lives
     */
    readonly location: pulumi.Output<string>;
    /**
     * The resource URI of the managed application.
     */
    readonly managedApplication: pulumi.Output<outputs.hybridnetwork.v20220101preview.SubResourceResponse>;
    /**
     * The parameters for the managed application.
     */
    readonly managedApplicationParameters: pulumi.Output<any | undefined>;
    /**
     * The name of the resource
     */
    readonly name: pulumi.Output<string>;
    /**
     * The network function container configurations from the user.
     */
    readonly networkFunctionContainerConfigurations: pulumi.Output<any | undefined>;
    /**
     * The network function configurations from the user.
     */
    readonly networkFunctionUserConfigurations: pulumi.Output<outputs.hybridnetwork.v20220101preview.NetworkFunctionUserConfigurationResponse[] | undefined>;
    /**
     * The provisioning state of the network function resource.
     */
    readonly provisioningState: pulumi.Output<string>;
    /**
     * The service key for the network function resource.
     */
    readonly serviceKey: pulumi.Output<string>;
    /**
     * The sku name for the network function. Once set, it cannot be updated.
     */
    readonly skuName: pulumi.Output<string | undefined>;
    /**
     * The sku type for the network function.
     */
    readonly skuType: pulumi.Output<string>;
    /**
     * The system meta data relating to this resource.
     */
    readonly systemData: pulumi.Output<outputs.hybridnetwork.v20220101preview.SystemDataResponse>;
    /**
     * Resource tags.
     */
    readonly tags: pulumi.Output<{
        [key: string]: string;
    } | undefined>;
    /**
     * The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
     */
    readonly type: pulumi.Output<string>;
    /**
     * The vendor name for the network function. Once set, it cannot be updated.
     */
    readonly vendorName: pulumi.Output<string | undefined>;
    /**
     * The vendor provisioning state for the network function resource.
     */
    readonly vendorProvisioningState: pulumi.Output<string>;
    /**
     * Create a NetworkFunction resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: NetworkFunctionArgs, opts?: pulumi.CustomResourceOptions);
}
/**
 * The set of arguments for constructing a NetworkFunction resource.
 */
export interface NetworkFunctionArgs {
    /**
     * The reference to the device resource. Once set, it cannot be updated.
     */
    device?: pulumi.Input<inputs.hybridnetwork.v20220101preview.SubResourceArgs>;
    /**
     * The geo-location where the resource lives
     */
    location?: pulumi.Input<string>;
    /**
     * The parameters for the managed application.
     */
    managedApplicationParameters?: any;
    /**
     * The network function container configurations from the user.
     */
    networkFunctionContainerConfigurations?: any;
    /**
     * Resource name for the network function resource.
     */
    networkFunctionName?: pulumi.Input<string>;
    /**
     * The network function configurations from the user.
     */
    networkFunctionUserConfigurations?: pulumi.Input<pulumi.Input<inputs.hybridnetwork.v20220101preview.NetworkFunctionUserConfigurationArgs>[]>;
    /**
     * The name of the resource group. The name is case insensitive.
     */
    resourceGroupName: pulumi.Input<string>;
    /**
     * The sku name for the network function. Once set, it cannot be updated.
     */
    skuName?: pulumi.Input<string>;
    /**
     * Resource tags.
     */
    tags?: pulumi.Input<{
        [key: string]: pulumi.Input<string>;
    }>;
    /**
     * The vendor name for the network function. Once set, it cannot be updated.
     */
    vendorName?: pulumi.Input<string>;
}
