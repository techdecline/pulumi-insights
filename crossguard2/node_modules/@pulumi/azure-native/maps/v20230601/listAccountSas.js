"use strict";
// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***
Object.defineProperty(exports, "__esModule", { value: true });
exports.listAccountSasOutput = exports.listAccountSas = void 0;
const pulumi = require("@pulumi/pulumi");
const utilities = require("../../utilities");
/**
 * Create and list an account shared access signature token. Use this SAS token for authentication to Azure Maps REST APIs through various Azure Maps SDKs. As prerequisite to create a SAS Token.
 *
 * Prerequisites:
 * 1. Create or have an existing User Assigned Managed Identity in the same Azure region as the account.
 * 2. Create or update an Azure Map account with the same Azure region as the User Assigned Managed Identity is placed.
 */
function listAccountSas(args, opts) {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("azure-native:maps/v20230601:listAccountSas", {
        "accountName": args.accountName,
        "expiry": args.expiry,
        "maxRatePerSecond": args.maxRatePerSecond,
        "principalId": args.principalId,
        "regions": args.regions,
        "resourceGroupName": args.resourceGroupName,
        "signingKey": args.signingKey,
        "start": args.start,
    }, opts);
}
exports.listAccountSas = listAccountSas;
/**
 * Create and list an account shared access signature token. Use this SAS token for authentication to Azure Maps REST APIs through various Azure Maps SDKs. As prerequisite to create a SAS Token.
 *
 * Prerequisites:
 * 1. Create or have an existing User Assigned Managed Identity in the same Azure region as the account.
 * 2. Create or update an Azure Map account with the same Azure region as the User Assigned Managed Identity is placed.
 */
function listAccountSasOutput(args, opts) {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invokeOutput("azure-native:maps/v20230601:listAccountSas", {
        "accountName": args.accountName,
        "expiry": args.expiry,
        "maxRatePerSecond": args.maxRatePerSecond,
        "principalId": args.principalId,
        "regions": args.regions,
        "resourceGroupName": args.resourceGroupName,
        "signingKey": args.signingKey,
        "start": args.start,
    }, opts);
}
exports.listAccountSasOutput = listAccountSasOutput;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibGlzdEFjY291bnRTYXMuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi9tYXBzL3YyMDIzMDYwMS9saXN0QWNjb3VudFNhcy50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiO0FBQUEsc0VBQXNFO0FBQ3RFLGlGQUFpRjs7O0FBRWpGLHlDQUF5QztBQUl6Qyw2Q0FBNkM7QUFFN0M7Ozs7OztHQU1HO0FBQ0gsU0FBZ0IsY0FBYyxDQUFDLElBQXdCLEVBQUUsSUFBMkI7SUFDaEYsSUFBSSxHQUFHLE1BQU0sQ0FBQyxZQUFZLENBQUMsU0FBUyxDQUFDLG9CQUFvQixFQUFFLEVBQUUsSUFBSSxJQUFJLEVBQUUsQ0FBQyxDQUFDO0lBQ3pFLE9BQU8sTUFBTSxDQUFDLE9BQU8sQ0FBQyxNQUFNLENBQUMsNENBQTRDLEVBQUU7UUFDdkUsYUFBYSxFQUFFLElBQUksQ0FBQyxXQUFXO1FBQy9CLFFBQVEsRUFBRSxJQUFJLENBQUMsTUFBTTtRQUNyQixrQkFBa0IsRUFBRSxJQUFJLENBQUMsZ0JBQWdCO1FBQ3pDLGFBQWEsRUFBRSxJQUFJLENBQUMsV0FBVztRQUMvQixTQUFTLEVBQUUsSUFBSSxDQUFDLE9BQU87UUFDdkIsbUJBQW1CLEVBQUUsSUFBSSxDQUFDLGlCQUFpQjtRQUMzQyxZQUFZLEVBQUUsSUFBSSxDQUFDLFVBQVU7UUFDN0IsT0FBTyxFQUFFLElBQUksQ0FBQyxLQUFLO0tBQ3RCLEVBQUUsSUFBSSxDQUFDLENBQUM7QUFDYixDQUFDO0FBWkQsd0NBWUM7QUE4Q0Q7Ozs7OztHQU1HO0FBQ0gsU0FBZ0Isb0JBQW9CLENBQUMsSUFBOEIsRUFBRSxJQUFpQztJQUNsRyxJQUFJLEdBQUcsTUFBTSxDQUFDLFlBQVksQ0FBQyxTQUFTLENBQUMsb0JBQW9CLEVBQUUsRUFBRSxJQUFJLElBQUksRUFBRSxDQUFDLENBQUM7SUFDekUsT0FBTyxNQUFNLENBQUMsT0FBTyxDQUFDLFlBQVksQ0FBQyw0Q0FBNEMsRUFBRTtRQUM3RSxhQUFhLEVBQUUsSUFBSSxDQUFDLFdBQVc7UUFDL0IsUUFBUSxFQUFFLElBQUksQ0FBQyxNQUFNO1FBQ3JCLGtCQUFrQixFQUFFLElBQUksQ0FBQyxnQkFBZ0I7UUFDekMsYUFBYSxFQUFFLElBQUksQ0FBQyxXQUFXO1FBQy9CLFNBQVMsRUFBRSxJQUFJLENBQUMsT0FBTztRQUN2QixtQkFBbUIsRUFBRSxJQUFJLENBQUMsaUJBQWlCO1FBQzNDLFlBQVksRUFBRSxJQUFJLENBQUMsVUFBVTtRQUM3QixPQUFPLEVBQUUsSUFBSSxDQUFDLEtBQUs7S0FDdEIsRUFBRSxJQUFJLENBQUMsQ0FBQztBQUNiLENBQUM7QUFaRCxvREFZQyJ9