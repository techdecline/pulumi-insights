import * as pulumi from "@pulumi/pulumi";
import * as outputs from "../../types/output";
/**
 * Migration item.
 */
export declare function getReplicationMigrationItem(args: GetReplicationMigrationItemArgs, opts?: pulumi.InvokeOptions): Promise<GetReplicationMigrationItemResult>;
export interface GetReplicationMigrationItemArgs {
    /**
     * Fabric unique name.
     */
    fabricName: string;
    /**
     * Migration item name.
     */
    migrationItemName: string;
    /**
     * Protection container name.
     */
    protectionContainerName: string;
    /**
     * The name of the resource group where the recovery services vault is present.
     */
    resourceGroupName: string;
    /**
     * The name of the recovery services vault.
     */
    resourceName: string;
}
/**
 * Migration item.
 */
export interface GetReplicationMigrationItemResult {
    /**
     * Resource Id
     */
    readonly id: string;
    /**
     * Resource Location
     */
    readonly location?: string;
    /**
     * Resource Name
     */
    readonly name: string;
    /**
     * The migration item properties.
     */
    readonly properties: outputs.recoveryservices.v20241001.MigrationItemPropertiesResponse;
    /**
     * Resource Type
     */
    readonly type: string;
}
/**
 * Migration item.
 */
export declare function getReplicationMigrationItemOutput(args: GetReplicationMigrationItemOutputArgs, opts?: pulumi.InvokeOutputOptions): pulumi.Output<GetReplicationMigrationItemResult>;
export interface GetReplicationMigrationItemOutputArgs {
    /**
     * Fabric unique name.
     */
    fabricName: pulumi.Input<string>;
    /**
     * Migration item name.
     */
    migrationItemName: pulumi.Input<string>;
    /**
     * Protection container name.
     */
    protectionContainerName: pulumi.Input<string>;
    /**
     * The name of the resource group where the recovery services vault is present.
     */
    resourceGroupName: pulumi.Input<string>;
    /**
     * The name of the recovery services vault.
     */
    resourceName: pulumi.Input<string>;
}
