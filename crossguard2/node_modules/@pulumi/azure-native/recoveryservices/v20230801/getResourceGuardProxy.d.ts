import * as pulumi from "@pulumi/pulumi";
import * as outputs from "../../types/output";
/**
 * Returns ResourceGuardProxy under vault and with the name referenced in request
 */
export declare function getResourceGuardProxy(args: GetResourceGuardProxyArgs, opts?: pulumi.InvokeOptions): Promise<GetResourceGuardProxyResult>;
export interface GetResourceGuardProxyArgs {
    /**
     * The name of the resource group where the recovery services vault is present.
     */
    resourceGroupName: string;
    resourceGuardProxyName: string;
    /**
     * The name of the recovery services vault.
     */
    vaultName: string;
}
export interface GetResourceGuardProxyResult {
    /**
     * Optional ETag.
     */
    readonly eTag?: string;
    /**
     * Resource Id represents the complete path to the resource.
     */
    readonly id: string;
    /**
     * Resource location.
     */
    readonly location?: string;
    /**
     * Resource name associated with the resource.
     */
    readonly name: string;
    /**
     * ResourceGuardProxyBaseResource properties
     */
    readonly properties: outputs.recoveryservices.v20230801.ResourceGuardProxyBaseResponse;
    /**
     * Resource tags.
     */
    readonly tags?: {
        [key: string]: string;
    };
    /**
     * Resource type represents the complete path of the form Namespace/ResourceType/ResourceType/...
     */
    readonly type: string;
}
/**
 * Returns ResourceGuardProxy under vault and with the name referenced in request
 */
export declare function getResourceGuardProxyOutput(args: GetResourceGuardProxyOutputArgs, opts?: pulumi.InvokeOutputOptions): pulumi.Output<GetResourceGuardProxyResult>;
export interface GetResourceGuardProxyOutputArgs {
    /**
     * The name of the resource group where the recovery services vault is present.
     */
    resourceGroupName: pulumi.Input<string>;
    resourceGuardProxyName: pulumi.Input<string>;
    /**
     * The name of the recovery services vault.
     */
    vaultName: pulumi.Input<string>;
}
