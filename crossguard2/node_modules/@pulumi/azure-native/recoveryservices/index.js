"use strict";
// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __exportStar = (this && this.__exportStar) || function(m, exports) {
    for (var p in m) if (p !== "default" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.ReplicationProtectionContainerMapping = exports.ReplicationProtectionCluster = exports.ReplicationProtectedItem = exports.ReplicationPolicy = exports.ReplicationNetworkMapping = exports.ReplicationMigrationItem = exports.ReplicationFabric = exports.ProtectionPolicy = exports.ProtectionIntent = exports.ProtectionContainer = exports.ProtectedItem = exports.PrivateEndpointConnection = exports.getVaultOutput = exports.getVault = exports.getResourceGuardProxyOutput = exports.getResourceGuardProxy = exports.getReplicationvCenterOutput = exports.getReplicationvCenter = exports.getReplicationStorageClassificationMappingOutput = exports.getReplicationStorageClassificationMapping = exports.getReplicationRecoveryServicesProviderOutput = exports.getReplicationRecoveryServicesProvider = exports.getReplicationRecoveryPlanOutput = exports.getReplicationRecoveryPlan = exports.getReplicationProtectionContainerMappingOutput = exports.getReplicationProtectionContainerMapping = exports.getReplicationProtectionClusterOutput = exports.getReplicationProtectionCluster = exports.getReplicationProtectedItemOutput = exports.getReplicationProtectedItem = exports.getReplicationPolicyOutput = exports.getReplicationPolicy = exports.getReplicationNetworkMappingOutput = exports.getReplicationNetworkMapping = exports.getReplicationMigrationItemOutput = exports.getReplicationMigrationItem = exports.getReplicationFabricOutput = exports.getReplicationFabric = exports.getRecoveryPointAccessTokenOutput = exports.getRecoveryPointAccessToken = exports.getProtectionPolicyOutput = exports.getProtectionPolicy = exports.getProtectionIntentOutput = exports.getProtectionIntent = exports.getProtectionContainerOutput = exports.getProtectionContainer = exports.getProtectedItemOutput = exports.getProtectedItem = exports.getPrivateEndpointConnectionOutput = exports.getPrivateEndpointConnection = void 0;
exports.v20241001 = exports.v20240930preview = exports.v20240730preview = exports.v20240430preview = exports.v20240401 = exports.v20240201 = exports.v20240101 = exports.v20230801 = exports.v20230601 = exports.v20230401 = exports.v20230115 = exports.v20211115 = exports.v20210301 = exports.v20200202 = exports.v20181220 = exports.Vault = exports.ResourceGuardProxy = exports.ReplicationvCenter = exports.ReplicationStorageClassificationMapping = exports.ReplicationRecoveryServicesProvider = exports.ReplicationRecoveryPlan = void 0;
const pulumi = require("@pulumi/pulumi");
const utilities = require("../utilities");
exports.getPrivateEndpointConnection = null;
exports.getPrivateEndpointConnectionOutput = null;
utilities.lazyLoad(exports, ["getPrivateEndpointConnection", "getPrivateEndpointConnectionOutput"], () => require("./getPrivateEndpointConnection"));
exports.getProtectedItem = null;
exports.getProtectedItemOutput = null;
utilities.lazyLoad(exports, ["getProtectedItem", "getProtectedItemOutput"], () => require("./getProtectedItem"));
exports.getProtectionContainer = null;
exports.getProtectionContainerOutput = null;
utilities.lazyLoad(exports, ["getProtectionContainer", "getProtectionContainerOutput"], () => require("./getProtectionContainer"));
exports.getProtectionIntent = null;
exports.getProtectionIntentOutput = null;
utilities.lazyLoad(exports, ["getProtectionIntent", "getProtectionIntentOutput"], () => require("./getProtectionIntent"));
exports.getProtectionPolicy = null;
exports.getProtectionPolicyOutput = null;
utilities.lazyLoad(exports, ["getProtectionPolicy", "getProtectionPolicyOutput"], () => require("./getProtectionPolicy"));
exports.getRecoveryPointAccessToken = null;
exports.getRecoveryPointAccessTokenOutput = null;
utilities.lazyLoad(exports, ["getRecoveryPointAccessToken", "getRecoveryPointAccessTokenOutput"], () => require("./getRecoveryPointAccessToken"));
exports.getReplicationFabric = null;
exports.getReplicationFabricOutput = null;
utilities.lazyLoad(exports, ["getReplicationFabric", "getReplicationFabricOutput"], () => require("./getReplicationFabric"));
exports.getReplicationMigrationItem = null;
exports.getReplicationMigrationItemOutput = null;
utilities.lazyLoad(exports, ["getReplicationMigrationItem", "getReplicationMigrationItemOutput"], () => require("./getReplicationMigrationItem"));
exports.getReplicationNetworkMapping = null;
exports.getReplicationNetworkMappingOutput = null;
utilities.lazyLoad(exports, ["getReplicationNetworkMapping", "getReplicationNetworkMappingOutput"], () => require("./getReplicationNetworkMapping"));
exports.getReplicationPolicy = null;
exports.getReplicationPolicyOutput = null;
utilities.lazyLoad(exports, ["getReplicationPolicy", "getReplicationPolicyOutput"], () => require("./getReplicationPolicy"));
exports.getReplicationProtectedItem = null;
exports.getReplicationProtectedItemOutput = null;
utilities.lazyLoad(exports, ["getReplicationProtectedItem", "getReplicationProtectedItemOutput"], () => require("./getReplicationProtectedItem"));
exports.getReplicationProtectionCluster = null;
exports.getReplicationProtectionClusterOutput = null;
utilities.lazyLoad(exports, ["getReplicationProtectionCluster", "getReplicationProtectionClusterOutput"], () => require("./getReplicationProtectionCluster"));
exports.getReplicationProtectionContainerMapping = null;
exports.getReplicationProtectionContainerMappingOutput = null;
utilities.lazyLoad(exports, ["getReplicationProtectionContainerMapping", "getReplicationProtectionContainerMappingOutput"], () => require("./getReplicationProtectionContainerMapping"));
exports.getReplicationRecoveryPlan = null;
exports.getReplicationRecoveryPlanOutput = null;
utilities.lazyLoad(exports, ["getReplicationRecoveryPlan", "getReplicationRecoveryPlanOutput"], () => require("./getReplicationRecoveryPlan"));
exports.getReplicationRecoveryServicesProvider = null;
exports.getReplicationRecoveryServicesProviderOutput = null;
utilities.lazyLoad(exports, ["getReplicationRecoveryServicesProvider", "getReplicationRecoveryServicesProviderOutput"], () => require("./getReplicationRecoveryServicesProvider"));
exports.getReplicationStorageClassificationMapping = null;
exports.getReplicationStorageClassificationMappingOutput = null;
utilities.lazyLoad(exports, ["getReplicationStorageClassificationMapping", "getReplicationStorageClassificationMappingOutput"], () => require("./getReplicationStorageClassificationMapping"));
exports.getReplicationvCenter = null;
exports.getReplicationvCenterOutput = null;
utilities.lazyLoad(exports, ["getReplicationvCenter", "getReplicationvCenterOutput"], () => require("./getReplicationvCenter"));
exports.getResourceGuardProxy = null;
exports.getResourceGuardProxyOutput = null;
utilities.lazyLoad(exports, ["getResourceGuardProxy", "getResourceGuardProxyOutput"], () => require("./getResourceGuardProxy"));
exports.getVault = null;
exports.getVaultOutput = null;
utilities.lazyLoad(exports, ["getVault", "getVaultOutput"], () => require("./getVault"));
exports.PrivateEndpointConnection = null;
utilities.lazyLoad(exports, ["PrivateEndpointConnection"], () => require("./privateEndpointConnection"));
exports.ProtectedItem = null;
utilities.lazyLoad(exports, ["ProtectedItem"], () => require("./protectedItem"));
exports.ProtectionContainer = null;
utilities.lazyLoad(exports, ["ProtectionContainer"], () => require("./protectionContainer"));
exports.ProtectionIntent = null;
utilities.lazyLoad(exports, ["ProtectionIntent"], () => require("./protectionIntent"));
exports.ProtectionPolicy = null;
utilities.lazyLoad(exports, ["ProtectionPolicy"], () => require("./protectionPolicy"));
exports.ReplicationFabric = null;
utilities.lazyLoad(exports, ["ReplicationFabric"], () => require("./replicationFabric"));
exports.ReplicationMigrationItem = null;
utilities.lazyLoad(exports, ["ReplicationMigrationItem"], () => require("./replicationMigrationItem"));
exports.ReplicationNetworkMapping = null;
utilities.lazyLoad(exports, ["ReplicationNetworkMapping"], () => require("./replicationNetworkMapping"));
exports.ReplicationPolicy = null;
utilities.lazyLoad(exports, ["ReplicationPolicy"], () => require("./replicationPolicy"));
exports.ReplicationProtectedItem = null;
utilities.lazyLoad(exports, ["ReplicationProtectedItem"], () => require("./replicationProtectedItem"));
exports.ReplicationProtectionCluster = null;
utilities.lazyLoad(exports, ["ReplicationProtectionCluster"], () => require("./replicationProtectionCluster"));
exports.ReplicationProtectionContainerMapping = null;
utilities.lazyLoad(exports, ["ReplicationProtectionContainerMapping"], () => require("./replicationProtectionContainerMapping"));
exports.ReplicationRecoveryPlan = null;
utilities.lazyLoad(exports, ["ReplicationRecoveryPlan"], () => require("./replicationRecoveryPlan"));
exports.ReplicationRecoveryServicesProvider = null;
utilities.lazyLoad(exports, ["ReplicationRecoveryServicesProvider"], () => require("./replicationRecoveryServicesProvider"));
exports.ReplicationStorageClassificationMapping = null;
utilities.lazyLoad(exports, ["ReplicationStorageClassificationMapping"], () => require("./replicationStorageClassificationMapping"));
exports.ReplicationvCenter = null;
utilities.lazyLoad(exports, ["ReplicationvCenter"], () => require("./replicationvCenter"));
exports.ResourceGuardProxy = null;
utilities.lazyLoad(exports, ["ResourceGuardProxy"], () => require("./resourceGuardProxy"));
exports.Vault = null;
utilities.lazyLoad(exports, ["Vault"], () => require("./vault"));
// Export enums:
__exportStar(require("../types/enums/recoveryservices"), exports);
// Export sub-modules:
const v20181220 = require("./v20181220");
exports.v20181220 = v20181220;
const v20200202 = require("./v20200202");
exports.v20200202 = v20200202;
const v20210301 = require("./v20210301");
exports.v20210301 = v20210301;
const v20211115 = require("./v20211115");
exports.v20211115 = v20211115;
const v20230115 = require("./v20230115");
exports.v20230115 = v20230115;
const v20230401 = require("./v20230401");
exports.v20230401 = v20230401;
const v20230601 = require("./v20230601");
exports.v20230601 = v20230601;
const v20230801 = require("./v20230801");
exports.v20230801 = v20230801;
const v20240101 = require("./v20240101");
exports.v20240101 = v20240101;
const v20240201 = require("./v20240201");
exports.v20240201 = v20240201;
const v20240401 = require("./v20240401");
exports.v20240401 = v20240401;
const v20240430preview = require("./v20240430preview");
exports.v20240430preview = v20240430preview;
const v20240730preview = require("./v20240730preview");
exports.v20240730preview = v20240730preview;
const v20240930preview = require("./v20240930preview");
exports.v20240930preview = v20240930preview;
const v20241001 = require("./v20241001");
exports.v20241001 = v20241001;
const _module = {
    version: utilities.getVersion(),
    construct: (name, type, urn) => {
        switch (type) {
            case "azure-native:recoveryservices:PrivateEndpointConnection":
                return new exports.PrivateEndpointConnection(name, undefined, { urn });
            case "azure-native:recoveryservices:ProtectedItem":
                return new exports.ProtectedItem(name, undefined, { urn });
            case "azure-native:recoveryservices:ProtectionContainer":
                return new exports.ProtectionContainer(name, undefined, { urn });
            case "azure-native:recoveryservices:ProtectionIntent":
                return new exports.ProtectionIntent(name, undefined, { urn });
            case "azure-native:recoveryservices:ProtectionPolicy":
                return new exports.ProtectionPolicy(name, undefined, { urn });
            case "azure-native:recoveryservices:ReplicationFabric":
                return new exports.ReplicationFabric(name, undefined, { urn });
            case "azure-native:recoveryservices:ReplicationMigrationItem":
                return new exports.ReplicationMigrationItem(name, undefined, { urn });
            case "azure-native:recoveryservices:ReplicationNetworkMapping":
                return new exports.ReplicationNetworkMapping(name, undefined, { urn });
            case "azure-native:recoveryservices:ReplicationPolicy":
                return new exports.ReplicationPolicy(name, undefined, { urn });
            case "azure-native:recoveryservices:ReplicationProtectedItem":
                return new exports.ReplicationProtectedItem(name, undefined, { urn });
            case "azure-native:recoveryservices:ReplicationProtectionCluster":
                return new exports.ReplicationProtectionCluster(name, undefined, { urn });
            case "azure-native:recoveryservices:ReplicationProtectionContainerMapping":
                return new exports.ReplicationProtectionContainerMapping(name, undefined, { urn });
            case "azure-native:recoveryservices:ReplicationRecoveryPlan":
                return new exports.ReplicationRecoveryPlan(name, undefined, { urn });
            case "azure-native:recoveryservices:ReplicationRecoveryServicesProvider":
                return new exports.ReplicationRecoveryServicesProvider(name, undefined, { urn });
            case "azure-native:recoveryservices:ReplicationStorageClassificationMapping":
                return new exports.ReplicationStorageClassificationMapping(name, undefined, { urn });
            case "azure-native:recoveryservices:ReplicationvCenter":
                return new exports.ReplicationvCenter(name, undefined, { urn });
            case "azure-native:recoveryservices:ResourceGuardProxy":
                return new exports.ResourceGuardProxy(name, undefined, { urn });
            case "azure-native:recoveryservices:Vault":
                return new exports.Vault(name, undefined, { urn });
            default:
                throw new Error(`unknown resource type ${type}`);
        }
    },
};
pulumi.runtime.registerResourceModule("azure-native", "recoveryservices", _module);
//# sourceMappingURL=data:application/json;base64,