import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../../types/input";
import * as outputs from "../../types/output";
/**
 * Resource information, as returned by the resource provider.
 */
export declare class Vault extends pulumi.CustomResource {
    /**
     * Get an existing Vault resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    static get(name: string, id: pulumi.Input<pulumi.ID>, opts?: pulumi.CustomResourceOptions): Vault;
    /**
     * Returns true if the given object is an instance of Vault.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    static isInstance(obj: any): obj is Vault;
    /**
     * Optional ETag.
     */
    readonly etag: pulumi.Output<string | undefined>;
    /**
     * Identity for the resource.
     */
    readonly identity: pulumi.Output<outputs.recoveryservices.v20240101.IdentityDataResponse | undefined>;
    /**
     * Resource location.
     */
    readonly location: pulumi.Output<string>;
    /**
     * Resource name associated with the resource.
     */
    readonly name: pulumi.Output<string>;
    /**
     * Properties of the vault.
     */
    readonly properties: pulumi.Output<outputs.recoveryservices.v20240101.VaultPropertiesResponse>;
    /**
     * Identifies the unique system identifier for each Azure resource.
     */
    readonly sku: pulumi.Output<outputs.recoveryservices.v20240101.SkuResponse | undefined>;
    /**
     * Metadata pertaining to creation and last modification of the resource.
     */
    readonly systemData: pulumi.Output<outputs.recoveryservices.v20240101.SystemDataResponse>;
    /**
     * Resource tags.
     */
    readonly tags: pulumi.Output<{
        [key: string]: string;
    } | undefined>;
    /**
     * Resource type represents the complete path of the form Namespace/ResourceType/ResourceType/...
     */
    readonly type: pulumi.Output<string>;
    /**
     * Create a Vault resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: VaultArgs, opts?: pulumi.CustomResourceOptions);
}
/**
 * The set of arguments for constructing a Vault resource.
 */
export interface VaultArgs {
    /**
     * Identity for the resource.
     */
    identity?: pulumi.Input<inputs.recoveryservices.v20240101.IdentityDataArgs>;
    /**
     * Resource location.
     */
    location?: pulumi.Input<string>;
    /**
     * Properties of the vault.
     */
    properties?: pulumi.Input<inputs.recoveryservices.v20240101.VaultPropertiesArgs>;
    /**
     * The name of the resource group. The name is case insensitive.
     */
    resourceGroupName: pulumi.Input<string>;
    /**
     * Identifies the unique system identifier for each Azure resource.
     */
    sku?: pulumi.Input<inputs.recoveryservices.v20240101.SkuArgs>;
    /**
     * Resource tags.
     */
    tags?: pulumi.Input<{
        [key: string]: pulumi.Input<string>;
    }>;
    /**
     * The name of the recovery services vault.
     */
    vaultName?: pulumi.Input<string>;
}
