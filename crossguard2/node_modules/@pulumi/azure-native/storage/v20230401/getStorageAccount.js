"use strict";
// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***
Object.defineProperty(exports, "__esModule", { value: true });
exports.getStorageAccountOutput = exports.getStorageAccount = void 0;
const pulumi = require("@pulumi/pulumi");
const utilities = require("../../utilities");
/**
 * Returns the properties for the specified storage account including but not limited to name, SKU name, location, and account status. The ListKeys operation should be used to retrieve storage keys.
 */
function getStorageAccount(args, opts) {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("azure-native:storage/v20230401:getStorageAccount", {
        "accountName": args.accountName,
        "expand": args.expand,
        "resourceGroupName": args.resourceGroupName,
    }, opts);
}
exports.getStorageAccount = getStorageAccount;
/**
 * Returns the properties for the specified storage account including but not limited to name, SKU name, location, and account status. The ListKeys operation should be used to retrieve storage keys.
 */
function getStorageAccountOutput(args, opts) {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invokeOutput("azure-native:storage/v20230401:getStorageAccount", {
        "accountName": args.accountName,
        "expand": args.expand,
        "resourceGroupName": args.resourceGroupName,
    }, opts);
}
exports.getStorageAccountOutput = getStorageAccountOutput;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZ2V0U3RvcmFnZUFjY291bnQuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi9zdG9yYWdlL3YyMDIzMDQwMS9nZXRTdG9yYWdlQWNjb3VudC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiO0FBQUEsc0VBQXNFO0FBQ3RFLGlGQUFpRjs7O0FBRWpGLHlDQUF5QztBQUl6Qyw2Q0FBNkM7QUFFN0M7O0dBRUc7QUFDSCxTQUFnQixpQkFBaUIsQ0FBQyxJQUEyQixFQUFFLElBQTJCO0lBQ3RGLElBQUksR0FBRyxNQUFNLENBQUMsWUFBWSxDQUFDLFNBQVMsQ0FBQyxvQkFBb0IsRUFBRSxFQUFFLElBQUksSUFBSSxFQUFFLENBQUMsQ0FBQztJQUN6RSxPQUFPLE1BQU0sQ0FBQyxPQUFPLENBQUMsTUFBTSxDQUFDLGtEQUFrRCxFQUFFO1FBQzdFLGFBQWEsRUFBRSxJQUFJLENBQUMsV0FBVztRQUMvQixRQUFRLEVBQUUsSUFBSSxDQUFDLE1BQU07UUFDckIsbUJBQW1CLEVBQUUsSUFBSSxDQUFDLGlCQUFpQjtLQUM5QyxFQUFFLElBQUksQ0FBQyxDQUFDO0FBQ2IsQ0FBQztBQVBELDhDQU9DO0FBME5EOztHQUVHO0FBQ0gsU0FBZ0IsdUJBQXVCLENBQUMsSUFBaUMsRUFBRSxJQUFpQztJQUN4RyxJQUFJLEdBQUcsTUFBTSxDQUFDLFlBQVksQ0FBQyxTQUFTLENBQUMsb0JBQW9CLEVBQUUsRUFBRSxJQUFJLElBQUksRUFBRSxDQUFDLENBQUM7SUFDekUsT0FBTyxNQUFNLENBQUMsT0FBTyxDQUFDLFlBQVksQ0FBQyxrREFBa0QsRUFBRTtRQUNuRixhQUFhLEVBQUUsSUFBSSxDQUFDLFdBQVc7UUFDL0IsUUFBUSxFQUFFLElBQUksQ0FBQyxNQUFNO1FBQ3JCLG1CQUFtQixFQUFFLElBQUksQ0FBQyxpQkFBaUI7S0FDOUMsRUFBRSxJQUFJLENBQUMsQ0FBQztBQUNiLENBQUM7QUFQRCwwREFPQyJ9