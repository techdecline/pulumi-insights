import * as pulumi from "@pulumi/pulumi";
import * as enums from "../types/enums";
/**
 * Manages a Blob within a Storage Container. For the supported combinations of properties and features please see [here](https://learn.microsoft.com/en-us/azure/storage/blobs/storage-feature-support-in-storage-accounts).
 */
export declare class Blob extends pulumi.CustomResource {
    /**
     * Get an existing Blob resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    static get(name: string, id: pulumi.Input<pulumi.ID>, opts?: pulumi.CustomResourceOptions): Blob;
    /**
     * Returns true if the given object is an instance of Blob.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    static isInstance(obj: any): obj is Blob;
    /**
     * The access tier of the storage blob. Only supported for standard storage accounts, not premium.
     */
    readonly accessTier: pulumi.Output<enums.storage.BlobAccessTier | undefined>;
    /**
     * The MD5 sum of the blob contents.
     */
    readonly contentMd5: pulumi.Output<string | undefined>;
    /**
     * The content type of the storage blob.
     */
    readonly contentType: pulumi.Output<string | undefined>;
    /**
     * A map of custom blob metadata.
     */
    readonly metadata: pulumi.Output<{
        [key: string]: string;
    }>;
    /**
     * The name of the storage blob.
     */
    readonly name: pulumi.Output<string>;
    /**
     * The type of the storage blob to be created.
     */
    readonly type: pulumi.Output<enums.storage.BlobType>;
    /**
     * The URL of the blob.
     */
    readonly url: pulumi.Output<string>;
    /**
     * Create a Blob resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: BlobArgs, opts?: pulumi.CustomResourceOptions);
}
/**
 * The set of arguments for constructing a Blob resource.
 */
export interface BlobArgs {
    /**
     * The access tier of the storage blob. Only supported for standard storage accounts, not premium.
     */
    accessTier?: pulumi.Input<enums.storage.BlobAccessTier>;
    /**
     * Specifies the storage account in which to create the storage container.
     */
    accountName: pulumi.Input<string>;
    /**
     * The name of the storage blob. Must be unique within the storage container the blob is located. If this property is not specified it will be set to the name of the resource.
     */
    blobName?: pulumi.Input<string>;
    /**
     * The name of the storage container in which this blob should be created.
     */
    containerName: pulumi.Input<string>;
    /**
     * The MD5 sum of the blob contents, base64-encoded. Cannot be defined if blob type is Append.
     */
    contentMd5?: pulumi.Input<string>;
    /**
     * The content type of the storage blob. Defaults to `application/octet-stream`.
     */
    contentType?: pulumi.Input<string>;
    /**
     * A map of custom blob metadata.
     */
    metadata?: pulumi.Input<{
        [key: string]: pulumi.Input<string>;
    }>;
    /**
     * The name of the resource group within the user's subscription.
     */
    resourceGroupName: pulumi.Input<string>;
    /**
     * An asset to copy to the blob contents. This field cannot be specified for Append blobs.
     */
    source?: pulumi.Input<pulumi.asset.Asset | pulumi.asset.Archive>;
    /**
     * The type of the storage blob to be created. Defaults to 'Block'.
     */
    type?: pulumi.Input<enums.storage.BlobType>;
}
