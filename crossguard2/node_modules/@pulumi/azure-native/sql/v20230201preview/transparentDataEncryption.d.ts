import * as pulumi from "@pulumi/pulumi";
import * as enums from "../../types/enums";
/**
 * A logical database transparent data encryption state.
 */
export declare class TransparentDataEncryption extends pulumi.CustomResource {
    /**
     * Get an existing TransparentDataEncryption resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    static get(name: string, id: pulumi.Input<pulumi.ID>, opts?: pulumi.CustomResourceOptions): TransparentDataEncryption;
    /**
     * Returns true if the given object is an instance of TransparentDataEncryption.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    static isInstance(obj: any): obj is TransparentDataEncryption;
    /**
     * Resource name.
     */
    readonly name: pulumi.Output<string>;
    /**
     * Specifies the state of the transparent data encryption.
     */
    readonly state: pulumi.Output<string>;
    /**
     * Resource type.
     */
    readonly type: pulumi.Output<string>;
    /**
     * Create a TransparentDataEncryption resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: TransparentDataEncryptionArgs, opts?: pulumi.CustomResourceOptions);
}
/**
 * The set of arguments for constructing a TransparentDataEncryption resource.
 */
export interface TransparentDataEncryptionArgs {
    /**
     * The name of the logical database for which the security alert policy is defined.
     */
    databaseName: pulumi.Input<string>;
    /**
     * The name of the resource group that contains the resource. You can obtain this value from the Azure Resource Manager API or the portal.
     */
    resourceGroupName: pulumi.Input<string>;
    /**
     * The name of the server.
     */
    serverName: pulumi.Input<string>;
    /**
     * Specifies the state of the transparent data encryption.
     */
    state: pulumi.Input<enums.sql.v20230201preview.TransparentDataEncryptionState>;
    /**
     * The name of the transparent data encryption configuration.
     */
    tdeName?: pulumi.Input<string>;
}
