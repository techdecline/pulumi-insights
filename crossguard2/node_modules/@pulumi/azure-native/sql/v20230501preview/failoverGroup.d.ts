import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../../types/input";
import * as outputs from "../../types/output";
import * as enums from "../../types/enums";
/**
 * A failover group.
 */
export declare class FailoverGroup extends pulumi.CustomResource {
    /**
     * Get an existing FailoverGroup resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    static get(name: string, id: pulumi.Input<pulumi.ID>, opts?: pulumi.CustomResourceOptions): FailoverGroup;
    /**
     * Returns true if the given object is an instance of FailoverGroup.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    static isInstance(obj: any): obj is FailoverGroup;
    /**
     * List of databases in the failover group.
     */
    readonly databases: pulumi.Output<string[] | undefined>;
    /**
     * Resource location.
     */
    readonly location: pulumi.Output<string>;
    /**
     * Resource name.
     */
    readonly name: pulumi.Output<string>;
    /**
     * List of partner server information for the failover group.
     */
    readonly partnerServers: pulumi.Output<outputs.sql.v20230501preview.PartnerInfoResponse[]>;
    /**
     * Read-only endpoint of the failover group instance.
     */
    readonly readOnlyEndpoint: pulumi.Output<outputs.sql.v20230501preview.FailoverGroupReadOnlyEndpointResponse | undefined>;
    /**
     * Read-write endpoint of the failover group instance.
     */
    readonly readWriteEndpoint: pulumi.Output<outputs.sql.v20230501preview.FailoverGroupReadWriteEndpointResponse>;
    /**
     * Local replication role of the failover group instance.
     */
    readonly replicationRole: pulumi.Output<string>;
    /**
     * Replication state of the failover group instance.
     */
    readonly replicationState: pulumi.Output<string>;
    /**
     * Resource tags.
     */
    readonly tags: pulumi.Output<{
        [key: string]: string;
    } | undefined>;
    /**
     * Resource type.
     */
    readonly type: pulumi.Output<string>;
    /**
     * Create a FailoverGroup resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: FailoverGroupArgs, opts?: pulumi.CustomResourceOptions);
}
/**
 * The set of arguments for constructing a FailoverGroup resource.
 */
export interface FailoverGroupArgs {
    /**
     * List of databases in the failover group.
     */
    databases?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The name of the failover group.
     */
    failoverGroupName?: pulumi.Input<string>;
    /**
     * List of partner server information for the failover group.
     */
    partnerServers: pulumi.Input<pulumi.Input<inputs.sql.v20230501preview.PartnerInfoArgs>[]>;
    /**
     * Read-only endpoint of the failover group instance.
     */
    readOnlyEndpoint?: pulumi.Input<inputs.sql.v20230501preview.FailoverGroupReadOnlyEndpointArgs>;
    /**
     * Read-write endpoint of the failover group instance.
     */
    readWriteEndpoint: pulumi.Input<inputs.sql.v20230501preview.FailoverGroupReadWriteEndpointArgs>;
    /**
     * The name of the resource group that contains the resource. You can obtain this value from the Azure Resource Manager API or the portal.
     */
    resourceGroupName: pulumi.Input<string>;
    /**
     * Databases secondary type on partner server.
     */
    secondaryType?: pulumi.Input<string | enums.sql.v20230501preview.FailoverGroupDatabasesSecondaryType>;
    /**
     * The name of the server containing the failover group.
     */
    serverName: pulumi.Input<string>;
    /**
     * Resource tags.
     */
    tags?: pulumi.Input<{
        [key: string]: pulumi.Input<string>;
    }>;
}
