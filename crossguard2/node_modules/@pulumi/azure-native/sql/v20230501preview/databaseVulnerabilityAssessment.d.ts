import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../../types/input";
import * as outputs from "../../types/output";
/**
 * A database vulnerability assessment.
 */
export declare class DatabaseVulnerabilityAssessment extends pulumi.CustomResource {
    /**
     * Get an existing DatabaseVulnerabilityAssessment resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    static get(name: string, id: pulumi.Input<pulumi.ID>, opts?: pulumi.CustomResourceOptions): DatabaseVulnerabilityAssessment;
    /**
     * Returns true if the given object is an instance of DatabaseVulnerabilityAssessment.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    static isInstance(obj: any): obj is DatabaseVulnerabilityAssessment;
    /**
     * Resource name.
     */
    readonly name: pulumi.Output<string>;
    /**
     * The recurring scans settings
     */
    readonly recurringScans: pulumi.Output<outputs.sql.v20230501preview.VulnerabilityAssessmentRecurringScansPropertiesResponse | undefined>;
    /**
     * Resource type.
     */
    readonly type: pulumi.Output<string>;
    /**
     * Create a DatabaseVulnerabilityAssessment resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: DatabaseVulnerabilityAssessmentArgs, opts?: pulumi.CustomResourceOptions);
}
/**
 * The set of arguments for constructing a DatabaseVulnerabilityAssessment resource.
 */
export interface DatabaseVulnerabilityAssessmentArgs {
    /**
     * The name of the database for which the vulnerability assessment is defined.
     */
    databaseName: pulumi.Input<string>;
    /**
     * The recurring scans settings
     */
    recurringScans?: pulumi.Input<inputs.sql.v20230501preview.VulnerabilityAssessmentRecurringScansPropertiesArgs>;
    /**
     * The name of the resource group that contains the resource. You can obtain this value from the Azure Resource Manager API or the portal.
     */
    resourceGroupName: pulumi.Input<string>;
    /**
     * The name of the server.
     */
    serverName: pulumi.Input<string>;
    /**
     * Specifies the identifier key of the storage account for vulnerability assessment scan results. If 'StorageContainerSasKey' isn't specified, storageAccountAccessKey is required. Applies only if the storage account is not behind a Vnet or a firewall
     */
    storageAccountAccessKey?: pulumi.Input<string>;
    /**
     * A blob storage container path to hold the scan results (e.g. https://myStorage.blob.core.windows.net/VaScans/).  It is required if server level vulnerability assessment policy doesn't set
     */
    storageContainerPath?: pulumi.Input<string>;
    /**
     * A shared access signature (SAS Key) that has write access to the blob container specified in 'storageContainerPath' parameter. If 'storageAccountAccessKey' isn't specified, StorageContainerSasKey is required. Applies only if the storage account is not behind a Vnet or a firewall
     */
    storageContainerSasKey?: pulumi.Input<string>;
    /**
     * The name of the vulnerability assessment.
     */
    vulnerabilityAssessmentName?: pulumi.Input<string>;
}
