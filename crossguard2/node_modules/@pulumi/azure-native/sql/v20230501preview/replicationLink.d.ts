import * as pulumi from "@pulumi/pulumi";
import * as enums from "../../types/enums";
/**
 * A replication link.
 */
export declare class ReplicationLink extends pulumi.CustomResource {
    /**
     * Get an existing ReplicationLink resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    static get(name: string, id: pulumi.Input<pulumi.ID>, opts?: pulumi.CustomResourceOptions): ReplicationLink;
    /**
     * Returns true if the given object is an instance of ReplicationLink.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    static isInstance(obj: any): obj is ReplicationLink;
    /**
     * Whether the user is currently allowed to terminate the link.
     */
    readonly isTerminationAllowed: pulumi.Output<boolean>;
    /**
     * Link type (GEO, NAMED, STANDBY). Update operation does not support NAMED.
     */
    readonly linkType: pulumi.Output<string | undefined>;
    /**
     * Resource name.
     */
    readonly name: pulumi.Output<string>;
    /**
     * Resource partner database.
     */
    readonly partnerDatabase: pulumi.Output<string>;
    /**
     * Resource partner database Id.
     */
    readonly partnerDatabaseId: pulumi.Output<string>;
    /**
     * Resource partner location.
     */
    readonly partnerLocation: pulumi.Output<string>;
    /**
     * Partner replication role.
     */
    readonly partnerRole: pulumi.Output<string>;
    /**
     * Resource partner server.
     */
    readonly partnerServer: pulumi.Output<string>;
    /**
     * Seeding completion percentage for the link.
     */
    readonly percentComplete: pulumi.Output<number>;
    /**
     * Replication mode.
     */
    readonly replicationMode: pulumi.Output<string>;
    /**
     * Replication state (PENDING, SEEDING, CATCHUP, SUSPENDED).
     */
    readonly replicationState: pulumi.Output<string>;
    /**
     * Local replication role.
     */
    readonly role: pulumi.Output<string>;
    /**
     * Time at which the link was created.
     */
    readonly startTime: pulumi.Output<string>;
    /**
     * Resource type.
     */
    readonly type: pulumi.Output<string>;
    /**
     * Create a ReplicationLink resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: ReplicationLinkArgs, opts?: pulumi.CustomResourceOptions);
}
/**
 * The set of arguments for constructing a ReplicationLink resource.
 */
export interface ReplicationLinkArgs {
    /**
     * The name of the database.
     */
    databaseName: pulumi.Input<string>;
    linkId?: pulumi.Input<string>;
    /**
     * Link type (GEO, NAMED, STANDBY). Update operation does not support NAMED.
     */
    linkType?: pulumi.Input<string | enums.sql.v20230501preview.ReplicationLinkType>;
    /**
     * The name of the resource group that contains the resource. You can obtain this value from the Azure Resource Manager API or the portal.
     */
    resourceGroupName: pulumi.Input<string>;
    /**
     * The name of the server.
     */
    serverName: pulumi.Input<string>;
}
