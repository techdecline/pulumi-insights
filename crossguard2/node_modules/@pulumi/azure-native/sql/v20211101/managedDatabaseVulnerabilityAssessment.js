"use strict";
// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***
Object.defineProperty(exports, "__esModule", { value: true });
exports.ManagedDatabaseVulnerabilityAssessment = void 0;
const pulumi = require("@pulumi/pulumi");
const inputs = require("../../types/input");
const utilities = require("../../utilities");
/**
 * A database vulnerability assessment.
 */
class ManagedDatabaseVulnerabilityAssessment extends pulumi.CustomResource {
    /**
     * Get an existing ManagedDatabaseVulnerabilityAssessment resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    static get(name, id, opts) {
        return new ManagedDatabaseVulnerabilityAssessment(name, undefined, Object.assign(Object.assign({}, opts), { id: id }));
    }
    /**
     * Returns true if the given object is an instance of ManagedDatabaseVulnerabilityAssessment.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    static isInstance(obj) {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === ManagedDatabaseVulnerabilityAssessment.__pulumiType;
    }
    /**
     * Create a ManagedDatabaseVulnerabilityAssessment resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name, args, opts) {
        let resourceInputs = {};
        opts = opts || {};
        if (!opts.id) {
            if ((!args || args.databaseName === undefined) && !opts.urn) {
                throw new Error("Missing required property 'databaseName'");
            }
            if ((!args || args.managedInstanceName === undefined) && !opts.urn) {
                throw new Error("Missing required property 'managedInstanceName'");
            }
            if ((!args || args.resourceGroupName === undefined) && !opts.urn) {
                throw new Error("Missing required property 'resourceGroupName'");
            }
            resourceInputs["databaseName"] = args ? args.databaseName : undefined;
            resourceInputs["managedInstanceName"] = args ? args.managedInstanceName : undefined;
            resourceInputs["recurringScans"] = args ? (args.recurringScans ? pulumi.output(args.recurringScans).apply(inputs.sql.v20211101.vulnerabilityAssessmentRecurringScansPropertiesArgsProvideDefaults) : undefined) : undefined;
            resourceInputs["resourceGroupName"] = args ? args.resourceGroupName : undefined;
            resourceInputs["storageAccountAccessKey"] = args ? args.storageAccountAccessKey : undefined;
            resourceInputs["storageContainerPath"] = args ? args.storageContainerPath : undefined;
            resourceInputs["storageContainerSasKey"] = args ? args.storageContainerSasKey : undefined;
            resourceInputs["vulnerabilityAssessmentName"] = args ? args.vulnerabilityAssessmentName : undefined;
            resourceInputs["name"] = undefined /*out*/;
            resourceInputs["type"] = undefined /*out*/;
        }
        else {
            resourceInputs["name"] = undefined /*out*/;
            resourceInputs["recurringScans"] = undefined /*out*/;
            resourceInputs["type"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        const aliasOpts = { aliases: [{ type: "azure-native:sql/v20171001preview:ManagedDatabaseVulnerabilityAssessment" }, { type: "azure-native:sql/v20200202preview:ManagedDatabaseVulnerabilityAssessment" }, { type: "azure-native:sql/v20200801preview:ManagedDatabaseVulnerabilityAssessment" }, { type: "azure-native:sql/v20201101preview:ManagedDatabaseVulnerabilityAssessment" }, { type: "azure-native:sql/v20210201preview:ManagedDatabaseVulnerabilityAssessment" }, { type: "azure-native:sql/v20210501preview:ManagedDatabaseVulnerabilityAssessment" }, { type: "azure-native:sql/v20210801preview:ManagedDatabaseVulnerabilityAssessment" }, { type: "azure-native:sql/v20211101preview:ManagedDatabaseVulnerabilityAssessment" }, { type: "azure-native:sql/v20220201preview:ManagedDatabaseVulnerabilityAssessment" }, { type: "azure-native:sql/v20220501preview:ManagedDatabaseVulnerabilityAssessment" }, { type: "azure-native:sql/v20220801preview:ManagedDatabaseVulnerabilityAssessment" }, { type: "azure-native:sql/v20221101preview:ManagedDatabaseVulnerabilityAssessment" }, { type: "azure-native:sql/v20230201preview:ManagedDatabaseVulnerabilityAssessment" }, { type: "azure-native:sql/v20230501preview:ManagedDatabaseVulnerabilityAssessment" }, { type: "azure-native:sql/v20230801preview:ManagedDatabaseVulnerabilityAssessment" }, { type: "azure-native:sql/v20240501preview:ManagedDatabaseVulnerabilityAssessment" }, { type: "azure-native:sql:ManagedDatabaseVulnerabilityAssessment" }] };
        opts = pulumi.mergeOptions(opts, aliasOpts);
        super(ManagedDatabaseVulnerabilityAssessment.__pulumiType, name, resourceInputs, opts);
    }
}
exports.ManagedDatabaseVulnerabilityAssessment = ManagedDatabaseVulnerabilityAssessment;
/** @internal */
ManagedDatabaseVulnerabilityAssessment.__pulumiType = 'azure-native:sql/v20211101:ManagedDatabaseVulnerabilityAssessment';
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibWFuYWdlZERhdGFiYXNlVnVsbmVyYWJpbGl0eUFzc2Vzc21lbnQuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi9zcWwvdjIwMjExMTAxL21hbmFnZWREYXRhYmFzZVZ1bG5lcmFiaWxpdHlBc3Nlc3NtZW50LnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7QUFBQSxzRUFBc0U7QUFDdEUsaUZBQWlGOzs7QUFFakYseUNBQXlDO0FBQ3pDLDRDQUE0QztBQUc1Qyw2Q0FBNkM7QUFFN0M7O0dBRUc7QUFDSCxNQUFhLHNDQUF1QyxTQUFRLE1BQU0sQ0FBQyxjQUFjO0lBQzdFOzs7Ozs7O09BT0c7SUFDSSxNQUFNLENBQUMsR0FBRyxDQUFDLElBQVksRUFBRSxFQUEyQixFQUFFLElBQW1DO1FBQzVGLE9BQU8sSUFBSSxzQ0FBc0MsQ0FBQyxJQUFJLEVBQUUsU0FBZ0Isa0NBQU8sSUFBSSxLQUFFLEVBQUUsRUFBRSxFQUFFLElBQUcsQ0FBQztJQUNuRyxDQUFDO0lBS0Q7OztPQUdHO0lBQ0ksTUFBTSxDQUFDLFVBQVUsQ0FBQyxHQUFRO1FBQzdCLElBQUksR0FBRyxLQUFLLFNBQVMsSUFBSSxHQUFHLEtBQUssSUFBSSxFQUFFO1lBQ25DLE9BQU8sS0FBSyxDQUFDO1NBQ2hCO1FBQ0QsT0FBTyxHQUFHLENBQUMsY0FBYyxDQUFDLEtBQUssc0NBQXNDLENBQUMsWUFBWSxDQUFDO0lBQ3ZGLENBQUM7SUFlRDs7Ozs7O09BTUc7SUFDSCxZQUFZLElBQVksRUFBRSxJQUFnRCxFQUFFLElBQW1DO1FBQzNHLElBQUksY0FBYyxHQUFrQixFQUFFLENBQUM7UUFDdkMsSUFBSSxHQUFHLElBQUksSUFBSSxFQUFFLENBQUM7UUFDbEIsSUFBSSxDQUFDLElBQUksQ0FBQyxFQUFFLEVBQUU7WUFDVixJQUFJLENBQUMsQ0FBQyxJQUFJLElBQUksSUFBSSxDQUFDLFlBQVksS0FBSyxTQUFTLENBQUMsSUFBSSxDQUFDLElBQUksQ0FBQyxHQUFHLEVBQUU7Z0JB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