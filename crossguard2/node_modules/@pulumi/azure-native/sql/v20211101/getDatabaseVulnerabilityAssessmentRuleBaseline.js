"use strict";
// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***
Object.defineProperty(exports, "__esModule", { value: true });
exports.getDatabaseVulnerabilityAssessmentRuleBaselineOutput = exports.getDatabaseVulnerabilityAssessmentRuleBaseline = void 0;
const pulumi = require("@pulumi/pulumi");
const utilities = require("../../utilities");
/**
 * Gets a database's vulnerability assessment rule baseline.
 */
function getDatabaseVulnerabilityAssessmentRuleBaseline(args, opts) {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("azure-native:sql/v20211101:getDatabaseVulnerabilityAssessmentRuleBaseline", {
        "baselineName": args.baselineName,
        "databaseName": args.databaseName,
        "resourceGroupName": args.resourceGroupName,
        "ruleId": args.ruleId,
        "serverName": args.serverName,
        "vulnerabilityAssessmentName": args.vulnerabilityAssessmentName,
    }, opts);
}
exports.getDatabaseVulnerabilityAssessmentRuleBaseline = getDatabaseVulnerabilityAssessmentRuleBaseline;
/**
 * Gets a database's vulnerability assessment rule baseline.
 */
function getDatabaseVulnerabilityAssessmentRuleBaselineOutput(args, opts) {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invokeOutput("azure-native:sql/v20211101:getDatabaseVulnerabilityAssessmentRuleBaseline", {
        "baselineName": args.baselineName,
        "databaseName": args.databaseName,
        "resourceGroupName": args.resourceGroupName,
        "ruleId": args.ruleId,
        "serverName": args.serverName,
        "vulnerabilityAssessmentName": args.vulnerabilityAssessmentName,
    }, opts);
}
exports.getDatabaseVulnerabilityAssessmentRuleBaselineOutput = getDatabaseVulnerabilityAssessmentRuleBaselineOutput;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZ2V0RGF0YWJhc2VWdWxuZXJhYmlsaXR5QXNzZXNzbWVudFJ1bGVCYXNlbGluZS5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uL3NxbC92MjAyMTExMDEvZ2V0RGF0YWJhc2VWdWxuZXJhYmlsaXR5QXNzZXNzbWVudFJ1bGVCYXNlbGluZS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiO0FBQUEsc0VBQXNFO0FBQ3RFLGlGQUFpRjs7O0FBRWpGLHlDQUF5QztBQUl6Qyw2Q0FBNkM7QUFFN0M7O0dBRUc7QUFDSCxTQUFnQiw4Q0FBOEMsQ0FBQyxJQUF3RCxFQUFFLElBQTJCO0lBQ2hKLElBQUksR0FBRyxNQUFNLENBQUMsWUFBWSxDQUFDLFNBQVMsQ0FBQyxvQkFBb0IsRUFBRSxFQUFFLElBQUksSUFBSSxFQUFFLENBQUMsQ0FBQztJQUN6RSxPQUFPLE1BQU0sQ0FBQyxPQUFPLENBQUMsTUFBTSxDQUFDLDJFQUEyRSxFQUFFO1FBQ3RHLGNBQWMsRUFBRSxJQUFJLENBQUMsWUFBWTtRQUNqQyxjQUFjLEVBQUUsSUFBSSxDQUFDLFlBQVk7UUFDakMsbUJBQW1CLEVBQUUsSUFBSSxDQUFDLGlCQUFpQjtRQUMzQyxRQUFRLEVBQUUsSUFBSSxDQUFDLE1BQU07UUFDckIsWUFBWSxFQUFFLElBQUksQ0FBQyxVQUFVO1FBQzdCLDZCQUE2QixFQUFFLElBQUksQ0FBQywyQkFBMkI7S0FDbEUsRUFBRSxJQUFJLENBQUMsQ0FBQztBQUNiLENBQUM7QUFWRCx3R0FVQztBQWtERDs7R0FFRztBQUNILFNBQWdCLG9EQUFvRCxDQUFDLElBQThELEVBQUUsSUFBaUM7SUFDbEssSUFBSSxHQUFHLE1BQU0sQ0FBQyxZQUFZLENBQUMsU0FBUyxDQUFDLG9CQUFvQixFQUFFLEVBQUUsSUFBSSxJQUFJLEVBQUUsQ0FBQyxDQUFDO0lBQ3pFLE9BQU8sTUFBTSxDQUFDLE9BQU8sQ0FBQyxZQUFZLENBQUMsMkVBQTJFLEVBQUU7UUFDNUcsY0FBYyxFQUFFLElBQUksQ0FBQyxZQUFZO1FBQ2pDLGNBQWMsRUFBRSxJQUFJLENBQUMsWUFBWTtRQUNqQyxtQkFBbUIsRUFBRSxJQUFJLENBQUMsaUJBQWlCO1FBQzNDLFFBQVEsRUFBRSxJQUFJLENBQUMsTUFBTTtRQUNyQixZQUFZLEVBQUUsSUFBSSxDQUFDLFVBQVU7UUFDN0IsNkJBQTZCLEVBQUUsSUFBSSxDQUFDLDJCQUEyQjtLQUNsRSxFQUFFLElBQUksQ0FBQyxDQUFDO0FBQ2IsQ0FBQztBQVZELG9IQVVDIn0=