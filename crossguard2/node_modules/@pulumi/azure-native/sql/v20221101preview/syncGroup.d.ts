import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../../types/input";
import * as outputs from "../../types/output";
import * as enums from "../../types/enums";
/**
 * An Azure SQL Database sync group.
 */
export declare class SyncGroup extends pulumi.CustomResource {
    /**
     * Get an existing SyncGroup resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    static get(name: string, id: pulumi.Input<pulumi.ID>, opts?: pulumi.CustomResourceOptions): SyncGroup;
    /**
     * Returns true if the given object is an instance of SyncGroup.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    static isInstance(obj: any): obj is SyncGroup;
    /**
     * Conflict logging retention period.
     */
    readonly conflictLoggingRetentionInDays: pulumi.Output<number | undefined>;
    /**
     * Conflict resolution policy of the sync group.
     */
    readonly conflictResolutionPolicy: pulumi.Output<string | undefined>;
    /**
     * If conflict logging is enabled.
     */
    readonly enableConflictLogging: pulumi.Output<boolean | undefined>;
    /**
     * User name for the sync group hub database credential.
     */
    readonly hubDatabaseUserName: pulumi.Output<string | undefined>;
    /**
     * Sync interval of the sync group.
     */
    readonly interval: pulumi.Output<number | undefined>;
    /**
     * Last sync time of the sync group.
     */
    readonly lastSyncTime: pulumi.Output<string>;
    /**
     * Resource name.
     */
    readonly name: pulumi.Output<string>;
    /**
     * Private endpoint name of the sync group if use private link connection is enabled.
     */
    readonly privateEndpointName: pulumi.Output<string>;
    /**
     * Sync schema of the sync group.
     */
    readonly schema: pulumi.Output<outputs.sql.v20221101preview.SyncGroupSchemaResponse | undefined>;
    /**
     * The name and capacity of the SKU.
     */
    readonly sku: pulumi.Output<outputs.sql.v20221101preview.SkuResponse | undefined>;
    /**
     * ARM resource id of the sync database in the sync group.
     */
    readonly syncDatabaseId: pulumi.Output<string | undefined>;
    /**
     * Sync state of the sync group.
     */
    readonly syncState: pulumi.Output<string>;
    /**
     * Resource type.
     */
    readonly type: pulumi.Output<string>;
    /**
     * If use private link connection is enabled.
     */
    readonly usePrivateLinkConnection: pulumi.Output<boolean | undefined>;
    /**
     * Create a SyncGroup resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: SyncGroupArgs, opts?: pulumi.CustomResourceOptions);
}
/**
 * The set of arguments for constructing a SyncGroup resource.
 */
export interface SyncGroupArgs {
    /**
     * Conflict logging retention period.
     */
    conflictLoggingRetentionInDays?: pulumi.Input<number>;
    /**
     * Conflict resolution policy of the sync group.
     */
    conflictResolutionPolicy?: pulumi.Input<string | enums.sql.v20221101preview.SyncConflictResolutionPolicy>;
    /**
     * The name of the database on which the sync group is hosted.
     */
    databaseName: pulumi.Input<string>;
    /**
     * If conflict logging is enabled.
     */
    enableConflictLogging?: pulumi.Input<boolean>;
    /**
     * Password for the sync group hub database credential.
     */
    hubDatabasePassword?: pulumi.Input<string>;
    /**
     * User name for the sync group hub database credential.
     */
    hubDatabaseUserName?: pulumi.Input<string>;
    /**
     * Sync interval of the sync group.
     */
    interval?: pulumi.Input<number>;
    /**
     * The name of the resource group that contains the resource. You can obtain this value from the Azure Resource Manager API or the portal.
     */
    resourceGroupName: pulumi.Input<string>;
    /**
     * Sync schema of the sync group.
     */
    schema?: pulumi.Input<inputs.sql.v20221101preview.SyncGroupSchemaArgs>;
    /**
     * The name of the server.
     */
    serverName: pulumi.Input<string>;
    /**
     * The name and capacity of the SKU.
     */
    sku?: pulumi.Input<inputs.sql.v20221101preview.SkuArgs>;
    /**
     * ARM resource id of the sync database in the sync group.
     */
    syncDatabaseId?: pulumi.Input<string>;
    /**
     * The name of the sync group.
     */
    syncGroupName?: pulumi.Input<string>;
    /**
     * If use private link connection is enabled.
     */
    usePrivateLinkConnection?: pulumi.Input<boolean>;
}
