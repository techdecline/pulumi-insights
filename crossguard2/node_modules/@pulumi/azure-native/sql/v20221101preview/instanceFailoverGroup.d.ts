import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../../types/input";
import * as outputs from "../../types/output";
import * as enums from "../../types/enums";
/**
 * An instance failover group.
 */
export declare class InstanceFailoverGroup extends pulumi.CustomResource {
    /**
     * Get an existing InstanceFailoverGroup resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    static get(name: string, id: pulumi.Input<pulumi.ID>, opts?: pulumi.CustomResourceOptions): InstanceFailoverGroup;
    /**
     * Returns true if the given object is an instance of InstanceFailoverGroup.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    static isInstance(obj: any): obj is InstanceFailoverGroup;
    /**
     * List of managed instance pairs in the failover group.
     */
    readonly managedInstancePairs: pulumi.Output<outputs.sql.v20221101preview.ManagedInstancePairInfoResponse[]>;
    /**
     * Resource name.
     */
    readonly name: pulumi.Output<string>;
    /**
     * Partner region information for the failover group.
     */
    readonly partnerRegions: pulumi.Output<outputs.sql.v20221101preview.PartnerRegionInfoResponse[]>;
    /**
     * Read-only endpoint of the failover group instance.
     */
    readonly readOnlyEndpoint: pulumi.Output<outputs.sql.v20221101preview.InstanceFailoverGroupReadOnlyEndpointResponse | undefined>;
    /**
     * Read-write endpoint of the failover group instance.
     */
    readonly readWriteEndpoint: pulumi.Output<outputs.sql.v20221101preview.InstanceFailoverGroupReadWriteEndpointResponse>;
    /**
     * Local replication role of the failover group instance.
     */
    readonly replicationRole: pulumi.Output<string>;
    /**
     * Replication state of the failover group instance.
     */
    readonly replicationState: pulumi.Output<string>;
    /**
     * Type of the geo-secondary instance. Set 'Standby' if the instance is used as a DR option only.
     */
    readonly secondaryType: pulumi.Output<string | undefined>;
    /**
     * Resource type.
     */
    readonly type: pulumi.Output<string>;
    /**
     * Create a InstanceFailoverGroup resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: InstanceFailoverGroupArgs, opts?: pulumi.CustomResourceOptions);
}
/**
 * The set of arguments for constructing a InstanceFailoverGroup resource.
 */
export interface InstanceFailoverGroupArgs {
    /**
     * The name of the failover group.
     */
    failoverGroupName?: pulumi.Input<string>;
    /**
     * The name of the region where the resource is located.
     */
    locationName: pulumi.Input<string>;
    /**
     * List of managed instance pairs in the failover group.
     */
    managedInstancePairs: pulumi.Input<pulumi.Input<inputs.sql.v20221101preview.ManagedInstancePairInfoArgs>[]>;
    /**
     * Partner region information for the failover group.
     */
    partnerRegions: pulumi.Input<pulumi.Input<inputs.sql.v20221101preview.PartnerRegionInfoArgs>[]>;
    /**
     * Read-only endpoint of the failover group instance.
     */
    readOnlyEndpoint?: pulumi.Input<inputs.sql.v20221101preview.InstanceFailoverGroupReadOnlyEndpointArgs>;
    /**
     * Read-write endpoint of the failover group instance.
     */
    readWriteEndpoint: pulumi.Input<inputs.sql.v20221101preview.InstanceFailoverGroupReadWriteEndpointArgs>;
    /**
     * The name of the resource group that contains the resource. You can obtain this value from the Azure Resource Manager API or the portal.
     */
    resourceGroupName: pulumi.Input<string>;
    /**
     * Type of the geo-secondary instance. Set 'Standby' if the instance is used as a DR option only.
     */
    secondaryType?: pulumi.Input<string | enums.sql.v20221101preview.SecondaryInstanceType>;
}
