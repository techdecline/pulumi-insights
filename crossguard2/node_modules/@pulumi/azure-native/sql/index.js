"use strict";
// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __exportStar = (this && this.__exportStar) || function(m, exports) {
    for (var p in m) if (p !== "default" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.getEncryptionProtectorOutput = exports.getEncryptionProtector = exports.getElasticPoolOutput = exports.getElasticPool = exports.getDistributedAvailabilityGroupOutput = exports.getDistributedAvailabilityGroup = exports.getDisasterRecoveryConfigurationOutput = exports.getDisasterRecoveryConfiguration = exports.getDatabaseVulnerabilityAssessmentRuleBaselineOutput = exports.getDatabaseVulnerabilityAssessmentRuleBaseline = exports.getDatabaseVulnerabilityAssessmentOutput = exports.getDatabaseVulnerabilityAssessment = exports.getDatabaseThreatDetectionPolicyOutput = exports.getDatabaseThreatDetectionPolicy = exports.getDatabaseSqlVulnerabilityAssessmentRuleBaselineOutput = exports.getDatabaseSqlVulnerabilityAssessmentRuleBaseline = exports.getDatabaseSecurityAlertPolicyOutput = exports.getDatabaseSecurityAlertPolicy = exports.getDatabaseBlobAuditingPolicyOutput = exports.getDatabaseBlobAuditingPolicy = exports.getDatabaseAdvisorOutput = exports.getDatabaseAdvisor = exports.getDatabaseOutput = exports.getDatabase = exports.getDataMaskingPolicyOutput = exports.getDataMaskingPolicy = exports.getBackupShortTermRetentionPolicyOutput = exports.getBackupShortTermRetentionPolicy = exports.getBackupLongTermRetentionPolicyOutput = exports.getBackupLongTermRetentionPolicy = exports.GeoBackupPolicy = exports.FirewallRule = exports.FailoverGroup = exports.ExtendedServerBlobAuditingPolicy = exports.ExtendedDatabaseBlobAuditingPolicy = exports.EncryptionProtector = exports.ElasticPool = exports.DistributedAvailabilityGroup = exports.DisasterRecoveryConfiguration = exports.DatabaseVulnerabilityAssessmentRuleBaseline = exports.DatabaseVulnerabilityAssessment = exports.DatabaseThreatDetectionPolicy = exports.DatabaseSqlVulnerabilityAssessmentRuleBaseline = exports.DatabaseSecurityAlertPolicy = exports.DatabaseBlobAuditingPolicy = exports.DatabaseAdvisor = exports.Database = exports.DataMaskingPolicy = exports.BackupShortTermRetentionPolicy = exports.BackupLongTermRetentionPolicy = void 0;
exports.getManagedInstancePrivateEndpointConnectionOutput = exports.getManagedInstancePrivateEndpointConnection = exports.getManagedInstanceLongTermRetentionPolicyOutput = exports.getManagedInstanceLongTermRetentionPolicy = exports.getManagedInstanceKeyOutput = exports.getManagedInstanceKey = exports.getManagedInstanceAzureADOnlyAuthenticationOutput = exports.getManagedInstanceAzureADOnlyAuthentication = exports.getManagedInstanceAdministratorOutput = exports.getManagedInstanceAdministrator = exports.getManagedInstanceOutput = exports.getManagedInstance = exports.getManagedDatabaseVulnerabilityAssessmentRuleBaselineOutput = exports.getManagedDatabaseVulnerabilityAssessmentRuleBaseline = exports.getManagedDatabaseVulnerabilityAssessmentOutput = exports.getManagedDatabaseVulnerabilityAssessment = exports.getManagedDatabaseSensitivityLabelOutput = exports.getManagedDatabaseSensitivityLabel = exports.getManagedDatabaseOutput = exports.getManagedDatabase = exports.getLongTermRetentionPolicyOutput = exports.getLongTermRetentionPolicy = exports.getJobTargetGroupOutput = exports.getJobTargetGroup = exports.getJobStepOutput = exports.getJobStep = exports.getJobPrivateEndpointOutput = exports.getJobPrivateEndpoint = exports.getJobCredentialOutput = exports.getJobCredential = exports.getJobAgentOutput = exports.getJobAgent = exports.getJobOutput = exports.getJob = exports.getInstancePoolOutput = exports.getInstancePool = exports.getInstanceFailoverGroupOutput = exports.getInstanceFailoverGroup = exports.getIPv6FirewallRuleOutput = exports.getIPv6FirewallRule = exports.getGeoBackupPolicyOutput = exports.getGeoBackupPolicy = exports.getFirewallRuleOutput = exports.getFirewallRule = exports.getFailoverGroupOutput = exports.getFailoverGroup = exports.getExtendedServerBlobAuditingPolicyOutput = exports.getExtendedServerBlobAuditingPolicy = exports.getExtendedDatabaseBlobAuditingPolicyOutput = exports.getExtendedDatabaseBlobAuditingPolicy = void 0;
exports.getTransparentDataEncryptionOutput = exports.getTransparentDataEncryption = exports.getSyncMemberOutput = exports.getSyncMember = exports.getSyncGroupOutput = exports.getSyncGroup = exports.getSyncAgentOutput = exports.getSyncAgent = exports.getStartStopManagedInstanceScheduleOutput = exports.getStartStopManagedInstanceSchedule = exports.getSqlVulnerabilityAssessmentsSettingOutput = exports.getSqlVulnerabilityAssessmentsSetting = exports.getSqlVulnerabilityAssessmentRuleBaselineOutput = exports.getSqlVulnerabilityAssessmentRuleBaseline = exports.getServerVulnerabilityAssessmentOutput = exports.getServerVulnerabilityAssessment = exports.getServerTrustGroupOutput = exports.getServerTrustGroup = exports.getServerTrustCertificateOutput = exports.getServerTrustCertificate = exports.getServerSecurityAlertPolicyOutput = exports.getServerSecurityAlertPolicy = exports.getServerKeyOutput = exports.getServerKey = exports.getServerDnsAliasOutput = exports.getServerDnsAlias = exports.getServerCommunicationLinkOutput = exports.getServerCommunicationLink = exports.getServerBlobAuditingPolicyOutput = exports.getServerBlobAuditingPolicy = exports.getServerAzureADOnlyAuthenticationOutput = exports.getServerAzureADOnlyAuthentication = exports.getServerAzureADAdministratorOutput = exports.getServerAzureADAdministrator = exports.getServerAdvisorOutput = exports.getServerAdvisor = exports.getServerOutput = exports.getServer = exports.getSensitivityLabelOutput = exports.getSensitivityLabel = exports.getReplicationLinkOutput = exports.getReplicationLink = exports.getPrivateEndpointConnectionOutput = exports.getPrivateEndpointConnection = exports.getOutboundFirewallRuleOutput = exports.getOutboundFirewallRule = exports.getManagedServerDnsAliasOutput = exports.getManagedServerDnsAlias = exports.getManagedInstanceVulnerabilityAssessmentOutput = exports.getManagedInstanceVulnerabilityAssessment = void 0;
exports.SyncMember = exports.SyncGroup = exports.SyncAgent = exports.StartStopManagedInstanceSchedule = exports.SqlVulnerabilityAssessmentsSetting = exports.SqlVulnerabilityAssessmentRuleBaseline = exports.ServerVulnerabilityAssessment = exports.ServerTrustGroup = exports.ServerTrustCertificate = exports.ServerSecurityAlertPolicy = exports.ServerKey = exports.ServerDnsAlias = exports.ServerCommunicationLink = exports.ServerBlobAuditingPolicy = exports.ServerAzureADOnlyAuthentication = exports.ServerAzureADAdministrator = exports.ServerAdvisor = exports.Server = exports.SensitivityLabel = exports.ReplicationLink = exports.PrivateEndpointConnection = exports.OutboundFirewallRule = exports.ManagedServerDnsAlias = exports.ManagedInstanceVulnerabilityAssessment = exports.ManagedInstancePrivateEndpointConnection = exports.ManagedInstanceLongTermRetentionPolicy = exports.ManagedInstanceKey = exports.ManagedInstanceAzureADOnlyAuthentication = exports.ManagedInstanceAdministrator = exports.ManagedInstance = exports.ManagedDatabaseVulnerabilityAssessmentRuleBaseline = exports.ManagedDatabaseVulnerabilityAssessment = exports.ManagedDatabaseSensitivityLabel = exports.ManagedDatabase = exports.LongTermRetentionPolicy = exports.JobTargetGroup = exports.JobStep = exports.JobPrivateEndpoint = exports.JobCredential = exports.JobAgent = exports.Job = exports.IPv6FirewallRule = exports.InstancePool = exports.InstanceFailoverGroup = exports.getWorkloadGroupOutput = exports.getWorkloadGroup = exports.getWorkloadClassifierOutput = exports.getWorkloadClassifier = exports.getVirtualNetworkRuleOutput = exports.getVirtualNetworkRule = void 0;
exports.v20240501preview = exports.v20230801preview = exports.v20230501preview = exports.v20230201preview = exports.v20221101preview = exports.v20211101 = exports.v20210201preview = exports.v20200801preview = exports.v20200202preview = exports.v20190601preview = exports.v20180601preview = exports.v20170301preview = exports.v20150501preview = exports.v20140401 = exports.WorkloadGroup = exports.WorkloadClassifier = exports.VirtualNetworkRule = exports.TransparentDataEncryption = void 0;
const pulumi = require("@pulumi/pulumi");
const utilities = require("../utilities");
exports.BackupLongTermRetentionPolicy = null;
utilities.lazyLoad(exports, ["BackupLongTermRetentionPolicy"], () => require("./backupLongTermRetentionPolicy"));
exports.BackupShortTermRetentionPolicy = null;
utilities.lazyLoad(exports, ["BackupShortTermRetentionPolicy"], () => require("./backupShortTermRetentionPolicy"));
exports.DataMaskingPolicy = null;
utilities.lazyLoad(exports, ["DataMaskingPolicy"], () => require("./dataMaskingPolicy"));
exports.Database = null;
utilities.lazyLoad(exports, ["Database"], () => require("./database"));
exports.DatabaseAdvisor = null;
utilities.lazyLoad(exports, ["DatabaseAdvisor"], () => require("./databaseAdvisor"));
exports.DatabaseBlobAuditingPolicy = null;
utilities.lazyLoad(exports, ["DatabaseBlobAuditingPolicy"], () => require("./databaseBlobAuditingPolicy"));
exports.DatabaseSecurityAlertPolicy = null;
utilities.lazyLoad(exports, ["DatabaseSecurityAlertPolicy"], () => require("./databaseSecurityAlertPolicy"));
exports.DatabaseSqlVulnerabilityAssessmentRuleBaseline = null;
utilities.lazyLoad(exports, ["DatabaseSqlVulnerabilityAssessmentRuleBaseline"], () => require("./databaseSqlVulnerabilityAssessmentRuleBaseline"));
exports.DatabaseThreatDetectionPolicy = null;
utilities.lazyLoad(exports, ["DatabaseThreatDetectionPolicy"], () => require("./databaseThreatDetectionPolicy"));
exports.DatabaseVulnerabilityAssessment = null;
utilities.lazyLoad(exports, ["DatabaseVulnerabilityAssessment"], () => require("./databaseVulnerabilityAssessment"));
exports.DatabaseVulnerabilityAssessmentRuleBaseline = null;
utilities.lazyLoad(exports, ["DatabaseVulnerabilityAssessmentRuleBaseline"], () => require("./databaseVulnerabilityAssessmentRuleBaseline"));
exports.DisasterRecoveryConfiguration = null;
utilities.lazyLoad(exports, ["DisasterRecoveryConfiguration"], () => require("./disasterRecoveryConfiguration"));
exports.DistributedAvailabilityGroup = null;
utilities.lazyLoad(exports, ["DistributedAvailabilityGroup"], () => require("./distributedAvailabilityGroup"));
exports.ElasticPool = null;
utilities.lazyLoad(exports, ["ElasticPool"], () => require("./elasticPool"));
exports.EncryptionProtector = null;
utilities.lazyLoad(exports, ["EncryptionProtector"], () => require("./encryptionProtector"));
exports.ExtendedDatabaseBlobAuditingPolicy = null;
utilities.lazyLoad(exports, ["ExtendedDatabaseBlobAuditingPolicy"], () => require("./extendedDatabaseBlobAuditingPolicy"));
exports.ExtendedServerBlobAuditingPolicy = null;
utilities.lazyLoad(exports, ["ExtendedServerBlobAuditingPolicy"], () => require("./extendedServerBlobAuditingPolicy"));
exports.FailoverGroup = null;
utilities.lazyLoad(exports, ["FailoverGroup"], () => require("./failoverGroup"));
exports.FirewallRule = null;
utilities.lazyLoad(exports, ["FirewallRule"], () => require("./firewallRule"));
exports.GeoBackupPolicy = null;
utilities.lazyLoad(exports, ["GeoBackupPolicy"], () => require("./geoBackupPolicy"));
exports.getBackupLongTermRetentionPolicy = null;
exports.getBackupLongTermRetentionPolicyOutput = null;
utilities.lazyLoad(exports, ["getBackupLongTermRetentionPolicy", "getBackupLongTermRetentionPolicyOutput"], () => require("./getBackupLongTermRetentionPolicy"));
exports.getBackupShortTermRetentionPolicy = null;
exports.getBackupShortTermRetentionPolicyOutput = null;
utilities.lazyLoad(exports, ["getBackupShortTermRetentionPolicy", "getBackupShortTermRetentionPolicyOutput"], () => require("./getBackupShortTermRetentionPolicy"));
exports.getDataMaskingPolicy = null;
exports.getDataMaskingPolicyOutput = null;
utilities.lazyLoad(exports, ["getDataMaskingPolicy", "getDataMaskingPolicyOutput"], () => require("./getDataMaskingPolicy"));
exports.getDatabase = null;
exports.getDatabaseOutput = null;
utilities.lazyLoad(exports, ["getDatabase", "getDatabaseOutput"], () => require("./getDatabase"));
exports.getDatabaseAdvisor = null;
exports.getDatabaseAdvisorOutput = null;
utilities.lazyLoad(exports, ["getDatabaseAdvisor", "getDatabaseAdvisorOutput"], () => require("./getDatabaseAdvisor"));
exports.getDatabaseBlobAuditingPolicy = null;
exports.getDatabaseBlobAuditingPolicyOutput = null;
utilities.lazyLoad(exports, ["getDatabaseBlobAuditingPolicy", "getDatabaseBlobAuditingPolicyOutput"], () => require("./getDatabaseBlobAuditingPolicy"));
exports.getDatabaseSecurityAlertPolicy = null;
exports.getDatabaseSecurityAlertPolicyOutput = null;
utilities.lazyLoad(exports, ["getDatabaseSecurityAlertPolicy", "getDatabaseSecurityAlertPolicyOutput"], () => require("./getDatabaseSecurityAlertPolicy"));
exports.getDatabaseSqlVulnerabilityAssessmentRuleBaseline = null;
exports.getDatabaseSqlVulnerabilityAssessmentRuleBaselineOutput = null;
utilities.lazyLoad(exports, ["getDatabaseSqlVulnerabilityAssessmentRuleBaseline", "getDatabaseSqlVulnerabilityAssessmentRuleBaselineOutput"], () => require("./getDatabaseSqlVulnerabilityAssessmentRuleBaseline"));
exports.getDatabaseThreatDetectionPolicy = null;
exports.getDatabaseThreatDetectionPolicyOutput = null;
utilities.lazyLoad(exports, ["getDatabaseThreatDetectionPolicy", "getDatabaseThreatDetectionPolicyOutput"], () => require("./getDatabaseThreatDetectionPolicy"));
exports.getDatabaseVulnerabilityAssessment = null;
exports.getDatabaseVulnerabilityAssessmentOutput = null;
utilities.lazyLoad(exports, ["getDatabaseVulnerabilityAssessment", "getDatabaseVulnerabilityAssessmentOutput"], () => require("./getDatabaseVulnerabilityAssessment"));
exports.getDatabaseVulnerabilityAssessmentRuleBaseline = null;
exports.getDatabaseVulnerabilityAssessmentRuleBaselineOutput = null;
utilities.lazyLoad(exports, ["getDatabaseVulnerabilityAssessmentRuleBaseline", "getDatabaseVulnerabilityAssessmentRuleBaselineOutput"], () => require("./getDatabaseVulnerabilityAssessmentRuleBaseline"));
exports.getDisasterRecoveryConfiguration = null;
exports.getDisasterRecoveryConfigurationOutput = null;
utilities.lazyLoad(exports, ["getDisasterRecoveryConfiguration", "getDisasterRecoveryConfigurationOutput"], () => require("./getDisasterRecoveryConfiguration"));
exports.getDistributedAvailabilityGroup = null;
exports.getDistributedAvailabilityGroupOutput = null;
utilities.lazyLoad(exports, ["getDistributedAvailabilityGroup", "getDistributedAvailabilityGroupOutput"], () => require("./getDistributedAvailabilityGroup"));
exports.getElasticPool = null;
exports.getElasticPoolOutput = null;
utilities.lazyLoad(exports, ["getElasticPool", "getElasticPoolOutput"], () => require("./getElasticPool"));
exports.getEncryptionProtector = null;
exports.getEncryptionProtectorOutput = null;
utilities.lazyLoad(exports, ["getEncryptionProtector", "getEncryptionProtectorOutput"], () => require("./getEncryptionProtector"));
exports.getExtendedDatabaseBlobAuditingPolicy = null;
exports.getExtendedDatabaseBlobAuditingPolicyOutput = null;
utilities.lazyLoad(exports, ["getExtendedDatabaseBlobAuditingPolicy", "getExtendedDatabaseBlobAuditingPolicyOutput"], () => require("./getExtendedDatabaseBlobAuditingPolicy"));
exports.getExtendedServerBlobAuditingPolicy = null;
exports.getExtendedServerBlobAuditingPolicyOutput = null;
utilities.lazyLoad(exports, ["getExtendedServerBlobAuditingPolicy", "getExtendedServerBlobAuditingPolicyOutput"], () => require("./getExtendedServerBlobAuditingPolicy"));
exports.getFailoverGroup = null;
exports.getFailoverGroupOutput = null;
utilities.lazyLoad(exports, ["getFailoverGroup", "getFailoverGroupOutput"], () => require("./getFailoverGroup"));
exports.getFirewallRule = null;
exports.getFirewallRuleOutput = null;
utilities.lazyLoad(exports, ["getFirewallRule", "getFirewallRuleOutput"], () => require("./getFirewallRule"));
exports.getGeoBackupPolicy = null;
exports.getGeoBackupPolicyOutput = null;
utilities.lazyLoad(exports, ["getGeoBackupPolicy", "getGeoBackupPolicyOutput"], () => require("./getGeoBackupPolicy"));
exports.getIPv6FirewallRule = null;
exports.getIPv6FirewallRuleOutput = null;
utilities.lazyLoad(exports, ["getIPv6FirewallRule", "getIPv6FirewallRuleOutput"], () => require("./getIPv6FirewallRule"));
exports.getInstanceFailoverGroup = null;
exports.getInstanceFailoverGroupOutput = null;
utilities.lazyLoad(exports, ["getInstanceFailoverGroup", "getInstanceFailoverGroupOutput"], () => require("./getInstanceFailoverGroup"));
exports.getInstancePool = null;
exports.getInstancePoolOutput = null;
utilities.lazyLoad(exports, ["getInstancePool", "getInstancePoolOutput"], () => require("./getInstancePool"));
exports.getJob = null;
exports.getJobOutput = null;
utilities.lazyLoad(exports, ["getJob", "getJobOutput"], () => require("./getJob"));
exports.getJobAgent = null;
exports.getJobAgentOutput = null;
utilities.lazyLoad(exports, ["getJobAgent", "getJobAgentOutput"], () => require("./getJobAgent"));
exports.getJobCredential = null;
exports.getJobCredentialOutput = null;
utilities.lazyLoad(exports, ["getJobCredential", "getJobCredentialOutput"], () => require("./getJobCredential"));
exports.getJobPrivateEndpoint = null;
exports.getJobPrivateEndpointOutput = null;
utilities.lazyLoad(exports, ["getJobPrivateEndpoint", "getJobPrivateEndpointOutput"], () => require("./getJobPrivateEndpoint"));
exports.getJobStep = null;
exports.getJobStepOutput = null;
utilities.lazyLoad(exports, ["getJobStep", "getJobStepOutput"], () => require("./getJobStep"));
exports.getJobTargetGroup = null;
exports.getJobTargetGroupOutput = null;
utilities.lazyLoad(exports, ["getJobTargetGroup", "getJobTargetGroupOutput"], () => require("./getJobTargetGroup"));
exports.getLongTermRetentionPolicy = null;
exports.getLongTermRetentionPolicyOutput = null;
utilities.lazyLoad(exports, ["getLongTermRetentionPolicy", "getLongTermRetentionPolicyOutput"], () => require("./getLongTermRetentionPolicy"));
exports.getManagedDatabase = null;
exports.getManagedDatabaseOutput = null;
utilities.lazyLoad(exports, ["getManagedDatabase", "getManagedDatabaseOutput"], () => require("./getManagedDatabase"));
exports.getManagedDatabaseSensitivityLabel = null;
exports.getManagedDatabaseSensitivityLabelOutput = null;
utilities.lazyLoad(exports, ["getManagedDatabaseSensitivityLabel", "getManagedDatabaseSensitivityLabelOutput"], () => require("./getManagedDatabaseSensitivityLabel"));
exports.getManagedDatabaseVulnerabilityAssessment = null;
exports.getManagedDatabaseVulnerabilityAssessmentOutput = null;
utilities.lazyLoad(exports, ["getManagedDatabaseVulnerabilityAssessment", "getManagedDatabaseVulnerabilityAssessmentOutput"], () => require("./getManagedDatabaseVulnerabilityAssessment"));
exports.getManagedDatabaseVulnerabilityAssessmentRuleBaseline = null;
exports.getManagedDatabaseVulnerabilityAssessmentRuleBaselineOutput = null;
utilities.lazyLoad(exports, ["getManagedDatabaseVulnerabilityAssessmentRuleBaseline", "getManagedDatabaseVulnerabilityAssessmentRuleBaselineOutput"], () => require("./getManagedDatabaseVulnerabilityAssessmentRuleBaseline"));
exports.getManagedInstance = null;
exports.getManagedInstanceOutput = null;
utilities.lazyLoad(exports, ["getManagedInstance", "getManagedInstanceOutput"], () => require("./getManagedInstance"));
exports.getManagedInstanceAdministrator = null;
exports.getManagedInstanceAdministratorOutput = null;
utilities.lazyLoad(exports, ["getManagedInstanceAdministrator", "getManagedInstanceAdministratorOutput"], () => require("./getManagedInstanceAdministrator"));
exports.getManagedInstanceAzureADOnlyAuthentication = null;
exports.getManagedInstanceAzureADOnlyAuthenticationOutput = null;
utilities.lazyLoad(exports, ["getManagedInstanceAzureADOnlyAuthentication", "getManagedInstanceAzureADOnlyAuthenticationOutput"], () => require("./getManagedInstanceAzureADOnlyAuthentication"));
exports.getManagedInstanceKey = null;
exports.getManagedInstanceKeyOutput = null;
utilities.lazyLoad(exports, ["getManagedInstanceKey", "getManagedInstanceKeyOutput"], () => require("./getManagedInstanceKey"));
exports.getManagedInstanceLongTermRetentionPolicy = null;
exports.getManagedInstanceLongTermRetentionPolicyOutput = null;
utilities.lazyLoad(exports, ["getManagedInstanceLongTermRetentionPolicy", "getManagedInstanceLongTermRetentionPolicyOutput"], () => require("./getManagedInstanceLongTermRetentionPolicy"));
exports.getManagedInstancePrivateEndpointConnection = null;
exports.getManagedInstancePrivateEndpointConnectionOutput = null;
utilities.lazyLoad(exports, ["getManagedInstancePrivateEndpointConnection", "getManagedInstancePrivateEndpointConnectionOutput"], () => require("./getManagedInstancePrivateEndpointConnection"));
exports.getManagedInstanceVulnerabilityAssessment = null;
exports.getManagedInstanceVulnerabilityAssessmentOutput = null;
utilities.lazyLoad(exports, ["getManagedInstanceVulnerabilityAssessment", "getManagedInstanceVulnerabilityAssessmentOutput"], () => require("./getManagedInstanceVulnerabilityAssessment"));
exports.getManagedServerDnsAlias = null;
exports.getManagedServerDnsAliasOutput = null;
utilities.lazyLoad(exports, ["getManagedServerDnsAlias", "getManagedServerDnsAliasOutput"], () => require("./getManagedServerDnsAlias"));
exports.getOutboundFirewallRule = null;
exports.getOutboundFirewallRuleOutput = null;
utilities.lazyLoad(exports, ["getOutboundFirewallRule", "getOutboundFirewallRuleOutput"], () => require("./getOutboundFirewallRule"));
exports.getPrivateEndpointConnection = null;
exports.getPrivateEndpointConnectionOutput = null;
utilities.lazyLoad(exports, ["getPrivateEndpointConnection", "getPrivateEndpointConnectionOutput"], () => require("./getPrivateEndpointConnection"));
exports.getReplicationLink = null;
exports.getReplicationLinkOutput = null;
utilities.lazyLoad(exports, ["getReplicationLink", "getReplicationLinkOutput"], () => require("./getReplicationLink"));
exports.getSensitivityLabel = null;
exports.getSensitivityLabelOutput = null;
utilities.lazyLoad(exports, ["getSensitivityLabel", "getSensitivityLabelOutput"], () => require("./getSensitivityLabel"));
exports.getServer = null;
exports.getServerOutput = null;
utilities.lazyLoad(exports, ["getServer", "getServerOutput"], () => require("./getServer"));
exports.getServerAdvisor = null;
exports.getServerAdvisorOutput = null;
utilities.lazyLoad(exports, ["getServerAdvisor", "getServerAdvisorOutput"], () => require("./getServerAdvisor"));
exports.getServerAzureADAdministrator = null;
exports.getServerAzureADAdministratorOutput = null;
utilities.lazyLoad(exports, ["getServerAzureADAdministrator", "getServerAzureADAdministratorOutput"], () => require("./getServerAzureADAdministrator"));
exports.getServerAzureADOnlyAuthentication = null;
exports.getServerAzureADOnlyAuthenticationOutput = null;
utilities.lazyLoad(exports, ["getServerAzureADOnlyAuthentication", "getServerAzureADOnlyAuthenticationOutput"], () => require("./getServerAzureADOnlyAuthentication"));
exports.getServerBlobAuditingPolicy = null;
exports.getServerBlobAuditingPolicyOutput = null;
utilities.lazyLoad(exports, ["getServerBlobAuditingPolicy", "getServerBlobAuditingPolicyOutput"], () => require("./getServerBlobAuditingPolicy"));
exports.getServerCommunicationLink = null;
exports.getServerCommunicationLinkOutput = null;
utilities.lazyLoad(exports, ["getServerCommunicationLink", "getServerCommunicationLinkOutput"], () => require("./getServerCommunicationLink"));
exports.getServerDnsAlias = null;
exports.getServerDnsAliasOutput = null;
utilities.lazyLoad(exports, ["getServerDnsAlias", "getServerDnsAliasOutput"], () => require("./getServerDnsAlias"));
exports.getServerKey = null;
exports.getServerKeyOutput = null;
utilities.lazyLoad(exports, ["getServerKey", "getServerKeyOutput"], () => require("./getServerKey"));
exports.getServerSecurityAlertPolicy = null;
exports.getServerSecurityAlertPolicyOutput = null;
utilities.lazyLoad(exports, ["getServerSecurityAlertPolicy", "getServerSecurityAlertPolicyOutput"], () => require("./getServerSecurityAlertPolicy"));
exports.getServerTrustCertificate = null;
exports.getServerTrustCertificateOutput = null;
utilities.lazyLoad(exports, ["getServerTrustCertificate", "getServerTrustCertificateOutput"], () => require("./getServerTrustCertificate"));
exports.getServerTrustGroup = null;
exports.getServerTrustGroupOutput = null;
utilities.lazyLoad(exports, ["getServerTrustGroup", "getServerTrustGroupOutput"], () => require("./getServerTrustGroup"));
exports.getServerVulnerabilityAssessment = null;
exports.getServerVulnerabilityAssessmentOutput = null;
utilities.lazyLoad(exports, ["getServerVulnerabilityAssessment", "getServerVulnerabilityAssessmentOutput"], () => require("./getServerVulnerabilityAssessment"));
exports.getSqlVulnerabilityAssessmentRuleBaseline = null;
exports.getSqlVulnerabilityAssessmentRuleBaselineOutput = null;
utilities.lazyLoad(exports, ["getSqlVulnerabilityAssessmentRuleBaseline", "getSqlVulnerabilityAssessmentRuleBaselineOutput"], () => require("./getSqlVulnerabilityAssessmentRuleBaseline"));
exports.getSqlVulnerabilityAssessmentsSetting = null;
exports.getSqlVulnerabilityAssessmentsSettingOutput = null;
utilities.lazyLoad(exports, ["getSqlVulnerabilityAssessmentsSetting", "getSqlVulnerabilityAssessmentsSettingOutput"], () => require("./getSqlVulnerabilityAssessmentsSetting"));
exports.getStartStopManagedInstanceSchedule = null;
exports.getStartStopManagedInstanceScheduleOutput = null;
utilities.lazyLoad(exports, ["getStartStopManagedInstanceSchedule", "getStartStopManagedInstanceScheduleOutput"], () => require("./getStartStopManagedInstanceSchedule"));
exports.getSyncAgent = null;
exports.getSyncAgentOutput = null;
utilities.lazyLoad(exports, ["getSyncAgent", "getSyncAgentOutput"], () => require("./getSyncAgent"));
exports.getSyncGroup = null;
exports.getSyncGroupOutput = null;
utilities.lazyLoad(exports, ["getSyncGroup", "getSyncGroupOutput"], () => require("./getSyncGroup"));
exports.getSyncMember = null;
exports.getSyncMemberOutput = null;
utilities.lazyLoad(exports, ["getSyncMember", "getSyncMemberOutput"], () => require("./getSyncMember"));
exports.getTransparentDataEncryption = null;
exports.getTransparentDataEncryptionOutput = null;
utilities.lazyLoad(exports, ["getTransparentDataEncryption", "getTransparentDataEncryptionOutput"], () => require("./getTransparentDataEncryption"));
exports.getVirtualNetworkRule = null;
exports.getVirtualNetworkRuleOutput = null;
utilities.lazyLoad(exports, ["getVirtualNetworkRule", "getVirtualNetworkRuleOutput"], () => require("./getVirtualNetworkRule"));
exports.getWorkloadClassifier = null;
exports.getWorkloadClassifierOutput = null;
utilities.lazyLoad(exports, ["getWorkloadClassifier", "getWorkloadClassifierOutput"], () => require("./getWorkloadClassifier"));
exports.getWorkloadGroup = null;
exports.getWorkloadGroupOutput = null;
utilities.lazyLoad(exports, ["getWorkloadGroup", "getWorkloadGroupOutput"], () => require("./getWorkloadGroup"));
exports.InstanceFailoverGroup = null;
utilities.lazyLoad(exports, ["InstanceFailoverGroup"], () => require("./instanceFailoverGroup"));
exports.InstancePool = null;
utilities.lazyLoad(exports, ["InstancePool"], () => require("./instancePool"));
exports.IPv6FirewallRule = null;
utilities.lazyLoad(exports, ["IPv6FirewallRule"], () => require("./ipv6FirewallRule"));
exports.Job = null;
utilities.lazyLoad(exports, ["Job"], () => require("./job"));
exports.JobAgent = null;
utilities.lazyLoad(exports, ["JobAgent"], () => require("./jobAgent"));
exports.JobCredential = null;
utilities.lazyLoad(exports, ["JobCredential"], () => require("./jobCredential"));
exports.JobPrivateEndpoint = null;
utilities.lazyLoad(exports, ["JobPrivateEndpoint"], () => require("./jobPrivateEndpoint"));
exports.JobStep = null;
utilities.lazyLoad(exports, ["JobStep"], () => require("./jobStep"));
exports.JobTargetGroup = null;
utilities.lazyLoad(exports, ["JobTargetGroup"], () => require("./jobTargetGroup"));
exports.LongTermRetentionPolicy = null;
utilities.lazyLoad(exports, ["LongTermRetentionPolicy"], () => require("./longTermRetentionPolicy"));
exports.ManagedDatabase = null;
utilities.lazyLoad(exports, ["ManagedDatabase"], () => require("./managedDatabase"));
exports.ManagedDatabaseSensitivityLabel = null;
utilities.lazyLoad(exports, ["ManagedDatabaseSensitivityLabel"], () => require("./managedDatabaseSensitivityLabel"));
exports.ManagedDatabaseVulnerabilityAssessment = null;
utilities.lazyLoad(exports, ["ManagedDatabaseVulnerabilityAssessment"], () => require("./managedDatabaseVulnerabilityAssessment"));
exports.ManagedDatabaseVulnerabilityAssessmentRuleBaseline = null;
utilities.lazyLoad(exports, ["ManagedDatabaseVulnerabilityAssessmentRuleBaseline"], () => require("./managedDatabaseVulnerabilityAssessmentRuleBaseline"));
exports.ManagedInstance = null;
utilities.lazyLoad(exports, ["ManagedInstance"], () => require("./managedInstance"));
exports.ManagedInstanceAdministrator = null;
utilities.lazyLoad(exports, ["ManagedInstanceAdministrator"], () => require("./managedInstanceAdministrator"));
exports.ManagedInstanceAzureADOnlyAuthentication = null;
utilities.lazyLoad(exports, ["ManagedInstanceAzureADOnlyAuthentication"], () => require("./managedInstanceAzureADOnlyAuthentication"));
exports.ManagedInstanceKey = null;
utilities.lazyLoad(exports, ["ManagedInstanceKey"], () => require("./managedInstanceKey"));
exports.ManagedInstanceLongTermRetentionPolicy = null;
utilities.lazyLoad(exports, ["ManagedInstanceLongTermRetentionPolicy"], () => require("./managedInstanceLongTermRetentionPolicy"));
exports.ManagedInstancePrivateEndpointConnection = null;
utilities.lazyLoad(exports, ["ManagedInstancePrivateEndpointConnection"], () => require("./managedInstancePrivateEndpointConnection"));
exports.ManagedInstanceVulnerabilityAssessment = null;
utilities.lazyLoad(exports, ["ManagedInstanceVulnerabilityAssessment"], () => require("./managedInstanceVulnerabilityAssessment"));
exports.ManagedServerDnsAlias = null;
utilities.lazyLoad(exports, ["ManagedServerDnsAlias"], () => require("./managedServerDnsAlias"));
exports.OutboundFirewallRule = null;
utilities.lazyLoad(exports, ["OutboundFirewallRule"], () => require("./outboundFirewallRule"));
exports.PrivateEndpointConnection = null;
utilities.lazyLoad(exports, ["PrivateEndpointConnection"], () => require("./privateEndpointConnection"));
exports.ReplicationLink = null;
utilities.lazyLoad(exports, ["ReplicationLink"], () => require("./replicationLink"));
exports.SensitivityLabel = null;
utilities.lazyLoad(exports, ["SensitivityLabel"], () => require("./sensitivityLabel"));
exports.Server = null;
utilities.lazyLoad(exports, ["Server"], () => require("./server"));
exports.ServerAdvisor = null;
utilities.lazyLoad(exports, ["ServerAdvisor"], () => require("./serverAdvisor"));
exports.ServerAzureADAdministrator = null;
utilities.lazyLoad(exports, ["ServerAzureADAdministrator"], () => require("./serverAzureADAdministrator"));
exports.ServerAzureADOnlyAuthentication = null;
utilities.lazyLoad(exports, ["ServerAzureADOnlyAuthentication"], () => require("./serverAzureADOnlyAuthentication"));
exports.ServerBlobAuditingPolicy = null;
utilities.lazyLoad(exports, ["ServerBlobAuditingPolicy"], () => require("./serverBlobAuditingPolicy"));
exports.ServerCommunicationLink = null;
utilities.lazyLoad(exports, ["ServerCommunicationLink"], () => require("./serverCommunicationLink"));
exports.ServerDnsAlias = null;
utilities.lazyLoad(exports, ["ServerDnsAlias"], () => require("./serverDnsAlias"));
exports.ServerKey = null;
utilities.lazyLoad(exports, ["ServerKey"], () => require("./serverKey"));
exports.ServerSecurityAlertPolicy = null;
utilities.lazyLoad(exports, ["ServerSecurityAlertPolicy"], () => require("./serverSecurityAlertPolicy"));
exports.ServerTrustCertificate = null;
utilities.lazyLoad(exports, ["ServerTrustCertificate"], () => require("./serverTrustCertificate"));
exports.ServerTrustGroup = null;
utilities.lazyLoad(exports, ["ServerTrustGroup"], () => require("./serverTrustGroup"));
exports.ServerVulnerabilityAssessment = null;
utilities.lazyLoad(exports, ["ServerVulnerabilityAssessment"], () => require("./serverVulnerabilityAssessment"));
exports.SqlVulnerabilityAssessmentRuleBaseline = null;
utilities.lazyLoad(exports, ["SqlVulnerabilityAssessmentRuleBaseline"], () => require("./sqlVulnerabilityAssessmentRuleBaseline"));
exports.SqlVulnerabilityAssessmentsSetting = null;
utilities.lazyLoad(exports, ["SqlVulnerabilityAssessmentsSetting"], () => require("./sqlVulnerabilityAssessmentsSetting"));
exports.StartStopManagedInstanceSchedule = null;
utilities.lazyLoad(exports, ["StartStopManagedInstanceSchedule"], () => require("./startStopManagedInstanceSchedule"));
exports.SyncAgent = null;
utilities.lazyLoad(exports, ["SyncAgent"], () => require("./syncAgent"));
exports.SyncGroup = null;
utilities.lazyLoad(exports, ["SyncGroup"], () => require("./syncGroup"));
exports.SyncMember = null;
utilities.lazyLoad(exports, ["SyncMember"], () => require("./syncMember"));
exports.TransparentDataEncryption = null;
utilities.lazyLoad(exports, ["TransparentDataEncryption"], () => require("./transparentDataEncryption"));
exports.VirtualNetworkRule = null;
utilities.lazyLoad(exports, ["VirtualNetworkRule"], () => require("./virtualNetworkRule"));
exports.WorkloadClassifier = null;
utilities.lazyLoad(exports, ["WorkloadClassifier"], () => require("./workloadClassifier"));
exports.WorkloadGroup = null;
utilities.lazyLoad(exports, ["WorkloadGroup"], () => require("./workloadGroup"));
// Export enums:
__exportStar(require("../types/enums/sql"), exports);
// Export sub-modules:
const v20140401 = require("./v20140401");
exports.v20140401 = v20140401;
const v20150501preview = require("./v20150501preview");
exports.v20150501preview = v20150501preview;
const v20170301preview = require("./v20170301preview");
exports.v20170301preview = v20170301preview;
const v20180601preview = require("./v20180601preview");
exports.v20180601preview = v20180601preview;
const v20190601preview = require("./v20190601preview");
exports.v20190601preview = v20190601preview;
const v20200202preview = require("./v20200202preview");
exports.v20200202preview = v20200202preview;
const v20200801preview = require("./v20200801preview");
exports.v20200801preview = v20200801preview;
const v20210201preview = require("./v20210201preview");
exports.v20210201preview = v20210201preview;
const v20211101 = require("./v20211101");
exports.v20211101 = v20211101;
const v20221101preview = require("./v20221101preview");
exports.v20221101preview = v20221101preview;
const v20230201preview = require("./v20230201preview");
exports.v20230201preview = v20230201preview;
const v20230501preview = require("./v20230501preview");
exports.v20230501preview = v20230501preview;
const v20230801preview = require("./v20230801preview");
exports.v20230801preview = v20230801preview;
const v20240501preview = require("./v20240501preview");
exports.v20240501preview = v20240501preview;
const _module = {
    version: utilities.getVersion(),
    construct: (name, type, urn) => {
        switch (type) {
            case "azure-native:sql:BackupLongTermRetentionPolicy":
                return new exports.BackupLongTermRetentionPolicy(name, undefined, { urn });
            case "azure-native:sql:BackupShortTermRetentionPolicy":
                return new exports.BackupShortTermRetentionPolicy(name, undefined, { urn });
            case "azure-native:sql:DataMaskingPolicy":
                return new exports.DataMaskingPolicy(name, undefined, { urn });
            case "azure-native:sql:Database":
                return new exports.Database(name, undefined, { urn });
            case "azure-native:sql:DatabaseAdvisor":
                return new exports.DatabaseAdvisor(name, undefined, { urn });
            case "azure-native:sql:DatabaseBlobAuditingPolicy":
                return new exports.DatabaseBlobAuditingPolicy(name, undefined, { urn });
            case "azure-native:sql:DatabaseSecurityAlertPolicy":
                return new exports.DatabaseSecurityAlertPolicy(name, undefined, { urn });
            case "azure-native:sql:DatabaseSqlVulnerabilityAssessmentRuleBaseline":
                return new exports.DatabaseSqlVulnerabilityAssessmentRuleBaseline(name, undefined, { urn });
            case "azure-native:sql:DatabaseThreatDetectionPolicy":
                return new exports.DatabaseThreatDetectionPolicy(name, undefined, { urn });
            case "azure-native:sql:DatabaseVulnerabilityAssessment":
                return new exports.DatabaseVulnerabilityAssessment(name, undefined, { urn });
            case "azure-native:sql:DatabaseVulnerabilityAssessmentRuleBaseline":
                return new exports.DatabaseVulnerabilityAssessmentRuleBaseline(name, undefined, { urn });
            case "azure-native:sql:DisasterRecoveryConfiguration":
                return new exports.DisasterRecoveryConfiguration(name, undefined, { urn });
            case "azure-native:sql:DistributedAvailabilityGroup":
                return new exports.DistributedAvailabilityGroup(name, undefined, { urn });
            case "azure-native:sql:ElasticPool":
                return new exports.ElasticPool(name, undefined, { urn });
            case "azure-native:sql:EncryptionProtector":
                return new exports.EncryptionProtector(name, undefined, { urn });
            case "azure-native:sql:ExtendedDatabaseBlobAuditingPolicy":
                return new exports.ExtendedDatabaseBlobAuditingPolicy(name, undefined, { urn });
            case "azure-native:sql:ExtendedServerBlobAuditingPolicy":
                return new exports.ExtendedServerBlobAuditingPolicy(name, undefined, { urn });
            case "azure-native:sql:FailoverGroup":
                return new exports.FailoverGroup(name, undefined, { urn });
            case "azure-native:sql:FirewallRule":
                return new exports.FirewallRule(name, undefined, { urn });
            case "azure-native:sql:GeoBackupPolicy":
                return new exports.GeoBackupPolicy(name, undefined, { urn });
            case "azure-native:sql:IPv6FirewallRule":
                return new exports.IPv6FirewallRule(name, undefined, { urn });
            case "azure-native:sql:InstanceFailoverGroup":
                return new exports.InstanceFailoverGroup(name, undefined, { urn });
            case "azure-native:sql:InstancePool":
                return new exports.InstancePool(name, undefined, { urn });
            case "azure-native:sql:Job":
                return new exports.Job(name, undefined, { urn });
            case "azure-native:sql:JobAgent":
                return new exports.JobAgent(name, undefined, { urn });
            case "azure-native:sql:JobCredential":
                return new exports.JobCredential(name, undefined, { urn });
            case "azure-native:sql:JobPrivateEndpoint":
                return new exports.JobPrivateEndpoint(name, undefined, { urn });
            case "azure-native:sql:JobStep":
                return new exports.JobStep(name, undefined, { urn });
            case "azure-native:sql:JobTargetGroup":
                return new exports.JobTargetGroup(name, undefined, { urn });
            case "azure-native:sql:LongTermRetentionPolicy":
                return new exports.LongTermRetentionPolicy(name, undefined, { urn });
            case "azure-native:sql:ManagedDatabase":
                return new exports.ManagedDatabase(name, undefined, { urn });
            case "azure-native:sql:ManagedDatabaseSensitivityLabel":
                return new exports.ManagedDatabaseSensitivityLabel(name, undefined, { urn });
            case "azure-native:sql:ManagedDatabaseVulnerabilityAssessment":
                return new exports.ManagedDatabaseVulnerabilityAssessment(name, undefined, { urn });
            case "azure-native:sql:ManagedDatabaseVulnerabilityAssessmentRuleBaseline":
                return new exports.ManagedDatabaseVulnerabilityAssessmentRuleBaseline(name, undefined, { urn });
            case "azure-native:sql:ManagedInstance":
                return new exports.ManagedInstance(name, undefined, { urn });
            case "azure-native:sql:ManagedInstanceAdministrator":
                return new exports.ManagedInstanceAdministrator(name, undefined, { urn });
            case "azure-native:sql:ManagedInstanceAzureADOnlyAuthentication":
                return new exports.ManagedInstanceAzureADOnlyAuthentication(name, undefined, { urn });
            case "azure-native:sql:ManagedInstanceKey":
                return new exports.ManagedInstanceKey(name, undefined, { urn });
            case "azure-native:sql:ManagedInstanceLongTermRetentionPolicy":
                return new exports.ManagedInstanceLongTermRetentionPolicy(name, undefined, { urn });
            case "azure-native:sql:ManagedInstancePrivateEndpointConnection":
                return new exports.ManagedInstancePrivateEndpointConnection(name, undefined, { urn });
            case "azure-native:sql:ManagedInstanceVulnerabilityAssessment":
                return new exports.ManagedInstanceVulnerabilityAssessment(name, undefined, { urn });
            case "azure-native:sql:ManagedServerDnsAlias":
                return new exports.ManagedServerDnsAlias(name, undefined, { urn });
            case "azure-native:sql:OutboundFirewallRule":
                return new exports.OutboundFirewallRule(name, undefined, { urn });
            case "azure-native:sql:PrivateEndpointConnection":
                return new exports.PrivateEndpointConnection(name, undefined, { urn });
            case "azure-native:sql:ReplicationLink":
                return new exports.ReplicationLink(name, undefined, { urn });
            case "azure-native:sql:SensitivityLabel":
                return new exports.SensitivityLabel(name, undefined, { urn });
            case "azure-native:sql:Server":
                return new exports.Server(name, undefined, { urn });
            case "azure-native:sql:ServerAdvisor":
                return new exports.ServerAdvisor(name, undefined, { urn });
            case "azure-native:sql:ServerAzureADAdministrator":
                return new exports.ServerAzureADAdministrator(name, undefined, { urn });
            case "azure-native:sql:ServerAzureADOnlyAuthentication":
                return new exports.ServerAzureADOnlyAuthentication(name, undefined, { urn });
            case "azure-native:sql:ServerBlobAuditingPolicy":
                return new exports.ServerBlobAuditingPolicy(name, undefined, { urn });
            case "azure-native:sql:ServerCommunicationLink":
                return new exports.ServerCommunicationLink(name, undefined, { urn });
            case "azure-native:sql:ServerDnsAlias":
                return new exports.ServerDnsAlias(name, undefined, { urn });
            case "azure-native:sql:ServerKey":
                return new exports.ServerKey(name, undefined, { urn });
            case "azure-native:sql:ServerSecurityAlertPolicy":
                return new exports.ServerSecurityAlertPolicy(name, undefined, { urn });
            case "azure-native:sql:ServerTrustCertificate":
                return new exports.ServerTrustCertificate(name, undefined, { urn });
            case "azure-native:sql:ServerTrustGroup":
                return new exports.ServerTrustGroup(name, undefined, { urn });
            case "azure-native:sql:ServerVulnerabilityAssessment":
                return new exports.ServerVulnerabilityAssessment(name, undefined, { urn });
            case "azure-native:sql:SqlVulnerabilityAssessmentRuleBaseline":
                return new exports.SqlVulnerabilityAssessmentRuleBaseline(name, undefined, { urn });
            case "azure-native:sql:SqlVulnerabilityAssessmentsSetting":
                return new exports.SqlVulnerabilityAssessmentsSetting(name, undefined, { urn });
            case "azure-native:sql:StartStopManagedInstanceSchedule":
                return new exports.StartStopManagedInstanceSchedule(name, undefined, { urn });
            case "azure-native:sql:SyncAgent":
                return new exports.SyncAgent(name, undefined, { urn });
            case "azure-native:sql:SyncGroup":
                return new exports.SyncGroup(name, undefined, { urn });
            case "azure-native:sql:SyncMember":
                return new exports.SyncMember(name, undefined, { urn });
            case "azure-native:sql:TransparentDataEncryption":
                return new exports.TransparentDataEncryption(name, undefined, { urn });
            case "azure-native:sql:VirtualNetworkRule":
                return new exports.VirtualNetworkRule(name, undefined, { urn });
            case "azure-native:sql:WorkloadClassifier":
                return new exports.WorkloadClassifier(name, undefined, { urn });
            case "azure-native:sql:WorkloadGroup":
                return new exports.WorkloadGroup(name, undefined, { urn });
            default:
                throw new Error(`unknown resource type ${type}`);
        }
    },
};
pulumi.runtime.registerResourceModule("azure-native", "sql", _module);
//# sourceMappingURL=data:application/json;base64,