import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../../types/input";
import * as outputs from "../../types/output";
import * as enums from "../../types/enums";
/**
 * An Azure SQL instance pool.
 */
export declare class InstancePool extends pulumi.CustomResource {
    /**
     * Get an existing InstancePool resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    static get(name: string, id: pulumi.Input<pulumi.ID>, opts?: pulumi.CustomResourceOptions): InstancePool;
    /**
     * Returns true if the given object is an instance of InstancePool.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    static isInstance(obj: any): obj is InstancePool;
    /**
     * The Dns Zone that the managed instance pool is in.
     */
    readonly dnsZone: pulumi.Output<string>;
    /**
     * The license type. Possible values are 'LicenseIncluded' (price for SQL license is included) and 'BasePrice' (without SQL license price).
     */
    readonly licenseType: pulumi.Output<string>;
    /**
     * Resource location.
     */
    readonly location: pulumi.Output<string>;
    /**
     * Specifies maintenance configuration id to apply to this managed instance.
     */
    readonly maintenanceConfigurationId: pulumi.Output<string | undefined>;
    /**
     * Resource name.
     */
    readonly name: pulumi.Output<string>;
    /**
     * The name and tier of the SKU.
     */
    readonly sku: pulumi.Output<outputs.sql.v20230801preview.SkuResponse | undefined>;
    /**
     * Resource ID of the subnet to place this instance pool in.
     */
    readonly subnetId: pulumi.Output<string>;
    /**
     * Resource tags.
     */
    readonly tags: pulumi.Output<{
        [key: string]: string;
    } | undefined>;
    /**
     * Resource type.
     */
    readonly type: pulumi.Output<string>;
    /**
     * Count of vCores belonging to this instance pool.
     */
    readonly vCores: pulumi.Output<number>;
    /**
     * Create a InstancePool resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: InstancePoolArgs, opts?: pulumi.CustomResourceOptions);
}
/**
 * The set of arguments for constructing a InstancePool resource.
 */
export interface InstancePoolArgs {
    /**
     * The name of the instance pool to be created or updated.
     */
    instancePoolName?: pulumi.Input<string>;
    /**
     * The license type. Possible values are 'LicenseIncluded' (price for SQL license is included) and 'BasePrice' (without SQL license price).
     */
    licenseType: pulumi.Input<string | enums.sql.v20230801preview.InstancePoolLicenseType>;
    /**
     * Resource location.
     */
    location?: pulumi.Input<string>;
    /**
     * Specifies maintenance configuration id to apply to this managed instance.
     */
    maintenanceConfigurationId?: pulumi.Input<string>;
    /**
     * The name of the resource group that contains the resource. You can obtain this value from the Azure Resource Manager API or the portal.
     */
    resourceGroupName: pulumi.Input<string>;
    /**
     * The name and tier of the SKU.
     */
    sku?: pulumi.Input<inputs.sql.v20230801preview.SkuArgs>;
    /**
     * Resource ID of the subnet to place this instance pool in.
     */
    subnetId: pulumi.Input<string>;
    /**
     * Resource tags.
     */
    tags?: pulumi.Input<{
        [key: string]: pulumi.Input<string>;
    }>;
    /**
     * Count of vCores belonging to this instance pool.
     */
    vCores: pulumi.Input<number>;
}
