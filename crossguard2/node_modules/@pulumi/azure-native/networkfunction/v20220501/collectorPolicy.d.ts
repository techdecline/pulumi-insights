import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../../types/input";
import * as outputs from "../../types/output";
/**
 * Collector policy resource.
 */
export declare class CollectorPolicy extends pulumi.CustomResource {
    /**
     * Get an existing CollectorPolicy resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    static get(name: string, id: pulumi.Input<pulumi.ID>, opts?: pulumi.CustomResourceOptions): CollectorPolicy;
    /**
     * Returns true if the given object is an instance of CollectorPolicy.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    static isInstance(obj: any): obj is CollectorPolicy;
    /**
     * Emission policies.
     */
    readonly emissionPolicies: pulumi.Output<outputs.networkfunction.v20220501.EmissionPoliciesPropertiesFormatResponse[] | undefined>;
    /**
     * A unique read-only string that changes whenever the resource is updated.
     */
    readonly etag: pulumi.Output<string>;
    /**
     * Ingestion policies.
     */
    readonly ingestionPolicy: pulumi.Output<outputs.networkfunction.v20220501.IngestionPolicyPropertiesFormatResponse | undefined>;
    /**
     * Azure resource name
     */
    readonly name: pulumi.Output<string>;
    /**
     * The provisioning state.
     */
    readonly provisioningState: pulumi.Output<string>;
    /**
     * Metadata pertaining to creation and last modification of the resource.
     */
    readonly systemData: pulumi.Output<outputs.networkfunction.v20220501.CollectorPolicyResponseSystemData>;
    /**
     * Azure resource type
     */
    readonly type: pulumi.Output<string>;
    /**
     * Create a CollectorPolicy resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: CollectorPolicyArgs, opts?: pulumi.CustomResourceOptions);
}
/**
 * The set of arguments for constructing a CollectorPolicy resource.
 */
export interface CollectorPolicyArgs {
    /**
     * Azure Traffic Collector name
     */
    azureTrafficCollectorName: pulumi.Input<string>;
    /**
     * Collector Policy Name
     */
    collectorPolicyName?: pulumi.Input<string>;
    /**
     * Emission policies.
     */
    emissionPolicies?: pulumi.Input<pulumi.Input<inputs.networkfunction.v20220501.EmissionPoliciesPropertiesFormatArgs>[]>;
    /**
     * Ingestion policies.
     */
    ingestionPolicy?: pulumi.Input<inputs.networkfunction.v20220501.IngestionPolicyPropertiesFormatArgs>;
    /**
     * The name of the resource group.
     */
    resourceGroupName: pulumi.Input<string>;
}
