import * as pulumi from "@pulumi/pulumi";
import * as outputs from "../types/output";
import * as enums from "../types/enums";
/**
 * A class represent an AppComplianceAutomation webhook resource.
 * Azure REST API version: 2024-06-27.
 */
export declare class Webhook extends pulumi.CustomResource {
    /**
     * Get an existing Webhook resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    static get(name: string, id: pulumi.Input<pulumi.ID>, opts?: pulumi.CustomResourceOptions): Webhook;
    /**
     * Returns true if the given object is an instance of Webhook.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    static isInstance(obj: any): obj is Webhook;
    /**
     * content type
     */
    readonly contentType: pulumi.Output<string | undefined>;
    /**
     * webhook deliveryStatus
     */
    readonly deliveryStatus: pulumi.Output<string>;
    /**
     * whether to enable ssl verification
     */
    readonly enableSslVerification: pulumi.Output<string | undefined>;
    /**
     * under which event notification should be sent.
     */
    readonly events: pulumi.Output<string[] | undefined>;
    /**
     * The name of the resource
     */
    readonly name: pulumi.Output<string>;
    /**
     * webhook payload url
     */
    readonly payloadUrl: pulumi.Output<string | undefined>;
    /**
     * Azure Resource Provisioning State
     */
    readonly provisioningState: pulumi.Output<string>;
    /**
     * whether to send notification under any event.
     */
    readonly sendAllEvents: pulumi.Output<string | undefined>;
    /**
     * Webhook status.
     */
    readonly status: pulumi.Output<string | undefined>;
    /**
     * Azure Resource Manager metadata containing createdBy and modifiedBy information.
     */
    readonly systemData: pulumi.Output<outputs.appcomplianceautomation.SystemDataResponse>;
    /**
     * Tenant id.
     */
    readonly tenantId: pulumi.Output<string>;
    /**
     * The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
     */
    readonly type: pulumi.Output<string>;
    /**
     * whether to update webhookKey.
     */
    readonly updateWebhookKey: pulumi.Output<string | undefined>;
    /**
     * Webhook id in database.
     */
    readonly webhookId: pulumi.Output<string>;
    /**
     * webhook secret token. If not set, this field value is null; otherwise, please set a string value.
     */
    readonly webhookKey: pulumi.Output<string | undefined>;
    /**
     * whether webhookKey is enabled.
     */
    readonly webhookKeyEnabled: pulumi.Output<string>;
    /**
     * Create a Webhook resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: WebhookArgs, opts?: pulumi.CustomResourceOptions);
}
/**
 * The set of arguments for constructing a Webhook resource.
 */
export interface WebhookArgs {
    /**
     * content type
     */
    contentType?: pulumi.Input<string | enums.appcomplianceautomation.ContentType>;
    /**
     * whether to enable ssl verification
     */
    enableSslVerification?: pulumi.Input<string | enums.appcomplianceautomation.EnableSslVerification>;
    /**
     * under which event notification should be sent.
     */
    events?: pulumi.Input<pulumi.Input<string | enums.appcomplianceautomation.NotificationEvent>[]>;
    /**
     * webhook payload url
     */
    payloadUrl?: pulumi.Input<string>;
    /**
     * Report Name.
     */
    reportName: pulumi.Input<string>;
    /**
     * whether to send notification under any event.
     */
    sendAllEvents?: pulumi.Input<string | enums.appcomplianceautomation.SendAllEvents>;
    /**
     * Webhook status.
     */
    status?: pulumi.Input<string | enums.appcomplianceautomation.WebhookStatus>;
    /**
     * whether to update webhookKey.
     */
    updateWebhookKey?: pulumi.Input<string | enums.appcomplianceautomation.UpdateWebhookKey>;
    /**
     * webhook secret token. If not set, this field value is null; otherwise, please set a string value.
     */
    webhookKey?: pulumi.Input<string>;
    /**
     * Webhook Name.
     */
    webhookName?: pulumi.Input<string>;
}
