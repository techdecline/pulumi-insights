import * as pulumi from "@pulumi/pulumi";
import * as outputs from "../../types/output";
import * as enums from "../../types/enums";
/**
 * A class represent an AppComplianceAutomation evidence resource.
 */
export declare class Evidence extends pulumi.CustomResource {
    /**
     * Get an existing Evidence resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    static get(name: string, id: pulumi.Input<pulumi.ID>, opts?: pulumi.CustomResourceOptions): Evidence;
    /**
     * Returns true if the given object is an instance of Evidence.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    static isInstance(obj: any): obj is Evidence;
    /**
     * Control id.
     */
    readonly controlId: pulumi.Output<string | undefined>;
    /**
     * Evidence type.
     */
    readonly evidenceType: pulumi.Output<string | undefined>;
    /**
     * Extra data considered as evidence.
     */
    readonly extraData: pulumi.Output<string | undefined>;
    /**
     * The path of the file in storage.
     */
    readonly filePath: pulumi.Output<string>;
    /**
     * The name of the resource
     */
    readonly name: pulumi.Output<string>;
    /**
     * Azure lifecycle management
     */
    readonly provisioningState: pulumi.Output<string>;
    /**
     * Responsibility id.
     */
    readonly responsibilityId: pulumi.Output<string | undefined>;
    /**
     * Azure Resource Manager metadata containing createdBy and modifiedBy information.
     */
    readonly systemData: pulumi.Output<outputs.appcomplianceautomation.v20240627.SystemDataResponse>;
    /**
     * The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
     */
    readonly type: pulumi.Output<string>;
    /**
     * Create a Evidence resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: EvidenceArgs, opts?: pulumi.CustomResourceOptions);
}
/**
 * The set of arguments for constructing a Evidence resource.
 */
export interface EvidenceArgs {
    /**
     * Control id.
     */
    controlId?: pulumi.Input<string>;
    /**
     * The evidence name.
     */
    evidenceName?: pulumi.Input<string>;
    /**
     * Evidence type.
     */
    evidenceType?: pulumi.Input<string | enums.appcomplianceautomation.v20240627.EvidenceType>;
    /**
     * Extra data considered as evidence.
     */
    extraData?: pulumi.Input<string>;
    /**
     * The path of the file in storage.
     */
    filePath: pulumi.Input<string>;
    /**
     * The offerGuid which mapping to the reports.
     */
    offerGuid?: pulumi.Input<string>;
    /**
     * The tenant id of the report creator.
     */
    reportCreatorTenantId?: pulumi.Input<string>;
    /**
     * Report Name.
     */
    reportName: pulumi.Input<string>;
    /**
     * Responsibility id.
     */
    responsibilityId?: pulumi.Input<string>;
}
