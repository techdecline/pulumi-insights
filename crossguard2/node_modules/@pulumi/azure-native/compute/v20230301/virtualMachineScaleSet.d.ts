import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../../types/input";
import * as outputs from "../../types/output";
import * as enums from "../../types/enums";
/**
 * Describes a Virtual Machine Scale Set.
 */
export declare class VirtualMachineScaleSet extends pulumi.CustomResource {
    /**
     * Get an existing VirtualMachineScaleSet resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    static get(name: string, id: pulumi.Input<pulumi.ID>, opts?: pulumi.CustomResourceOptions): VirtualMachineScaleSet;
    /**
     * Returns true if the given object is an instance of VirtualMachineScaleSet.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    static isInstance(obj: any): obj is VirtualMachineScaleSet;
    /**
     * Specifies additional capabilities enabled or disabled on the Virtual Machines in the Virtual Machine Scale Set. For instance: whether the Virtual Machines have the capability to support attaching managed data disks with UltraSSD_LRS storage account type.
     */
    readonly additionalCapabilities: pulumi.Output<outputs.compute.v20230301.AdditionalCapabilitiesResponse | undefined>;
    /**
     * Policy for automatic repairs.
     */
    readonly automaticRepairsPolicy: pulumi.Output<outputs.compute.v20230301.AutomaticRepairsPolicyResponse | undefined>;
    /**
     * Optional property which must either be set to True or omitted.
     */
    readonly constrainedMaximumCapacity: pulumi.Output<boolean | undefined>;
    /**
     * When Overprovision is enabled, extensions are launched only on the requested number of VMs which are finally kept. This property will hence ensure that the extensions do not run on the extra overprovisioned VMs.
     */
    readonly doNotRunExtensionsOnOverprovisionedVMs: pulumi.Output<boolean | undefined>;
    /**
     * The extended location of the Virtual Machine Scale Set.
     */
    readonly extendedLocation: pulumi.Output<outputs.compute.v20230301.ExtendedLocationResponse | undefined>;
    /**
     * Specifies information about the dedicated host group that the virtual machine scale set resides in. Minimum api-version: 2020-06-01.
     */
    readonly hostGroup: pulumi.Output<outputs.compute.v20230301.SubResourceResponse | undefined>;
    /**
     * The identity of the virtual machine scale set, if configured.
     */
    readonly identity: pulumi.Output<outputs.compute.v20230301.VirtualMachineScaleSetIdentityResponse | undefined>;
    /**
     * Resource location
     */
    readonly location: pulumi.Output<string>;
    /**
     * Resource name
     */
    readonly name: pulumi.Output<string>;
    /**
     * Specifies the orchestration mode for the virtual machine scale set.
     */
    readonly orchestrationMode: pulumi.Output<string | undefined>;
    /**
     * Specifies whether the Virtual Machine Scale Set should be overprovisioned.
     */
    readonly overprovision: pulumi.Output<boolean | undefined>;
    /**
     * Specifies information about the marketplace image used to create the virtual machine. This element is only used for marketplace images. Before you can use a marketplace image from an API, you must enable the image for programmatic use.  In the Azure portal, find the marketplace image that you want to use and then click **Want to deploy programmatically, Get Started ->**. Enter any required information and then click **Save**.
     */
    readonly plan: pulumi.Output<outputs.compute.v20230301.PlanResponse | undefined>;
    /**
     * Fault Domain count for each placement group.
     */
    readonly platformFaultDomainCount: pulumi.Output<number | undefined>;
    /**
     * Specifies the desired targets for mixing Spot and Regular priority VMs within the same VMSS Flex instance.
     */
    readonly priorityMixPolicy: pulumi.Output<outputs.compute.v20230301.PriorityMixPolicyResponse | undefined>;
    /**
     * The provisioning state, which only appears in the response.
     */
    readonly provisioningState: pulumi.Output<string>;
    /**
     * Specifies information about the proximity placement group that the virtual machine scale set should be assigned to. Minimum api-version: 2018-04-01.
     */
    readonly proximityPlacementGroup: pulumi.Output<outputs.compute.v20230301.SubResourceResponse | undefined>;
    /**
     * Specifies the policies applied when scaling in Virtual Machines in the Virtual Machine Scale Set.
     */
    readonly scaleInPolicy: pulumi.Output<outputs.compute.v20230301.ScaleInPolicyResponse | undefined>;
    /**
     * When true this limits the scale set to a single placement group, of max size 100 virtual machines. NOTE: If singlePlacementGroup is true, it may be modified to false. However, if singlePlacementGroup is false, it may not be modified to true.
     */
    readonly singlePlacementGroup: pulumi.Output<boolean | undefined>;
    /**
     * The virtual machine scale set sku.
     */
    readonly sku: pulumi.Output<outputs.compute.v20230301.SkuResponse | undefined>;
    /**
     * Specifies the Spot Restore properties for the virtual machine scale set.
     */
    readonly spotRestorePolicy: pulumi.Output<outputs.compute.v20230301.SpotRestorePolicyResponse | undefined>;
    /**
     * Resource tags
     */
    readonly tags: pulumi.Output<{
        [key: string]: string;
    } | undefined>;
    /**
     * Specifies the time at which the Virtual Machine Scale Set resource was created. Minimum api-version: 2021-11-01.
     */
    readonly timeCreated: pulumi.Output<string>;
    /**
     * Resource type
     */
    readonly type: pulumi.Output<string>;
    /**
     * Specifies the ID which uniquely identifies a Virtual Machine Scale Set.
     */
    readonly uniqueId: pulumi.Output<string>;
    /**
     * The upgrade policy.
     */
    readonly upgradePolicy: pulumi.Output<outputs.compute.v20230301.UpgradePolicyResponse | undefined>;
    /**
     * The virtual machine profile.
     */
    readonly virtualMachineProfile: pulumi.Output<outputs.compute.v20230301.VirtualMachineScaleSetVMProfileResponse | undefined>;
    /**
     * Whether to force strictly even Virtual Machine distribution cross x-zones in case there is zone outage. zoneBalance property can only be set if the zones property of the scale set contains more than one zone. If there are no zones or only one zone specified, then zoneBalance property should not be set.
     */
    readonly zoneBalance: pulumi.Output<boolean | undefined>;
    /**
     * The virtual machine scale set zones. NOTE: Availability zones can only be set when you create the scale set
     */
    readonly zones: pulumi.Output<string[] | undefined>;
    /**
     * Create a VirtualMachineScaleSet resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: VirtualMachineScaleSetArgs, opts?: pulumi.CustomResourceOptions);
}
/**
 * The set of arguments for constructing a VirtualMachineScaleSet resource.
 */
export interface VirtualMachineScaleSetArgs {
    /**
     * Specifies additional capabilities enabled or disabled on the Virtual Machines in the Virtual Machine Scale Set. For instance: whether the Virtual Machines have the capability to support attaching managed data disks with UltraSSD_LRS storage account type.
     */
    additionalCapabilities?: pulumi.Input<inputs.compute.v20230301.AdditionalCapabilitiesArgs>;
    /**
     * Policy for automatic repairs.
     */
    automaticRepairsPolicy?: pulumi.Input<inputs.compute.v20230301.AutomaticRepairsPolicyArgs>;
    /**
     * Optional property which must either be set to True or omitted.
     */
    constrainedMaximumCapacity?: pulumi.Input<boolean>;
    /**
     * When Overprovision is enabled, extensions are launched only on the requested number of VMs which are finally kept. This property will hence ensure that the extensions do not run on the extra overprovisioned VMs.
     */
    doNotRunExtensionsOnOverprovisionedVMs?: pulumi.Input<boolean>;
    /**
     * The extended location of the Virtual Machine Scale Set.
     */
    extendedLocation?: pulumi.Input<inputs.compute.v20230301.ExtendedLocationArgs>;
    /**
     * Specifies information about the dedicated host group that the virtual machine scale set resides in. Minimum api-version: 2020-06-01.
     */
    hostGroup?: pulumi.Input<inputs.compute.v20230301.SubResourceArgs>;
    /**
     * The identity of the virtual machine scale set, if configured.
     */
    identity?: pulumi.Input<inputs.compute.v20230301.VirtualMachineScaleSetIdentityArgs>;
    /**
     * Resource location
     */
    location?: pulumi.Input<string>;
    /**
     * Specifies the orchestration mode for the virtual machine scale set.
     */
    orchestrationMode?: pulumi.Input<string | enums.compute.v20230301.OrchestrationMode>;
    /**
     * Specifies whether the Virtual Machine Scale Set should be overprovisioned.
     */
    overprovision?: pulumi.Input<boolean>;
    /**
     * Specifies information about the marketplace image used to create the virtual machine. This element is only used for marketplace images. Before you can use a marketplace image from an API, you must enable the image for programmatic use.  In the Azure portal, find the marketplace image that you want to use and then click **Want to deploy programmatically, Get Started ->**. Enter any required information and then click **Save**.
     */
    plan?: pulumi.Input<inputs.compute.v20230301.PlanArgs>;
    /**
     * Fault Domain count for each placement group.
     */
    platformFaultDomainCount?: pulumi.Input<number>;
    /**
     * Specifies the desired targets for mixing Spot and Regular priority VMs within the same VMSS Flex instance.
     */
    priorityMixPolicy?: pulumi.Input<inputs.compute.v20230301.PriorityMixPolicyArgs>;
    /**
     * Specifies information about the proximity placement group that the virtual machine scale set should be assigned to. Minimum api-version: 2018-04-01.
     */
    proximityPlacementGroup?: pulumi.Input<inputs.compute.v20230301.SubResourceArgs>;
    /**
     * The name of the resource group.
     */
    resourceGroupName: pulumi.Input<string>;
    /**
     * Specifies the policies applied when scaling in Virtual Machines in the Virtual Machine Scale Set.
     */
    scaleInPolicy?: pulumi.Input<inputs.compute.v20230301.ScaleInPolicyArgs>;
    /**
     * When true this limits the scale set to a single placement group, of max size 100 virtual machines. NOTE: If singlePlacementGroup is true, it may be modified to false. However, if singlePlacementGroup is false, it may not be modified to true.
     */
    singlePlacementGroup?: pulumi.Input<boolean>;
    /**
     * The virtual machine scale set sku.
     */
    sku?: pulumi.Input<inputs.compute.v20230301.SkuArgs>;
    /**
     * Specifies the Spot Restore properties for the virtual machine scale set.
     */
    spotRestorePolicy?: pulumi.Input<inputs.compute.v20230301.SpotRestorePolicyArgs>;
    /**
     * Resource tags
     */
    tags?: pulumi.Input<{
        [key: string]: pulumi.Input<string>;
    }>;
    /**
     * The upgrade policy.
     */
    upgradePolicy?: pulumi.Input<inputs.compute.v20230301.UpgradePolicyArgs>;
    /**
     * The virtual machine profile.
     */
    virtualMachineProfile?: pulumi.Input<inputs.compute.v20230301.VirtualMachineScaleSetVMProfileArgs>;
    /**
     * The name of the VM scale set to create or update.
     */
    vmScaleSetName?: pulumi.Input<string>;
    /**
     * Whether to force strictly even Virtual Machine distribution cross x-zones in case there is zone outage. zoneBalance property can only be set if the zones property of the scale set contains more than one zone. If there are no zones or only one zone specified, then zoneBalance property should not be set.
     */
    zoneBalance?: pulumi.Input<boolean>;
    /**
     * The virtual machine scale set zones. NOTE: Availability zones can only be set when you create the scale set
     */
    zones?: pulumi.Input<pulumi.Input<string>[]>;
}
