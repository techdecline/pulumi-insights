import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../../types/input";
import * as outputs from "../../types/output";
import * as enums from "../../types/enums";
/**
 * Specifies information about the gallery image definition that you want to create or update.
 */
export declare class GalleryImage extends pulumi.CustomResource {
    /**
     * Get an existing GalleryImage resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    static get(name: string, id: pulumi.Input<pulumi.ID>, opts?: pulumi.CustomResourceOptions): GalleryImage;
    /**
     * Returns true if the given object is an instance of GalleryImage.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    static isInstance(obj: any): obj is GalleryImage;
    /**
     * The architecture of the image. Applicable to OS disks only.
     */
    readonly architecture: pulumi.Output<string | undefined>;
    /**
     * The description of this gallery image definition resource. This property is updatable.
     */
    readonly description: pulumi.Output<string | undefined>;
    /**
     * Describes the disallowed disk types.
     */
    readonly disallowed: pulumi.Output<outputs.compute.v20220303.DisallowedResponse | undefined>;
    /**
     * The end of life date of the gallery image definition. This property can be used for decommissioning purposes. This property is updatable.
     */
    readonly endOfLifeDate: pulumi.Output<string | undefined>;
    /**
     * The Eula agreement for the gallery image definition.
     */
    readonly eula: pulumi.Output<string | undefined>;
    /**
     * A list of gallery image features.
     */
    readonly features: pulumi.Output<outputs.compute.v20220303.GalleryImageFeatureResponse[] | undefined>;
    /**
     * The hypervisor generation of the Virtual Machine. Applicable to OS disks only.
     */
    readonly hyperVGeneration: pulumi.Output<string | undefined>;
    /**
     * This is the gallery image definition identifier.
     */
    readonly identifier: pulumi.Output<outputs.compute.v20220303.GalleryImageIdentifierResponse>;
    /**
     * Resource location
     */
    readonly location: pulumi.Output<string>;
    /**
     * Resource name
     */
    readonly name: pulumi.Output<string>;
    /**
     * This property allows the user to specify whether the virtual machines created under this image are 'Generalized' or 'Specialized'.
     */
    readonly osState: pulumi.Output<string>;
    /**
     * This property allows you to specify the type of the OS that is included in the disk when creating a VM from a managed image. <br><br> Possible values are: <br><br> **Windows** <br><br> **Linux**
     */
    readonly osType: pulumi.Output<string>;
    /**
     * The privacy statement uri.
     */
    readonly privacyStatementUri: pulumi.Output<string | undefined>;
    /**
     * The provisioning state, which only appears in the response.
     */
    readonly provisioningState: pulumi.Output<string>;
    /**
     * Describes the gallery image definition purchase plan. This is used by marketplace images.
     */
    readonly purchasePlan: pulumi.Output<outputs.compute.v20220303.ImagePurchasePlanResponse | undefined>;
    /**
     * The properties describe the recommended machine configuration for this Image Definition. These properties are updatable.
     */
    readonly recommended: pulumi.Output<outputs.compute.v20220303.RecommendedMachineConfigurationResponse | undefined>;
    /**
     * The release note uri.
     */
    readonly releaseNoteUri: pulumi.Output<string | undefined>;
    /**
     * Resource tags
     */
    readonly tags: pulumi.Output<{
        [key: string]: string;
    } | undefined>;
    /**
     * Resource type
     */
    readonly type: pulumi.Output<string>;
    /**
     * Create a GalleryImage resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: GalleryImageArgs, opts?: pulumi.CustomResourceOptions);
}
/**
 * The set of arguments for constructing a GalleryImage resource.
 */
export interface GalleryImageArgs {
    /**
     * The architecture of the image. Applicable to OS disks only.
     */
    architecture?: pulumi.Input<string | enums.compute.v20220303.Architecture>;
    /**
     * The description of this gallery image definition resource. This property is updatable.
     */
    description?: pulumi.Input<string>;
    /**
     * Describes the disallowed disk types.
     */
    disallowed?: pulumi.Input<inputs.compute.v20220303.DisallowedArgs>;
    /**
     * The end of life date of the gallery image definition. This property can be used for decommissioning purposes. This property is updatable.
     */
    endOfLifeDate?: pulumi.Input<string>;
    /**
     * The Eula agreement for the gallery image definition.
     */
    eula?: pulumi.Input<string>;
    /**
     * A list of gallery image features.
     */
    features?: pulumi.Input<pulumi.Input<inputs.compute.v20220303.GalleryImageFeatureArgs>[]>;
    /**
     * The name of the gallery image definition to be created or updated. The allowed characters are alphabets and numbers with dots, dashes, and periods allowed in the middle. The maximum length is 80 characters.
     */
    galleryImageName?: pulumi.Input<string>;
    /**
     * The name of the Shared Image Gallery in which the Image Definition is to be created.
     */
    galleryName: pulumi.Input<string>;
    /**
     * The hypervisor generation of the Virtual Machine. Applicable to OS disks only.
     */
    hyperVGeneration?: pulumi.Input<string | enums.compute.v20220303.HyperVGeneration>;
    /**
     * This is the gallery image definition identifier.
     */
    identifier: pulumi.Input<inputs.compute.v20220303.GalleryImageIdentifierArgs>;
    /**
     * Resource location
     */
    location?: pulumi.Input<string>;
    /**
     * This property allows the user to specify whether the virtual machines created under this image are 'Generalized' or 'Specialized'.
     */
    osState: pulumi.Input<enums.compute.v20220303.OperatingSystemStateTypes>;
    /**
     * This property allows you to specify the type of the OS that is included in the disk when creating a VM from a managed image. <br><br> Possible values are: <br><br> **Windows** <br><br> **Linux**
     */
    osType: pulumi.Input<enums.compute.v20220303.OperatingSystemTypes>;
    /**
     * The privacy statement uri.
     */
    privacyStatementUri?: pulumi.Input<string>;
    /**
     * Describes the gallery image definition purchase plan. This is used by marketplace images.
     */
    purchasePlan?: pulumi.Input<inputs.compute.v20220303.ImagePurchasePlanArgs>;
    /**
     * The properties describe the recommended machine configuration for this Image Definition. These properties are updatable.
     */
    recommended?: pulumi.Input<inputs.compute.v20220303.RecommendedMachineConfigurationArgs>;
    /**
     * The release note uri.
     */
    releaseNoteUri?: pulumi.Input<string>;
    /**
     * The name of the resource group.
     */
    resourceGroupName: pulumi.Input<string>;
    /**
     * Resource tags
     */
    tags?: pulumi.Input<{
        [key: string]: pulumi.Input<string>;
    }>;
}
