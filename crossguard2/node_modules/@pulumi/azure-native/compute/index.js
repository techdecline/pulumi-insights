"use strict";
// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __exportStar = (this && this.__exportStar) || function(m, exports) {
    for (var p in m) if (p !== "default" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.getGalleryInVMAccessControlProfileVersion = exports.getGalleryInVMAccessControlProfileOutput = exports.getGalleryInVMAccessControlProfile = exports.getGalleryImageVersionOutput = exports.getGalleryImageVersion = exports.getGalleryImageOutput = exports.getGalleryImage = exports.getGalleryApplicationVersionOutput = exports.getGalleryApplicationVersion = exports.getGalleryApplicationOutput = exports.getGalleryApplication = exports.getGalleryOutput = exports.getGallery = exports.getDiskEncryptionSetOutput = exports.getDiskEncryptionSet = exports.getDiskAccessAPrivateEndpointConnectionOutput = exports.getDiskAccessAPrivateEndpointConnection = exports.getDiskAccessOutput = exports.getDiskAccess = exports.getDiskOutput = exports.getDisk = exports.getDedicatedHostGroupOutput = exports.getDedicatedHostGroup = exports.getDedicatedHostOutput = exports.getDedicatedHost = exports.getCloudServiceOutput = exports.getCloudService = exports.getCapacityReservationGroupOutput = exports.getCapacityReservationGroup = exports.getCapacityReservationOutput = exports.getCapacityReservation = exports.getAvailabilitySetOutput = exports.getAvailabilitySet = exports.GalleryInVMAccessControlProfileVersion = exports.GalleryInVMAccessControlProfile = exports.GalleryImageVersion = exports.GalleryImage = exports.GalleryApplicationVersion = exports.GalleryApplication = exports.Gallery = exports.DiskEncryptionSet = exports.DiskAccessAPrivateEndpointConnection = exports.DiskAccess = exports.Disk = exports.DedicatedHostGroup = exports.DedicatedHost = exports.CloudService = exports.CapacityReservationGroup = exports.CapacityReservation = exports.AvailabilitySet = void 0;
exports.v20210401 = exports.v20210301 = exports.v20201201 = exports.VirtualMachineScaleSetVMRunCommand = exports.VirtualMachineScaleSetVMExtension = exports.VirtualMachineScaleSetVM = exports.VirtualMachineScaleSetExtension = exports.VirtualMachineScaleSet = exports.VirtualMachineRunCommandByVirtualMachine = exports.VirtualMachineExtension = exports.VirtualMachine = exports.SshPublicKey = exports.Snapshot = exports.RestorePointCollection = exports.RestorePoint = exports.ProximityPlacementGroup = exports.Image = exports.getVirtualMachineScaleSetVMRunCommandOutput = exports.getVirtualMachineScaleSetVMRunCommand = exports.getVirtualMachineScaleSetVMExtensionOutput = exports.getVirtualMachineScaleSetVMExtension = exports.getVirtualMachineScaleSetVMOutput = exports.getVirtualMachineScaleSetVM = exports.getVirtualMachineScaleSetExtensionOutput = exports.getVirtualMachineScaleSetExtension = exports.getVirtualMachineScaleSetOutput = exports.getVirtualMachineScaleSet = exports.getVirtualMachineRunCommandByVirtualMachineOutput = exports.getVirtualMachineRunCommandByVirtualMachine = exports.getVirtualMachineExtensionOutput = exports.getVirtualMachineExtension = exports.getVirtualMachineOutput = exports.getVirtualMachine = exports.getSshPublicKeyOutput = exports.getSshPublicKey = exports.getSnapshotOutput = exports.getSnapshot = exports.getRestorePointCollectionOutput = exports.getRestorePointCollection = exports.getRestorePointOutput = exports.getRestorePoint = exports.getProximityPlacementGroupOutput = exports.getProximityPlacementGroup = exports.getLogAnalyticExportThrottledRequestsOutput = exports.getLogAnalyticExportThrottledRequests = exports.getLogAnalyticExportRequestRateByIntervalOutput = exports.getLogAnalyticExportRequestRateByInterval = exports.getImageOutput = exports.getImage = exports.getGalleryInVMAccessControlProfileVersionOutput = void 0;
exports.v20241104 = exports.v20240701 = exports.v20240303 = exports.v20240302 = exports.v20240301 = exports.v20231002 = exports.v20230901 = exports.v20230703 = exports.v20230701 = exports.v20230402 = exports.v20230301 = exports.v20230102 = exports.v20221101 = exports.v20220904 = exports.v20220803 = exports.v20220801 = exports.v20220702 = exports.v20220303 = exports.v20220301 = exports.v20211101 = exports.v20210701 = void 0;
const pulumi = require("@pulumi/pulumi");
const utilities = require("../utilities");
exports.AvailabilitySet = null;
utilities.lazyLoad(exports, ["AvailabilitySet"], () => require("./availabilitySet"));
exports.CapacityReservation = null;
utilities.lazyLoad(exports, ["CapacityReservation"], () => require("./capacityReservation"));
exports.CapacityReservationGroup = null;
utilities.lazyLoad(exports, ["CapacityReservationGroup"], () => require("./capacityReservationGroup"));
exports.CloudService = null;
utilities.lazyLoad(exports, ["CloudService"], () => require("./cloudService"));
exports.DedicatedHost = null;
utilities.lazyLoad(exports, ["DedicatedHost"], () => require("./dedicatedHost"));
exports.DedicatedHostGroup = null;
utilities.lazyLoad(exports, ["DedicatedHostGroup"], () => require("./dedicatedHostGroup"));
exports.Disk = null;
utilities.lazyLoad(exports, ["Disk"], () => require("./disk"));
exports.DiskAccess = null;
utilities.lazyLoad(exports, ["DiskAccess"], () => require("./diskAccess"));
exports.DiskAccessAPrivateEndpointConnection = null;
utilities.lazyLoad(exports, ["DiskAccessAPrivateEndpointConnection"], () => require("./diskAccessAPrivateEndpointConnection"));
exports.DiskEncryptionSet = null;
utilities.lazyLoad(exports, ["DiskEncryptionSet"], () => require("./diskEncryptionSet"));
exports.Gallery = null;
utilities.lazyLoad(exports, ["Gallery"], () => require("./gallery"));
exports.GalleryApplication = null;
utilities.lazyLoad(exports, ["GalleryApplication"], () => require("./galleryApplication"));
exports.GalleryApplicationVersion = null;
utilities.lazyLoad(exports, ["GalleryApplicationVersion"], () => require("./galleryApplicationVersion"));
exports.GalleryImage = null;
utilities.lazyLoad(exports, ["GalleryImage"], () => require("./galleryImage"));
exports.GalleryImageVersion = null;
utilities.lazyLoad(exports, ["GalleryImageVersion"], () => require("./galleryImageVersion"));
exports.GalleryInVMAccessControlProfile = null;
utilities.lazyLoad(exports, ["GalleryInVMAccessControlProfile"], () => require("./galleryInVMAccessControlProfile"));
exports.GalleryInVMAccessControlProfileVersion = null;
utilities.lazyLoad(exports, ["GalleryInVMAccessControlProfileVersion"], () => require("./galleryInVMAccessControlProfileVersion"));
exports.getAvailabilitySet = null;
exports.getAvailabilitySetOutput = null;
utilities.lazyLoad(exports, ["getAvailabilitySet", "getAvailabilitySetOutput"], () => require("./getAvailabilitySet"));
exports.getCapacityReservation = null;
exports.getCapacityReservationOutput = null;
utilities.lazyLoad(exports, ["getCapacityReservation", "getCapacityReservationOutput"], () => require("./getCapacityReservation"));
exports.getCapacityReservationGroup = null;
exports.getCapacityReservationGroupOutput = null;
utilities.lazyLoad(exports, ["getCapacityReservationGroup", "getCapacityReservationGroupOutput"], () => require("./getCapacityReservationGroup"));
exports.getCloudService = null;
exports.getCloudServiceOutput = null;
utilities.lazyLoad(exports, ["getCloudService", "getCloudServiceOutput"], () => require("./getCloudService"));
exports.getDedicatedHost = null;
exports.getDedicatedHostOutput = null;
utilities.lazyLoad(exports, ["getDedicatedHost", "getDedicatedHostOutput"], () => require("./getDedicatedHost"));
exports.getDedicatedHostGroup = null;
exports.getDedicatedHostGroupOutput = null;
utilities.lazyLoad(exports, ["getDedicatedHostGroup", "getDedicatedHostGroupOutput"], () => require("./getDedicatedHostGroup"));
exports.getDisk = null;
exports.getDiskOutput = null;
utilities.lazyLoad(exports, ["getDisk", "getDiskOutput"], () => require("./getDisk"));
exports.getDiskAccess = null;
exports.getDiskAccessOutput = null;
utilities.lazyLoad(exports, ["getDiskAccess", "getDiskAccessOutput"], () => require("./getDiskAccess"));
exports.getDiskAccessAPrivateEndpointConnection = null;
exports.getDiskAccessAPrivateEndpointConnectionOutput = null;
utilities.lazyLoad(exports, ["getDiskAccessAPrivateEndpointConnection", "getDiskAccessAPrivateEndpointConnectionOutput"], () => require("./getDiskAccessAPrivateEndpointConnection"));
exports.getDiskEncryptionSet = null;
exports.getDiskEncryptionSetOutput = null;
utilities.lazyLoad(exports, ["getDiskEncryptionSet", "getDiskEncryptionSetOutput"], () => require("./getDiskEncryptionSet"));
exports.getGallery = null;
exports.getGalleryOutput = null;
utilities.lazyLoad(exports, ["getGallery", "getGalleryOutput"], () => require("./getGallery"));
exports.getGalleryApplication = null;
exports.getGalleryApplicationOutput = null;
utilities.lazyLoad(exports, ["getGalleryApplication", "getGalleryApplicationOutput"], () => require("./getGalleryApplication"));
exports.getGalleryApplicationVersion = null;
exports.getGalleryApplicationVersionOutput = null;
utilities.lazyLoad(exports, ["getGalleryApplicationVersion", "getGalleryApplicationVersionOutput"], () => require("./getGalleryApplicationVersion"));
exports.getGalleryImage = null;
exports.getGalleryImageOutput = null;
utilities.lazyLoad(exports, ["getGalleryImage", "getGalleryImageOutput"], () => require("./getGalleryImage"));
exports.getGalleryImageVersion = null;
exports.getGalleryImageVersionOutput = null;
utilities.lazyLoad(exports, ["getGalleryImageVersion", "getGalleryImageVersionOutput"], () => require("./getGalleryImageVersion"));
exports.getGalleryInVMAccessControlProfile = null;
exports.getGalleryInVMAccessControlProfileOutput = null;
utilities.lazyLoad(exports, ["getGalleryInVMAccessControlProfile", "getGalleryInVMAccessControlProfileOutput"], () => require("./getGalleryInVMAccessControlProfile"));
exports.getGalleryInVMAccessControlProfileVersion = null;
exports.getGalleryInVMAccessControlProfileVersionOutput = null;
utilities.lazyLoad(exports, ["getGalleryInVMAccessControlProfileVersion", "getGalleryInVMAccessControlProfileVersionOutput"], () => require("./getGalleryInVMAccessControlProfileVersion"));
exports.getImage = null;
exports.getImageOutput = null;
utilities.lazyLoad(exports, ["getImage", "getImageOutput"], () => require("./getImage"));
exports.getLogAnalyticExportRequestRateByInterval = null;
exports.getLogAnalyticExportRequestRateByIntervalOutput = null;
utilities.lazyLoad(exports, ["getLogAnalyticExportRequestRateByInterval", "getLogAnalyticExportRequestRateByIntervalOutput"], () => require("./getLogAnalyticExportRequestRateByInterval"));
exports.getLogAnalyticExportThrottledRequests = null;
exports.getLogAnalyticExportThrottledRequestsOutput = null;
utilities.lazyLoad(exports, ["getLogAnalyticExportThrottledRequests", "getLogAnalyticExportThrottledRequestsOutput"], () => require("./getLogAnalyticExportThrottledRequests"));
exports.getProximityPlacementGroup = null;
exports.getProximityPlacementGroupOutput = null;
utilities.lazyLoad(exports, ["getProximityPlacementGroup", "getProximityPlacementGroupOutput"], () => require("./getProximityPlacementGroup"));
exports.getRestorePoint = null;
exports.getRestorePointOutput = null;
utilities.lazyLoad(exports, ["getRestorePoint", "getRestorePointOutput"], () => require("./getRestorePoint"));
exports.getRestorePointCollection = null;
exports.getRestorePointCollectionOutput = null;
utilities.lazyLoad(exports, ["getRestorePointCollection", "getRestorePointCollectionOutput"], () => require("./getRestorePointCollection"));
exports.getSnapshot = null;
exports.getSnapshotOutput = null;
utilities.lazyLoad(exports, ["getSnapshot", "getSnapshotOutput"], () => require("./getSnapshot"));
exports.getSshPublicKey = null;
exports.getSshPublicKeyOutput = null;
utilities.lazyLoad(exports, ["getSshPublicKey", "getSshPublicKeyOutput"], () => require("./getSshPublicKey"));
exports.getVirtualMachine = null;
exports.getVirtualMachineOutput = null;
utilities.lazyLoad(exports, ["getVirtualMachine", "getVirtualMachineOutput"], () => require("./getVirtualMachine"));
exports.getVirtualMachineExtension = null;
exports.getVirtualMachineExtensionOutput = null;
utilities.lazyLoad(exports, ["getVirtualMachineExtension", "getVirtualMachineExtensionOutput"], () => require("./getVirtualMachineExtension"));
exports.getVirtualMachineRunCommandByVirtualMachine = null;
exports.getVirtualMachineRunCommandByVirtualMachineOutput = null;
utilities.lazyLoad(exports, ["getVirtualMachineRunCommandByVirtualMachine", "getVirtualMachineRunCommandByVirtualMachineOutput"], () => require("./getVirtualMachineRunCommandByVirtualMachine"));
exports.getVirtualMachineScaleSet = null;
exports.getVirtualMachineScaleSetOutput = null;
utilities.lazyLoad(exports, ["getVirtualMachineScaleSet", "getVirtualMachineScaleSetOutput"], () => require("./getVirtualMachineScaleSet"));
exports.getVirtualMachineScaleSetExtension = null;
exports.getVirtualMachineScaleSetExtensionOutput = null;
utilities.lazyLoad(exports, ["getVirtualMachineScaleSetExtension", "getVirtualMachineScaleSetExtensionOutput"], () => require("./getVirtualMachineScaleSetExtension"));
exports.getVirtualMachineScaleSetVM = null;
exports.getVirtualMachineScaleSetVMOutput = null;
utilities.lazyLoad(exports, ["getVirtualMachineScaleSetVM", "getVirtualMachineScaleSetVMOutput"], () => require("./getVirtualMachineScaleSetVM"));
exports.getVirtualMachineScaleSetVMExtension = null;
exports.getVirtualMachineScaleSetVMExtensionOutput = null;
utilities.lazyLoad(exports, ["getVirtualMachineScaleSetVMExtension", "getVirtualMachineScaleSetVMExtensionOutput"], () => require("./getVirtualMachineScaleSetVMExtension"));
exports.getVirtualMachineScaleSetVMRunCommand = null;
exports.getVirtualMachineScaleSetVMRunCommandOutput = null;
utilities.lazyLoad(exports, ["getVirtualMachineScaleSetVMRunCommand", "getVirtualMachineScaleSetVMRunCommandOutput"], () => require("./getVirtualMachineScaleSetVMRunCommand"));
exports.Image = null;
utilities.lazyLoad(exports, ["Image"], () => require("./image"));
exports.ProximityPlacementGroup = null;
utilities.lazyLoad(exports, ["ProximityPlacementGroup"], () => require("./proximityPlacementGroup"));
exports.RestorePoint = null;
utilities.lazyLoad(exports, ["RestorePoint"], () => require("./restorePoint"));
exports.RestorePointCollection = null;
utilities.lazyLoad(exports, ["RestorePointCollection"], () => require("./restorePointCollection"));
exports.Snapshot = null;
utilities.lazyLoad(exports, ["Snapshot"], () => require("./snapshot"));
exports.SshPublicKey = null;
utilities.lazyLoad(exports, ["SshPublicKey"], () => require("./sshPublicKey"));
exports.VirtualMachine = null;
utilities.lazyLoad(exports, ["VirtualMachine"], () => require("./virtualMachine"));
exports.VirtualMachineExtension = null;
utilities.lazyLoad(exports, ["VirtualMachineExtension"], () => require("./virtualMachineExtension"));
exports.VirtualMachineRunCommandByVirtualMachine = null;
utilities.lazyLoad(exports, ["VirtualMachineRunCommandByVirtualMachine"], () => require("./virtualMachineRunCommandByVirtualMachine"));
exports.VirtualMachineScaleSet = null;
utilities.lazyLoad(exports, ["VirtualMachineScaleSet"], () => require("./virtualMachineScaleSet"));
exports.VirtualMachineScaleSetExtension = null;
utilities.lazyLoad(exports, ["VirtualMachineScaleSetExtension"], () => require("./virtualMachineScaleSetExtension"));
exports.VirtualMachineScaleSetVM = null;
utilities.lazyLoad(exports, ["VirtualMachineScaleSetVM"], () => require("./virtualMachineScaleSetVM"));
exports.VirtualMachineScaleSetVMExtension = null;
utilities.lazyLoad(exports, ["VirtualMachineScaleSetVMExtension"], () => require("./virtualMachineScaleSetVMExtension"));
exports.VirtualMachineScaleSetVMRunCommand = null;
utilities.lazyLoad(exports, ["VirtualMachineScaleSetVMRunCommand"], () => require("./virtualMachineScaleSetVMRunCommand"));
// Export enums:
__exportStar(require("../types/enums/compute"), exports);
// Export sub-modules:
const v20201201 = require("./v20201201");
exports.v20201201 = v20201201;
const v20210301 = require("./v20210301");
exports.v20210301 = v20210301;
const v20210401 = require("./v20210401");
exports.v20210401 = v20210401;
const v20210701 = require("./v20210701");
exports.v20210701 = v20210701;
const v20211101 = require("./v20211101");
exports.v20211101 = v20211101;
const v20220301 = require("./v20220301");
exports.v20220301 = v20220301;
const v20220303 = require("./v20220303");
exports.v20220303 = v20220303;
const v20220702 = require("./v20220702");
exports.v20220702 = v20220702;
const v20220801 = require("./v20220801");
exports.v20220801 = v20220801;
const v20220803 = require("./v20220803");
exports.v20220803 = v20220803;
const v20220904 = require("./v20220904");
exports.v20220904 = v20220904;
const v20221101 = require("./v20221101");
exports.v20221101 = v20221101;
const v20230102 = require("./v20230102");
exports.v20230102 = v20230102;
const v20230301 = require("./v20230301");
exports.v20230301 = v20230301;
const v20230402 = require("./v20230402");
exports.v20230402 = v20230402;
const v20230701 = require("./v20230701");
exports.v20230701 = v20230701;
const v20230703 = require("./v20230703");
exports.v20230703 = v20230703;
const v20230901 = require("./v20230901");
exports.v20230901 = v20230901;
const v20231002 = require("./v20231002");
exports.v20231002 = v20231002;
const v20240301 = require("./v20240301");
exports.v20240301 = v20240301;
const v20240302 = require("./v20240302");
exports.v20240302 = v20240302;
const v20240303 = require("./v20240303");
exports.v20240303 = v20240303;
const v20240701 = require("./v20240701");
exports.v20240701 = v20240701;
const v20241104 = require("./v20241104");
exports.v20241104 = v20241104;
const _module = {
    version: utilities.getVersion(),
    construct: (name, type, urn) => {
        switch (type) {
            case "azure-native:compute:AvailabilitySet":
                return new exports.AvailabilitySet(name, undefined, { urn });
            case "azure-native:compute:CapacityReservation":
                return new exports.CapacityReservation(name, undefined, { urn });
            case "azure-native:compute:CapacityReservationGroup":
                return new exports.CapacityReservationGroup(name, undefined, { urn });
            case "azure-native:compute:CloudService":
                return new exports.CloudService(name, undefined, { urn });
            case "azure-native:compute:DedicatedHost":
                return new exports.DedicatedHost(name, undefined, { urn });
            case "azure-native:compute:DedicatedHostGroup":
                return new exports.DedicatedHostGroup(name, undefined, { urn });
            case "azure-native:compute:Disk":
                return new exports.Disk(name, undefined, { urn });
            case "azure-native:compute:DiskAccess":
                return new exports.DiskAccess(name, undefined, { urn });
            case "azure-native:compute:DiskAccessAPrivateEndpointConnection":
                return new exports.DiskAccessAPrivateEndpointConnection(name, undefined, { urn });
            case "azure-native:compute:DiskEncryptionSet":
                return new exports.DiskEncryptionSet(name, undefined, { urn });
            case "azure-native:compute:Gallery":
                return new exports.Gallery(name, undefined, { urn });
            case "azure-native:compute:GalleryApplication":
                return new exports.GalleryApplication(name, undefined, { urn });
            case "azure-native:compute:GalleryApplicationVersion":
                return new exports.GalleryApplicationVersion(name, undefined, { urn });
            case "azure-native:compute:GalleryImage":
                return new exports.GalleryImage(name, undefined, { urn });
            case "azure-native:compute:GalleryImageVersion":
                return new exports.GalleryImageVersion(name, undefined, { urn });
            case "azure-native:compute:GalleryInVMAccessControlProfile":
                return new exports.GalleryInVMAccessControlProfile(name, undefined, { urn });
            case "azure-native:compute:GalleryInVMAccessControlProfileVersion":
                return new exports.GalleryInVMAccessControlProfileVersion(name, undefined, { urn });
            case "azure-native:compute:Image":
                return new exports.Image(name, undefined, { urn });
            case "azure-native:compute:ProximityPlacementGroup":
                return new exports.ProximityPlacementGroup(name, undefined, { urn });
            case "azure-native:compute:RestorePoint":
                return new exports.RestorePoint(name, undefined, { urn });
            case "azure-native:compute:RestorePointCollection":
                return new exports.RestorePointCollection(name, undefined, { urn });
            case "azure-native:compute:Snapshot":
                return new exports.Snapshot(name, undefined, { urn });
            case "azure-native:compute:SshPublicKey":
                return new exports.SshPublicKey(name, undefined, { urn });
            case "azure-native:compute:VirtualMachine":
                return new exports.VirtualMachine(name, undefined, { urn });
            case "azure-native:compute:VirtualMachineExtension":
                return new exports.VirtualMachineExtension(name, undefined, { urn });
            case "azure-native:compute:VirtualMachineRunCommandByVirtualMachine":
                return new exports.VirtualMachineRunCommandByVirtualMachine(name, undefined, { urn });
            case "azure-native:compute:VirtualMachineScaleSet":
                return new exports.VirtualMachineScaleSet(name, undefined, { urn });
            case "azure-native:compute:VirtualMachineScaleSetExtension":
                return new exports.VirtualMachineScaleSetExtension(name, undefined, { urn });
            case "azure-native:compute:VirtualMachineScaleSetVM":
                return new exports.VirtualMachineScaleSetVM(name, undefined, { urn });
            case "azure-native:compute:VirtualMachineScaleSetVMExtension":
                return new exports.VirtualMachineScaleSetVMExtension(name, undefined, { urn });
            case "azure-native:compute:VirtualMachineScaleSetVMRunCommand":
                return new exports.VirtualMachineScaleSetVMRunCommand(name, undefined, { urn });
            default:
                throw new Error(`unknown resource type ${type}`);
        }
    },
};
pulumi.runtime.registerResourceModule("azure-native", "compute", _module);
//# sourceMappingURL=data:application/json;base64,