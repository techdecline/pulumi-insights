"use strict";
// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***
Object.defineProperty(exports, "__esModule", { value: true });
exports.getGalleryInVMAccessControlProfileVersionOutput = exports.getGalleryInVMAccessControlProfileVersion = void 0;
const pulumi = require("@pulumi/pulumi");
const utilities = require("../utilities");
/**
 * Retrieves information about a gallery inVMAccessControlProfile version.
 * Azure REST API version: 2024-03-03.
 */
function getGalleryInVMAccessControlProfileVersion(args, opts) {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("azure-native:compute:getGalleryInVMAccessControlProfileVersion", {
        "galleryName": args.galleryName,
        "inVMAccessControlProfileName": args.inVMAccessControlProfileName,
        "inVMAccessControlProfileVersionName": args.inVMAccessControlProfileVersionName,
        "resourceGroupName": args.resourceGroupName,
    }, opts);
}
exports.getGalleryInVMAccessControlProfileVersion = getGalleryInVMAccessControlProfileVersion;
/**
 * Retrieves information about a gallery inVMAccessControlProfile version.
 * Azure REST API version: 2024-03-03.
 */
function getGalleryInVMAccessControlProfileVersionOutput(args, opts) {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invokeOutput("azure-native:compute:getGalleryInVMAccessControlProfileVersion", {
        "galleryName": args.galleryName,
        "inVMAccessControlProfileName": args.inVMAccessControlProfileName,
        "inVMAccessControlProfileVersionName": args.inVMAccessControlProfileVersionName,
        "resourceGroupName": args.resourceGroupName,
    }, opts);
}
exports.getGalleryInVMAccessControlProfileVersionOutput = getGalleryInVMAccessControlProfileVersionOutput;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZ2V0R2FsbGVyeUluVk1BY2Nlc3NDb250cm9sUHJvZmlsZVZlcnNpb24uanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi9jb21wdXRlL2dldEdhbGxlcnlJblZNQWNjZXNzQ29udHJvbFByb2ZpbGVWZXJzaW9uLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7QUFBQSxzRUFBc0U7QUFDdEUsaUZBQWlGOzs7QUFFakYseUNBQXlDO0FBSXpDLDBDQUEwQztBQUUxQzs7O0dBR0c7QUFDSCxTQUFnQix5Q0FBeUMsQ0FBQyxJQUFtRCxFQUFFLElBQTJCO0lBQ3RJLElBQUksR0FBRyxNQUFNLENBQUMsWUFBWSxDQUFDLFNBQVMsQ0FBQyxvQkFBb0IsRUFBRSxFQUFFLElBQUksSUFBSSxFQUFFLENBQUMsQ0FBQztJQUN6RSxPQUFPLE1BQU0sQ0FBQyxPQUFPLENBQUMsTUFBTSxDQUFDLGdFQUFnRSxFQUFFO1FBQzNGLGFBQWEsRUFBRSxJQUFJLENBQUMsV0FBVztRQUMvQiw4QkFBOEIsRUFBRSxJQUFJLENBQUMsNEJBQTRCO1FBQ2pFLHFDQUFxQyxFQUFFLElBQUksQ0FBQyxtQ0FBbUM7UUFDL0UsbUJBQW1CLEVBQUUsSUFBSSxDQUFDLGlCQUFpQjtLQUM5QyxFQUFFLElBQUksQ0FBQyxDQUFDO0FBQ2IsQ0FBQztBQVJELDhGQVFDO0FBOEVEOzs7R0FHRztBQUNILFNBQWdCLCtDQUErQyxDQUFDLElBQXlELEVBQUUsSUFBaUM7SUFDeEosSUFBSSxHQUFHLE1BQU0sQ0FBQyxZQUFZLENBQUMsU0FBUyxDQUFDLG9CQUFvQixFQUFFLEVBQUUsSUFBSSxJQUFJLEVBQUUsQ0FBQyxDQUFDO0lBQ3pFLE9BQU8sTUFBTSxDQUFDLE9BQU8sQ0FBQyxZQUFZLENBQUMsZ0VBQWdFLEVBQUU7UUFDakcsYUFBYSxFQUFFLElBQUksQ0FBQyxXQUFXO1FBQy9CLDhCQUE4QixFQUFFLElBQUksQ0FBQyw0QkFBNEI7UUFDakUscUNBQXFDLEVBQUUsSUFBSSxDQUFDLG1DQUFtQztRQUMvRSxtQkFBbUIsRUFBRSxJQUFJLENBQUMsaUJBQWlCO0tBQzlDLEVBQUUsSUFBSSxDQUFDLENBQUM7QUFDYixDQUFDO0FBUkQsMEdBUUMifQ==