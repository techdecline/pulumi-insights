"use strict";
// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***
Object.defineProperty(exports, "__esModule", { value: true });
exports.getLogAnalyticExportRequestRateByIntervalOutput = exports.getLogAnalyticExportRequestRateByInterval = void 0;
const pulumi = require("@pulumi/pulumi");
const utilities = require("../utilities");
/**
 * Export logs that show Api requests made by this subscription in the given time window to show throttling activities.
 * Azure REST API version: 2023-03-01.
 *
 * Other available API versions: 2020-12-01, 2021-03-01, 2021-04-01, 2021-07-01, 2021-11-01, 2022-03-01, 2022-08-01, 2022-11-01, 2023-07-01, 2023-09-01, 2024-03-01, 2024-07-01.
 */
function getLogAnalyticExportRequestRateByInterval(args, opts) {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("azure-native:compute:getLogAnalyticExportRequestRateByInterval", {
        "blobContainerSasUri": args.blobContainerSasUri,
        "fromTime": args.fromTime,
        "groupByClientApplicationId": args.groupByClientApplicationId,
        "groupByOperationName": args.groupByOperationName,
        "groupByResourceName": args.groupByResourceName,
        "groupByThrottlePolicy": args.groupByThrottlePolicy,
        "groupByUserAgent": args.groupByUserAgent,
        "intervalLength": args.intervalLength,
        "location": args.location,
        "toTime": args.toTime,
    }, opts);
}
exports.getLogAnalyticExportRequestRateByInterval = getLogAnalyticExportRequestRateByInterval;
/**
 * Export logs that show Api requests made by this subscription in the given time window to show throttling activities.
 * Azure REST API version: 2023-03-01.
 *
 * Other available API versions: 2020-12-01, 2021-03-01, 2021-04-01, 2021-07-01, 2021-11-01, 2022-03-01, 2022-08-01, 2022-11-01, 2023-07-01, 2023-09-01, 2024-03-01, 2024-07-01.
 */
function getLogAnalyticExportRequestRateByIntervalOutput(args, opts) {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invokeOutput("azure-native:compute:getLogAnalyticExportRequestRateByInterval", {
        "blobContainerSasUri": args.blobContainerSasUri,
        "fromTime": args.fromTime,
        "groupByClientApplicationId": args.groupByClientApplicationId,
        "groupByOperationName": args.groupByOperationName,
        "groupByResourceName": args.groupByResourceName,
        "groupByThrottlePolicy": args.groupByThrottlePolicy,
        "groupByUserAgent": args.groupByUserAgent,
        "intervalLength": args.intervalLength,
        "location": args.location,
        "toTime": args.toTime,
    }, opts);
}
exports.getLogAnalyticExportRequestRateByIntervalOutput = getLogAnalyticExportRequestRateByIntervalOutput;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZ2V0TG9nQW5hbHl0aWNFeHBvcnRSZXF1ZXN0UmF0ZUJ5SW50ZXJ2YWwuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi9jb21wdXRlL2dldExvZ0FuYWx5dGljRXhwb3J0UmVxdWVzdFJhdGVCeUludGVydmFsLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7QUFBQSxzRUFBc0U7QUFDdEUsaUZBQWlGOzs7QUFFakYseUNBQXlDO0FBSXpDLDBDQUEwQztBQUUxQzs7Ozs7R0FLRztBQUNILFNBQWdCLHlDQUF5QyxDQUFDLElBQW1ELEVBQUUsSUFBMkI7SUFDdEksSUFBSSxHQUFHLE1BQU0sQ0FBQyxZQUFZLENBQUMsU0FBUyxDQUFDLG9CQUFvQixFQUFFLEVBQUUsSUFBSSxJQUFJLEVBQUUsQ0FBQyxDQUFDO0lBQ3pFLE9BQU8sTUFBTSxDQUFDLE9BQU8sQ0FBQyxNQUFNLENBQUMsZ0VBQWdFLEVBQUU7UUFDM0YscUJBQXFCLEVBQUUsSUFBSSxDQUFDLG1CQUFtQjtRQUMvQyxVQUFVLEVBQUUsSUFBSSxDQUFDLFFBQVE7UUFDekIsNEJBQTRCLEVBQUUsSUFBSSxDQUFDLDBCQUEwQjtRQUM3RCxzQkFBc0IsRUFBRSxJQUFJLENBQUMsb0JBQW9CO1FBQ2pELHFCQUFxQixFQUFFLElBQUksQ0FBQyxtQkFBbUI7UUFDL0MsdUJBQXVCLEVBQUUsSUFBSSxDQUFDLHFCQUFxQjtRQUNuRCxrQkFBa0IsRUFBRSxJQUFJLENBQUMsZ0JBQWdCO1FBQ3pDLGdCQUFnQixFQUFFLElBQUksQ0FBQyxjQUFjO1FBQ3JDLFVBQVUsRUFBRSxJQUFJLENBQUMsUUFBUTtRQUN6QixRQUFRLEVBQUUsSUFBSSxDQUFDLE1BQU07S0FDeEIsRUFBRSxJQUFJLENBQUMsQ0FBQztBQUNiLENBQUM7QUFkRCw4RkFjQztBQXNERDs7Ozs7R0FLRztBQUNILFNBQWdCLCtDQUErQyxDQUFDLElBQXlELEVBQUUsSUFBaUM7SUFDeEosSUFBSSxHQUFHLE1BQU0sQ0FBQyxZQUFZLENBQUMsU0FBUyxDQUFDLG9CQUFvQixFQUFFLEVBQUUsSUFBSSxJQUFJLEVBQUUsQ0FBQyxDQUFDO0lBQ3pFLE9BQU8sTUFBTSxDQUFDLE9BQU8sQ0FBQyxZQUFZLENBQUMsZ0VBQWdFLEVBQUU7UUFDakcscUJBQXFCLEVBQUUsSUFBSSxDQUFDLG1CQUFtQjtRQUMvQyxVQUFVLEVBQUUsSUFBSSxDQUFDLFFBQVE7UUFDekIsNEJBQTRCLEVBQUUsSUFBSSxDQUFDLDBCQUEwQjtRQUM3RCxzQkFBc0IsRUFBRSxJQUFJLENBQUMsb0JBQW9CO1FBQ2pELHFCQUFxQixFQUFFLElBQUksQ0FBQyxtQkFBbUI7UUFDL0MsdUJBQXVCLEVBQUUsSUFBSSxDQUFDLHFCQUFxQjtRQUNuRCxrQkFBa0IsRUFBRSxJQUFJLENBQUMsZ0JBQWdCO1FBQ3pDLGdCQUFnQixFQUFFLElBQUksQ0FBQyxjQUFjO1FBQ3JDLFVBQVUsRUFBRSxJQUFJLENBQUMsUUFBUTtRQUN6QixRQUFRLEVBQUUsSUFBSSxDQUFDLE1BQU07S0FDeEIsRUFBRSxJQUFJLENBQUMsQ0FBQztBQUNiLENBQUM7QUFkRCwwR0FjQyJ9