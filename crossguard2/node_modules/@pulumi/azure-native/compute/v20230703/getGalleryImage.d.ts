import * as pulumi from "@pulumi/pulumi";
import * as outputs from "../../types/output";
/**
 * Retrieves information about a gallery image definition.
 */
export declare function getGalleryImage(args: GetGalleryImageArgs, opts?: pulumi.InvokeOptions): Promise<GetGalleryImageResult>;
export interface GetGalleryImageArgs {
    /**
     * The name of the gallery image definition to be retrieved.
     */
    galleryImageName: string;
    /**
     * The name of the Shared Image Gallery from which the Image Definitions are to be retrieved.
     */
    galleryName: string;
    /**
     * The name of the resource group.
     */
    resourceGroupName: string;
}
/**
 * Specifies information about the gallery image definition that you want to create or update.
 */
export interface GetGalleryImageResult {
    /**
     * The architecture of the image. Applicable to OS disks only.
     */
    readonly architecture?: string;
    /**
     * The description of this gallery image definition resource. This property is updatable.
     */
    readonly description?: string;
    /**
     * Describes the disallowed disk types.
     */
    readonly disallowed?: outputs.compute.v20230703.DisallowedResponse;
    /**
     * The end of life date of the gallery image definition. This property can be used for decommissioning purposes. This property is updatable.
     */
    readonly endOfLifeDate?: string;
    /**
     * The Eula agreement for the gallery image definition.
     */
    readonly eula?: string;
    /**
     * A list of gallery image features.
     */
    readonly features?: outputs.compute.v20230703.GalleryImageFeatureResponse[];
    /**
     * The hypervisor generation of the Virtual Machine. Applicable to OS disks only.
     */
    readonly hyperVGeneration?: string;
    /**
     * Resource Id
     */
    readonly id: string;
    /**
     * This is the gallery image definition identifier.
     */
    readonly identifier: outputs.compute.v20230703.GalleryImageIdentifierResponse;
    /**
     * Resource location
     */
    readonly location: string;
    /**
     * Resource name
     */
    readonly name: string;
    /**
     * This property allows the user to specify whether the virtual machines created under this image are 'Generalized' or 'Specialized'.
     */
    readonly osState: string;
    /**
     * This property allows you to specify the type of the OS that is included in the disk when creating a VM from a managed image. Possible values are: **Windows,** **Linux.**
     */
    readonly osType: string;
    /**
     * The privacy statement uri.
     */
    readonly privacyStatementUri?: string;
    /**
     * The provisioning state, which only appears in the response.
     */
    readonly provisioningState: string;
    /**
     * Describes the gallery image definition purchase plan. This is used by marketplace images.
     */
    readonly purchasePlan?: outputs.compute.v20230703.ImagePurchasePlanResponse;
    /**
     * The properties describe the recommended machine configuration for this Image Definition. These properties are updatable.
     */
    readonly recommended?: outputs.compute.v20230703.RecommendedMachineConfigurationResponse;
    /**
     * The release note uri.
     */
    readonly releaseNoteUri?: string;
    /**
     * Resource tags
     */
    readonly tags?: {
        [key: string]: string;
    };
    /**
     * Resource type
     */
    readonly type: string;
}
/**
 * Retrieves information about a gallery image definition.
 */
export declare function getGalleryImageOutput(args: GetGalleryImageOutputArgs, opts?: pulumi.InvokeOutputOptions): pulumi.Output<GetGalleryImageResult>;
export interface GetGalleryImageOutputArgs {
    /**
     * The name of the gallery image definition to be retrieved.
     */
    galleryImageName: pulumi.Input<string>;
    /**
     * The name of the Shared Image Gallery from which the Image Definitions are to be retrieved.
     */
    galleryName: pulumi.Input<string>;
    /**
     * The name of the resource group.
     */
    resourceGroupName: pulumi.Input<string>;
}
