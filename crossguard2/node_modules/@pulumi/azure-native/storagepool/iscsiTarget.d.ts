import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as enums from "../types/enums";
/**
 * Response for iSCSI Target requests.
 * Azure REST API version: 2021-08-01. Prior API version in Azure Native 1.x: 2020-03-15-preview.
 *
 * Other available API versions: 2020-03-15-preview.
 */
export declare class IscsiTarget extends pulumi.CustomResource {
    /**
     * Get an existing IscsiTarget resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    static get(name: string, id: pulumi.Input<pulumi.ID>, opts?: pulumi.CustomResourceOptions): IscsiTarget;
    /**
     * Returns true if the given object is an instance of IscsiTarget.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    static isInstance(obj: any): obj is IscsiTarget;
    /**
     * Mode for Target connectivity.
     */
    readonly aclMode: pulumi.Output<string>;
    /**
     * List of private IPv4 addresses to connect to the iSCSI Target.
     */
    readonly endpoints: pulumi.Output<string[] | undefined>;
    /**
     * List of LUNs to be exposed through iSCSI Target.
     */
    readonly luns: pulumi.Output<outputs.storagepool.IscsiLunResponse[] | undefined>;
    /**
     * Azure resource id. Indicates if this resource is managed by another Azure resource.
     */
    readonly managedBy: pulumi.Output<string>;
    /**
     * List of Azure resource ids that manage this resource.
     */
    readonly managedByExtended: pulumi.Output<string[]>;
    /**
     * The name of the resource
     */
    readonly name: pulumi.Output<string>;
    /**
     * The port used by iSCSI Target portal group.
     */
    readonly port: pulumi.Output<number | undefined>;
    /**
     * State of the operation on the resource.
     */
    readonly provisioningState: pulumi.Output<string>;
    /**
     * List of identifiers for active sessions on the iSCSI target
     */
    readonly sessions: pulumi.Output<string[]>;
    /**
     * Access Control List (ACL) for an iSCSI Target; defines LUN masking policy
     */
    readonly staticAcls: pulumi.Output<outputs.storagepool.AclResponse[] | undefined>;
    /**
     * Operational status of the iSCSI Target.
     */
    readonly status: pulumi.Output<string>;
    /**
     * Resource metadata required by ARM RPC
     */
    readonly systemData: pulumi.Output<outputs.storagepool.SystemMetadataResponse>;
    /**
     * iSCSI Target IQN (iSCSI Qualified Name); example: "iqn.2005-03.org.iscsi:server".
     */
    readonly targetIqn: pulumi.Output<string>;
    /**
     * The type of the resource. Ex- Microsoft.Compute/virtualMachines or Microsoft.Storage/storageAccounts.
     */
    readonly type: pulumi.Output<string>;
    /**
     * Create a IscsiTarget resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: IscsiTargetArgs, opts?: pulumi.CustomResourceOptions);
}
/**
 * The set of arguments for constructing a IscsiTarget resource.
 */
export interface IscsiTargetArgs {
    /**
     * Mode for Target connectivity.
     */
    aclMode: pulumi.Input<string | enums.storagepool.IscsiTargetAclMode>;
    /**
     * The name of the Disk Pool.
     */
    diskPoolName: pulumi.Input<string>;
    /**
     * The name of the iSCSI Target.
     */
    iscsiTargetName?: pulumi.Input<string>;
    /**
     * List of LUNs to be exposed through iSCSI Target.
     */
    luns?: pulumi.Input<pulumi.Input<inputs.storagepool.IscsiLunArgs>[]>;
    /**
     * Azure resource id. Indicates if this resource is managed by another Azure resource.
     */
    managedBy?: pulumi.Input<string>;
    /**
     * List of Azure resource ids that manage this resource.
     */
    managedByExtended?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The name of the resource group. The name is case insensitive.
     */
    resourceGroupName: pulumi.Input<string>;
    /**
     * Access Control List (ACL) for an iSCSI Target; defines LUN masking policy
     */
    staticAcls?: pulumi.Input<pulumi.Input<inputs.storagepool.AclArgs>[]>;
    /**
     * iSCSI Target IQN (iSCSI Qualified Name); example: "iqn.2005-03.org.iscsi:server".
     */
    targetIqn?: pulumi.Input<string>;
}
