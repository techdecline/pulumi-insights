import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../../types/input";
import * as outputs from "../../types/output";
/**
 * Response for iSCSI target requests.
 */
export declare class IscsiTarget extends pulumi.CustomResource {
    /**
     * Get an existing IscsiTarget resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    static get(name: string, id: pulumi.Input<pulumi.ID>, opts?: pulumi.CustomResourceOptions): IscsiTarget;
    /**
     * Returns true if the given object is an instance of IscsiTarget.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    static isInstance(obj: any): obj is IscsiTarget;
    /**
     * The name of the resource
     */
    readonly name: pulumi.Output<string>;
    /**
     * State of the operation on the resource.
     */
    readonly provisioningState: pulumi.Output<string>;
    /**
     * Operational status of the iSCSI target.
     */
    readonly status: pulumi.Output<string>;
    /**
     * iSCSI target IQN (iSCSI Qualified Name); example: "iqn.2005-03.org.iscsi:server".
     */
    readonly targetIqn: pulumi.Output<string>;
    /**
     * List of iSCSI target portal groups. Can have 1 portal group at most.
     */
    readonly tpgs: pulumi.Output<outputs.storagepool.v20200315preview.TargetPortalGroupResponse[]>;
    /**
     * The type of the resource. Ex- Microsoft.Compute/virtualMachines or Microsoft.Storage/storageAccounts.
     */
    readonly type: pulumi.Output<string>;
    /**
     * Create a IscsiTarget resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: IscsiTargetArgs, opts?: pulumi.CustomResourceOptions);
}
/**
 * The set of arguments for constructing a IscsiTarget resource.
 */
export interface IscsiTargetArgs {
    /**
     * The name of the Disk pool.
     */
    diskPoolName: pulumi.Input<string>;
    /**
     * The name of the iSCSI target.
     */
    iscsiTargetName?: pulumi.Input<string>;
    /**
     * The name of the resource group. The name is case insensitive.
     */
    resourceGroupName: pulumi.Input<string>;
    /**
     * iSCSI target IQN (iSCSI Qualified Name); example: "iqn.2005-03.org.iscsi:server".
     */
    targetIqn?: pulumi.Input<string>;
    /**
     * List of iSCSI target portal groups. Can have 1 portal group at most.
     */
    tpgs: pulumi.Input<pulumi.Input<inputs.storagepool.v20200315preview.TargetPortalGroupCreateArgs>[]>;
}
