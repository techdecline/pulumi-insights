import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../../types/input";
import * as outputs from "../../types/output";
/**
 * Fabric Capacity resource
 */
export declare class FabricCapacity extends pulumi.CustomResource {
    /**
     * Get an existing FabricCapacity resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    static get(name: string, id: pulumi.Input<pulumi.ID>, opts?: pulumi.CustomResourceOptions): FabricCapacity;
    /**
     * Returns true if the given object is an instance of FabricCapacity.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    static isInstance(obj: any): obj is FabricCapacity;
    /**
     * The capacity administration
     */
    readonly administration: pulumi.Output<outputs.fabric.v20231101.CapacityAdministrationResponse>;
    /**
     * The geo-location where the resource lives
     */
    readonly location: pulumi.Output<string>;
    /**
     * The name of the resource
     */
    readonly name: pulumi.Output<string>;
    /**
     * The current deployment state of Microsoft Fabric resource. The provisioningState is to indicate states for resource provisioning.
     */
    readonly provisioningState: pulumi.Output<string>;
    /**
     * The SKU details
     */
    readonly sku: pulumi.Output<outputs.fabric.v20231101.RpSkuResponse>;
    /**
     * The current state of Microsoft Fabric resource. The state is to indicate more states outside of resource provisioning.
     */
    readonly state: pulumi.Output<string>;
    /**
     * Azure Resource Manager metadata containing createdBy and modifiedBy information.
     */
    readonly systemData: pulumi.Output<outputs.fabric.v20231101.SystemDataResponse>;
    /**
     * Resource tags.
     */
    readonly tags: pulumi.Output<{
        [key: string]: string;
    } | undefined>;
    /**
     * The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
     */
    readonly type: pulumi.Output<string>;
    /**
     * Create a FabricCapacity resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: FabricCapacityArgs, opts?: pulumi.CustomResourceOptions);
}
/**
 * The set of arguments for constructing a FabricCapacity resource.
 */
export interface FabricCapacityArgs {
    /**
     * The capacity administration
     */
    administration: pulumi.Input<inputs.fabric.v20231101.CapacityAdministrationArgs>;
    /**
     * The name of the Microsoft Fabric capacity. It must be a minimum of 3 characters, and a maximum of 63.
     */
    capacityName?: pulumi.Input<string>;
    /**
     * The geo-location where the resource lives
     */
    location?: pulumi.Input<string>;
    /**
     * The name of the resource group. The name is case insensitive.
     */
    resourceGroupName: pulumi.Input<string>;
    /**
     * The SKU details
     */
    sku: pulumi.Input<inputs.fabric.v20231101.RpSkuArgs>;
    /**
     * Resource tags.
     */
    tags?: pulumi.Input<{
        [key: string]: pulumi.Input<string>;
    }>;
}
