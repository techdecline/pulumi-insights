import * as pulumi from "@pulumi/pulumi";
import * as outputs from "../../types/output";
/**
 * Gets a backup instance with name in a backup vault
 */
export declare function getBackupInstance(args: GetBackupInstanceArgs, opts?: pulumi.InvokeOptions): Promise<GetBackupInstanceResult>;
export interface GetBackupInstanceArgs {
    /**
     * The name of the backup instance.
     */
    backupInstanceName: string;
    /**
     * The name of the resource group. The name is case insensitive.
     */
    resourceGroupName: string;
    /**
     * The name of the backup vault.
     */
    vaultName: string;
}
/**
 * BackupInstance Resource
 */
export interface GetBackupInstanceResult {
    /**
     * Proxy Resource Id represents the complete path to the resource.
     */
    readonly id: string;
    /**
     * Proxy Resource name associated with the resource.
     */
    readonly name: string;
    /**
     * BackupInstanceResource properties
     */
    readonly properties: outputs.dataprotection.v20231101.BackupInstanceResponse;
    /**
     * Metadata pertaining to creation and last modification of the resource.
     */
    readonly systemData: outputs.dataprotection.v20231101.SystemDataResponse;
    /**
     * Proxy Resource tags.
     */
    readonly tags?: {
        [key: string]: string;
    };
    /**
     * Proxy Resource type represents the complete path of the form Namespace/ResourceType/ResourceType/...
     */
    readonly type: string;
}
/**
 * Gets a backup instance with name in a backup vault
 */
export declare function getBackupInstanceOutput(args: GetBackupInstanceOutputArgs, opts?: pulumi.InvokeOutputOptions): pulumi.Output<GetBackupInstanceResult>;
export interface GetBackupInstanceOutputArgs {
    /**
     * The name of the backup instance.
     */
    backupInstanceName: pulumi.Input<string>;
    /**
     * The name of the resource group. The name is case insensitive.
     */
    resourceGroupName: pulumi.Input<string>;
    /**
     * The name of the backup vault.
     */
    vaultName: pulumi.Input<string>;
}
