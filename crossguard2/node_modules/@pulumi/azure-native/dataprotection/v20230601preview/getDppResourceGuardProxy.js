"use strict";
// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***
Object.defineProperty(exports, "__esModule", { value: true });
exports.getDppResourceGuardProxyOutput = exports.getDppResourceGuardProxy = void 0;
const pulumi = require("@pulumi/pulumi");
const utilities = require("../../utilities");
/**
 * ResourceGuardProxyBaseResource object, used for response and request bodies for ResourceGuardProxy APIs
 */
function getDppResourceGuardProxy(args, opts) {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("azure-native:dataprotection/v20230601preview:getDppResourceGuardProxy", {
        "resourceGroupName": args.resourceGroupName,
        "resourceGuardProxyName": args.resourceGuardProxyName,
        "vaultName": args.vaultName,
    }, opts);
}
exports.getDppResourceGuardProxy = getDppResourceGuardProxy;
/**
 * ResourceGuardProxyBaseResource object, used for response and request bodies for ResourceGuardProxy APIs
 */
function getDppResourceGuardProxyOutput(args, opts) {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invokeOutput("azure-native:dataprotection/v20230601preview:getDppResourceGuardProxy", {
        "resourceGroupName": args.resourceGroupName,
        "resourceGuardProxyName": args.resourceGuardProxyName,
        "vaultName": args.vaultName,
    }, opts);
}
exports.getDppResourceGuardProxyOutput = getDppResourceGuardProxyOutput;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZ2V0RHBwUmVzb3VyY2VHdWFyZFByb3h5LmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vZGF0YXByb3RlY3Rpb24vdjIwMjMwNjAxcHJldmlldy9nZXREcHBSZXNvdXJjZUd1YXJkUHJveHkudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IjtBQUFBLHNFQUFzRTtBQUN0RSxpRkFBaUY7OztBQUVqRix5Q0FBeUM7QUFJekMsNkNBQTZDO0FBRTdDOztHQUVHO0FBQ0gsU0FBZ0Isd0JBQXdCLENBQUMsSUFBa0MsRUFBRSxJQUEyQjtJQUNwRyxJQUFJLEdBQUcsTUFBTSxDQUFDLFlBQVksQ0FBQyxTQUFTLENBQUMsb0JBQW9CLEVBQUUsRUFBRSxJQUFJLElBQUksRUFBRSxDQUFDLENBQUM7SUFDekUsT0FBTyxNQUFNLENBQUMsT0FBTyxDQUFDLE1BQU0sQ0FBQyx1RUFBdUUsRUFBRTtRQUNsRyxtQkFBbUIsRUFBRSxJQUFJLENBQUMsaUJBQWlCO1FBQzNDLHdCQUF3QixFQUFFLElBQUksQ0FBQyxzQkFBc0I7UUFDckQsV0FBVyxFQUFFLElBQUksQ0FBQyxTQUFTO0tBQzlCLEVBQUUsSUFBSSxDQUFDLENBQUM7QUFDYixDQUFDO0FBUEQsNERBT0M7QUEwQ0Q7O0dBRUc7QUFDSCxTQUFnQiw4QkFBOEIsQ0FBQyxJQUF3QyxFQUFFLElBQWlDO0lBQ3RILElBQUksR0FBRyxNQUFNLENBQUMsWUFBWSxDQUFDLFNBQVMsQ0FBQyxvQkFBb0IsRUFBRSxFQUFFLElBQUksSUFBSSxFQUFFLENBQUMsQ0FBQztJQUN6RSxPQUFPLE1BQU0sQ0FBQyxPQUFPLENBQUMsWUFBWSxDQUFDLHVFQUF1RSxFQUFFO1FBQ3hHLG1CQUFtQixFQUFFLElBQUksQ0FBQyxpQkFBaUI7UUFDM0Msd0JBQXdCLEVBQUUsSUFBSSxDQUFDLHNCQUFzQjtRQUNyRCxXQUFXLEVBQUUsSUFBSSxDQUFDLFNBQVM7S0FDOUIsRUFBRSxJQUFJLENBQUMsQ0FBQztBQUNiLENBQUM7QUFQRCx3RUFPQyJ9