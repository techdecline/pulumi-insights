import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as enums from "../types/enums";
/**
 * Information about managed application definition.
 * Azure REST API version: 2021-07-01. Prior API version in Azure Native 1.x: 2019-07-01.
 *
 * Other available API versions: 2023-12-01-preview.
 */
export declare class ApplicationDefinition extends pulumi.CustomResource {
    /**
     * Get an existing ApplicationDefinition resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    static get(name: string, id: pulumi.Input<pulumi.ID>, opts?: pulumi.CustomResourceOptions): ApplicationDefinition;
    /**
     * Returns true if the given object is an instance of ApplicationDefinition.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    static isInstance(obj: any): obj is ApplicationDefinition;
    /**
     * The collection of managed application artifacts. The portal will use the files specified as artifacts to construct the user experience of creating a managed application from a managed application definition.
     */
    readonly artifacts: pulumi.Output<outputs.solutions.ApplicationDefinitionArtifactResponse[] | undefined>;
    /**
     * The managed application provider authorizations.
     */
    readonly authorizations: pulumi.Output<outputs.solutions.ApplicationAuthorizationResponse[] | undefined>;
    /**
     * The createUiDefinition json for the backing template with Microsoft.Solutions/applications resource. It can be a JObject or well-formed JSON string.
     */
    readonly createUiDefinition: pulumi.Output<any | undefined>;
    /**
     * The managed application deployment policy.
     */
    readonly deploymentPolicy: pulumi.Output<outputs.solutions.ApplicationDeploymentPolicyResponse | undefined>;
    /**
     * The managed application definition description.
     */
    readonly description: pulumi.Output<string | undefined>;
    /**
     * The managed application definition display name.
     */
    readonly displayName: pulumi.Output<string | undefined>;
    /**
     * A value indicating whether the package is enabled or not.
     */
    readonly isEnabled: pulumi.Output<boolean | undefined>;
    /**
     * Resource location
     */
    readonly location: pulumi.Output<string | undefined>;
    /**
     * The managed application lock level.
     */
    readonly lockLevel: pulumi.Output<string>;
    /**
     * The managed application locking policy.
     */
    readonly lockingPolicy: pulumi.Output<outputs.solutions.ApplicationPackageLockingPolicyDefinitionResponse | undefined>;
    /**
     * The inline main template json which has resources to be provisioned. It can be a JObject or well-formed JSON string.
     */
    readonly mainTemplate: pulumi.Output<any | undefined>;
    /**
     * ID of the resource that manages this resource.
     */
    readonly managedBy: pulumi.Output<string | undefined>;
    /**
     * The managed application management policy that determines publisher's access to the managed resource group.
     */
    readonly managementPolicy: pulumi.Output<outputs.solutions.ApplicationManagementPolicyResponse | undefined>;
    /**
     * Resource name
     */
    readonly name: pulumi.Output<string>;
    /**
     * The managed application notification policy.
     */
    readonly notificationPolicy: pulumi.Output<outputs.solutions.ApplicationNotificationPolicyResponse | undefined>;
    /**
     * The managed application definition package file Uri. Use this element
     */
    readonly packageFileUri: pulumi.Output<string | undefined>;
    /**
     * The managed application provider policies.
     */
    readonly policies: pulumi.Output<outputs.solutions.ApplicationPolicyResponse[] | undefined>;
    /**
     * The SKU of the resource.
     */
    readonly sku: pulumi.Output<outputs.solutions.SkuResponse | undefined>;
    /**
     * The storage account id for bring your own storage scenario.
     */
    readonly storageAccountId: pulumi.Output<string | undefined>;
    /**
     * Metadata pertaining to creation and last modification of the resource.
     */
    readonly systemData: pulumi.Output<outputs.solutions.SystemDataResponse>;
    /**
     * Resource tags
     */
    readonly tags: pulumi.Output<{
        [key: string]: string;
    } | undefined>;
    /**
     * Resource type
     */
    readonly type: pulumi.Output<string>;
    /**
     * Create a ApplicationDefinition resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: ApplicationDefinitionArgs, opts?: pulumi.CustomResourceOptions);
}
/**
 * The set of arguments for constructing a ApplicationDefinition resource.
 */
export interface ApplicationDefinitionArgs {
    /**
     * The name of the managed application definition.
     */
    applicationDefinitionName?: pulumi.Input<string>;
    /**
     * The collection of managed application artifacts. The portal will use the files specified as artifacts to construct the user experience of creating a managed application from a managed application definition.
     */
    artifacts?: pulumi.Input<pulumi.Input<inputs.solutions.ApplicationDefinitionArtifactArgs>[]>;
    /**
     * The managed application provider authorizations.
     */
    authorizations?: pulumi.Input<pulumi.Input<inputs.solutions.ApplicationAuthorizationArgs>[]>;
    /**
     * The createUiDefinition json for the backing template with Microsoft.Solutions/applications resource. It can be a JObject or well-formed JSON string.
     */
    createUiDefinition?: any;
    /**
     * The managed application deployment policy.
     */
    deploymentPolicy?: pulumi.Input<inputs.solutions.ApplicationDeploymentPolicyArgs>;
    /**
     * The managed application definition description.
     */
    description?: pulumi.Input<string>;
    /**
     * The managed application definition display name.
     */
    displayName?: pulumi.Input<string>;
    /**
     * A value indicating whether the package is enabled or not.
     */
    isEnabled?: pulumi.Input<boolean>;
    /**
     * Resource location
     */
    location?: pulumi.Input<string>;
    /**
     * The managed application lock level.
     */
    lockLevel: pulumi.Input<enums.solutions.ApplicationLockLevel>;
    /**
     * The managed application locking policy.
     */
    lockingPolicy?: pulumi.Input<inputs.solutions.ApplicationPackageLockingPolicyDefinitionArgs>;
    /**
     * The inline main template json which has resources to be provisioned. It can be a JObject or well-formed JSON string.
     */
    mainTemplate?: any;
    /**
     * ID of the resource that manages this resource.
     */
    managedBy?: pulumi.Input<string>;
    /**
     * The managed application management policy that determines publisher's access to the managed resource group.
     */
    managementPolicy?: pulumi.Input<inputs.solutions.ApplicationManagementPolicyArgs>;
    /**
     * The managed application notification policy.
     */
    notificationPolicy?: pulumi.Input<inputs.solutions.ApplicationNotificationPolicyArgs>;
    /**
     * The managed application definition package file Uri. Use this element
     */
    packageFileUri?: pulumi.Input<string>;
    /**
     * The managed application provider policies.
     */
    policies?: pulumi.Input<pulumi.Input<inputs.solutions.ApplicationPolicyArgs>[]>;
    /**
     * The name of the resource group. The name is case insensitive.
     */
    resourceGroupName: pulumi.Input<string>;
    /**
     * The SKU of the resource.
     */
    sku?: pulumi.Input<inputs.solutions.SkuArgs>;
    /**
     * The storage account id for bring your own storage scenario.
     */
    storageAccountId?: pulumi.Input<string>;
    /**
     * Resource tags
     */
    tags?: pulumi.Input<{
        [key: string]: pulumi.Input<string>;
    }>;
}
