import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../../types/input";
import * as outputs from "../../types/output";
/**
 * The VirtualMachineTemplates resource definition.
 */
export declare class VirtualMachineTemplate extends pulumi.CustomResource {
    /**
     * Get an existing VirtualMachineTemplate resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    static get(name: string, id: pulumi.Input<pulumi.ID>, opts?: pulumi.CustomResourceOptions): VirtualMachineTemplate;
    /**
     * Returns true if the given object is an instance of VirtualMachineTemplate.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    static isInstance(obj: any): obj is VirtualMachineTemplate;
    /**
     * Gets computer name.
     */
    readonly computerName: pulumi.Output<string>;
    /**
     * Gets the desired number of vCPUs for the vm.
     */
    readonly cpuCount: pulumi.Output<number>;
    /**
     * Gets the disks of the template.
     */
    readonly disks: pulumi.Output<outputs.scvmm.v20231007.VirtualDiskResponse[]>;
    /**
     * Gets a value indicating whether to enable dynamic memory or not.
     */
    readonly dynamicMemoryEnabled: pulumi.Output<string>;
    /**
     * Gets the max dynamic memory for the vm.
     */
    readonly dynamicMemoryMaxMB: pulumi.Output<number>;
    /**
     * Gets the min dynamic memory for the vm.
     */
    readonly dynamicMemoryMinMB: pulumi.Output<number>;
    /**
     * The extended location.
     */
    readonly extendedLocation: pulumi.Output<outputs.scvmm.v20231007.ExtendedLocationResponse>;
    /**
     * Gets the generation for the vm.
     */
    readonly generation: pulumi.Output<number>;
    /**
     * Gets or sets the inventory Item ID for the resource.
     */
    readonly inventoryItemId: pulumi.Output<string | undefined>;
    /**
     * Gets a value indicating whether the vm template is customizable or not.
     */
    readonly isCustomizable: pulumi.Output<string>;
    /**
     * Gets highly available property.
     */
    readonly isHighlyAvailable: pulumi.Output<string>;
    /**
     * Gets a value indicating whether to enable processor compatibility mode for live migration of VMs.
     */
    readonly limitCpuForMigration: pulumi.Output<string>;
    /**
     * The geo-location where the resource lives
     */
    readonly location: pulumi.Output<string>;
    /**
     * MemoryMB is the desired size of a virtual machine's memory, in MB.
     */
    readonly memoryMB: pulumi.Output<number>;
    /**
     * The name of the resource
     */
    readonly name: pulumi.Output<string>;
    /**
     * Gets the network interfaces of the template.
     */
    readonly networkInterfaces: pulumi.Output<outputs.scvmm.v20231007.NetworkInterfaceResponse[]>;
    /**
     * Gets os name.
     */
    readonly osName: pulumi.Output<string>;
    /**
     * Gets the type of the os.
     */
    readonly osType: pulumi.Output<string>;
    /**
     * Provisioning state of the resource.
     */
    readonly provisioningState: pulumi.Output<string>;
    /**
     * Azure Resource Manager metadata containing createdBy and modifiedBy information.
     */
    readonly systemData: pulumi.Output<outputs.scvmm.v20231007.SystemDataResponse>;
    /**
     * Resource tags.
     */
    readonly tags: pulumi.Output<{
        [key: string]: string;
    } | undefined>;
    /**
     * The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
     */
    readonly type: pulumi.Output<string>;
    /**
     * Unique ID of the virtual machine template.
     */
    readonly uuid: pulumi.Output<string | undefined>;
    /**
     * ARM Id of the vmmServer resource in which this resource resides.
     */
    readonly vmmServerId: pulumi.Output<string | undefined>;
    /**
     * Create a VirtualMachineTemplate resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: VirtualMachineTemplateArgs, opts?: pulumi.CustomResourceOptions);
}
/**
 * The set of arguments for constructing a VirtualMachineTemplate resource.
 */
export interface VirtualMachineTemplateArgs {
    /**
     * The extended location.
     */
    extendedLocation: pulumi.Input<inputs.scvmm.v20231007.ExtendedLocationArgs>;
    /**
     * Gets or sets the inventory Item ID for the resource.
     */
    inventoryItemId?: pulumi.Input<string>;
    /**
     * The geo-location where the resource lives
     */
    location?: pulumi.Input<string>;
    /**
     * The name of the resource group. The name is case insensitive.
     */
    resourceGroupName: pulumi.Input<string>;
    /**
     * Resource tags.
     */
    tags?: pulumi.Input<{
        [key: string]: pulumi.Input<string>;
    }>;
    /**
     * Unique ID of the virtual machine template.
     */
    uuid?: pulumi.Input<string>;
    /**
     * Name of the VirtualMachineTemplate.
     */
    virtualMachineTemplateName?: pulumi.Input<string>;
    /**
     * ARM Id of the vmmServer resource in which this resource resides.
     */
    vmmServerId?: pulumi.Input<string>;
}
