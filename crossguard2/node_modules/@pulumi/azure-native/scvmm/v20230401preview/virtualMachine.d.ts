import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../../types/input";
import * as outputs from "../../types/output";
/**
 * The VirtualMachines resource definition.
 */
export declare class VirtualMachine extends pulumi.CustomResource {
    /**
     * Get an existing VirtualMachine resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    static get(name: string, id: pulumi.Input<pulumi.ID>, opts?: pulumi.CustomResourceOptions): VirtualMachine;
    /**
     * Returns true if the given object is an instance of VirtualMachine.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    static isInstance(obj: any): obj is VirtualMachine;
    /**
     * Availability Sets in vm.
     */
    readonly availabilitySets: pulumi.Output<outputs.scvmm.v20230401preview.VirtualMachinePropertiesResponseAvailabilitySets[] | undefined>;
    /**
     * Type of checkpoint supported for the vm.
     */
    readonly checkpointType: pulumi.Output<string | undefined>;
    /**
     * Checkpoints in the vm.
     */
    readonly checkpoints: pulumi.Output<outputs.scvmm.v20230401preview.CheckpointResponse[] | undefined>;
    /**
     * ARM Id of the cloud resource to use for deploying the vm.
     */
    readonly cloudId: pulumi.Output<string | undefined>;
    /**
     * The extended location.
     */
    readonly extendedLocation: pulumi.Output<outputs.scvmm.v20230401preview.ExtendedLocationResponse>;
    /**
     * Gets or sets the generation for the vm.
     */
    readonly generation: pulumi.Output<number | undefined>;
    /**
     * Guest agent status properties.
     */
    readonly guestAgentProfile: pulumi.Output<outputs.scvmm.v20230401preview.GuestAgentProfileResponse | undefined>;
    /**
     * Hardware properties.
     */
    readonly hardwareProfile: pulumi.Output<outputs.scvmm.v20230401preview.HardwareProfileResponse | undefined>;
    /**
     * The identity of the resource.
     */
    readonly identity: pulumi.Output<outputs.scvmm.v20230401preview.IdentityResponse | undefined>;
    /**
     * Gets or sets the inventory Item ID for the resource.
     */
    readonly inventoryItemId: pulumi.Output<string | undefined>;
    /**
     * Last restored checkpoint in the vm.
     */
    readonly lastRestoredVMCheckpoint: pulumi.Output<outputs.scvmm.v20230401preview.CheckpointResponse>;
    /**
     * Gets or sets the location.
     */
    readonly location: pulumi.Output<string>;
    /**
     * Resource Name
     */
    readonly name: pulumi.Output<string>;
    /**
     * Network properties.
     */
    readonly networkProfile: pulumi.Output<outputs.scvmm.v20230401preview.NetworkProfileResponse | undefined>;
    /**
     * OS properties.
     */
    readonly osProfile: pulumi.Output<outputs.scvmm.v20230401preview.OsProfileResponse | undefined>;
    /**
     * Gets the power state of the virtual machine.
     */
    readonly powerState: pulumi.Output<string>;
    /**
     * Gets or sets the provisioning state.
     */
    readonly provisioningState: pulumi.Output<string>;
    /**
     * Storage properties.
     */
    readonly storageProfile: pulumi.Output<outputs.scvmm.v20230401preview.StorageProfileResponse | undefined>;
    /**
     * The system data.
     */
    readonly systemData: pulumi.Output<outputs.scvmm.v20230401preview.SystemDataResponse>;
    /**
     * Resource tags
     */
    readonly tags: pulumi.Output<{
        [key: string]: string;
    } | undefined>;
    /**
     * ARM Id of the template resource to use for deploying the vm.
     */
    readonly templateId: pulumi.Output<string | undefined>;
    /**
     * Resource Type
     */
    readonly type: pulumi.Output<string>;
    /**
     * Unique ID of the virtual machine.
     */
    readonly uuid: pulumi.Output<string | undefined>;
    /**
     * VMName is the name of VM on the SCVMM server.
     */
    readonly vmName: pulumi.Output<string | undefined>;
    /**
     * ARM Id of the vmmServer resource in which this resource resides.
     */
    readonly vmmServerId: pulumi.Output<string | undefined>;
    /**
     * Create a VirtualMachine resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: VirtualMachineArgs, opts?: pulumi.CustomResourceOptions);
}
/**
 * The set of arguments for constructing a VirtualMachine resource.
 */
export interface VirtualMachineArgs {
    /**
     * Availability Sets in vm.
     */
    availabilitySets?: pulumi.Input<pulumi.Input<inputs.scvmm.v20230401preview.VirtualMachinePropertiesAvailabilitySetsArgs>[]>;
    /**
     * Type of checkpoint supported for the vm.
     */
    checkpointType?: pulumi.Input<string>;
    /**
     * Checkpoints in the vm.
     */
    checkpoints?: pulumi.Input<pulumi.Input<inputs.scvmm.v20230401preview.CheckpointArgs>[]>;
    /**
     * ARM Id of the cloud resource to use for deploying the vm.
     */
    cloudId?: pulumi.Input<string>;
    /**
     * The extended location.
     */
    extendedLocation: pulumi.Input<inputs.scvmm.v20230401preview.ExtendedLocationArgs>;
    /**
     * Gets or sets the generation for the vm.
     */
    generation?: pulumi.Input<number>;
    /**
     * Guest agent status properties.
     */
    guestAgentProfile?: pulumi.Input<inputs.scvmm.v20230401preview.GuestAgentProfileArgs>;
    /**
     * Hardware properties.
     */
    hardwareProfile?: pulumi.Input<inputs.scvmm.v20230401preview.HardwareProfileArgs>;
    /**
     * The identity of the resource.
     */
    identity?: pulumi.Input<inputs.scvmm.v20230401preview.IdentityArgs>;
    /**
     * Gets or sets the inventory Item ID for the resource.
     */
    inventoryItemId?: pulumi.Input<string>;
    /**
     * Gets or sets the location.
     */
    location?: pulumi.Input<string>;
    /**
     * Network properties.
     */
    networkProfile?: pulumi.Input<inputs.scvmm.v20230401preview.NetworkProfileArgs>;
    /**
     * OS properties.
     */
    osProfile?: pulumi.Input<inputs.scvmm.v20230401preview.OsProfileArgs>;
    /**
     * The name of the resource group.
     */
    resourceGroupName: pulumi.Input<string>;
    /**
     * Storage properties.
     */
    storageProfile?: pulumi.Input<inputs.scvmm.v20230401preview.StorageProfileArgs>;
    /**
     * Resource tags
     */
    tags?: pulumi.Input<{
        [key: string]: pulumi.Input<string>;
    }>;
    /**
     * ARM Id of the template resource to use for deploying the vm.
     */
    templateId?: pulumi.Input<string>;
    /**
     * Unique ID of the virtual machine.
     */
    uuid?: pulumi.Input<string>;
    /**
     * Name of the VirtualMachine.
     */
    virtualMachineName?: pulumi.Input<string>;
    /**
     * VMName is the name of VM on the SCVMM server.
     */
    vmName?: pulumi.Input<string>;
    /**
     * ARM Id of the vmmServer resource in which this resource resides.
     */
    vmmServerId?: pulumi.Input<string>;
}
