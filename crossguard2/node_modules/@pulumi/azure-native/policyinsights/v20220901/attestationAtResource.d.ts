import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../../types/input";
import * as outputs from "../../types/output";
import * as enums from "../../types/enums";
/**
 * An attestation resource.
 */
export declare class AttestationAtResource extends pulumi.CustomResource {
    /**
     * Get an existing AttestationAtResource resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    static get(name: string, id: pulumi.Input<pulumi.ID>, opts?: pulumi.CustomResourceOptions): AttestationAtResource;
    /**
     * Returns true if the given object is an instance of AttestationAtResource.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    static isInstance(obj: any): obj is AttestationAtResource;
    /**
     * The time the evidence was assessed
     */
    readonly assessmentDate: pulumi.Output<string | undefined>;
    /**
     * Comments describing why this attestation was created.
     */
    readonly comments: pulumi.Output<string | undefined>;
    /**
     * The compliance state that should be set on the resource.
     */
    readonly complianceState: pulumi.Output<string | undefined>;
    /**
     * The evidence supporting the compliance state set in this attestation.
     */
    readonly evidence: pulumi.Output<outputs.policyinsights.v20220901.AttestationEvidenceResponse[] | undefined>;
    /**
     * The time the compliance state should expire.
     */
    readonly expiresOn: pulumi.Output<string | undefined>;
    /**
     * The time the compliance state was last changed in this attestation.
     */
    readonly lastComplianceStateChangeAt: pulumi.Output<string>;
    /**
     * Additional metadata for this attestation
     */
    readonly metadata: pulumi.Output<any | undefined>;
    /**
     * The name of the resource
     */
    readonly name: pulumi.Output<string>;
    /**
     * The person responsible for setting the state of the resource. This value is typically an Azure Active Directory object ID.
     */
    readonly owner: pulumi.Output<string | undefined>;
    /**
     * The resource ID of the policy assignment that the attestation is setting the state for.
     */
    readonly policyAssignmentId: pulumi.Output<string>;
    /**
     * The policy definition reference ID from a policy set definition that the attestation is setting the state for. If the policy assignment assigns a policy set definition the attestation can choose a definition within the set definition with this property or omit this and set the state for the entire set definition.
     */
    readonly policyDefinitionReferenceId: pulumi.Output<string | undefined>;
    /**
     * The status of the attestation.
     */
    readonly provisioningState: pulumi.Output<string>;
    /**
     * Azure Resource Manager metadata containing createdBy and modifiedBy information.
     */
    readonly systemData: pulumi.Output<outputs.policyinsights.v20220901.SystemDataResponse>;
    /**
     * The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
     */
    readonly type: pulumi.Output<string>;
    /**
     * Create a AttestationAtResource resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: AttestationAtResourceArgs, opts?: pulumi.CustomResourceOptions);
}
/**
 * The set of arguments for constructing a AttestationAtResource resource.
 */
export interface AttestationAtResourceArgs {
    /**
     * The time the evidence was assessed
     */
    assessmentDate?: pulumi.Input<string>;
    /**
     * The name of the attestation.
     */
    attestationName?: pulumi.Input<string>;
    /**
     * Comments describing why this attestation was created.
     */
    comments?: pulumi.Input<string>;
    /**
     * The compliance state that should be set on the resource.
     */
    complianceState?: pulumi.Input<string | enums.policyinsights.v20220901.ComplianceState>;
    /**
     * The evidence supporting the compliance state set in this attestation.
     */
    evidence?: pulumi.Input<pulumi.Input<inputs.policyinsights.v20220901.AttestationEvidenceArgs>[]>;
    /**
     * The time the compliance state should expire.
     */
    expiresOn?: pulumi.Input<string>;
    /**
     * Additional metadata for this attestation
     */
    metadata?: any;
    /**
     * The person responsible for setting the state of the resource. This value is typically an Azure Active Directory object ID.
     */
    owner?: pulumi.Input<string>;
    /**
     * The resource ID of the policy assignment that the attestation is setting the state for.
     */
    policyAssignmentId: pulumi.Input<string>;
    /**
     * The policy definition reference ID from a policy set definition that the attestation is setting the state for. If the policy assignment assigns a policy set definition the attestation can choose a definition within the set definition with this property or omit this and set the state for the entire set definition.
     */
    policyDefinitionReferenceId?: pulumi.Input<string>;
    /**
     * Resource ID.
     */
    resourceId: pulumi.Input<string>;
}
