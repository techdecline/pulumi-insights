import * as pulumi from "@pulumi/pulumi";
/**
 * The status of the Canonical support plan.
 */
export declare class SupportPlanType extends pulumi.CustomResource {
    /**
     * Get an existing SupportPlanType resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    static get(name: string, id: pulumi.Input<pulumi.ID>, opts?: pulumi.CustomResourceOptions): SupportPlanType;
    /**
     * Returns true if the given object is an instance of SupportPlanType.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    static isInstance(obj: any): obj is SupportPlanType;
    /**
     * The name of the Canonical support plan, i.e. "essential", "standard" or "advanced".
     */
    readonly name: pulumi.Output<string>;
    /**
     * The provisioning state of the resource.
     */
    readonly provisioningState: pulumi.Output<string | undefined>;
    /**
     * Microsoft.Addons/supportProvider
     */
    readonly type: pulumi.Output<string>;
    /**
     * Create a SupportPlanType resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: SupportPlanTypeArgs, opts?: pulumi.CustomResourceOptions);
}
/**
 * The set of arguments for constructing a SupportPlanType resource.
 */
export interface SupportPlanTypeArgs {
    /**
     * The Canonical support plan type.
     */
    planTypeName?: pulumi.Input<string>;
    /**
     * The support plan type. For now the only valid type is "canonical".
     */
    providerName: pulumi.Input<string>;
}
