import * as pulumi from "@pulumi/pulumi";
import * as enums from "../../types/enums";
/**
 * MAK key details.
 */
export declare class MultipleActivationKey extends pulumi.CustomResource {
    /**
     * Get an existing MultipleActivationKey resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    static get(name: string, id: pulumi.Input<pulumi.ID>, opts?: pulumi.CustomResourceOptions): MultipleActivationKey;
    /**
     * Returns true if the given object is an instance of MultipleActivationKey.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    static isInstance(obj: any): obj is MultipleActivationKey;
    /**
     * Agreement number under which the key is requested.
     */
    readonly agreementNumber: pulumi.Output<string | undefined>;
    /**
     * End of support of security updates activated by the MAK key.
     */
    readonly expirationDate: pulumi.Output<string>;
    /**
     * Number of activations/servers using the MAK key.
     */
    readonly installedServerNumber: pulumi.Output<number | undefined>;
    /**
     * <code> true </code> if user has eligible on-premises Windows physical or virtual machines, and that the requested key will only be used in their organization; <code> false </code> otherwise.
     */
    readonly isEligible: pulumi.Output<boolean | undefined>;
    /**
     * The geo-location where the resource lives
     */
    readonly location: pulumi.Output<string>;
    /**
     * MAK 5x5 key.
     */
    readonly multipleActivationKey: pulumi.Output<string>;
    /**
     * The name of the resource
     */
    readonly name: pulumi.Output<string>;
    /**
     * Type of OS for which the key is requested.
     */
    readonly osType: pulumi.Output<string | undefined>;
    readonly provisioningState: pulumi.Output<string>;
    /**
     * Type of support
     */
    readonly supportType: pulumi.Output<string | undefined>;
    /**
     * Resource tags.
     */
    readonly tags: pulumi.Output<{
        [key: string]: string;
    } | undefined>;
    /**
     * The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
     */
    readonly type: pulumi.Output<string>;
    /**
     * Create a MultipleActivationKey resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: MultipleActivationKeyArgs, opts?: pulumi.CustomResourceOptions);
}
/**
 * The set of arguments for constructing a MultipleActivationKey resource.
 */
export interface MultipleActivationKeyArgs {
    /**
     * Agreement number under which the key is requested.
     */
    agreementNumber?: pulumi.Input<string>;
    /**
     * Number of activations/servers using the MAK key.
     */
    installedServerNumber?: pulumi.Input<number>;
    /**
     * <code> true </code> if user has eligible on-premises Windows physical or virtual machines, and that the requested key will only be used in their organization; <code> false </code> otherwise.
     */
    isEligible?: pulumi.Input<boolean>;
    /**
     * The geo-location where the resource lives
     */
    location?: pulumi.Input<string>;
    /**
     * The name of the MAK key.
     */
    multipleActivationKeyName?: pulumi.Input<string>;
    /**
     * Type of OS for which the key is requested.
     */
    osType?: pulumi.Input<string | enums.windowsesu.v20190916preview.OsType>;
    /**
     * The name of the resource group. The name is case insensitive.
     */
    resourceGroupName: pulumi.Input<string>;
    /**
     * Type of support
     */
    supportType?: pulumi.Input<string | enums.windowsesu.v20190916preview.SupportType>;
    /**
     * Resource tags.
     */
    tags?: pulumi.Input<{
        [key: string]: pulumi.Input<string>;
    }>;
}
