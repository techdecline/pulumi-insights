"use strict";
// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***
Object.defineProperty(exports, "__esModule", { value: true });
exports.getPrefixOutput = exports.getPrefix = void 0;
const pulumi = require("@pulumi/pulumi");
const utilities = require("../utilities");
/**
 * Gets an existing prefix with the specified name under the given subscription, resource group and peering service.
 * Azure REST API version: 2022-10-01.
 */
function getPrefix(args, opts) {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("azure-native:peering:getPrefix", {
        "expand": args.expand,
        "peeringServiceName": args.peeringServiceName,
        "prefixName": args.prefixName,
        "resourceGroupName": args.resourceGroupName,
    }, opts);
}
exports.getPrefix = getPrefix;
/**
 * Gets an existing prefix with the specified name under the given subscription, resource group and peering service.
 * Azure REST API version: 2022-10-01.
 */
function getPrefixOutput(args, opts) {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invokeOutput("azure-native:peering:getPrefix", {
        "expand": args.expand,
        "peeringServiceName": args.peeringServiceName,
        "prefixName": args.prefixName,
        "resourceGroupName": args.resourceGroupName,
    }, opts);
}
exports.getPrefixOutput = getPrefixOutput;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZ2V0UHJlZml4LmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vcGVlcmluZy9nZXRQcmVmaXgudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IjtBQUFBLHNFQUFzRTtBQUN0RSxpRkFBaUY7OztBQUVqRix5Q0FBeUM7QUFJekMsMENBQTBDO0FBRTFDOzs7R0FHRztBQUNILFNBQWdCLFNBQVMsQ0FBQyxJQUFtQixFQUFFLElBQTJCO0lBQ3RFLElBQUksR0FBRyxNQUFNLENBQUMsWUFBWSxDQUFDLFNBQVMsQ0FBQyxvQkFBb0IsRUFBRSxFQUFFLElBQUksSUFBSSxFQUFFLENBQUMsQ0FBQztJQUN6RSxPQUFPLE1BQU0sQ0FBQyxPQUFPLENBQUMsTUFBTSxDQUFDLGdDQUFnQyxFQUFFO1FBQzNELFFBQVEsRUFBRSxJQUFJLENBQUMsTUFBTTtRQUNyQixvQkFBb0IsRUFBRSxJQUFJLENBQUMsa0JBQWtCO1FBQzdDLFlBQVksRUFBRSxJQUFJLENBQUMsVUFBVTtRQUM3QixtQkFBbUIsRUFBRSxJQUFJLENBQUMsaUJBQWlCO0tBQzlDLEVBQUUsSUFBSSxDQUFDLENBQUM7QUFDYixDQUFDO0FBUkQsOEJBUUM7QUFrRUQ7OztHQUdHO0FBQ0gsU0FBZ0IsZUFBZSxDQUFDLElBQXlCLEVBQUUsSUFBaUM7SUFDeEYsSUFBSSxHQUFHLE1BQU0sQ0FBQyxZQUFZLENBQUMsU0FBUyxDQUFDLG9CQUFvQixFQUFFLEVBQUUsSUFBSSxJQUFJLEVBQUUsQ0FBQyxDQUFDO0lBQ3pFLE9BQU8sTUFBTSxDQUFDLE9BQU8sQ0FBQyxZQUFZLENBQUMsZ0NBQWdDLEVBQUU7UUFDakUsUUFBUSxFQUFFLElBQUksQ0FBQyxNQUFNO1FBQ3JCLG9CQUFvQixFQUFFLElBQUksQ0FBQyxrQkFBa0I7UUFDN0MsWUFBWSxFQUFFLElBQUksQ0FBQyxVQUFVO1FBQzdCLG1CQUFtQixFQUFFLElBQUksQ0FBQyxpQkFBaUI7S0FDOUMsRUFBRSxJQUFJLENBQUMsQ0FBQztBQUNiLENBQUM7QUFSRCwwQ0FRQyJ9