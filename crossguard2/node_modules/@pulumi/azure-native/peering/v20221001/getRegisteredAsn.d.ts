import * as pulumi from "@pulumi/pulumi";
/**
 * Gets an existing registered ASN with the specified name under the given subscription, resource group and peering.
 */
export declare function getRegisteredAsn(args: GetRegisteredAsnArgs, opts?: pulumi.InvokeOptions): Promise<GetRegisteredAsnResult>;
export interface GetRegisteredAsnArgs {
    /**
     * The name of the peering.
     */
    peeringName: string;
    /**
     * The name of the registered ASN.
     */
    registeredAsnName: string;
    /**
     * The name of the resource group.
     */
    resourceGroupName: string;
}
/**
 * The customer's ASN that is registered by the peering service provider.
 */
export interface GetRegisteredAsnResult {
    /**
     * The customer's ASN from which traffic originates.
     */
    readonly asn?: number;
    /**
     * The ID of the resource.
     */
    readonly id: string;
    /**
     * The name of the resource.
     */
    readonly name: string;
    /**
     * The peering service prefix key that is to be shared with the customer.
     */
    readonly peeringServicePrefixKey: string;
    /**
     * The provisioning state of the resource.
     */
    readonly provisioningState: string;
    /**
     * The type of the resource.
     */
    readonly type: string;
}
/**
 * Gets an existing registered ASN with the specified name under the given subscription, resource group and peering.
 */
export declare function getRegisteredAsnOutput(args: GetRegisteredAsnOutputArgs, opts?: pulumi.InvokeOutputOptions): pulumi.Output<GetRegisteredAsnResult>;
export interface GetRegisteredAsnOutputArgs {
    /**
     * The name of the peering.
     */
    peeringName: pulumi.Input<string>;
    /**
     * The name of the registered ASN.
     */
    registeredAsnName: pulumi.Input<string>;
    /**
     * The name of the resource group.
     */
    resourceGroupName: pulumi.Input<string>;
}
