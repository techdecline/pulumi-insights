import * as pulumi from "@pulumi/pulumi";
/**
 * The Connection Monitor Test class.
 */
export declare class ConnectionMonitorTest extends pulumi.CustomResource {
    /**
     * Get an existing ConnectionMonitorTest resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    static get(name: string, id: pulumi.Input<pulumi.ID>, opts?: pulumi.CustomResourceOptions): ConnectionMonitorTest;
    /**
     * Returns true if the given object is an instance of ConnectionMonitorTest.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    static isInstance(obj: any): obj is ConnectionMonitorTest;
    /**
     * The Connection Monitor test destination
     */
    readonly destination: pulumi.Output<string | undefined>;
    /**
     * The Connection Monitor test destination port
     */
    readonly destinationPort: pulumi.Output<number | undefined>;
    /**
     * The flag that indicates if the Connection Monitor test is successful or not.
     */
    readonly isTestSuccessful: pulumi.Output<boolean>;
    /**
     * The name of the resource.
     */
    readonly name: pulumi.Output<string>;
    /**
     * The path representing the Connection Monitor test.
     */
    readonly path: pulumi.Output<string[]>;
    /**
     * The provisioning state of the resource.
     */
    readonly provisioningState: pulumi.Output<string>;
    /**
     * The Connection Monitor test source agent
     */
    readonly sourceAgent: pulumi.Output<string | undefined>;
    /**
     * The Connection Monitor test frequency in seconds
     */
    readonly testFrequencyInSec: pulumi.Output<number | undefined>;
    /**
     * The type of the resource.
     */
    readonly type: pulumi.Output<string>;
    /**
     * Create a ConnectionMonitorTest resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: ConnectionMonitorTestArgs, opts?: pulumi.CustomResourceOptions);
}
/**
 * The set of arguments for constructing a ConnectionMonitorTest resource.
 */
export interface ConnectionMonitorTestArgs {
    /**
     * The name of the connection monitor test
     */
    connectionMonitorTestName?: pulumi.Input<string>;
    /**
     * The Connection Monitor test destination
     */
    destination?: pulumi.Input<string>;
    /**
     * The Connection Monitor test destination port
     */
    destinationPort?: pulumi.Input<number>;
    /**
     * The name of the peering service.
     */
    peeringServiceName: pulumi.Input<string>;
    /**
     * The name of the resource group.
     */
    resourceGroupName: pulumi.Input<string>;
    /**
     * The Connection Monitor test source agent
     */
    sourceAgent?: pulumi.Input<string>;
    /**
     * The Connection Monitor test frequency in seconds
     */
    testFrequencyInSec?: pulumi.Input<number>;
}
