import * as pulumi from "@pulumi/pulumi";
import * as outputs from "../types/output";
import * as enums from "../types/enums";
/**
 * An device group resource belonging to a product resource.
 * Azure REST API version: 2022-09-01-preview. Prior API version in Azure Native 1.x: 2022-09-01-preview.
 *
 * Other available API versions: 2024-04-01.
 */
export declare class DeviceGroup extends pulumi.CustomResource {
    /**
     * Get an existing DeviceGroup resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    static get(name: string, id: pulumi.Input<pulumi.ID>, opts?: pulumi.CustomResourceOptions): DeviceGroup;
    /**
     * Returns true if the given object is an instance of DeviceGroup.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    static isInstance(obj: any): obj is DeviceGroup;
    /**
     * Flag to define if the user allows for crash dump collection.
     */
    readonly allowCrashDumpsCollection: pulumi.Output<string | undefined>;
    /**
     * Description of the device group.
     */
    readonly description: pulumi.Output<string | undefined>;
    /**
     * Deployment status for the device group.
     */
    readonly hasDeployment: pulumi.Output<boolean>;
    /**
     * The name of the resource
     */
    readonly name: pulumi.Output<string>;
    /**
     * Operating system feed type of the device group.
     */
    readonly osFeedType: pulumi.Output<string | undefined>;
    /**
     * The status of the last operation.
     */
    readonly provisioningState: pulumi.Output<string>;
    /**
     * Regional data boundary for the device group.
     */
    readonly regionalDataBoundary: pulumi.Output<string | undefined>;
    /**
     * Azure Resource Manager metadata containing createdBy and modifiedBy information.
     */
    readonly systemData: pulumi.Output<outputs.azuresphere.SystemDataResponse>;
    /**
     * The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
     */
    readonly type: pulumi.Output<string>;
    /**
     * Update policy of the device group.
     */
    readonly updatePolicy: pulumi.Output<string | undefined>;
    /**
     * Create a DeviceGroup resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: DeviceGroupArgs, opts?: pulumi.CustomResourceOptions);
}
/**
 * The set of arguments for constructing a DeviceGroup resource.
 */
export interface DeviceGroupArgs {
    /**
     * Flag to define if the user allows for crash dump collection.
     */
    allowCrashDumpsCollection?: pulumi.Input<string | enums.azuresphere.AllowCrashDumpCollection>;
    /**
     * Name of catalog
     */
    catalogName: pulumi.Input<string>;
    /**
     * Description of the device group.
     */
    description?: pulumi.Input<string>;
    /**
     * Name of device group.
     */
    deviceGroupName?: pulumi.Input<string>;
    /**
     * Operating system feed type of the device group.
     */
    osFeedType?: pulumi.Input<string | enums.azuresphere.OSFeedType>;
    /**
     * Name of product.
     */
    productName: pulumi.Input<string>;
    /**
     * Regional data boundary for the device group.
     */
    regionalDataBoundary?: pulumi.Input<string | enums.azuresphere.RegionalDataBoundary>;
    /**
     * The name of the resource group. The name is case insensitive.
     */
    resourceGroupName: pulumi.Input<string>;
    /**
     * Update policy of the device group.
     */
    updatePolicy?: pulumi.Input<string | enums.azuresphere.UpdatePolicy>;
}
