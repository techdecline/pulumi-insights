import * as pulumi from "@pulumi/pulumi";
import * as outputs from "../../types/output";
import * as enums from "../../types/enums";
/**
 * Linked Subscription information.
 */
export declare class LinkedSubscription extends pulumi.CustomResource {
    /**
     * Get an existing LinkedSubscription resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    static get(name: string, id: pulumi.Input<pulumi.ID>, opts?: pulumi.CustomResourceOptions): LinkedSubscription;
    /**
     * Returns true if the given object is an instance of LinkedSubscription.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    static isInstance(obj: any): obj is LinkedSubscription;
    /**
     * The status of the remote management connection of the Azure Stack device.
     */
    readonly deviceConnectionStatus: pulumi.Output<string>;
    /**
     * The identifier of the Azure Stack device for remote management.
     */
    readonly deviceId: pulumi.Output<string>;
    /**
     * The connection state of the Azure Stack device.
     */
    readonly deviceLinkState: pulumi.Output<string>;
    /**
     * The object identifier associated with the Azure Stack device connecting to Azure.
     */
    readonly deviceObjectId: pulumi.Output<string>;
    /**
     * The entity tag used for optimistic concurrency when modifying the resource.
     */
    readonly etag: pulumi.Output<string | undefined>;
    /**
     * The kind of the resource.
     */
    readonly kind: pulumi.Output<string>;
    /**
     * The last remote management connection time for the Azure Stack device connected to the linked subscription resource.
     */
    readonly lastConnectedTime: pulumi.Output<string>;
    /**
     * The identifier associated with the device subscription.
     */
    readonly linkedSubscriptionId: pulumi.Output<string | undefined>;
    /**
     * Location of the resource.
     */
    readonly location: pulumi.Output<string>;
    /**
     * Name of the resource.
     */
    readonly name: pulumi.Output<string>;
    /**
     * The identifier associated with the device registration.
     */
    readonly registrationResourceId: pulumi.Output<string | undefined>;
    /**
     * Metadata pertaining to creation and last modification of the resource.
     */
    readonly systemData: pulumi.Output<outputs.azurestack.v20200601preview.SystemDataResponse>;
    /**
     * Custom tags for the resource.
     */
    readonly tags: pulumi.Output<{
        [key: string]: string;
    } | undefined>;
    /**
     * Type of Resource.
     */
    readonly type: pulumi.Output<string>;
    /**
     * Create a LinkedSubscription resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: LinkedSubscriptionArgs, opts?: pulumi.CustomResourceOptions);
}
/**
 * The set of arguments for constructing a LinkedSubscription resource.
 */
export interface LinkedSubscriptionArgs {
    /**
     * The identifier associated with the device subscription.
     */
    linkedSubscriptionId: pulumi.Input<string>;
    /**
     * Name of the Linked Subscription resource.
     */
    linkedSubscriptionName?: pulumi.Input<string>;
    /**
     * Location of the resource.
     */
    location?: pulumi.Input<string | enums.azurestack.v20200601preview.Location>;
    /**
     * The identifier associated with the device registration.
     */
    registrationResourceId: pulumi.Input<string>;
    /**
     * Name of the resource group.
     */
    resourceGroup: pulumi.Input<string>;
}
