import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
/**
 * An Compute Fleet resource
 * Azure REST API version: 2024-05-01-preview.
 *
 * Other available API versions: 2023-11-01-preview, 2024-11-01.
 */
export declare class Fleet extends pulumi.CustomResource {
    /**
     * Get an existing Fleet resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    static get(name: string, id: pulumi.Input<pulumi.ID>, opts?: pulumi.CustomResourceOptions): Fleet;
    /**
     * Returns true if the given object is an instance of Fleet.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    static isInstance(obj: any): obj is Fleet;
    /**
     * Compute Profile to use for running user's workloads.
     */
    readonly computeProfile: pulumi.Output<outputs.azurefleet.ComputeProfileResponse>;
    /**
     * The managed service identities assigned to this resource.
     */
    readonly identity: pulumi.Output<outputs.azurefleet.ManagedServiceIdentityResponse | undefined>;
    /**
     * The geo-location where the resource lives
     */
    readonly location: pulumi.Output<string>;
    /**
     * The name of the resource
     */
    readonly name: pulumi.Output<string>;
    /**
     * Details of the resource plan.
     */
    readonly plan: pulumi.Output<outputs.azurefleet.PlanResponse | undefined>;
    /**
     * The status of the last operation.
     */
    readonly provisioningState: pulumi.Output<string>;
    /**
     * Configuration Options for Regular instances in Compute Fleet.
     */
    readonly regularPriorityProfile: pulumi.Output<outputs.azurefleet.RegularPriorityProfileResponse | undefined>;
    /**
     * Configuration Options for Spot instances in Compute Fleet.
     */
    readonly spotPriorityProfile: pulumi.Output<outputs.azurefleet.SpotPriorityProfileResponse | undefined>;
    /**
     * Azure Resource Manager metadata containing createdBy and modifiedBy information.
     */
    readonly systemData: pulumi.Output<outputs.azurefleet.SystemDataResponse>;
    /**
     * Resource tags.
     */
    readonly tags: pulumi.Output<{
        [key: string]: string;
    } | undefined>;
    /**
     * Specifies the time at which the Compute Fleet is created.
     */
    readonly timeCreated: pulumi.Output<string>;
    /**
     * The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
     */
    readonly type: pulumi.Output<string>;
    /**
     * Specifies the ID which uniquely identifies a Compute Fleet.
     */
    readonly uniqueId: pulumi.Output<string>;
    /**
     * List of VM sizes supported for Compute Fleet
     */
    readonly vmSizesProfile: pulumi.Output<outputs.azurefleet.VmSizeProfileResponse[]>;
    /**
     * Zones in which the Compute Fleet is available
     */
    readonly zones: pulumi.Output<string[] | undefined>;
    /**
     * Create a Fleet resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: FleetArgs, opts?: pulumi.CustomResourceOptions);
}
/**
 * The set of arguments for constructing a Fleet resource.
 */
export interface FleetArgs {
    /**
     * Compute Profile to use for running user's workloads.
     */
    computeProfile: pulumi.Input<inputs.azurefleet.ComputeProfileArgs>;
    /**
     * The name of the Compute Fleet
     */
    fleetName?: pulumi.Input<string>;
    /**
     * The managed service identities assigned to this resource.
     */
    identity?: pulumi.Input<inputs.azurefleet.ManagedServiceIdentityArgs>;
    /**
     * The geo-location where the resource lives
     */
    location?: pulumi.Input<string>;
    /**
     * Details of the resource plan.
     */
    plan?: pulumi.Input<inputs.azurefleet.PlanArgs>;
    /**
     * Configuration Options for Regular instances in Compute Fleet.
     */
    regularPriorityProfile?: pulumi.Input<inputs.azurefleet.RegularPriorityProfileArgs>;
    /**
     * The name of the resource group. The name is case insensitive.
     */
    resourceGroupName: pulumi.Input<string>;
    /**
     * Configuration Options for Spot instances in Compute Fleet.
     */
    spotPriorityProfile?: pulumi.Input<inputs.azurefleet.SpotPriorityProfileArgs>;
    /**
     * Resource tags.
     */
    tags?: pulumi.Input<{
        [key: string]: pulumi.Input<string>;
    }>;
    /**
     * List of VM sizes supported for Compute Fleet
     */
    vmSizesProfile: pulumi.Input<pulumi.Input<inputs.azurefleet.VmSizeProfileArgs>[]>;
    /**
     * Zones in which the Compute Fleet is available
     */
    zones?: pulumi.Input<pulumi.Input<string>[]>;
}
