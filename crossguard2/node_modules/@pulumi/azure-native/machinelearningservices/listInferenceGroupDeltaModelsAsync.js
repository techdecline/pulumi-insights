"use strict";
// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***
Object.defineProperty(exports, "__esModule", { value: true });
exports.listInferenceGroupDeltaModelsAsyncOutput = exports.listInferenceGroupDeltaModelsAsync = void 0;
const pulumi = require("@pulumi/pulumi");
const utilities = require("../utilities");
/**
 * A paginated list of String entities.
 * Azure REST API version: 2024-10-01-preview.
 */
function listInferenceGroupDeltaModelsAsync(args, opts) {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("azure-native:machinelearningservices:listInferenceGroupDeltaModelsAsync", {
        "count": args.count,
        "groupName": args.groupName,
        "poolName": args.poolName,
        "resourceGroupName": args.resourceGroupName,
        "skipToken": args.skipToken,
        "targetBaseModel": args.targetBaseModel,
        "workspaceName": args.workspaceName,
    }, opts);
}
exports.listInferenceGroupDeltaModelsAsync = listInferenceGroupDeltaModelsAsync;
/**
 * A paginated list of String entities.
 * Azure REST API version: 2024-10-01-preview.
 */
function listInferenceGroupDeltaModelsAsyncOutput(args, opts) {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invokeOutput("azure-native:machinelearningservices:listInferenceGroupDeltaModelsAsync", {
        "count": args.count,
        "groupName": args.groupName,
        "poolName": args.poolName,
        "resourceGroupName": args.resourceGroupName,
        "skipToken": args.skipToken,
        "targetBaseModel": args.targetBaseModel,
        "workspaceName": args.workspaceName,
    }, opts);
}
exports.listInferenceGroupDeltaModelsAsyncOutput = listInferenceGroupDeltaModelsAsyncOutput;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibGlzdEluZmVyZW5jZUdyb3VwRGVsdGFNb2RlbHNBc3luYy5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uL21hY2hpbmVsZWFybmluZ3NlcnZpY2VzL2xpc3RJbmZlcmVuY2VHcm91cERlbHRhTW9kZWxzQXN5bmMudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IjtBQUFBLHNFQUFzRTtBQUN0RSxpRkFBaUY7OztBQUVqRix5Q0FBeUM7QUFDekMsMENBQTBDO0FBRTFDOzs7R0FHRztBQUNILFNBQWdCLGtDQUFrQyxDQUFDLElBQTRDLEVBQUUsSUFBMkI7SUFDeEgsSUFBSSxHQUFHLE1BQU0sQ0FBQyxZQUFZLENBQUMsU0FBUyxDQUFDLG9CQUFvQixFQUFFLEVBQUUsSUFBSSxJQUFJLEVBQUUsQ0FBQyxDQUFDO0lBQ3pFLE9BQU8sTUFBTSxDQUFDLE9BQU8sQ0FBQyxNQUFNLENBQUMseUVBQXlFLEVBQUU7UUFDcEcsT0FBTyxFQUFFLElBQUksQ0FBQyxLQUFLO1FBQ25CLFdBQVcsRUFBRSxJQUFJLENBQUMsU0FBUztRQUMzQixVQUFVLEVBQUUsSUFBSSxDQUFDLFFBQVE7UUFDekIsbUJBQW1CLEVBQUUsSUFBSSxDQUFDLGlCQUFpQjtRQUMzQyxXQUFXLEVBQUUsSUFBSSxDQUFDLFNBQVM7UUFDM0IsaUJBQWlCLEVBQUUsSUFBSSxDQUFDLGVBQWU7UUFDdkMsZUFBZSxFQUFFLElBQUksQ0FBQyxhQUFhO0tBQ3RDLEVBQUUsSUFBSSxDQUFDLENBQUM7QUFDYixDQUFDO0FBWEQsZ0ZBV0M7QUE4Q0Q7OztHQUdHO0FBQ0gsU0FBZ0Isd0NBQXdDLENBQUMsSUFBa0QsRUFBRSxJQUFpQztJQUMxSSxJQUFJLEdBQUcsTUFBTSxDQUFDLFlBQVksQ0FBQyxTQUFTLENBQUMsb0JBQW9CLEVBQUUsRUFBRSxJQUFJLElBQUksRUFBRSxDQUFDLENBQUM7SUFDekUsT0FBTyxNQUFNLENBQUMsT0FBTyxDQUFDLFlBQVksQ0FBQyx5RUFBeUUsRUFBRTtRQUMxRyxPQUFPLEVBQUUsSUFBSSxDQUFDLEtBQUs7UUFDbkIsV0FBVyxFQUFFLElBQUksQ0FBQyxTQUFTO1FBQzNCLFVBQVUsRUFBRSxJQUFJLENBQUMsUUFBUTtRQUN6QixtQkFBbUIsRUFBRSxJQUFJLENBQUMsaUJBQWlCO1FBQzNDLFdBQVcsRUFBRSxJQUFJLENBQUMsU0FBUztRQUMzQixpQkFBaUIsRUFBRSxJQUFJLENBQUMsZUFBZTtRQUN2QyxlQUFlLEVBQUUsSUFBSSxDQUFDLGFBQWE7S0FDdEMsRUFBRSxJQUFJLENBQUMsQ0FBQztBQUNiLENBQUM7QUFYRCw0RkFXQyJ9