"use strict";
// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***
Object.defineProperty(exports, "__esModule", { value: true });
exports.getInferenceGroupDeltaModelsStatusAsyncOutput = exports.getInferenceGroupDeltaModelsStatusAsync = void 0;
const pulumi = require("@pulumi/pulumi");
const utilities = require("../utilities");
/**
 * Contract returning to user the delta models.
 * Azure REST API version: 2024-10-01-preview.
 */
function getInferenceGroupDeltaModelsStatusAsync(args, opts) {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("azure-native:machinelearningservices:getInferenceGroupDeltaModelsStatusAsync", {
        "deltaModels": args.deltaModels,
        "groupName": args.groupName,
        "poolName": args.poolName,
        "resourceGroupName": args.resourceGroupName,
        "targetBaseModel": args.targetBaseModel,
        "workspaceName": args.workspaceName,
    }, opts);
}
exports.getInferenceGroupDeltaModelsStatusAsync = getInferenceGroupDeltaModelsStatusAsync;
/**
 * Contract returning to user the delta models.
 * Azure REST API version: 2024-10-01-preview.
 */
function getInferenceGroupDeltaModelsStatusAsyncOutput(args, opts) {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invokeOutput("azure-native:machinelearningservices:getInferenceGroupDeltaModelsStatusAsync", {
        "deltaModels": args.deltaModels,
        "groupName": args.groupName,
        "poolName": args.poolName,
        "resourceGroupName": args.resourceGroupName,
        "targetBaseModel": args.targetBaseModel,
        "workspaceName": args.workspaceName,
    }, opts);
}
exports.getInferenceGroupDeltaModelsStatusAsyncOutput = getInferenceGroupDeltaModelsStatusAsyncOutput;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZ2V0SW5mZXJlbmNlR3JvdXBEZWx0YU1vZGVsc1N0YXR1c0FzeW5jLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vbWFjaGluZWxlYXJuaW5nc2VydmljZXMvZ2V0SW5mZXJlbmNlR3JvdXBEZWx0YU1vZGVsc1N0YXR1c0FzeW5jLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7QUFBQSxzRUFBc0U7QUFDdEUsaUZBQWlGOzs7QUFFakYseUNBQXlDO0FBSXpDLDBDQUEwQztBQUUxQzs7O0dBR0c7QUFDSCxTQUFnQix1Q0FBdUMsQ0FBQyxJQUFpRCxFQUFFLElBQTJCO0lBQ2xJLElBQUksR0FBRyxNQUFNLENBQUMsWUFBWSxDQUFDLFNBQVMsQ0FBQyxvQkFBb0IsRUFBRSxFQUFFLElBQUksSUFBSSxFQUFFLENBQUMsQ0FBQztJQUN6RSxPQUFPLE1BQU0sQ0FBQyxPQUFPLENBQUMsTUFBTSxDQUFDLDhFQUE4RSxFQUFFO1FBQ3pHLGFBQWEsRUFBRSxJQUFJLENBQUMsV0FBVztRQUMvQixXQUFXLEVBQUUsSUFBSSxDQUFDLFNBQVM7UUFDM0IsVUFBVSxFQUFFLElBQUksQ0FBQyxRQUFRO1FBQ3pCLG1CQUFtQixFQUFFLElBQUksQ0FBQyxpQkFBaUI7UUFDM0MsaUJBQWlCLEVBQUUsSUFBSSxDQUFDLGVBQWU7UUFDdkMsZUFBZSxFQUFFLElBQUksQ0FBQyxhQUFhO0tBQ3RDLEVBQUUsSUFBSSxDQUFDLENBQUM7QUFDYixDQUFDO0FBVkQsMEZBVUM7QUFzREQ7OztHQUdHO0FBQ0gsU0FBZ0IsNkNBQTZDLENBQUMsSUFBdUQsRUFBRSxJQUFpQztJQUNwSixJQUFJLEdBQUcsTUFBTSxDQUFDLFlBQVksQ0FBQyxTQUFTLENBQUMsb0JBQW9CLEVBQUUsRUFBRSxJQUFJLElBQUksRUFBRSxDQUFDLENBQUM7SUFDekUsT0FBTyxNQUFNLENBQUMsT0FBTyxDQUFDLFlBQVksQ0FBQyw4RUFBOEUsRUFBRTtRQUMvRyxhQUFhLEVBQUUsSUFBSSxDQUFDLFdBQVc7UUFDL0IsV0FBVyxFQUFFLElBQUksQ0FBQyxTQUFTO1FBQzNCLFVBQVUsRUFBRSxJQUFJLENBQUMsUUFBUTtRQUN6QixtQkFBbUIsRUFBRSxJQUFJLENBQUMsaUJBQWlCO1FBQzNDLGlCQUFpQixFQUFFLElBQUksQ0FBQyxlQUFlO1FBQ3ZDLGVBQWUsRUFBRSxJQUFJLENBQUMsYUFBYTtLQUN0QyxFQUFFLElBQUksQ0FBQyxDQUFDO0FBQ2IsQ0FBQztBQVZELHNHQVVDIn0=