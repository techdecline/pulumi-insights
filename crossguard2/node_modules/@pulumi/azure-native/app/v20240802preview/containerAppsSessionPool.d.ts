import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../../types/input";
import * as outputs from "../../types/output";
import * as enums from "../../types/enums";
/**
 * Container App session pool.
 */
export declare class ContainerAppsSessionPool extends pulumi.CustomResource {
    /**
     * Get an existing ContainerAppsSessionPool resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    static get(name: string, id: pulumi.Input<pulumi.ID>, opts?: pulumi.CustomResourceOptions): ContainerAppsSessionPool;
    /**
     * Returns true if the given object is an instance of ContainerAppsSessionPool.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    static isInstance(obj: any): obj is ContainerAppsSessionPool;
    /**
     * The container type of the sessions.
     */
    readonly containerType: pulumi.Output<string | undefined>;
    /**
     * The custom container configuration if the containerType is CustomContainer.
     */
    readonly customContainerTemplate: pulumi.Output<outputs.app.v20240802preview.CustomContainerTemplateResponse | undefined>;
    /**
     * The pool configuration if the poolManagementType is dynamic.
     */
    readonly dynamicPoolConfiguration: pulumi.Output<outputs.app.v20240802preview.DynamicPoolConfigurationResponse | undefined>;
    /**
     * Resource ID of the session pool's environment.
     */
    readonly environmentId: pulumi.Output<string | undefined>;
    /**
     * The geo-location where the resource lives
     */
    readonly location: pulumi.Output<string>;
    /**
     * The name of the resource
     */
    readonly name: pulumi.Output<string>;
    /**
     * The number of nodes the session pool is using.
     */
    readonly nodeCount: pulumi.Output<number>;
    /**
     * The endpoint to manage the pool.
     */
    readonly poolManagementEndpoint: pulumi.Output<string>;
    /**
     * The pool management type of the session pool.
     */
    readonly poolManagementType: pulumi.Output<string | undefined>;
    /**
     * Provisioning state of the session pool.
     */
    readonly provisioningState: pulumi.Output<string>;
    /**
     * The scale configuration of the session pool.
     */
    readonly scaleConfiguration: pulumi.Output<outputs.app.v20240802preview.ScaleConfigurationResponse | undefined>;
    /**
     * The secrets of the session pool.
     */
    readonly secrets: pulumi.Output<outputs.app.v20240802preview.SessionPoolSecretResponse[] | undefined>;
    /**
     * The network configuration of the sessions in the session pool.
     */
    readonly sessionNetworkConfiguration: pulumi.Output<outputs.app.v20240802preview.SessionNetworkConfigurationResponse | undefined>;
    /**
     * Azure Resource Manager metadata containing createdBy and modifiedBy information.
     */
    readonly systemData: pulumi.Output<outputs.app.v20240802preview.SystemDataResponse>;
    /**
     * Resource tags.
     */
    readonly tags: pulumi.Output<{
        [key: string]: string;
    } | undefined>;
    /**
     * The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
     */
    readonly type: pulumi.Output<string>;
    /**
     * Create a ContainerAppsSessionPool resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: ContainerAppsSessionPoolArgs, opts?: pulumi.CustomResourceOptions);
}
/**
 * The set of arguments for constructing a ContainerAppsSessionPool resource.
 */
export interface ContainerAppsSessionPoolArgs {
    /**
     * The container type of the sessions.
     */
    containerType?: pulumi.Input<string | enums.app.v20240802preview.ContainerType>;
    /**
     * The custom container configuration if the containerType is CustomContainer.
     */
    customContainerTemplate?: pulumi.Input<inputs.app.v20240802preview.CustomContainerTemplateArgs>;
    /**
     * The pool configuration if the poolManagementType is dynamic.
     */
    dynamicPoolConfiguration?: pulumi.Input<inputs.app.v20240802preview.DynamicPoolConfigurationArgs>;
    /**
     * Resource ID of the session pool's environment.
     */
    environmentId?: pulumi.Input<string>;
    /**
     * The geo-location where the resource lives
     */
    location?: pulumi.Input<string>;
    /**
     * The pool management type of the session pool.
     */
    poolManagementType?: pulumi.Input<string | enums.app.v20240802preview.PoolManagementType>;
    /**
     * The name of the resource group. The name is case insensitive.
     */
    resourceGroupName: pulumi.Input<string>;
    /**
     * The scale configuration of the session pool.
     */
    scaleConfiguration?: pulumi.Input<inputs.app.v20240802preview.ScaleConfigurationArgs>;
    /**
     * The secrets of the session pool.
     */
    secrets?: pulumi.Input<pulumi.Input<inputs.app.v20240802preview.SessionPoolSecretArgs>[]>;
    /**
     * The network configuration of the sessions in the session pool.
     */
    sessionNetworkConfiguration?: pulumi.Input<inputs.app.v20240802preview.SessionNetworkConfigurationArgs>;
    /**
     * Name of the session pool.
     */
    sessionPoolName?: pulumi.Input<string>;
    /**
     * Resource tags.
     */
    tags?: pulumi.Input<{
        [key: string]: pulumi.Input<string>;
    }>;
}
