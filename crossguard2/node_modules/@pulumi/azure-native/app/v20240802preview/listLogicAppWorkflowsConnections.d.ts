import * as pulumi from "@pulumi/pulumi";
import * as outputs from "../../types/output";
/**
 * Workflow properties definition.
 */
export declare function listLogicAppWorkflowsConnections(args: ListLogicAppWorkflowsConnectionsArgs, opts?: pulumi.InvokeOptions): Promise<ListLogicAppWorkflowsConnectionsResult>;
export interface ListLogicAppWorkflowsConnectionsArgs {
    /**
     * Name of the Container App.
     */
    containerAppName: string;
    /**
     * Name of the Logic App, the extension resource.
     */
    logicAppName: string;
    /**
     * The name of the resource group. The name is case insensitive.
     */
    resourceGroupName: string;
}
/**
 * Workflow properties definition.
 */
export interface ListLogicAppWorkflowsConnectionsResult {
    /**
     * The resource id.
     */
    readonly id: string;
    /**
     * The resource kind.
     */
    readonly kind?: string;
    /**
     * The resource location.
     */
    readonly location?: string;
    /**
     * Gets the resource name.
     */
    readonly name: string;
    /**
     * Additional workflow properties.
     */
    readonly properties: outputs.app.v20240802preview.WorkflowEnvelopeResponseProperties;
    /**
     * Gets the resource type.
     */
    readonly type: string;
}
/**
 * Workflow properties definition.
 */
export declare function listLogicAppWorkflowsConnectionsOutput(args: ListLogicAppWorkflowsConnectionsOutputArgs, opts?: pulumi.InvokeOutputOptions): pulumi.Output<ListLogicAppWorkflowsConnectionsResult>;
export interface ListLogicAppWorkflowsConnectionsOutputArgs {
    /**
     * Name of the Container App.
     */
    containerAppName: pulumi.Input<string>;
    /**
     * Name of the Logic App, the extension resource.
     */
    logicAppName: pulumi.Input<string>;
    /**
     * The name of the resource group. The name is case insensitive.
     */
    resourceGroupName: pulumi.Input<string>;
}
