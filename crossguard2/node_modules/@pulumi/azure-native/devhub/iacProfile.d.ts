import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
/**
 * Resource representation of a IacProfile.
 * Azure REST API version: 2024-05-01-preview.
 *
 * Other available API versions: 2024-08-01-preview.
 */
export declare class IacProfile extends pulumi.CustomResource {
    /**
     * Get an existing IacProfile resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    static get(name: string, id: pulumi.Input<pulumi.ID>, opts?: pulumi.CustomResourceOptions): IacProfile;
    /**
     * Returns true if the given object is an instance of IacProfile.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    static isInstance(obj: any): obj is IacProfile;
    /**
     * Determines the authorization status of requests.
     */
    readonly authStatus: pulumi.Output<string>;
    /**
     * Repository Branch Name
     */
    readonly branchName: pulumi.Output<string | undefined>;
    /**
     * A unique read-only string that changes whenever the resource is updated.
     */
    readonly etag: pulumi.Output<string>;
    /**
     * The geo-location where the resource lives
     */
    readonly location: pulumi.Output<string>;
    /**
     * The name of the resource
     */
    readonly name: pulumi.Output<string>;
    /**
     * The status of the Pull Request submitted against the users repository.
     */
    readonly prStatus: pulumi.Output<string>;
    /**
     * The number associated with the submitted pull request.
     */
    readonly pullNumber: pulumi.Output<number>;
    /**
     * Repository Main Branch
     */
    readonly repositoryMainBranch: pulumi.Output<string | undefined>;
    /**
     * Repository Name
     */
    readonly repositoryName: pulumi.Output<string | undefined>;
    /**
     * Repository Owner
     */
    readonly repositoryOwner: pulumi.Output<string | undefined>;
    readonly stages: pulumi.Output<outputs.devhub.StagePropertiesResponse[] | undefined>;
    /**
     * Terraform Storage Account Name
     */
    readonly storageAccountName: pulumi.Output<string | undefined>;
    /**
     * Terraform Storage Account Resource Group
     */
    readonly storageAccountResourceGroup: pulumi.Output<string | undefined>;
    /**
     * Terraform Storage Account Subscription
     */
    readonly storageAccountSubscription: pulumi.Output<string | undefined>;
    /**
     * Terraform Container Name
     */
    readonly storageContainerName: pulumi.Output<string | undefined>;
    /**
     * Azure Resource Manager metadata containing createdBy and modifiedBy information.
     */
    readonly systemData: pulumi.Output<outputs.devhub.SystemDataResponse>;
    /**
     * Resource tags.
     */
    readonly tags: pulumi.Output<{
        [key: string]: string;
    } | undefined>;
    readonly templates: pulumi.Output<outputs.devhub.IacTemplatePropertiesResponse[] | undefined>;
    /**
     * The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
     */
    readonly type: pulumi.Output<string>;
    /**
     * Create a IacProfile resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: IacProfileArgs, opts?: pulumi.CustomResourceOptions);
}
/**
 * The set of arguments for constructing a IacProfile resource.
 */
export interface IacProfileArgs {
    /**
     * Repository Branch Name
     */
    branchName?: pulumi.Input<string>;
    /**
     * The name of the IacProfile.
     */
    iacProfileName?: pulumi.Input<string>;
    /**
     * The geo-location where the resource lives
     */
    location?: pulumi.Input<string>;
    /**
     * Repository Main Branch
     */
    repositoryMainBranch?: pulumi.Input<string>;
    /**
     * Repository Name
     */
    repositoryName?: pulumi.Input<string>;
    /**
     * Repository Owner
     */
    repositoryOwner?: pulumi.Input<string>;
    /**
     * The name of the resource group. The name is case insensitive.
     */
    resourceGroupName: pulumi.Input<string>;
    stages?: pulumi.Input<pulumi.Input<inputs.devhub.StagePropertiesArgs>[]>;
    /**
     * Terraform Storage Account Name
     */
    storageAccountName?: pulumi.Input<string>;
    /**
     * Terraform Storage Account Resource Group
     */
    storageAccountResourceGroup?: pulumi.Input<string>;
    /**
     * Terraform Storage Account Subscription
     */
    storageAccountSubscription?: pulumi.Input<string>;
    /**
     * Terraform Container Name
     */
    storageContainerName?: pulumi.Input<string>;
    /**
     * Resource tags.
     */
    tags?: pulumi.Input<{
        [key: string]: pulumi.Input<string>;
    }>;
    templates?: pulumi.Input<pulumi.Input<inputs.devhub.IacTemplatePropertiesArgs>[]>;
}
