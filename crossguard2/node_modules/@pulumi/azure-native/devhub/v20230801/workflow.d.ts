import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../../types/input";
import * as outputs from "../../types/output";
import * as enums from "../../types/enums";
/**
 * Resource representation of a workflow
 */
export declare class Workflow extends pulumi.CustomResource {
    /**
     * Get an existing Workflow resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    static get(name: string, id: pulumi.Input<pulumi.ID>, opts?: pulumi.CustomResourceOptions): Workflow;
    /**
     * Returns true if the given object is an instance of Workflow.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    static isInstance(obj: any): obj is Workflow;
    /**
     * Information on the azure container registry
     */
    readonly acr: pulumi.Output<outputs.devhub.v20230801.ACRResponse | undefined>;
    /**
     * The Azure Kubernetes Cluster Resource the application will be deployed to.
     */
    readonly aksResourceId: pulumi.Output<string | undefined>;
    /**
     * The name of the app.
     */
    readonly appName: pulumi.Output<string | undefined>;
    /**
     * Determines the authorization status of requests.
     */
    readonly authStatus: pulumi.Output<string>;
    /**
     * Repository Branch Name
     */
    readonly branchName: pulumi.Output<string | undefined>;
    /**
     * The version of the language image used for building the code in the generated dockerfile.
     */
    readonly builderVersion: pulumi.Output<string | undefined>;
    readonly deploymentProperties: pulumi.Output<outputs.devhub.v20230801.DeploymentPropertiesResponse | undefined>;
    /**
     * Path to Dockerfile Build Context within the repository.
     */
    readonly dockerBuildContext: pulumi.Output<string | undefined>;
    /**
     * Path to the Dockerfile within the repository.
     */
    readonly dockerfile: pulumi.Output<string | undefined>;
    /**
     * The mode of generation to be used for generating Dockerfiles.
     */
    readonly dockerfileGenerationMode: pulumi.Output<string | undefined>;
    /**
     * The directory to output the generated Dockerfile to.
     */
    readonly dockerfileOutputDirectory: pulumi.Output<string | undefined>;
    /**
     * The programming language used.
     */
    readonly generationLanguage: pulumi.Output<string | undefined>;
    /**
     * The name of the image to be generated.
     */
    readonly imageName: pulumi.Output<string | undefined>;
    /**
     * The tag to apply to the generated image.
     */
    readonly imageTag: pulumi.Output<string | undefined>;
    /**
     * The version of the language image used for execution in the generated dockerfile.
     */
    readonly languageVersion: pulumi.Output<string | undefined>;
    readonly lastWorkflowRun: pulumi.Output<outputs.devhub.v20230801.WorkflowRunResponse | undefined>;
    /**
     * The geo-location where the resource lives
     */
    readonly location: pulumi.Output<string>;
    /**
     * The mode of generation to be used for generating Manifest.
     */
    readonly manifestGenerationMode: pulumi.Output<string | undefined>;
    /**
     * The directory to output the generated manifests to.
     */
    readonly manifestOutputDirectory: pulumi.Output<string | undefined>;
    /**
     * Determines the type of manifests to be generated.
     */
    readonly manifestType: pulumi.Output<string | undefined>;
    /**
     * The name of the resource
     */
    readonly name: pulumi.Output<string>;
    /**
     * Kubernetes namespace the application is deployed to.
     */
    readonly namespace: pulumi.Output<string | undefined>;
    /**
     * The fields needed for OIDC with GitHub.
     */
    readonly oidcCredentials: pulumi.Output<outputs.devhub.v20230801.GitHubWorkflowProfileResponseOidcCredentials | undefined>;
    /**
     * The port the application is exposed on.
     */
    readonly port: pulumi.Output<string | undefined>;
    /**
     * The status of the Pull Request submitted against the users repository.
     */
    readonly prStatus: pulumi.Output<string>;
    /**
     * The URL to the Pull Request submitted against the users repository.
     */
    readonly prURL: pulumi.Output<string>;
    /**
     * The number associated with the submitted pull request.
     */
    readonly pullNumber: pulumi.Output<number>;
    /**
     * Repository Name
     */
    readonly repositoryName: pulumi.Output<string | undefined>;
    /**
     * Repository Owner
     */
    readonly repositoryOwner: pulumi.Output<string | undefined>;
    /**
     * Azure Resource Manager metadata containing createdBy and modifiedBy information.
     */
    readonly systemData: pulumi.Output<outputs.devhub.v20230801.SystemDataResponse>;
    /**
     * Resource tags.
     */
    readonly tags: pulumi.Output<{
        [key: string]: string;
    } | undefined>;
    /**
     * The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
     */
    readonly type: pulumi.Output<string>;
    /**
     * Create a Workflow resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: WorkflowArgs, opts?: pulumi.CustomResourceOptions);
}
/**
 * The set of arguments for constructing a Workflow resource.
 */
export interface WorkflowArgs {
    /**
     * Information on the azure container registry
     */
    acr?: pulumi.Input<inputs.devhub.v20230801.ACRArgs>;
    /**
     * The Azure Kubernetes Cluster Resource the application will be deployed to.
     */
    aksResourceId?: pulumi.Input<string>;
    /**
     * The name of the app.
     */
    appName?: pulumi.Input<string>;
    /**
     * Repository Branch Name
     */
    branchName?: pulumi.Input<string>;
    /**
     * The version of the language image used for building the code in the generated dockerfile.
     */
    builderVersion?: pulumi.Input<string>;
    deploymentProperties?: pulumi.Input<inputs.devhub.v20230801.DeploymentPropertiesArgs>;
    /**
     * Path to Dockerfile Build Context within the repository.
     */
    dockerBuildContext?: pulumi.Input<string>;
    /**
     * Path to the Dockerfile within the repository.
     */
    dockerfile?: pulumi.Input<string>;
    /**
     * The mode of generation to be used for generating Dockerfiles.
     */
    dockerfileGenerationMode?: pulumi.Input<string | enums.devhub.v20230801.DockerfileGenerationMode>;
    /**
     * The directory to output the generated Dockerfile to.
     */
    dockerfileOutputDirectory?: pulumi.Input<string>;
    /**
     * The programming language used.
     */
    generationLanguage?: pulumi.Input<string | enums.devhub.v20230801.GenerationLanguage>;
    /**
     * The name of the image to be generated.
     */
    imageName?: pulumi.Input<string>;
    /**
     * The tag to apply to the generated image.
     */
    imageTag?: pulumi.Input<string>;
    /**
     * The version of the language image used for execution in the generated dockerfile.
     */
    languageVersion?: pulumi.Input<string>;
    lastWorkflowRun?: pulumi.Input<inputs.devhub.v20230801.WorkflowRunArgs>;
    /**
     * The geo-location where the resource lives
     */
    location?: pulumi.Input<string>;
    /**
     * The mode of generation to be used for generating Manifest.
     */
    manifestGenerationMode?: pulumi.Input<string | enums.devhub.v20230801.ManifestGenerationMode>;
    /**
     * The directory to output the generated manifests to.
     */
    manifestOutputDirectory?: pulumi.Input<string>;
    /**
     * Determines the type of manifests to be generated.
     */
    manifestType?: pulumi.Input<string | enums.devhub.v20230801.GenerationManifestType>;
    /**
     * Kubernetes namespace the application is deployed to.
     */
    namespace?: pulumi.Input<string>;
    /**
     * The fields needed for OIDC with GitHub.
     */
    oidcCredentials?: pulumi.Input<inputs.devhub.v20230801.GitHubWorkflowProfileOidcCredentialsArgs>;
    /**
     * The port the application is exposed on.
     */
    port?: pulumi.Input<string>;
    /**
     * Repository Name
     */
    repositoryName?: pulumi.Input<string>;
    /**
     * Repository Owner
     */
    repositoryOwner?: pulumi.Input<string>;
    /**
     * The name of the resource group. The name is case insensitive.
     */
    resourceGroupName: pulumi.Input<string>;
    /**
     * Resource tags.
     */
    tags?: pulumi.Input<{
        [key: string]: pulumi.Input<string>;
    }>;
    /**
     * The name of the workflow resource.
     */
    workflowName?: pulumi.Input<string>;
}
