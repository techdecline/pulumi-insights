import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../../types/input";
import * as outputs from "../../types/output";
/**
 * Deployment stack object.
 */
export declare class DeploymentStackAtResourceGroup extends pulumi.CustomResource {
    /**
     * Get an existing DeploymentStackAtResourceGroup resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    static get(name: string, id: pulumi.Input<pulumi.ID>, opts?: pulumi.CustomResourceOptions): DeploymentStackAtResourceGroup;
    /**
     * Returns true if the given object is an instance of DeploymentStackAtResourceGroup.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    static isInstance(obj: any): obj is DeploymentStackAtResourceGroup;
    /**
     * Defines the behavior of resources that are no longer managed after the Deployment stack is updated or deleted.
     */
    readonly actionOnUnmanage: pulumi.Output<outputs.resources.v20240301.ActionOnUnmanageResponse>;
    /**
     * The correlation id of the last Deployment stack upsert or delete operation. It is in GUID format and is used for tracing.
     */
    readonly correlationId: pulumi.Output<string>;
    /**
     * The debug setting of the deployment.
     */
    readonly debugSetting: pulumi.Output<outputs.resources.v20240301.DeploymentStacksDebugSettingResponse | undefined>;
    /**
     * An array of resources that were deleted during the most recent Deployment stack update. Deleted means that the resource was removed from the template and relevant deletion operations were specified.
     */
    readonly deletedResources: pulumi.Output<outputs.resources.v20240301.ResourceReferenceResponse[]>;
    /**
     * Defines how resources deployed by the stack are locked.
     */
    readonly denySettings: pulumi.Output<outputs.resources.v20240301.DenySettingsResponse>;
    /**
     * The resourceId of the deployment resource created by the deployment stack.
     */
    readonly deploymentId: pulumi.Output<string>;
    /**
     * The scope at which the initial deployment should be created. If a scope is not specified, it will default to the scope of the deployment stack. Valid scopes are: management group (format: '/providers/Microsoft.Management/managementGroups/{managementGroupId}'), subscription (format: '/subscriptions/{subscriptionId}'), resource group (format: '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}').
     */
    readonly deploymentScope: pulumi.Output<string | undefined>;
    /**
     * Deployment stack description. Max length of 4096 characters.
     */
    readonly description: pulumi.Output<string | undefined>;
    /**
     * An array of resources that were detached during the most recent Deployment stack update. Detached means that the resource was removed from the template, but no relevant deletion operations were specified. So, the resource still exists while no longer being associated with the stack.
     */
    readonly detachedResources: pulumi.Output<outputs.resources.v20240301.ResourceReferenceResponse[]>;
    /**
     * The duration of the last successful Deployment stack update.
     */
    readonly duration: pulumi.Output<string>;
    /**
     * The error detail.
     */
    readonly error: pulumi.Output<outputs.resources.v20240301.ErrorDetailResponse | undefined>;
    /**
     * An array of resources that failed to reach goal state during the most recent update. Each resourceId is accompanied by an error message.
     */
    readonly failedResources: pulumi.Output<outputs.resources.v20240301.ResourceReferenceExtendedResponse[]>;
    /**
     * The location of the Deployment stack. It cannot be changed after creation. It must be one of the supported Azure locations.
     */
    readonly location: pulumi.Output<string | undefined>;
    /**
     * Name of this resource.
     */
    readonly name: pulumi.Output<string>;
    /**
     * The outputs of the deployment resource created by the deployment stack.
     */
    readonly outputs: pulumi.Output<any>;
    /**
     * Name and value pairs that define the deployment parameters for the template. Use this element when providing the parameter values directly in the request, rather than linking to an existing parameter file. Use either the parametersLink property or the parameters property, but not both.
     */
    readonly parameters: pulumi.Output<{
        [key: string]: outputs.resources.v20240301.DeploymentParameterResponse;
    } | undefined>;
    /**
     * The URI of parameters file. Use this element to link to an existing parameters file. Use either the parametersLink property or the parameters property, but not both.
     */
    readonly parametersLink: pulumi.Output<outputs.resources.v20240301.DeploymentStacksParametersLinkResponse | undefined>;
    /**
     * State of the deployment stack.
     */
    readonly provisioningState: pulumi.Output<string>;
    /**
     * An array of resources currently managed by the deployment stack.
     */
    readonly resources: pulumi.Output<outputs.resources.v20240301.ManagedResourceReferenceResponse[]>;
    /**
     * Azure Resource Manager metadata containing createdBy and modifiedBy information.
     */
    readonly systemData: pulumi.Output<outputs.resources.v20240301.SystemDataResponse>;
    /**
     * Deployment stack resource tags.
     */
    readonly tags: pulumi.Output<{
        [key: string]: string;
    } | undefined>;
    /**
     * Type of this resource.
     */
    readonly type: pulumi.Output<string>;
    /**
     * Create a DeploymentStackAtResourceGroup resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: DeploymentStackAtResourceGroupArgs, opts?: pulumi.CustomResourceOptions);
}
/**
 * The set of arguments for constructing a DeploymentStackAtResourceGroup resource.
 */
export interface DeploymentStackAtResourceGroupArgs {
    /**
     * Defines the behavior of resources that are no longer managed after the Deployment stack is updated or deleted.
     */
    actionOnUnmanage: pulumi.Input<inputs.resources.v20240301.ActionOnUnmanageArgs>;
    /**
     * Flag to bypass service errors that indicate the stack resource list is not correctly synchronized.
     */
    bypassStackOutOfSyncError?: pulumi.Input<boolean>;
    /**
     * The debug setting of the deployment.
     */
    debugSetting?: pulumi.Input<inputs.resources.v20240301.DeploymentStacksDebugSettingArgs>;
    /**
     * Defines how resources deployed by the stack are locked.
     */
    denySettings: pulumi.Input<inputs.resources.v20240301.DenySettingsArgs>;
    /**
     * The scope at which the initial deployment should be created. If a scope is not specified, it will default to the scope of the deployment stack. Valid scopes are: management group (format: '/providers/Microsoft.Management/managementGroups/{managementGroupId}'), subscription (format: '/subscriptions/{subscriptionId}'), resource group (format: '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}').
     */
    deploymentScope?: pulumi.Input<string>;
    /**
     * Name of the deployment stack.
     */
    deploymentStackName?: pulumi.Input<string>;
    /**
     * Deployment stack description. Max length of 4096 characters.
     */
    description?: pulumi.Input<string>;
    /**
     * The location of the Deployment stack. It cannot be changed after creation. It must be one of the supported Azure locations.
     */
    location?: pulumi.Input<string>;
    /**
     * Name and value pairs that define the deployment parameters for the template. Use this element when providing the parameter values directly in the request, rather than linking to an existing parameter file. Use either the parametersLink property or the parameters property, but not both.
     */
    parameters?: pulumi.Input<{
        [key: string]: pulumi.Input<inputs.resources.v20240301.DeploymentParameterArgs>;
    }>;
    /**
     * The URI of parameters file. Use this element to link to an existing parameters file. Use either the parametersLink property or the parameters property, but not both.
     */
    parametersLink?: pulumi.Input<inputs.resources.v20240301.DeploymentStacksParametersLinkArgs>;
    /**
     * The name of the resource group. The name is case insensitive.
     */
    resourceGroupName: pulumi.Input<string>;
    /**
     * Deployment stack resource tags.
     */
    tags?: pulumi.Input<{
        [key: string]: pulumi.Input<string>;
    }>;
    /**
     * The template content. You use this element when you want to pass the template syntax directly in the request rather than link to an existing template. It can be a JObject or well-formed JSON string. Use either the templateLink property or the template property, but not both.
     */
    template?: any;
    /**
     * The URI of the template. Use either the templateLink property or the template property, but not both.
     */
    templateLink?: pulumi.Input<inputs.resources.v20240301.DeploymentStacksTemplateLinkArgs>;
}
