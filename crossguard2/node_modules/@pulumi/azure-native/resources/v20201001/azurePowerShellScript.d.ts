import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../../types/input";
import * as outputs from "../../types/output";
import * as enums from "../../types/enums";
/**
 * Object model for the Azure PowerShell script.
 */
export declare class AzurePowerShellScript extends pulumi.CustomResource {
    /**
     * Get an existing AzurePowerShellScript resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    static get(name: string, id: pulumi.Input<pulumi.ID>, opts?: pulumi.CustomResourceOptions): AzurePowerShellScript;
    /**
     * Returns true if the given object is an instance of AzurePowerShellScript.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    static isInstance(obj: any): obj is AzurePowerShellScript;
    /**
     * Command line arguments to pass to the script. Arguments are separated by spaces. ex: -Name blue* -Location 'West US 2'
     */
    readonly arguments: pulumi.Output<string | undefined>;
    /**
     * Azure PowerShell module version to be used.
     */
    readonly azPowerShellVersion: pulumi.Output<string>;
    /**
     * The clean up preference when the script execution gets in a terminal state. Default setting is 'Always'.
     */
    readonly cleanupPreference: pulumi.Output<string | undefined>;
    /**
     * Container settings.
     */
    readonly containerSettings: pulumi.Output<outputs.resources.v20201001.ContainerConfigurationResponse | undefined>;
    /**
     * The environment variables to pass over to the script.
     */
    readonly environmentVariables: pulumi.Output<outputs.resources.v20201001.EnvironmentVariableResponse[] | undefined>;
    /**
     * Gets or sets how the deployment script should be forced to execute even if the script resource has not changed. Can be current time stamp or a GUID.
     */
    readonly forceUpdateTag: pulumi.Output<string | undefined>;
    /**
     * Optional property. Managed identity to be used for this deployment script. Currently, only user-assigned MSI is supported.
     */
    readonly identity: pulumi.Output<outputs.resources.v20201001.ManagedServiceIdentityResponse | undefined>;
    /**
     * Type of the script.
     * Expected value is 'AzurePowerShell'.
     */
    readonly kind: pulumi.Output<"AzurePowerShell">;
    /**
     * The location of the ACI and the storage account for the deployment script.
     */
    readonly location: pulumi.Output<string>;
    /**
     * Name of this resource.
     */
    readonly name: pulumi.Output<string>;
    /**
     * List of script outputs.
     */
    readonly outputs: pulumi.Output<{
        [key: string]: any;
    }>;
    /**
     * Uri for the script. This is the entry point for the external script.
     */
    readonly primaryScriptUri: pulumi.Output<string | undefined>;
    /**
     * State of the script execution. This only appears in the response.
     */
    readonly provisioningState: pulumi.Output<string>;
    /**
     * Interval for which the service retains the script resource after it reaches a terminal state. Resource will be deleted when this duration expires. Duration is based on ISO 8601 pattern (for example P1D means one day).
     */
    readonly retentionInterval: pulumi.Output<string>;
    /**
     * Script body.
     */
    readonly scriptContent: pulumi.Output<string | undefined>;
    /**
     * Contains the results of script execution.
     */
    readonly status: pulumi.Output<outputs.resources.v20201001.ScriptStatusResponse>;
    /**
     * Storage Account settings.
     */
    readonly storageAccountSettings: pulumi.Output<outputs.resources.v20201001.StorageAccountConfigurationResponse | undefined>;
    /**
     * Supporting files for the external script.
     */
    readonly supportingScriptUris: pulumi.Output<string[] | undefined>;
    /**
     * The system metadata related to this resource.
     */
    readonly systemData: pulumi.Output<outputs.resources.v20201001.SystemDataResponse>;
    /**
     * Resource tags.
     */
    readonly tags: pulumi.Output<{
        [key: string]: string;
    } | undefined>;
    /**
     * Maximum allowed script execution time specified in ISO 8601 format. Default value is P1D
     */
    readonly timeout: pulumi.Output<string | undefined>;
    /**
     * Type of this resource.
     */
    readonly type: pulumi.Output<string>;
    /**
     * Create a AzurePowerShellScript resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: AzurePowerShellScriptArgs, opts?: pulumi.CustomResourceOptions);
}
/**
 * The set of arguments for constructing a AzurePowerShellScript resource.
 */
export interface AzurePowerShellScriptArgs {
    /**
     * Command line arguments to pass to the script. Arguments are separated by spaces. ex: -Name blue* -Location 'West US 2'
     */
    arguments?: pulumi.Input<string>;
    /**
     * Azure PowerShell module version to be used.
     */
    azPowerShellVersion: pulumi.Input<string>;
    /**
     * The clean up preference when the script execution gets in a terminal state. Default setting is 'Always'.
     */
    cleanupPreference?: pulumi.Input<string | enums.resources.v20201001.CleanupOptions>;
    /**
     * Container settings.
     */
    containerSettings?: pulumi.Input<inputs.resources.v20201001.ContainerConfigurationArgs>;
    /**
     * The environment variables to pass over to the script.
     */
    environmentVariables?: pulumi.Input<pulumi.Input<inputs.resources.v20201001.EnvironmentVariableArgs>[]>;
    /**
     * Gets or sets how the deployment script should be forced to execute even if the script resource has not changed. Can be current time stamp or a GUID.
     */
    forceUpdateTag?: pulumi.Input<string>;
    /**
     * Optional property. Managed identity to be used for this deployment script. Currently, only user-assigned MSI is supported.
     */
    identity?: pulumi.Input<inputs.resources.v20201001.ManagedServiceIdentityArgs>;
    /**
     * Type of the script.
     * Expected value is 'AzurePowerShell'.
     */
    kind: pulumi.Input<"AzurePowerShell">;
    /**
     * The location of the ACI and the storage account for the deployment script.
     */
    location?: pulumi.Input<string>;
    /**
     * Uri for the script. This is the entry point for the external script.
     */
    primaryScriptUri?: pulumi.Input<string>;
    /**
     * The name of the resource group. The name is case insensitive.
     */
    resourceGroupName: pulumi.Input<string>;
    /**
     * Interval for which the service retains the script resource after it reaches a terminal state. Resource will be deleted when this duration expires. Duration is based on ISO 8601 pattern (for example P1D means one day).
     */
    retentionInterval: pulumi.Input<string>;
    /**
     * Script body.
     */
    scriptContent?: pulumi.Input<string>;
    /**
     * Name of the deployment script.
     */
    scriptName?: pulumi.Input<string>;
    /**
     * Storage Account settings.
     */
    storageAccountSettings?: pulumi.Input<inputs.resources.v20201001.StorageAccountConfigurationArgs>;
    /**
     * Supporting files for the external script.
     */
    supportingScriptUris?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Resource tags.
     */
    tags?: pulumi.Input<{
        [key: string]: pulumi.Input<string>;
    }>;
    /**
     * Maximum allowed script execution time specified in ISO 8601 format. Default value is P1D
     */
    timeout?: pulumi.Input<string>;
}
