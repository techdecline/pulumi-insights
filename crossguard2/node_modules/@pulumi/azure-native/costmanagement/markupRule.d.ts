import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
/**
 * Markup rule
 * Azure REST API version: 2022-10-05-preview.
 */
export declare class MarkupRule extends pulumi.CustomResource {
    /**
     * Get an existing MarkupRule resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    static get(name: string, id: pulumi.Input<pulumi.ID>, opts?: pulumi.CustomResourceOptions): MarkupRule;
    /**
     * Returns true if the given object is an instance of MarkupRule.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    static isInstance(obj: any): obj is MarkupRule;
    /**
     * Customer information for the markup rule.
     */
    readonly customerDetails: pulumi.Output<outputs.costmanagement.CustomerMetadataResponse>;
    /**
     * The description of the markup rule.
     */
    readonly description: pulumi.Output<string | undefined>;
    /**
     * eTag of the resource. To handle concurrent update scenario, this field will be used to determine whether the user is updating the latest version or not.
     */
    readonly eTag: pulumi.Output<string | undefined>;
    /**
     * Ending date of the markup rule.
     */
    readonly endDate: pulumi.Output<string | undefined>;
    /**
     * Resource name.
     */
    readonly name: pulumi.Output<string>;
    /**
     * The markup percentage of the rule.
     */
    readonly percentage: pulumi.Output<number>;
    /**
     * Starting date of the markup rule.
     */
    readonly startDate: pulumi.Output<string>;
    /**
     * Resource type.
     */
    readonly type: pulumi.Output<string>;
    /**
     * Create a MarkupRule resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: MarkupRuleArgs, opts?: pulumi.CustomResourceOptions);
}
/**
 * The set of arguments for constructing a MarkupRule resource.
 */
export interface MarkupRuleArgs {
    /**
     * BillingAccount ID
     */
    billingAccountId: pulumi.Input<string>;
    /**
     * BillingProfile ID
     */
    billingProfileId: pulumi.Input<string>;
    /**
     * Customer information for the markup rule.
     */
    customerDetails: pulumi.Input<inputs.costmanagement.CustomerMetadataArgs>;
    /**
     * The description of the markup rule.
     */
    description?: pulumi.Input<string>;
    /**
     * eTag of the resource. To handle concurrent update scenario, this field will be used to determine whether the user is updating the latest version or not.
     */
    eTag?: pulumi.Input<string>;
    /**
     * Ending date of the markup rule.
     */
    endDate?: pulumi.Input<string>;
    /**
     * Markup rule name.
     */
    name?: pulumi.Input<string>;
    /**
     * The markup percentage of the rule.
     */
    percentage: pulumi.Input<number>;
    /**
     * Starting date of the markup rule.
     */
    startDate: pulumi.Input<string>;
}
