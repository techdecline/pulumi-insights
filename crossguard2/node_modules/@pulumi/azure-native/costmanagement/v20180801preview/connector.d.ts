import * as pulumi from "@pulumi/pulumi";
import * as outputs from "../../types/output";
import * as enums from "../../types/enums";
/**
 * The Connector model definition
 */
export declare class Connector extends pulumi.CustomResource {
    /**
     * Get an existing Connector resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    static get(name: string, id: pulumi.Input<pulumi.ID>, opts?: pulumi.CustomResourceOptions): Connector;
    /**
     * Returns true if the given object is an instance of Connector.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    static isInstance(obj: any): obj is Connector;
    /**
     * Collection information
     */
    readonly collection: pulumi.Output<outputs.costmanagement.v20180801preview.ConnectorCollectionInfoResponse>;
    /**
     * Connector definition creation datetime
     */
    readonly createdOn: pulumi.Output<string>;
    /**
     * Credentials authentication key (eg AWS ARN)
     */
    readonly credentialsKey: pulumi.Output<string | undefined>;
    /**
     * Connector DisplayName (defaults to Name)
     */
    readonly displayName: pulumi.Output<string | undefined>;
    /**
     * Connector kind (eg aws)
     */
    readonly kind: pulumi.Output<string | undefined>;
    /**
     * Connector location
     */
    readonly location: pulumi.Output<string | undefined>;
    /**
     * Connector last modified datetime
     */
    readonly modifiedOn: pulumi.Output<string>;
    /**
     * Connector name
     */
    readonly name: pulumi.Output<string>;
    /**
     * Connector providerAccountId (determined from credentials)
     */
    readonly providerAccountId: pulumi.Output<string>;
    /**
     * Identifying source report. (For AWS this is a CUR report name, defined with Daily and with Resources)
     */
    readonly reportId: pulumi.Output<string | undefined>;
    /**
     * Connector status
     */
    readonly status: pulumi.Output<string | undefined>;
    /**
     * Resource tags.
     */
    readonly tags: pulumi.Output<{
        [key: string]: string;
    } | undefined>;
    /**
     * Connector type
     */
    readonly type: pulumi.Output<string>;
    /**
     * Create a Connector resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: ConnectorArgs, opts?: pulumi.CustomResourceOptions);
}
/**
 * The set of arguments for constructing a Connector resource.
 */
export interface ConnectorArgs {
    /**
     * Connector Name.
     */
    connectorName?: pulumi.Input<string>;
    /**
     * Credentials authentication key (eg AWS ARN)
     */
    credentialsKey?: pulumi.Input<string>;
    /**
     * Credentials secret (eg AWS ExternalId)
     */
    credentialsSecret?: pulumi.Input<string>;
    /**
     * Connector DisplayName (defaults to Name)
     */
    displayName?: pulumi.Input<string>;
    /**
     * Connector kind (eg aws)
     */
    kind?: pulumi.Input<string>;
    /**
     * Connector location
     */
    location?: pulumi.Input<string>;
    /**
     * Identifying source report. (For AWS this is a CUR report name, defined with Daily and with Resources)
     */
    reportId?: pulumi.Input<string>;
    /**
     * Azure Resource Group Name.
     */
    resourceGroupName: pulumi.Input<string>;
    /**
     * Connector status
     */
    status?: pulumi.Input<string | enums.costmanagement.v20180801preview.ConnectorStatus>;
    /**
     * Resource tags.
     */
    tags?: pulumi.Input<{
        [key: string]: pulumi.Input<string>;
    }>;
}
