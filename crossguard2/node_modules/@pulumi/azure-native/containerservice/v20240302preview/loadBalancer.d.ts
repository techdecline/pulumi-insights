import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../../types/input";
import * as outputs from "../../types/output";
/**
 * The configurations regarding multiple standard load balancers. If not supplied, single load balancer mode will be used. Multiple standard load balancers mode will be used if at lease one configuration is supplied. There has to be a configuration named `kubernetes`.
 */
export declare class LoadBalancer extends pulumi.CustomResource {
    /**
     * Get an existing LoadBalancer resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    static get(name: string, id: pulumi.Input<pulumi.ID>, opts?: pulumi.CustomResourceOptions): LoadBalancer;
    /**
     * Returns true if the given object is an instance of LoadBalancer.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    static isInstance(obj: any): obj is LoadBalancer;
    /**
     * Whether to automatically place services on the load balancer. If not supplied, the default value is true. If set to false manually, both of the external and the internal load balancer will not be selected for services unless they explicitly target it.
     */
    readonly allowServicePlacement: pulumi.Output<boolean | undefined>;
    /**
     * The name of the resource
     */
    readonly name: pulumi.Output<string>;
    /**
     * Nodes that match this selector will be possible members of this load balancer.
     */
    readonly nodeSelector: pulumi.Output<outputs.containerservice.v20240302preview.LabelSelectorResponse | undefined>;
    /**
     * Required field. A string value that must specify the ID of an existing agent pool. All nodes in the given pool will always be added to this load balancer. This agent pool must have at least one node and minCount>=1 for autoscaling operations. An agent pool can only be the primary pool for a single load balancer.
     */
    readonly primaryAgentPoolName: pulumi.Output<string>;
    /**
     * The current provisioning state.
     */
    readonly provisioningState: pulumi.Output<string>;
    /**
     * Only services that must match this selector can be placed on this load balancer.
     */
    readonly serviceLabelSelector: pulumi.Output<outputs.containerservice.v20240302preview.LabelSelectorResponse | undefined>;
    /**
     * Services created in namespaces that match the selector can be placed on this load balancer.
     */
    readonly serviceNamespaceSelector: pulumi.Output<outputs.containerservice.v20240302preview.LabelSelectorResponse | undefined>;
    /**
     * Azure Resource Manager metadata containing createdBy and modifiedBy information.
     */
    readonly systemData: pulumi.Output<outputs.containerservice.v20240302preview.SystemDataResponse>;
    /**
     * The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
     */
    readonly type: pulumi.Output<string>;
    /**
     * Create a LoadBalancer resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: LoadBalancerArgs, opts?: pulumi.CustomResourceOptions);
}
/**
 * The set of arguments for constructing a LoadBalancer resource.
 */
export interface LoadBalancerArgs {
    /**
     * Whether to automatically place services on the load balancer. If not supplied, the default value is true. If set to false manually, both of the external and the internal load balancer will not be selected for services unless they explicitly target it.
     */
    allowServicePlacement?: pulumi.Input<boolean>;
    /**
     * The name of the load balancer.
     */
    loadBalancerName?: pulumi.Input<string>;
    /**
     * Name of the public load balancer. There will be an internal load balancer created if needed, and the name will be `<name>-internal`. The internal lb shares the same configurations as the external one. The internal lbs are not needed to be included in LoadBalancer list. There must be a name of kubernetes in the list.
     */
    name: pulumi.Input<string>;
    /**
     * Nodes that match this selector will be possible members of this load balancer.
     */
    nodeSelector?: pulumi.Input<inputs.containerservice.v20240302preview.LabelSelectorArgs>;
    /**
     * Required field. A string value that must specify the ID of an existing agent pool. All nodes in the given pool will always be added to this load balancer. This agent pool must have at least one node and minCount>=1 for autoscaling operations. An agent pool can only be the primary pool for a single load balancer.
     */
    primaryAgentPoolName: pulumi.Input<string>;
    /**
     * The name of the resource group. The name is case insensitive.
     */
    resourceGroupName: pulumi.Input<string>;
    /**
     * The name of the managed cluster resource.
     */
    resourceName: pulumi.Input<string>;
    /**
     * Only services that must match this selector can be placed on this load balancer.
     */
    serviceLabelSelector?: pulumi.Input<inputs.containerservice.v20240302preview.LabelSelectorArgs>;
    /**
     * Services created in namespaces that match the selector can be placed on this load balancer.
     */
    serviceNamespaceSelector?: pulumi.Input<inputs.containerservice.v20240302preview.LabelSelectorArgs>;
}
