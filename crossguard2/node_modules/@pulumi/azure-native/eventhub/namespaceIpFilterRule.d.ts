import * as pulumi from "@pulumi/pulumi";
import * as enums from "../types/enums";
/**
 * Single item in a List or Get IpFilterRules operation
 * Azure REST API version: 2018-01-01-preview. Prior API version in Azure Native 1.x: 2018-01-01-preview.
 */
export declare class NamespaceIpFilterRule extends pulumi.CustomResource {
    /**
     * Get an existing NamespaceIpFilterRule resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    static get(name: string, id: pulumi.Input<pulumi.ID>, opts?: pulumi.CustomResourceOptions): NamespaceIpFilterRule;
    /**
     * Returns true if the given object is an instance of NamespaceIpFilterRule.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    static isInstance(obj: any): obj is NamespaceIpFilterRule;
    /**
     * The IP Filter Action
     */
    readonly action: pulumi.Output<string | undefined>;
    /**
     * IP Filter name
     */
    readonly filterName: pulumi.Output<string | undefined>;
    /**
     * IP Mask
     */
    readonly ipMask: pulumi.Output<string | undefined>;
    /**
     * The name of the resource
     */
    readonly name: pulumi.Output<string>;
    /**
     * The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
     */
    readonly type: pulumi.Output<string>;
    /**
     * Create a NamespaceIpFilterRule resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: NamespaceIpFilterRuleArgs, opts?: pulumi.CustomResourceOptions);
}
/**
 * The set of arguments for constructing a NamespaceIpFilterRule resource.
 */
export interface NamespaceIpFilterRuleArgs {
    /**
     * The IP Filter Action
     */
    action?: pulumi.Input<string | enums.eventhub.IPAction>;
    /**
     * IP Filter name
     */
    filterName?: pulumi.Input<string>;
    /**
     * The IP Filter Rule name.
     */
    ipFilterRuleName?: pulumi.Input<string>;
    /**
     * IP Mask
     */
    ipMask?: pulumi.Input<string>;
    /**
     * The Namespace name
     */
    namespaceName: pulumi.Input<string>;
    /**
     * Name of the resource group within the azure subscription.
     */
    resourceGroupName: pulumi.Input<string>;
}
