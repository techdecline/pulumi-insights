import * as pulumi from "@pulumi/pulumi";
/**
 * Gets an IpFilterRule for a Namespace by rule name.
 */
export declare function getNamespaceIpFilterRule(args: GetNamespaceIpFilterRuleArgs, opts?: pulumi.InvokeOptions): Promise<GetNamespaceIpFilterRuleResult>;
export interface GetNamespaceIpFilterRuleArgs {
    /**
     * The IP Filter Rule name.
     */
    ipFilterRuleName: string;
    /**
     * The Namespace name
     */
    namespaceName: string;
    /**
     * Name of the resource group within the azure subscription.
     */
    resourceGroupName: string;
}
/**
 * Single item in a List or Get IpFilterRules operation
 */
export interface GetNamespaceIpFilterRuleResult {
    /**
     * The IP Filter Action
     */
    readonly action?: string;
    /**
     * IP Filter name
     */
    readonly filterName?: string;
    /**
     * Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
     */
    readonly id: string;
    /**
     * IP Mask
     */
    readonly ipMask?: string;
    /**
     * The name of the resource
     */
    readonly name: string;
    /**
     * The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
     */
    readonly type: string;
}
/**
 * Gets an IpFilterRule for a Namespace by rule name.
 */
export declare function getNamespaceIpFilterRuleOutput(args: GetNamespaceIpFilterRuleOutputArgs, opts?: pulumi.InvokeOutputOptions): pulumi.Output<GetNamespaceIpFilterRuleResult>;
export interface GetNamespaceIpFilterRuleOutputArgs {
    /**
     * The IP Filter Rule name.
     */
    ipFilterRuleName: pulumi.Input<string>;
    /**
     * The Namespace name
     */
    namespaceName: pulumi.Input<string>;
    /**
     * Name of the resource group within the azure subscription.
     */
    resourceGroupName: pulumi.Input<string>;
}
