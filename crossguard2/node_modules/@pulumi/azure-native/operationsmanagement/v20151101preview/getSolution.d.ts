import * as pulumi from "@pulumi/pulumi";
import * as outputs from "../../types/output";
/**
 * Retrieves the user solution.
 */
export declare function getSolution(args: GetSolutionArgs, opts?: pulumi.InvokeOptions): Promise<GetSolutionResult>;
export interface GetSolutionArgs {
    /**
     * The name of the resource group to get. The name is case insensitive.
     */
    resourceGroupName: string;
    /**
     * User Solution Name.
     */
    solutionName: string;
}
/**
 * The container for solution.
 */
export interface GetSolutionResult {
    /**
     * Resource ID.
     */
    readonly id: string;
    /**
     * Resource location
     */
    readonly location?: string;
    /**
     * Resource name.
     */
    readonly name: string;
    /**
     * Plan for solution object supported by the OperationsManagement resource provider.
     */
    readonly plan?: outputs.operationsmanagement.v20151101preview.SolutionPlanResponse;
    /**
     * Properties for solution object supported by the OperationsManagement resource provider.
     */
    readonly properties: outputs.operationsmanagement.v20151101preview.SolutionPropertiesResponse;
    /**
     * Resource tags
     */
    readonly tags?: {
        [key: string]: string;
    };
    /**
     * Resource type.
     */
    readonly type: string;
}
/**
 * Retrieves the user solution.
 */
export declare function getSolutionOutput(args: GetSolutionOutputArgs, opts?: pulumi.InvokeOutputOptions): pulumi.Output<GetSolutionResult>;
export interface GetSolutionOutputArgs {
    /**
     * The name of the resource group to get. The name is case insensitive.
     */
    resourceGroupName: pulumi.Input<string>;
    /**
     * User Solution Name.
     */
    solutionName: pulumi.Input<string>;
}
