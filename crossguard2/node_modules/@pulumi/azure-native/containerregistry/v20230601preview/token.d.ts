import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../../types/input";
import * as outputs from "../../types/output";
import * as enums from "../../types/enums";
/**
 * An object that represents a token for a container registry.
 */
export declare class Token extends pulumi.CustomResource {
    /**
     * Get an existing Token resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    static get(name: string, id: pulumi.Input<pulumi.ID>, opts?: pulumi.CustomResourceOptions): Token;
    /**
     * Returns true if the given object is an instance of Token.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    static isInstance(obj: any): obj is Token;
    /**
     * The creation date of scope map.
     */
    readonly creationDate: pulumi.Output<string>;
    /**
     * The credentials that can be used for authenticating the token.
     */
    readonly credentials: pulumi.Output<outputs.containerregistry.v20230601preview.TokenCredentialsPropertiesResponse | undefined>;
    /**
     * The name of the resource.
     */
    readonly name: pulumi.Output<string>;
    /**
     * Provisioning state of the resource.
     */
    readonly provisioningState: pulumi.Output<string>;
    /**
     * The resource ID of the scope map to which the token will be associated with.
     */
    readonly scopeMapId: pulumi.Output<string | undefined>;
    /**
     * The status of the token example enabled or disabled.
     */
    readonly status: pulumi.Output<string | undefined>;
    /**
     * Metadata pertaining to creation and last modification of the resource.
     */
    readonly systemData: pulumi.Output<outputs.containerregistry.v20230601preview.SystemDataResponse>;
    /**
     * The type of the resource.
     */
    readonly type: pulumi.Output<string>;
    /**
     * Create a Token resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: TokenArgs, opts?: pulumi.CustomResourceOptions);
}
/**
 * The set of arguments for constructing a Token resource.
 */
export interface TokenArgs {
    /**
     * The credentials that can be used for authenticating the token.
     */
    credentials?: pulumi.Input<inputs.containerregistry.v20230601preview.TokenCredentialsPropertiesArgs>;
    /**
     * The name of the container registry.
     */
    registryName: pulumi.Input<string>;
    /**
     * The name of the resource group. The name is case insensitive.
     */
    resourceGroupName: pulumi.Input<string>;
    /**
     * The resource ID of the scope map to which the token will be associated with.
     */
    scopeMapId?: pulumi.Input<string>;
    /**
     * The status of the token example enabled or disabled.
     */
    status?: pulumi.Input<string | enums.containerregistry.v20230601preview.TokenStatus>;
    /**
     * The name of the token.
     */
    tokenName?: pulumi.Input<string>;
}
