import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../../types/input";
import * as outputs from "../../types/output";
/**
 * The task run that has the ARM resource and properties.
 * The task run will have the information of request and result of a run.
 */
export declare class TaskRun extends pulumi.CustomResource {
    /**
     * Get an existing TaskRun resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    static get(name: string, id: pulumi.Input<pulumi.ID>, opts?: pulumi.CustomResourceOptions): TaskRun;
    /**
     * Returns true if the given object is an instance of TaskRun.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    static isInstance(obj: any): obj is TaskRun;
    /**
     * How the run should be forced to rerun even if the run request configuration has not changed
     */
    readonly forceUpdateTag: pulumi.Output<string | undefined>;
    /**
     * Identity for the resource.
     */
    readonly identity: pulumi.Output<outputs.containerregistry.v20190601preview.IdentityPropertiesResponse | undefined>;
    /**
     * The location of the resource
     */
    readonly location: pulumi.Output<string | undefined>;
    /**
     * The name of the resource.
     */
    readonly name: pulumi.Output<string>;
    /**
     * The provisioning state of this task run
     */
    readonly provisioningState: pulumi.Output<string>;
    /**
     * The request (parameters) for the run
     */
    readonly runRequest: pulumi.Output<outputs.containerregistry.v20190601preview.DockerBuildRequestResponse | outputs.containerregistry.v20190601preview.EncodedTaskRunRequestResponse | outputs.containerregistry.v20190601preview.FileTaskRunRequestResponse | outputs.containerregistry.v20190601preview.TaskRunRequestResponse | undefined>;
    /**
     * The result of this task run
     */
    readonly runResult: pulumi.Output<outputs.containerregistry.v20190601preview.RunResponse>;
    /**
     * Metadata pertaining to creation and last modification of the resource.
     */
    readonly systemData: pulumi.Output<outputs.containerregistry.v20190601preview.SystemDataResponse>;
    /**
     * The type of the resource.
     */
    readonly type: pulumi.Output<string>;
    /**
     * Create a TaskRun resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: TaskRunArgs, opts?: pulumi.CustomResourceOptions);
}
/**
 * The set of arguments for constructing a TaskRun resource.
 */
export interface TaskRunArgs {
    /**
     * How the run should be forced to rerun even if the run request configuration has not changed
     */
    forceUpdateTag?: pulumi.Input<string>;
    /**
     * Identity for the resource.
     */
    identity?: pulumi.Input<inputs.containerregistry.v20190601preview.IdentityPropertiesArgs>;
    /**
     * The location of the resource
     */
    location?: pulumi.Input<string>;
    /**
     * The name of the container registry.
     */
    registryName: pulumi.Input<string>;
    /**
     * The name of the resource group to which the container registry belongs.
     */
    resourceGroupName: pulumi.Input<string>;
    /**
     * The request (parameters) for the run
     */
    runRequest?: pulumi.Input<inputs.containerregistry.v20190601preview.DockerBuildRequestArgs | inputs.containerregistry.v20190601preview.EncodedTaskRunRequestArgs | inputs.containerregistry.v20190601preview.FileTaskRunRequestArgs | inputs.containerregistry.v20190601preview.TaskRunRequestArgs>;
    /**
     * The name of the task run.
     */
    taskRunName?: pulumi.Input<string>;
}
