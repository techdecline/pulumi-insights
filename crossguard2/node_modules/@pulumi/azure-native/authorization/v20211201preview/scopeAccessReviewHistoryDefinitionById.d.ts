import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../../types/input";
import * as outputs from "../../types/output";
import * as enums from "../../types/enums";
/**
 * Access Review History Definition.
 */
export declare class ScopeAccessReviewHistoryDefinitionById extends pulumi.CustomResource {
    /**
     * Get an existing ScopeAccessReviewHistoryDefinitionById resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    static get(name: string, id: pulumi.Input<pulumi.ID>, opts?: pulumi.CustomResourceOptions): ScopeAccessReviewHistoryDefinitionById;
    /**
     * Returns true if the given object is an instance of ScopeAccessReviewHistoryDefinitionById.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    static isInstance(obj: any): obj is ScopeAccessReviewHistoryDefinitionById;
    /**
     * Date time when history definition was created
     */
    readonly createdDateTime: pulumi.Output<string>;
    /**
     * Collection of review decisions which the history data should be filtered on. For example if Approve and Deny are supplied the data will only contain review results in which the decision maker approved or denied a review request.
     */
    readonly decisions: pulumi.Output<string[] | undefined>;
    /**
     * The display name for the history definition.
     */
    readonly displayName: pulumi.Output<string | undefined>;
    /**
     * The DateTime when the review is scheduled to end. Required if type is endDate
     */
    readonly endDate: pulumi.Output<string | undefined>;
    /**
     * Set of access review history instances for this history definition.
     */
    readonly instances: pulumi.Output<outputs.authorization.v20211201preview.AccessReviewHistoryInstanceResponse[] | undefined>;
    /**
     * The interval for recurrence. For a quarterly review, the interval is 3 for type : absoluteMonthly.
     */
    readonly interval: pulumi.Output<number | undefined>;
    /**
     * The access review history definition unique id.
     */
    readonly name: pulumi.Output<string>;
    /**
     * The number of times to repeat the access review. Required and must be positive if type is numbered.
     */
    readonly numberOfOccurrences: pulumi.Output<number | undefined>;
    /**
     * The identity id
     */
    readonly principalId: pulumi.Output<string>;
    /**
     * The identity display name
     */
    readonly principalName: pulumi.Output<string>;
    /**
     * The identity type : user/servicePrincipal
     */
    readonly principalType: pulumi.Output<string>;
    /**
     * Date time used when selecting review data, all reviews included in data end on or before this date. For use only with one-time/non-recurring reports.
     */
    readonly reviewHistoryPeriodEndDateTime: pulumi.Output<string>;
    /**
     * Date time used when selecting review data, all reviews included in data start on or after this date. For use only with one-time/non-recurring reports.
     */
    readonly reviewHistoryPeriodStartDateTime: pulumi.Output<string>;
    /**
     * A collection of scopes used when selecting review history data
     */
    readonly scopes: pulumi.Output<outputs.authorization.v20211201preview.AccessReviewScopeResponse[] | undefined>;
    /**
     * The DateTime when the review is scheduled to be start. This could be a date in the future. Required on create.
     */
    readonly startDate: pulumi.Output<string | undefined>;
    /**
     * This read-only field specifies the of the requested review history data. This is either requested, in-progress, done or error.
     */
    readonly status: pulumi.Output<string>;
    /**
     * The resource type.
     */
    readonly type: pulumi.Output<string>;
    /**
     * The user principal name(if valid)
     */
    readonly userPrincipalName: pulumi.Output<string>;
    /**
     * Create a ScopeAccessReviewHistoryDefinitionById resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: ScopeAccessReviewHistoryDefinitionByIdArgs, opts?: pulumi.CustomResourceOptions);
}
/**
 * The set of arguments for constructing a ScopeAccessReviewHistoryDefinitionById resource.
 */
export interface ScopeAccessReviewHistoryDefinitionByIdArgs {
    /**
     * Collection of review decisions which the history data should be filtered on. For example if Approve and Deny are supplied the data will only contain review results in which the decision maker approved or denied a review request.
     */
    decisions?: pulumi.Input<pulumi.Input<string | enums.authorization.v20211201preview.AccessReviewResult>[]>;
    /**
     * The display name for the history definition.
     */
    displayName?: pulumi.Input<string>;
    /**
     * The DateTime when the review is scheduled to end. Required if type is endDate
     */
    endDate?: pulumi.Input<string>;
    /**
     * The id of the access review history definition.
     */
    historyDefinitionId?: pulumi.Input<string>;
    /**
     * Set of access review history instances for this history definition.
     */
    instances?: pulumi.Input<pulumi.Input<inputs.authorization.v20211201preview.AccessReviewHistoryInstanceArgs>[]>;
    /**
     * The interval for recurrence. For a quarterly review, the interval is 3 for type : absoluteMonthly.
     */
    interval?: pulumi.Input<number>;
    /**
     * The number of times to repeat the access review. Required and must be positive if type is numbered.
     */
    numberOfOccurrences?: pulumi.Input<number>;
    /**
     * The scope of the resource.
     */
    scope: pulumi.Input<string>;
    /**
     * A collection of scopes used when selecting review history data
     */
    scopes?: pulumi.Input<pulumi.Input<inputs.authorization.v20211201preview.AccessReviewScopeArgs>[]>;
    /**
     * The DateTime when the review is scheduled to be start. This could be a date in the future. Required on create.
     */
    startDate?: pulumi.Input<string>;
    /**
     * The recurrence range type. The possible values are: endDate, noEnd, numbered.
     */
    type?: pulumi.Input<string | enums.authorization.v20211201preview.AccessReviewRecurrenceRangeType>;
}
