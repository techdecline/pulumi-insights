"use strict";
// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __exportStar = (this && this.__exportStar) || function(m, exports) {
    for (var p in m) if (p !== "default" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.PolicySetDefinitionVersionAtManagementGroup = exports.PolicySetDefinitionVersion = exports.PolicySetDefinitionAtManagementGroup = exports.PolicySetDefinition = exports.PolicyDefinitionVersionAtManagementGroup = exports.PolicyDefinitionVersion = exports.PolicyDefinitionAtManagementGroup = exports.PolicyDefinition = exports.PolicyAssignment = exports.listPolicySetDefinitionVersionAllBuiltinsOutput = exports.listPolicySetDefinitionVersionAllBuiltins = exports.listPolicySetDefinitionVersionAllAtManagementGroupOutput = exports.listPolicySetDefinitionVersionAllAtManagementGroup = exports.listPolicySetDefinitionVersionAllOutput = exports.listPolicySetDefinitionVersionAll = exports.listPolicyDefinitionVersionAllBuiltinsOutput = exports.listPolicyDefinitionVersionAllBuiltins = exports.listPolicyDefinitionVersionAllAtManagementGroupOutput = exports.listPolicyDefinitionVersionAllAtManagementGroup = exports.listPolicyDefinitionVersionAllOutput = exports.listPolicyDefinitionVersionAll = exports.getPolicySetDefinitionVersionAtManagementGroupOutput = exports.getPolicySetDefinitionVersionAtManagementGroup = exports.getPolicySetDefinitionVersionOutput = exports.getPolicySetDefinitionVersion = exports.getPolicySetDefinitionAtManagementGroupOutput = exports.getPolicySetDefinitionAtManagementGroup = exports.getPolicySetDefinitionOutput = exports.getPolicySetDefinition = exports.getPolicyDefinitionVersionAtManagementGroupOutput = exports.getPolicyDefinitionVersionAtManagementGroup = exports.getPolicyDefinitionVersionOutput = exports.getPolicyDefinitionVersion = exports.getPolicyDefinitionAtManagementGroupOutput = exports.getPolicyDefinitionAtManagementGroup = exports.getPolicyDefinitionOutput = exports.getPolicyDefinition = exports.getPolicyAssignmentOutput = exports.getPolicyAssignment = void 0;
const pulumi = require("@pulumi/pulumi");
const utilities = require("../../utilities");
exports.getPolicyAssignment = null;
exports.getPolicyAssignmentOutput = null;
utilities.lazyLoad(exports, ["getPolicyAssignment", "getPolicyAssignmentOutput"], () => require("./getPolicyAssignment"));
exports.getPolicyDefinition = null;
exports.getPolicyDefinitionOutput = null;
utilities.lazyLoad(exports, ["getPolicyDefinition", "getPolicyDefinitionOutput"], () => require("./getPolicyDefinition"));
exports.getPolicyDefinitionAtManagementGroup = null;
exports.getPolicyDefinitionAtManagementGroupOutput = null;
utilities.lazyLoad(exports, ["getPolicyDefinitionAtManagementGroup", "getPolicyDefinitionAtManagementGroupOutput"], () => require("./getPolicyDefinitionAtManagementGroup"));
exports.getPolicyDefinitionVersion = null;
exports.getPolicyDefinitionVersionOutput = null;
utilities.lazyLoad(exports, ["getPolicyDefinitionVersion", "getPolicyDefinitionVersionOutput"], () => require("./getPolicyDefinitionVersion"));
exports.getPolicyDefinitionVersionAtManagementGroup = null;
exports.getPolicyDefinitionVersionAtManagementGroupOutput = null;
utilities.lazyLoad(exports, ["getPolicyDefinitionVersionAtManagementGroup", "getPolicyDefinitionVersionAtManagementGroupOutput"], () => require("./getPolicyDefinitionVersionAtManagementGroup"));
exports.getPolicySetDefinition = null;
exports.getPolicySetDefinitionOutput = null;
utilities.lazyLoad(exports, ["getPolicySetDefinition", "getPolicySetDefinitionOutput"], () => require("./getPolicySetDefinition"));
exports.getPolicySetDefinitionAtManagementGroup = null;
exports.getPolicySetDefinitionAtManagementGroupOutput = null;
utilities.lazyLoad(exports, ["getPolicySetDefinitionAtManagementGroup", "getPolicySetDefinitionAtManagementGroupOutput"], () => require("./getPolicySetDefinitionAtManagementGroup"));
exports.getPolicySetDefinitionVersion = null;
exports.getPolicySetDefinitionVersionOutput = null;
utilities.lazyLoad(exports, ["getPolicySetDefinitionVersion", "getPolicySetDefinitionVersionOutput"], () => require("./getPolicySetDefinitionVersion"));
exports.getPolicySetDefinitionVersionAtManagementGroup = null;
exports.getPolicySetDefinitionVersionAtManagementGroupOutput = null;
utilities.lazyLoad(exports, ["getPolicySetDefinitionVersionAtManagementGroup", "getPolicySetDefinitionVersionAtManagementGroupOutput"], () => require("./getPolicySetDefinitionVersionAtManagementGroup"));
exports.listPolicyDefinitionVersionAll = null;
exports.listPolicyDefinitionVersionAllOutput = null;
utilities.lazyLoad(exports, ["listPolicyDefinitionVersionAll", "listPolicyDefinitionVersionAllOutput"], () => require("./listPolicyDefinitionVersionAll"));
exports.listPolicyDefinitionVersionAllAtManagementGroup = null;
exports.listPolicyDefinitionVersionAllAtManagementGroupOutput = null;
utilities.lazyLoad(exports, ["listPolicyDefinitionVersionAllAtManagementGroup", "listPolicyDefinitionVersionAllAtManagementGroupOutput"], () => require("./listPolicyDefinitionVersionAllAtManagementGroup"));
exports.listPolicyDefinitionVersionAllBuiltins = null;
exports.listPolicyDefinitionVersionAllBuiltinsOutput = null;
utilities.lazyLoad(exports, ["listPolicyDefinitionVersionAllBuiltins", "listPolicyDefinitionVersionAllBuiltinsOutput"], () => require("./listPolicyDefinitionVersionAllBuiltins"));
exports.listPolicySetDefinitionVersionAll = null;
exports.listPolicySetDefinitionVersionAllOutput = null;
utilities.lazyLoad(exports, ["listPolicySetDefinitionVersionAll", "listPolicySetDefinitionVersionAllOutput"], () => require("./listPolicySetDefinitionVersionAll"));
exports.listPolicySetDefinitionVersionAllAtManagementGroup = null;
exports.listPolicySetDefinitionVersionAllAtManagementGroupOutput = null;
utilities.lazyLoad(exports, ["listPolicySetDefinitionVersionAllAtManagementGroup", "listPolicySetDefinitionVersionAllAtManagementGroupOutput"], () => require("./listPolicySetDefinitionVersionAllAtManagementGroup"));
exports.listPolicySetDefinitionVersionAllBuiltins = null;
exports.listPolicySetDefinitionVersionAllBuiltinsOutput = null;
utilities.lazyLoad(exports, ["listPolicySetDefinitionVersionAllBuiltins", "listPolicySetDefinitionVersionAllBuiltinsOutput"], () => require("./listPolicySetDefinitionVersionAllBuiltins"));
exports.PolicyAssignment = null;
utilities.lazyLoad(exports, ["PolicyAssignment"], () => require("./policyAssignment"));
exports.PolicyDefinition = null;
utilities.lazyLoad(exports, ["PolicyDefinition"], () => require("./policyDefinition"));
exports.PolicyDefinitionAtManagementGroup = null;
utilities.lazyLoad(exports, ["PolicyDefinitionAtManagementGroup"], () => require("./policyDefinitionAtManagementGroup"));
exports.PolicyDefinitionVersion = null;
utilities.lazyLoad(exports, ["PolicyDefinitionVersion"], () => require("./policyDefinitionVersion"));
exports.PolicyDefinitionVersionAtManagementGroup = null;
utilities.lazyLoad(exports, ["PolicyDefinitionVersionAtManagementGroup"], () => require("./policyDefinitionVersionAtManagementGroup"));
exports.PolicySetDefinition = null;
utilities.lazyLoad(exports, ["PolicySetDefinition"], () => require("./policySetDefinition"));
exports.PolicySetDefinitionAtManagementGroup = null;
utilities.lazyLoad(exports, ["PolicySetDefinitionAtManagementGroup"], () => require("./policySetDefinitionAtManagementGroup"));
exports.PolicySetDefinitionVersion = null;
utilities.lazyLoad(exports, ["PolicySetDefinitionVersion"], () => require("./policySetDefinitionVersion"));
exports.PolicySetDefinitionVersionAtManagementGroup = null;
utilities.lazyLoad(exports, ["PolicySetDefinitionVersionAtManagementGroup"], () => require("./policySetDefinitionVersionAtManagementGroup"));
// Export enums:
__exportStar(require("../../types/enums/authorization/v20230401"), exports);
const _module = {
    version: utilities.getVersion(),
    construct: (name, type, urn) => {
        switch (type) {
            case "azure-native:authorization/v20230401:PolicyAssignment":
                return new exports.PolicyAssignment(name, undefined, { urn });
            case "azure-native:authorization/v20230401:PolicyDefinition":
                return new exports.PolicyDefinition(name, undefined, { urn });
            case "azure-native:authorization/v20230401:PolicyDefinitionAtManagementGroup":
                return new exports.PolicyDefinitionAtManagementGroup(name, undefined, { urn });
            case "azure-native:authorization/v20230401:PolicyDefinitionVersion":
                return new exports.PolicyDefinitionVersion(name, undefined, { urn });
            case "azure-native:authorization/v20230401:PolicyDefinitionVersionAtManagementGroup":
                return new exports.PolicyDefinitionVersionAtManagementGroup(name, undefined, { urn });
            case "azure-native:authorization/v20230401:PolicySetDefinition":
                return new exports.PolicySetDefinition(name, undefined, { urn });
            case "azure-native:authorization/v20230401:PolicySetDefinitionAtManagementGroup":
                return new exports.PolicySetDefinitionAtManagementGroup(name, undefined, { urn });
            case "azure-native:authorization/v20230401:PolicySetDefinitionVersion":
                return new exports.PolicySetDefinitionVersion(name, undefined, { urn });
            case "azure-native:authorization/v20230401:PolicySetDefinitionVersionAtManagementGroup":
                return new exports.PolicySetDefinitionVersionAtManagementGroup(name, undefined, { urn });
            default:
                throw new Error(`unknown resource type ${type}`);
        }
    },
};
pulumi.runtime.registerResourceModule("azure-native", "authorization/v20230401", _module);
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaW5kZXguanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi9hdXRob3JpemF0aW9uL3YyMDIzMDQwMS9pbmRleC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiO0FBQUEsc0VBQXNFO0FBQ3RFLGlGQUFpRjs7Ozs7Ozs7Ozs7Ozs7Ozs7QUFFakYseUNBQXlDO0FBQ3pDLDZDQUE2QztBQUloQyxRQUFBLG1CQUFtQixHQUErRCxJQUFXLENBQUM7QUFDOUYsUUFBQSx5QkFBeUIsR0FBcUUsSUFBVyxDQUFDO0FBQ3ZILFNBQVMsQ0FBQyxRQUFRLENBQUMsT0FBTyxFQUFFLENBQUMscUJBQXFCLEVBQUMsMkJBQTJCLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxPQUFPLENBQUMsdUJBQXVCLENBQUMsQ0FBQyxDQUFDO0FBRzVHLFFBQUEsbUJBQW1CLEdBQStELElBQVcsQ0FBQztBQUM5RixRQUFBLHlCQUF5QixHQUFxRSxJQUFXLENBQUM7QUFDdkgsU0FBUyxDQUFDLFFBQVEsQ0FBQyxPQUFPLEVBQUUsQ0FBQyxxQkFBcUIsRUFBQywyQkFBMkIsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLE9BQU8sQ0FBQyx1QkFBdUIsQ0FBQyxDQUFDLENBQUM7QUFHNUcsUUFBQSxvQ0FBb0MsR0FBaUcsSUFBVyxDQUFDO0FBQ2pKLFFBQUEsMENBQTBDLEdBQXVHLElBQVcsQ0FBQztBQUMxSyxTQUFTLENBQUMsUUFBUSxDQUFDLE9BQU8sRUFBRSxDQUFDLHNDQUFzQyxFQUFDLDRDQUE0QyxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsT0FBTyxDQUFDLHdDQUF3QyxDQUFDLENBQUMsQ0FBQztBQUcvSixRQUFBLDBCQUEwQixHQUE2RSxJQUFXLENBQUM7QUFDbkgsUUFBQSxnQ0FBZ0MsR0FBbUYsSUFBVyxDQUFDO0FBQzVJLFNBQVMsQ0FBQyxRQUFRLENBQUMsT0FBTyxFQUFFLENBQUMsNEJBQTRCLEVBQUMsa0NBQWtDLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FB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