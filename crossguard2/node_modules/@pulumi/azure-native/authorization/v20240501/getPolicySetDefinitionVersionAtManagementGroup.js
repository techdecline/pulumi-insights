"use strict";
// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***
Object.defineProperty(exports, "__esModule", { value: true });
exports.getPolicySetDefinitionVersionAtManagementGroupOutput = exports.getPolicySetDefinitionVersionAtManagementGroup = void 0;
const pulumi = require("@pulumi/pulumi");
const utilities = require("../../utilities");
/**
 * This operation retrieves the policy set definition version in the given management group with the given name and version.
 */
function getPolicySetDefinitionVersionAtManagementGroup(args, opts) {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("azure-native:authorization/v20240501:getPolicySetDefinitionVersionAtManagementGroup", {
        "expand": args.expand,
        "managementGroupName": args.managementGroupName,
        "policyDefinitionVersion": args.policyDefinitionVersion,
        "policySetDefinitionName": args.policySetDefinitionName,
    }, opts);
}
exports.getPolicySetDefinitionVersionAtManagementGroup = getPolicySetDefinitionVersionAtManagementGroup;
/**
 * This operation retrieves the policy set definition version in the given management group with the given name and version.
 */
function getPolicySetDefinitionVersionAtManagementGroupOutput(args, opts) {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invokeOutput("azure-native:authorization/v20240501:getPolicySetDefinitionVersionAtManagementGroup", {
        "expand": args.expand,
        "managementGroupName": args.managementGroupName,
        "policyDefinitionVersion": args.policyDefinitionVersion,
        "policySetDefinitionName": args.policySetDefinitionName,
    }, opts);
}
exports.getPolicySetDefinitionVersionAtManagementGroupOutput = getPolicySetDefinitionVersionAtManagementGroupOutput;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZ2V0UG9saWN5U2V0RGVmaW5pdGlvblZlcnNpb25BdE1hbmFnZW1lbnRHcm91cC5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uL2F1dGhvcml6YXRpb24vdjIwMjQwNTAxL2dldFBvbGljeVNldERlZmluaXRpb25WZXJzaW9uQXRNYW5hZ2VtZW50R3JvdXAudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IjtBQUFBLHNFQUFzRTtBQUN0RSxpRkFBaUY7OztBQUVqRix5Q0FBeUM7QUFJekMsNkNBQTZDO0FBRTdDOztHQUVHO0FBQ0gsU0FBZ0IsOENBQThDLENBQUMsSUFBd0QsRUFBRSxJQUEyQjtJQUNoSixJQUFJLEdBQUcsTUFBTSxDQUFDLFlBQVksQ0FBQyxTQUFTLENBQUMsb0JBQW9CLEVBQUUsRUFBRSxJQUFJLElBQUksRUFBRSxDQUFDLENBQUM7SUFDekUsT0FBTyxNQUFNLENBQUMsT0FBTyxDQUFDLE1BQU0sQ0FBQyxxRkFBcUYsRUFBRTtRQUNoSCxRQUFRLEVBQUUsSUFBSSxDQUFDLE1BQU07UUFDckIscUJBQXFCLEVBQUUsSUFBSSxDQUFDLG1CQUFtQjtRQUMvQyx5QkFBeUIsRUFBRSxJQUFJLENBQUMsdUJBQXVCO1FBQ3ZELHlCQUF5QixFQUFFLElBQUksQ0FBQyx1QkFBdUI7S0FDMUQsRUFBRSxJQUFJLENBQUMsQ0FBQztBQUNiLENBQUM7QUFSRCx3R0FRQztBQTBFRDs7R0FFRztBQUNILFNBQWdCLG9EQUFvRCxDQUFDLElBQThELEVBQUUsSUFBaUM7SUFDbEssSUFBSSxHQUFHLE1BQU0sQ0FBQyxZQUFZLENBQUMsU0FBUyxDQUFDLG9CQUFvQixFQUFFLEVBQUUsSUFBSSxJQUFJLEVBQUUsQ0FBQyxDQUFDO0lBQ3pFLE9BQU8sTUFBTSxDQUFDLE9BQU8sQ0FBQyxZQUFZLENBQUMscUZBQXFGLEVBQUU7UUFDdEgsUUFBUSxFQUFFLElBQUksQ0FBQyxNQUFNO1FBQ3JCLHFCQUFxQixFQUFFLElBQUksQ0FBQyxtQkFBbUI7UUFDL0MseUJBQXlCLEVBQUUsSUFBSSxDQUFDLHVCQUF1QjtRQUN2RCx5QkFBeUIsRUFBRSxJQUFJLENBQUMsdUJBQXVCO0tBQzFELEVBQUUsSUFBSSxDQUFDLENBQUM7QUFDYixDQUFDO0FBUkQsb0hBUUMifQ==