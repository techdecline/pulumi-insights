import * as pulumi from "@pulumi/pulumi";
import * as outputs from "../../types/output";
/**
 * This operation retrieves the policy definition version in the given subscription with the given name.
 */
export declare function getPolicyDefinitionVersion(args: GetPolicyDefinitionVersionArgs, opts?: pulumi.InvokeOptions): Promise<GetPolicyDefinitionVersionResult>;
export interface GetPolicyDefinitionVersionArgs {
    /**
     * The name of the policy definition.
     */
    policyDefinitionName: string;
    /**
     * The policy definition version.  The format is x.y.z where x is the major version number, y is the minor version number, and z is the patch number
     */
    policyDefinitionVersion: string;
}
/**
 * The ID of the policy definition version.
 */
export interface GetPolicyDefinitionVersionResult {
    /**
     * The policy definition description.
     */
    readonly description?: string;
    /**
     * The display name of the policy definition.
     */
    readonly displayName?: string;
    /**
     * The ID of the policy definition version.
     */
    readonly id: string;
    /**
     * The policy definition metadata.  Metadata is an open ended object and is typically a collection of key value pairs.
     */
    readonly metadata?: any;
    /**
     * The policy definition mode. Some examples are All, Indexed, Microsoft.KeyVault.Data.
     */
    readonly mode?: string;
    /**
     * The name of the policy definition version.
     */
    readonly name: string;
    /**
     * The parameter definitions for parameters used in the policy rule. The keys are the parameter names.
     */
    readonly parameters?: {
        [key: string]: outputs.authorization.v20240501.ParameterDefinitionsValueResponse;
    };
    /**
     * The policy rule.
     */
    readonly policyRule?: any;
    /**
     * The type of policy definition. Possible values are NotSpecified, BuiltIn, Custom, and Static.
     */
    readonly policyType?: string;
    /**
     * The system metadata relating to this resource.
     */
    readonly systemData: outputs.authorization.v20240501.SystemDataResponse;
    /**
     * The type of the resource (Microsoft.Authorization/policyDefinitions/versions).
     */
    readonly type: string;
    /**
     * The policy definition version in #.#.# format.
     */
    readonly version?: string;
}
/**
 * This operation retrieves the policy definition version in the given subscription with the given name.
 */
export declare function getPolicyDefinitionVersionOutput(args: GetPolicyDefinitionVersionOutputArgs, opts?: pulumi.InvokeOutputOptions): pulumi.Output<GetPolicyDefinitionVersionResult>;
export interface GetPolicyDefinitionVersionOutputArgs {
    /**
     * The name of the policy definition.
     */
    policyDefinitionName: pulumi.Input<string>;
    /**
     * The policy definition version.  The format is x.y.z where x is the major version number, y is the minor version number, and z is the patch number
     */
    policyDefinitionVersion: pulumi.Input<string>;
}
