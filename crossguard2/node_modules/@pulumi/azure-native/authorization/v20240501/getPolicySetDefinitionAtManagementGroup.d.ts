import * as pulumi from "@pulumi/pulumi";
import * as outputs from "../../types/output";
/**
 * This operation retrieves the policy set definition in the given management group with the given name.
 */
export declare function getPolicySetDefinitionAtManagementGroup(args: GetPolicySetDefinitionAtManagementGroupArgs, opts?: pulumi.InvokeOptions): Promise<GetPolicySetDefinitionAtManagementGroupResult>;
export interface GetPolicySetDefinitionAtManagementGroupArgs {
    /**
     * Comma-separated list of additional properties to be included in the response. Supported values are 'LatestDefinitionVersion, EffectiveDefinitionVersion'.
     */
    expand?: string;
    /**
     * The ID of the management group.
     */
    managementGroupId: string;
    /**
     * The name of the policy set definition to get.
     */
    policySetDefinitionName: string;
}
/**
 * The policy set definition.
 */
export interface GetPolicySetDefinitionAtManagementGroupResult {
    /**
     * The policy set definition description.
     */
    readonly description?: string;
    /**
     * The display name of the policy set definition.
     */
    readonly displayName?: string;
    /**
     * The ID of the policy set definition.
     */
    readonly id: string;
    /**
     * The policy set definition metadata.  Metadata is an open ended object and is typically a collection of key value pairs.
     */
    readonly metadata?: any;
    /**
     * The name of the policy set definition.
     */
    readonly name: string;
    /**
     * The policy set definition parameters that can be used in policy definition references.
     */
    readonly parameters?: {
        [key: string]: outputs.authorization.v20240501.ParameterDefinitionsValueResponse;
    };
    /**
     * The metadata describing groups of policy definition references within the policy set definition.
     */
    readonly policyDefinitionGroups?: outputs.authorization.v20240501.PolicyDefinitionGroupResponse[];
    /**
     * An array of policy definition references.
     */
    readonly policyDefinitions: outputs.authorization.v20240501.PolicyDefinitionReferenceResponse[];
    /**
     * The type of policy set definition. Possible values are NotSpecified, BuiltIn, Custom, and Static.
     */
    readonly policyType?: string;
    /**
     * The system metadata relating to this resource.
     */
    readonly systemData: outputs.authorization.v20240501.SystemDataResponse;
    /**
     * The type of the resource (Microsoft.Authorization/policySetDefinitions).
     */
    readonly type: string;
    /**
     * The policy set definition version in #.#.# format.
     */
    readonly version?: string;
    /**
     * A list of available versions for this policy set definition.
     */
    readonly versions?: string[];
}
/**
 * This operation retrieves the policy set definition in the given management group with the given name.
 */
export declare function getPolicySetDefinitionAtManagementGroupOutput(args: GetPolicySetDefinitionAtManagementGroupOutputArgs, opts?: pulumi.InvokeOutputOptions): pulumi.Output<GetPolicySetDefinitionAtManagementGroupResult>;
export interface GetPolicySetDefinitionAtManagementGroupOutputArgs {
    /**
     * Comma-separated list of additional properties to be included in the response. Supported values are 'LatestDefinitionVersion, EffectiveDefinitionVersion'.
     */
    expand?: pulumi.Input<string>;
    /**
     * The ID of the management group.
     */
    managementGroupId: pulumi.Input<string>;
    /**
     * The name of the policy set definition to get.
     */
    policySetDefinitionName: pulumi.Input<string>;
}
