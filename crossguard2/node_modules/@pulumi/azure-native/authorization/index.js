"use strict";
// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __exportStar = (this && this.__exportStar) || function(m, exports) {
    for (var p in m) if (p !== "default" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.getRoleManagementPolicyAssignmentOutput = exports.getRoleManagementPolicyAssignment = exports.getRoleManagementPolicyOutput = exports.getRoleManagementPolicy = exports.getRoleDefinitionOutput = exports.getRoleDefinition = exports.getRoleAssignmentOutput = exports.getRoleAssignment = exports.getResourceManagementPrivateLinkOutput = exports.getResourceManagementPrivateLink = exports.getPrivateLinkAssociationOutput = exports.getPrivateLinkAssociation = exports.getPolicySetDefinitionVersionAtManagementGroupOutput = exports.getPolicySetDefinitionVersionAtManagementGroup = exports.getPolicySetDefinitionVersionOutput = exports.getPolicySetDefinitionVersion = exports.getPolicySetDefinitionAtManagementGroupOutput = exports.getPolicySetDefinitionAtManagementGroup = exports.getPolicySetDefinitionOutput = exports.getPolicySetDefinition = exports.getPolicyExemptionOutput = exports.getPolicyExemption = exports.getPolicyDefinitionVersionAtManagementGroupOutput = exports.getPolicyDefinitionVersionAtManagementGroup = exports.getPolicyDefinitionVersionOutput = exports.getPolicyDefinitionVersion = exports.getPolicyDefinitionAtManagementGroupOutput = exports.getPolicyDefinitionAtManagementGroup = exports.getPolicyDefinitionOutput = exports.getPolicyDefinition = exports.getPolicyAssignmentOutput = exports.getPolicyAssignment = exports.getManagementLockByScopeOutput = exports.getManagementLockByScope = exports.getManagementLockAtSubscriptionLevelOutput = exports.getManagementLockAtSubscriptionLevel = exports.getManagementLockAtResourceLevelOutput = exports.getManagementLockAtResourceLevel = exports.getManagementLockAtResourceGroupLevelOutput = exports.getManagementLockAtResourceGroupLevel = exports.getClientTokenOutput = exports.getClientToken = exports.getClientConfigOutput = exports.getClientConfig = exports.getAccessReviewScheduleDefinitionByIdOutput = exports.getAccessReviewScheduleDefinitionById = exports.getAccessReviewHistoryDefinitionByIdOutput = exports.getAccessReviewHistoryDefinitionById = exports.AccessReviewScheduleDefinitionById = exports.AccessReviewHistoryDefinitionById = void 0;
exports.VariableValueAtManagementGroup = exports.VariableValue = exports.VariableAtManagementGroup = exports.Variable = exports.ScopeAccessReviewScheduleDefinitionById = exports.ScopeAccessReviewHistoryDefinitionById = exports.RoleManagementPolicyAssignment = exports.RoleManagementPolicy = exports.RoleDefinition = exports.RoleAssignment = exports.ResourceManagementPrivateLink = exports.PrivateLinkAssociation = exports.PolicySetDefinitionVersionAtManagementGroup = exports.PolicySetDefinitionVersion = exports.PolicySetDefinitionAtManagementGroup = exports.PolicySetDefinition = exports.PolicyExemption = exports.PolicyDefinitionVersionAtManagementGroup = exports.PolicyDefinitionVersion = exports.PolicyDefinitionAtManagementGroup = exports.PolicyDefinition = exports.PolicyAssignment = exports.ManagementLockByScope = exports.ManagementLockAtSubscriptionLevel = exports.ManagementLockAtResourceLevel = exports.ManagementLockAtResourceGroupLevel = exports.listPolicySetDefinitionVersionAllBuiltinsOutput = exports.listPolicySetDefinitionVersionAllBuiltins = exports.listPolicySetDefinitionVersionAllAtManagementGroupOutput = exports.listPolicySetDefinitionVersionAllAtManagementGroup = exports.listPolicySetDefinitionVersionAllOutput = exports.listPolicySetDefinitionVersionAll = exports.listPolicyDefinitionVersionAllBuiltinsOutput = exports.listPolicyDefinitionVersionAllBuiltins = exports.listPolicyDefinitionVersionAllAtManagementGroupOutput = exports.listPolicyDefinitionVersionAllAtManagementGroup = exports.listPolicyDefinitionVersionAllOutput = exports.listPolicyDefinitionVersionAll = exports.getVariableValueAtManagementGroupOutput = exports.getVariableValueAtManagementGroup = exports.getVariableValueOutput = exports.getVariableValue = exports.getVariableAtManagementGroupOutput = exports.getVariableAtManagementGroup = exports.getVariableOutput = exports.getVariable = exports.getScopeAccessReviewScheduleDefinitionByIdOutput = exports.getScopeAccessReviewScheduleDefinitionById = exports.getScopeAccessReviewHistoryDefinitionByIdOutput = exports.getScopeAccessReviewHistoryDefinitionById = void 0;
exports.v20250101 = exports.v20240901preview = exports.v20240501 = exports.v20240401 = exports.v20240201preview = exports.v20230401 = exports.v20220801preview = exports.v20220701preview = exports.v20220601 = exports.v20220501preview = exports.v20220401 = exports.v20211201preview = exports.v20210601 = exports.v20201001preview = exports.v20201001 = exports.v20200501 = exports.v20200401preview = exports.v20200301preview = exports.v20200301 = exports.v20190601 = exports.v20180501 = exports.v20171001preview = void 0;
const pulumi = require("@pulumi/pulumi");
const utilities = require("../utilities");
exports.AccessReviewHistoryDefinitionById = null;
utilities.lazyLoad(exports, ["AccessReviewHistoryDefinitionById"], () => require("./accessReviewHistoryDefinitionById"));
exports.AccessReviewScheduleDefinitionById = null;
utilities.lazyLoad(exports, ["AccessReviewScheduleDefinitionById"], () => require("./accessReviewScheduleDefinitionById"));
exports.getAccessReviewHistoryDefinitionById = null;
exports.getAccessReviewHistoryDefinitionByIdOutput = null;
utilities.lazyLoad(exports, ["getAccessReviewHistoryDefinitionById", "getAccessReviewHistoryDefinitionByIdOutput"], () => require("./getAccessReviewHistoryDefinitionById"));
exports.getAccessReviewScheduleDefinitionById = null;
exports.getAccessReviewScheduleDefinitionByIdOutput = null;
utilities.lazyLoad(exports, ["getAccessReviewScheduleDefinitionById", "getAccessReviewScheduleDefinitionByIdOutput"], () => require("./getAccessReviewScheduleDefinitionById"));
exports.getClientConfig = null;
exports.getClientConfigOutput = null;
utilities.lazyLoad(exports, ["getClientConfig", "getClientConfigOutput"], () => require("./getClientConfig"));
exports.getClientToken = null;
exports.getClientTokenOutput = null;
utilities.lazyLoad(exports, ["getClientToken", "getClientTokenOutput"], () => require("./getClientToken"));
exports.getManagementLockAtResourceGroupLevel = null;
exports.getManagementLockAtResourceGroupLevelOutput = null;
utilities.lazyLoad(exports, ["getManagementLockAtResourceGroupLevel", "getManagementLockAtResourceGroupLevelOutput"], () => require("./getManagementLockAtResourceGroupLevel"));
exports.getManagementLockAtResourceLevel = null;
exports.getManagementLockAtResourceLevelOutput = null;
utilities.lazyLoad(exports, ["getManagementLockAtResourceLevel", "getManagementLockAtResourceLevelOutput"], () => require("./getManagementLockAtResourceLevel"));
exports.getManagementLockAtSubscriptionLevel = null;
exports.getManagementLockAtSubscriptionLevelOutput = null;
utilities.lazyLoad(exports, ["getManagementLockAtSubscriptionLevel", "getManagementLockAtSubscriptionLevelOutput"], () => require("./getManagementLockAtSubscriptionLevel"));
exports.getManagementLockByScope = null;
exports.getManagementLockByScopeOutput = null;
utilities.lazyLoad(exports, ["getManagementLockByScope", "getManagementLockByScopeOutput"], () => require("./getManagementLockByScope"));
exports.getPolicyAssignment = null;
exports.getPolicyAssignmentOutput = null;
utilities.lazyLoad(exports, ["getPolicyAssignment", "getPolicyAssignmentOutput"], () => require("./getPolicyAssignment"));
exports.getPolicyDefinition = null;
exports.getPolicyDefinitionOutput = null;
utilities.lazyLoad(exports, ["getPolicyDefinition", "getPolicyDefinitionOutput"], () => require("./getPolicyDefinition"));
exports.getPolicyDefinitionAtManagementGroup = null;
exports.getPolicyDefinitionAtManagementGroupOutput = null;
utilities.lazyLoad(exports, ["getPolicyDefinitionAtManagementGroup", "getPolicyDefinitionAtManagementGroupOutput"], () => require("./getPolicyDefinitionAtManagementGroup"));
exports.getPolicyDefinitionVersion = null;
exports.getPolicyDefinitionVersionOutput = null;
utilities.lazyLoad(exports, ["getPolicyDefinitionVersion", "getPolicyDefinitionVersionOutput"], () => require("./getPolicyDefinitionVersion"));
exports.getPolicyDefinitionVersionAtManagementGroup = null;
exports.getPolicyDefinitionVersionAtManagementGroupOutput = null;
utilities.lazyLoad(exports, ["getPolicyDefinitionVersionAtManagementGroup", "getPolicyDefinitionVersionAtManagementGroupOutput"], () => require("./getPolicyDefinitionVersionAtManagementGroup"));
exports.getPolicyExemption = null;
exports.getPolicyExemptionOutput = null;
utilities.lazyLoad(exports, ["getPolicyExemption", "getPolicyExemptionOutput"], () => require("./getPolicyExemption"));
exports.getPolicySetDefinition = null;
exports.getPolicySetDefinitionOutput = null;
utilities.lazyLoad(exports, ["getPolicySetDefinition", "getPolicySetDefinitionOutput"], () => require("./getPolicySetDefinition"));
exports.getPolicySetDefinitionAtManagementGroup = null;
exports.getPolicySetDefinitionAtManagementGroupOutput = null;
utilities.lazyLoad(exports, ["getPolicySetDefinitionAtManagementGroup", "getPolicySetDefinitionAtManagementGroupOutput"], () => require("./getPolicySetDefinitionAtManagementGroup"));
exports.getPolicySetDefinitionVersion = null;
exports.getPolicySetDefinitionVersionOutput = null;
utilities.lazyLoad(exports, ["getPolicySetDefinitionVersion", "getPolicySetDefinitionVersionOutput"], () => require("./getPolicySetDefinitionVersion"));
exports.getPolicySetDefinitionVersionAtManagementGroup = null;
exports.getPolicySetDefinitionVersionAtManagementGroupOutput = null;
utilities.lazyLoad(exports, ["getPolicySetDefinitionVersionAtManagementGroup", "getPolicySetDefinitionVersionAtManagementGroupOutput"], () => require("./getPolicySetDefinitionVersionAtManagementGroup"));
exports.getPrivateLinkAssociation = null;
exports.getPrivateLinkAssociationOutput = null;
utilities.lazyLoad(exports, ["getPrivateLinkAssociation", "getPrivateLinkAssociationOutput"], () => require("./getPrivateLinkAssociation"));
exports.getResourceManagementPrivateLink = null;
exports.getResourceManagementPrivateLinkOutput = null;
utilities.lazyLoad(exports, ["getResourceManagementPrivateLink", "getResourceManagementPrivateLinkOutput"], () => require("./getResourceManagementPrivateLink"));
exports.getRoleAssignment = null;
exports.getRoleAssignmentOutput = null;
utilities.lazyLoad(exports, ["getRoleAssignment", "getRoleAssignmentOutput"], () => require("./getRoleAssignment"));
exports.getRoleDefinition = null;
exports.getRoleDefinitionOutput = null;
utilities.lazyLoad(exports, ["getRoleDefinition", "getRoleDefinitionOutput"], () => require("./getRoleDefinition"));
exports.getRoleManagementPolicy = null;
exports.getRoleManagementPolicyOutput = null;
utilities.lazyLoad(exports, ["getRoleManagementPolicy", "getRoleManagementPolicyOutput"], () => require("./getRoleManagementPolicy"));
exports.getRoleManagementPolicyAssignment = null;
exports.getRoleManagementPolicyAssignmentOutput = null;
utilities.lazyLoad(exports, ["getRoleManagementPolicyAssignment", "getRoleManagementPolicyAssignmentOutput"], () => require("./getRoleManagementPolicyAssignment"));
exports.getScopeAccessReviewHistoryDefinitionById = null;
exports.getScopeAccessReviewHistoryDefinitionByIdOutput = null;
utilities.lazyLoad(exports, ["getScopeAccessReviewHistoryDefinitionById", "getScopeAccessReviewHistoryDefinitionByIdOutput"], () => require("./getScopeAccessReviewHistoryDefinitionById"));
exports.getScopeAccessReviewScheduleDefinitionById = null;
exports.getScopeAccessReviewScheduleDefinitionByIdOutput = null;
utilities.lazyLoad(exports, ["getScopeAccessReviewScheduleDefinitionById", "getScopeAccessReviewScheduleDefinitionByIdOutput"], () => require("./getScopeAccessReviewScheduleDefinitionById"));
exports.getVariable = null;
exports.getVariableOutput = null;
utilities.lazyLoad(exports, ["getVariable", "getVariableOutput"], () => require("./getVariable"));
exports.getVariableAtManagementGroup = null;
exports.getVariableAtManagementGroupOutput = null;
utilities.lazyLoad(exports, ["getVariableAtManagementGroup", "getVariableAtManagementGroupOutput"], () => require("./getVariableAtManagementGroup"));
exports.getVariableValue = null;
exports.getVariableValueOutput = null;
utilities.lazyLoad(exports, ["getVariableValue", "getVariableValueOutput"], () => require("./getVariableValue"));
exports.getVariableValueAtManagementGroup = null;
exports.getVariableValueAtManagementGroupOutput = null;
utilities.lazyLoad(exports, ["getVariableValueAtManagementGroup", "getVariableValueAtManagementGroupOutput"], () => require("./getVariableValueAtManagementGroup"));
exports.listPolicyDefinitionVersionAll = null;
exports.listPolicyDefinitionVersionAllOutput = null;
utilities.lazyLoad(exports, ["listPolicyDefinitionVersionAll", "listPolicyDefinitionVersionAllOutput"], () => require("./listPolicyDefinitionVersionAll"));
exports.listPolicyDefinitionVersionAllAtManagementGroup = null;
exports.listPolicyDefinitionVersionAllAtManagementGroupOutput = null;
utilities.lazyLoad(exports, ["listPolicyDefinitionVersionAllAtManagementGroup", "listPolicyDefinitionVersionAllAtManagementGroupOutput"], () => require("./listPolicyDefinitionVersionAllAtManagementGroup"));
exports.listPolicyDefinitionVersionAllBuiltins = null;
exports.listPolicyDefinitionVersionAllBuiltinsOutput = null;
utilities.lazyLoad(exports, ["listPolicyDefinitionVersionAllBuiltins", "listPolicyDefinitionVersionAllBuiltinsOutput"], () => require("./listPolicyDefinitionVersionAllBuiltins"));
exports.listPolicySetDefinitionVersionAll = null;
exports.listPolicySetDefinitionVersionAllOutput = null;
utilities.lazyLoad(exports, ["listPolicySetDefinitionVersionAll", "listPolicySetDefinitionVersionAllOutput"], () => require("./listPolicySetDefinitionVersionAll"));
exports.listPolicySetDefinitionVersionAllAtManagementGroup = null;
exports.listPolicySetDefinitionVersionAllAtManagementGroupOutput = null;
utilities.lazyLoad(exports, ["listPolicySetDefinitionVersionAllAtManagementGroup", "listPolicySetDefinitionVersionAllAtManagementGroupOutput"], () => require("./listPolicySetDefinitionVersionAllAtManagementGroup"));
exports.listPolicySetDefinitionVersionAllBuiltins = null;
exports.listPolicySetDefinitionVersionAllBuiltinsOutput = null;
utilities.lazyLoad(exports, ["listPolicySetDefinitionVersionAllBuiltins", "listPolicySetDefinitionVersionAllBuiltinsOutput"], () => require("./listPolicySetDefinitionVersionAllBuiltins"));
exports.ManagementLockAtResourceGroupLevel = null;
utilities.lazyLoad(exports, ["ManagementLockAtResourceGroupLevel"], () => require("./managementLockAtResourceGroupLevel"));
exports.ManagementLockAtResourceLevel = null;
utilities.lazyLoad(exports, ["ManagementLockAtResourceLevel"], () => require("./managementLockAtResourceLevel"));
exports.ManagementLockAtSubscriptionLevel = null;
utilities.lazyLoad(exports, ["ManagementLockAtSubscriptionLevel"], () => require("./managementLockAtSubscriptionLevel"));
exports.ManagementLockByScope = null;
utilities.lazyLoad(exports, ["ManagementLockByScope"], () => require("./managementLockByScope"));
exports.PolicyAssignment = null;
utilities.lazyLoad(exports, ["PolicyAssignment"], () => require("./policyAssignment"));
exports.PolicyDefinition = null;
utilities.lazyLoad(exports, ["PolicyDefinition"], () => require("./policyDefinition"));
exports.PolicyDefinitionAtManagementGroup = null;
utilities.lazyLoad(exports, ["PolicyDefinitionAtManagementGroup"], () => require("./policyDefinitionAtManagementGroup"));
exports.PolicyDefinitionVersion = null;
utilities.lazyLoad(exports, ["PolicyDefinitionVersion"], () => require("./policyDefinitionVersion"));
exports.PolicyDefinitionVersionAtManagementGroup = null;
utilities.lazyLoad(exports, ["PolicyDefinitionVersionAtManagementGroup"], () => require("./policyDefinitionVersionAtManagementGroup"));
exports.PolicyExemption = null;
utilities.lazyLoad(exports, ["PolicyExemption"], () => require("./policyExemption"));
exports.PolicySetDefinition = null;
utilities.lazyLoad(exports, ["PolicySetDefinition"], () => require("./policySetDefinition"));
exports.PolicySetDefinitionAtManagementGroup = null;
utilities.lazyLoad(exports, ["PolicySetDefinitionAtManagementGroup"], () => require("./policySetDefinitionAtManagementGroup"));
exports.PolicySetDefinitionVersion = null;
utilities.lazyLoad(exports, ["PolicySetDefinitionVersion"], () => require("./policySetDefinitionVersion"));
exports.PolicySetDefinitionVersionAtManagementGroup = null;
utilities.lazyLoad(exports, ["PolicySetDefinitionVersionAtManagementGroup"], () => require("./policySetDefinitionVersionAtManagementGroup"));
exports.PrivateLinkAssociation = null;
utilities.lazyLoad(exports, ["PrivateLinkAssociation"], () => require("./privateLinkAssociation"));
exports.ResourceManagementPrivateLink = null;
utilities.lazyLoad(exports, ["ResourceManagementPrivateLink"], () => require("./resourceManagementPrivateLink"));
exports.RoleAssignment = null;
utilities.lazyLoad(exports, ["RoleAssignment"], () => require("./roleAssignment"));
exports.RoleDefinition = null;
utilities.lazyLoad(exports, ["RoleDefinition"], () => require("./roleDefinition"));
exports.RoleManagementPolicy = null;
utilities.lazyLoad(exports, ["RoleManagementPolicy"], () => require("./roleManagementPolicy"));
exports.RoleManagementPolicyAssignment = null;
utilities.lazyLoad(exports, ["RoleManagementPolicyAssignment"], () => require("./roleManagementPolicyAssignment"));
exports.ScopeAccessReviewHistoryDefinitionById = null;
utilities.lazyLoad(exports, ["ScopeAccessReviewHistoryDefinitionById"], () => require("./scopeAccessReviewHistoryDefinitionById"));
exports.ScopeAccessReviewScheduleDefinitionById = null;
utilities.lazyLoad(exports, ["ScopeAccessReviewScheduleDefinitionById"], () => require("./scopeAccessReviewScheduleDefinitionById"));
exports.Variable = null;
utilities.lazyLoad(exports, ["Variable"], () => require("./variable"));
exports.VariableAtManagementGroup = null;
utilities.lazyLoad(exports, ["VariableAtManagementGroup"], () => require("./variableAtManagementGroup"));
exports.VariableValue = null;
utilities.lazyLoad(exports, ["VariableValue"], () => require("./variableValue"));
exports.VariableValueAtManagementGroup = null;
utilities.lazyLoad(exports, ["VariableValueAtManagementGroup"], () => require("./variableValueAtManagementGroup"));
// Export enums:
__exportStar(require("../types/enums/authorization"), exports);
// Export sub-modules:
const v20171001preview = require("./v20171001preview");
exports.v20171001preview = v20171001preview;
const v20180501 = require("./v20180501");
exports.v20180501 = v20180501;
const v20190601 = require("./v20190601");
exports.v20190601 = v20190601;
const v20200301 = require("./v20200301");
exports.v20200301 = v20200301;
const v20200301preview = require("./v20200301preview");
exports.v20200301preview = v20200301preview;
const v20200401preview = require("./v20200401preview");
exports.v20200401preview = v20200401preview;
const v20200501 = require("./v20200501");
exports.v20200501 = v20200501;
const v20201001 = require("./v20201001");
exports.v20201001 = v20201001;
const v20201001preview = require("./v20201001preview");
exports.v20201001preview = v20201001preview;
const v20210601 = require("./v20210601");
exports.v20210601 = v20210601;
const v20211201preview = require("./v20211201preview");
exports.v20211201preview = v20211201preview;
const v20220401 = require("./v20220401");
exports.v20220401 = v20220401;
const v20220501preview = require("./v20220501preview");
exports.v20220501preview = v20220501preview;
const v20220601 = require("./v20220601");
exports.v20220601 = v20220601;
const v20220701preview = require("./v20220701preview");
exports.v20220701preview = v20220701preview;
const v20220801preview = require("./v20220801preview");
exports.v20220801preview = v20220801preview;
const v20230401 = require("./v20230401");
exports.v20230401 = v20230401;
const v20240201preview = require("./v20240201preview");
exports.v20240201preview = v20240201preview;
const v20240401 = require("./v20240401");
exports.v20240401 = v20240401;
const v20240501 = require("./v20240501");
exports.v20240501 = v20240501;
const v20240901preview = require("./v20240901preview");
exports.v20240901preview = v20240901preview;
const v20250101 = require("./v20250101");
exports.v20250101 = v20250101;
const _module = {
    version: utilities.getVersion(),
    construct: (name, type, urn) => {
        switch (type) {
            case "azure-native:authorization:AccessReviewHistoryDefinitionById":
                return new exports.AccessReviewHistoryDefinitionById(name, undefined, { urn });
            case "azure-native:authorization:AccessReviewScheduleDefinitionById":
                return new exports.AccessReviewScheduleDefinitionById(name, undefined, { urn });
            case "azure-native:authorization:ManagementLockAtResourceGroupLevel":
                return new exports.ManagementLockAtResourceGroupLevel(name, undefined, { urn });
            case "azure-native:authorization:ManagementLockAtResourceLevel":
                return new exports.ManagementLockAtResourceLevel(name, undefined, { urn });
            case "azure-native:authorization:ManagementLockAtSubscriptionLevel":
                return new exports.ManagementLockAtSubscriptionLevel(name, undefined, { urn });
            case "azure-native:authorization:ManagementLockByScope":
                return new exports.ManagementLockByScope(name, undefined, { urn });
            case "azure-native:authorization:PolicyAssignment":
                return new exports.PolicyAssignment(name, undefined, { urn });
            case "azure-native:authorization:PolicyDefinition":
                return new exports.PolicyDefinition(name, undefined, { urn });
            case "azure-native:authorization:PolicyDefinitionAtManagementGroup":
                return new exports.PolicyDefinitionAtManagementGroup(name, undefined, { urn });
            case "azure-native:authorization:PolicyDefinitionVersion":
                return new exports.PolicyDefinitionVersion(name, undefined, { urn });
            case "azure-native:authorization:PolicyDefinitionVersionAtManagementGroup":
                return new exports.PolicyDefinitionVersionAtManagementGroup(name, undefined, { urn });
            case "azure-native:authorization:PolicyExemption":
                return new exports.PolicyExemption(name, undefined, { urn });
            case "azure-native:authorization:PolicySetDefinition":
                return new exports.PolicySetDefinition(name, undefined, { urn });
            case "azure-native:authorization:PolicySetDefinitionAtManagementGroup":
                return new exports.PolicySetDefinitionAtManagementGroup(name, undefined, { urn });
            case "azure-native:authorization:PolicySetDefinitionVersion":
                return new exports.PolicySetDefinitionVersion(name, undefined, { urn });
            case "azure-native:authorization:PolicySetDefinitionVersionAtManagementGroup":
                return new exports.PolicySetDefinitionVersionAtManagementGroup(name, undefined, { urn });
            case "azure-native:authorization:PrivateLinkAssociation":
                return new exports.PrivateLinkAssociation(name, undefined, { urn });
            case "azure-native:authorization:ResourceManagementPrivateLink":
                return new exports.ResourceManagementPrivateLink(name, undefined, { urn });
            case "azure-native:authorization:RoleAssignment":
                return new exports.RoleAssignment(name, undefined, { urn });
            case "azure-native:authorization:RoleDefinition":
                return new exports.RoleDefinition(name, undefined, { urn });
            case "azure-native:authorization:RoleManagementPolicy":
                return new exports.RoleManagementPolicy(name, undefined, { urn });
            case "azure-native:authorization:RoleManagementPolicyAssignment":
                return new exports.RoleManagementPolicyAssignment(name, undefined, { urn });
            case "azure-native:authorization:ScopeAccessReviewHistoryDefinitionById":
                return new exports.ScopeAccessReviewHistoryDefinitionById(name, undefined, { urn });
            case "azure-native:authorization:ScopeAccessReviewScheduleDefinitionById":
                return new exports.ScopeAccessReviewScheduleDefinitionById(name, undefined, { urn });
            case "azure-native:authorization:Variable":
                return new exports.Variable(name, undefined, { urn });
            case "azure-native:authorization:VariableAtManagementGroup":
                return new exports.VariableAtManagementGroup(name, undefined, { urn });
            case "azure-native:authorization:VariableValue":
                return new exports.VariableValue(name, undefined, { urn });
            case "azure-native:authorization:VariableValueAtManagementGroup":
                return new exports.VariableValueAtManagementGroup(name, undefined, { urn });
            default:
                throw new Error(`unknown resource type ${type}`);
        }
    },
};
pulumi.runtime.registerResourceModule("azure-native", "authorization", _module);
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaW5kZXguanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi9hdXRob3JpemF0aW9uL2luZGV4LnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7QUFBQSxzRUFBc0U7QUFDdEUsaUZBQWlGOzs7Ozs7Ozs7Ozs7Ozs7Ozs7O0FBRWpGLHlDQUF5QztBQUN6QywwQ0FBMEM7QUFLN0IsUUFBQSxpQ0FBaUMsR0FBMkYsSUFBVyxDQUFDO0FBQ3JKLFNBQVMsQ0FBQyxRQUFRLENBQUMsT0FBTyxFQUFFLENBQUMsbUNBQW1DLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxPQUFPLENBQUMscUNBQXFDLENBQUMsQ0FBQyxDQUFDO0FBSTVHLFFBQUEsa0NBQWtDLEdBQTZGLElBQVcsQ0FBQztBQUN4SixTQUFTLENBQUMsUUFBUSxDQUFDLE9BQU8sRUFBRSxDQUFDLG9DQUFvQyxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsT0FBTyxDQUFDLHNDQUFzQyxDQUFDLENBQUMsQ0FBQztBQUc5RyxRQUFBLG9DQUFvQyxHQUFpRyxJQUFXLENBQUM7QUFDakosUUFBQSwwQ0FBMEMsR0FBdUcsSUFBVyxDQUFDO0FBQzFLLFNBQVMsQ0FBQyxRQUFRLENBQUMsT0FBTyxFQUFFLENBQUMsc0NBQXNDLEVBQUMsNENBQTRDLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxPQUFPLENBQUMsd0NBQXdDLENBQUMsQ0FBQyxDQUFDO0FBRy9KLFFBQUEscUNBQXFDLEdBQW1HLElBQVcsQ0FBQztBQUNwSixRQUFBLDJDQUEyQyxHQUF5RyxJQUFXLENBQUM7QUFDN0ssU0FBUyxDQUFDLFFBQVEsQ0FBQyxPQUFPLEVBQUUsQ0FBQyx1Q0FBdUMsRUFBQyw2Q0FBNkMsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLE9BQU8sQ0FBQyx5Q0FBeUMsQ0FBQyxDQUFDLENBQUM7QUFHbEssUUFBQSxlQUFlLEdBQXVELElBQVcsQ0FBQztBQUNsRixRQUFBLHFCQUFxQixHQUE2RCxJQUFXLENBQUM7QUFD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