"use strict";
// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***
Object.defineProperty(exports, "__esModule", { value: true });
exports.getManagementLockAtResourceLevelOutput = exports.getManagementLockAtResourceLevel = void 0;
const pulumi = require("@pulumi/pulumi");
const utilities = require("../utilities");
/**
 * Get the management lock of a resource or any level below resource.
 * Azure REST API version: 2020-05-01.
 */
function getManagementLockAtResourceLevel(args, opts) {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("azure-native:authorization:getManagementLockAtResourceLevel", {
        "lockName": args.lockName,
        "parentResourcePath": args.parentResourcePath,
        "resourceGroupName": args.resourceGroupName,
        "resourceName": args.resourceName,
        "resourceProviderNamespace": args.resourceProviderNamespace,
        "resourceType": args.resourceType,
    }, opts);
}
exports.getManagementLockAtResourceLevel = getManagementLockAtResourceLevel;
/**
 * Get the management lock of a resource or any level below resource.
 * Azure REST API version: 2020-05-01.
 */
function getManagementLockAtResourceLevelOutput(args, opts) {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invokeOutput("azure-native:authorization:getManagementLockAtResourceLevel", {
        "lockName": args.lockName,
        "parentResourcePath": args.parentResourcePath,
        "resourceGroupName": args.resourceGroupName,
        "resourceName": args.resourceName,
        "resourceProviderNamespace": args.resourceProviderNamespace,
        "resourceType": args.resourceType,
    }, opts);
}
exports.getManagementLockAtResourceLevelOutput = getManagementLockAtResourceLevelOutput;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZ2V0TWFuYWdlbWVudExvY2tBdFJlc291cmNlTGV2ZWwuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi9hdXRob3JpemF0aW9uL2dldE1hbmFnZW1lbnRMb2NrQXRSZXNvdXJjZUxldmVsLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7QUFBQSxzRUFBc0U7QUFDdEUsaUZBQWlGOzs7QUFFakYseUNBQXlDO0FBSXpDLDBDQUEwQztBQUUxQzs7O0dBR0c7QUFDSCxTQUFnQixnQ0FBZ0MsQ0FBQyxJQUEwQyxFQUFFLElBQTJCO0lBQ3BILElBQUksR0FBRyxNQUFNLENBQUMsWUFBWSxDQUFDLFNBQVMsQ0FBQyxvQkFBb0IsRUFBRSxFQUFFLElBQUksSUFBSSxFQUFFLENBQUMsQ0FBQztJQUN6RSxPQUFPLE1BQU0sQ0FBQyxPQUFPLENBQUMsTUFBTSxDQUFDLDZEQUE2RCxFQUFFO1FBQ3hGLFVBQVUsRUFBRSxJQUFJLENBQUMsUUFBUTtRQUN6QixvQkFBb0IsRUFBRSxJQUFJLENBQUMsa0JBQWtCO1FBQzdDLG1CQUFtQixFQUFFLElBQUksQ0FBQyxpQkFBaUI7UUFDM0MsY0FBYyxFQUFFLElBQUksQ0FBQyxZQUFZO1FBQ2pDLDJCQUEyQixFQUFFLElBQUksQ0FBQyx5QkFBeUI7UUFDM0QsY0FBYyxFQUFFLElBQUksQ0FBQyxZQUFZO0tBQ3BDLEVBQUUsSUFBSSxDQUFDLENBQUM7QUFDYixDQUFDO0FBVkQsNEVBVUM7QUE4REQ7OztHQUdHO0FBQ0gsU0FBZ0Isc0NBQXNDLENBQUMsSUFBZ0QsRUFBRSxJQUFpQztJQUN0SSxJQUFJLEdBQUcsTUFBTSxDQUFDLFlBQVksQ0FBQyxTQUFTLENBQUMsb0JBQW9CLEVBQUUsRUFBRSxJQUFJLElBQUksRUFBRSxDQUFDLENBQUM7SUFDekUsT0FBTyxNQUFNLENBQUMsT0FBTyxDQUFDLFlBQVksQ0FBQyw2REFBNkQsRUFBRTtRQUM5RixVQUFVLEVBQUUsSUFBSSxDQUFDLFFBQVE7UUFDekIsb0JBQW9CLEVBQUUsSUFBSSxDQUFDLGtCQUFrQjtRQUM3QyxtQkFBbUIsRUFBRSxJQUFJLENBQUMsaUJBQWlCO1FBQzNDLGNBQWMsRUFBRSxJQUFJLENBQUMsWUFBWTtRQUNqQywyQkFBMkIsRUFBRSxJQUFJLENBQUMseUJBQXlCO1FBQzNELGNBQWMsRUFBRSxJQUFJLENBQUMsWUFBWTtLQUNwQyxFQUFFLElBQUksQ0FBQyxDQUFDO0FBQ2IsQ0FBQztBQVZELHdGQVVDIn0=