import * as pulumi from "@pulumi/pulumi";
/**
 * Role Assignments
 */
export declare class RoleAssignment extends pulumi.CustomResource {
    /**
     * Get an existing RoleAssignment resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    static get(name: string, id: pulumi.Input<pulumi.ID>, opts?: pulumi.CustomResourceOptions): RoleAssignment;
    /**
     * Returns true if the given object is an instance of RoleAssignment.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    static isInstance(obj: any): obj is RoleAssignment;
    /**
     * The Delegation flag for the role assignment
     */
    readonly canDelegate: pulumi.Output<boolean | undefined>;
    /**
     * The role assignment name.
     */
    readonly name: pulumi.Output<string>;
    /**
     * The principal ID.
     */
    readonly principalId: pulumi.Output<string | undefined>;
    /**
     * The role definition ID.
     */
    readonly roleDefinitionId: pulumi.Output<string | undefined>;
    /**
     * The role assignment scope.
     */
    readonly scope: pulumi.Output<string | undefined>;
    /**
     * The role assignment type.
     */
    readonly type: pulumi.Output<string>;
    /**
     * Create a RoleAssignment resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: RoleAssignmentArgs, opts?: pulumi.CustomResourceOptions);
}
/**
 * The set of arguments for constructing a RoleAssignment resource.
 */
export interface RoleAssignmentArgs {
    /**
     * The delegation flag used for creating a role assignment
     */
    canDelegate?: pulumi.Input<boolean>;
    /**
     * The principal ID assigned to the role. This maps to the ID inside the Active Directory. It can point to a user, service principal, or security group.
     */
    principalId?: pulumi.Input<string>;
    /**
     * A GUID for the role assignment to create. The name must be unique and different for each role assignment.
     */
    roleAssignmentName?: pulumi.Input<string>;
    /**
     * The role definition ID used in the role assignment.
     */
    roleDefinitionId?: pulumi.Input<string>;
    /**
     * The scope of the role assignment to create. The scope can be any REST resource instance. For example, use '/subscriptions/{subscription-id}/' for a subscription, '/subscriptions/{subscription-id}/resourceGroups/{resource-group-name}' for a resource group, and '/subscriptions/{subscription-id}/resourceGroups/{resource-group-name}/providers/{resource-provider}/{resource-type}/{resource-name}' for a resource.
     */
    scope: pulumi.Input<string>;
}
