import * as pulumi from "@pulumi/pulumi";
import * as outputs from "../../types/output";
/**
 * This operation retrieves a single variable value; given its name,  management group it was created at and the variable it's created for.
 */
export declare function getVariableValueAtManagementGroup(args: GetVariableValueAtManagementGroupArgs, opts?: pulumi.InvokeOptions): Promise<GetVariableValueAtManagementGroupResult>;
export interface GetVariableValueAtManagementGroupArgs {
    /**
     * The ID of the management group.
     */
    managementGroupId: string;
    /**
     * The name of the variable to operate on.
     */
    variableName: string;
    /**
     * The name of the variable value to operate on.
     */
    variableValueName: string;
}
/**
 * The variable value.
 */
export interface GetVariableValueAtManagementGroupResult {
    /**
     * The ID of the variable.
     */
    readonly id: string;
    /**
     * The name of the variable.
     */
    readonly name: string;
    /**
     * Azure Resource Manager metadata containing createdBy and modifiedBy information.
     */
    readonly systemData: outputs.authorization.v20220801preview.SystemDataResponse;
    /**
     * The type of the resource (Microsoft.Authorization/variables/values).
     */
    readonly type: string;
    /**
     * Variable value column value array.
     */
    readonly values: outputs.authorization.v20220801preview.PolicyVariableValueColumnValueResponse[];
}
/**
 * This operation retrieves a single variable value; given its name,  management group it was created at and the variable it's created for.
 */
export declare function getVariableValueAtManagementGroupOutput(args: GetVariableValueAtManagementGroupOutputArgs, opts?: pulumi.InvokeOutputOptions): pulumi.Output<GetVariableValueAtManagementGroupResult>;
export interface GetVariableValueAtManagementGroupOutputArgs {
    /**
     * The ID of the management group.
     */
    managementGroupId: pulumi.Input<string>;
    /**
     * The name of the variable to operate on.
     */
    variableName: pulumi.Input<string>;
    /**
     * The name of the variable value to operate on.
     */
    variableValueName: pulumi.Input<string>;
}
