import * as pulumi from "@pulumi/pulumi";
import * as outputs from "../../types/output";
/**
 * Get details of the specified volume group
 */
export declare function getVolumeGroup(args: GetVolumeGroupArgs, opts?: pulumi.InvokeOptions): Promise<GetVolumeGroupResult>;
export interface GetVolumeGroupArgs {
    /**
     * The name of the NetApp account
     */
    accountName: string;
    /**
     * The name of the resource group.
     */
    resourceGroupName: string;
    /**
     * The name of the volumeGroup
     */
    volumeGroupName: string;
}
/**
 * Volume group resource for create
 */
export interface GetVolumeGroupResult {
    /**
     * Volume group details
     */
    readonly groupMetaData?: outputs.netapp.v20211001.VolumeGroupMetaDataResponse;
    /**
     * Resource Id
     */
    readonly id: string;
    /**
     * Resource location
     */
    readonly location?: string;
    /**
     * Resource name
     */
    readonly name: string;
    /**
     * Azure lifecycle management
     */
    readonly provisioningState: string;
    /**
     * Resource tags
     */
    readonly tags?: {
        [key: string]: string;
    };
    /**
     * Resource type
     */
    readonly type: string;
    /**
     * List of volumes from group
     */
    readonly volumes?: outputs.netapp.v20211001.VolumeGroupVolumePropertiesResponse[];
}
/**
 * Get details of the specified volume group
 */
export declare function getVolumeGroupOutput(args: GetVolumeGroupOutputArgs, opts?: pulumi.InvokeOutputOptions): pulumi.Output<GetVolumeGroupResult>;
export interface GetVolumeGroupOutputArgs {
    /**
     * The name of the NetApp account
     */
    accountName: pulumi.Input<string>;
    /**
     * The name of the resource group.
     */
    resourceGroupName: pulumi.Input<string>;
    /**
     * The name of the volumeGroup
     */
    volumeGroupName: pulumi.Input<string>;
}
