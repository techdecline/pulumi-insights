import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../../types/input";
import * as outputs from "../../types/output";
/**
 * Define the datastore.
 */
export declare class Datastore extends pulumi.CustomResource {
    /**
     * Get an existing Datastore resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    static get(name: string, id: pulumi.Input<pulumi.ID>, opts?: pulumi.CustomResourceOptions): Datastore;
    /**
     * Returns true if the given object is an instance of Datastore.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    static isInstance(obj: any): obj is Datastore;
    /**
     * Gets or sets Maximum capacity of this datastore in GBs.
     */
    readonly capacityGB: pulumi.Output<number>;
    /**
     * Gets the name of the corresponding resource in Kubernetes.
     */
    readonly customResourceName: pulumi.Output<string>;
    /**
     * Gets or sets the extended location.
     */
    readonly extendedLocation: pulumi.Output<outputs.connectedvmwarevsphere.v20231001.ExtendedLocationResponse | undefined>;
    /**
     * Gets or sets Available space of this datastore in GBs.
     */
    readonly freeSpaceGB: pulumi.Output<number>;
    /**
     * Gets or sets the inventory Item ID for the datastore.
     */
    readonly inventoryItemId: pulumi.Output<string | undefined>;
    /**
     * Metadata used by portal/tooling/etc to render different UX experiences for resources of the same type; e.g. ApiApps are a kind of Microsoft.Web/sites type.  If supported, the resource provider must validate and persist this value.
     */
    readonly kind: pulumi.Output<string | undefined>;
    /**
     * Gets or sets the location.
     */
    readonly location: pulumi.Output<string>;
    /**
     * Gets or sets the vCenter Managed Object name for the datastore.
     */
    readonly moName: pulumi.Output<string>;
    /**
     * Gets or sets the vCenter MoRef (Managed Object Reference) ID for the datastore.
     */
    readonly moRefId: pulumi.Output<string | undefined>;
    /**
     * Gets or sets the name.
     */
    readonly name: pulumi.Output<string>;
    /**
     * Provisioning state of the resource.
     */
    readonly provisioningState: pulumi.Output<string>;
    /**
     * The resource status information.
     */
    readonly statuses: pulumi.Output<outputs.connectedvmwarevsphere.v20231001.ResourceStatusResponse[]>;
    /**
     * The system data.
     */
    readonly systemData: pulumi.Output<outputs.connectedvmwarevsphere.v20231001.SystemDataResponse>;
    /**
     * Gets or sets the Resource tags.
     */
    readonly tags: pulumi.Output<{
        [key: string]: string;
    } | undefined>;
    /**
     * Gets or sets the type of the resource.
     */
    readonly type: pulumi.Output<string>;
    /**
     * Gets or sets a unique identifier for this resource.
     */
    readonly uuid: pulumi.Output<string>;
    /**
     * Gets or sets the ARM Id of the vCenter resource in which this datastore resides.
     */
    readonly vCenterId: pulumi.Output<string | undefined>;
    /**
     * Create a Datastore resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: DatastoreArgs, opts?: pulumi.CustomResourceOptions);
}
/**
 * The set of arguments for constructing a Datastore resource.
 */
export interface DatastoreArgs {
    /**
     * Name of the datastore.
     */
    datastoreName?: pulumi.Input<string>;
    /**
     * Gets or sets the extended location.
     */
    extendedLocation?: pulumi.Input<inputs.connectedvmwarevsphere.v20231001.ExtendedLocationArgs>;
    /**
     * Gets or sets the inventory Item ID for the datastore.
     */
    inventoryItemId?: pulumi.Input<string>;
    /**
     * Metadata used by portal/tooling/etc to render different UX experiences for resources of the same type; e.g. ApiApps are a kind of Microsoft.Web/sites type.  If supported, the resource provider must validate and persist this value.
     */
    kind?: pulumi.Input<string>;
    /**
     * Gets or sets the location.
     */
    location?: pulumi.Input<string>;
    /**
     * Gets or sets the vCenter MoRef (Managed Object Reference) ID for the datastore.
     */
    moRefId?: pulumi.Input<string>;
    /**
     * The Resource Group Name.
     */
    resourceGroupName: pulumi.Input<string>;
    /**
     * Gets or sets the Resource tags.
     */
    tags?: pulumi.Input<{
        [key: string]: pulumi.Input<string>;
    }>;
    /**
     * Gets or sets the ARM Id of the vCenter resource in which this datastore resides.
     */
    vCenterId?: pulumi.Input<string>;
}
