import * as pulumi from "@pulumi/pulumi";
import * as outputs from "../../types/output";
import * as enums from "../../types/enums";
/**
 * Defines the inventory item.
 */
export declare class InventoryItem extends pulumi.CustomResource {
    /**
     * Get an existing InventoryItem resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    static get(name: string, id: pulumi.Input<pulumi.ID>, opts?: pulumi.CustomResourceOptions): InventoryItem;
    /**
     * Returns true if the given object is an instance of InventoryItem.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    static isInstance(obj: any): obj is InventoryItem;
    /**
     * They inventory type.
     */
    readonly inventoryType: pulumi.Output<string>;
    /**
     * Metadata used by portal/tooling/etc to render different UX experiences for resources of the same type; e.g. ApiApps are a kind of Microsoft.Web/sites type.  If supported, the resource provider must validate and persist this value.
     */
    readonly kind: pulumi.Output<string | undefined>;
    /**
     * Gets or sets the tracked resource id corresponding to the inventory resource.
     */
    readonly managedResourceId: pulumi.Output<string | undefined>;
    /**
     * Gets or sets the vCenter Managed Object name for the inventory item.
     */
    readonly moName: pulumi.Output<string | undefined>;
    /**
     * Gets or sets the MoRef (Managed Object Reference) ID for the inventory item.
     */
    readonly moRefId: pulumi.Output<string | undefined>;
    /**
     * The name of the resource
     */
    readonly name: pulumi.Output<string>;
    /**
     * Gets the provisioning state.
     */
    readonly provisioningState: pulumi.Output<string>;
    /**
     * Azure Resource Manager metadata containing createdBy and modifiedBy information.
     */
    readonly systemData: pulumi.Output<outputs.connectedvmwarevsphere.v20231001.SystemDataResponse>;
    /**
     * The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
     */
    readonly type: pulumi.Output<string>;
    /**
     * Create a InventoryItem resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: InventoryItemArgs, opts?: pulumi.CustomResourceOptions);
}
/**
 * The set of arguments for constructing a InventoryItem resource.
 */
export interface InventoryItemArgs {
    /**
     * Name of the inventoryItem.
     */
    inventoryItemName?: pulumi.Input<string>;
    /**
     * They inventory type.
     */
    inventoryType: pulumi.Input<string | enums.connectedvmwarevsphere.v20231001.InventoryType>;
    /**
     * Metadata used by portal/tooling/etc to render different UX experiences for resources of the same type; e.g. ApiApps are a kind of Microsoft.Web/sites type.  If supported, the resource provider must validate and persist this value.
     */
    kind?: pulumi.Input<string>;
    /**
     * Gets or sets the tracked resource id corresponding to the inventory resource.
     */
    managedResourceId?: pulumi.Input<string>;
    /**
     * Gets or sets the vCenter Managed Object name for the inventory item.
     */
    moName?: pulumi.Input<string>;
    /**
     * Gets or sets the MoRef (Managed Object Reference) ID for the inventory item.
     */
    moRefId?: pulumi.Input<string>;
    /**
     * The Resource Group Name.
     */
    resourceGroupName: pulumi.Input<string>;
    /**
     * Name of the vCenter.
     */
    vcenterName: pulumi.Input<string>;
}
