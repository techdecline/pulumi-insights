import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as enums from "../types/enums";
/**
 * Define the virtualMachine.
 * Azure REST API version: 2022-07-15-preview. Prior API version in Azure Native 1.x: 2020-10-01-preview.
 *
 * Other available API versions: 2023-03-01-preview.
 */
export declare class VirtualMachine extends pulumi.CustomResource {
    /**
     * Get an existing VirtualMachine resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    static get(name: string, id: pulumi.Input<pulumi.ID>, opts?: pulumi.CustomResourceOptions): VirtualMachine;
    /**
     * Returns true if the given object is an instance of VirtualMachine.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    static isInstance(obj: any): obj is VirtualMachine;
    /**
     * Gets the name of the corresponding resource in Kubernetes.
     */
    readonly customResourceName: pulumi.Output<string>;
    /**
     * Gets or sets the extended location.
     */
    readonly extendedLocation: pulumi.Output<outputs.connectedvmwarevsphere.ExtendedLocationResponse | undefined>;
    /**
     * Firmware type
     */
    readonly firmwareType: pulumi.Output<string | undefined>;
    /**
     * Gets or sets the folder path of the vm.
     */
    readonly folderPath: pulumi.Output<string>;
    /**
     * Guest agent status properties.
     */
    readonly guestAgentProfile: pulumi.Output<outputs.connectedvmwarevsphere.GuestAgentProfileResponse | undefined>;
    /**
     * Hardware properties.
     */
    readonly hardwareProfile: pulumi.Output<outputs.connectedvmwarevsphere.HardwareProfileResponse | undefined>;
    /**
     * The identity of the resource.
     */
    readonly identity: pulumi.Output<outputs.connectedvmwarevsphere.IdentityResponse | undefined>;
    /**
     * Gets or sets the instance uuid of the vm.
     */
    readonly instanceUuid: pulumi.Output<string>;
    /**
     * Gets or sets the inventory Item ID for the virtual machine.
     */
    readonly inventoryItemId: pulumi.Output<string | undefined>;
    /**
     * Metadata used by portal/tooling/etc to render different UX experiences for resources of the same type; e.g. ApiApps are a kind of Microsoft.Web/sites type.  If supported, the resource provider must validate and persist this value.
     */
    readonly kind: pulumi.Output<string | undefined>;
    /**
     * Gets or sets the location.
     */
    readonly location: pulumi.Output<string>;
    /**
     * Gets or sets the vCenter Managed Object name for the virtual machine.
     */
    readonly moName: pulumi.Output<string>;
    /**
     * Gets or sets the vCenter MoRef (Managed Object Reference) ID for the virtual machine.
     */
    readonly moRefId: pulumi.Output<string | undefined>;
    /**
     * Gets or sets the name.
     */
    readonly name: pulumi.Output<string>;
    /**
     * Network properties.
     */
    readonly networkProfile: pulumi.Output<outputs.connectedvmwarevsphere.NetworkProfileResponse | undefined>;
    /**
     * OS properties.
     */
    readonly osProfile: pulumi.Output<outputs.connectedvmwarevsphere.OsProfileResponse | undefined>;
    /**
     * Placement properties.
     */
    readonly placementProfile: pulumi.Output<outputs.connectedvmwarevsphere.PlacementProfileResponse | undefined>;
    /**
     * Gets the power state of the virtual machine.
     */
    readonly powerState: pulumi.Output<string>;
    /**
     * Gets or sets the provisioning state.
     */
    readonly provisioningState: pulumi.Output<string>;
    /**
     * Gets or sets the ARM Id of the resourcePool resource on which this virtual machine will
     * deploy.
     */
    readonly resourcePoolId: pulumi.Output<string | undefined>;
    /**
     * Gets the security profile.
     */
    readonly securityProfile: pulumi.Output<outputs.connectedvmwarevsphere.SecurityProfileResponse | undefined>;
    /**
     * Gets or sets the SMBIOS UUID of the vm.
     */
    readonly smbiosUuid: pulumi.Output<string | undefined>;
    /**
     * The resource status information.
     */
    readonly statuses: pulumi.Output<outputs.connectedvmwarevsphere.ResourceStatusResponse[]>;
    /**
     * Storage properties.
     */
    readonly storageProfile: pulumi.Output<outputs.connectedvmwarevsphere.StorageProfileResponse | undefined>;
    /**
     * The system data.
     */
    readonly systemData: pulumi.Output<outputs.connectedvmwarevsphere.SystemDataResponse>;
    /**
     * Gets or sets the Resource tags.
     */
    readonly tags: pulumi.Output<{
        [key: string]: string;
    } | undefined>;
    /**
     * Gets or sets the ARM Id of the template resource to deploy the virtual machine.
     */
    readonly templateId: pulumi.Output<string | undefined>;
    /**
     * Gets or sets the type of the resource.
     */
    readonly type: pulumi.Output<string>;
    /**
     * Gets or sets a unique identifier for this resource.
     */
    readonly uuid: pulumi.Output<string>;
    /**
     * Gets or sets the ARM Id of the vCenter resource in which this resource pool resides.
     */
    readonly vCenterId: pulumi.Output<string | undefined>;
    /**
     * Gets or sets a unique identifier for the vm resource.
     */
    readonly vmId: pulumi.Output<string>;
    /**
     * Create a VirtualMachine resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: VirtualMachineArgs, opts?: pulumi.CustomResourceOptions);
}
/**
 * The set of arguments for constructing a VirtualMachine resource.
 */
export interface VirtualMachineArgs {
    /**
     * Gets or sets the extended location.
     */
    extendedLocation?: pulumi.Input<inputs.connectedvmwarevsphere.ExtendedLocationArgs>;
    /**
     * Firmware type
     */
    firmwareType?: pulumi.Input<string | enums.connectedvmwarevsphere.FirmwareType>;
    /**
     * Guest agent status properties.
     */
    guestAgentProfile?: pulumi.Input<inputs.connectedvmwarevsphere.GuestAgentProfileArgs>;
    /**
     * Hardware properties.
     */
    hardwareProfile?: pulumi.Input<inputs.connectedvmwarevsphere.HardwareProfileArgs>;
    /**
     * The identity of the resource.
     */
    identity?: pulumi.Input<inputs.connectedvmwarevsphere.IdentityArgs>;
    /**
     * Gets or sets the inventory Item ID for the virtual machine.
     */
    inventoryItemId?: pulumi.Input<string>;
    /**
     * Metadata used by portal/tooling/etc to render different UX experiences for resources of the same type; e.g. ApiApps are a kind of Microsoft.Web/sites type.  If supported, the resource provider must validate and persist this value.
     */
    kind?: pulumi.Input<string>;
    /**
     * Gets or sets the location.
     */
    location?: pulumi.Input<string>;
    /**
     * Gets or sets the vCenter MoRef (Managed Object Reference) ID for the virtual machine.
     */
    moRefId?: pulumi.Input<string>;
    /**
     * Network properties.
     */
    networkProfile?: pulumi.Input<inputs.connectedvmwarevsphere.NetworkProfileArgs>;
    /**
     * OS properties.
     */
    osProfile?: pulumi.Input<inputs.connectedvmwarevsphere.OsProfileArgs>;
    /**
     * Placement properties.
     */
    placementProfile?: pulumi.Input<inputs.connectedvmwarevsphere.PlacementProfileArgs>;
    /**
     * The Resource Group Name.
     */
    resourceGroupName: pulumi.Input<string>;
    /**
     * Gets or sets the ARM Id of the resourcePool resource on which this virtual machine will
     * deploy.
     */
    resourcePoolId?: pulumi.Input<string>;
    /**
     * Gets the security profile.
     */
    securityProfile?: pulumi.Input<inputs.connectedvmwarevsphere.SecurityProfileArgs>;
    /**
     * Gets or sets the SMBIOS UUID of the vm.
     */
    smbiosUuid?: pulumi.Input<string>;
    /**
     * Storage properties.
     */
    storageProfile?: pulumi.Input<inputs.connectedvmwarevsphere.StorageProfileArgs>;
    /**
     * Gets or sets the Resource tags.
     */
    tags?: pulumi.Input<{
        [key: string]: pulumi.Input<string>;
    }>;
    /**
     * Gets or sets the ARM Id of the template resource to deploy the virtual machine.
     */
    templateId?: pulumi.Input<string>;
    /**
     * Gets or sets the ARM Id of the vCenter resource in which this resource pool resides.
     */
    vCenterId?: pulumi.Input<string>;
    /**
     * Name of the virtual machine resource.
     */
    virtualMachineName?: pulumi.Input<string>;
}
