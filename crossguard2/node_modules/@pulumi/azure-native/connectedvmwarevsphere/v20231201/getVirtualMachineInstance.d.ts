import * as pulumi from "@pulumi/pulumi";
import * as outputs from "../../types/output";
/**
 * Retrieves information about a virtual machine instance.
 */
export declare function getVirtualMachineInstance(args: GetVirtualMachineInstanceArgs, opts?: pulumi.InvokeOptions): Promise<GetVirtualMachineInstanceResult>;
export interface GetVirtualMachineInstanceArgs {
    /**
     * The fully qualified Azure Resource manager identifier of the Hybrid Compute machine resource to be extended.
     */
    resourceUri: string;
}
/**
 * Define the virtualMachineInstance.
 */
export interface GetVirtualMachineInstanceResult {
    /**
     * Gets or sets the extended location.
     */
    readonly extendedLocation?: outputs.connectedvmwarevsphere.v20231201.ExtendedLocationResponse;
    /**
     * Hardware properties.
     */
    readonly hardwareProfile?: outputs.connectedvmwarevsphere.v20231201.HardwareProfileResponse;
    /**
     * Fully qualified resource ID for the resource. E.g. "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
     */
    readonly id: string;
    /**
     * Gets the infrastructure profile.
     */
    readonly infrastructureProfile?: outputs.connectedvmwarevsphere.v20231201.InfrastructureProfileResponse;
    /**
     * The name of the resource
     */
    readonly name: string;
    /**
     * Network properties.
     */
    readonly networkProfile?: outputs.connectedvmwarevsphere.v20231201.NetworkProfileResponse;
    /**
     * OS properties.
     */
    readonly osProfile?: outputs.connectedvmwarevsphere.v20231201.OsProfileForVMInstanceResponse;
    /**
     * Placement properties.
     */
    readonly placementProfile?: outputs.connectedvmwarevsphere.v20231201.PlacementProfileResponse;
    /**
     * Gets the power state of the virtual machine.
     */
    readonly powerState: string;
    /**
     * Gets the provisioning state.
     */
    readonly provisioningState: string;
    /**
     * Gets or sets a unique identifier for the vm resource.
     */
    readonly resourceUid: string;
    /**
     * Gets the security profile.
     */
    readonly securityProfile?: outputs.connectedvmwarevsphere.v20231201.SecurityProfileResponse;
    /**
     * The resource status information.
     */
    readonly statuses: outputs.connectedvmwarevsphere.v20231201.ResourceStatusResponse[];
    /**
     * Storage properties.
     */
    readonly storageProfile?: outputs.connectedvmwarevsphere.v20231201.StorageProfileResponse;
    /**
     * Azure Resource Manager metadata containing createdBy and modifiedBy information.
     */
    readonly systemData: outputs.connectedvmwarevsphere.v20231201.SystemDataResponse;
    /**
     * The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
     */
    readonly type: string;
}
/**
 * Retrieves information about a virtual machine instance.
 */
export declare function getVirtualMachineInstanceOutput(args: GetVirtualMachineInstanceOutputArgs, opts?: pulumi.InvokeOutputOptions): pulumi.Output<GetVirtualMachineInstanceResult>;
export interface GetVirtualMachineInstanceOutputArgs {
    /**
     * The fully qualified Azure Resource manager identifier of the Hybrid Compute machine resource to be extended.
     */
    resourceUri: pulumi.Input<string>;
}
