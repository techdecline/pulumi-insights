"use strict";
// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***
Object.defineProperty(exports, "__esModule", { value: true });
exports.getRaiPolicyOutput = exports.getRaiPolicy = void 0;
const pulumi = require("@pulumi/pulumi");
const utilities = require("../utilities");
/**
 * Gets the specified Content Filters associated with the Azure OpenAI account.
 * Azure REST API version: 2023-10-01-preview.
 *
 * Other available API versions: 2024-04-01-preview, 2024-06-01-preview, 2024-10-01.
 */
function getRaiPolicy(args, opts) {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("azure-native:cognitiveservices:getRaiPolicy", {
        "accountName": args.accountName,
        "raiPolicyName": args.raiPolicyName,
        "resourceGroupName": args.resourceGroupName,
    }, opts);
}
exports.getRaiPolicy = getRaiPolicy;
/**
 * Gets the specified Content Filters associated with the Azure OpenAI account.
 * Azure REST API version: 2023-10-01-preview.
 *
 * Other available API versions: 2024-04-01-preview, 2024-06-01-preview, 2024-10-01.
 */
function getRaiPolicyOutput(args, opts) {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invokeOutput("azure-native:cognitiveservices:getRaiPolicy", {
        "accountName": args.accountName,
        "raiPolicyName": args.raiPolicyName,
        "resourceGroupName": args.resourceGroupName,
    }, opts);
}
exports.getRaiPolicyOutput = getRaiPolicyOutput;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZ2V0UmFpUG9saWN5LmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vY29nbml0aXZlc2VydmljZXMvZ2V0UmFpUG9saWN5LnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7QUFBQSxzRUFBc0U7QUFDdEUsaUZBQWlGOzs7QUFFakYseUNBQXlDO0FBSXpDLDBDQUEwQztBQUUxQzs7Ozs7R0FLRztBQUNILFNBQWdCLFlBQVksQ0FBQyxJQUFzQixFQUFFLElBQTJCO0lBQzVFLElBQUksR0FBRyxNQUFNLENBQUMsWUFBWSxDQUFDLFNBQVMsQ0FBQyxvQkFBb0IsRUFBRSxFQUFFLElBQUksSUFBSSxFQUFFLENBQUMsQ0FBQztJQUN6RSxPQUFPLE1BQU0sQ0FBQyxPQUFPLENBQUMsTUFBTSxDQUFDLDZDQUE2QyxFQUFFO1FBQ3hFLGFBQWEsRUFBRSxJQUFJLENBQUMsV0FBVztRQUMvQixlQUFlLEVBQUUsSUFBSSxDQUFDLGFBQWE7UUFDbkMsbUJBQW1CLEVBQUUsSUFBSSxDQUFDLGlCQUFpQjtLQUM5QyxFQUFFLElBQUksQ0FBQyxDQUFDO0FBQ2IsQ0FBQztBQVBELG9DQU9DO0FBa0REOzs7OztHQUtHO0FBQ0gsU0FBZ0Isa0JBQWtCLENBQUMsSUFBNEIsRUFBRSxJQUFpQztJQUM5RixJQUFJLEdBQUcsTUFBTSxDQUFDLFlBQVksQ0FBQyxTQUFTLENBQUMsb0JBQW9CLEVBQUUsRUFBRSxJQUFJLElBQUksRUFBRSxDQUFDLENBQUM7SUFDekUsT0FBTyxNQUFNLENBQUMsT0FBTyxDQUFDLFlBQVksQ0FBQyw2Q0FBNkMsRUFBRTtRQUM5RSxhQUFhLEVBQUUsSUFBSSxDQUFDLFdBQVc7UUFDL0IsZUFBZSxFQUFFLElBQUksQ0FBQyxhQUFhO1FBQ25DLG1CQUFtQixFQUFFLElBQUksQ0FBQyxpQkFBaUI7S0FDOUMsRUFBRSxJQUFJLENBQUMsQ0FBQztBQUNiLENBQUM7QUFQRCxnREFPQyJ9