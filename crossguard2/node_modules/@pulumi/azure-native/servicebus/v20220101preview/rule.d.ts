import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../../types/input";
import * as outputs from "../../types/output";
import * as enums from "../../types/enums";
/**
 * Description of Rule Resource.
 */
export declare class Rule extends pulumi.CustomResource {
    /**
     * Get an existing Rule resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    static get(name: string, id: pulumi.Input<pulumi.ID>, opts?: pulumi.CustomResourceOptions): Rule;
    /**
     * Returns true if the given object is an instance of Rule.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    static isInstance(obj: any): obj is Rule;
    /**
     * Represents the filter actions which are allowed for the transformation of a message that have been matched by a filter expression.
     */
    readonly action: pulumi.Output<outputs.servicebus.v20220101preview.ActionResponse | undefined>;
    /**
     * Properties of correlationFilter
     */
    readonly correlationFilter: pulumi.Output<outputs.servicebus.v20220101preview.CorrelationFilterResponse | undefined>;
    /**
     * Filter type that is evaluated against a BrokeredMessage.
     */
    readonly filterType: pulumi.Output<string | undefined>;
    /**
     * The geo-location where the resource lives
     */
    readonly location: pulumi.Output<string>;
    /**
     * The name of the resource
     */
    readonly name: pulumi.Output<string>;
    /**
     * Properties of sqlFilter
     */
    readonly sqlFilter: pulumi.Output<outputs.servicebus.v20220101preview.SqlFilterResponse | undefined>;
    /**
     * The system meta data relating to this resource.
     */
    readonly systemData: pulumi.Output<outputs.servicebus.v20220101preview.SystemDataResponse>;
    /**
     * The type of the resource. E.g. "Microsoft.EventHub/Namespaces" or "Microsoft.EventHub/Namespaces/EventHubs"
     */
    readonly type: pulumi.Output<string>;
    /**
     * Create a Rule resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: RuleArgs, opts?: pulumi.CustomResourceOptions);
}
/**
 * The set of arguments for constructing a Rule resource.
 */
export interface RuleArgs {
    /**
     * Represents the filter actions which are allowed for the transformation of a message that have been matched by a filter expression.
     */
    action?: pulumi.Input<inputs.servicebus.v20220101preview.ActionArgs>;
    /**
     * Properties of correlationFilter
     */
    correlationFilter?: pulumi.Input<inputs.servicebus.v20220101preview.CorrelationFilterArgs>;
    /**
     * Filter type that is evaluated against a BrokeredMessage.
     */
    filterType?: pulumi.Input<string | enums.servicebus.v20220101preview.FilterType>;
    /**
     * The namespace name
     */
    namespaceName: pulumi.Input<string>;
    /**
     * Name of the Resource group within the Azure subscription.
     */
    resourceGroupName: pulumi.Input<string>;
    /**
     * The rule name.
     */
    ruleName?: pulumi.Input<string>;
    /**
     * Properties of sqlFilter
     */
    sqlFilter?: pulumi.Input<inputs.servicebus.v20220101preview.SqlFilterArgs>;
    /**
     * The subscription name.
     */
    subscriptionName: pulumi.Input<string>;
    /**
     * The topic name.
     */
    topicName: pulumi.Input<string>;
}
