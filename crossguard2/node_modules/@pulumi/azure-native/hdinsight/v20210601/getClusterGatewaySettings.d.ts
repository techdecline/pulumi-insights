import * as pulumi from "@pulumi/pulumi";
/**
 * Gets the gateway settings for the specified cluster.
 */
export declare function getClusterGatewaySettings(args: GetClusterGatewaySettingsArgs, opts?: pulumi.InvokeOptions): Promise<GetClusterGatewaySettingsResult>;
export interface GetClusterGatewaySettingsArgs {
    /**
     * The name of the cluster.
     */
    clusterName: string;
    /**
     * The name of the resource group.
     */
    resourceGroupName: string;
}
/**
 * Gateway settings.
 */
export interface GetClusterGatewaySettingsResult {
    /**
     * Indicates whether or not the gateway settings based authorization is enabled.
     */
    readonly isCredentialEnabled: string;
    /**
     * The gateway settings user password.
     */
    readonly password: string;
    /**
     * The gateway settings user name.
     */
    readonly userName: string;
}
/**
 * Gets the gateway settings for the specified cluster.
 */
export declare function getClusterGatewaySettingsOutput(args: GetClusterGatewaySettingsOutputArgs, opts?: pulumi.InvokeOutputOptions): pulumi.Output<GetClusterGatewaySettingsResult>;
export interface GetClusterGatewaySettingsOutputArgs {
    /**
     * The name of the cluster.
     */
    clusterName: pulumi.Input<string>;
    /**
     * The name of the resource group.
     */
    resourceGroupName: pulumi.Input<string>;
}
