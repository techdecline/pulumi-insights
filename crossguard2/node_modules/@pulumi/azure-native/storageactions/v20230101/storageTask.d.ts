import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../../types/input";
import * as outputs from "../../types/output";
/**
 * Represents Storage Task.
 */
export declare class StorageTask extends pulumi.CustomResource {
    /**
     * Get an existing StorageTask resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    static get(name: string, id: pulumi.Input<pulumi.ID>, opts?: pulumi.CustomResourceOptions): StorageTask;
    /**
     * Returns true if the given object is an instance of StorageTask.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    static isInstance(obj: any): obj is StorageTask;
    /**
     * The storage task action that is executed
     */
    readonly action: pulumi.Output<outputs.storageactions.v20230101.StorageTaskActionResponse>;
    /**
     * The creation date and time of the storage task in UTC.
     */
    readonly creationTimeInUtc: pulumi.Output<string>;
    /**
     * Text that describes the purpose of the storage task
     */
    readonly description: pulumi.Output<string>;
    /**
     * Storage Task is enabled when set to true and disabled when set to false
     */
    readonly enabled: pulumi.Output<boolean>;
    /**
     * The managed service identity of the resource.
     */
    readonly identity: pulumi.Output<outputs.storageactions.v20230101.ManagedServiceIdentityResponse>;
    /**
     * The geo-location where the resource lives
     */
    readonly location: pulumi.Output<string>;
    /**
     * The name of the resource
     */
    readonly name: pulumi.Output<string>;
    /**
     * Represents the provisioning state of the storage task.
     */
    readonly provisioningState: pulumi.Output<string>;
    /**
     * Azure Resource Manager metadata containing createdBy and modifiedBy information.
     */
    readonly systemData: pulumi.Output<outputs.storageactions.v20230101.SystemDataResponse>;
    /**
     * Resource tags.
     */
    readonly tags: pulumi.Output<{
        [key: string]: string;
    } | undefined>;
    /**
     * Storage task version.
     */
    readonly taskVersion: pulumi.Output<number>;
    /**
     * The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
     */
    readonly type: pulumi.Output<string>;
    /**
     * Create a StorageTask resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: StorageTaskArgs, opts?: pulumi.CustomResourceOptions);
}
/**
 * The set of arguments for constructing a StorageTask resource.
 */
export interface StorageTaskArgs {
    /**
     * The storage task action that is executed
     */
    action: pulumi.Input<inputs.storageactions.v20230101.StorageTaskActionArgs>;
    /**
     * Text that describes the purpose of the storage task
     */
    description: pulumi.Input<string>;
    /**
     * Storage Task is enabled when set to true and disabled when set to false
     */
    enabled: pulumi.Input<boolean>;
    /**
     * The managed service identity of the resource.
     */
    identity: pulumi.Input<inputs.storageactions.v20230101.ManagedServiceIdentityArgs>;
    /**
     * The geo-location where the resource lives
     */
    location?: pulumi.Input<string>;
    /**
     * The name of the resource group. The name is case insensitive.
     */
    resourceGroupName: pulumi.Input<string>;
    /**
     * The name of the storage task within the specified resource group. Storage task names must be between 3 and 18 characters in length and use numbers and lower-case letters only.
     */
    storageTaskName?: pulumi.Input<string>;
    /**
     * Resource tags.
     */
    tags?: pulumi.Input<{
        [key: string]: pulumi.Input<string>;
    }>;
}
