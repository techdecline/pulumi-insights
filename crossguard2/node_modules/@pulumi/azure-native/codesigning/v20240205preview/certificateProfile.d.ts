import * as pulumi from "@pulumi/pulumi";
import * as outputs from "../../types/output";
import * as enums from "../../types/enums";
/**
 * Certificate profile resource.
 */
export declare class CertificateProfile extends pulumi.CustomResource {
    /**
     * Get an existing CertificateProfile resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    static get(name: string, id: pulumi.Input<pulumi.ID>, opts?: pulumi.CustomResourceOptions): CertificateProfile;
    /**
     * Returns true if the given object is an instance of CertificateProfile.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    static isInstance(obj: any): obj is CertificateProfile;
    /**
     * Used as L in the certificate subject name.
     */
    readonly city: pulumi.Output<string>;
    /**
     * Used as CN in the certificate subject name.
     */
    readonly commonName: pulumi.Output<string>;
    /**
     * Used as C in the certificate subject name.
     */
    readonly country: pulumi.Output<string>;
    /**
     * Enhanced key usage of the certificate.
     */
    readonly enhancedKeyUsage: pulumi.Output<string>;
    /**
     * Identity validation id used for the certificate subject name.
     */
    readonly identityValidationId: pulumi.Output<string | undefined>;
    /**
     * Whether to include L in the certificate subject name. Applicable only for private trust, private trust ci profile types
     */
    readonly includeCity: pulumi.Output<boolean | undefined>;
    /**
     * Whether to include C in the certificate subject name. Applicable only for private trust, private trust ci profile types
     */
    readonly includeCountry: pulumi.Output<boolean | undefined>;
    /**
     * Whether to include PC in the certificate subject name.
     */
    readonly includePostalCode: pulumi.Output<boolean | undefined>;
    /**
     * Whether to include S in the certificate subject name. Applicable only for private trust, private trust ci profile types
     */
    readonly includeState: pulumi.Output<boolean | undefined>;
    /**
     * Whether to include STREET in the certificate subject name.
     */
    readonly includeStreetAddress: pulumi.Output<boolean | undefined>;
    /**
     * The name of the resource
     */
    readonly name: pulumi.Output<string>;
    /**
     * Used as O in the certificate subject name.
     */
    readonly organization: pulumi.Output<string>;
    /**
     * Used as OU in the private trust certificate subject name.
     */
    readonly organizationUnit: pulumi.Output<string>;
    /**
     * Used as PC in the certificate subject name.
     */
    readonly postalCode: pulumi.Output<string>;
    /**
     * Profile type of the certificate.
     */
    readonly profileType: pulumi.Output<string>;
    /**
     * Status of the current operation on certificate profile.
     */
    readonly provisioningState: pulumi.Output<string>;
    /**
     * Used as S in the certificate subject name.
     */
    readonly state: pulumi.Output<string>;
    /**
     * Status of the certificate profile.
     */
    readonly status: pulumi.Output<string>;
    /**
     * Used as STREET in the certificate subject name.
     */
    readonly streetAddress: pulumi.Output<string>;
    /**
     * Azure Resource Manager metadata containing createdBy and modifiedBy information.
     */
    readonly systemData: pulumi.Output<outputs.codesigning.v20240205preview.SystemDataResponse>;
    /**
     * The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
     */
    readonly type: pulumi.Output<string>;
    /**
     * Create a CertificateProfile resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: CertificateProfileArgs, opts?: pulumi.CustomResourceOptions);
}
/**
 * The set of arguments for constructing a CertificateProfile resource.
 */
export interface CertificateProfileArgs {
    /**
     * Trusted Signing account name.
     */
    accountName: pulumi.Input<string>;
    /**
     * Identity validation id used for the certificate subject name.
     */
    identityValidationId?: pulumi.Input<string>;
    /**
     * Whether to include L in the certificate subject name. Applicable only for private trust, private trust ci profile types
     */
    includeCity?: pulumi.Input<boolean>;
    /**
     * Whether to include C in the certificate subject name. Applicable only for private trust, private trust ci profile types
     */
    includeCountry?: pulumi.Input<boolean>;
    /**
     * Whether to include PC in the certificate subject name.
     */
    includePostalCode?: pulumi.Input<boolean>;
    /**
     * Whether to include S in the certificate subject name. Applicable only for private trust, private trust ci profile types
     */
    includeState?: pulumi.Input<boolean>;
    /**
     * Whether to include STREET in the certificate subject name.
     */
    includeStreetAddress?: pulumi.Input<boolean>;
    /**
     * Certificate profile name.
     */
    profileName?: pulumi.Input<string>;
    /**
     * Profile type of the certificate.
     */
    profileType: pulumi.Input<string | enums.codesigning.v20240205preview.ProfileType>;
    /**
     * The name of the resource group. The name is case insensitive.
     */
    resourceGroupName: pulumi.Input<string>;
}
