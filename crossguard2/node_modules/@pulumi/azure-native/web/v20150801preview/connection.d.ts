import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../../types/input";
import * as outputs from "../../types/output";
/**
 * API Connection
 */
export declare class Connection extends pulumi.CustomResource {
    /**
     * Get an existing Connection resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    static get(name: string, id: pulumi.Input<pulumi.ID>, opts?: pulumi.CustomResourceOptions): Connection;
    /**
     * Returns true if the given object is an instance of Connection.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    static isInstance(obj: any): obj is Connection;
    /**
     * expanded connection provider name
     */
    readonly api: pulumi.Output<outputs.web.v20150801preview.ExpandedParentApiEntityResponse | undefined>;
    /**
     * Timestamp of last connection change.
     */
    readonly changedTime: pulumi.Output<string | undefined>;
    /**
     * Timestamp of the connection creation
     */
    readonly createdTime: pulumi.Output<string | undefined>;
    /**
     * Custom login setting values.
     */
    readonly customParameterValues: pulumi.Output<{
        [key: string]: outputs.web.v20150801preview.ParameterCustomLoginSettingValuesResponse;
    } | undefined>;
    /**
     * display name
     */
    readonly displayName: pulumi.Output<string | undefined>;
    /**
     * Time in UTC when the first expiration of OAuth tokens
     */
    readonly firstExpirationTime: pulumi.Output<string | undefined>;
    /**
     * List of Keywords that tag the acl
     */
    readonly keywords: pulumi.Output<string[] | undefined>;
    /**
     * Kind of resource
     */
    readonly kind: pulumi.Output<string | undefined>;
    /**
     * Resource Location
     */
    readonly location: pulumi.Output<string>;
    readonly metadata: pulumi.Output<any | undefined>;
    /**
     * Resource Name
     */
    readonly name: pulumi.Output<string | undefined>;
    /**
     * Tokens/Claim
     */
    readonly nonSecretParameterValues: pulumi.Output<{
        [key: string]: any;
    } | undefined>;
    /**
     * Tokens/Claim
     */
    readonly parameterValues: pulumi.Output<{
        [key: string]: any;
    } | undefined>;
    /**
     * Status of the connection
     */
    readonly statuses: pulumi.Output<outputs.web.v20150801preview.ConnectionStatusResponse[] | undefined>;
    /**
     * Resource tags
     */
    readonly tags: pulumi.Output<{
        [key: string]: string;
    } | undefined>;
    readonly tenantId: pulumi.Output<string | undefined>;
    /**
     * Resource type
     */
    readonly type: pulumi.Output<string | undefined>;
    /**
     * Create a Connection resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: ConnectionArgs, opts?: pulumi.CustomResourceOptions);
}
/**
 * The set of arguments for constructing a Connection resource.
 */
export interface ConnectionArgs {
    /**
     * expanded connection provider name
     */
    api?: pulumi.Input<inputs.web.v20150801preview.ExpandedParentApiEntityArgs>;
    /**
     * Timestamp of last connection change.
     */
    changedTime?: pulumi.Input<string>;
    /**
     * The connection name.
     */
    connectionName?: pulumi.Input<string>;
    /**
     * Timestamp of the connection creation
     */
    createdTime?: pulumi.Input<string>;
    /**
     * Custom login setting values.
     */
    customParameterValues?: pulumi.Input<{
        [key: string]: pulumi.Input<inputs.web.v20150801preview.ParameterCustomLoginSettingValuesArgs>;
    }>;
    /**
     * display name
     */
    displayName?: pulumi.Input<string>;
    /**
     * Time in UTC when the first expiration of OAuth tokens
     */
    firstExpirationTime?: pulumi.Input<string>;
    /**
     * Resource Id
     */
    id?: pulumi.Input<string>;
    /**
     * List of Keywords that tag the acl
     */
    keywords?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Kind of resource
     */
    kind?: pulumi.Input<string>;
    /**
     * Resource Location
     */
    location?: pulumi.Input<string>;
    metadata?: any;
    /**
     * Resource Name
     */
    name?: pulumi.Input<string>;
    /**
     * Tokens/Claim
     */
    nonSecretParameterValues?: pulumi.Input<{
        [key: string]: any;
    }>;
    /**
     * Tokens/Claim
     */
    parameterValues?: pulumi.Input<{
        [key: string]: any;
    }>;
    /**
     * The resource group name.
     */
    resourceGroupName: pulumi.Input<string>;
    /**
     * Status of the connection
     */
    statuses?: pulumi.Input<pulumi.Input<inputs.web.v20150801preview.ConnectionStatusArgs>[]>;
    /**
     * Resource tags
     */
    tags?: pulumi.Input<{
        [key: string]: pulumi.Input<string>;
    }>;
    tenantId?: pulumi.Input<string>;
    /**
     * Resource type
     */
    type?: pulumi.Input<string>;
}
