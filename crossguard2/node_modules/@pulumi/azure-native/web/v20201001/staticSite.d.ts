import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../../types/input";
import * as outputs from "../../types/output";
/**
 * Static Site ARM resource.
 */
export declare class StaticSite extends pulumi.CustomResource {
    /**
     * Get an existing StaticSite resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    static get(name: string, id: pulumi.Input<pulumi.ID>, opts?: pulumi.CustomResourceOptions): StaticSite;
    /**
     * Returns true if the given object is an instance of StaticSite.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    static isInstance(obj: any): obj is StaticSite;
    /**
     * The target branch in the repository.
     */
    readonly branch: pulumi.Output<string | undefined>;
    /**
     * Build properties to configure on the repository.
     */
    readonly buildProperties: pulumi.Output<outputs.web.v20201001.StaticSiteBuildPropertiesResponse | undefined>;
    /**
     * The custom domains associated with this static site.
     */
    readonly customDomains: pulumi.Output<string[]>;
    /**
     * The default autogenerated hostname for the static site.
     */
    readonly defaultHostname: pulumi.Output<string>;
    /**
     * Kind of resource.
     */
    readonly kind: pulumi.Output<string | undefined>;
    /**
     * Resource Location.
     */
    readonly location: pulumi.Output<string>;
    /**
     * Resource Name.
     */
    readonly name: pulumi.Output<string>;
    /**
     * A user's github repository token. This is used to setup the Github Actions workflow file and API secrets.
     */
    readonly repositoryToken: pulumi.Output<string | undefined>;
    /**
     * URL for the repository of the static site.
     */
    readonly repositoryUrl: pulumi.Output<string | undefined>;
    /**
     * Description of a SKU for a scalable resource.
     */
    readonly sku: pulumi.Output<outputs.web.v20201001.SkuDescriptionResponse | undefined>;
    /**
     * The system metadata relating to this resource.
     */
    readonly systemData: pulumi.Output<outputs.web.v20201001.SystemDataResponse>;
    /**
     * Resource tags.
     */
    readonly tags: pulumi.Output<{
        [key: string]: string;
    } | undefined>;
    /**
     * Resource type.
     */
    readonly type: pulumi.Output<string>;
    /**
     * Create a StaticSite resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: StaticSiteArgs, opts?: pulumi.CustomResourceOptions);
}
/**
 * The set of arguments for constructing a StaticSite resource.
 */
export interface StaticSiteArgs {
    /**
     * The target branch in the repository.
     */
    branch?: pulumi.Input<string>;
    /**
     * Build properties to configure on the repository.
     */
    buildProperties?: pulumi.Input<inputs.web.v20201001.StaticSiteBuildPropertiesArgs>;
    /**
     * Kind of resource.
     */
    kind?: pulumi.Input<string>;
    /**
     * Resource Location.
     */
    location?: pulumi.Input<string>;
    /**
     * Name of the static site to create or update.
     */
    name?: pulumi.Input<string>;
    /**
     * A user's github repository token. This is used to setup the Github Actions workflow file and API secrets.
     */
    repositoryToken?: pulumi.Input<string>;
    /**
     * URL for the repository of the static site.
     */
    repositoryUrl?: pulumi.Input<string>;
    /**
     * Name of the resource group to which the resource belongs.
     */
    resourceGroupName: pulumi.Input<string>;
    /**
     * Description of a SKU for a scalable resource.
     */
    sku?: pulumi.Input<inputs.web.v20201001.SkuDescriptionArgs>;
    /**
     * Resource tags.
     */
    tags?: pulumi.Input<{
        [key: string]: pulumi.Input<string>;
    }>;
}
