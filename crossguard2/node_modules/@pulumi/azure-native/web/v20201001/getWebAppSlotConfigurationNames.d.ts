import * as pulumi from "@pulumi/pulumi";
import * as outputs from "../../types/output";
/**
 * Gets the names of app settings and connection strings that stick to the slot (not swapped).
 */
export declare function getWebAppSlotConfigurationNames(args: GetWebAppSlotConfigurationNamesArgs, opts?: pulumi.InvokeOptions): Promise<GetWebAppSlotConfigurationNamesResult>;
export interface GetWebAppSlotConfigurationNamesArgs {
    /**
     * Name of the app.
     */
    name: string;
    /**
     * Name of the resource group to which the resource belongs.
     */
    resourceGroupName: string;
}
/**
 * Slot Config names azure resource.
 */
export interface GetWebAppSlotConfigurationNamesResult {
    /**
     * List of application settings names.
     */
    readonly appSettingNames?: string[];
    /**
     * List of external Azure storage account identifiers.
     */
    readonly azureStorageConfigNames?: string[];
    /**
     * List of connection string names.
     */
    readonly connectionStringNames?: string[];
    /**
     * Resource Id.
     */
    readonly id: string;
    /**
     * Kind of resource.
     */
    readonly kind?: string;
    /**
     * Resource Name.
     */
    readonly name: string;
    /**
     * The system metadata relating to this resource.
     */
    readonly systemData: outputs.web.v20201001.SystemDataResponse;
    /**
     * Resource type.
     */
    readonly type: string;
}
/**
 * Gets the names of app settings and connection strings that stick to the slot (not swapped).
 */
export declare function getWebAppSlotConfigurationNamesOutput(args: GetWebAppSlotConfigurationNamesOutputArgs, opts?: pulumi.InvokeOutputOptions): pulumi.Output<GetWebAppSlotConfigurationNamesResult>;
export interface GetWebAppSlotConfigurationNamesOutputArgs {
    /**
     * Name of the app.
     */
    name: pulumi.Input<string>;
    /**
     * Name of the resource group to which the resource belongs.
     */
    resourceGroupName: pulumi.Input<string>;
}
