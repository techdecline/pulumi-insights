import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../../types/input";
import * as outputs from "../../types/output";
import * as enums from "../../types/enums";
/**
 * Security Assignment on a resource group over a given scope
 */
export declare class StandardAssignment extends pulumi.CustomResource {
    /**
     * Get an existing StandardAssignment resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    static get(name: string, id: pulumi.Input<pulumi.ID>, opts?: pulumi.CustomResourceOptions): StandardAssignment;
    /**
     * Returns true if the given object is an instance of StandardAssignment.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    static isInstance(obj: any): obj is StandardAssignment;
    /**
     * Standard item with key as applied to this standard assignment over the given scope
     */
    readonly assignedStandard: pulumi.Output<outputs.security.v20240801.AssignedStandardItemResponse | undefined>;
    /**
     * Additional data about assignment that has Attest effect
     */
    readonly attestationData: pulumi.Output<outputs.security.v20240801.StandardAssignmentPropertiesResponseAttestationData | undefined>;
    /**
     * Description of the standardAssignment
     */
    readonly description: pulumi.Output<string | undefined>;
    /**
     * Display name of the standardAssignment
     */
    readonly displayName: pulumi.Output<string | undefined>;
    /**
     * Expected effect of this assignment (Audit/Exempt/Attest)
     */
    readonly effect: pulumi.Output<string | undefined>;
    /**
     * Excluded scopes, filter out the descendants of the scope (on management scopes)
     */
    readonly excludedScopes: pulumi.Output<string[] | undefined>;
    /**
     * Additional data about assignment that has Exempt effect
     */
    readonly exemptionData: pulumi.Output<outputs.security.v20240801.StandardAssignmentPropertiesResponseExemptionData | undefined>;
    /**
     * Expiration date of this assignment as a full ISO date
     */
    readonly expiresOn: pulumi.Output<string | undefined>;
    /**
     * The standard assignment metadata.
     */
    readonly metadata: pulumi.Output<outputs.security.v20240801.StandardAssignmentMetadataResponse | undefined>;
    /**
     * Resource name
     */
    readonly name: pulumi.Output<string>;
    /**
     * Resource type
     */
    readonly type: pulumi.Output<string>;
    /**
     * Create a StandardAssignment resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: StandardAssignmentArgs, opts?: pulumi.CustomResourceOptions);
}
/**
 * The set of arguments for constructing a StandardAssignment resource.
 */
export interface StandardAssignmentArgs {
    /**
     * Standard item with key as applied to this standard assignment over the given scope
     */
    assignedStandard?: pulumi.Input<inputs.security.v20240801.AssignedStandardItemArgs>;
    /**
     * Additional data about assignment that has Attest effect
     */
    attestationData?: pulumi.Input<inputs.security.v20240801.StandardAssignmentPropertiesAttestationDataArgs>;
    /**
     * Description of the standardAssignment
     */
    description?: pulumi.Input<string>;
    /**
     * Display name of the standardAssignment
     */
    displayName?: pulumi.Input<string>;
    /**
     * Expected effect of this assignment (Audit/Exempt/Attest)
     */
    effect?: pulumi.Input<string | enums.security.v20240801.Effect>;
    /**
     * Excluded scopes, filter out the descendants of the scope (on management scopes)
     */
    excludedScopes?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Additional data about assignment that has Exempt effect
     */
    exemptionData?: pulumi.Input<inputs.security.v20240801.StandardAssignmentPropertiesExemptionDataArgs>;
    /**
     * Expiration date of this assignment as a full ISO date
     */
    expiresOn?: pulumi.Input<string>;
    /**
     * The identifier of the resource.
     */
    resourceId: pulumi.Input<string>;
    /**
     * The standard assignments assignment key - unique key for the standard assignment
     */
    standardAssignmentName?: pulumi.Input<string>;
}
