"use strict";
// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __exportStar = (this && this.__exportStar) || function(m, exports) {
    for (var p in m) if (p !== "default" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.getDefenderForStorage = exports.getCustomRecommendationOutput = exports.getCustomRecommendation = exports.getCustomEntityStoreAssignmentOutput = exports.getCustomEntityStoreAssignment = exports.getCustomAssessmentAutomationOutput = exports.getCustomAssessmentAutomation = exports.getConnectorOutput = exports.getConnector = exports.getAzureServersSettingOutput = exports.getAzureServersSetting = exports.getAutomationOutput = exports.getAutomation = exports.getAssignmentOutput = exports.getAssignment = exports.getAssessmentsMetadataSubscriptionOutput = exports.getAssessmentsMetadataSubscription = exports.getAssessmentMetadataInSubscriptionOutput = exports.getAssessmentMetadataInSubscription = exports.getAssessmentOutput = exports.getAssessment = exports.getApplicationOutput = exports.getApplication = exports.getAlertsSuppressionRuleOutput = exports.getAlertsSuppressionRule = exports.getAdvancedThreatProtectionOutput = exports.getAdvancedThreatProtection = exports.getAPICollectionByAzureApiManagementServiceOutput = exports.getAPICollectionByAzureApiManagementService = exports.getAPICollectionOutput = exports.getAPICollection = exports.DeviceSecurityGroup = exports.DevOpsPolicyAssignment = exports.DevOpsConfiguration = exports.DefenderForStorage = exports.CustomRecommendation = exports.CustomEntityStoreAssignment = exports.CustomAssessmentAutomation = exports.Connector = exports.AzureServersSetting = exports.Automation = exports.Assignment = exports.AssessmentsMetadataSubscription = exports.AssessmentMetadataInSubscription = exports.Assessment = exports.Application = exports.APICollectionByAzureApiManagementService = exports.APICollection = exports.AlertsSuppressionRule = exports.AdvancedThreatProtection = void 0;
exports.Pricing = exports.listGitLabSubgroupOutput = exports.listGitLabSubgroup = exports.listGitLabGroupAvailableOutput = exports.listGitLabGroupAvailable = exports.listGitHubOwnerAvailableOutput = exports.listGitHubOwnerAvailable = exports.listAzureDevOpsOrgAvailableOutput = exports.listAzureDevOpsOrgAvailable = exports.JitNetworkAccessPolicy = exports.IotSecuritySolution = exports.GovernanceRule = exports.GovernanceAssignment = exports.getWorkspaceSettingOutput = exports.getWorkspaceSetting = exports.getStandardAssignmentOutput = exports.getStandardAssignment = exports.getStandardOutput = exports.getStandard = exports.getSqlVulnerabilityAssessmentBaselineRuleOutput = exports.getSqlVulnerabilityAssessmentBaselineRule = exports.getServerVulnerabilityAssessmentOutput = exports.getServerVulnerabilityAssessment = exports.getSecurityStandardOutput = exports.getSecurityStandard = exports.getSecurityOperatorOutput = exports.getSecurityOperator = exports.getSecurityContactOutput = exports.getSecurityContact = exports.getSecurityConnectorApplicationOutput = exports.getSecurityConnectorApplication = exports.getSecurityConnectorOutput = exports.getSecurityConnector = exports.getPricingOutput = exports.getPricing = exports.getJitNetworkAccessPolicyOutput = exports.getJitNetworkAccessPolicy = exports.getIotSecuritySolutionOutput = exports.getIotSecuritySolution = exports.getGovernanceRuleOutput = exports.getGovernanceRule = exports.getGovernanceAssignmentOutput = exports.getGovernanceAssignment = exports.getDeviceSecurityGroupOutput = exports.getDeviceSecurityGroup = exports.getDevOpsPolicyAssignmentOutput = exports.getDevOpsPolicyAssignment = exports.getDevOpsConfigurationOutput = exports.getDevOpsConfiguration = exports.getDefenderForStorageOutput = void 0;
exports.v20241001preview = exports.v20240801preview = exports.v20240801 = exports.v20240701preview = exports.v20240515preview = exports.v20240401 = exports.v20240301preview = exports.v20240101 = exports.v20231201preview = exports.v20231115 = exports.v20231001preview = exports.v20230901preview = exports.v20230501 = exports.v20230301preview = exports.v20230201preview = exports.v20230101preview = exports.v20221201preview = exports.v20221120preview = exports.v20220701preview = exports.v20220101preview = exports.v20210801preview = exports.v20210701preview = exports.v20210601 = exports.v20200101preview = exports.v20200101 = exports.v20190801 = exports.v20190101preview = exports.v20190101 = exports.v20170801preview = exports.WorkspaceSetting = exports.StandardAssignment = exports.Standard = exports.SqlVulnerabilityAssessmentBaselineRule = exports.ServerVulnerabilityAssessment = exports.SecurityStandard = exports.SecurityOperator = exports.SecurityContact = exports.SecurityConnectorApplication = exports.SecurityConnector = void 0;
const pulumi = require("@pulumi/pulumi");
const utilities = require("../utilities");
exports.AdvancedThreatProtection = null;
utilities.lazyLoad(exports, ["AdvancedThreatProtection"], () => require("./advancedThreatProtection"));
exports.AlertsSuppressionRule = null;
utilities.lazyLoad(exports, ["AlertsSuppressionRule"], () => require("./alertsSuppressionRule"));
exports.APICollection = null;
utilities.lazyLoad(exports, ["APICollection"], () => require("./apicollection"));
exports.APICollectionByAzureApiManagementService = null;
utilities.lazyLoad(exports, ["APICollectionByAzureApiManagementService"], () => require("./apicollectionByAzureApiManagementService"));
exports.Application = null;
utilities.lazyLoad(exports, ["Application"], () => require("./application"));
exports.Assessment = null;
utilities.lazyLoad(exports, ["Assessment"], () => require("./assessment"));
exports.AssessmentMetadataInSubscription = null;
utilities.lazyLoad(exports, ["AssessmentMetadataInSubscription"], () => require("./assessmentMetadataInSubscription"));
exports.AssessmentsMetadataSubscription = null;
utilities.lazyLoad(exports, ["AssessmentsMetadataSubscription"], () => require("./assessmentsMetadataSubscription"));
exports.Assignment = null;
utilities.lazyLoad(exports, ["Assignment"], () => require("./assignment"));
exports.Automation = null;
utilities.lazyLoad(exports, ["Automation"], () => require("./automation"));
exports.AzureServersSetting = null;
utilities.lazyLoad(exports, ["AzureServersSetting"], () => require("./azureServersSetting"));
exports.Connector = null;
utilities.lazyLoad(exports, ["Connector"], () => require("./connector"));
exports.CustomAssessmentAutomation = null;
utilities.lazyLoad(exports, ["CustomAssessmentAutomation"], () => require("./customAssessmentAutomation"));
exports.CustomEntityStoreAssignment = null;
utilities.lazyLoad(exports, ["CustomEntityStoreAssignment"], () => require("./customEntityStoreAssignment"));
exports.CustomRecommendation = null;
utilities.lazyLoad(exports, ["CustomRecommendation"], () => require("./customRecommendation"));
exports.DefenderForStorage = null;
utilities.lazyLoad(exports, ["DefenderForStorage"], () => require("./defenderForStorage"));
exports.DevOpsConfiguration = null;
utilities.lazyLoad(exports, ["DevOpsConfiguration"], () => require("./devOpsConfiguration"));
exports.DevOpsPolicyAssignment = null;
utilities.lazyLoad(exports, ["DevOpsPolicyAssignment"], () => require("./devOpsPolicyAssignment"));
exports.DeviceSecurityGroup = null;
utilities.lazyLoad(exports, ["DeviceSecurityGroup"], () => require("./deviceSecurityGroup"));
exports.getAPICollection = null;
exports.getAPICollectionOutput = null;
utilities.lazyLoad(exports, ["getAPICollection", "getAPICollectionOutput"], () => require("./getAPICollection"));
exports.getAPICollectionByAzureApiManagementService = null;
exports.getAPICollectionByAzureApiManagementServiceOutput = null;
utilities.lazyLoad(exports, ["getAPICollectionByAzureApiManagementService", "getAPICollectionByAzureApiManagementServiceOutput"], () => require("./getAPICollectionByAzureApiManagementService"));
exports.getAdvancedThreatProtection = null;
exports.getAdvancedThreatProtectionOutput = null;
utilities.lazyLoad(exports, ["getAdvancedThreatProtection", "getAdvancedThreatProtectionOutput"], () => require("./getAdvancedThreatProtection"));
exports.getAlertsSuppressionRule = null;
exports.getAlertsSuppressionRuleOutput = null;
utilities.lazyLoad(exports, ["getAlertsSuppressionRule", "getAlertsSuppressionRuleOutput"], () => require("./getAlertsSuppressionRule"));
exports.getApplication = null;
exports.getApplicationOutput = null;
utilities.lazyLoad(exports, ["getApplication", "getApplicationOutput"], () => require("./getApplication"));
exports.getAssessment = null;
exports.getAssessmentOutput = null;
utilities.lazyLoad(exports, ["getAssessment", "getAssessmentOutput"], () => require("./getAssessment"));
exports.getAssessmentMetadataInSubscription = null;
exports.getAssessmentMetadataInSubscriptionOutput = null;
utilities.lazyLoad(exports, ["getAssessmentMetadataInSubscription", "getAssessmentMetadataInSubscriptionOutput"], () => require("./getAssessmentMetadataInSubscription"));
exports.getAssessmentsMetadataSubscription = null;
exports.getAssessmentsMetadataSubscriptionOutput = null;
utilities.lazyLoad(exports, ["getAssessmentsMetadataSubscription", "getAssessmentsMetadataSubscriptionOutput"], () => require("./getAssessmentsMetadataSubscription"));
exports.getAssignment = null;
exports.getAssignmentOutput = null;
utilities.lazyLoad(exports, ["getAssignment", "getAssignmentOutput"], () => require("./getAssignment"));
exports.getAutomation = null;
exports.getAutomationOutput = null;
utilities.lazyLoad(exports, ["getAutomation", "getAutomationOutput"], () => require("./getAutomation"));
exports.getAzureServersSetting = null;
exports.getAzureServersSettingOutput = null;
utilities.lazyLoad(exports, ["getAzureServersSetting", "getAzureServersSettingOutput"], () => require("./getAzureServersSetting"));
exports.getConnector = null;
exports.getConnectorOutput = null;
utilities.lazyLoad(exports, ["getConnector", "getConnectorOutput"], () => require("./getConnector"));
exports.getCustomAssessmentAutomation = null;
exports.getCustomAssessmentAutomationOutput = null;
utilities.lazyLoad(exports, ["getCustomAssessmentAutomation", "getCustomAssessmentAutomationOutput"], () => require("./getCustomAssessmentAutomation"));
exports.getCustomEntityStoreAssignment = null;
exports.getCustomEntityStoreAssignmentOutput = null;
utilities.lazyLoad(exports, ["getCustomEntityStoreAssignment", "getCustomEntityStoreAssignmentOutput"], () => require("./getCustomEntityStoreAssignment"));
exports.getCustomRecommendation = null;
exports.getCustomRecommendationOutput = null;
utilities.lazyLoad(exports, ["getCustomRecommendation", "getCustomRecommendationOutput"], () => require("./getCustomRecommendation"));
exports.getDefenderForStorage = null;
exports.getDefenderForStorageOutput = null;
utilities.lazyLoad(exports, ["getDefenderForStorage", "getDefenderForStorageOutput"], () => require("./getDefenderForStorage"));
exports.getDevOpsConfiguration = null;
exports.getDevOpsConfigurationOutput = null;
utilities.lazyLoad(exports, ["getDevOpsConfiguration", "getDevOpsConfigurationOutput"], () => require("./getDevOpsConfiguration"));
exports.getDevOpsPolicyAssignment = null;
exports.getDevOpsPolicyAssignmentOutput = null;
utilities.lazyLoad(exports, ["getDevOpsPolicyAssignment", "getDevOpsPolicyAssignmentOutput"], () => require("./getDevOpsPolicyAssignment"));
exports.getDeviceSecurityGroup = null;
exports.getDeviceSecurityGroupOutput = null;
utilities.lazyLoad(exports, ["getDeviceSecurityGroup", "getDeviceSecurityGroupOutput"], () => require("./getDeviceSecurityGroup"));
exports.getGovernanceAssignment = null;
exports.getGovernanceAssignmentOutput = null;
utilities.lazyLoad(exports, ["getGovernanceAssignment", "getGovernanceAssignmentOutput"], () => require("./getGovernanceAssignment"));
exports.getGovernanceRule = null;
exports.getGovernanceRuleOutput = null;
utilities.lazyLoad(exports, ["getGovernanceRule", "getGovernanceRuleOutput"], () => require("./getGovernanceRule"));
exports.getIotSecuritySolution = null;
exports.getIotSecuritySolutionOutput = null;
utilities.lazyLoad(exports, ["getIotSecuritySolution", "getIotSecuritySolutionOutput"], () => require("./getIotSecuritySolution"));
exports.getJitNetworkAccessPolicy = null;
exports.getJitNetworkAccessPolicyOutput = null;
utilities.lazyLoad(exports, ["getJitNetworkAccessPolicy", "getJitNetworkAccessPolicyOutput"], () => require("./getJitNetworkAccessPolicy"));
exports.getPricing = null;
exports.getPricingOutput = null;
utilities.lazyLoad(exports, ["getPricing", "getPricingOutput"], () => require("./getPricing"));
exports.getSecurityConnector = null;
exports.getSecurityConnectorOutput = null;
utilities.lazyLoad(exports, ["getSecurityConnector", "getSecurityConnectorOutput"], () => require("./getSecurityConnector"));
exports.getSecurityConnectorApplication = null;
exports.getSecurityConnectorApplicationOutput = null;
utilities.lazyLoad(exports, ["getSecurityConnectorApplication", "getSecurityConnectorApplicationOutput"], () => require("./getSecurityConnectorApplication"));
exports.getSecurityContact = null;
exports.getSecurityContactOutput = null;
utilities.lazyLoad(exports, ["getSecurityContact", "getSecurityContactOutput"], () => require("./getSecurityContact"));
exports.getSecurityOperator = null;
exports.getSecurityOperatorOutput = null;
utilities.lazyLoad(exports, ["getSecurityOperator", "getSecurityOperatorOutput"], () => require("./getSecurityOperator"));
exports.getSecurityStandard = null;
exports.getSecurityStandardOutput = null;
utilities.lazyLoad(exports, ["getSecurityStandard", "getSecurityStandardOutput"], () => require("./getSecurityStandard"));
exports.getServerVulnerabilityAssessment = null;
exports.getServerVulnerabilityAssessmentOutput = null;
utilities.lazyLoad(exports, ["getServerVulnerabilityAssessment", "getServerVulnerabilityAssessmentOutput"], () => require("./getServerVulnerabilityAssessment"));
exports.getSqlVulnerabilityAssessmentBaselineRule = null;
exports.getSqlVulnerabilityAssessmentBaselineRuleOutput = null;
utilities.lazyLoad(exports, ["getSqlVulnerabilityAssessmentBaselineRule", "getSqlVulnerabilityAssessmentBaselineRuleOutput"], () => require("./getSqlVulnerabilityAssessmentBaselineRule"));
exports.getStandard = null;
exports.getStandardOutput = null;
utilities.lazyLoad(exports, ["getStandard", "getStandardOutput"], () => require("./getStandard"));
exports.getStandardAssignment = null;
exports.getStandardAssignmentOutput = null;
utilities.lazyLoad(exports, ["getStandardAssignment", "getStandardAssignmentOutput"], () => require("./getStandardAssignment"));
exports.getWorkspaceSetting = null;
exports.getWorkspaceSettingOutput = null;
utilities.lazyLoad(exports, ["getWorkspaceSetting", "getWorkspaceSettingOutput"], () => require("./getWorkspaceSetting"));
exports.GovernanceAssignment = null;
utilities.lazyLoad(exports, ["GovernanceAssignment"], () => require("./governanceAssignment"));
exports.GovernanceRule = null;
utilities.lazyLoad(exports, ["GovernanceRule"], () => require("./governanceRule"));
exports.IotSecuritySolution = null;
utilities.lazyLoad(exports, ["IotSecuritySolution"], () => require("./iotSecuritySolution"));
exports.JitNetworkAccessPolicy = null;
utilities.lazyLoad(exports, ["JitNetworkAccessPolicy"], () => require("./jitNetworkAccessPolicy"));
exports.listAzureDevOpsOrgAvailable = null;
exports.listAzureDevOpsOrgAvailableOutput = null;
utilities.lazyLoad(exports, ["listAzureDevOpsOrgAvailable", "listAzureDevOpsOrgAvailableOutput"], () => require("./listAzureDevOpsOrgAvailable"));
exports.listGitHubOwnerAvailable = null;
exports.listGitHubOwnerAvailableOutput = null;
utilities.lazyLoad(exports, ["listGitHubOwnerAvailable", "listGitHubOwnerAvailableOutput"], () => require("./listGitHubOwnerAvailable"));
exports.listGitLabGroupAvailable = null;
exports.listGitLabGroupAvailableOutput = null;
utilities.lazyLoad(exports, ["listGitLabGroupAvailable", "listGitLabGroupAvailableOutput"], () => require("./listGitLabGroupAvailable"));
exports.listGitLabSubgroup = null;
exports.listGitLabSubgroupOutput = null;
utilities.lazyLoad(exports, ["listGitLabSubgroup", "listGitLabSubgroupOutput"], () => require("./listGitLabSubgroup"));
exports.Pricing = null;
utilities.lazyLoad(exports, ["Pricing"], () => require("./pricing"));
exports.SecurityConnector = null;
utilities.lazyLoad(exports, ["SecurityConnector"], () => require("./securityConnector"));
exports.SecurityConnectorApplication = null;
utilities.lazyLoad(exports, ["SecurityConnectorApplication"], () => require("./securityConnectorApplication"));
exports.SecurityContact = null;
utilities.lazyLoad(exports, ["SecurityContact"], () => require("./securityContact"));
exports.SecurityOperator = null;
utilities.lazyLoad(exports, ["SecurityOperator"], () => require("./securityOperator"));
exports.SecurityStandard = null;
utilities.lazyLoad(exports, ["SecurityStandard"], () => require("./securityStandard"));
exports.ServerVulnerabilityAssessment = null;
utilities.lazyLoad(exports, ["ServerVulnerabilityAssessment"], () => require("./serverVulnerabilityAssessment"));
exports.SqlVulnerabilityAssessmentBaselineRule = null;
utilities.lazyLoad(exports, ["SqlVulnerabilityAssessmentBaselineRule"], () => require("./sqlVulnerabilityAssessmentBaselineRule"));
exports.Standard = null;
utilities.lazyLoad(exports, ["Standard"], () => require("./standard"));
exports.StandardAssignment = null;
utilities.lazyLoad(exports, ["StandardAssignment"], () => require("./standardAssignment"));
exports.WorkspaceSetting = null;
utilities.lazyLoad(exports, ["WorkspaceSetting"], () => require("./workspaceSetting"));
// Export enums:
__exportStar(require("../types/enums/security"), exports);
// Export sub-modules:
const v20170801preview = require("./v20170801preview");
exports.v20170801preview = v20170801preview;
const v20190101 = require("./v20190101");
exports.v20190101 = v20190101;
const v20190101preview = require("./v20190101preview");
exports.v20190101preview = v20190101preview;
const v20190801 = require("./v20190801");
exports.v20190801 = v20190801;
const v20200101 = require("./v20200101");
exports.v20200101 = v20200101;
const v20200101preview = require("./v20200101preview");
exports.v20200101preview = v20200101preview;
const v20210601 = require("./v20210601");
exports.v20210601 = v20210601;
const v20210701preview = require("./v20210701preview");
exports.v20210701preview = v20210701preview;
const v20210801preview = require("./v20210801preview");
exports.v20210801preview = v20210801preview;
const v20220101preview = require("./v20220101preview");
exports.v20220101preview = v20220101preview;
const v20220701preview = require("./v20220701preview");
exports.v20220701preview = v20220701preview;
const v20221120preview = require("./v20221120preview");
exports.v20221120preview = v20221120preview;
const v20221201preview = require("./v20221201preview");
exports.v20221201preview = v20221201preview;
const v20230101preview = require("./v20230101preview");
exports.v20230101preview = v20230101preview;
const v20230201preview = require("./v20230201preview");
exports.v20230201preview = v20230201preview;
const v20230301preview = require("./v20230301preview");
exports.v20230301preview = v20230301preview;
const v20230501 = require("./v20230501");
exports.v20230501 = v20230501;
const v20230901preview = require("./v20230901preview");
exports.v20230901preview = v20230901preview;
const v20231001preview = require("./v20231001preview");
exports.v20231001preview = v20231001preview;
const v20231115 = require("./v20231115");
exports.v20231115 = v20231115;
const v20231201preview = require("./v20231201preview");
exports.v20231201preview = v20231201preview;
const v20240101 = require("./v20240101");
exports.v20240101 = v20240101;
const v20240301preview = require("./v20240301preview");
exports.v20240301preview = v20240301preview;
const v20240401 = require("./v20240401");
exports.v20240401 = v20240401;
const v20240515preview = require("./v20240515preview");
exports.v20240515preview = v20240515preview;
const v20240701preview = require("./v20240701preview");
exports.v20240701preview = v20240701preview;
const v20240801 = require("./v20240801");
exports.v20240801 = v20240801;
const v20240801preview = require("./v20240801preview");
exports.v20240801preview = v20240801preview;
const v20241001preview = require("./v20241001preview");
exports.v20241001preview = v20241001preview;
const _module = {
    version: utilities.getVersion(),
    construct: (name, type, urn) => {
        switch (type) {
            case "azure-native:security:APICollection":
                return new exports.APICollection(name, undefined, { urn });
            case "azure-native:security:APICollectionByAzureApiManagementService":
                return new exports.APICollectionByAzureApiManagementService(name, undefined, { urn });
            case "azure-native:security:AdvancedThreatProtection":
                return new exports.AdvancedThreatProtection(name, undefined, { urn });
            case "azure-native:security:AlertsSuppressionRule":
                return new exports.AlertsSuppressionRule(name, undefined, { urn });
            case "azure-native:security:Application":
                return new exports.Application(name, undefined, { urn });
            case "azure-native:security:Assessment":
                return new exports.Assessment(name, undefined, { urn });
            case "azure-native:security:AssessmentMetadataInSubscription":
                return new exports.AssessmentMetadataInSubscription(name, undefined, { urn });
            case "azure-native:security:AssessmentsMetadataSubscription":
                return new exports.AssessmentsMetadataSubscription(name, undefined, { urn });
            case "azure-native:security:Assignment":
                return new exports.Assignment(name, undefined, { urn });
            case "azure-native:security:Automation":
                return new exports.Automation(name, undefined, { urn });
            case "azure-native:security:AzureServersSetting":
                return new exports.AzureServersSetting(name, undefined, { urn });
            case "azure-native:security:Connector":
                return new exports.Connector(name, undefined, { urn });
            case "azure-native:security:CustomAssessmentAutomation":
                return new exports.CustomAssessmentAutomation(name, undefined, { urn });
            case "azure-native:security:CustomEntityStoreAssignment":
                return new exports.CustomEntityStoreAssignment(name, undefined, { urn });
            case "azure-native:security:CustomRecommendation":
                return new exports.CustomRecommendation(name, undefined, { urn });
            case "azure-native:security:DefenderForStorage":
                return new exports.DefenderForStorage(name, undefined, { urn });
            case "azure-native:security:DevOpsConfiguration":
                return new exports.DevOpsConfiguration(name, undefined, { urn });
            case "azure-native:security:DevOpsPolicyAssignment":
                return new exports.DevOpsPolicyAssignment(name, undefined, { urn });
            case "azure-native:security:DeviceSecurityGroup":
                return new exports.DeviceSecurityGroup(name, undefined, { urn });
            case "azure-native:security:GovernanceAssignment":
                return new exports.GovernanceAssignment(name, undefined, { urn });
            case "azure-native:security:GovernanceRule":
                return new exports.GovernanceRule(name, undefined, { urn });
            case "azure-native:security:IotSecuritySolution":
                return new exports.IotSecuritySolution(name, undefined, { urn });
            case "azure-native:security:JitNetworkAccessPolicy":
                return new exports.JitNetworkAccessPolicy(name, undefined, { urn });
            case "azure-native:security:Pricing":
                return new exports.Pricing(name, undefined, { urn });
            case "azure-native:security:SecurityConnector":
                return new exports.SecurityConnector(name, undefined, { urn });
            case "azure-native:security:SecurityConnectorApplication":
                return new exports.SecurityConnectorApplication(name, undefined, { urn });
            case "azure-native:security:SecurityContact":
                return new exports.SecurityContact(name, undefined, { urn });
            case "azure-native:security:SecurityOperator":
                return new exports.SecurityOperator(name, undefined, { urn });
            case "azure-native:security:SecurityStandard":
                return new exports.SecurityStandard(name, undefined, { urn });
            case "azure-native:security:ServerVulnerabilityAssessment":
                return new exports.ServerVulnerabilityAssessment(name, undefined, { urn });
            case "azure-native:security:SqlVulnerabilityAssessmentBaselineRule":
                return new exports.SqlVulnerabilityAssessmentBaselineRule(name, undefined, { urn });
            case "azure-native:security:Standard":
                return new exports.Standard(name, undefined, { urn });
            case "azure-native:security:StandardAssignment":
                return new exports.StandardAssignment(name, undefined, { urn });
            case "azure-native:security:WorkspaceSetting":
                return new exports.WorkspaceSetting(name, undefined, { urn });
            default:
                throw new Error(`unknown resource type ${type}`);
        }
    },
};
pulumi.runtime.registerResourceModule("azure-native", "security", _module);
//# sourceMappingURL=data:application/json;base64,