import * as pulumi from "@pulumi/pulumi";
import * as outputs from "../types/output";
/**
 * Security operator under a given subscription and pricing
 * Azure REST API version: 2023-01-01-preview.
 */
export declare class SecurityOperator extends pulumi.CustomResource {
    /**
     * Get an existing SecurityOperator resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    static get(name: string, id: pulumi.Input<pulumi.ID>, opts?: pulumi.CustomResourceOptions): SecurityOperator;
    /**
     * Returns true if the given object is an instance of SecurityOperator.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    static isInstance(obj: any): obj is SecurityOperator;
    /**
     * Identity for the resource.
     */
    readonly identity: pulumi.Output<outputs.security.IdentityResponse | undefined>;
    /**
     * Resource name
     */
    readonly name: pulumi.Output<string>;
    /**
     * Resource type
     */
    readonly type: pulumi.Output<string>;
    /**
     * Create a SecurityOperator resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: SecurityOperatorArgs, opts?: pulumi.CustomResourceOptions);
}
/**
 * The set of arguments for constructing a SecurityOperator resource.
 */
export interface SecurityOperatorArgs {
    /**
     * name of the pricing configuration
     */
    pricingName: pulumi.Input<string>;
    /**
     * name of the securityOperator
     */
    securityOperatorName?: pulumi.Input<string>;
}
