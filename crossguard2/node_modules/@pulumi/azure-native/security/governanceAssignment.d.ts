import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
/**
 * Governance assignment over a given scope
 * Azure REST API version: 2022-01-01-preview.
 */
export declare class GovernanceAssignment extends pulumi.CustomResource {
    /**
     * Get an existing GovernanceAssignment resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    static get(name: string, id: pulumi.Input<pulumi.ID>, opts?: pulumi.CustomResourceOptions): GovernanceAssignment;
    /**
     * Returns true if the given object is an instance of GovernanceAssignment.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    static isInstance(obj: any): obj is GovernanceAssignment;
    /**
     * The additional data for the governance assignment - e.g. links to ticket (optional), see example
     */
    readonly additionalData: pulumi.Output<outputs.security.GovernanceAssignmentAdditionalDataResponse | undefined>;
    /**
     * The email notifications settings for the governance rule, states whether to disable notifications for mangers and owners
     */
    readonly governanceEmailNotification: pulumi.Output<outputs.security.GovernanceEmailNotificationResponse | undefined>;
    /**
     * Defines whether there is a grace period on the governance assignment
     */
    readonly isGracePeriod: pulumi.Output<boolean | undefined>;
    /**
     * Resource name
     */
    readonly name: pulumi.Output<string>;
    /**
     * The Owner for the governance assignment - e.g. user@contoso.com - see example
     */
    readonly owner: pulumi.Output<string | undefined>;
    /**
     * The remediation due-date - after this date Secure Score will be affected (in case of  active grace-period)
     */
    readonly remediationDueDate: pulumi.Output<string>;
    /**
     * The ETA (estimated time of arrival) for remediation (optional), see example
     */
    readonly remediationEta: pulumi.Output<outputs.security.RemediationEtaResponse | undefined>;
    /**
     * Resource type
     */
    readonly type: pulumi.Output<string>;
    /**
     * Create a GovernanceAssignment resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: GovernanceAssignmentArgs, opts?: pulumi.CustomResourceOptions);
}
/**
 * The set of arguments for constructing a GovernanceAssignment resource.
 */
export interface GovernanceAssignmentArgs {
    /**
     * The additional data for the governance assignment - e.g. links to ticket (optional), see example
     */
    additionalData?: pulumi.Input<inputs.security.GovernanceAssignmentAdditionalDataArgs>;
    /**
     * The Assessment Key - A unique key for the assessment type
     */
    assessmentName: pulumi.Input<string>;
    /**
     * The governance assignment key - the assessment key of the required governance assignment
     */
    assignmentKey?: pulumi.Input<string>;
    /**
     * The email notifications settings for the governance rule, states whether to disable notifications for mangers and owners
     */
    governanceEmailNotification?: pulumi.Input<inputs.security.GovernanceEmailNotificationArgs>;
    /**
     * Defines whether there is a grace period on the governance assignment
     */
    isGracePeriod?: pulumi.Input<boolean>;
    /**
     * The Owner for the governance assignment - e.g. user@contoso.com - see example
     */
    owner?: pulumi.Input<string>;
    /**
     * The remediation due-date - after this date Secure Score will be affected (in case of  active grace-period)
     */
    remediationDueDate: pulumi.Input<string>;
    /**
     * The ETA (estimated time of arrival) for remediation (optional), see example
     */
    remediationEta?: pulumi.Input<inputs.security.RemediationEtaArgs>;
    /**
     * The scope of the Governance assignments. Valid scopes are: subscription (format: 'subscriptions/{subscriptionId}'), or security connector (format: 'subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Security/securityConnectors/{securityConnectorName})'
     */
    scope: pulumi.Input<string>;
}
