import * as pulumi from "@pulumi/pulumi";
import * as enums from "../../types/enums";
/**
 * Security Application over a given scope
 */
export declare class SecurityConnectorApplication extends pulumi.CustomResource {
    /**
     * Get an existing SecurityConnectorApplication resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    static get(name: string, id: pulumi.Input<pulumi.ID>, opts?: pulumi.CustomResourceOptions): SecurityConnectorApplication;
    /**
     * Returns true if the given object is an instance of SecurityConnectorApplication.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    static isInstance(obj: any): obj is SecurityConnectorApplication;
    /**
     * description of the application
     */
    readonly description: pulumi.Output<string | undefined>;
    /**
     * display name of the application
     */
    readonly displayName: pulumi.Output<string | undefined>;
    /**
     * Resource name
     */
    readonly name: pulumi.Output<string>;
    /**
     * The application source, what it affects, e.g. Assessments
     */
    readonly sourceResourceType: pulumi.Output<string>;
    /**
     * Resource type
     */
    readonly type: pulumi.Output<string>;
    /**
     * Create a SecurityConnectorApplication resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: SecurityConnectorApplicationArgs, opts?: pulumi.CustomResourceOptions);
}
/**
 * The set of arguments for constructing a SecurityConnectorApplication resource.
 */
export interface SecurityConnectorApplicationArgs {
    /**
     * The security Application key - unique key for the standard application
     */
    applicationId?: pulumi.Input<string>;
    /**
     * description of the application
     */
    description?: pulumi.Input<string>;
    /**
     * display name of the application
     */
    displayName?: pulumi.Input<string>;
    /**
     * The name of the resource group within the user's subscription. The name is case insensitive.
     */
    resourceGroupName: pulumi.Input<string>;
    /**
     * The security connector name.
     */
    securityConnectorName: pulumi.Input<string>;
    /**
     * The application source, what it affects, e.g. Assessments
     */
    sourceResourceType: pulumi.Input<string | enums.security.v20220701preview.ApplicationSourceResourceType>;
}
