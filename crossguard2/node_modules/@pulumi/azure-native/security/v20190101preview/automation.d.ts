import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../../types/input";
import * as outputs from "../../types/output";
/**
 * The security automation resource.
 */
export declare class Automation extends pulumi.CustomResource {
    /**
     * Get an existing Automation resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    static get(name: string, id: pulumi.Input<pulumi.ID>, opts?: pulumi.CustomResourceOptions): Automation;
    /**
     * Returns true if the given object is an instance of Automation.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    static isInstance(obj: any): obj is Automation;
    /**
     * A collection of the actions which are triggered if all the configured rules evaluations, within at least one rule set, are true.
     */
    readonly actions: pulumi.Output<(outputs.security.v20190101preview.AutomationActionEventHubResponse | outputs.security.v20190101preview.AutomationActionLogicAppResponse | outputs.security.v20190101preview.AutomationActionWorkspaceResponse)[] | undefined>;
    /**
     * The security automation description.
     */
    readonly description: pulumi.Output<string | undefined>;
    /**
     * Entity tag is used for comparing two or more entities from the same requested resource.
     */
    readonly etag: pulumi.Output<string | undefined>;
    /**
     * Indicates whether the security automation is enabled.
     */
    readonly isEnabled: pulumi.Output<boolean | undefined>;
    /**
     * Kind of the resource
     */
    readonly kind: pulumi.Output<string | undefined>;
    /**
     * Location where the resource is stored
     */
    readonly location: pulumi.Output<string | undefined>;
    /**
     * Resource name
     */
    readonly name: pulumi.Output<string>;
    /**
     * A collection of scopes on which the security automations logic is applied. Supported scopes are the subscription itself or a resource group under that subscription. The automation will only apply on defined scopes.
     */
    readonly scopes: pulumi.Output<outputs.security.v20190101preview.AutomationScopeResponse[] | undefined>;
    /**
     * A collection of the source event types which evaluate the security automation set of rules.
     */
    readonly sources: pulumi.Output<outputs.security.v20190101preview.AutomationSourceResponse[] | undefined>;
    /**
     * A list of key value pairs that describe the resource.
     */
    readonly tags: pulumi.Output<{
        [key: string]: string;
    } | undefined>;
    /**
     * Resource type
     */
    readonly type: pulumi.Output<string>;
    /**
     * Create a Automation resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: AutomationArgs, opts?: pulumi.CustomResourceOptions);
}
/**
 * The set of arguments for constructing a Automation resource.
 */
export interface AutomationArgs {
    /**
     * A collection of the actions which are triggered if all the configured rules evaluations, within at least one rule set, are true.
     */
    actions?: pulumi.Input<pulumi.Input<inputs.security.v20190101preview.AutomationActionEventHubArgs | inputs.security.v20190101preview.AutomationActionLogicAppArgs | inputs.security.v20190101preview.AutomationActionWorkspaceArgs>[]>;
    /**
     * The security automation name.
     */
    automationName?: pulumi.Input<string>;
    /**
     * The security automation description.
     */
    description?: pulumi.Input<string>;
    /**
     * Indicates whether the security automation is enabled.
     */
    isEnabled?: pulumi.Input<boolean>;
    /**
     * Kind of the resource
     */
    kind?: pulumi.Input<string>;
    /**
     * Location where the resource is stored
     */
    location?: pulumi.Input<string>;
    /**
     * The name of the resource group within the user's subscription. The name is case insensitive.
     */
    resourceGroupName: pulumi.Input<string>;
    /**
     * A collection of scopes on which the security automations logic is applied. Supported scopes are the subscription itself or a resource group under that subscription. The automation will only apply on defined scopes.
     */
    scopes?: pulumi.Input<pulumi.Input<inputs.security.v20190101preview.AutomationScopeArgs>[]>;
    /**
     * A collection of the source event types which evaluate the security automation set of rules.
     */
    sources?: pulumi.Input<pulumi.Input<inputs.security.v20190101preview.AutomationSourceArgs>[]>;
    /**
     * A list of key value pairs that describe the resource.
     */
    tags?: pulumi.Input<{
        [key: string]: pulumi.Input<string>;
    }>;
}
