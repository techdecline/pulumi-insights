import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../../types/input";
import * as outputs from "../../types/output";
import * as enums from "../../types/enums";
/**
 * Describes the suppression rule
 */
export declare class AlertsSuppressionRule extends pulumi.CustomResource {
    /**
     * Get an existing AlertsSuppressionRule resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    static get(name: string, id: pulumi.Input<pulumi.ID>, opts?: pulumi.CustomResourceOptions): AlertsSuppressionRule;
    /**
     * Returns true if the given object is an instance of AlertsSuppressionRule.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    static isInstance(obj: any): obj is AlertsSuppressionRule;
    /**
     * Type of the alert to automatically suppress. For all alert types, use '*'
     */
    readonly alertType: pulumi.Output<string>;
    /**
     * Any comment regarding the rule
     */
    readonly comment: pulumi.Output<string | undefined>;
    /**
     * Expiration date of the rule, if value is not provided or provided as null there will no expiration at all
     */
    readonly expirationDateUtc: pulumi.Output<string | undefined>;
    /**
     * The last time this rule was modified
     */
    readonly lastModifiedUtc: pulumi.Output<string>;
    /**
     * Resource name
     */
    readonly name: pulumi.Output<string>;
    /**
     * The reason for dismissing the alert
     */
    readonly reason: pulumi.Output<string>;
    /**
     * Possible states of the rule
     */
    readonly state: pulumi.Output<string>;
    /**
     * The suppression conditions
     */
    readonly suppressionAlertsScope: pulumi.Output<outputs.security.v20190101preview.SuppressionAlertsScopeResponse | undefined>;
    /**
     * Resource type
     */
    readonly type: pulumi.Output<string>;
    /**
     * Create a AlertsSuppressionRule resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: AlertsSuppressionRuleArgs, opts?: pulumi.CustomResourceOptions);
}
/**
 * The set of arguments for constructing a AlertsSuppressionRule resource.
 */
export interface AlertsSuppressionRuleArgs {
    /**
     * Type of the alert to automatically suppress. For all alert types, use '*'
     */
    alertType: pulumi.Input<string>;
    /**
     * The unique name of the suppression alert rule
     */
    alertsSuppressionRuleName?: pulumi.Input<string>;
    /**
     * Any comment regarding the rule
     */
    comment?: pulumi.Input<string>;
    /**
     * Expiration date of the rule, if value is not provided or provided as null there will no expiration at all
     */
    expirationDateUtc?: pulumi.Input<string>;
    /**
     * The reason for dismissing the alert
     */
    reason: pulumi.Input<string>;
    /**
     * Possible states of the rule
     */
    state: pulumi.Input<string | enums.security.v20190101preview.RuleState>;
    /**
     * The suppression conditions
     */
    suppressionAlertsScope?: pulumi.Input<inputs.security.v20190101preview.SuppressionAlertsScopeArgs>;
}
