import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../../types/input";
import * as outputs from "../../types/output";
import * as enums from "../../types/enums";
/**
 * Security Standard on a resource
 */
export declare class Standard extends pulumi.CustomResource {
    /**
     * Get an existing Standard resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    static get(name: string, id: pulumi.Input<pulumi.ID>, opts?: pulumi.CustomResourceOptions): Standard;
    /**
     * Returns true if the given object is an instance of Standard.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    static isInstance(obj: any): obj is Standard;
    /**
     * category of the standard provided
     */
    readonly category: pulumi.Output<string | undefined>;
    /**
     * List of component objects containing component unique keys (such as assessment keys) to apply to standard scope.  Currently only supports assessment keys.
     */
    readonly components: pulumi.Output<outputs.security.v20210801preview.StandardComponentPropertiesResponse[] | undefined>;
    /**
     * description of the standard
     */
    readonly description: pulumi.Output<string | undefined>;
    /**
     * display name of the standard, equivalent to the standardId
     */
    readonly displayName: pulumi.Output<string | undefined>;
    /**
     * Entity tag is used for comparing two or more entities from the same requested resource.
     */
    readonly etag: pulumi.Output<string | undefined>;
    /**
     * Kind of the resource
     */
    readonly kind: pulumi.Output<string | undefined>;
    /**
     * Location where the resource is stored
     */
    readonly location: pulumi.Output<string | undefined>;
    /**
     * Resource name
     */
    readonly name: pulumi.Output<string>;
    /**
     * standard type (Custom or BuiltIn only currently)
     */
    readonly standardType: pulumi.Output<string>;
    /**
     * List of all standard supported clouds.
     */
    readonly supportedClouds: pulumi.Output<string[] | undefined>;
    /**
     * Azure Resource Manager metadata containing createdBy and modifiedBy information.
     */
    readonly systemData: pulumi.Output<outputs.security.v20210801preview.SystemDataResponse>;
    /**
     * A list of key value pairs that describe the resource.
     */
    readonly tags: pulumi.Output<{
        [key: string]: string;
    } | undefined>;
    /**
     * Resource type
     */
    readonly type: pulumi.Output<string>;
    /**
     * Create a Standard resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: StandardArgs, opts?: pulumi.CustomResourceOptions);
}
/**
 * The set of arguments for constructing a Standard resource.
 */
export interface StandardArgs {
    /**
     * category of the standard provided
     */
    category?: pulumi.Input<string>;
    /**
     * List of component objects containing component unique keys (such as assessment keys) to apply to standard scope.  Currently only supports assessment keys.
     */
    components?: pulumi.Input<pulumi.Input<inputs.security.v20210801preview.StandardComponentPropertiesArgs>[]>;
    /**
     * description of the standard
     */
    description?: pulumi.Input<string>;
    /**
     * display name of the standard, equivalent to the standardId
     */
    displayName?: pulumi.Input<string>;
    /**
     * Kind of the resource
     */
    kind?: pulumi.Input<string>;
    /**
     * Location where the resource is stored
     */
    location?: pulumi.Input<string>;
    /**
     * The name of the resource group within the user's subscription. The name is case insensitive.
     */
    resourceGroupName: pulumi.Input<string>;
    /**
     * The Security Standard key - unique key for the standard type
     */
    standardId?: pulumi.Input<string>;
    /**
     * List of all standard supported clouds.
     */
    supportedClouds?: pulumi.Input<pulumi.Input<enums.security.v20210801preview.StandardSupportedClouds>[]>;
    /**
     * A list of key value pairs that describe the resource.
     */
    tags?: pulumi.Input<{
        [key: string]: pulumi.Input<string>;
    }>;
}
