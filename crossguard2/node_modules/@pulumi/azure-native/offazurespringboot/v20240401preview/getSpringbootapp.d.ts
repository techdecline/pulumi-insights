import * as pulumi from "@pulumi/pulumi";
import * as outputs from "../../types/output";
/**
 * Get a springbootapps resource.
 */
export declare function getSpringbootapp(args: GetSpringbootappArgs, opts?: pulumi.InvokeOptions): Promise<GetSpringbootappResult>;
export interface GetSpringbootappArgs {
    /**
     * The name of the resource group. The name is case insensitive.
     */
    resourceGroupName: string;
    /**
     * The springbootsites name.
     */
    siteName: string;
    /**
     * The springbootapps name.
     */
    springbootappsName: string;
}
/**
 * The springbootapps envelope resource definition.
 */
export interface GetSpringbootappResult {
    /**
     * Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
     */
    readonly id: string;
    /**
     * The name of the resource
     */
    readonly name: string;
    /**
     * The springbootapps resource definition.
     */
    readonly properties: outputs.offazurespringboot.v20240401preview.SpringbootappsPropertiesResponse;
    /**
     * Azure Resource Manager metadata containing createdBy and modifiedBy information.
     */
    readonly systemData: outputs.offazurespringboot.v20240401preview.SystemDataResponse;
    /**
     * The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
     */
    readonly type: string;
}
/**
 * Get a springbootapps resource.
 */
export declare function getSpringbootappOutput(args: GetSpringbootappOutputArgs, opts?: pulumi.InvokeOutputOptions): pulumi.Output<GetSpringbootappResult>;
export interface GetSpringbootappOutputArgs {
    /**
     * The name of the resource group. The name is case insensitive.
     */
    resourceGroupName: pulumi.Input<string>;
    /**
     * The springbootsites name.
     */
    siteName: pulumi.Input<string>;
    /**
     * The springbootapps name.
     */
    springbootappsName: pulumi.Input<string>;
}
