import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../../types/input";
import * as outputs from "../../types/output";
import * as enums from "../../types/enums";
/**
 * Represents a scaling plan definition.
 */
export declare class ScalingPlan extends pulumi.CustomResource {
    /**
     * Get an existing ScalingPlan resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    static get(name: string, id: pulumi.Input<pulumi.ID>, opts?: pulumi.CustomResourceOptions): ScalingPlan;
    /**
     * Returns true if the given object is an instance of ScalingPlan.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    static isInstance(obj: any): obj is ScalingPlan;
    /**
     * Description of scaling plan.
     */
    readonly description: pulumi.Output<string | undefined>;
    /**
     * The etag field is *not* required. If it is provided in the response body, it must also be provided as a header per the normal etag convention.  Entity tags are used for comparing two or more entities from the same requested resource. HTTP/1.1 uses entity tags in the etag (section 14.19), If-Match (section 14.24), If-None-Match (section 14.26), and If-Range (section 14.27) header fields.
     */
    readonly etag: pulumi.Output<string>;
    /**
     * Exclusion tag for scaling plan.
     */
    readonly exclusionTag: pulumi.Output<string | undefined>;
    /**
     * User friendly name of scaling plan.
     */
    readonly friendlyName: pulumi.Output<string | undefined>;
    /**
     * List of ScalingHostPoolReference definitions.
     */
    readonly hostPoolReferences: pulumi.Output<outputs.desktopvirtualization.v20240116preview.ScalingHostPoolReferenceResponse[] | undefined>;
    /**
     * HostPool type for desktop.
     */
    readonly hostPoolType: pulumi.Output<string | undefined>;
    readonly identity: pulumi.Output<outputs.desktopvirtualization.v20240116preview.ResourceModelWithAllowedPropertySetResponseIdentity | undefined>;
    /**
     * Metadata used by portal/tooling/etc to render different UX experiences for resources of the same type; e.g. ApiApps are a kind of Microsoft.Web/sites type.  If supported, the resource provider must validate and persist this value.
     */
    readonly kind: pulumi.Output<string | undefined>;
    /**
     * The geo-location where the resource lives
     */
    readonly location: pulumi.Output<string | undefined>;
    /**
     * The fully qualified resource ID of the resource that manages this resource. Indicates if this resource is managed by another Azure resource. If this is present, complete mode deployment will not delete the resource if it is removed from the template since it is managed by another resource.
     */
    readonly managedBy: pulumi.Output<string | undefined>;
    /**
     * The name of the resource
     */
    readonly name: pulumi.Output<string>;
    /**
     * ObjectId of scaling plan. (internal use)
     */
    readonly objectId: pulumi.Output<string>;
    readonly plan: pulumi.Output<outputs.desktopvirtualization.v20240116preview.ResourceModelWithAllowedPropertySetResponsePlan | undefined>;
    /**
     * List of ScalingPlanPooledSchedule definitions.
     */
    readonly schedules: pulumi.Output<outputs.desktopvirtualization.v20240116preview.ScalingScheduleResponse[] | undefined>;
    readonly sku: pulumi.Output<outputs.desktopvirtualization.v20240116preview.ResourceModelWithAllowedPropertySetResponseSku | undefined>;
    /**
     * Metadata pertaining to creation and last modification of the resource.
     */
    readonly systemData: pulumi.Output<outputs.desktopvirtualization.v20240116preview.SystemDataResponse>;
    /**
     * Resource tags.
     */
    readonly tags: pulumi.Output<{
        [key: string]: string;
    } | undefined>;
    /**
     * Timezone of the scaling plan.
     */
    readonly timeZone: pulumi.Output<string>;
    /**
     * The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
     */
    readonly type: pulumi.Output<string>;
    /**
     * Create a ScalingPlan resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: ScalingPlanArgs, opts?: pulumi.CustomResourceOptions);
}
/**
 * The set of arguments for constructing a ScalingPlan resource.
 */
export interface ScalingPlanArgs {
    /**
     * Description of scaling plan.
     */
    description?: pulumi.Input<string>;
    /**
     * Exclusion tag for scaling plan.
     */
    exclusionTag?: pulumi.Input<string>;
    /**
     * User friendly name of scaling plan.
     */
    friendlyName?: pulumi.Input<string>;
    /**
     * List of ScalingHostPoolReference definitions.
     */
    hostPoolReferences?: pulumi.Input<pulumi.Input<inputs.desktopvirtualization.v20240116preview.ScalingHostPoolReferenceArgs>[]>;
    /**
     * HostPool type for desktop.
     */
    hostPoolType?: pulumi.Input<string | enums.desktopvirtualization.v20240116preview.ScalingHostPoolType>;
    identity?: pulumi.Input<inputs.desktopvirtualization.v20240116preview.ResourceModelWithAllowedPropertySetIdentityArgs>;
    /**
     * Metadata used by portal/tooling/etc to render different UX experiences for resources of the same type; e.g. ApiApps are a kind of Microsoft.Web/sites type.  If supported, the resource provider must validate and persist this value.
     */
    kind?: pulumi.Input<string>;
    /**
     * The geo-location where the resource lives
     */
    location?: pulumi.Input<string>;
    /**
     * The fully qualified resource ID of the resource that manages this resource. Indicates if this resource is managed by another Azure resource. If this is present, complete mode deployment will not delete the resource if it is removed from the template since it is managed by another resource.
     */
    managedBy?: pulumi.Input<string>;
    plan?: pulumi.Input<inputs.desktopvirtualization.v20240116preview.ResourceModelWithAllowedPropertySetPlanArgs>;
    /**
     * The name of the resource group. The name is case insensitive.
     */
    resourceGroupName: pulumi.Input<string>;
    /**
     * The name of the scaling plan.
     */
    scalingPlanName?: pulumi.Input<string>;
    /**
     * List of ScalingPlanPooledSchedule definitions.
     */
    schedules?: pulumi.Input<pulumi.Input<inputs.desktopvirtualization.v20240116preview.ScalingScheduleArgs>[]>;
    sku?: pulumi.Input<inputs.desktopvirtualization.v20240116preview.ResourceModelWithAllowedPropertySetSkuArgs>;
    /**
     * Resource tags.
     */
    tags?: pulumi.Input<{
        [key: string]: pulumi.Input<string>;
    }>;
    /**
     * Timezone of the scaling plan.
     */
    timeZone: pulumi.Input<string>;
}
