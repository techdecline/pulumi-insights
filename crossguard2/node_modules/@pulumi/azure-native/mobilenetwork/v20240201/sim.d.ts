import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../../types/input";
import * as outputs from "../../types/output";
/**
 * SIM resource.
 */
export declare class Sim extends pulumi.CustomResource {
    /**
     * Get an existing Sim resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    static get(name: string, id: pulumi.Input<pulumi.ID>, opts?: pulumi.CustomResourceOptions): Sim;
    /**
     * Returns true if the given object is an instance of Sim.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    static isInstance(obj: any): obj is Sim;
    /**
     * An optional free-form text field that can be used to record the device type this SIM is associated with, for example 'Video camera'. The Azure portal allows SIMs to be grouped and filtered based on this value.
     */
    readonly deviceType: pulumi.Output<string | undefined>;
    /**
     * The integrated circuit card ID (ICCID) for the SIM.
     */
    readonly integratedCircuitCardIdentifier: pulumi.Output<string | undefined>;
    /**
     * The international mobile subscriber identity (IMSI) for the SIM.
     */
    readonly internationalMobileSubscriberIdentity: pulumi.Output<string>;
    /**
     * The name of the resource
     */
    readonly name: pulumi.Output<string>;
    /**
     * The provisioning state of the SIM resource.
     */
    readonly provisioningState: pulumi.Output<string>;
    /**
     * The SIM policy used by this SIM. The SIM policy must be in the same location as the SIM.
     */
    readonly simPolicy: pulumi.Output<outputs.mobilenetwork.v20240201.SimPolicyResourceIdResponse | undefined>;
    /**
     * The state of the SIM resource.
     */
    readonly simState: pulumi.Output<string>;
    /**
     * A dictionary of sites to the provisioning state of this SIM on that site.
     */
    readonly siteProvisioningState: pulumi.Output<{
        [key: string]: string;
    }>;
    /**
     * A list of static IP addresses assigned to this SIM. Each address is assigned at a defined network scope, made up of {attached data network, slice}.
     */
    readonly staticIpConfiguration: pulumi.Output<outputs.mobilenetwork.v20240201.SimStaticIpPropertiesResponse[] | undefined>;
    /**
     * Azure Resource Manager metadata containing createdBy and modifiedBy information.
     */
    readonly systemData: pulumi.Output<outputs.mobilenetwork.v20240201.SystemDataResponse>;
    /**
     * The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
     */
    readonly type: pulumi.Output<string>;
    /**
     * The public key fingerprint of the SIM vendor who provided this SIM, if any.
     */
    readonly vendorKeyFingerprint: pulumi.Output<string>;
    /**
     * The name of the SIM vendor who provided this SIM, if any.
     */
    readonly vendorName: pulumi.Output<string>;
    /**
     * Create a Sim resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: SimArgs, opts?: pulumi.CustomResourceOptions);
}
/**
 * The set of arguments for constructing a Sim resource.
 */
export interface SimArgs {
    /**
     * The Ki value for the SIM.
     */
    authenticationKey?: pulumi.Input<string>;
    /**
     * An optional free-form text field that can be used to record the device type this SIM is associated with, for example 'Video camera'. The Azure portal allows SIMs to be grouped and filtered based on this value.
     */
    deviceType?: pulumi.Input<string>;
    /**
     * The integrated circuit card ID (ICCID) for the SIM.
     */
    integratedCircuitCardIdentifier?: pulumi.Input<string>;
    /**
     * The international mobile subscriber identity (IMSI) for the SIM.
     */
    internationalMobileSubscriberIdentity: pulumi.Input<string>;
    /**
     * The Opc value for the SIM.
     */
    operatorKeyCode?: pulumi.Input<string>;
    /**
     * The name of the resource group. The name is case insensitive.
     */
    resourceGroupName: pulumi.Input<string>;
    /**
     * The name of the SIM Group.
     */
    simGroupName: pulumi.Input<string>;
    /**
     * The name of the SIM.
     */
    simName?: pulumi.Input<string>;
    /**
     * The SIM policy used by this SIM. The SIM policy must be in the same location as the SIM.
     */
    simPolicy?: pulumi.Input<inputs.mobilenetwork.v20240201.SimPolicyResourceIdArgs>;
    /**
     * A list of static IP addresses assigned to this SIM. Each address is assigned at a defined network scope, made up of {attached data network, slice}.
     */
    staticIpConfiguration?: pulumi.Input<pulumi.Input<inputs.mobilenetwork.v20240201.SimStaticIpPropertiesArgs>[]>;
}
