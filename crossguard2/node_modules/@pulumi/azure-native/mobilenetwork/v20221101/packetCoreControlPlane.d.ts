import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../../types/input";
import * as outputs from "../../types/output";
import * as enums from "../../types/enums";
/**
 * Packet core control plane resource.
 */
export declare class PacketCoreControlPlane extends pulumi.CustomResource {
    /**
     * Get an existing PacketCoreControlPlane resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    static get(name: string, id: pulumi.Input<pulumi.ID>, opts?: pulumi.CustomResourceOptions): PacketCoreControlPlane;
    /**
     * Returns true if the given object is an instance of PacketCoreControlPlane.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    static isInstance(obj: any): obj is PacketCoreControlPlane;
    /**
     * The control plane interface on the access network. For 5G networks, this is the N2 interface. For 4G networks, this is the S1-MME interface.
     */
    readonly controlPlaneAccessInterface: pulumi.Output<outputs.mobilenetwork.v20221101.InterfacePropertiesResponse>;
    /**
     * The core network technology generation (5G core or EPC / 4G core).
     */
    readonly coreNetworkTechnology: pulumi.Output<string | undefined>;
    /**
     * The identity used to retrieve the ingress certificate from Azure key vault.
     */
    readonly identity: pulumi.Output<outputs.mobilenetwork.v20221101.ManagedServiceIdentityResponse | undefined>;
    /**
     * The installation state of the packet core control plane resource.
     */
    readonly installation: pulumi.Output<outputs.mobilenetwork.v20221101.InstallationResponse>;
    /**
     * Settings to allow interoperability with third party components e.g. RANs and UEs.
     */
    readonly interopSettings: pulumi.Output<any | undefined>;
    /**
     * The kubernetes ingress configuration to control access to packet core diagnostics over local APIs.
     */
    readonly localDiagnosticsAccess: pulumi.Output<outputs.mobilenetwork.v20221101.LocalDiagnosticsAccessConfigurationResponse>;
    /**
     * The geo-location where the resource lives
     */
    readonly location: pulumi.Output<string>;
    /**
     * The name of the resource
     */
    readonly name: pulumi.Output<string>;
    /**
     * The platform where the packet core is deployed.
     */
    readonly platform: pulumi.Output<outputs.mobilenetwork.v20221101.PlatformConfigurationResponse>;
    /**
     * The provisioning state of the packet core control plane resource.
     */
    readonly provisioningState: pulumi.Output<string>;
    /**
     * The previous version of the packet core software that was deployed. Used when performing the rollback action.
     */
    readonly rollbackVersion: pulumi.Output<string>;
    /**
     * Site(s) under which this packet core control plane should be deployed. The sites must be in the same location as the packet core control plane.
     */
    readonly sites: pulumi.Output<outputs.mobilenetwork.v20221101.SiteResourceIdResponse[]>;
    /**
     * The SKU defining the throughput and SIM allowances for this packet core control plane deployment.
     */
    readonly sku: pulumi.Output<string>;
    /**
     * Azure Resource Manager metadata containing createdBy and modifiedBy information.
     */
    readonly systemData: pulumi.Output<outputs.mobilenetwork.v20221101.SystemDataResponse>;
    /**
     * Resource tags.
     */
    readonly tags: pulumi.Output<{
        [key: string]: string;
    } | undefined>;
    /**
     * The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
     */
    readonly type: pulumi.Output<string>;
    /**
     * The MTU (in bytes) signaled to the UE. The same MTU is set on the user plane data links for all data networks. The MTU set on the user plane access link is calculated to be 60 bytes greater than this value to allow for GTP encapsulation.
     */
    readonly ueMtu: pulumi.Output<number | undefined>;
    /**
     * The version of the packet core software that is deployed.
     */
    readonly version: pulumi.Output<string | undefined>;
    /**
     * Create a PacketCoreControlPlane resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: PacketCoreControlPlaneArgs, opts?: pulumi.CustomResourceOptions);
}
/**
 * The set of arguments for constructing a PacketCoreControlPlane resource.
 */
export interface PacketCoreControlPlaneArgs {
    /**
     * The control plane interface on the access network. For 5G networks, this is the N2 interface. For 4G networks, this is the S1-MME interface.
     */
    controlPlaneAccessInterface: pulumi.Input<inputs.mobilenetwork.v20221101.InterfacePropertiesArgs>;
    /**
     * The core network technology generation (5G core or EPC / 4G core).
     */
    coreNetworkTechnology?: pulumi.Input<string | enums.mobilenetwork.v20221101.CoreNetworkType>;
    /**
     * The identity used to retrieve the ingress certificate from Azure key vault.
     */
    identity?: pulumi.Input<inputs.mobilenetwork.v20221101.ManagedServiceIdentityArgs>;
    /**
     * Settings to allow interoperability with third party components e.g. RANs and UEs.
     */
    interopSettings?: any;
    /**
     * The kubernetes ingress configuration to control access to packet core diagnostics over local APIs.
     */
    localDiagnosticsAccess: pulumi.Input<inputs.mobilenetwork.v20221101.LocalDiagnosticsAccessConfigurationArgs>;
    /**
     * The geo-location where the resource lives
     */
    location?: pulumi.Input<string>;
    /**
     * The name of the packet core control plane.
     */
    packetCoreControlPlaneName?: pulumi.Input<string>;
    /**
     * The platform where the packet core is deployed.
     */
    platform: pulumi.Input<inputs.mobilenetwork.v20221101.PlatformConfigurationArgs>;
    /**
     * The name of the resource group. The name is case insensitive.
     */
    resourceGroupName: pulumi.Input<string>;
    /**
     * Site(s) under which this packet core control plane should be deployed. The sites must be in the same location as the packet core control plane.
     */
    sites: pulumi.Input<pulumi.Input<inputs.mobilenetwork.v20221101.SiteResourceIdArgs>[]>;
    /**
     * The SKU defining the throughput and SIM allowances for this packet core control plane deployment.
     */
    sku: pulumi.Input<string | enums.mobilenetwork.v20221101.BillingSku>;
    /**
     * Resource tags.
     */
    tags?: pulumi.Input<{
        [key: string]: pulumi.Input<string>;
    }>;
    /**
     * The MTU (in bytes) signaled to the UE. The same MTU is set on the user plane data links for all data networks. The MTU set on the user plane access link is calculated to be 60 bytes greater than this value to allow for GTP encapsulation.
     */
    ueMtu?: pulumi.Input<number>;
    /**
     * The version of the packet core software that is deployed.
     */
    version?: pulumi.Input<string>;
}
