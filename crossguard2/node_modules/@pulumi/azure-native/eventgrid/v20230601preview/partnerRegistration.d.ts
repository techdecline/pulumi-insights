import * as pulumi from "@pulumi/pulumi";
import * as outputs from "../../types/output";
/**
 * Information about a partner registration.
 */
export declare class PartnerRegistration extends pulumi.CustomResource {
    /**
     * Get an existing PartnerRegistration resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    static get(name: string, id: pulumi.Input<pulumi.ID>, opts?: pulumi.CustomResourceOptions): PartnerRegistration;
    /**
     * Returns true if the given object is an instance of PartnerRegistration.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    static isInstance(obj: any): obj is PartnerRegistration;
    /**
     * Location of the resource.
     */
    readonly location: pulumi.Output<string>;
    /**
     * Name of the resource.
     */
    readonly name: pulumi.Output<string>;
    /**
     * The immutableId of the corresponding partner registration.
     * Note: This property is marked for deprecation and is not supported in any future GA API version
     */
    readonly partnerRegistrationImmutableId: pulumi.Output<string | undefined>;
    /**
     * Provisioning state of the partner registration.
     */
    readonly provisioningState: pulumi.Output<string>;
    /**
     * The system metadata relating to Partner Registration resource.
     */
    readonly systemData: pulumi.Output<outputs.eventgrid.v20230601preview.SystemDataResponse>;
    /**
     * Tags of the resource.
     */
    readonly tags: pulumi.Output<{
        [key: string]: string;
    } | undefined>;
    /**
     * Type of the resource.
     */
    readonly type: pulumi.Output<string>;
    /**
     * Create a PartnerRegistration resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: PartnerRegistrationArgs, opts?: pulumi.CustomResourceOptions);
}
/**
 * The set of arguments for constructing a PartnerRegistration resource.
 */
export interface PartnerRegistrationArgs {
    /**
     * Location of the resource.
     */
    location?: pulumi.Input<string>;
    /**
     * The immutableId of the corresponding partner registration.
     * Note: This property is marked for deprecation and is not supported in any future GA API version
     */
    partnerRegistrationImmutableId?: pulumi.Input<string>;
    /**
     * Name of the partner registration.
     */
    partnerRegistrationName?: pulumi.Input<string>;
    /**
     * The name of the resource group within the user's subscription.
     */
    resourceGroupName: pulumi.Input<string>;
    /**
     * Tags of the resource.
     */
    tags?: pulumi.Input<{
        [key: string]: pulumi.Input<string>;
    }>;
}
