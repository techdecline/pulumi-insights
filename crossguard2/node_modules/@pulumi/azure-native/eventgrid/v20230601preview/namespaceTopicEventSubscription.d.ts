import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../../types/input";
import * as outputs from "../../types/output";
import * as enums from "../../types/enums";
/**
 * Event Subscription.
 */
export declare class NamespaceTopicEventSubscription extends pulumi.CustomResource {
    /**
     * Get an existing NamespaceTopicEventSubscription resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    static get(name: string, id: pulumi.Input<pulumi.ID>, opts?: pulumi.CustomResourceOptions): NamespaceTopicEventSubscription;
    /**
     * Returns true if the given object is an instance of NamespaceTopicEventSubscription.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    static isInstance(obj: any): obj is NamespaceTopicEventSubscription;
    /**
     * Information about the delivery configuration of the event subscription.
     */
    readonly deliveryConfiguration: pulumi.Output<outputs.eventgrid.v20230601preview.DeliveryConfigurationResponse | undefined>;
    /**
     * The event delivery schema for the event subscription.
     */
    readonly eventDeliverySchema: pulumi.Output<string | undefined>;
    /**
     * Information about the filter for the event subscription.
     */
    readonly filtersConfiguration: pulumi.Output<outputs.eventgrid.v20230601preview.FiltersConfigurationResponse | undefined>;
    /**
     * Name of the resource.
     */
    readonly name: pulumi.Output<string>;
    /**
     * Provisioning state of the event subscription.
     */
    readonly provisioningState: pulumi.Output<string>;
    /**
     * The system metadata relating to Event Subscription resource.
     */
    readonly systemData: pulumi.Output<outputs.eventgrid.v20230601preview.SystemDataResponse>;
    /**
     * Type of the resource.
     */
    readonly type: pulumi.Output<string>;
    /**
     * Create a NamespaceTopicEventSubscription resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: NamespaceTopicEventSubscriptionArgs, opts?: pulumi.CustomResourceOptions);
}
/**
 * The set of arguments for constructing a NamespaceTopicEventSubscription resource.
 */
export interface NamespaceTopicEventSubscriptionArgs {
    /**
     * Information about the delivery configuration of the event subscription.
     */
    deliveryConfiguration?: pulumi.Input<inputs.eventgrid.v20230601preview.DeliveryConfigurationArgs>;
    /**
     * The event delivery schema for the event subscription.
     */
    eventDeliverySchema?: pulumi.Input<string | enums.eventgrid.v20230601preview.DeliverySchema>;
    /**
     * Name of the event subscription to be created. Event subscription names must be between 3 and 100 characters in length and use alphanumeric letters only.
     */
    eventSubscriptionName?: pulumi.Input<string>;
    /**
     * Information about the filter for the event subscription.
     */
    filtersConfiguration?: pulumi.Input<inputs.eventgrid.v20230601preview.FiltersConfigurationArgs>;
    /**
     * Name of the namespace.
     */
    namespaceName: pulumi.Input<string>;
    /**
     * The name of the resource group within the user's subscription.
     */
    resourceGroupName: pulumi.Input<string>;
    /**
     * Name of the namespace topic.
     */
    topicName: pulumi.Input<string>;
}
