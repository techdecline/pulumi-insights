import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../../types/input";
import * as outputs from "../../types/output";
import * as enums from "../../types/enums";
/**
 * EventGrid Topic
 */
export declare class Topic extends pulumi.CustomResource {
    /**
     * Get an existing Topic resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    static get(name: string, id: pulumi.Input<pulumi.ID>, opts?: pulumi.CustomResourceOptions): Topic;
    /**
     * Returns true if the given object is an instance of Topic.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    static isInstance(obj: any): obj is Topic;
    /**
     * Data Residency Boundary of the resource.
     */
    readonly dataResidencyBoundary: pulumi.Output<string | undefined>;
    /**
     * This boolean is used to enable or disable local auth. Default value is false. When the property is set to true, only AAD token will be used to authenticate if user is allowed to publish to the topic.
     */
    readonly disableLocalAuth: pulumi.Output<boolean | undefined>;
    /**
     * Endpoint for the topic.
     */
    readonly endpoint: pulumi.Output<string>;
    /**
     * Event Type Information for the user topic. This information is provided by the publisher and can be used by the
     * subscriber to view different types of events that are published.
     */
    readonly eventTypeInfo: pulumi.Output<outputs.eventgrid.v20231215preview.EventTypeInfoResponse | undefined>;
    /**
     * Extended location of the resource.
     */
    readonly extendedLocation: pulumi.Output<outputs.eventgrid.v20231215preview.ExtendedLocationResponse | undefined>;
    /**
     * Identity information for the resource.
     */
    readonly identity: pulumi.Output<outputs.eventgrid.v20231215preview.IdentityInfoResponse | undefined>;
    /**
     * This can be used to restrict traffic from specific IPs instead of all IPs. Note: These are considered only if PublicNetworkAccess is enabled.
     */
    readonly inboundIpRules: pulumi.Output<outputs.eventgrid.v20231215preview.InboundIpRuleResponse[] | undefined>;
    /**
     * This determines the format that Event Grid should expect for incoming events published to the topic.
     */
    readonly inputSchema: pulumi.Output<string | undefined>;
    /**
     * This enables publishing using custom event schemas. An InputSchemaMapping can be specified to map various properties of a source schema to various required properties of the EventGridEvent schema.
     */
    readonly inputSchemaMapping: pulumi.Output<outputs.eventgrid.v20231215preview.JsonInputSchemaMappingResponse | undefined>;
    /**
     * Kind of the resource.
     */
    readonly kind: pulumi.Output<string | undefined>;
    /**
     * Location of the resource.
     */
    readonly location: pulumi.Output<string>;
    /**
     * Metric resource id for the topic.
     */
    readonly metricResourceId: pulumi.Output<string>;
    /**
     * Minimum TLS version of the publisher allowed to publish to this topic
     */
    readonly minimumTlsVersionAllowed: pulumi.Output<string | undefined>;
    /**
     * Name of the resource.
     */
    readonly name: pulumi.Output<string>;
    readonly privateEndpointConnections: pulumi.Output<outputs.eventgrid.v20231215preview.PrivateEndpointConnectionResponse[]>;
    /**
     * Provisioning state of the topic.
     */
    readonly provisioningState: pulumi.Output<string>;
    /**
     * This determines if traffic is allowed over public network. By default it is enabled.
     * You can further restrict to specific IPs by configuring <seealso cref="P:Microsoft.Azure.Events.ResourceProvider.Common.Contracts.TopicProperties.InboundIpRules" />
     */
    readonly publicNetworkAccess: pulumi.Output<string | undefined>;
    /**
     * The Sku pricing tier for the topic.
     */
    readonly sku: pulumi.Output<outputs.eventgrid.v20231215preview.ResourceSkuResponse | undefined>;
    /**
     * The system metadata relating to Topic resource.
     */
    readonly systemData: pulumi.Output<outputs.eventgrid.v20231215preview.SystemDataResponse>;
    /**
     * Tags of the resource.
     */
    readonly tags: pulumi.Output<{
        [key: string]: string;
    } | undefined>;
    /**
     * Type of the resource.
     */
    readonly type: pulumi.Output<string>;
    /**
     * Create a Topic resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: TopicArgs, opts?: pulumi.CustomResourceOptions);
}
/**
 * The set of arguments for constructing a Topic resource.
 */
export interface TopicArgs {
    /**
     * Data Residency Boundary of the resource.
     */
    dataResidencyBoundary?: pulumi.Input<string | enums.eventgrid.v20231215preview.DataResidencyBoundary>;
    /**
     * This boolean is used to enable or disable local auth. Default value is false. When the property is set to true, only AAD token will be used to authenticate if user is allowed to publish to the topic.
     */
    disableLocalAuth?: pulumi.Input<boolean>;
    /**
     * Event Type Information for the user topic. This information is provided by the publisher and can be used by the
     * subscriber to view different types of events that are published.
     */
    eventTypeInfo?: pulumi.Input<inputs.eventgrid.v20231215preview.EventTypeInfoArgs>;
    /**
     * Extended location of the resource.
     */
    extendedLocation?: pulumi.Input<inputs.eventgrid.v20231215preview.ExtendedLocationArgs>;
    /**
     * Identity information for the resource.
     */
    identity?: pulumi.Input<inputs.eventgrid.v20231215preview.IdentityInfoArgs>;
    /**
     * This can be used to restrict traffic from specific IPs instead of all IPs. Note: These are considered only if PublicNetworkAccess is enabled.
     */
    inboundIpRules?: pulumi.Input<pulumi.Input<inputs.eventgrid.v20231215preview.InboundIpRuleArgs>[]>;
    /**
     * This determines the format that Event Grid should expect for incoming events published to the topic.
     */
    inputSchema?: pulumi.Input<string | enums.eventgrid.v20231215preview.InputSchema>;
    /**
     * This enables publishing using custom event schemas. An InputSchemaMapping can be specified to map various properties of a source schema to various required properties of the EventGridEvent schema.
     */
    inputSchemaMapping?: pulumi.Input<inputs.eventgrid.v20231215preview.JsonInputSchemaMappingArgs>;
    /**
     * Kind of the resource.
     */
    kind?: pulumi.Input<string | enums.eventgrid.v20231215preview.ResourceKind>;
    /**
     * Location of the resource.
     */
    location?: pulumi.Input<string>;
    /**
     * Minimum TLS version of the publisher allowed to publish to this topic
     */
    minimumTlsVersionAllowed?: pulumi.Input<string | enums.eventgrid.v20231215preview.TlsVersion>;
    /**
     * This determines if traffic is allowed over public network. By default it is enabled.
     * You can further restrict to specific IPs by configuring <seealso cref="P:Microsoft.Azure.Events.ResourceProvider.Common.Contracts.TopicProperties.InboundIpRules" />
     */
    publicNetworkAccess?: pulumi.Input<string | enums.eventgrid.v20231215preview.PublicNetworkAccess>;
    /**
     * The name of the resource group within the user's subscription.
     */
    resourceGroupName: pulumi.Input<string>;
    /**
     * The Sku pricing tier for the topic.
     */
    sku?: pulumi.Input<inputs.eventgrid.v20231215preview.ResourceSkuArgs>;
    /**
     * Tags of the resource.
     */
    tags?: pulumi.Input<{
        [key: string]: pulumi.Input<string>;
    }>;
    /**
     * Name of the topic.
     */
    topicName?: pulumi.Input<string>;
}
