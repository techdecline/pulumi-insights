import * as pulumi from "@pulumi/pulumi";
import * as outputs from "../../types/output";
/**
 * The Topic space resource.
 */
export declare class TopicSpace extends pulumi.CustomResource {
    /**
     * Get an existing TopicSpace resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    static get(name: string, id: pulumi.Input<pulumi.ID>, opts?: pulumi.CustomResourceOptions): TopicSpace;
    /**
     * Returns true if the given object is an instance of TopicSpace.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    static isInstance(obj: any): obj is TopicSpace;
    /**
     * Description for the Topic Space resource.
     */
    readonly description: pulumi.Output<string | undefined>;
    /**
     * Name of the resource.
     */
    readonly name: pulumi.Output<string>;
    /**
     * Provisioning state of the TopicSpace resource.
     */
    readonly provisioningState: pulumi.Output<string>;
    /**
     * The system metadata relating to the TopicSpace resource.
     */
    readonly systemData: pulumi.Output<outputs.eventgrid.v20231215preview.SystemDataResponse>;
    /**
     * The topic filters in the topic space.
     * Example: "topicTemplates": [
     *               "devices/foo/bar",
     *               "devices/topic1/+",
     *               "devices/${principal.name}/${principal.attributes.keyName}" ].
     */
    readonly topicTemplates: pulumi.Output<string[] | undefined>;
    /**
     * Type of the resource.
     */
    readonly type: pulumi.Output<string>;
    /**
     * Create a TopicSpace resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: TopicSpaceArgs, opts?: pulumi.CustomResourceOptions);
}
/**
 * The set of arguments for constructing a TopicSpace resource.
 */
export interface TopicSpaceArgs {
    /**
     * Description for the Topic Space resource.
     */
    description?: pulumi.Input<string>;
    /**
     * Name of the namespace.
     */
    namespaceName: pulumi.Input<string>;
    /**
     * The name of the resource group within the user's subscription.
     */
    resourceGroupName: pulumi.Input<string>;
    /**
     * The topic space name.
     */
    topicSpaceName?: pulumi.Input<string>;
    /**
     * The topic filters in the topic space.
     * Example: "topicTemplates": [
     *               "devices/foo/bar",
     *               "devices/topic1/+",
     *               "devices/${principal.name}/${principal.attributes.keyName}" ].
     */
    topicTemplates?: pulumi.Input<pulumi.Input<string>[]>;
}
