import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../../types/input";
import * as outputs from "../../types/output";
/**
 * EventGrid System Topic.
 */
export declare class SystemTopic extends pulumi.CustomResource {
    /**
     * Get an existing SystemTopic resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    static get(name: string, id: pulumi.Input<pulumi.ID>, opts?: pulumi.CustomResourceOptions): SystemTopic;
    /**
     * Returns true if the given object is an instance of SystemTopic.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    static isInstance(obj: any): obj is SystemTopic;
    /**
     * Identity information for the resource.
     */
    readonly identity: pulumi.Output<outputs.eventgrid.v20231215preview.IdentityInfoResponse | undefined>;
    /**
     * Location of the resource.
     */
    readonly location: pulumi.Output<string>;
    /**
     * Metric resource id for the system topic.
     */
    readonly metricResourceId: pulumi.Output<string>;
    /**
     * Name of the resource.
     */
    readonly name: pulumi.Output<string>;
    /**
     * Provisioning state of the system topic.
     */
    readonly provisioningState: pulumi.Output<string>;
    /**
     * Source for the system topic.
     */
    readonly source: pulumi.Output<string | undefined>;
    /**
     * The system metadata relating to System Topic resource.
     */
    readonly systemData: pulumi.Output<outputs.eventgrid.v20231215preview.SystemDataResponse>;
    /**
     * Tags of the resource.
     */
    readonly tags: pulumi.Output<{
        [key: string]: string;
    } | undefined>;
    /**
     * TopicType for the system topic.
     */
    readonly topicType: pulumi.Output<string | undefined>;
    /**
     * Type of the resource.
     */
    readonly type: pulumi.Output<string>;
    /**
     * Create a SystemTopic resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: SystemTopicArgs, opts?: pulumi.CustomResourceOptions);
}
/**
 * The set of arguments for constructing a SystemTopic resource.
 */
export interface SystemTopicArgs {
    /**
     * Identity information for the resource.
     */
    identity?: pulumi.Input<inputs.eventgrid.v20231215preview.IdentityInfoArgs>;
    /**
     * Location of the resource.
     */
    location?: pulumi.Input<string>;
    /**
     * The name of the resource group within the user's subscription.
     */
    resourceGroupName: pulumi.Input<string>;
    /**
     * Source for the system topic.
     */
    source?: pulumi.Input<string>;
    /**
     * Name of the system topic.
     */
    systemTopicName?: pulumi.Input<string>;
    /**
     * Tags of the resource.
     */
    tags?: pulumi.Input<{
        [key: string]: pulumi.Input<string>;
    }>;
    /**
     * TopicType for the system topic.
     */
    topicType?: pulumi.Input<string>;
}
