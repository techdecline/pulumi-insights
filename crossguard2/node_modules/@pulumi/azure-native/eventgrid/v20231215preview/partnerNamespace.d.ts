import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../../types/input";
import * as outputs from "../../types/output";
import * as enums from "../../types/enums";
/**
 * EventGrid Partner Namespace.
 */
export declare class PartnerNamespace extends pulumi.CustomResource {
    /**
     * Get an existing PartnerNamespace resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    static get(name: string, id: pulumi.Input<pulumi.ID>, opts?: pulumi.CustomResourceOptions): PartnerNamespace;
    /**
     * Returns true if the given object is an instance of PartnerNamespace.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    static isInstance(obj: any): obj is PartnerNamespace;
    /**
     * This boolean is used to enable or disable local auth. Default value is false. When the property is set to true, only AAD token will be used to authenticate if user is allowed to publish to the partner namespace.
     */
    readonly disableLocalAuth: pulumi.Output<boolean | undefined>;
    /**
     * Endpoint for the partner namespace.
     */
    readonly endpoint: pulumi.Output<string>;
    /**
     * This can be used to restrict traffic from specific IPs instead of all IPs. Note: These are considered only if PublicNetworkAccess is enabled.
     */
    readonly inboundIpRules: pulumi.Output<outputs.eventgrid.v20231215preview.InboundIpRuleResponse[] | undefined>;
    /**
     * Location of the resource.
     */
    readonly location: pulumi.Output<string>;
    /**
     * Minimum TLS version of the publisher allowed to publish to this partner namespace
     */
    readonly minimumTlsVersionAllowed: pulumi.Output<string | undefined>;
    /**
     * Name of the resource.
     */
    readonly name: pulumi.Output<string>;
    /**
     * The fully qualified ARM Id of the partner registration that should be associated with this partner namespace. This takes the following format:
     * /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.EventGrid/partnerRegistrations/{partnerRegistrationName}.
     */
    readonly partnerRegistrationFullyQualifiedId: pulumi.Output<string | undefined>;
    /**
     * This determines if events published to this partner namespace should use the source attribute in the event payload
     * or use the channel name in the header when matching to the partner topic. If none is specified, source attribute routing will be used to match the partner topic.
     */
    readonly partnerTopicRoutingMode: pulumi.Output<string | undefined>;
    readonly privateEndpointConnections: pulumi.Output<outputs.eventgrid.v20231215preview.PrivateEndpointConnectionResponse[]>;
    /**
     * Provisioning state of the partner namespace.
     */
    readonly provisioningState: pulumi.Output<string>;
    /**
     * This determines if traffic is allowed over public network. By default it is enabled.
     * You can further restrict to specific IPs by configuring <seealso cref="P:Microsoft.Azure.Events.ResourceProvider.Common.Contracts.PartnerNamespaceProperties.InboundIpRules" />
     */
    readonly publicNetworkAccess: pulumi.Output<string | undefined>;
    /**
     * The system metadata relating to Partner Namespace resource.
     */
    readonly systemData: pulumi.Output<outputs.eventgrid.v20231215preview.SystemDataResponse>;
    /**
     * Tags of the resource.
     */
    readonly tags: pulumi.Output<{
        [key: string]: string;
    } | undefined>;
    /**
     * Type of the resource.
     */
    readonly type: pulumi.Output<string>;
    /**
     * Create a PartnerNamespace resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: PartnerNamespaceArgs, opts?: pulumi.CustomResourceOptions);
}
/**
 * The set of arguments for constructing a PartnerNamespace resource.
 */
export interface PartnerNamespaceArgs {
    /**
     * This boolean is used to enable or disable local auth. Default value is false. When the property is set to true, only AAD token will be used to authenticate if user is allowed to publish to the partner namespace.
     */
    disableLocalAuth?: pulumi.Input<boolean>;
    /**
     * This can be used to restrict traffic from specific IPs instead of all IPs. Note: These are considered only if PublicNetworkAccess is enabled.
     */
    inboundIpRules?: pulumi.Input<pulumi.Input<inputs.eventgrid.v20231215preview.InboundIpRuleArgs>[]>;
    /**
     * Location of the resource.
     */
    location?: pulumi.Input<string>;
    /**
     * Minimum TLS version of the publisher allowed to publish to this partner namespace
     */
    minimumTlsVersionAllowed?: pulumi.Input<string | enums.eventgrid.v20231215preview.TlsVersion>;
    /**
     * Name of the partner namespace.
     */
    partnerNamespaceName?: pulumi.Input<string>;
    /**
     * The fully qualified ARM Id of the partner registration that should be associated with this partner namespace. This takes the following format:
     * /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.EventGrid/partnerRegistrations/{partnerRegistrationName}.
     */
    partnerRegistrationFullyQualifiedId?: pulumi.Input<string>;
    /**
     * This determines if events published to this partner namespace should use the source attribute in the event payload
     * or use the channel name in the header when matching to the partner topic. If none is specified, source attribute routing will be used to match the partner topic.
     */
    partnerTopicRoutingMode?: pulumi.Input<string | enums.eventgrid.v20231215preview.PartnerTopicRoutingMode>;
    /**
     * This determines if traffic is allowed over public network. By default it is enabled.
     * You can further restrict to specific IPs by configuring <seealso cref="P:Microsoft.Azure.Events.ResourceProvider.Common.Contracts.PartnerNamespaceProperties.InboundIpRules" />
     */
    publicNetworkAccess?: pulumi.Input<string | enums.eventgrid.v20231215preview.PublicNetworkAccess>;
    /**
     * The name of the resource group within the user's subscription.
     */
    resourceGroupName: pulumi.Input<string>;
    /**
     * Tags of the resource.
     */
    tags?: pulumi.Input<{
        [key: string]: pulumi.Input<string>;
    }>;
}
