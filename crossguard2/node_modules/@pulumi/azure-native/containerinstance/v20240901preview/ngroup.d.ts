import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../../types/input";
import * as outputs from "../../types/output";
/**
 * Describes a nGroup.
 */
export declare class NGroup extends pulumi.CustomResource {
    /**
     * Get an existing NGroup resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    static get(name: string, id: pulumi.Input<pulumi.ID>, opts?: pulumi.CustomResourceOptions): NGroup;
    /**
     * Returns true if the given object is an instance of NGroup.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    static isInstance(obj: any): obj is NGroup;
    /**
     * The Container Group Profiles that could be used in a nGroup.
     */
    readonly containerGroupProfiles: pulumi.Output<outputs.containerinstance.v20240901preview.ContainerGroupProfileStubResponse[] | undefined>;
    /**
     * The elastic profile.
     */
    readonly elasticProfile: pulumi.Output<outputs.containerinstance.v20240901preview.ElasticProfileResponse | undefined>;
    /**
     * The identity of the nGroup, if configured.
     */
    readonly identity: pulumi.Output<outputs.containerinstance.v20240901preview.NGroupIdentityResponse | undefined>;
    /**
     * The resource location.
     */
    readonly location: pulumi.Output<string | undefined>;
    /**
     * The resource name.
     */
    readonly name: pulumi.Output<string>;
    /**
     * The provisioning state, which only appears in the response.
     */
    readonly provisioningState: pulumi.Output<string>;
    /**
     * Metadata pertaining to creation and last modification of the resource.
     */
    readonly systemData: pulumi.Output<outputs.containerinstance.v20240901preview.SystemDataResponse>;
    /**
     * The resource tags.
     */
    readonly tags: pulumi.Output<{
        [key: string]: string;
    } | undefined>;
    /**
     * The resource type.
     */
    readonly type: pulumi.Output<string>;
    /**
     * The zones for the container group.
     */
    readonly zones: pulumi.Output<string[] | undefined>;
    /**
     * Create a NGroup resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: NGroupArgs, opts?: pulumi.CustomResourceOptions);
}
/**
 * The set of arguments for constructing a NGroup resource.
 */
export interface NGroupArgs {
    /**
     * The Container Group Profiles that could be used in a nGroup.
     */
    containerGroupProfiles?: pulumi.Input<pulumi.Input<inputs.containerinstance.v20240901preview.ContainerGroupProfileStubArgs>[]>;
    /**
     * The elastic profile.
     */
    elasticProfile?: pulumi.Input<inputs.containerinstance.v20240901preview.ElasticProfileArgs>;
    /**
     * The identity of the nGroup, if configured.
     */
    identity?: pulumi.Input<inputs.containerinstance.v20240901preview.NGroupIdentityArgs>;
    /**
     * The resource location.
     */
    location?: pulumi.Input<string>;
    /**
     * The N Groups name.
     */
    ngroupsName?: pulumi.Input<string>;
    /**
     * The name of the resource group.
     */
    resourceGroupName: pulumi.Input<string>;
    /**
     * The resource tags.
     */
    tags?: pulumi.Input<{
        [key: string]: pulumi.Input<string>;
    }>;
    /**
     * The zones for the container group.
     */
    zones?: pulumi.Input<pulumi.Input<string>[]>;
}
