import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as enums from "../types/enums";
/**
 * Define the Virtual Instance for SAP solutions resource.
 * Azure REST API version: 2023-04-01. Prior API version in Azure Native 1.x: 2021-12-01-preview.
 *
 * Other available API versions: 2023-10-01-preview.
 */
export declare class SAPVirtualInstance extends pulumi.CustomResource {
    /**
     * Get an existing SAPVirtualInstance resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    static get(name: string, id: pulumi.Input<pulumi.ID>, opts?: pulumi.CustomResourceOptions): SAPVirtualInstance;
    /**
     * Returns true if the given object is an instance of SAPVirtualInstance.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    static isInstance(obj: any): obj is SAPVirtualInstance;
    /**
     * Defines if the SAP system is being created using Azure Center for SAP solutions (ACSS) or if an existing SAP system is being registered with ACSS
     */
    readonly configuration: pulumi.Output<outputs.workloads.DeploymentConfigurationResponse | outputs.workloads.DeploymentWithOSConfigurationResponse | outputs.workloads.DiscoveryConfigurationResponse>;
    /**
     * Defines the environment type - Production/Non Production.
     */
    readonly environment: pulumi.Output<string>;
    /**
     * Indicates any errors on the Virtual Instance for SAP solutions resource.
     */
    readonly errors: pulumi.Output<outputs.workloads.SAPVirtualInstanceErrorResponse>;
    /**
     * Defines the health of SAP Instances.
     */
    readonly health: pulumi.Output<string>;
    /**
     * A pre-created user assigned identity with appropriate roles assigned. To learn more on identity and roles required, visit the ACSS how-to-guide.
     */
    readonly identity: pulumi.Output<outputs.workloads.UserAssignedServiceIdentityResponse | undefined>;
    /**
     * The geo-location where the resource lives
     */
    readonly location: pulumi.Output<string>;
    /**
     * Managed resource group configuration
     */
    readonly managedResourceGroupConfiguration: pulumi.Output<outputs.workloads.ManagedRGConfigurationResponse | undefined>;
    /**
     * The name of the resource
     */
    readonly name: pulumi.Output<string>;
    /**
     * Defines the provisioning states.
     */
    readonly provisioningState: pulumi.Output<string>;
    /**
     * Defines the SAP Product type.
     */
    readonly sapProduct: pulumi.Output<string>;
    /**
     * Defines the Virtual Instance for SAP state.
     */
    readonly state: pulumi.Output<string>;
    /**
     * Defines the SAP Instance status.
     */
    readonly status: pulumi.Output<string>;
    /**
     * Azure Resource Manager metadata containing createdBy and modifiedBy information.
     */
    readonly systemData: pulumi.Output<outputs.workloads.SystemDataResponse>;
    /**
     * Resource tags.
     */
    readonly tags: pulumi.Output<{
        [key: string]: string;
    } | undefined>;
    /**
     * The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
     */
    readonly type: pulumi.Output<string>;
    /**
     * Create a SAPVirtualInstance resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: SAPVirtualInstanceArgs, opts?: pulumi.CustomResourceOptions);
}
/**
 * The set of arguments for constructing a SAPVirtualInstance resource.
 */
export interface SAPVirtualInstanceArgs {
    /**
     * Defines if the SAP system is being created using Azure Center for SAP solutions (ACSS) or if an existing SAP system is being registered with ACSS
     */
    configuration: pulumi.Input<inputs.workloads.DeploymentConfigurationArgs | inputs.workloads.DeploymentWithOSConfigurationArgs | inputs.workloads.DiscoveryConfigurationArgs>;
    /**
     * Defines the environment type - Production/Non Production.
     */
    environment: pulumi.Input<string | enums.workloads.SAPEnvironmentType>;
    /**
     * A pre-created user assigned identity with appropriate roles assigned. To learn more on identity and roles required, visit the ACSS how-to-guide.
     */
    identity?: pulumi.Input<inputs.workloads.UserAssignedServiceIdentityArgs>;
    /**
     * The geo-location where the resource lives
     */
    location?: pulumi.Input<string>;
    /**
     * Managed resource group configuration
     */
    managedResourceGroupConfiguration?: pulumi.Input<inputs.workloads.ManagedRGConfigurationArgs>;
    /**
     * The name of the resource group. The name is case insensitive.
     */
    resourceGroupName: pulumi.Input<string>;
    /**
     * Defines the SAP Product type.
     */
    sapProduct: pulumi.Input<string | enums.workloads.SAPProductType>;
    /**
     * The name of the Virtual Instances for SAP solutions resource
     */
    sapVirtualInstanceName?: pulumi.Input<string>;
    /**
     * Resource tags.
     */
    tags?: pulumi.Input<{
        [key: string]: pulumi.Input<string>;
    }>;
}
