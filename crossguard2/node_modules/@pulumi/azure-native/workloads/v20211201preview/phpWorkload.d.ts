import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../../types/input";
import * as outputs from "../../types/output";
import * as enums from "../../types/enums";
/**
 * Php workload resource
 */
export declare class PhpWorkload extends pulumi.CustomResource {
    /**
     * Get an existing PhpWorkload resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    static get(name: string, id: pulumi.Input<pulumi.ID>, opts?: pulumi.CustomResourceOptions): PhpWorkload;
    /**
     * Returns true if the given object is an instance of PhpWorkload.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    static isInstance(obj: any): obj is PhpWorkload;
    /**
     * Admin user profile used for VM and VMSS
     */
    readonly adminUserProfile: pulumi.Output<outputs.workloads.v20211201preview.UserProfileResponse>;
    /**
     * The infra resources for PHP workload will be created in this location
     */
    readonly appLocation: pulumi.Output<string>;
    /**
     * Backup profile
     */
    readonly backupProfile: pulumi.Output<outputs.workloads.v20211201preview.BackupProfileResponse | undefined>;
    /**
     * Cache profile
     */
    readonly cacheProfile: pulumi.Output<outputs.workloads.v20211201preview.CacheProfileResponse | undefined>;
    /**
     * Controller VM profile
     */
    readonly controllerProfile: pulumi.Output<outputs.workloads.v20211201preview.NodeProfileResponse>;
    /**
     * Database profile
     */
    readonly databaseProfile: pulumi.Output<outputs.workloads.v20211201preview.DatabaseProfileResponse>;
    /**
     * File share profile
     */
    readonly fileshareProfile: pulumi.Output<outputs.workloads.v20211201preview.FileshareProfileResponse | undefined>;
    /**
     * Identity for the resource. Currently not supported
     */
    readonly identity: pulumi.Output<outputs.workloads.v20211201preview.PhpWorkloadResourceResponseIdentity | undefined>;
    /**
     * Indicates which kind of php workload this resource represent e.g WordPress
     */
    readonly kind: pulumi.Output<string>;
    /**
     * The geo-location where the resource lives
     */
    readonly location: pulumi.Output<string>;
    /**
     * Managed resource group configuration of the workload
     */
    readonly managedResourceGroupConfiguration: pulumi.Output<outputs.workloads.v20211201preview.ManagedRGConfigurationResponse | undefined>;
    /**
     * The name of the resource
     */
    readonly name: pulumi.Output<string>;
    /**
     * Network profile
     */
    readonly networkProfile: pulumi.Output<outputs.workloads.v20211201preview.NetworkProfileResponse | undefined>;
    /**
     * PHP profile
     */
    readonly phpProfile: pulumi.Output<outputs.workloads.v20211201preview.PhpProfileResponse | undefined>;
    /**
     * Php workload resource provisioning state
     */
    readonly provisioningState: pulumi.Output<string>;
    /**
     * Search profile
     */
    readonly searchProfile: pulumi.Output<outputs.workloads.v20211201preview.SearchProfileResponse | undefined>;
    /**
     * Site profile
     */
    readonly siteProfile: pulumi.Output<outputs.workloads.v20211201preview.SiteProfileResponse | undefined>;
    /**
     * Php workloads SKU
     */
    readonly sku: pulumi.Output<outputs.workloads.v20211201preview.SkuResponse | undefined>;
    /**
     * Azure Resource Manager metadata containing createdBy and modifiedBy information.
     */
    readonly systemData: pulumi.Output<outputs.workloads.v20211201preview.SystemDataResponse>;
    /**
     * Resource tags.
     */
    readonly tags: pulumi.Output<{
        [key: string]: string;
    } | undefined>;
    /**
     * The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
     */
    readonly type: pulumi.Output<string>;
    /**
     * VMSS web nodes profile
     */
    readonly webNodesProfile: pulumi.Output<outputs.workloads.v20211201preview.VmssNodesProfileResponse>;
    /**
     * Create a PhpWorkload resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: PhpWorkloadArgs, opts?: pulumi.CustomResourceOptions);
}
/**
 * The set of arguments for constructing a PhpWorkload resource.
 */
export interface PhpWorkloadArgs {
    /**
     * Admin user profile used for VM and VMSS
     */
    adminUserProfile: pulumi.Input<inputs.workloads.v20211201preview.UserProfileArgs>;
    /**
     * The infra resources for PHP workload will be created in this location
     */
    appLocation: pulumi.Input<string>;
    /**
     * Backup profile
     */
    backupProfile?: pulumi.Input<inputs.workloads.v20211201preview.BackupProfileArgs>;
    /**
     * Cache profile
     */
    cacheProfile?: pulumi.Input<inputs.workloads.v20211201preview.CacheProfileArgs>;
    /**
     * Controller VM profile
     */
    controllerProfile: pulumi.Input<inputs.workloads.v20211201preview.NodeProfileArgs>;
    /**
     * Database profile
     */
    databaseProfile: pulumi.Input<inputs.workloads.v20211201preview.DatabaseProfileArgs>;
    /**
     * File share profile
     */
    fileshareProfile?: pulumi.Input<inputs.workloads.v20211201preview.FileshareProfileArgs>;
    /**
     * Identity for the resource. Currently not supported
     */
    identity?: pulumi.Input<inputs.workloads.v20211201preview.PhpWorkloadResourceIdentityArgs>;
    /**
     * Indicates which kind of php workload this resource represent e.g WordPress
     */
    kind: pulumi.Input<string | enums.workloads.v20211201preview.WorkloadKind>;
    /**
     * The geo-location where the resource lives
     */
    location?: pulumi.Input<string>;
    /**
     * Managed resource group configuration of the workload
     */
    managedResourceGroupConfiguration?: pulumi.Input<inputs.workloads.v20211201preview.ManagedRGConfigurationArgs>;
    /**
     * Network profile
     */
    networkProfile?: pulumi.Input<inputs.workloads.v20211201preview.NetworkProfileArgs>;
    /**
     * PHP profile
     */
    phpProfile?: pulumi.Input<inputs.workloads.v20211201preview.PhpProfileArgs>;
    /**
     * Php workload name
     */
    phpWorkloadName?: pulumi.Input<string>;
    /**
     * The name of the resource group. The name is case insensitive.
     */
    resourceGroupName: pulumi.Input<string>;
    /**
     * Search profile
     */
    searchProfile?: pulumi.Input<inputs.workloads.v20211201preview.SearchProfileArgs>;
    /**
     * Site profile
     */
    siteProfile?: pulumi.Input<inputs.workloads.v20211201preview.SiteProfileArgs>;
    /**
     * Php workloads SKU
     */
    sku?: pulumi.Input<inputs.workloads.v20211201preview.SkuArgs>;
    /**
     * Resource tags.
     */
    tags?: pulumi.Input<{
        [key: string]: pulumi.Input<string>;
    }>;
    /**
     * VMSS web nodes profile
     */
    webNodesProfile: pulumi.Input<inputs.workloads.v20211201preview.VmssNodesProfileArgs>;
}
