import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../../types/input";
import * as outputs from "../../types/output";
/**
 * Device Update instance details.
 */
export declare class Instance extends pulumi.CustomResource {
    /**
     * Get an existing Instance resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    static get(name: string, id: pulumi.Input<pulumi.ID>, opts?: pulumi.CustomResourceOptions): Instance;
    /**
     * Returns true if the given object is an instance of Instance.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    static isInstance(obj: any): obj is Instance;
    /**
     * Parent Device Update Account name which Instance belongs to.
     */
    readonly accountName: pulumi.Output<string>;
    /**
     * Customer-initiated diagnostic log collection storage properties
     */
    readonly diagnosticStorageProperties: pulumi.Output<outputs.deviceupdate.v20230701.DiagnosticStoragePropertiesResponse | undefined>;
    /**
     * Enables or Disables the diagnostic logs collection
     */
    readonly enableDiagnostics: pulumi.Output<boolean | undefined>;
    /**
     * List of IoT Hubs associated with the account.
     */
    readonly iotHubs: pulumi.Output<outputs.deviceupdate.v20230701.IotHubSettingsResponse[] | undefined>;
    /**
     * The geo-location where the resource lives
     */
    readonly location: pulumi.Output<string>;
    /**
     * The name of the resource
     */
    readonly name: pulumi.Output<string>;
    /**
     * Provisioning state.
     */
    readonly provisioningState: pulumi.Output<string>;
    /**
     * Azure Resource Manager metadata containing createdBy and modifiedBy information.
     */
    readonly systemData: pulumi.Output<outputs.deviceupdate.v20230701.SystemDataResponse>;
    /**
     * Resource tags.
     */
    readonly tags: pulumi.Output<{
        [key: string]: string;
    } | undefined>;
    /**
     * The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
     */
    readonly type: pulumi.Output<string>;
    /**
     * Create a Instance resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: InstanceArgs, opts?: pulumi.CustomResourceOptions);
}
/**
 * The set of arguments for constructing a Instance resource.
 */
export interface InstanceArgs {
    /**
     * Account name.
     */
    accountName: pulumi.Input<string>;
    /**
     * Customer-initiated diagnostic log collection storage properties
     */
    diagnosticStorageProperties?: pulumi.Input<inputs.deviceupdate.v20230701.DiagnosticStoragePropertiesArgs>;
    /**
     * Enables or Disables the diagnostic logs collection
     */
    enableDiagnostics?: pulumi.Input<boolean>;
    /**
     * Instance name.
     */
    instanceName?: pulumi.Input<string>;
    /**
     * List of IoT Hubs associated with the account.
     */
    iotHubs?: pulumi.Input<pulumi.Input<inputs.deviceupdate.v20230701.IotHubSettingsArgs>[]>;
    /**
     * The geo-location where the resource lives
     */
    location?: pulumi.Input<string>;
    /**
     * The resource group name.
     */
    resourceGroupName: pulumi.Input<string>;
    /**
     * Resource tags.
     */
    tags?: pulumi.Input<{
        [key: string]: pulumi.Input<string>;
    }>;
}
