"use strict";
// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __exportStar = (this && this.__exportStar) || function(m, exports) {
    for (var p in m) if (p !== "default" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.v20241001preview = exports.v20240615preview = exports.v20240501preview = exports.v20240301 = exports.v20240101preview = exports.v20231101preview = exports.v20231001preview = exports.v20230701preview = exports.v20230615preview = exports.v20230601 = exports.v20230501preview = exports.v20230201preview = exports.TagRule = exports.OpenAI = exports.MonitoredSubscription = exports.Monitor = exports.listlistAssociatedTrafficFilterOutput = exports.listlistAssociatedTrafficFilter = exports.listVMHostOutput = exports.listVMHost = exports.listUpgradableVersionDetailsOutput = exports.listUpgradableVersionDetails = exports.listMonitoredResourceOutput = exports.listMonitoredResource = exports.listDeploymentInfoOutput = exports.listDeploymentInfo = exports.listConnectedPartnerResourceOutput = exports.listConnectedPartnerResource = exports.listAllTrafficFilterOutput = exports.listAllTrafficFilter = exports.getTagRuleOutput = exports.getTagRule = exports.getOrganizationElasticToAzureSubscriptionMappingOutput = exports.getOrganizationElasticToAzureSubscriptionMapping = exports.getOrganizationApiKeyOutput = exports.getOrganizationApiKey = exports.getOpenAIStatusOutput = exports.getOpenAIStatus = exports.getOpenAIOutput = exports.getOpenAI = exports.getMonitoredSubscriptionOutput = exports.getMonitoredSubscription = exports.getMonitorOutput = exports.getMonitor = exports.getBillingInfoOutput = exports.getBillingInfo = void 0;
const pulumi = require("@pulumi/pulumi");
const utilities = require("../utilities");
exports.getBillingInfo = null;
exports.getBillingInfoOutput = null;
utilities.lazyLoad(exports, ["getBillingInfo", "getBillingInfoOutput"], () => require("./getBillingInfo"));
exports.getMonitor = null;
exports.getMonitorOutput = null;
utilities.lazyLoad(exports, ["getMonitor", "getMonitorOutput"], () => require("./getMonitor"));
exports.getMonitoredSubscription = null;
exports.getMonitoredSubscriptionOutput = null;
utilities.lazyLoad(exports, ["getMonitoredSubscription", "getMonitoredSubscriptionOutput"], () => require("./getMonitoredSubscription"));
exports.getOpenAI = null;
exports.getOpenAIOutput = null;
utilities.lazyLoad(exports, ["getOpenAI", "getOpenAIOutput"], () => require("./getOpenAI"));
exports.getOpenAIStatus = null;
exports.getOpenAIStatusOutput = null;
utilities.lazyLoad(exports, ["getOpenAIStatus", "getOpenAIStatusOutput"], () => require("./getOpenAIStatus"));
exports.getOrganizationApiKey = null;
exports.getOrganizationApiKeyOutput = null;
utilities.lazyLoad(exports, ["getOrganizationApiKey", "getOrganizationApiKeyOutput"], () => require("./getOrganizationApiKey"));
exports.getOrganizationElasticToAzureSubscriptionMapping = null;
exports.getOrganizationElasticToAzureSubscriptionMappingOutput = null;
utilities.lazyLoad(exports, ["getOrganizationElasticToAzureSubscriptionMapping", "getOrganizationElasticToAzureSubscriptionMappingOutput"], () => require("./getOrganizationElasticToAzureSubscriptionMapping"));
exports.getTagRule = null;
exports.getTagRuleOutput = null;
utilities.lazyLoad(exports, ["getTagRule", "getTagRuleOutput"], () => require("./getTagRule"));
exports.listAllTrafficFilter = null;
exports.listAllTrafficFilterOutput = null;
utilities.lazyLoad(exports, ["listAllTrafficFilter", "listAllTrafficFilterOutput"], () => require("./listAllTrafficFilter"));
exports.listConnectedPartnerResource = null;
exports.listConnectedPartnerResourceOutput = null;
utilities.lazyLoad(exports, ["listConnectedPartnerResource", "listConnectedPartnerResourceOutput"], () => require("./listConnectedPartnerResource"));
exports.listDeploymentInfo = null;
exports.listDeploymentInfoOutput = null;
utilities.lazyLoad(exports, ["listDeploymentInfo", "listDeploymentInfoOutput"], () => require("./listDeploymentInfo"));
exports.listMonitoredResource = null;
exports.listMonitoredResourceOutput = null;
utilities.lazyLoad(exports, ["listMonitoredResource", "listMonitoredResourceOutput"], () => require("./listMonitoredResource"));
exports.listUpgradableVersionDetails = null;
exports.listUpgradableVersionDetailsOutput = null;
utilities.lazyLoad(exports, ["listUpgradableVersionDetails", "listUpgradableVersionDetailsOutput"], () => require("./listUpgradableVersionDetails"));
exports.listVMHost = null;
exports.listVMHostOutput = null;
utilities.lazyLoad(exports, ["listVMHost", "listVMHostOutput"], () => require("./listVMHost"));
exports.listlistAssociatedTrafficFilter = null;
exports.listlistAssociatedTrafficFilterOutput = null;
utilities.lazyLoad(exports, ["listlistAssociatedTrafficFilter", "listlistAssociatedTrafficFilterOutput"], () => require("./listlistAssociatedTrafficFilter"));
exports.Monitor = null;
utilities.lazyLoad(exports, ["Monitor"], () => require("./monitor"));
exports.MonitoredSubscription = null;
utilities.lazyLoad(exports, ["MonitoredSubscription"], () => require("./monitoredSubscription"));
exports.OpenAI = null;
utilities.lazyLoad(exports, ["OpenAI"], () => require("./openAI"));
exports.TagRule = null;
utilities.lazyLoad(exports, ["TagRule"], () => require("./tagRule"));
// Export enums:
__exportStar(require("../types/enums/elastic"), exports);
// Export sub-modules:
const v20230201preview = require("./v20230201preview");
exports.v20230201preview = v20230201preview;
const v20230501preview = require("./v20230501preview");
exports.v20230501preview = v20230501preview;
const v20230601 = require("./v20230601");
exports.v20230601 = v20230601;
const v20230615preview = require("./v20230615preview");
exports.v20230615preview = v20230615preview;
const v20230701preview = require("./v20230701preview");
exports.v20230701preview = v20230701preview;
const v20231001preview = require("./v20231001preview");
exports.v20231001preview = v20231001preview;
const v20231101preview = require("./v20231101preview");
exports.v20231101preview = v20231101preview;
const v20240101preview = require("./v20240101preview");
exports.v20240101preview = v20240101preview;
const v20240301 = require("./v20240301");
exports.v20240301 = v20240301;
const v20240501preview = require("./v20240501preview");
exports.v20240501preview = v20240501preview;
const v20240615preview = require("./v20240615preview");
exports.v20240615preview = v20240615preview;
const v20241001preview = require("./v20241001preview");
exports.v20241001preview = v20241001preview;
const _module = {
    version: utilities.getVersion(),
    construct: (name, type, urn) => {
        switch (type) {
            case "azure-native:elastic:Monitor":
                return new exports.Monitor(name, undefined, { urn });
            case "azure-native:elastic:MonitoredSubscription":
                return new exports.MonitoredSubscription(name, undefined, { urn });
            case "azure-native:elastic:OpenAI":
                return new exports.OpenAI(name, undefined, { urn });
            case "azure-native:elastic:TagRule":
                return new exports.TagRule(name, undefined, { urn });
            default:
                throw new Error(`unknown resource type ${type}`);
        }
    },
};
pulumi.runtime.registerResourceModule("azure-native", "elastic", _module);
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaW5kZXguanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi9lbGFzdGljL2luZGV4LnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7QUFBQSxzRUFBc0U7QUFDdEUsaUZBQWlGOzs7Ozs7Ozs7Ozs7Ozs7OztBQUVqRix5Q0FBeUM7QUFDekMsMENBQTBDO0FBSTdCLFFBQUEsY0FBYyxHQUFxRCxJQUFXLENBQUM7QUFDL0UsUUFBQSxvQkFBb0IsR0FBMkQsSUFBVyxDQUFDO0FBQ3hHLFNBQVMsQ0FBQyxRQUFRLENBQUMsT0FBTyxFQUFFLENBQUMsZ0JBQWdCLEVBQUMsc0JBQXNCLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxPQUFPLENBQUMsa0JBQWtCLENBQUMsQ0FBQyxDQUFDO0FBRzdGLFFBQUEsVUFBVSxHQUE2QyxJQUFXLENBQUM7QUFDbkUsUUFBQSxnQkFBZ0IsR0FBbUQsSUFBVyxDQUFDO0FBQzVGLFNBQVMsQ0FBQyxRQUFRLENBQUMsT0FBTyxFQUFFLENBQUMsWUFBWSxFQUFDLGtCQUFrQixDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsT0FBTyxDQUFDLGNBQWMsQ0FBQyxDQUFDLENBQUM7QUFHakYsUUFBQSx3QkFBd0IsR0FBeUUsSUFBVyxDQUFDO0FBQzdHLFFBQUEsOEJBQThCLEdBQStFLElBQVcsQ0FBQztBQUN0SSxTQUFTLENBQUMsUUFBUSxDQUFDLE9BQU8sRUFBRSxDQUFDLDBCQUEwQixFQUFDLGdDQUFnQyxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsT0FBTyxDQUFDLDRCQUE0QixDQUFDLENBQUMsQ0FBQztBQUczSCxRQUFBLFNBQVMsR0FBMkMsSUFBVyxDQUFDO0FBQ2hFLFFBQUEsZUFBZSxHQUFpRCxJQUFXLENBQUM7QUFDekYsU0FBUyxDQUFDLFFBQVEsQ0FBQyxPQUFPLEVBQUUsQ0FBQyxXQUFXLEVBQUMsaUJBQWlCLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxPQUFPLENBQUMsYUFBYSxDQUFDLENBQUMsQ0FBQztB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