import * as pulumi from "@pulumi/pulumi";
import * as outputs from "../../types/output";
/**
 * Capture properties of Open AI resource Integration.
 */
export declare function getOpenAI(args: GetOpenAIArgs, opts?: pulumi.InvokeOptions): Promise<GetOpenAIResult>;
export interface GetOpenAIArgs {
    /**
     * OpenAI Integration name
     */
    integrationName: string;
    /**
     * Monitor resource name
     */
    monitorName: string;
    /**
     * The name of the resource group. The name is case insensitive.
     */
    resourceGroupName: string;
}
/**
 * Capture properties of Open AI resource Integration.
 */
export interface GetOpenAIResult {
    /**
     * The id of the integration.
     */
    readonly id: string;
    /**
     * Name of the integration.
     */
    readonly name: string;
    /**
     * Open AI Integration details.
     */
    readonly properties: outputs.elastic.v20240501preview.OpenAIIntegrationPropertiesResponse;
    /**
     * The type of the integration.
     */
    readonly type: string;
}
/**
 * Capture properties of Open AI resource Integration.
 */
export declare function getOpenAIOutput(args: GetOpenAIOutputArgs, opts?: pulumi.InvokeOutputOptions): pulumi.Output<GetOpenAIResult>;
export interface GetOpenAIOutputArgs {
    /**
     * OpenAI Integration name
     */
    integrationName: pulumi.Input<string>;
    /**
     * Monitor resource name
     */
    monitorName: pulumi.Input<string>;
    /**
     * The name of the resource group. The name is case insensitive.
     */
    resourceGroupName: pulumi.Input<string>;
}
