"use strict";
// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __exportStar = (this && this.__exportStar) || function(m, exports) {
    for (var p in m) if (p !== "default" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.TagRule = exports.OpenAI = exports.Monitor = exports.listlistAssociatedTrafficFilterOutput = exports.listlistAssociatedTrafficFilter = exports.listVMHostOutput = exports.listVMHost = exports.listUpgradableVersionDetailsOutput = exports.listUpgradableVersionDetails = exports.listMonitoredResourceOutput = exports.listMonitoredResource = exports.listDeploymentInfoOutput = exports.listDeploymentInfo = exports.listConnectedPartnerResourceOutput = exports.listConnectedPartnerResource = exports.listAllTrafficFilterOutput = exports.listAllTrafficFilter = exports.getTagRuleOutput = exports.getTagRule = exports.getOrganizationElasticToAzureSubscriptionMappingOutput = exports.getOrganizationElasticToAzureSubscriptionMapping = exports.getOrganizationApiKeyOutput = exports.getOrganizationApiKey = exports.getOpenAIStatusOutput = exports.getOpenAIStatus = exports.getOpenAIOutput = exports.getOpenAI = exports.getMonitorOutput = exports.getMonitor = exports.getBillingInfoOutput = exports.getBillingInfo = void 0;
const pulumi = require("@pulumi/pulumi");
const utilities = require("../../utilities");
exports.getBillingInfo = null;
exports.getBillingInfoOutput = null;
utilities.lazyLoad(exports, ["getBillingInfo", "getBillingInfoOutput"], () => require("./getBillingInfo"));
exports.getMonitor = null;
exports.getMonitorOutput = null;
utilities.lazyLoad(exports, ["getMonitor", "getMonitorOutput"], () => require("./getMonitor"));
exports.getOpenAI = null;
exports.getOpenAIOutput = null;
utilities.lazyLoad(exports, ["getOpenAI", "getOpenAIOutput"], () => require("./getOpenAI"));
exports.getOpenAIStatus = null;
exports.getOpenAIStatusOutput = null;
utilities.lazyLoad(exports, ["getOpenAIStatus", "getOpenAIStatusOutput"], () => require("./getOpenAIStatus"));
exports.getOrganizationApiKey = null;
exports.getOrganizationApiKeyOutput = null;
utilities.lazyLoad(exports, ["getOrganizationApiKey", "getOrganizationApiKeyOutput"], () => require("./getOrganizationApiKey"));
exports.getOrganizationElasticToAzureSubscriptionMapping = null;
exports.getOrganizationElasticToAzureSubscriptionMappingOutput = null;
utilities.lazyLoad(exports, ["getOrganizationElasticToAzureSubscriptionMapping", "getOrganizationElasticToAzureSubscriptionMappingOutput"], () => require("./getOrganizationElasticToAzureSubscriptionMapping"));
exports.getTagRule = null;
exports.getTagRuleOutput = null;
utilities.lazyLoad(exports, ["getTagRule", "getTagRuleOutput"], () => require("./getTagRule"));
exports.listAllTrafficFilter = null;
exports.listAllTrafficFilterOutput = null;
utilities.lazyLoad(exports, ["listAllTrafficFilter", "listAllTrafficFilterOutput"], () => require("./listAllTrafficFilter"));
exports.listConnectedPartnerResource = null;
exports.listConnectedPartnerResourceOutput = null;
utilities.lazyLoad(exports, ["listConnectedPartnerResource", "listConnectedPartnerResourceOutput"], () => require("./listConnectedPartnerResource"));
exports.listDeploymentInfo = null;
exports.listDeploymentInfoOutput = null;
utilities.lazyLoad(exports, ["listDeploymentInfo", "listDeploymentInfoOutput"], () => require("./listDeploymentInfo"));
exports.listMonitoredResource = null;
exports.listMonitoredResourceOutput = null;
utilities.lazyLoad(exports, ["listMonitoredResource", "listMonitoredResourceOutput"], () => require("./listMonitoredResource"));
exports.listUpgradableVersionDetails = null;
exports.listUpgradableVersionDetailsOutput = null;
utilities.lazyLoad(exports, ["listUpgradableVersionDetails", "listUpgradableVersionDetailsOutput"], () => require("./listUpgradableVersionDetails"));
exports.listVMHost = null;
exports.listVMHostOutput = null;
utilities.lazyLoad(exports, ["listVMHost", "listVMHostOutput"], () => require("./listVMHost"));
exports.listlistAssociatedTrafficFilter = null;
exports.listlistAssociatedTrafficFilterOutput = null;
utilities.lazyLoad(exports, ["listlistAssociatedTrafficFilter", "listlistAssociatedTrafficFilterOutput"], () => require("./listlistAssociatedTrafficFilter"));
exports.Monitor = null;
utilities.lazyLoad(exports, ["Monitor"], () => require("./monitor"));
exports.OpenAI = null;
utilities.lazyLoad(exports, ["OpenAI"], () => require("./openAI"));
exports.TagRule = null;
utilities.lazyLoad(exports, ["TagRule"], () => require("./tagRule"));
// Export enums:
__exportStar(require("../../types/enums/elastic/v20240301"), exports);
const _module = {
    version: utilities.getVersion(),
    construct: (name, type, urn) => {
        switch (type) {
            case "azure-native:elastic/v20240301:Monitor":
                return new exports.Monitor(name, undefined, { urn });
            case "azure-native:elastic/v20240301:OpenAI":
                return new exports.OpenAI(name, undefined, { urn });
            case "azure-native:elastic/v20240301:TagRule":
                return new exports.TagRule(name, undefined, { urn });
            default:
                throw new Error(`unknown resource type ${type}`);
        }
    },
};
pulumi.runtime.registerResourceModule("azure-native", "elastic/v20240301", _module);
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaW5kZXguanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi9lbGFzdGljL3YyMDI0MDMwMS9pbmRleC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiO0FBQUEsc0VBQXNFO0FBQ3RFLGlGQUFpRjs7Ozs7Ozs7Ozs7Ozs7Ozs7QUFFakYseUNBQXlDO0FBQ3pDLDZDQUE2QztBQUloQyxRQUFBLGNBQWMsR0FBcUQsSUFBVyxDQUFDO0FBQy9FLFFBQUEsb0JBQW9CLEdBQTJELElBQVcsQ0FBQztBQUN4RyxTQUFTLENBQUMsUUFBUSxDQUFDLE9BQU8sRUFBRSxDQUFDLGdCQUFnQixFQUFDLHNCQUFzQixDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsT0FBTyxDQUFDLGtCQUFrQixDQUFDLENBQUMsQ0FBQztBQUc3RixRQUFBLFVBQVUsR0FBNkMsSUFBVyxDQUFDO0FBQ25FLFFBQUEsZ0JBQWdCLEdBQW1ELElBQVcsQ0FBQztBQUM1RixTQUFTLENBQUMsUUFBUSxDQUFDLE9BQU8sRUFBRSxDQUFDLFlBQVksRUFBQyxrQkFBa0IsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLE9BQU8sQ0FBQyxjQUFjLENBQUMsQ0FBQyxDQUFDO0FBR2pGLFFBQUEsU0FBUyxHQUEyQyxJQUFXLENBQUM7QUFDaEUsUUFBQSxlQUFlLEdBQWlELElBQVcsQ0FBQztBQUN6RixTQUFTLENBQUMsUUFBUSxDQUFDLE9BQU8sRUFBRSxDQUFDLFdBQVcsRUFBQyxpQkFBaUIsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLE9BQU8sQ0FBQyxhQUFhLENBQUMsQ0FBQyxDQUFDO0FBRzlFLFFBQUEsZUFBZSxHQUF1RCxJQUFXLENBQUM7QUFDbEYsUUFBQSxxQkFBcUIsR0FBNkQsSUFBVyxDQUFDO0FBQzNHLFNBQVMsQ0FBQyxRQUFRLENBQUMsT0FBTyxFQUFFLENBQUMsaUJBQWlCLEVBQUMsdUJBQXVCLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxPQUFPLENBQUMsbUJBQW1CLENBQUMs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