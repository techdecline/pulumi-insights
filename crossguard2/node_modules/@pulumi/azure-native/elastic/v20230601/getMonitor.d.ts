import * as pulumi from "@pulumi/pulumi";
import * as outputs from "../../types/output";
/**
 * Monitor resource.
 */
export declare function getMonitor(args: GetMonitorArgs, opts?: pulumi.InvokeOptions): Promise<GetMonitorResult>;
export interface GetMonitorArgs {
    /**
     * Monitor resource name
     */
    monitorName: string;
    /**
     * The name of the resource group to which the Elastic resource belongs.
     */
    resourceGroupName: string;
}
/**
 * Monitor resource.
 */
export interface GetMonitorResult {
    /**
     * ARM id of the monitor resource.
     */
    readonly id: string;
    /**
     * Identity properties of the monitor resource.
     */
    readonly identity?: outputs.elastic.v20230601.IdentityPropertiesResponse;
    /**
     * The location of the monitor resource
     */
    readonly location: string;
    /**
     * Name of the monitor resource.
     */
    readonly name: string;
    /**
     * Properties of the monitor resource.
     */
    readonly properties: outputs.elastic.v20230601.MonitorPropertiesResponse;
    /**
     * SKU of the monitor resource.
     */
    readonly sku?: outputs.elastic.v20230601.ResourceSkuResponse;
    /**
     * The system metadata relating to this resource
     */
    readonly systemData: outputs.elastic.v20230601.SystemDataResponse;
    /**
     * The tags of the monitor resource.
     */
    readonly tags?: {
        [key: string]: string;
    };
    /**
     * The type of the monitor resource.
     */
    readonly type: string;
}
/**
 * Monitor resource.
 */
export declare function getMonitorOutput(args: GetMonitorOutputArgs, opts?: pulumi.InvokeOutputOptions): pulumi.Output<GetMonitorResult>;
export interface GetMonitorOutputArgs {
    /**
     * Monitor resource name
     */
    monitorName: pulumi.Input<string>;
    /**
     * The name of the resource group to which the Elastic resource belongs.
     */
    resourceGroupName: pulumi.Input<string>;
}
