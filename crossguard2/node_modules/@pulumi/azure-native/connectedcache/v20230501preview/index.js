"use strict";
// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __exportStar = (this && this.__exportStar) || function(m, exports) {
    for (var p in m) if (p !== "default" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.IspCustomer = exports.IspCacheNodesOperation = exports.getIspCustomerOutput = exports.getIspCustomer = exports.getIspCacheNodesOperationCacheNodeInstallDetailsOutput = exports.getIspCacheNodesOperationCacheNodeInstallDetails = exports.getIspCacheNodesOperationBgpCidrsOutput = exports.getIspCacheNodesOperationBgpCidrs = exports.getIspCacheNodesOperationOutput = exports.getIspCacheNodesOperation = exports.getEnterpriseMccCustomerOutput = exports.getEnterpriseMccCustomer = exports.getEnterpriseMccCacheNodesOperationCacheNodeInstallDetailsOutput = exports.getEnterpriseMccCacheNodesOperationCacheNodeInstallDetails = exports.getEnterpriseMccCacheNodesOperationOutput = exports.getEnterpriseMccCacheNodesOperation = exports.getEnterpriseCustomerOperationOutput = exports.getEnterpriseCustomerOperation = exports.getCacheNodesOperationOutput = exports.getCacheNodesOperation = exports.EnterpriseMccCustomer = exports.EnterpriseMccCacheNodesOperation = exports.EnterpriseCustomerOperation = exports.CacheNodesOperation = void 0;
const pulumi = require("@pulumi/pulumi");
const utilities = require("../../utilities");
exports.CacheNodesOperation = null;
utilities.lazyLoad(exports, ["CacheNodesOperation"], () => require("./cacheNodesOperation"));
exports.EnterpriseCustomerOperation = null;
utilities.lazyLoad(exports, ["EnterpriseCustomerOperation"], () => require("./enterpriseCustomerOperation"));
exports.EnterpriseMccCacheNodesOperation = null;
utilities.lazyLoad(exports, ["EnterpriseMccCacheNodesOperation"], () => require("./enterpriseMccCacheNodesOperation"));
exports.EnterpriseMccCustomer = null;
utilities.lazyLoad(exports, ["EnterpriseMccCustomer"], () => require("./enterpriseMccCustomer"));
exports.getCacheNodesOperation = null;
exports.getCacheNodesOperationOutput = null;
utilities.lazyLoad(exports, ["getCacheNodesOperation", "getCacheNodesOperationOutput"], () => require("./getCacheNodesOperation"));
exports.getEnterpriseCustomerOperation = null;
exports.getEnterpriseCustomerOperationOutput = null;
utilities.lazyLoad(exports, ["getEnterpriseCustomerOperation", "getEnterpriseCustomerOperationOutput"], () => require("./getEnterpriseCustomerOperation"));
exports.getEnterpriseMccCacheNodesOperation = null;
exports.getEnterpriseMccCacheNodesOperationOutput = null;
utilities.lazyLoad(exports, ["getEnterpriseMccCacheNodesOperation", "getEnterpriseMccCacheNodesOperationOutput"], () => require("./getEnterpriseMccCacheNodesOperation"));
exports.getEnterpriseMccCacheNodesOperationCacheNodeInstallDetails = null;
exports.getEnterpriseMccCacheNodesOperationCacheNodeInstallDetailsOutput = null;
utilities.lazyLoad(exports, ["getEnterpriseMccCacheNodesOperationCacheNodeInstallDetails", "getEnterpriseMccCacheNodesOperationCacheNodeInstallDetailsOutput"], () => require("./getEnterpriseMccCacheNodesOperationCacheNodeInstallDetails"));
exports.getEnterpriseMccCustomer = null;
exports.getEnterpriseMccCustomerOutput = null;
utilities.lazyLoad(exports, ["getEnterpriseMccCustomer", "getEnterpriseMccCustomerOutput"], () => require("./getEnterpriseMccCustomer"));
exports.getIspCacheNodesOperation = null;
exports.getIspCacheNodesOperationOutput = null;
utilities.lazyLoad(exports, ["getIspCacheNodesOperation", "getIspCacheNodesOperationOutput"], () => require("./getIspCacheNodesOperation"));
exports.getIspCacheNodesOperationBgpCidrs = null;
exports.getIspCacheNodesOperationBgpCidrsOutput = null;
utilities.lazyLoad(exports, ["getIspCacheNodesOperationBgpCidrs", "getIspCacheNodesOperationBgpCidrsOutput"], () => require("./getIspCacheNodesOperationBgpCidrs"));
exports.getIspCacheNodesOperationCacheNodeInstallDetails = null;
exports.getIspCacheNodesOperationCacheNodeInstallDetailsOutput = null;
utilities.lazyLoad(exports, ["getIspCacheNodesOperationCacheNodeInstallDetails", "getIspCacheNodesOperationCacheNodeInstallDetailsOutput"], () => require("./getIspCacheNodesOperationCacheNodeInstallDetails"));
exports.getIspCustomer = null;
exports.getIspCustomerOutput = null;
utilities.lazyLoad(exports, ["getIspCustomer", "getIspCustomerOutput"], () => require("./getIspCustomer"));
exports.IspCacheNodesOperation = null;
utilities.lazyLoad(exports, ["IspCacheNodesOperation"], () => require("./ispCacheNodesOperation"));
exports.IspCustomer = null;
utilities.lazyLoad(exports, ["IspCustomer"], () => require("./ispCustomer"));
// Export enums:
__exportStar(require("../../types/enums/connectedcache/v20230501preview"), exports);
const _module = {
    version: utilities.getVersion(),
    construct: (name, type, urn) => {
        switch (type) {
            case "azure-native:connectedcache/v20230501preview:CacheNodesOperation":
                return new exports.CacheNodesOperation(name, undefined, { urn });
            case "azure-native:connectedcache/v20230501preview:EnterpriseCustomerOperation":
                return new exports.EnterpriseCustomerOperation(name, undefined, { urn });
            case "azure-native:connectedcache/v20230501preview:EnterpriseMccCacheNodesOperation":
                return new exports.EnterpriseMccCacheNodesOperation(name, undefined, { urn });
            case "azure-native:connectedcache/v20230501preview:EnterpriseMccCustomer":
                return new exports.EnterpriseMccCustomer(name, undefined, { urn });
            case "azure-native:connectedcache/v20230501preview:IspCacheNodesOperation":
                return new exports.IspCacheNodesOperation(name, undefined, { urn });
            case "azure-native:connectedcache/v20230501preview:IspCustomer":
                return new exports.IspCustomer(name, undefined, { urn });
            default:
                throw new Error(`unknown resource type ${type}`);
        }
    },
};
pulumi.runtime.registerResourceModule("azure-native", "connectedcache/v20230501preview", _module);
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaW5kZXguanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi9jb25uZWN0ZWRjYWNoZS92MjAyMzA1MDFwcmV2aWV3L2luZGV4LnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7QUFBQSxzRUFBc0U7QUFDdEUsaUZBQWlGOzs7Ozs7Ozs7Ozs7Ozs7OztBQUVqRix5Q0FBeUM7QUFDekMsNkNBQTZDO0FBS2hDLFFBQUEsbUJBQW1CLEdBQStELElBQVcsQ0FBQztBQUMzRyxTQUFTLENBQUMsUUFBUSxDQUFDLE9BQU8sRUFBRSxDQUFDLHFCQUFxQixDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsT0FBTyxDQUFDLHVCQUF1QixDQUFDLENBQUMsQ0FBQztBQUloRixRQUFBLDJCQUEyQixHQUErRSxJQUFXLENBQUM7QUFDbkksU0FBUyxDQUFDLFFBQVEsQ0FBQyxPQUFPLEVBQUUsQ0FBQyw2QkFBNkIsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLE9BQU8sQ0FBQywrQkFBK0IsQ0FBQyxDQUFDLENBQUM7QUFJaEcsUUFBQSxnQ0FBZ0MsR0FBeUYsSUFBVyxDQUFDO0FBQ2xKLFNBQVMsQ0FBQyxRQUFRLENBQUMsT0FBTyxFQUFFLENBQUMsa0NBQWtDLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxPQUFPLENBQUMsb0NBQW9DLENBQUMsQ0FBQyxDQUFDO0FBSTFHLFFBQUEscUJBQXFCLEdBQW1FLElBQVcsQ0FBQztBQUNqSCxTQUFTLENBQUMsUUFBUSxDQUFDLE9BQU8sRUFBRSxDQUFDLHVCQUF1QixDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsT0FBTyxDQUFDLHlCQUF5QixDQUFDLENBQUMsQ0FBQztBQUdwRixRQUFBLHNCQUFzQixHQUFxRSxJQUFXLENBQUM7QUFDdkcsUUFBQSw0QkFBNEIsR0FBMkUsSUFBVyxDQUFDO0FBQ2hJLFNBQVMsQ0FBQyxRQUFRLENBQUMsT0FBTyxFQUFFLENBQUMsd0JBQXdCLEVBQUMsOEJBQThCLENBQUMsRUFBRSxHQUFH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