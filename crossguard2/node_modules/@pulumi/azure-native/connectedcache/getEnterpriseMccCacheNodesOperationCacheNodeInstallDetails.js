"use strict";
// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***
Object.defineProperty(exports, "__esModule", { value: true });
exports.getEnterpriseMccCacheNodesOperationCacheNodeInstallDetailsOutput = exports.getEnterpriseMccCacheNodesOperationCacheNodeInstallDetails = void 0;
const pulumi = require("@pulumi/pulumi");
const utilities = require("../utilities");
/**
 * This api gets secrets of the ispCacheNode resource install details
 * Azure REST API version: 2023-05-01-preview.
 */
function getEnterpriseMccCacheNodesOperationCacheNodeInstallDetails(args, opts) {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("azure-native:connectedcache:getEnterpriseMccCacheNodesOperationCacheNodeInstallDetails", {
        "cacheNodeResourceName": args.cacheNodeResourceName,
        "customerResourceName": args.customerResourceName,
        "resourceGroupName": args.resourceGroupName,
    }, opts);
}
exports.getEnterpriseMccCacheNodesOperationCacheNodeInstallDetails = getEnterpriseMccCacheNodesOperationCacheNodeInstallDetails;
/**
 * This api gets secrets of the ispCacheNode resource install details
 * Azure REST API version: 2023-05-01-preview.
 */
function getEnterpriseMccCacheNodesOperationCacheNodeInstallDetailsOutput(args, opts) {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invokeOutput("azure-native:connectedcache:getEnterpriseMccCacheNodesOperationCacheNodeInstallDetails", {
        "cacheNodeResourceName": args.cacheNodeResourceName,
        "customerResourceName": args.customerResourceName,
        "resourceGroupName": args.resourceGroupName,
    }, opts);
}
exports.getEnterpriseMccCacheNodesOperationCacheNodeInstallDetailsOutput = getEnterpriseMccCacheNodesOperationCacheNodeInstallDetailsOutput;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZ2V0RW50ZXJwcmlzZU1jY0NhY2hlTm9kZXNPcGVyYXRpb25DYWNoZU5vZGVJbnN0YWxsRGV0YWlscy5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uL2Nvbm5lY3RlZGNhY2hlL2dldEVudGVycHJpc2VNY2NDYWNoZU5vZGVzT3BlcmF0aW9uQ2FjaGVOb2RlSW5zdGFsbERldGFpbHMudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IjtBQUFBLHNFQUFzRTtBQUN0RSxpRkFBaUY7OztBQUVqRix5Q0FBeUM7QUFJekMsMENBQTBDO0FBRTFDOzs7R0FHRztBQUNILFNBQWdCLDBEQUEwRCxDQUFDLElBQW9FLEVBQUUsSUFBMkI7SUFDeEssSUFBSSxHQUFHLE1BQU0sQ0FBQyxZQUFZLENBQUMsU0FBUyxDQUFDLG9CQUFvQixFQUFFLEVBQUUsSUFBSSxJQUFJLEVBQUUsQ0FBQyxDQUFDO0lBQ3pFLE9BQU8sTUFBTSxDQUFDLE9BQU8sQ0FBQyxNQUFNLENBQUMsd0ZBQXdGLEVBQUU7UUFDbkgsdUJBQXVCLEVBQUUsSUFBSSxDQUFDLHFCQUFxQjtRQUNuRCxzQkFBc0IsRUFBRSxJQUFJLENBQUMsb0JBQW9CO1FBQ2pELG1CQUFtQixFQUFFLElBQUksQ0FBQyxpQkFBaUI7S0FDOUMsRUFBRSxJQUFJLENBQUMsQ0FBQztBQUNiLENBQUM7QUFQRCxnSUFPQztBQWtERDs7O0dBR0c7QUFDSCxTQUFnQixnRUFBZ0UsQ0FBQyxJQUEwRSxFQUFFLElBQWlDO0lBQzFMLElBQUksR0FBRyxNQUFNLENBQUMsWUFBWSxDQUFDLFNBQVMsQ0FBQyxvQkFBb0IsRUFBRSxFQUFFLElBQUksSUFBSSxFQUFFLENBQUMsQ0FBQztJQUN6RSxPQUFPLE1BQU0sQ0FBQyxPQUFPLENBQUMsWUFBWSxDQUFDLHdGQUF3RixFQUFFO1FBQ3pILHVCQUF1QixFQUFFLElBQUksQ0FBQyxxQkFBcUI7UUFDbkQsc0JBQXNCLEVBQUUsSUFBSSxDQUFDLG9CQUFvQjtRQUNqRCxtQkFBbUIsRUFBRSxJQUFJLENBQUMsaUJBQWlCO0tBQzlDLEVBQUUsSUFBSSxDQUFDLENBQUM7QUFDYixDQUFDO0FBUEQsNElBT0MifQ==