"use strict";
// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __exportStar = (this && this.__exportStar) || function(m, exports) {
    for (var p in m) if (p !== "default" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.v20230501preview = exports.IspCustomer = exports.IspCacheNodesOperation = exports.getIspCustomerOutput = exports.getIspCustomer = exports.getIspCacheNodesOperationCacheNodeInstallDetailsOutput = exports.getIspCacheNodesOperationCacheNodeInstallDetails = exports.getIspCacheNodesOperationBgpCidrsOutput = exports.getIspCacheNodesOperationBgpCidrs = exports.getIspCacheNodesOperationOutput = exports.getIspCacheNodesOperation = exports.getEnterpriseMccCustomerOutput = exports.getEnterpriseMccCustomer = exports.getEnterpriseMccCacheNodesOperationCacheNodeInstallDetailsOutput = exports.getEnterpriseMccCacheNodesOperationCacheNodeInstallDetails = exports.getEnterpriseMccCacheNodesOperationOutput = exports.getEnterpriseMccCacheNodesOperation = exports.getEnterpriseCustomerOperationOutput = exports.getEnterpriseCustomerOperation = exports.getCacheNodesOperationOutput = exports.getCacheNodesOperation = exports.EnterpriseMccCustomer = exports.EnterpriseMccCacheNodesOperation = exports.EnterpriseCustomerOperation = exports.CacheNodesOperation = void 0;
const pulumi = require("@pulumi/pulumi");
const utilities = require("../utilities");
exports.CacheNodesOperation = null;
utilities.lazyLoad(exports, ["CacheNodesOperation"], () => require("./cacheNodesOperation"));
exports.EnterpriseCustomerOperation = null;
utilities.lazyLoad(exports, ["EnterpriseCustomerOperation"], () => require("./enterpriseCustomerOperation"));
exports.EnterpriseMccCacheNodesOperation = null;
utilities.lazyLoad(exports, ["EnterpriseMccCacheNodesOperation"], () => require("./enterpriseMccCacheNodesOperation"));
exports.EnterpriseMccCustomer = null;
utilities.lazyLoad(exports, ["EnterpriseMccCustomer"], () => require("./enterpriseMccCustomer"));
exports.getCacheNodesOperation = null;
exports.getCacheNodesOperationOutput = null;
utilities.lazyLoad(exports, ["getCacheNodesOperation", "getCacheNodesOperationOutput"], () => require("./getCacheNodesOperation"));
exports.getEnterpriseCustomerOperation = null;
exports.getEnterpriseCustomerOperationOutput = null;
utilities.lazyLoad(exports, ["getEnterpriseCustomerOperation", "getEnterpriseCustomerOperationOutput"], () => require("./getEnterpriseCustomerOperation"));
exports.getEnterpriseMccCacheNodesOperation = null;
exports.getEnterpriseMccCacheNodesOperationOutput = null;
utilities.lazyLoad(exports, ["getEnterpriseMccCacheNodesOperation", "getEnterpriseMccCacheNodesOperationOutput"], () => require("./getEnterpriseMccCacheNodesOperation"));
exports.getEnterpriseMccCacheNodesOperationCacheNodeInstallDetails = null;
exports.getEnterpriseMccCacheNodesOperationCacheNodeInstallDetailsOutput = null;
utilities.lazyLoad(exports, ["getEnterpriseMccCacheNodesOperationCacheNodeInstallDetails", "getEnterpriseMccCacheNodesOperationCacheNodeInstallDetailsOutput"], () => require("./getEnterpriseMccCacheNodesOperationCacheNodeInstallDetails"));
exports.getEnterpriseMccCustomer = null;
exports.getEnterpriseMccCustomerOutput = null;
utilities.lazyLoad(exports, ["getEnterpriseMccCustomer", "getEnterpriseMccCustomerOutput"], () => require("./getEnterpriseMccCustomer"));
exports.getIspCacheNodesOperation = null;
exports.getIspCacheNodesOperationOutput = null;
utilities.lazyLoad(exports, ["getIspCacheNodesOperation", "getIspCacheNodesOperationOutput"], () => require("./getIspCacheNodesOperation"));
exports.getIspCacheNodesOperationBgpCidrs = null;
exports.getIspCacheNodesOperationBgpCidrsOutput = null;
utilities.lazyLoad(exports, ["getIspCacheNodesOperationBgpCidrs", "getIspCacheNodesOperationBgpCidrsOutput"], () => require("./getIspCacheNodesOperationBgpCidrs"));
exports.getIspCacheNodesOperationCacheNodeInstallDetails = null;
exports.getIspCacheNodesOperationCacheNodeInstallDetailsOutput = null;
utilities.lazyLoad(exports, ["getIspCacheNodesOperationCacheNodeInstallDetails", "getIspCacheNodesOperationCacheNodeInstallDetailsOutput"], () => require("./getIspCacheNodesOperationCacheNodeInstallDetails"));
exports.getIspCustomer = null;
exports.getIspCustomerOutput = null;
utilities.lazyLoad(exports, ["getIspCustomer", "getIspCustomerOutput"], () => require("./getIspCustomer"));
exports.IspCacheNodesOperation = null;
utilities.lazyLoad(exports, ["IspCacheNodesOperation"], () => require("./ispCacheNodesOperation"));
exports.IspCustomer = null;
utilities.lazyLoad(exports, ["IspCustomer"], () => require("./ispCustomer"));
// Export enums:
__exportStar(require("../types/enums/connectedcache"), exports);
// Export sub-modules:
const v20230501preview = require("./v20230501preview");
exports.v20230501preview = v20230501preview;
const _module = {
    version: utilities.getVersion(),
    construct: (name, type, urn) => {
        switch (type) {
            case "azure-native:connectedcache:CacheNodesOperation":
                return new exports.CacheNodesOperation(name, undefined, { urn });
            case "azure-native:connectedcache:EnterpriseCustomerOperation":
                return new exports.EnterpriseCustomerOperation(name, undefined, { urn });
            case "azure-native:connectedcache:EnterpriseMccCacheNodesOperation":
                return new exports.EnterpriseMccCacheNodesOperation(name, undefined, { urn });
            case "azure-native:connectedcache:EnterpriseMccCustomer":
                return new exports.EnterpriseMccCustomer(name, undefined, { urn });
            case "azure-native:connectedcache:IspCacheNodesOperation":
                return new exports.IspCacheNodesOperation(name, undefined, { urn });
            case "azure-native:connectedcache:IspCustomer":
                return new exports.IspCustomer(name, undefined, { urn });
            default:
                throw new Error(`unknown resource type ${type}`);
        }
    },
};
pulumi.runtime.registerResourceModule("azure-native", "connectedcache", _module);
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaW5kZXguanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi9jb25uZWN0ZWRjYWNoZS9pbmRleC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiO0FBQUEsc0VBQXNFO0FBQ3RFLGlGQUFpRjs7Ozs7Ozs7Ozs7Ozs7Ozs7QUFFakYseUNBQXlDO0FBQ3pDLDBDQUEwQztBQUs3QixRQUFBLG1CQUFtQixHQUErRCxJQUFXLENBQUM7QUFDM0csU0FBUyxDQUFDLFFBQVEsQ0FBQyxPQUFPLEVBQUUsQ0FBQyxxQkFBcUIsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLE9BQU8sQ0FBQyx1QkFBdUIsQ0FBQyxDQUFDLENBQUM7QUFJaEYsUUFBQSwyQkFBMkIsR0FBK0UsSUFBVyxDQUFDO0FBQ25JLFNBQVMsQ0FBQyxRQUFRLENBQUMsT0FBTyxFQUFFLENBQUMsNkJBQTZCLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxPQUFPLENBQUMsK0JBQStCLENBQUMsQ0FBQyxDQUFDO0FBSWhHLFFBQUEsZ0NBQWdDLEdBQXlGLElBQVcsQ0FBQztBQUNsSixTQUFTLENBQUMsUUFBUSxDQUFDLE9BQU8sRUFBRSxDQUFDLGtDQUFrQyxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsT0FBTyxDQUFDLG9DQUFvQyxDQUFDLENBQUMsQ0FBQztBQUkxRyxRQUFBLHFCQUFxQixHQUFtRSxJQUFXLENBQUM7QUFDakgsU0FBUyxDQUFDLFFBQVEsQ0FBQyxPQUFPLEVBQUUsQ0FBQyx1QkFBdUIsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLE9BQU8sQ0FBQyx5QkFBeUIsQ0FBQyxDQUFDLENBQUM7QUFHcEYsUUFBQSxzQkFBc0IsR0FBcUUsSUFBVyxDQUFDO0FBQ3ZHLFFBQUEsNEJBQTRCLEdBQTJFLElBQVcsQ0FBQztBQUNoSSxTQUFTLENBQUMsUUFBUSxDQUFDLE9BQU8sRUFBRSxDQUFDLHdCQUF3QixFQUFDLDhCQUE4QixDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsT0FBTyxDQUFD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