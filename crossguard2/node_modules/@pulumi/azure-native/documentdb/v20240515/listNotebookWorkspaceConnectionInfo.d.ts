import * as pulumi from "@pulumi/pulumi";
/**
 * Retrieves the connection info for the notebook workspace
 */
export declare function listNotebookWorkspaceConnectionInfo(args: ListNotebookWorkspaceConnectionInfoArgs, opts?: pulumi.InvokeOptions): Promise<ListNotebookWorkspaceConnectionInfoResult>;
export interface ListNotebookWorkspaceConnectionInfoArgs {
    /**
     * Cosmos DB database account name.
     */
    accountName: string;
    /**
     * The name of the notebook workspace resource.
     */
    notebookWorkspaceName: string;
    /**
     * The name of the resource group. The name is case insensitive.
     */
    resourceGroupName: string;
}
/**
 * The connection info for the given notebook workspace
 */
export interface ListNotebookWorkspaceConnectionInfoResult {
    /**
     * Specifies auth token used for connecting to Notebook server (uses token-based auth).
     */
    readonly authToken: string;
    /**
     * Specifies the endpoint of Notebook server.
     */
    readonly notebookServerEndpoint: string;
}
/**
 * Retrieves the connection info for the notebook workspace
 */
export declare function listNotebookWorkspaceConnectionInfoOutput(args: ListNotebookWorkspaceConnectionInfoOutputArgs, opts?: pulumi.InvokeOutputOptions): pulumi.Output<ListNotebookWorkspaceConnectionInfoResult>;
export interface ListNotebookWorkspaceConnectionInfoOutputArgs {
    /**
     * Cosmos DB database account name.
     */
    accountName: pulumi.Input<string>;
    /**
     * The name of the notebook workspace resource.
     */
    notebookWorkspaceName: pulumi.Input<string>;
    /**
     * The name of the resource group. The name is case insensitive.
     */
    resourceGroupName: pulumi.Input<string>;
}
