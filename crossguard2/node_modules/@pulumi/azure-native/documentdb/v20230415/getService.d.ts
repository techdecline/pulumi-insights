import * as pulumi from "@pulumi/pulumi";
import * as outputs from "../../types/output";
/**
 * Gets the status of service.
 */
export declare function getService(args: GetServiceArgs, opts?: pulumi.InvokeOptions): Promise<GetServiceResult>;
export interface GetServiceArgs {
    /**
     * Cosmos DB database account name.
     */
    accountName: string;
    /**
     * The name of the resource group. The name is case insensitive.
     */
    resourceGroupName: string;
    /**
     * Cosmos DB service name.
     */
    serviceName: string;
}
/**
 * Properties for the database account.
 */
export interface GetServiceResult {
    /**
     * The unique resource identifier of the database account.
     */
    readonly id: string;
    /**
     * The name of the database account.
     */
    readonly name: string;
    /**
     * Services response resource.
     */
    readonly properties: outputs.documentdb.v20230415.DataTransferServiceResourcePropertiesResponse | outputs.documentdb.v20230415.GraphAPIComputeServiceResourcePropertiesResponse | outputs.documentdb.v20230415.MaterializedViewsBuilderServiceResourcePropertiesResponse | outputs.documentdb.v20230415.SqlDedicatedGatewayServiceResourcePropertiesResponse;
    /**
     * The type of Azure resource.
     */
    readonly type: string;
}
/**
 * Gets the status of service.
 */
export declare function getServiceOutput(args: GetServiceOutputArgs, opts?: pulumi.InvokeOutputOptions): pulumi.Output<GetServiceResult>;
export interface GetServiceOutputArgs {
    /**
     * Cosmos DB database account name.
     */
    accountName: pulumi.Input<string>;
    /**
     * The name of the resource group. The name is case insensitive.
     */
    resourceGroupName: pulumi.Input<string>;
    /**
     * Cosmos DB service name.
     */
    serviceName: pulumi.Input<string>;
}
