import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../../types/input";
import * as outputs from "../../types/output";
import * as enums from "../../types/enums";
/**
 * Represents a mongo cluster resource.
 */
export declare class MongoCluster extends pulumi.CustomResource {
    /**
     * Get an existing MongoCluster resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    static get(name: string, id: pulumi.Input<pulumi.ID>, opts?: pulumi.CustomResourceOptions): MongoCluster;
    /**
     * Returns true if the given object is an instance of MongoCluster.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    static isInstance(obj: any): obj is MongoCluster;
    /**
     * The administrator's login for the mongo cluster.
     */
    readonly administratorLogin: pulumi.Output<string | undefined>;
    /**
     * A status of the mongo cluster.
     */
    readonly clusterStatus: pulumi.Output<string>;
    /**
     * The default mongo connection string for the cluster.
     */
    readonly connectionString: pulumi.Output<string>;
    /**
     * Earliest restore timestamp in UTC ISO8601 format.
     */
    readonly earliestRestoreTime: pulumi.Output<string>;
    /**
     * The geo-location where the resource lives
     */
    readonly location: pulumi.Output<string>;
    /**
     * The name of the resource
     */
    readonly name: pulumi.Output<string>;
    /**
     * The list of node group specs in the cluster.
     */
    readonly nodeGroupSpecs: pulumi.Output<outputs.documentdb.v20240215preview.NodeGroupSpecResponse[] | undefined>;
    /**
     * A provisioning state of the mongo cluster.
     */
    readonly provisioningState: pulumi.Output<string>;
    /**
     * The Mongo DB server version. Defaults to the latest available version if not specified.
     */
    readonly serverVersion: pulumi.Output<string | undefined>;
    /**
     * Azure Resource Manager metadata containing createdBy and modifiedBy information.
     */
    readonly systemData: pulumi.Output<outputs.documentdb.v20240215preview.SystemDataResponse>;
    /**
     * Resource tags.
     */
    readonly tags: pulumi.Output<{
        [key: string]: string;
    } | undefined>;
    /**
     * The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
     */
    readonly type: pulumi.Output<string>;
    /**
     * Create a MongoCluster resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: MongoClusterArgs, opts?: pulumi.CustomResourceOptions);
}
/**
 * The set of arguments for constructing a MongoCluster resource.
 */
export interface MongoClusterArgs {
    /**
     * The administrator's login for the mongo cluster.
     */
    administratorLogin?: pulumi.Input<string>;
    /**
     * The password of the administrator login.
     */
    administratorLoginPassword?: pulumi.Input<string>;
    /**
     * The mode to create a mongo cluster.
     */
    createMode?: pulumi.Input<string | enums.documentdb.v20240215preview.CreateMode>;
    /**
     * The geo-location where the resource lives
     */
    location?: pulumi.Input<string>;
    /**
     * The name of the mongo cluster.
     */
    mongoClusterName?: pulumi.Input<string>;
    /**
     * The list of node group specs in the cluster.
     */
    nodeGroupSpecs?: pulumi.Input<pulumi.Input<inputs.documentdb.v20240215preview.NodeGroupSpecArgs>[]>;
    /**
     * The name of the resource group. The name is case insensitive.
     */
    resourceGroupName: pulumi.Input<string>;
    /**
     * Parameters used for restore operations
     */
    restoreParameters?: pulumi.Input<inputs.documentdb.v20240215preview.MongoClusterRestoreParametersArgs>;
    /**
     * The Mongo DB server version. Defaults to the latest available version if not specified.
     */
    serverVersion?: pulumi.Input<string>;
    /**
     * Resource tags.
     */
    tags?: pulumi.Input<{
        [key: string]: pulumi.Input<string>;
    }>;
}
