"use strict";
// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***
Object.defineProperty(exports, "__esModule", { value: true });
exports.listMongoClusterConnectionStringsOutput = exports.listMongoClusterConnectionStrings = void 0;
const pulumi = require("@pulumi/pulumi");
const utilities = require("../../utilities");
/**
 * List mongo cluster connection strings. This includes the default connection string using SCRAM-SHA-256, as well as other connection strings supported by the cluster.
 */
function listMongoClusterConnectionStrings(args, opts) {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("azure-native:documentdb/v20240215preview:listMongoClusterConnectionStrings", {
        "mongoClusterName": args.mongoClusterName,
        "resourceGroupName": args.resourceGroupName,
    }, opts);
}
exports.listMongoClusterConnectionStrings = listMongoClusterConnectionStrings;
/**
 * List mongo cluster connection strings. This includes the default connection string using SCRAM-SHA-256, as well as other connection strings supported by the cluster.
 */
function listMongoClusterConnectionStringsOutput(args, opts) {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invokeOutput("azure-native:documentdb/v20240215preview:listMongoClusterConnectionStrings", {
        "mongoClusterName": args.mongoClusterName,
        "resourceGroupName": args.resourceGroupName,
    }, opts);
}
exports.listMongoClusterConnectionStringsOutput = listMongoClusterConnectionStringsOutput;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibGlzdE1vbmdvQ2x1c3RlckNvbm5lY3Rpb25TdHJpbmdzLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vZG9jdW1lbnRkYi92MjAyNDAyMTVwcmV2aWV3L2xpc3RNb25nb0NsdXN0ZXJDb25uZWN0aW9uU3RyaW5ncy50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiO0FBQUEsc0VBQXNFO0FBQ3RFLGlGQUFpRjs7O0FBRWpGLHlDQUF5QztBQUl6Qyw2Q0FBNkM7QUFFN0M7O0dBRUc7QUFDSCxTQUFnQixpQ0FBaUMsQ0FBQyxJQUEyQyxFQUFFLElBQTJCO0lBQ3RILElBQUksR0FBRyxNQUFNLENBQUMsWUFBWSxDQUFDLFNBQVMsQ0FBQyxvQkFBb0IsRUFBRSxFQUFFLElBQUksSUFBSSxFQUFFLENBQUMsQ0FBQztJQUN6RSxPQUFPLE1BQU0sQ0FBQyxPQUFPLENBQUMsTUFBTSxDQUFDLDRFQUE0RSxFQUFFO1FBQ3ZHLGtCQUFrQixFQUFFLElBQUksQ0FBQyxnQkFBZ0I7UUFDekMsbUJBQW1CLEVBQUUsSUFBSSxDQUFDLGlCQUFpQjtLQUM5QyxFQUFFLElBQUksQ0FBQyxDQUFDO0FBQ2IsQ0FBQztBQU5ELDhFQU1DO0FBc0JEOztHQUVHO0FBQ0gsU0FBZ0IsdUNBQXVDLENBQUMsSUFBaUQsRUFBRSxJQUFpQztJQUN4SSxJQUFJLEdBQUcsTUFBTSxDQUFDLFlBQVksQ0FBQyxTQUFTLENBQUMsb0JBQW9CLEVBQUUsRUFBRSxJQUFJLElBQUksRUFBRSxDQUFDLENBQUM7SUFDekUsT0FBTyxNQUFNLENBQUMsT0FBTyxDQUFDLFlBQVksQ0FBQyw0RUFBNEUsRUFBRTtRQUM3RyxrQkFBa0IsRUFBRSxJQUFJLENBQUMsZ0JBQWdCO1FBQ3pDLG1CQUFtQixFQUFFLElBQUksQ0FBQyxpQkFBaUI7S0FDOUMsRUFBRSxJQUFJLENBQUMsQ0FBQztBQUNiLENBQUM7QUFORCwwRkFNQyJ9