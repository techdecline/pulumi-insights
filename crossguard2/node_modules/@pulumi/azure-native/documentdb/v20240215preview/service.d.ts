import * as pulumi from "@pulumi/pulumi";
import * as outputs from "../../types/output";
import * as enums from "../../types/enums";
/**
 * Properties for the database account.
 */
export declare class Service extends pulumi.CustomResource {
    /**
     * Get an existing Service resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    static get(name: string, id: pulumi.Input<pulumi.ID>, opts?: pulumi.CustomResourceOptions): Service;
    /**
     * Returns true if the given object is an instance of Service.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    static isInstance(obj: any): obj is Service;
    /**
     * The name of the database account.
     */
    readonly name: pulumi.Output<string>;
    /**
     * Services response resource.
     */
    readonly properties: pulumi.Output<outputs.documentdb.v20240215preview.DataTransferServiceResourcePropertiesResponse | outputs.documentdb.v20240215preview.GraphAPIComputeServiceResourcePropertiesResponse | outputs.documentdb.v20240215preview.MaterializedViewsBuilderServiceResourcePropertiesResponse | outputs.documentdb.v20240215preview.SqlDedicatedGatewayServiceResourcePropertiesResponse>;
    /**
     * The type of Azure resource.
     */
    readonly type: pulumi.Output<string>;
    /**
     * Create a Service resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: ServiceArgs, opts?: pulumi.CustomResourceOptions);
}
/**
 * The set of arguments for constructing a Service resource.
 */
export interface ServiceArgs {
    /**
     * Cosmos DB database account name.
     */
    accountName: pulumi.Input<string>;
    /**
     * Instance count for the service.
     */
    instanceCount?: pulumi.Input<number>;
    /**
     * Instance type for the service.
     */
    instanceSize?: pulumi.Input<string | enums.documentdb.v20240215preview.ServiceSize>;
    /**
     * The name of the resource group. The name is case insensitive.
     */
    resourceGroupName: pulumi.Input<string>;
    /**
     * Cosmos DB service name.
     */
    serviceName?: pulumi.Input<string>;
    /**
     * ServiceType for the service.
     */
    serviceType?: pulumi.Input<string | enums.documentdb.v20240215preview.ServiceType>;
}
