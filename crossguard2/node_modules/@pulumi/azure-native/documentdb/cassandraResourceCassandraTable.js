"use strict";
// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***
Object.defineProperty(exports, "__esModule", { value: true });
exports.CassandraResourceCassandraTable = void 0;
const pulumi = require("@pulumi/pulumi");
const utilities = require("../utilities");
/**
 * An Azure Cosmos DB Cassandra table.
 * Azure REST API version: 2023-04-15. Prior API version in Azure Native 1.x: 2021-03-15.
 *
 * Other available API versions: 2023-03-15-preview, 2023-09-15, 2023-09-15-preview, 2023-11-15, 2023-11-15-preview, 2024-02-15-preview, 2024-05-15, 2024-05-15-preview, 2024-08-15, 2024-09-01-preview, 2024-11-15, 2024-12-01-preview.
 */
class CassandraResourceCassandraTable extends pulumi.CustomResource {
    /**
     * Get an existing CassandraResourceCassandraTable resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    static get(name, id, opts) {
        return new CassandraResourceCassandraTable(name, undefined, Object.assign(Object.assign({}, opts), { id: id }));
    }
    /**
     * Returns true if the given object is an instance of CassandraResourceCassandraTable.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    static isInstance(obj) {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === CassandraResourceCassandraTable.__pulumiType;
    }
    /**
     * Create a CassandraResourceCassandraTable resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name, args, opts) {
        let resourceInputs = {};
        opts = opts || {};
        if (!opts.id) {
            if ((!args || args.accountName === undefined) && !opts.urn) {
                throw new Error("Missing required property 'accountName'");
            }
            if ((!args || args.keyspaceName === undefined) && !opts.urn) {
                throw new Error("Missing required property 'keyspaceName'");
            }
            if ((!args || args.resource === undefined) && !opts.urn) {
                throw new Error("Missing required property 'resource'");
            }
            if ((!args || args.resourceGroupName === undefined) && !opts.urn) {
                throw new Error("Missing required property 'resourceGroupName'");
            }
            resourceInputs["accountName"] = args ? args.accountName : undefined;
            resourceInputs["keyspaceName"] = args ? args.keyspaceName : undefined;
            resourceInputs["location"] = args ? args.location : undefined;
            resourceInputs["options"] = args ? args.options : undefined;
            resourceInputs["resource"] = args ? args.resource : undefined;
            resourceInputs["resourceGroupName"] = args ? args.resourceGroupName : undefined;
            resourceInputs["tableName"] = args ? args.tableName : undefined;
            resourceInputs["tags"] = args ? args.tags : undefined;
            resourceInputs["name"] = undefined /*out*/;
            resourceInputs["type"] = undefined /*out*/;
        }
        else {
            resourceInputs["location"] = undefined /*out*/;
            resourceInputs["name"] = undefined /*out*/;
            resourceInputs["options"] = undefined /*out*/;
            resourceInputs["resource"] = undefined /*out*/;
            resourceInputs["tags"] = undefined /*out*/;
            resourceInputs["type"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        const aliasOpts = { aliases: [{ type: "azure-native:documentdb/v20150401:CassandraResourceCassandraTable" }, { type: "azure-native:documentdb/v20150408:CassandraResourceCassandraTable" }, { type: "azure-native:documentdb/v20151106:CassandraResourceCassandraTable" }, { type: "azure-native:documentdb/v20160319:CassandraResourceCassandraTable" }, { type: "azure-native:documentdb/v20160331:CassandraResourceCassandraTable" }, { type: "azure-native:documentdb/v20190801:CassandraResourceCassandraTable" }, { type: "azure-native:documentdb/v20191212:CassandraResourceCassandraTable" }, { type: "azure-native:documentdb/v20200301:CassandraResourceCassandraTable" }, { type: "azure-native:documentdb/v20200401:CassandraResourceCassandraTable" }, { type: "azure-native:documentdb/v20200601preview:CassandraResourceCassandraTable" }, { type: "azure-native:documentdb/v20200901:CassandraResourceCassandraTable" }, { type: "azure-native:documentdb/v20210115:CassandraResourceCassandraTable" }, { type: "azure-native:documentdb/v20210301preview:CassandraResourceCassandraTable" }, { type: "azure-native:documentdb/v20210315:CassandraResourceCassandraTable" }, { type: "azure-native:documentdb/v20210401preview:CassandraResourceCassandraTable" }, { type: "azure-native:documentdb/v20210415:CassandraResourceCassandraTable" }, { type: "azure-native:documentdb/v20210515:CassandraResourceCassandraTable" }, { type: "azure-native:documentdb/v20210615:CassandraResourceCassandraTable" }, { type: "azure-native:documentdb/v20210701preview:CassandraResourceCassandraTable" }, { type: "azure-native:documentdb/v20211015:CassandraResourceCassandraTable" }, { type: "azure-native:documentdb/v20211015preview:CassandraResourceCassandraTable" }, { type: "azure-native:documentdb/v20211115preview:CassandraResourceCassandraTable" }, { type: "azure-native:documentdb/v20220215preview:CassandraResourceCassandraTable" }, { type: "azure-native:documentdb/v20220515:CassandraResourceCassandraTable" }, { type: "azure-native:documentdb/v20220515preview:CassandraResourceCassandraTable" }, { type: "azure-native:documentdb/v20220815:CassandraResourceCassandraTable" }, { type: "azure-native:documentdb/v20220815preview:CassandraResourceCassandraTable" }, { type: "azure-native:documentdb/v20221115:CassandraResourceCassandraTable" }, { type: "azure-native:documentdb/v20221115preview:CassandraResourceCassandraTable" }, { type: "azure-native:documentdb/v20230301preview:CassandraResourceCassandraTable" }, { type: "azure-native:documentdb/v20230315:CassandraResourceCassandraTable" }, { type: "azure-native:documentdb/v20230315preview:CassandraResourceCassandraTable" }, { type: "azure-native:documentdb/v20230415:CassandraResourceCassandraTable" }, { type: "azure-native:documentdb/v20230915:CassandraResourceCassandraTable" }, { type: "azure-native:documentdb/v20230915preview:CassandraResourceCassandraTable" }, { type: "azure-native:documentdb/v20231115:CassandraResourceCassandraTable" }, { type: "azure-native:documentdb/v20231115preview:CassandraResourceCassandraTable" }, { type: "azure-native:documentdb/v20240215preview:CassandraResourceCassandraTable" }, { type: "azure-native:documentdb/v20240515:CassandraResourceCassandraTable" }, { type: "azure-native:documentdb/v20240515preview:CassandraResourceCassandraTable" }, { type: "azure-native:documentdb/v20240815:CassandraResourceCassandraTable" }, { type: "azure-native:documentdb/v20240901preview:CassandraResourceCassandraTable" }, { type: "azure-native:documentdb/v20241115:CassandraResourceCassandraTable" }, { type: "azure-native:documentdb/v20241201preview:CassandraResourceCassandraTable" }] };
        opts = pulumi.mergeOptions(opts, aliasOpts);
        super(CassandraResourceCassandraTable.__pulumiType, name, resourceInputs, opts);
    }
}
exports.CassandraResourceCassandraTable = CassandraResourceCassandraTable;
/** @internal */
CassandraResourceCassandraTable.__pulumiType = 'azure-native:documentdb:CassandraResourceCassandraTable';
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY2Fzc2FuZHJhUmVzb3VyY2VDYXNzYW5kcmFUYWJsZS5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uL2RvY3VtZW50ZGIvY2Fzc2FuZHJhUmVzb3VyY2VDYXNzYW5kcmFUYWJsZS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiO0FBQUEsc0VBQXNFO0FBQ3RFLGlGQUFpRjs7O0FBRWpGLHlDQUF5QztBQUl6QywwQ0FBMEM7QUFFMUM7Ozs7O0dBS0c7QUFDSCxNQUFhLCtCQUFnQyxTQUFRLE1BQU0sQ0FBQyxjQUFjO0lBQ3RFOzs7Ozs7O09BT0c7SUFDSSxNQUFNLENBQUMsR0FBRyxDQUFDLElBQVksRUFBRSxFQUEyQixFQUFFLElBQW1DO1FBQzVGLE9BQU8sSUFBSSwrQkFBK0IsQ0FBQyxJQUFJLEVBQUUsU0FBZ0Isa0NBQU8sSUFBSSxLQUFFLEVBQUUsRUFBRSxFQUFFLElBQUcsQ0FBQztJQUM1RixDQUFDO0lBS0Q7OztPQUdHO0lBQ0ksTUFBTSxDQUFDLFVBQVUsQ0FBQyxHQUFRO1FBQzdCLElBQUksR0FBRyxLQUFLLFNBQVMsSUFBSSxHQUFHLEtBQUssSUFBSSxFQUFFO1lBQ25DLE9BQU8sS0FBSyxDQUFDO1NBQ2hCO1FBQ0QsT0FBTyxHQUFHLENBQUMsY0FBYyxDQUFDLEtBQUssK0JBQStCLENBQUMsWUFBWSxDQUFDO0lBQ2hGLENBQUM7SUFxQkQ7Ozs7OztPQU1HO0lBQ0gsWUFBWSxJQUFZLEVBQUUsSUFBeUMsRUFBRSxJQUFtQztRQUNwRyxJQUFJLGNBQWMsR0FBa0IsRUFBRSxDQUFDO1FBQ3ZDLElBQUksR0FBRyxJQUFJLElBQUksRUFBRSxDQUFDO1FBQ2xCLElBQUksQ0FBQyxJQUFJLENBQUMsRUFBRSxFQUFFO1lBQ1YsSUFBSSxDQUFDLENBQUMsSUFBSSxJQUFJLElBQUksQ0FBQyxXQUFXLEtBQUssU0FBUyxDQUFDLElBQUksQ0FBQyxJQUFJLENBQUMsR0FBRyxFQUFFO2dCQUN4RCxNQUFNLElBQUksS0FBSyxDQUFDLHlDQUF5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QUFFLEVBQUUsRUFBRSxJQUFJLEVBQUUsbUVBQW1FLEVBQUUsRUFBRSxFQUFFLElBQUksRUFBRSxtRUFBbUUsRUFBRSxFQUFFLEVBQUUsSUFBSSxFQUFFLG1FQUFtRSxFQUFFLEVBQUUsRUFBRSxJQUFJLEVBQUUsbUVBQW1FLEVBQUUsRUFBRSxFQUFFLElBQUksRUFBRSxtRUFBbUUsRUFBRSxFQUFFLEVBQUUsSUFBSSxFQUFFLG1FQUFtRSxFQUFFLEVBQUUsRUFBRSxJQUFJLEVBQUUsMEVBQTBFLEVBQUUsRUFBRSxFQUFFLElBQUksRUFBRSxtRUFBbUUsRUFBRSxFQUFFLEVBQUUsSUFBSSxFQUFFLG1FQUFtRSxFQUFFLEVBQUUsRUFBRSxJQUFJLEVBQUUsMEVBQTBFLEVBQUUsRUFBRSxFQUFFLElBQUksRUFBRSxtRUFBbUUsRUFBRSxFQUFFLEVBQUUsSUFBSSxFQUFFLDBFQUEwRSxFQUFFLEVBQUUsRUFBRSxJQUFJLEVBQUUsbUVBQW1FLEVBQUUsRUFBRSxFQUFFLElBQUksRUFBRSxtRUFBbUUsRUFBRSxFQUFFLEVBQUUsSUFBSSxFQUFFLG1FQUFtRSxFQUFFLEVBQUUsRUFBRSxJQUFJLEVBQUUsMEVBQTBFLEVBQUUsRUFBRSxFQUFFLElBQUksRUFBRSxtRUFBbUUsRUFBRSxFQUFFLEVBQUUsSUFBSSxFQUFFLDBFQUEwRSxFQUFFLEVBQUUsRUFBRSxJQUFJLEVBQUUsMEVBQTBFLEVBQUUsRUFBRSxFQUFFLElBQUksRUFBRSwwRUFBMEUsRUFBRSxFQUFFLEVBQUUsSUFBSSxFQUFFLG1FQUFtRSxFQUFFLEVBQUUsRUFBRSxJQUFJLEVBQUUsMEVBQTBFLEVBQUUsRUFBRSxFQUFFLElBQUksRUFBRSxtRUFBbUUsRUFBRSxFQUFFLEVBQUUsSUFBSSxFQUFFLDBFQUEwRSxFQUFFLEVBQUUsRUFBRSxJQUFJLEVBQUUsbUVBQW1FLEVBQUUsRUFBRSxFQUFFLElBQUksRUFBRSwwRUFBMEUsRUFBRSxFQUFFLEVBQUUsSUFBSSxFQUFFLDBFQUEwRSxFQUFFLEVBQUUsRUFBRSxJQUFJLEVBQUUsbUVBQW1FLEVBQUUsRUFBRSxFQUFFLElBQUksRUFBRSwwRUFBMEUsRUFBRSxFQUFFLEVBQUUsSUFBSSxFQUFFLG1FQUFtRSxFQUFFLEVBQUUsRUFBRSxJQUFJLEVBQUUsbUVBQW1FLEVBQUUsRUFBRSxFQUFFLElBQUksRUFBRSwwRUFBMEUsRUFBRSxFQUFFLEVBQUUsSUFBSSxFQUFFLG1FQUFtRSxFQUFFLEVBQUUsRUFBRSxJQUFJLEVBQUUsMEVBQTBFLEVBQUUsRUFBRSxFQUFFLElBQUksRUFBRSwwRUFBMEUsRUFBRSxFQUFFLEVBQUUsSUFBSSxFQUFFLG1FQUFtRSxFQUFFLEVBQUUsRUFBRSxJQUFJLEVBQUUsMEVBQTBFLEVBQUUsRUFBRSxFQUFFLElBQUksRUFBRSxtRUFBbUUsRUFBRSxFQUFFLEVBQUUsSUFBSSxFQUFFLDBFQUEwRSxFQUFFLEVBQUUsRUFBRSxJQUFJLEVBQUUsbUVBQW1FLEVBQUUsRUFBRSxFQUFFLElBQUksRUFBRSwwRUFBMEUsRUFBRSxDQUFDLEVBQUUsQ0FBQztRQUNsakgsSUFBSSxHQUFHLE1BQU0sQ0FBQyxZQUFZLENBQUMsSUFBSSxFQUFFLFNBQVMsQ0FBQyxDQUFDO1FBQzVDLEtBQUssQ0FBQywrQkFBK0IsQ0FBQyxZQUFZLEVBQUUsSUFBSSxFQUFFLGNBQWMsRUFBRSxJQUFJLENBQUMsQ0FBQztJQUNwRixDQUFDOztBQTNGTCwwRUE0RkM7QUEvRUcsZ0JBQWdCO0FBQ08sNENBQVksR0FBRyx5REFBeUQsQ0FBQyJ9