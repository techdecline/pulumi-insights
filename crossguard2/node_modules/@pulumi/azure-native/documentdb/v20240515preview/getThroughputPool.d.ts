import * as pulumi from "@pulumi/pulumi";
import * as outputs from "../../types/output";
/**
 * Retrieves the properties of an existing Azure Cosmos DB Throughput Pool
 */
export declare function getThroughputPool(args: GetThroughputPoolArgs, opts?: pulumi.InvokeOptions): Promise<GetThroughputPoolResult>;
export interface GetThroughputPoolArgs {
    /**
     * The name of the resource group. The name is case insensitive.
     */
    resourceGroupName: string;
    /**
     * Cosmos DB Throughput Pool name.
     */
    throughputPoolName: string;
}
/**
 * An Azure Cosmos DB Throughputpool.
 */
export interface GetThroughputPoolResult {
    /**
     * Fully qualified resource ID for the resource. E.g. "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
     */
    readonly id: string;
    /**
     * The geo-location where the resource lives
     */
    readonly location: string;
    /**
     * Value for throughput to be shared among CosmosDB resources in the pool.
     */
    readonly maxThroughput?: number;
    /**
     * The name of the resource
     */
    readonly name: string;
    /**
     * A provisioning state of the ThroughputPool.
     */
    readonly provisioningState: string;
    /**
     * Azure Resource Manager metadata containing createdBy and modifiedBy information.
     */
    readonly systemData: outputs.documentdb.v20240515preview.SystemDataResponse;
    /**
     * Resource tags.
     */
    readonly tags?: {
        [key: string]: string;
    };
    /**
     * The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
     */
    readonly type: string;
}
/**
 * Retrieves the properties of an existing Azure Cosmos DB Throughput Pool
 */
export declare function getThroughputPoolOutput(args: GetThroughputPoolOutputArgs, opts?: pulumi.InvokeOutputOptions): pulumi.Output<GetThroughputPoolResult>;
export interface GetThroughputPoolOutputArgs {
    /**
     * The name of the resource group. The name is case insensitive.
     */
    resourceGroupName: pulumi.Input<string>;
    /**
     * Cosmos DB Throughput Pool name.
     */
    throughputPoolName: pulumi.Input<string>;
}
