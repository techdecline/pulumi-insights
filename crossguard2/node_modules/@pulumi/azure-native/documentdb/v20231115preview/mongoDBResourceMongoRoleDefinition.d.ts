import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../../types/input";
import * as outputs from "../../types/output";
import * as enums from "../../types/enums";
/**
 * An Azure Cosmos DB Mongo Role Definition.
 */
export declare class MongoDBResourceMongoRoleDefinition extends pulumi.CustomResource {
    /**
     * Get an existing MongoDBResourceMongoRoleDefinition resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    static get(name: string, id: pulumi.Input<pulumi.ID>, opts?: pulumi.CustomResourceOptions): MongoDBResourceMongoRoleDefinition;
    /**
     * Returns true if the given object is an instance of MongoDBResourceMongoRoleDefinition.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    static isInstance(obj: any): obj is MongoDBResourceMongoRoleDefinition;
    /**
     * The database name for which access is being granted for this Role Definition.
     */
    readonly databaseName: pulumi.Output<string | undefined>;
    /**
     * The name of the database account.
     */
    readonly name: pulumi.Output<string>;
    /**
     * A set of privileges contained by the Role Definition. This will allow application of this Role Definition on the entire database account or any underlying Database / Collection. Scopes higher than Database are not enforceable as privilege.
     */
    readonly privileges: pulumi.Output<outputs.documentdb.v20231115preview.PrivilegeResponse[] | undefined>;
    /**
     * A user-friendly name for the Role Definition. Must be unique for the database account.
     */
    readonly roleName: pulumi.Output<string | undefined>;
    /**
     * The set of roles inherited by this Role Definition.
     */
    readonly roles: pulumi.Output<outputs.documentdb.v20231115preview.RoleResponse[] | undefined>;
    /**
     * The type of Azure resource.
     */
    readonly type: pulumi.Output<string>;
    /**
     * Create a MongoDBResourceMongoRoleDefinition resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: MongoDBResourceMongoRoleDefinitionArgs, opts?: pulumi.CustomResourceOptions);
}
/**
 * The set of arguments for constructing a MongoDBResourceMongoRoleDefinition resource.
 */
export interface MongoDBResourceMongoRoleDefinitionArgs {
    /**
     * Cosmos DB database account name.
     */
    accountName: pulumi.Input<string>;
    /**
     * The database name for which access is being granted for this Role Definition.
     */
    databaseName?: pulumi.Input<string>;
    /**
     * The ID for the Role Definition {dbName.roleName}.
     */
    mongoRoleDefinitionId?: pulumi.Input<string>;
    /**
     * A set of privileges contained by the Role Definition. This will allow application of this Role Definition on the entire database account or any underlying Database / Collection. Scopes higher than Database are not enforceable as privilege.
     */
    privileges?: pulumi.Input<pulumi.Input<inputs.documentdb.v20231115preview.PrivilegeArgs>[]>;
    /**
     * The name of the resource group. The name is case insensitive.
     */
    resourceGroupName: pulumi.Input<string>;
    /**
     * A user-friendly name for the Role Definition. Must be unique for the database account.
     */
    roleName?: pulumi.Input<string>;
    /**
     * The set of roles inherited by this Role Definition.
     */
    roles?: pulumi.Input<pulumi.Input<inputs.documentdb.v20231115preview.RoleArgs>[]>;
    /**
     * Indicates whether the Role Definition was built-in or user created.
     */
    type?: pulumi.Input<enums.documentdb.v20231115preview.MongoRoleDefinitionType>;
}
