import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../../types/input";
import * as outputs from "../../types/output";
import * as enums from "../../types/enums";
/**
 * Environment entity.
 */
export declare class Environment extends pulumi.CustomResource {
    /**
     * Get an existing Environment resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    static get(name: string, id: pulumi.Input<pulumi.ID>, opts?: pulumi.CustomResourceOptions): Environment;
    /**
     * Returns true if the given object is an instance of Environment.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    static isInstance(obj: any): obj is Environment;
    /**
     * The custom metadata defined for API catalog entities.
     */
    readonly customProperties: pulumi.Output<any | undefined>;
    /**
     * The environment description.
     */
    readonly description: pulumi.Output<string | undefined>;
    /**
     * Environment kind.
     */
    readonly kind: pulumi.Output<string>;
    /**
     * The name of the resource
     */
    readonly name: pulumi.Output<string>;
    /**
     * Environment onboarding information
     */
    readonly onboarding: pulumi.Output<outputs.apicenter.v20240301.OnboardingResponse | undefined>;
    /**
     * Server information of the environment.
     */
    readonly server: pulumi.Output<outputs.apicenter.v20240301.EnvironmentServerResponse | undefined>;
    /**
     * Azure Resource Manager metadata containing createdBy and modifiedBy information.
     */
    readonly systemData: pulumi.Output<outputs.apicenter.v20240301.SystemDataResponse>;
    /**
     * Environment title.
     */
    readonly title: pulumi.Output<string>;
    /**
     * The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
     */
    readonly type: pulumi.Output<string>;
    /**
     * Create a Environment resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: EnvironmentArgs, opts?: pulumi.CustomResourceOptions);
}
/**
 * The set of arguments for constructing a Environment resource.
 */
export interface EnvironmentArgs {
    /**
     * The custom metadata defined for API catalog entities.
     */
    customProperties?: any;
    /**
     * The environment description.
     */
    description?: pulumi.Input<string>;
    /**
     * The name of the environment.
     */
    environmentName?: pulumi.Input<string>;
    /**
     * Environment kind.
     */
    kind: pulumi.Input<string | enums.apicenter.v20240301.EnvironmentKind>;
    /**
     * Environment onboarding information
     */
    onboarding?: pulumi.Input<inputs.apicenter.v20240301.OnboardingArgs>;
    /**
     * The name of the resource group. The name is case insensitive.
     */
    resourceGroupName: pulumi.Input<string>;
    /**
     * Server information of the environment.
     */
    server?: pulumi.Input<inputs.apicenter.v20240301.EnvironmentServerArgs>;
    /**
     * The name of Azure API Center service.
     */
    serviceName: pulumi.Input<string>;
    /**
     * Environment title.
     */
    title: pulumi.Input<string>;
    /**
     * The name of the workspace.
     */
    workspaceName: pulumi.Input<string>;
}
