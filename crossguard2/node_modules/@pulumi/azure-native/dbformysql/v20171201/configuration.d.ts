import * as pulumi from "@pulumi/pulumi";
/**
 * Represents a Configuration.
 */
export declare class Configuration extends pulumi.CustomResource {
    /**
     * Get an existing Configuration resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    static get(name: string, id: pulumi.Input<pulumi.ID>, opts?: pulumi.CustomResourceOptions): Configuration;
    /**
     * Returns true if the given object is an instance of Configuration.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    static isInstance(obj: any): obj is Configuration;
    /**
     * Allowed values of the configuration.
     */
    readonly allowedValues: pulumi.Output<string>;
    /**
     * Data type of the configuration.
     */
    readonly dataType: pulumi.Output<string>;
    /**
     * Default value of the configuration.
     */
    readonly defaultValue: pulumi.Output<string>;
    /**
     * Description of the configuration.
     */
    readonly description: pulumi.Output<string>;
    /**
     * The name of the resource
     */
    readonly name: pulumi.Output<string>;
    /**
     * Source of the configuration.
     */
    readonly source: pulumi.Output<string | undefined>;
    /**
     * The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
     */
    readonly type: pulumi.Output<string>;
    /**
     * Value of the configuration.
     */
    readonly value: pulumi.Output<string | undefined>;
    /**
     * Create a Configuration resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: ConfigurationArgs, opts?: pulumi.CustomResourceOptions);
}
/**
 * The set of arguments for constructing a Configuration resource.
 */
export interface ConfigurationArgs {
    /**
     * The name of the server configuration.
     */
    configurationName?: pulumi.Input<string>;
    /**
     * The name of the resource group. The name is case insensitive.
     */
    resourceGroupName: pulumi.Input<string>;
    /**
     * The name of the server.
     */
    serverName: pulumi.Input<string>;
    /**
     * Source of the configuration.
     */
    source?: pulumi.Input<string>;
    /**
     * Value of the configuration.
     */
    value?: pulumi.Input<string>;
}
