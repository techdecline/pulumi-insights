import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
/**
 * Represents an curation profile resource.
 * Azure REST API version: 2024-08-01-preview.
 *
 * Other available API versions: 2024-10-01-preview.
 */
export declare class CurationProfile extends pulumi.CustomResource {
    /**
     * Get an existing CurationProfile resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    static get(name: string, id: pulumi.Input<pulumi.ID>, opts?: pulumi.CustomResourceOptions): CurationProfile;
    /**
     * Returns true if the given object is an instance of CurationProfile.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    static isInstance(obj: any): obj is CurationProfile;
    /**
     * The name of the resource
     */
    readonly name: pulumi.Output<string>;
    /**
     * The provisioning state of the resource.
     */
    readonly provisioningState: pulumi.Output<string>;
    /**
     * Resource policies that are a part of this curation profile.
     */
    readonly resourcePolicies: pulumi.Output<outputs.devcenter.ResourcePolicyResponse[] | undefined>;
    /**
     * Resources that have access to the shared resources that are a part of this curation profile.
     */
    readonly scopes: pulumi.Output<string[] | undefined>;
    /**
     * Azure Resource Manager metadata containing createdBy and modifiedBy information.
     */
    readonly systemData: pulumi.Output<outputs.devcenter.SystemDataResponse>;
    /**
     * The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
     */
    readonly type: pulumi.Output<string>;
    /**
     * Create a CurationProfile resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: CurationProfileArgs, opts?: pulumi.CustomResourceOptions);
}
/**
 * The set of arguments for constructing a CurationProfile resource.
 */
export interface CurationProfileArgs {
    /**
     * The name of the curation profile.
     */
    curationProfileName?: pulumi.Input<string>;
    /**
     * The name of the devcenter.
     */
    devCenterName: pulumi.Input<string>;
    /**
     * The name of the resource group. The name is case insensitive.
     */
    resourceGroupName: pulumi.Input<string>;
    /**
     * Resource policies that are a part of this curation profile.
     */
    resourcePolicies?: pulumi.Input<pulumi.Input<inputs.devcenter.ResourcePolicyArgs>[]>;
    /**
     * Resources that have access to the shared resources that are a part of this curation profile.
     */
    scopes?: pulumi.Input<pulumi.Input<string>[]>;
}
