import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../../types/input";
import * as outputs from "../../types/output";
import * as enums from "../../types/enums";
/**
 * Represents a definition for a Developer Machine.
 */
export declare class DevBoxDefinition extends pulumi.CustomResource {
    /**
     * Get an existing DevBoxDefinition resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    static get(name: string, id: pulumi.Input<pulumi.ID>, opts?: pulumi.CustomResourceOptions): DevBoxDefinition;
    /**
     * Returns true if the given object is an instance of DevBoxDefinition.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    static isInstance(obj: any): obj is DevBoxDefinition;
    /**
     * Image reference information for the currently active image (only populated during updates).
     */
    readonly activeImageReference: pulumi.Output<outputs.devcenter.v20230401.ImageReferenceResponse>;
    /**
     * Indicates whether Dev Boxes created with this definition are capable of hibernation. Not all images are capable of supporting hibernation. To find out more see https://aka.ms/devbox/hibernate
     */
    readonly hibernateSupport: pulumi.Output<string | undefined>;
    /**
     * Image reference information.
     */
    readonly imageReference: pulumi.Output<outputs.devcenter.v20230401.ImageReferenceResponse>;
    /**
     * Details for image validator error. Populated when the image validation is not successful.
     */
    readonly imageValidationErrorDetails: pulumi.Output<outputs.devcenter.v20230401.ImageValidationErrorDetailsResponse>;
    /**
     * Validation status of the configured image.
     */
    readonly imageValidationStatus: pulumi.Output<string>;
    /**
     * The geo-location where the resource lives
     */
    readonly location: pulumi.Output<string>;
    /**
     * The name of the resource
     */
    readonly name: pulumi.Output<string>;
    /**
     * The storage type used for the Operating System disk of Dev Boxes created using this definition.
     */
    readonly osStorageType: pulumi.Output<string | undefined>;
    /**
     * The provisioning state of the resource.
     */
    readonly provisioningState: pulumi.Output<string>;
    /**
     * The SKU for Dev Boxes created using this definition.
     */
    readonly sku: pulumi.Output<outputs.devcenter.v20230401.SkuResponse>;
    /**
     * Azure Resource Manager metadata containing createdBy and modifiedBy information.
     */
    readonly systemData: pulumi.Output<outputs.devcenter.v20230401.SystemDataResponse>;
    /**
     * Resource tags.
     */
    readonly tags: pulumi.Output<{
        [key: string]: string;
    } | undefined>;
    /**
     * The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
     */
    readonly type: pulumi.Output<string>;
    /**
     * Create a DevBoxDefinition resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: DevBoxDefinitionArgs, opts?: pulumi.CustomResourceOptions);
}
/**
 * The set of arguments for constructing a DevBoxDefinition resource.
 */
export interface DevBoxDefinitionArgs {
    /**
     * The name of the Dev Box definition.
     */
    devBoxDefinitionName?: pulumi.Input<string>;
    /**
     * The name of the devcenter.
     */
    devCenterName: pulumi.Input<string>;
    /**
     * Indicates whether Dev Boxes created with this definition are capable of hibernation. Not all images are capable of supporting hibernation. To find out more see https://aka.ms/devbox/hibernate
     */
    hibernateSupport?: pulumi.Input<string | enums.devcenter.v20230401.HibernateSupport>;
    /**
     * Image reference information.
     */
    imageReference: pulumi.Input<inputs.devcenter.v20230401.ImageReferenceArgs>;
    /**
     * The geo-location where the resource lives
     */
    location?: pulumi.Input<string>;
    /**
     * The storage type used for the Operating System disk of Dev Boxes created using this definition.
     */
    osStorageType?: pulumi.Input<string>;
    /**
     * The name of the resource group. The name is case insensitive.
     */
    resourceGroupName: pulumi.Input<string>;
    /**
     * The SKU for Dev Boxes created using this definition.
     */
    sku: pulumi.Input<inputs.devcenter.v20230401.SkuArgs>;
    /**
     * Resource tags.
     */
    tags?: pulumi.Input<{
        [key: string]: pulumi.Input<string>;
    }>;
}
