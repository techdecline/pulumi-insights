import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../../types/input";
import * as outputs from "../../types/output";
import * as enums from "../../types/enums";
/**
 * Represents a catalog.
 */
export declare class Catalog extends pulumi.CustomResource {
    /**
     * Get an existing Catalog resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    static get(name: string, id: pulumi.Input<pulumi.ID>, opts?: pulumi.CustomResourceOptions): Catalog;
    /**
     * Returns true if the given object is an instance of Catalog.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    static isInstance(obj: any): obj is Catalog;
    /**
     * Properties for an Azure DevOps catalog type.
     */
    readonly adoGit: pulumi.Output<outputs.devcenter.v20240201.GitCatalogResponse | undefined>;
    /**
     * The connection state of the catalog.
     */
    readonly connectionState: pulumi.Output<string>;
    /**
     * Properties for a GitHub catalog type.
     */
    readonly gitHub: pulumi.Output<outputs.devcenter.v20240201.GitCatalogResponse | undefined>;
    /**
     * When the catalog was last connected.
     */
    readonly lastConnectionTime: pulumi.Output<string>;
    /**
     * Stats of the latest synchronization.
     */
    readonly lastSyncStats: pulumi.Output<outputs.devcenter.v20240201.SyncStatsResponse>;
    /**
     * When the catalog was last synced.
     */
    readonly lastSyncTime: pulumi.Output<string>;
    /**
     * The name of the resource
     */
    readonly name: pulumi.Output<string>;
    /**
     * The provisioning state of the resource.
     */
    readonly provisioningState: pulumi.Output<string>;
    /**
     * The synchronization state of the catalog.
     */
    readonly syncState: pulumi.Output<string>;
    /**
     * Indicates the type of sync that is configured for the catalog.
     */
    readonly syncType: pulumi.Output<string | undefined>;
    /**
     * Azure Resource Manager metadata containing createdBy and modifiedBy information.
     */
    readonly systemData: pulumi.Output<outputs.devcenter.v20240201.SystemDataResponse>;
    /**
     * Resource tags.
     */
    readonly tags: pulumi.Output<{
        [key: string]: string;
    } | undefined>;
    /**
     * The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
     */
    readonly type: pulumi.Output<string>;
    /**
     * Create a Catalog resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: CatalogArgs, opts?: pulumi.CustomResourceOptions);
}
/**
 * The set of arguments for constructing a Catalog resource.
 */
export interface CatalogArgs {
    /**
     * Properties for an Azure DevOps catalog type.
     */
    adoGit?: pulumi.Input<inputs.devcenter.v20240201.GitCatalogArgs>;
    /**
     * The name of the Catalog.
     */
    catalogName?: pulumi.Input<string>;
    /**
     * The name of the devcenter.
     */
    devCenterName: pulumi.Input<string>;
    /**
     * Properties for a GitHub catalog type.
     */
    gitHub?: pulumi.Input<inputs.devcenter.v20240201.GitCatalogArgs>;
    /**
     * The name of the resource group. The name is case insensitive.
     */
    resourceGroupName: pulumi.Input<string>;
    /**
     * Indicates the type of sync that is configured for the catalog.
     */
    syncType?: pulumi.Input<string | enums.devcenter.v20240201.CatalogSyncType>;
    /**
     * Resource tags.
     */
    tags?: pulumi.Input<{
        [key: string]: pulumi.Input<string>;
    }>;
}
