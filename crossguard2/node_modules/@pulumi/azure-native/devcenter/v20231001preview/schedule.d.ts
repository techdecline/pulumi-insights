import * as pulumi from "@pulumi/pulumi";
import * as outputs from "../../types/output";
import * as enums from "../../types/enums";
/**
 * Represents a Schedule to execute a task.
 */
export declare class Schedule extends pulumi.CustomResource {
    /**
     * Get an existing Schedule resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    static get(name: string, id: pulumi.Input<pulumi.ID>, opts?: pulumi.CustomResourceOptions): Schedule;
    /**
     * Returns true if the given object is an instance of Schedule.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    static isInstance(obj: any): obj is Schedule;
    /**
     * The frequency of this scheduled task.
     */
    readonly frequency: pulumi.Output<string>;
    /**
     * The name of the resource
     */
    readonly name: pulumi.Output<string>;
    /**
     * The provisioning state of the resource.
     */
    readonly provisioningState: pulumi.Output<string>;
    /**
     * Indicates whether or not this scheduled task is enabled.
     */
    readonly state: pulumi.Output<string | undefined>;
    /**
     * Azure Resource Manager metadata containing createdBy and modifiedBy information.
     */
    readonly systemData: pulumi.Output<outputs.devcenter.v20231001preview.SystemDataResponse>;
    /**
     * The target time to trigger the action. The format is HH:MM.
     */
    readonly time: pulumi.Output<string>;
    /**
     * The IANA timezone id at which the schedule should execute.
     */
    readonly timeZone: pulumi.Output<string>;
    /**
     * The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
     */
    readonly type: pulumi.Output<string>;
    /**
     * Create a Schedule resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: ScheduleArgs, opts?: pulumi.CustomResourceOptions);
}
/**
 * The set of arguments for constructing a Schedule resource.
 */
export interface ScheduleArgs {
    /**
     * The frequency of this scheduled task.
     */
    frequency: pulumi.Input<string | enums.devcenter.v20231001preview.ScheduledFrequency>;
    /**
     * Name of the pool.
     */
    poolName: pulumi.Input<string>;
    /**
     * The name of the project.
     */
    projectName: pulumi.Input<string>;
    /**
     * The name of the resource group. The name is case insensitive.
     */
    resourceGroupName: pulumi.Input<string>;
    /**
     * The name of the schedule that uniquely identifies it.
     */
    scheduleName?: pulumi.Input<string>;
    /**
     * Indicates whether or not this scheduled task is enabled.
     */
    state?: pulumi.Input<string | enums.devcenter.v20231001preview.ScheduleEnableStatus>;
    /**
     * The target time to trigger the action. The format is HH:MM.
     */
    time: pulumi.Input<string>;
    /**
     * The IANA timezone id at which the schedule should execute.
     */
    timeZone: pulumi.Input<string>;
    /**
     * The maximum number of resources to return from the operation. Example: '$top=10'.
     */
    top?: pulumi.Input<number>;
    /**
     * Supported type this scheduled task represents.
     */
    type: pulumi.Input<string | enums.devcenter.v20231001preview.ScheduledType>;
}
