import * as pulumi from "@pulumi/pulumi";
import * as outputs from "../../types/output";
/**
 * Gets a specific curation profile.
 */
export declare function getCurationProfile(args: GetCurationProfileArgs, opts?: pulumi.InvokeOptions): Promise<GetCurationProfileResult>;
export interface GetCurationProfileArgs {
    /**
     * The name of the curation profile.
     */
    curationProfileName: string;
    /**
     * The name of the devcenter.
     */
    devCenterName: string;
    /**
     * The name of the resource group. The name is case insensitive.
     */
    resourceGroupName: string;
}
/**
 * Represents an curation profile resource.
 */
export interface GetCurationProfileResult {
    /**
     * Fully qualified resource ID for the resource. E.g. "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
     */
    readonly id: string;
    /**
     * The name of the resource
     */
    readonly name: string;
    /**
     * The provisioning state of the resource.
     */
    readonly provisioningState: string;
    /**
     * Resource policies that are a part of this curation profile.
     */
    readonly resourcePolicies?: outputs.devcenter.v20241001preview.ResourcePolicyResponse[];
    /**
     * Resources that have access to the shared resources that are a part of this curation profile.
     */
    readonly scopes?: string[];
    /**
     * Azure Resource Manager metadata containing createdBy and modifiedBy information.
     */
    readonly systemData: outputs.devcenter.v20241001preview.SystemDataResponse;
    /**
     * The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
     */
    readonly type: string;
}
/**
 * Gets a specific curation profile.
 */
export declare function getCurationProfileOutput(args: GetCurationProfileOutputArgs, opts?: pulumi.InvokeOutputOptions): pulumi.Output<GetCurationProfileResult>;
export interface GetCurationProfileOutputArgs {
    /**
     * The name of the curation profile.
     */
    curationProfileName: pulumi.Input<string>;
    /**
     * The name of the devcenter.
     */
    devCenterName: pulumi.Input<string>;
    /**
     * The name of the resource group. The name is case insensitive.
     */
    resourceGroupName: pulumi.Input<string>;
}
