import * as pulumi from "@pulumi/pulumi";
import * as outputs from "../types/output";
/**
 * Configuration Assignment
 * Azure REST API version: 2022-11-01-preview. Prior API version in Azure Native 1.x: 2021-04-01-preview.
 *
 * Other available API versions: 2023-04-01, 2023-09-01-preview, 2023-10-01-preview.
 */
export declare class ConfigurationAssignment extends pulumi.CustomResource {
    /**
     * Get an existing ConfigurationAssignment resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    static get(name: string, id: pulumi.Input<pulumi.ID>, opts?: pulumi.CustomResourceOptions): ConfigurationAssignment;
    /**
     * Returns true if the given object is an instance of ConfigurationAssignment.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    static isInstance(obj: any): obj is ConfigurationAssignment;
    /**
     * Location of the resource
     */
    readonly location: pulumi.Output<string | undefined>;
    /**
     * The maintenance configuration Id
     */
    readonly maintenanceConfigurationId: pulumi.Output<string | undefined>;
    /**
     * Name of the resource
     */
    readonly name: pulumi.Output<string>;
    /**
     * The unique resourceId
     */
    readonly resourceId: pulumi.Output<string | undefined>;
    /**
     * Azure Resource Manager metadata containing createdBy and modifiedBy information.
     */
    readonly systemData: pulumi.Output<outputs.maintenance.SystemDataResponse>;
    /**
     * Type of the resource
     */
    readonly type: pulumi.Output<string>;
    /**
     * Create a ConfigurationAssignment resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: ConfigurationAssignmentArgs, opts?: pulumi.CustomResourceOptions);
}
/**
 * The set of arguments for constructing a ConfigurationAssignment resource.
 */
export interface ConfigurationAssignmentArgs {
    /**
     * Configuration assignment name
     */
    configurationAssignmentName?: pulumi.Input<string>;
    /**
     * Location of the resource
     */
    location?: pulumi.Input<string>;
    /**
     * The maintenance configuration Id
     */
    maintenanceConfigurationId?: pulumi.Input<string>;
    /**
     * Resource provider name
     */
    providerName: pulumi.Input<string>;
    /**
     * Resource group name
     */
    resourceGroupName: pulumi.Input<string>;
    /**
     * The unique resourceId
     */
    resourceId?: pulumi.Input<string>;
    /**
     * Resource identifier
     */
    resourceName: pulumi.Input<string>;
    /**
     * Resource type
     */
    resourceType: pulumi.Input<string>;
}
