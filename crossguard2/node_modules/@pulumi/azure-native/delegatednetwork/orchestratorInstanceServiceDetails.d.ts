import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as enums from "../types/enums";
/**
 * Represents an instance of a orchestrator.
 * Azure REST API version: 2021-03-15. Prior API version in Azure Native 1.x: 2021-03-15.
 *
 * Other available API versions: 2023-05-18-preview, 2023-06-27-preview.
 */
export declare class OrchestratorInstanceServiceDetails extends pulumi.CustomResource {
    /**
     * Get an existing OrchestratorInstanceServiceDetails resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    static get(name: string, id: pulumi.Input<pulumi.ID>, opts?: pulumi.CustomResourceOptions): OrchestratorInstanceServiceDetails;
    /**
     * Returns true if the given object is an instance of OrchestratorInstanceServiceDetails.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    static isInstance(obj: any): obj is OrchestratorInstanceServiceDetails;
    /**
     * K8s APIServer url. Either one of apiServerEndpoint or privateLinkResourceId can be specified
     */
    readonly apiServerEndpoint: pulumi.Output<string | undefined>;
    /**
     * RootCA certificate of kubernetes cluster base64 encoded
     */
    readonly clusterRootCA: pulumi.Output<string | undefined>;
    /**
     * Properties of the controller.
     */
    readonly controllerDetails: pulumi.Output<outputs.delegatednetwork.ControllerDetailsResponse>;
    /**
     * The identity of the orchestrator
     */
    readonly identity: pulumi.Output<outputs.delegatednetwork.OrchestratorIdentityResponse | undefined>;
    /**
     * The kind of workbook. Choices are user and shared.
     */
    readonly kind: pulumi.Output<string>;
    /**
     * Location of the resource.
     */
    readonly location: pulumi.Output<string | undefined>;
    /**
     * The name of the resource.
     */
    readonly name: pulumi.Output<string>;
    /**
     * AAD ID used with apiserver
     */
    readonly orchestratorAppId: pulumi.Output<string | undefined>;
    /**
     * TenantID of server App ID
     */
    readonly orchestratorTenantId: pulumi.Output<string | undefined>;
    /**
     * private link arm resource id. Either one of apiServerEndpoint or privateLinkResourceId can be specified
     */
    readonly privateLinkResourceId: pulumi.Output<string | undefined>;
    /**
     * The current state of orchestratorInstance resource.
     */
    readonly provisioningState: pulumi.Output<string>;
    /**
     * Resource guid.
     */
    readonly resourceGuid: pulumi.Output<string>;
    /**
     * The resource tags.
     */
    readonly tags: pulumi.Output<{
        [key: string]: string;
    } | undefined>;
    /**
     * The type of resource.
     */
    readonly type: pulumi.Output<string>;
    /**
     * Create a OrchestratorInstanceServiceDetails resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: OrchestratorInstanceServiceDetailsArgs, opts?: pulumi.CustomResourceOptions);
}
/**
 * The set of arguments for constructing a OrchestratorInstanceServiceDetails resource.
 */
export interface OrchestratorInstanceServiceDetailsArgs {
    /**
     * K8s APIServer url. Either one of apiServerEndpoint or privateLinkResourceId can be specified
     */
    apiServerEndpoint?: pulumi.Input<string>;
    /**
     * RootCA certificate of kubernetes cluster base64 encoded
     */
    clusterRootCA?: pulumi.Input<string>;
    /**
     * Properties of the controller.
     */
    controllerDetails: pulumi.Input<inputs.delegatednetwork.ControllerDetailsArgs>;
    /**
     * The identity of the orchestrator
     */
    identity?: pulumi.Input<inputs.delegatednetwork.OrchestratorIdentityArgs>;
    /**
     * The kind of workbook. Choices are user and shared.
     */
    kind: pulumi.Input<string | enums.delegatednetwork.OrchestratorKind>;
    /**
     * Location of the resource.
     */
    location?: pulumi.Input<string>;
    /**
     * AAD ID used with apiserver
     */
    orchestratorAppId?: pulumi.Input<string>;
    /**
     * TenantID of server App ID
     */
    orchestratorTenantId?: pulumi.Input<string>;
    /**
     * private link arm resource id. Either one of apiServerEndpoint or privateLinkResourceId can be specified
     */
    privateLinkResourceId?: pulumi.Input<string>;
    /**
     * The name of the resource group. The name is case insensitive.
     */
    resourceGroupName: pulumi.Input<string>;
    /**
     * The name of the resource. It must be a minimum of 3 characters, and a maximum of 63.
     */
    resourceName?: pulumi.Input<string>;
    /**
     * The resource tags.
     */
    tags?: pulumi.Input<{
        [key: string]: pulumi.Input<string>;
    }>;
}
