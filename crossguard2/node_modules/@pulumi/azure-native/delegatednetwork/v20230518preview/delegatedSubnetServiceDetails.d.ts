import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../../types/input";
import * as outputs from "../../types/output";
/**
 * Represents an instance of a orchestrator.
 */
export declare class DelegatedSubnetServiceDetails extends pulumi.CustomResource {
    /**
     * Get an existing DelegatedSubnetServiceDetails resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    static get(name: string, id: pulumi.Input<pulumi.ID>, opts?: pulumi.CustomResourceOptions): DelegatedSubnetServiceDetails;
    /**
     * Returns true if the given object is an instance of DelegatedSubnetServiceDetails.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    static isInstance(obj: any): obj is DelegatedSubnetServiceDetails;
    /**
     * Properties of the controller.
     */
    readonly controllerDetails: pulumi.Output<outputs.delegatednetwork.v20230518preview.ControllerDetailsResponse | undefined>;
    /**
     * Location of the resource.
     */
    readonly location: pulumi.Output<string | undefined>;
    /**
     * The name of the resource.
     */
    readonly name: pulumi.Output<string>;
    /**
     * The current state of dnc delegated subnet resource.
     */
    readonly provisioningState: pulumi.Output<string>;
    /**
     * Resource guid.
     */
    readonly resourceGuid: pulumi.Output<string>;
    /**
     * subnet details
     */
    readonly subnetDetails: pulumi.Output<outputs.delegatednetwork.v20230518preview.SubnetDetailsResponse | undefined>;
    /**
     * The resource tags.
     */
    readonly tags: pulumi.Output<{
        [key: string]: string;
    } | undefined>;
    /**
     * The type of resource.
     */
    readonly type: pulumi.Output<string>;
    /**
     * Create a DelegatedSubnetServiceDetails resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: DelegatedSubnetServiceDetailsArgs, opts?: pulumi.CustomResourceOptions);
}
/**
 * The set of arguments for constructing a DelegatedSubnetServiceDetails resource.
 */
export interface DelegatedSubnetServiceDetailsArgs {
    /**
     * Properties of the controller.
     */
    controllerDetails?: pulumi.Input<inputs.delegatednetwork.v20230518preview.ControllerDetailsArgs>;
    /**
     * Location of the resource.
     */
    location?: pulumi.Input<string>;
    /**
     * The name of the resource group. The name is case insensitive.
     */
    resourceGroupName: pulumi.Input<string>;
    /**
     * The name of the resource. It must be a minimum of 3 characters, and a maximum of 63.
     */
    resourceName?: pulumi.Input<string>;
    /**
     * subnet details
     */
    subnetDetails?: pulumi.Input<inputs.delegatednetwork.v20230518preview.SubnetDetailsArgs>;
    /**
     * The resource tags.
     */
    tags?: pulumi.Input<{
        [key: string]: pulumi.Input<string>;
    }>;
}
