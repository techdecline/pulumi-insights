import * as pulumi from "@pulumi/pulumi";
import * as outputs from "../../types/output";
/**
 * Get the Application Live  and its properties.
 */
export declare function getApplicationLiveView(args: GetApplicationLiveViewArgs, opts?: pulumi.InvokeOptions): Promise<GetApplicationLiveViewResult>;
export interface GetApplicationLiveViewArgs {
    /**
     * The name of Application Live View.
     */
    applicationLiveViewName: string;
    /**
     * The name of the resource group that contains the resource. You can obtain this value from the Azure Resource Manager API or the portal.
     */
    resourceGroupName: string;
    /**
     * The name of the Service resource.
     */
    serviceName: string;
}
/**
 * Application Live View resource
 */
export interface GetApplicationLiveViewResult {
    /**
     * Fully qualified resource Id for the resource.
     */
    readonly id: string;
    /**
     * The name of the resource.
     */
    readonly name: string;
    /**
     * Application Live View properties payload
     */
    readonly properties: outputs.appplatform.v20231201.ApplicationLiveViewPropertiesResponse;
    /**
     * Metadata pertaining to creation and last modification of the resource.
     */
    readonly systemData: outputs.appplatform.v20231201.SystemDataResponse;
    /**
     * The type of the resource.
     */
    readonly type: string;
}
/**
 * Get the Application Live  and its properties.
 */
export declare function getApplicationLiveViewOutput(args: GetApplicationLiveViewOutputArgs, opts?: pulumi.InvokeOutputOptions): pulumi.Output<GetApplicationLiveViewResult>;
export interface GetApplicationLiveViewOutputArgs {
    /**
     * The name of Application Live View.
     */
    applicationLiveViewName: pulumi.Input<string>;
    /**
     * The name of the resource group that contains the resource. You can obtain this value from the Azure Resource Manager API or the portal.
     */
    resourceGroupName: pulumi.Input<string>;
    /**
     * The name of the Service resource.
     */
    serviceName: pulumi.Input<string>;
}
