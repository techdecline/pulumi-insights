import * as pulumi from "@pulumi/pulumi";
import * as outputs from "../../types/output";
/**
 * Get the container registries resource.
 */
export declare function getContainerRegistry(args: GetContainerRegistryArgs, opts?: pulumi.InvokeOptions): Promise<GetContainerRegistryResult>;
export interface GetContainerRegistryArgs {
    /**
     * The name of the container registry.
     */
    containerRegistryName: string;
    /**
     * The name of the resource group that contains the resource. You can obtain this value from the Azure Resource Manager API or the portal.
     */
    resourceGroupName: string;
    /**
     * The name of the Service resource.
     */
    serviceName: string;
}
/**
 * Container registry resource payload.
 */
export interface GetContainerRegistryResult {
    /**
     * Fully qualified resource Id for the resource.
     */
    readonly id: string;
    /**
     * The name of the resource.
     */
    readonly name: string;
    /**
     * Properties of the container registry resource payload.
     */
    readonly properties: outputs.appplatform.v20240501preview.ContainerRegistryPropertiesResponse;
    /**
     * Metadata pertaining to creation and last modification of the resource.
     */
    readonly systemData: outputs.appplatform.v20240501preview.SystemDataResponse;
    /**
     * The type of the resource.
     */
    readonly type: string;
}
/**
 * Get the container registries resource.
 */
export declare function getContainerRegistryOutput(args: GetContainerRegistryOutputArgs, opts?: pulumi.InvokeOutputOptions): pulumi.Output<GetContainerRegistryResult>;
export interface GetContainerRegistryOutputArgs {
    /**
     * The name of the container registry.
     */
    containerRegistryName: pulumi.Input<string>;
    /**
     * The name of the resource group that contains the resource. You can obtain this value from the Azure Resource Manager API or the portal.
     */
    resourceGroupName: pulumi.Input<string>;
    /**
     * The name of the Service resource.
     */
    serviceName: pulumi.Input<string>;
}
