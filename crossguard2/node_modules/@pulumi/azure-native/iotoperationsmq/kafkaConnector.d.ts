import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
/**
 * MQ kafkaConnector resource
 * Azure REST API version: 2023-10-04-preview.
 */
export declare class KafkaConnector extends pulumi.CustomResource {
    /**
     * Get an existing KafkaConnector resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    static get(name: string, id: pulumi.Input<pulumi.ID>, opts?: pulumi.CustomResourceOptions): KafkaConnector;
    /**
     * Returns true if the given object is an instance of KafkaConnector.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    static isInstance(obj: any): obj is KafkaConnector;
    /**
     * The client id prefix of the dynamically generated client ids.
     */
    readonly clientIdPrefix: pulumi.Output<string | undefined>;
    /**
     * Extended Location
     */
    readonly extendedLocation: pulumi.Output<outputs.iotoperationsmq.ExtendedLocationPropertyResponse>;
    /**
     * The details of KafkaConnector Docker Image.
     */
    readonly image: pulumi.Output<outputs.iotoperationsmq.ContainerImageResponse | undefined>;
    /**
     * The number of KafkaConnector pods to spin up.
     */
    readonly instances: pulumi.Output<number | undefined>;
    /**
     * The details for connecting with Remote Kafka Broker.
     */
    readonly kafkaConnection: pulumi.Output<outputs.iotoperationsmq.KafkaRemoteBrokerConnectionSpecResponse>;
    /**
     * The details for connecting with Local Broker.
     */
    readonly localBrokerConnection: pulumi.Output<outputs.iotoperationsmq.LocalBrokerConnectionSpecResponse | undefined>;
    /**
     * The geo-location where the resource lives
     */
    readonly location: pulumi.Output<string>;
    /**
     * The log level of the Bridge Connector instances.
     */
    readonly logLevel: pulumi.Output<string | undefined>;
    /**
     * The name of the resource
     */
    readonly name: pulumi.Output<string>;
    /**
     * The Node Tolerations for the Bridge Connector pods.
     */
    readonly nodeTolerations: pulumi.Output<outputs.iotoperationsmq.NodeTolerationsResponse | undefined>;
    /**
     * The status of the last operation.
     */
    readonly provisioningState: pulumi.Output<string>;
    /**
     * Azure Resource Manager metadata containing createdBy and modifiedBy information.
     */
    readonly systemData: pulumi.Output<outputs.iotoperationsmq.SystemDataResponse>;
    /**
     * Resource tags.
     */
    readonly tags: pulumi.Output<{
        [key: string]: string;
    } | undefined>;
    /**
     * The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
     */
    readonly type: pulumi.Output<string>;
    /**
     * Create a KafkaConnector resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: KafkaConnectorArgs, opts?: pulumi.CustomResourceOptions);
}
/**
 * The set of arguments for constructing a KafkaConnector resource.
 */
export interface KafkaConnectorArgs {
    /**
     * The client id prefix of the dynamically generated client ids.
     */
    clientIdPrefix?: pulumi.Input<string>;
    /**
     * Extended Location
     */
    extendedLocation: pulumi.Input<inputs.iotoperationsmq.ExtendedLocationPropertyArgs>;
    /**
     * The details of KafkaConnector Docker Image.
     */
    image?: pulumi.Input<inputs.iotoperationsmq.ContainerImageArgs>;
    /**
     * The number of KafkaConnector pods to spin up.
     */
    instances?: pulumi.Input<number>;
    /**
     * The details for connecting with Remote Kafka Broker.
     */
    kafkaConnection: pulumi.Input<inputs.iotoperationsmq.KafkaRemoteBrokerConnectionSpecArgs>;
    /**
     * Name of MQ kafkaConnector resource
     */
    kafkaConnectorName?: pulumi.Input<string>;
    /**
     * The details for connecting with Local Broker.
     */
    localBrokerConnection?: pulumi.Input<inputs.iotoperationsmq.LocalBrokerConnectionSpecArgs>;
    /**
     * The geo-location where the resource lives
     */
    location?: pulumi.Input<string>;
    /**
     * The log level of the Bridge Connector instances.
     */
    logLevel?: pulumi.Input<string>;
    /**
     * Name of MQ resource
     */
    mqName: pulumi.Input<string>;
    /**
     * The Node Tolerations for the Bridge Connector pods.
     */
    nodeTolerations?: pulumi.Input<inputs.iotoperationsmq.NodeTolerationsArgs>;
    /**
     * The name of the resource group. The name is case insensitive.
     */
    resourceGroupName: pulumi.Input<string>;
    /**
     * Resource tags.
     */
    tags?: pulumi.Input<{
        [key: string]: pulumi.Input<string>;
    }>;
}
