import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../../types/input";
import * as outputs from "../../types/output";
import * as enums from "../../types/enums";
/**
 * MQ kafkaConnector/topicMap resource
 */
export declare class KafkaConnectorTopicMap extends pulumi.CustomResource {
    /**
     * Get an existing KafkaConnectorTopicMap resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    static get(name: string, id: pulumi.Input<pulumi.ID>, opts?: pulumi.CustomResourceOptions): KafkaConnectorTopicMap;
    /**
     * Returns true if the given object is an instance of KafkaConnectorTopicMap.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    static isInstance(obj: any): obj is KafkaConnectorTopicMap;
    /**
     * The batching settings for kafka messages.
     */
    readonly batching: pulumi.Output<outputs.iotoperationsmq.v20231004preview.KafkaTopicMapBatchingResponse | undefined>;
    /**
     * The compression to use for kafka messages.
     */
    readonly compression: pulumi.Output<string | undefined>;
    /**
     * The flag to copy Mqtt properties.
     */
    readonly copyMqttProperties: pulumi.Output<string | undefined>;
    /**
     * Extended Location
     */
    readonly extendedLocation: pulumi.Output<outputs.iotoperationsmq.v20231004preview.ExtendedLocationPropertyResponse>;
    /**
     * The kafkaConnector CRD it refers to.
     */
    readonly kafkaConnectorRef: pulumi.Output<string>;
    /**
     * The geo-location where the resource lives
     */
    readonly location: pulumi.Output<string>;
    /**
     * The name of the resource
     */
    readonly name: pulumi.Output<string>;
    /**
     * The partition to use for Kafka.
     */
    readonly partitionKeyProperty: pulumi.Output<string | undefined>;
    /**
     * The partition strategy to use for Kafka.
     */
    readonly partitionStrategy: pulumi.Output<string | undefined>;
    /**
     * The status of the last operation.
     */
    readonly provisioningState: pulumi.Output<string>;
    /**
     * The route details for Kafka connector.
     */
    readonly routes: pulumi.Output<outputs.iotoperationsmq.v20231004preview.KafkaRoutesResponse[]>;
    /**
     * Azure Resource Manager metadata containing createdBy and modifiedBy information.
     */
    readonly systemData: pulumi.Output<outputs.iotoperationsmq.v20231004preview.SystemDataResponse>;
    /**
     * Resource tags.
     */
    readonly tags: pulumi.Output<{
        [key: string]: string;
    } | undefined>;
    /**
     * The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
     */
    readonly type: pulumi.Output<string>;
    /**
     * Create a KafkaConnectorTopicMap resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: KafkaConnectorTopicMapArgs, opts?: pulumi.CustomResourceOptions);
}
/**
 * The set of arguments for constructing a KafkaConnectorTopicMap resource.
 */
export interface KafkaConnectorTopicMapArgs {
    /**
     * The batching settings for kafka messages.
     */
    batching?: pulumi.Input<inputs.iotoperationsmq.v20231004preview.KafkaTopicMapBatchingArgs>;
    /**
     * The compression to use for kafka messages.
     */
    compression?: pulumi.Input<string | enums.iotoperationsmq.v20231004preview.KafkaMessageCompressionType>;
    /**
     * The flag to copy Mqtt properties.
     */
    copyMqttProperties?: pulumi.Input<string>;
    /**
     * Extended Location
     */
    extendedLocation: pulumi.Input<inputs.iotoperationsmq.v20231004preview.ExtendedLocationPropertyArgs>;
    /**
     * Name of MQ kafkaConnector resource
     */
    kafkaConnectorName: pulumi.Input<string>;
    /**
     * The kafkaConnector CRD it refers to.
     */
    kafkaConnectorRef: pulumi.Input<string>;
    /**
     * The geo-location where the resource lives
     */
    location?: pulumi.Input<string>;
    /**
     * Name of MQ resource
     */
    mqName: pulumi.Input<string>;
    /**
     * The partition to use for Kafka.
     */
    partitionKeyProperty?: pulumi.Input<string>;
    /**
     * The partition strategy to use for Kafka.
     */
    partitionStrategy?: pulumi.Input<string | enums.iotoperationsmq.v20231004preview.KafkaPartitionStrategy>;
    /**
     * The name of the resource group. The name is case insensitive.
     */
    resourceGroupName: pulumi.Input<string>;
    /**
     * The route details for Kafka connector.
     */
    routes: pulumi.Input<pulumi.Input<inputs.iotoperationsmq.v20231004preview.KafkaRoutesArgs>[]>;
    /**
     * Resource tags.
     */
    tags?: pulumi.Input<{
        [key: string]: pulumi.Input<string>;
    }>;
    /**
     * Name of MQ kafka/topicMap resource
     */
    topicMapName?: pulumi.Input<string>;
}
