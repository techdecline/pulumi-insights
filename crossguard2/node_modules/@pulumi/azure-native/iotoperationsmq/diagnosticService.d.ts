import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
/**
 * MQ diagnostic services resource
 * Azure REST API version: 2023-10-04-preview.
 */
export declare class DiagnosticService extends pulumi.CustomResource {
    /**
     * Get an existing DiagnosticService resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    static get(name: string, id: pulumi.Input<pulumi.ID>, opts?: pulumi.CustomResourceOptions): DiagnosticService;
    /**
     * Returns true if the given object is an instance of DiagnosticService.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    static isInstance(obj: any): obj is DiagnosticService;
    /**
     * The frequency at which the data will be exported.
     */
    readonly dataExportFrequencySeconds: pulumi.Output<number | undefined>;
    /**
     * Extended Location
     */
    readonly extendedLocation: pulumi.Output<outputs.iotoperationsmq.ExtendedLocationPropertyResponse>;
    /**
     * The details of Diagnostic Service Docker Image.
     */
    readonly image: pulumi.Output<outputs.iotoperationsmq.ContainerImageResponse>;
    /**
     * The geo-location where the resource lives
     */
    readonly location: pulumi.Output<string>;
    /**
     * The format for the logs generated.
     */
    readonly logFormat: pulumi.Output<string | undefined>;
    /**
     * The format for the logs generated.
     */
    readonly logLevel: pulumi.Output<string | undefined>;
    /**
     * The maximum data stored in MiB.
     */
    readonly maxDataStorageSize: pulumi.Output<number | undefined>;
    /**
     * The port at which metrics is exposed.
     */
    readonly metricsPort: pulumi.Output<number | undefined>;
    /**
     * The name of the resource
     */
    readonly name: pulumi.Output<string>;
    /**
     * The destination to collect traces. Diagnostic service will push traces to this endpoint
     */
    readonly openTelemetryTracesCollectorAddr: pulumi.Output<string | undefined>;
    /**
     * The status of the last operation.
     */
    readonly provisioningState: pulumi.Output<string>;
    /**
     * Metric inactivity timeout.
     */
    readonly staleDataTimeoutSeconds: pulumi.Output<number | undefined>;
    /**
     * Azure Resource Manager metadata containing createdBy and modifiedBy information.
     */
    readonly systemData: pulumi.Output<outputs.iotoperationsmq.SystemDataResponse>;
    /**
     * Resource tags.
     */
    readonly tags: pulumi.Output<{
        [key: string]: string;
    } | undefined>;
    /**
     * The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
     */
    readonly type: pulumi.Output<string>;
    /**
     * Create a DiagnosticService resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: DiagnosticServiceArgs, opts?: pulumi.CustomResourceOptions);
}
/**
 * The set of arguments for constructing a DiagnosticService resource.
 */
export interface DiagnosticServiceArgs {
    /**
     * The frequency at which the data will be exported.
     */
    dataExportFrequencySeconds?: pulumi.Input<number>;
    /**
     * Name of MQ diagnostic resource
     */
    diagnosticServiceName?: pulumi.Input<string>;
    /**
     * Extended Location
     */
    extendedLocation: pulumi.Input<inputs.iotoperationsmq.ExtendedLocationPropertyArgs>;
    /**
     * The details of Diagnostic Service Docker Image.
     */
    image: pulumi.Input<inputs.iotoperationsmq.ContainerImageArgs>;
    /**
     * The geo-location where the resource lives
     */
    location?: pulumi.Input<string>;
    /**
     * The format for the logs generated.
     */
    logFormat?: pulumi.Input<string>;
    /**
     * The format for the logs generated.
     */
    logLevel?: pulumi.Input<string>;
    /**
     * The maximum data stored in MiB.
     */
    maxDataStorageSize?: pulumi.Input<number>;
    /**
     * The port at which metrics is exposed.
     */
    metricsPort?: pulumi.Input<number>;
    /**
     * Name of MQ resource
     */
    mqName: pulumi.Input<string>;
    /**
     * The destination to collect traces. Diagnostic service will push traces to this endpoint
     */
    openTelemetryTracesCollectorAddr?: pulumi.Input<string>;
    /**
     * The name of the resource group. The name is case insensitive.
     */
    resourceGroupName: pulumi.Input<string>;
    /**
     * Metric inactivity timeout.
     */
    staleDataTimeoutSeconds?: pulumi.Input<number>;
    /**
     * Resource tags.
     */
    tags?: pulumi.Input<{
        [key: string]: pulumi.Input<string>;
    }>;
}
