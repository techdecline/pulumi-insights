import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as enums from "../types/enums";
/**
 * MQ broker/listener resource
 * Azure REST API version: 2023-10-04-preview.
 */
export declare class BrokerListener extends pulumi.CustomResource {
    /**
     * Get an existing BrokerListener resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    static get(name: string, id: pulumi.Input<pulumi.ID>, opts?: pulumi.CustomResourceOptions): BrokerListener;
    /**
     * Returns true if the given object is an instance of BrokerListener.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    static isInstance(obj: any): obj is BrokerListener;
    /**
     * The flag for enabling Authentication rules on Listener Port.
     */
    readonly authenticationEnabled: pulumi.Output<boolean | undefined>;
    /**
     * The flag for enabling Authorization policies on Listener Port. false - AllowAll, true - Use Authorization resource rules if present.
     */
    readonly authorizationEnabled: pulumi.Output<boolean | undefined>;
    /**
     * The k8s cr/resource reference of mq/broker.
     */
    readonly brokerRef: pulumi.Output<string>;
    /**
     * Extended Location
     */
    readonly extendedLocation: pulumi.Output<outputs.iotoperationsmq.ExtendedLocationPropertyResponse>;
    /**
     * The geo-location where the resource lives
     */
    readonly location: pulumi.Output<string>;
    /**
     * The name of the resource
     */
    readonly name: pulumi.Output<string>;
    /**
     * The node port to use on the Host node.
     */
    readonly nodePort: pulumi.Output<number | undefined>;
    /**
     * The port to start Listening for connections on.
     */
    readonly port: pulumi.Output<number>;
    /**
     * The status of the last operation.
     */
    readonly provisioningState: pulumi.Output<string>;
    /**
     * The service name to expose Listener port on.
     */
    readonly serviceName: pulumi.Output<string | undefined>;
    /**
     * The Kubernetes Service type to deploy for Listener.
     */
    readonly serviceType: pulumi.Output<string | undefined>;
    /**
     * Azure Resource Manager metadata containing createdBy and modifiedBy information.
     */
    readonly systemData: pulumi.Output<outputs.iotoperationsmq.SystemDataResponse>;
    /**
     * Resource tags.
     */
    readonly tags: pulumi.Output<{
        [key: string]: string;
    } | undefined>;
    /**
     * Defines configuration of a TLS server certificate. NOTE Enum - Only one TLS Cert method is supported
     */
    readonly tls: pulumi.Output<outputs.iotoperationsmq.TlsCertMethodResponse | undefined>;
    /**
     * The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
     */
    readonly type: pulumi.Output<string>;
    /**
     * Create a BrokerListener resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: BrokerListenerArgs, opts?: pulumi.CustomResourceOptions);
}
/**
 * The set of arguments for constructing a BrokerListener resource.
 */
export interface BrokerListenerArgs {
    /**
     * The flag for enabling Authentication rules on Listener Port.
     */
    authenticationEnabled?: pulumi.Input<boolean>;
    /**
     * The flag for enabling Authorization policies on Listener Port. false - AllowAll, true - Use Authorization resource rules if present.
     */
    authorizationEnabled?: pulumi.Input<boolean>;
    /**
     * Name of MQ broker resource
     */
    brokerName: pulumi.Input<string>;
    /**
     * The k8s cr/resource reference of mq/broker.
     */
    brokerRef: pulumi.Input<string>;
    /**
     * Extended Location
     */
    extendedLocation: pulumi.Input<inputs.iotoperationsmq.ExtendedLocationPropertyArgs>;
    /**
     * Name of MQ broker/listener resource
     */
    listenerName?: pulumi.Input<string>;
    /**
     * The geo-location where the resource lives
     */
    location?: pulumi.Input<string>;
    /**
     * Name of MQ resource
     */
    mqName: pulumi.Input<string>;
    /**
     * The node port to use on the Host node.
     */
    nodePort?: pulumi.Input<number>;
    /**
     * The port to start Listening for connections on.
     */
    port: pulumi.Input<number>;
    /**
     * The name of the resource group. The name is case insensitive.
     */
    resourceGroupName: pulumi.Input<string>;
    /**
     * The service name to expose Listener port on.
     */
    serviceName?: pulumi.Input<string>;
    /**
     * The Kubernetes Service type to deploy for Listener.
     */
    serviceType?: pulumi.Input<string | enums.iotoperationsmq.ServiceType>;
    /**
     * Resource tags.
     */
    tags?: pulumi.Input<{
        [key: string]: pulumi.Input<string>;
    }>;
    /**
     * Defines configuration of a TLS server certificate. NOTE Enum - Only one TLS Cert method is supported
     */
    tls?: pulumi.Input<inputs.iotoperationsmq.TlsCertMethodArgs>;
}
