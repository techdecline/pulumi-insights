import * as pulumi from "@pulumi/pulumi";
/**
 * Graph Query entity definition.
 */
export declare class GraphQuery extends pulumi.CustomResource {
    /**
     * Get an existing GraphQuery resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    static get(name: string, id: pulumi.Input<pulumi.ID>, opts?: pulumi.CustomResourceOptions): GraphQuery;
    /**
     * Returns true if the given object is an instance of GraphQuery.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    static isInstance(obj: any): obj is GraphQuery;
    /**
     * The description of a graph query.
     */
    readonly description: pulumi.Output<string | undefined>;
    /**
     * This will be used to handle Optimistic Concurrency. If not present, it will always overwrite the existing resource without checking conflict.
     */
    readonly etag: pulumi.Output<string | undefined>;
    /**
     * The location of the resource
     */
    readonly location: pulumi.Output<string | undefined>;
    /**
     * Azure resource name. This is GUID value. The display name should be assigned within properties field.
     */
    readonly name: pulumi.Output<string>;
    /**
     * KQL query that will be graph.
     */
    readonly query: pulumi.Output<string>;
    /**
     * Enum indicating a type of graph query.
     */
    readonly resultKind: pulumi.Output<string>;
    /**
     * Resource tags
     */
    readonly tags: pulumi.Output<{
        [key: string]: string;
    } | undefined>;
    /**
     * Date and time in UTC of the last modification that was made to this graph query definition.
     */
    readonly timeModified: pulumi.Output<string>;
    /**
     * Azure resource type
     */
    readonly type: pulumi.Output<string>;
    /**
     * Create a GraphQuery resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: GraphQueryArgs, opts?: pulumi.CustomResourceOptions);
}
/**
 * The set of arguments for constructing a GraphQuery resource.
 */
export interface GraphQueryArgs {
    /**
     * The description of a graph query.
     */
    description?: pulumi.Input<string>;
    /**
     * The location of the resource
     */
    location?: pulumi.Input<string>;
    /**
     * KQL query that will be graph.
     */
    query: pulumi.Input<string>;
    /**
     * The name of the resource group.
     */
    resourceGroupName: pulumi.Input<string>;
    /**
     * The name of the Graph Query resource.
     */
    resourceName?: pulumi.Input<string>;
    /**
     * Resource tags
     */
    tags?: pulumi.Input<{
        [key: string]: pulumi.Input<string>;
    }>;
}
