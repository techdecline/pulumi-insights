import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as enums from "../types/enums";
/**
 * The Network Tap resource definition.
 * Azure REST API version: 2023-06-15.
 */
export declare class NetworkTap extends pulumi.CustomResource {
    /**
     * Get an existing NetworkTap resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    static get(name: string, id: pulumi.Input<pulumi.ID>, opts?: pulumi.CustomResourceOptions): NetworkTap;
    /**
     * Returns true if the given object is an instance of NetworkTap.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    static isInstance(obj: any): obj is NetworkTap;
    /**
     * Administrative state of the resource. Example -Enabled/Disabled
     */
    readonly administrativeState: pulumi.Output<string>;
    /**
     * Switch configuration description.
     */
    readonly annotation: pulumi.Output<string | undefined>;
    /**
     * Gets the configurations state of the resource.
     */
    readonly configurationState: pulumi.Output<string>;
    /**
     * List of destinations to send the filter traffic.
     */
    readonly destinations: pulumi.Output<outputs.managednetworkfabric.NetworkTapPropertiesResponseDestinations[]>;
    /**
     * The geo-location where the resource lives
     */
    readonly location: pulumi.Output<string>;
    /**
     * The name of the resource
     */
    readonly name: pulumi.Output<string>;
    /**
     * ARM resource ID of the Network Packet Broker.
     */
    readonly networkPacketBrokerId: pulumi.Output<string>;
    /**
     * Polling type.
     */
    readonly pollingType: pulumi.Output<string | undefined>;
    /**
     * Provides you the latest status of the NFC service, whether it is Accepted, updating, Succeeded or Failed. During this process, the states keep changing based on the status of Network Tap provisioning.
     */
    readonly provisioningState: pulumi.Output<string>;
    /**
     * Source Tap Rule Id. ARM Resource ID of the Network Tap Rule.
     */
    readonly sourceTapRuleId: pulumi.Output<string>;
    /**
     * Azure Resource Manager metadata containing createdBy and modifiedBy information.
     */
    readonly systemData: pulumi.Output<outputs.managednetworkfabric.SystemDataResponse>;
    /**
     * Resource tags.
     */
    readonly tags: pulumi.Output<{
        [key: string]: string;
    } | undefined>;
    /**
     * The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
     */
    readonly type: pulumi.Output<string>;
    /**
     * Create a NetworkTap resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: NetworkTapArgs, opts?: pulumi.CustomResourceOptions);
}
/**
 * The set of arguments for constructing a NetworkTap resource.
 */
export interface NetworkTapArgs {
    /**
     * Switch configuration description.
     */
    annotation?: pulumi.Input<string>;
    /**
     * List of destinations to send the filter traffic.
     */
    destinations: pulumi.Input<pulumi.Input<inputs.managednetworkfabric.NetworkTapPropertiesDestinationsArgs>[]>;
    /**
     * The geo-location where the resource lives
     */
    location?: pulumi.Input<string>;
    /**
     * ARM resource ID of the Network Packet Broker.
     */
    networkPacketBrokerId: pulumi.Input<string>;
    /**
     * Name of the Network Tap.
     */
    networkTapName?: pulumi.Input<string>;
    /**
     * Polling type.
     */
    pollingType?: pulumi.Input<string | enums.managednetworkfabric.PollingType>;
    /**
     * The name of the resource group. The name is case insensitive.
     */
    resourceGroupName: pulumi.Input<string>;
    /**
     * Resource tags.
     */
    tags?: pulumi.Input<{
        [key: string]: pulumi.Input<string>;
    }>;
}
