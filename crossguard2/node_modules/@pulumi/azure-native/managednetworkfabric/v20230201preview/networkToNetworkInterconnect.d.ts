import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../../types/input";
import * as outputs from "../../types/output";
import * as enums from "../../types/enums";
/**
 * The NetworkToNetworkInterconnect resource definition.
 */
export declare class NetworkToNetworkInterconnect extends pulumi.CustomResource {
    /**
     * Get an existing NetworkToNetworkInterconnect resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    static get(name: string, id: pulumi.Input<pulumi.ID>, opts?: pulumi.CustomResourceOptions): NetworkToNetworkInterconnect;
    /**
     * Returns true if the given object is an instance of NetworkToNetworkInterconnect.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    static isInstance(obj: any): obj is NetworkToNetworkInterconnect;
    /**
     * Gets the administrativeState of the resource. Example -Enabled/Disabled
     */
    readonly administrativeState: pulumi.Output<string>;
    /**
     * Configuration to use NNI for Infrastructure Management. Example: True/False.
     */
    readonly isManagementType: pulumi.Output<string>;
    /**
     * Common properties for Layer2Configuration.
     */
    readonly layer2Configuration: pulumi.Output<outputs.managednetworkfabric.v20230201preview.Layer2ConfigurationResponse | undefined>;
    /**
     * Common properties for Layer3Configuration.
     */
    readonly layer3Configuration: pulumi.Output<outputs.managednetworkfabric.v20230201preview.Layer3ConfigurationResponse | undefined>;
    /**
     * The name of the resource
     */
    readonly name: pulumi.Output<string>;
    /**
     * Type of NNI used. Example: CE | NPB
     */
    readonly nniType: pulumi.Output<string | undefined>;
    /**
     * Gets the provisioning state of the resource.
     */
    readonly provisioningState: pulumi.Output<string>;
    /**
     * Azure Resource Manager metadata containing createdBy and modifiedBy information.
     */
    readonly systemData: pulumi.Output<outputs.managednetworkfabric.v20230201preview.SystemDataResponse>;
    /**
     * The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
     */
    readonly type: pulumi.Output<string>;
    /**
     * Based on this parameter the layer2/layer3 is made as mandatory. Example: True/False
     */
    readonly useOptionB: pulumi.Output<string>;
    /**
     * Create a NetworkToNetworkInterconnect resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: NetworkToNetworkInterconnectArgs, opts?: pulumi.CustomResourceOptions);
}
/**
 * The set of arguments for constructing a NetworkToNetworkInterconnect resource.
 */
export interface NetworkToNetworkInterconnectArgs {
    /**
     * Configuration to use NNI for Infrastructure Management. Example: True/False.
     */
    isManagementType: pulumi.Input<string | enums.managednetworkfabric.v20230201preview.BooleanEnumProperty>;
    /**
     * Common properties for Layer2Configuration.
     */
    layer2Configuration?: pulumi.Input<inputs.managednetworkfabric.v20230201preview.Layer2ConfigurationArgs>;
    /**
     * Common properties for Layer3Configuration.
     */
    layer3Configuration?: pulumi.Input<inputs.managednetworkfabric.v20230201preview.Layer3ConfigurationArgs>;
    /**
     * Name of the NetworkFabric.
     */
    networkFabricName: pulumi.Input<string>;
    /**
     * Name of the NetworkToNetworkInterconnectName
     */
    networkToNetworkInterconnectName?: pulumi.Input<string>;
    /**
     * Type of NNI used. Example: CE | NPB
     */
    nniType?: pulumi.Input<string | enums.managednetworkfabric.v20230201preview.NniType>;
    /**
     * The name of the resource group. The name is case insensitive.
     */
    resourceGroupName: pulumi.Input<string>;
    /**
     * Based on this parameter the layer2/layer3 is made as mandatory. Example: True/False
     */
    useOptionB: pulumi.Input<string | enums.managednetworkfabric.v20230201preview.BooleanEnumProperty>;
}
