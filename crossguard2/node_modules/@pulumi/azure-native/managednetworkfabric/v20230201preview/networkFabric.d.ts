import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../../types/input";
import * as outputs from "../../types/output";
/**
 * The NetworkFabric resource definition.
 */
export declare class NetworkFabric extends pulumi.CustomResource {
    /**
     * Get an existing NetworkFabric resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    static get(name: string, id: pulumi.Input<pulumi.ID>, opts?: pulumi.CustomResourceOptions): NetworkFabric;
    /**
     * Returns true if the given object is an instance of NetworkFabric.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    static isInstance(obj: any): obj is NetworkFabric;
    /**
     * Switch configuration description.
     */
    readonly annotation: pulumi.Output<string | undefined>;
    /**
     * ASN of CE devices for CE/PE connectivity.
     */
    readonly fabricASN: pulumi.Output<number>;
    /**
     * IPv4Prefix for Management Network. Example: 10.1.0.0/19.
     */
    readonly ipv4Prefix: pulumi.Output<string | undefined>;
    /**
     * IPv6Prefix for Management Network. Example: 3FFE:FFFF:0:CD40::/59.
     */
    readonly ipv6Prefix: pulumi.Output<string | undefined>;
    /**
     * List of L2IsolationDomain resource IDs under the Network Fabric.
     */
    readonly l2IsolationDomains: pulumi.Output<string[]>;
    /**
     * List of L3IsolationDomain resource IDs under the Network Fabric.
     */
    readonly l3IsolationDomains: pulumi.Output<string[]>;
    /**
     * The geo-location where the resource lives
     */
    readonly location: pulumi.Output<string>;
    /**
     * Configuration to be used to setup the management network.
     */
    readonly managementNetworkConfiguration: pulumi.Output<outputs.managednetworkfabric.v20230201preview.ManagementNetworkConfigurationResponse>;
    /**
     * The name of the resource
     */
    readonly name: pulumi.Output<string>;
    /**
     * Azure resource ID for the NetworkFabricController the NetworkFabric belongs.
     */
    readonly networkFabricControllerId: pulumi.Output<string>;
    /**
     * Supported Network Fabric SKU.Example: Compute / Aggregate racks. Once the user chooses a particular SKU, only supported racks can be added to the Network Fabric. The SKU determines whether it is a single / multi rack Network Fabric.
     */
    readonly networkFabricSku: pulumi.Output<string>;
    /**
     * Gets the operational state of the resource.
     */
    readonly operationalState: pulumi.Output<string>;
    /**
     * Gets the provisioning state of the resource.
     */
    readonly provisioningState: pulumi.Output<string>;
    /**
     * Number of racks associated to Network Fabric.Possible values are from 2-8.
     */
    readonly rackCount: pulumi.Output<number>;
    /**
     * List of NetworkRack resource IDs under the Network Fabric. The number of racks allowed depends on the Network Fabric SKU.
     */
    readonly racks: pulumi.Output<string[]>;
    /**
     * Router Id of CE to be used for MP-BGP between PE and CE
     */
    readonly routerId: pulumi.Output<string>;
    /**
     * Number of servers.Possible values are from 1-16.
     */
    readonly serverCountPerRack: pulumi.Output<number>;
    /**
     * Azure Resource Manager metadata containing createdBy and modifiedBy information.
     */
    readonly systemData: pulumi.Output<outputs.managednetworkfabric.v20230201preview.SystemDataResponse>;
    /**
     * Resource tags.
     */
    readonly tags: pulumi.Output<{
        [key: string]: string;
    } | undefined>;
    /**
     * Network and credentials configuration currently applied to terminal server.
     */
    readonly terminalServerConfiguration: pulumi.Output<outputs.managednetworkfabric.v20230201preview.TerminalServerConfigurationResponse>;
    /**
     * The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
     */
    readonly type: pulumi.Output<string>;
    /**
     * Create a NetworkFabric resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: NetworkFabricArgs, opts?: pulumi.CustomResourceOptions);
}
/**
 * The set of arguments for constructing a NetworkFabric resource.
 */
export interface NetworkFabricArgs {
    /**
     * Switch configuration description.
     */
    annotation?: pulumi.Input<string>;
    /**
     * ASN of CE devices for CE/PE connectivity.
     */
    fabricASN: pulumi.Input<number>;
    /**
     * IPv4Prefix for Management Network. Example: 10.1.0.0/19.
     */
    ipv4Prefix?: pulumi.Input<string>;
    /**
     * IPv6Prefix for Management Network. Example: 3FFE:FFFF:0:CD40::/59.
     */
    ipv6Prefix?: pulumi.Input<string>;
    /**
     * The geo-location where the resource lives
     */
    location?: pulumi.Input<string>;
    /**
     * Configuration to be used to setup the management network.
     */
    managementNetworkConfiguration: pulumi.Input<inputs.managednetworkfabric.v20230201preview.ManagementNetworkConfigurationArgs>;
    /**
     * Azure resource ID for the NetworkFabricController the NetworkFabric belongs.
     */
    networkFabricControllerId: pulumi.Input<string>;
    /**
     * Name of the Network Fabric
     */
    networkFabricName?: pulumi.Input<string>;
    /**
     * Supported Network Fabric SKU.Example: Compute / Aggregate racks. Once the user chooses a particular SKU, only supported racks can be added to the Network Fabric. The SKU determines whether it is a single / multi rack Network Fabric.
     */
    networkFabricSku: pulumi.Input<string>;
    /**
     * Number of racks associated to Network Fabric.Possible values are from 2-8.
     */
    rackCount: pulumi.Input<number>;
    /**
     * The name of the resource group. The name is case insensitive.
     */
    resourceGroupName: pulumi.Input<string>;
    /**
     * Number of servers.Possible values are from 1-16.
     */
    serverCountPerRack: pulumi.Input<number>;
    /**
     * Resource tags.
     */
    tags?: pulumi.Input<{
        [key: string]: pulumi.Input<string>;
    }>;
    /**
     * Network and credentials configuration currently applied to terminal server.
     */
    terminalServerConfiguration: pulumi.Input<inputs.managednetworkfabric.v20230201preview.TerminalServerConfigurationArgs>;
}
