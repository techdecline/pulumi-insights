import * as pulumi from "@pulumi/pulumi";
import * as outputs from "../../types/output";
/**
 * Implements ExternalNetworks GET method.
 */
export declare function getExternalNetwork(args: GetExternalNetworkArgs, opts?: pulumi.InvokeOptions): Promise<GetExternalNetworkResult>;
export interface GetExternalNetworkArgs {
    /**
     * Name of the External Network.
     */
    externalNetworkName: string;
    /**
     * Name of the L3 Isolation Domain.
     */
    l3IsolationDomainName: string;
    /**
     * The name of the resource group. The name is case insensitive.
     */
    resourceGroupName: string;
}
/**
 * Defines the External Network resource.
 */
export interface GetExternalNetworkResult {
    /**
     * Administrative state of the resource.
     */
    readonly administrativeState: string;
    /**
     * Switch configuration description.
     */
    readonly annotation?: string;
    /**
     * Configuration state of the resource.
     */
    readonly configurationState: string;
    /**
     * Export Route Policy either IPv4 or IPv6.
     */
    readonly exportRoutePolicy?: outputs.managednetworkfabric.v20230615.ExportRoutePolicyResponse;
    /**
     * ARM Resource ID of the RoutePolicy. This is used for the backward compatibility.
     */
    readonly exportRoutePolicyId?: string;
    /**
     * Fully qualified resource ID for the resource. E.g. "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
     */
    readonly id: string;
    /**
     * Import Route Policy either IPv4 or IPv6.
     */
    readonly importRoutePolicy?: outputs.managednetworkfabric.v20230615.ImportRoutePolicyResponse;
    /**
     * ARM Resource ID of the RoutePolicy. This is used for the backward compatibility.
     */
    readonly importRoutePolicyId?: string;
    /**
     * The name of the resource
     */
    readonly name: string;
    /**
     * ARM Resource ID of the networkToNetworkInterconnectId of the ExternalNetwork resource.
     */
    readonly networkToNetworkInterconnectId?: string;
    /**
     * option A properties object
     */
    readonly optionAProperties?: outputs.managednetworkfabric.v20230615.ExternalNetworkPropertiesResponseOptionAProperties;
    /**
     * option B properties object
     */
    readonly optionBProperties?: outputs.managednetworkfabric.v20230615.L3OptionBPropertiesResponse;
    /**
     * Peering option list.
     */
    readonly peeringOption: string;
    /**
     * Provisioning state of the resource.
     */
    readonly provisioningState: string;
    /**
     * Azure Resource Manager metadata containing createdBy and modifiedBy information.
     */
    readonly systemData: outputs.managednetworkfabric.v20230615.SystemDataResponse;
    /**
     * The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
     */
    readonly type: string;
}
/**
 * Implements ExternalNetworks GET method.
 */
export declare function getExternalNetworkOutput(args: GetExternalNetworkOutputArgs, opts?: pulumi.InvokeOutputOptions): pulumi.Output<GetExternalNetworkResult>;
export interface GetExternalNetworkOutputArgs {
    /**
     * Name of the External Network.
     */
    externalNetworkName: pulumi.Input<string>;
    /**
     * Name of the L3 Isolation Domain.
     */
    l3IsolationDomainName: pulumi.Input<string>;
    /**
     * The name of the resource group. The name is case insensitive.
     */
    resourceGroupName: pulumi.Input<string>;
}
