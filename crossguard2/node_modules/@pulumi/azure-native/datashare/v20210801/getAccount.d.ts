import * as pulumi from "@pulumi/pulumi";
import * as outputs from "../../types/output";
/**
 * Get an account
 */
export declare function getAccount(args: GetAccountArgs, opts?: pulumi.InvokeOptions): Promise<GetAccountResult>;
export interface GetAccountArgs {
    /**
     * The name of the share account.
     */
    accountName: string;
    /**
     * The resource group name.
     */
    resourceGroupName: string;
}
/**
 * An account data transfer object.
 */
export interface GetAccountResult {
    /**
     * Time at which the account was created.
     */
    readonly createdAt: string;
    /**
     * The resource id of the azure resource
     */
    readonly id: string;
    /**
     * Identity Info on the Account
     */
    readonly identity: outputs.datashare.v20210801.IdentityResponse;
    /**
     * Location of the azure resource.
     */
    readonly location?: string;
    /**
     * Name of the azure resource
     */
    readonly name: string;
    /**
     * Provisioning state of the Account
     */
    readonly provisioningState: string;
    /**
     * System Data of the Azure resource.
     */
    readonly systemData: outputs.datashare.v20210801.SystemDataResponse;
    /**
     * Tags on the azure resource.
     */
    readonly tags?: {
        [key: string]: string;
    };
    /**
     * Type of the azure resource
     */
    readonly type: string;
    /**
     * Email of the user who created the resource
     */
    readonly userEmail: string;
    /**
     * Name of the user who created the resource
     */
    readonly userName: string;
}
/**
 * Get an account
 */
export declare function getAccountOutput(args: GetAccountOutputArgs, opts?: pulumi.InvokeOutputOptions): pulumi.Output<GetAccountResult>;
export interface GetAccountOutputArgs {
    /**
     * The name of the share account.
     */
    accountName: pulumi.Input<string>;
    /**
     * The resource group name.
     */
    resourceGroupName: pulumi.Input<string>;
}
