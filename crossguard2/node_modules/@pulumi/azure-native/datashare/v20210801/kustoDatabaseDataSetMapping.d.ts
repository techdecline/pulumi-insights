import * as pulumi from "@pulumi/pulumi";
import * as outputs from "../../types/output";
/**
 * A Kusto database data set mapping
 */
export declare class KustoDatabaseDataSetMapping extends pulumi.CustomResource {
    /**
     * Get an existing KustoDatabaseDataSetMapping resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    static get(name: string, id: pulumi.Input<pulumi.ID>, opts?: pulumi.CustomResourceOptions): KustoDatabaseDataSetMapping;
    /**
     * Returns true if the given object is an instance of KustoDatabaseDataSetMapping.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    static isInstance(obj: any): obj is KustoDatabaseDataSetMapping;
    /**
     * The id of the source data set.
     */
    readonly dataSetId: pulumi.Output<string>;
    /**
     * Gets the status of the data set mapping.
     */
    readonly dataSetMappingStatus: pulumi.Output<string>;
    /**
     * Kind of data set mapping.
     * Expected value is 'KustoDatabase'.
     */
    readonly kind: pulumi.Output<"KustoDatabase">;
    /**
     * Resource id of the sink kusto cluster.
     */
    readonly kustoClusterResourceId: pulumi.Output<string>;
    /**
     * Location of the sink kusto cluster.
     */
    readonly location: pulumi.Output<string>;
    /**
     * Name of the azure resource
     */
    readonly name: pulumi.Output<string>;
    /**
     * Provisioning state of the data set mapping.
     */
    readonly provisioningState: pulumi.Output<string>;
    /**
     * System Data of the Azure resource.
     */
    readonly systemData: pulumi.Output<outputs.datashare.v20210801.SystemDataResponse>;
    /**
     * Type of the azure resource
     */
    readonly type: pulumi.Output<string>;
    /**
     * Create a KustoDatabaseDataSetMapping resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: KustoDatabaseDataSetMappingArgs, opts?: pulumi.CustomResourceOptions);
}
/**
 * The set of arguments for constructing a KustoDatabaseDataSetMapping resource.
 */
export interface KustoDatabaseDataSetMappingArgs {
    /**
     * The name of the share account.
     */
    accountName: pulumi.Input<string>;
    /**
     * The id of the source data set.
     */
    dataSetId: pulumi.Input<string>;
    /**
     * The name of the data set mapping to be created.
     */
    dataSetMappingName?: pulumi.Input<string>;
    /**
     * Kind of data set mapping.
     * Expected value is 'KustoDatabase'.
     */
    kind: pulumi.Input<"KustoDatabase">;
    /**
     * Resource id of the sink kusto cluster.
     */
    kustoClusterResourceId: pulumi.Input<string>;
    /**
     * The resource group name.
     */
    resourceGroupName: pulumi.Input<string>;
    /**
     * The name of the share subscription which will hold the data set sink.
     */
    shareSubscriptionName: pulumi.Input<string>;
}
