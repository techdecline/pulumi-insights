import * as pulumi from "@pulumi/pulumi";
import * as outputs from "../../types/output";
/**
 * Get a share
 */
export declare function getShare(args: GetShareArgs, opts?: pulumi.InvokeOptions): Promise<GetShareResult>;
export interface GetShareArgs {
    /**
     * The name of the share account.
     */
    accountName: string;
    /**
     * The resource group name.
     */
    resourceGroupName: string;
    /**
     * The name of the share to retrieve.
     */
    shareName: string;
}
/**
 * A share data transfer object.
 */
export interface GetShareResult {
    /**
     * Time at which the share was created.
     */
    readonly createdAt: string;
    /**
     * Share description.
     */
    readonly description?: string;
    /**
     * The resource id of the azure resource
     */
    readonly id: string;
    /**
     * Name of the azure resource
     */
    readonly name: string;
    /**
     * Gets or sets the provisioning state
     */
    readonly provisioningState: string;
    /**
     * Share kind.
     */
    readonly shareKind?: string;
    /**
     * System Data of the Azure resource.
     */
    readonly systemData: outputs.datashare.v20210801.SystemDataResponse;
    /**
     * Share terms.
     */
    readonly terms?: string;
    /**
     * Type of the azure resource
     */
    readonly type: string;
    /**
     * Email of the user who created the resource
     */
    readonly userEmail: string;
    /**
     * Name of the user who created the resource
     */
    readonly userName: string;
}
/**
 * Get a share
 */
export declare function getShareOutput(args: GetShareOutputArgs, opts?: pulumi.InvokeOutputOptions): pulumi.Output<GetShareResult>;
export interface GetShareOutputArgs {
    /**
     * The name of the share account.
     */
    accountName: pulumi.Input<string>;
    /**
     * The resource group name.
     */
    resourceGroupName: pulumi.Input<string>;
    /**
     * The name of the share to retrieve.
     */
    shareName: pulumi.Input<string>;
}
