import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../../types/input";
import * as outputs from "../../types/output";
import * as enums from "../../types/enums";
/**
 * OpenShiftCluster represents an Azure Red Hat OpenShift cluster.
 */
export declare class OpenShiftCluster extends pulumi.CustomResource {
    /**
     * Get an existing OpenShiftCluster resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    static get(name: string, id: pulumi.Input<pulumi.ID>, opts?: pulumi.CustomResourceOptions): OpenShiftCluster;
    /**
     * Returns true if the given object is an instance of OpenShiftCluster.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    static isInstance(obj: any): obj is OpenShiftCluster;
    /**
     * The cluster API server profile.
     */
    readonly apiserverProfile: pulumi.Output<outputs.redhatopenshift.v20231122.APIServerProfileResponse | undefined>;
    /**
     * The cluster profile.
     */
    readonly clusterProfile: pulumi.Output<outputs.redhatopenshift.v20231122.ClusterProfileResponse | undefined>;
    /**
     * The console profile.
     */
    readonly consoleProfile: pulumi.Output<outputs.redhatopenshift.v20231122.ConsoleProfileResponse | undefined>;
    /**
     * The cluster ingress profiles.
     */
    readonly ingressProfiles: pulumi.Output<outputs.redhatopenshift.v20231122.IngressProfileResponse[] | undefined>;
    /**
     * The geo-location where the resource lives
     */
    readonly location: pulumi.Output<string>;
    /**
     * The cluster master profile.
     */
    readonly masterProfile: pulumi.Output<outputs.redhatopenshift.v20231122.MasterProfileResponse | undefined>;
    /**
     * The name of the resource
     */
    readonly name: pulumi.Output<string>;
    /**
     * The cluster network profile.
     */
    readonly networkProfile: pulumi.Output<outputs.redhatopenshift.v20231122.NetworkProfileResponse | undefined>;
    /**
     * The cluster provisioning state.
     */
    readonly provisioningState: pulumi.Output<string | undefined>;
    /**
     * The cluster service principal profile.
     */
    readonly servicePrincipalProfile: pulumi.Output<outputs.redhatopenshift.v20231122.ServicePrincipalProfileResponse | undefined>;
    /**
     * Azure Resource Manager metadata containing createdBy and modifiedBy information.
     */
    readonly systemData: pulumi.Output<outputs.redhatopenshift.v20231122.SystemDataResponse>;
    /**
     * Resource tags.
     */
    readonly tags: pulumi.Output<{
        [key: string]: string;
    } | undefined>;
    /**
     * The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
     */
    readonly type: pulumi.Output<string>;
    /**
     * The cluster worker profiles.
     */
    readonly workerProfiles: pulumi.Output<outputs.redhatopenshift.v20231122.WorkerProfileResponse[] | undefined>;
    /**
     * The cluster worker profiles status.
     */
    readonly workerProfilesStatus: pulumi.Output<outputs.redhatopenshift.v20231122.WorkerProfileResponse[]>;
    /**
     * Create a OpenShiftCluster resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: OpenShiftClusterArgs, opts?: pulumi.CustomResourceOptions);
}
/**
 * The set of arguments for constructing a OpenShiftCluster resource.
 */
export interface OpenShiftClusterArgs {
    /**
     * The cluster API server profile.
     */
    apiserverProfile?: pulumi.Input<inputs.redhatopenshift.v20231122.APIServerProfileArgs>;
    /**
     * The cluster profile.
     */
    clusterProfile?: pulumi.Input<inputs.redhatopenshift.v20231122.ClusterProfileArgs>;
    /**
     * The cluster ingress profiles.
     */
    ingressProfiles?: pulumi.Input<pulumi.Input<inputs.redhatopenshift.v20231122.IngressProfileArgs>[]>;
    /**
     * The geo-location where the resource lives
     */
    location?: pulumi.Input<string>;
    /**
     * The cluster master profile.
     */
    masterProfile?: pulumi.Input<inputs.redhatopenshift.v20231122.MasterProfileArgs>;
    /**
     * The cluster network profile.
     */
    networkProfile?: pulumi.Input<inputs.redhatopenshift.v20231122.NetworkProfileArgs>;
    /**
     * The cluster provisioning state.
     */
    provisioningState?: pulumi.Input<string | enums.redhatopenshift.v20231122.ProvisioningState>;
    /**
     * The name of the resource group. The name is case insensitive.
     */
    resourceGroupName: pulumi.Input<string>;
    /**
     * The name of the OpenShift cluster resource.
     */
    resourceName?: pulumi.Input<string>;
    /**
     * The cluster service principal profile.
     */
    servicePrincipalProfile?: pulumi.Input<inputs.redhatopenshift.v20231122.ServicePrincipalProfileArgs>;
    /**
     * Resource tags.
     */
    tags?: pulumi.Input<{
        [key: string]: pulumi.Input<string>;
    }>;
    /**
     * The cluster worker profiles.
     */
    workerProfiles?: pulumi.Input<pulumi.Input<inputs.redhatopenshift.v20231122.WorkerProfileArgs>[]>;
}
