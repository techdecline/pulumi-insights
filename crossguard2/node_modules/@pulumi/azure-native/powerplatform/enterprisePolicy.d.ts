import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as enums from "../types/enums";
/**
 * Definition of the EnterprisePolicy.
 * Azure REST API version: 2020-10-30-preview. Prior API version in Azure Native 1.x: 2020-10-30-preview.
 */
export declare class EnterprisePolicy extends pulumi.CustomResource {
    /**
     * Get an existing EnterprisePolicy resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    static get(name: string, id: pulumi.Input<pulumi.ID>, opts?: pulumi.CustomResourceOptions): EnterprisePolicy;
    /**
     * Returns true if the given object is an instance of EnterprisePolicy.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    static isInstance(obj: any): obj is EnterprisePolicy;
    /**
     * The encryption settings for a configuration store.
     */
    readonly encryption: pulumi.Output<outputs.powerplatform.PropertiesResponseEncryption | undefined>;
    /**
     * The health status of the resource.
     */
    readonly healthStatus: pulumi.Output<string | undefined>;
    /**
     * The identity of the EnterprisePolicy.
     */
    readonly identity: pulumi.Output<outputs.powerplatform.EnterprisePolicyIdentityResponse | undefined>;
    /**
     * The kind (type) of Enterprise Policy.
     */
    readonly kind: pulumi.Output<string>;
    /**
     * The geo-location where the resource lives
     */
    readonly location: pulumi.Output<string>;
    /**
     * Settings concerning lockbox.
     */
    readonly lockbox: pulumi.Output<outputs.powerplatform.PropertiesResponseLockbox | undefined>;
    /**
     * The name of the resource
     */
    readonly name: pulumi.Output<string>;
    /**
     * Settings concerning network injection.
     */
    readonly networkInjection: pulumi.Output<outputs.powerplatform.PropertiesResponseNetworkInjection | undefined>;
    /**
     * Metadata pertaining to creation and last modification of the resource.
     */
    readonly systemData: pulumi.Output<outputs.powerplatform.SystemDataResponse>;
    /**
     * The internally assigned unique identifier of the resource.
     */
    readonly systemId: pulumi.Output<string>;
    /**
     * Resource tags.
     */
    readonly tags: pulumi.Output<{
        [key: string]: string;
    } | undefined>;
    /**
     * The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
     */
    readonly type: pulumi.Output<string>;
    /**
     * Create a EnterprisePolicy resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: EnterprisePolicyArgs, opts?: pulumi.CustomResourceOptions);
}
/**
 * The set of arguments for constructing a EnterprisePolicy resource.
 */
export interface EnterprisePolicyArgs {
    /**
     * The encryption settings for a configuration store.
     */
    encryption?: pulumi.Input<inputs.powerplatform.PropertiesEncryptionArgs>;
    /**
     * Name of the EnterprisePolicy.
     */
    enterprisePolicyName?: pulumi.Input<string>;
    /**
     * The health status of the resource.
     */
    healthStatus?: pulumi.Input<string | enums.powerplatform.HealthStatus>;
    /**
     * The identity of the EnterprisePolicy.
     */
    identity?: pulumi.Input<inputs.powerplatform.EnterprisePolicyIdentityArgs>;
    /**
     * The kind (type) of Enterprise Policy.
     */
    kind: pulumi.Input<string | enums.powerplatform.EnterprisePolicyKind>;
    /**
     * The geo-location where the resource lives
     */
    location?: pulumi.Input<string>;
    /**
     * Settings concerning lockbox.
     */
    lockbox?: pulumi.Input<inputs.powerplatform.PropertiesLockboxArgs>;
    /**
     * Settings concerning network injection.
     */
    networkInjection?: pulumi.Input<inputs.powerplatform.PropertiesNetworkInjectionArgs>;
    /**
     * The name of the resource group. The name is case insensitive.
     */
    resourceGroupName: pulumi.Input<string>;
    /**
     * Resource tags.
     */
    tags?: pulumi.Input<{
        [key: string]: pulumi.Input<string>;
    }>;
}
