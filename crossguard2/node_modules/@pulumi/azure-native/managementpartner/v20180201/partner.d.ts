import * as pulumi from "@pulumi/pulumi";
/**
 * this is the management partner operations response
 */
export declare class Partner extends pulumi.CustomResource {
    /**
     * Get an existing Partner resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    static get(name: string, id: pulumi.Input<pulumi.ID>, opts?: pulumi.CustomResourceOptions): Partner;
    /**
     * Returns true if the given object is an instance of Partner.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    static isInstance(obj: any): obj is Partner;
    /**
     * This is the DateTime when the partner was created.
     */
    readonly createdTime: pulumi.Output<string | undefined>;
    /**
     * Type of the partner
     */
    readonly etag: pulumi.Output<number | undefined>;
    /**
     * Name of the partner
     */
    readonly name: pulumi.Output<string>;
    /**
     * This is the object id.
     */
    readonly objectId: pulumi.Output<string | undefined>;
    /**
     * This is the partner id
     */
    readonly partnerId: pulumi.Output<string | undefined>;
    /**
     * This is the partner name
     */
    readonly partnerName: pulumi.Output<string | undefined>;
    /**
     * This is the tenant id.
     */
    readonly tenantId: pulumi.Output<string | undefined>;
    /**
     * Type of resource. "Microsoft.ManagementPartner/partners"
     */
    readonly type: pulumi.Output<string>;
    /**
     * This is the DateTime when the partner was updated.
     */
    readonly updatedTime: pulumi.Output<string | undefined>;
    /**
     * This is the version.
     */
    readonly version: pulumi.Output<number | undefined>;
    /**
     * Create a Partner resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args?: PartnerArgs, opts?: pulumi.CustomResourceOptions);
}
/**
 * The set of arguments for constructing a Partner resource.
 */
export interface PartnerArgs {
    /**
     * Id of the Partner
     */
    partnerId?: pulumi.Input<string>;
}
