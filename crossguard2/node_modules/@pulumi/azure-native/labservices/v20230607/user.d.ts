import * as pulumi from "@pulumi/pulumi";
import * as outputs from "../../types/output";
/**
 * User of a lab that can register for and use virtual machines within the lab.
 */
export declare class User extends pulumi.CustomResource {
    /**
     * Get an existing User resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    static get(name: string, id: pulumi.Input<pulumi.ID>, opts?: pulumi.CustomResourceOptions): User;
    /**
     * Returns true if the given object is an instance of User.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    static isInstance(obj: any): obj is User;
    /**
     * The amount of usage quota time the user gets in addition to the lab usage quota.
     */
    readonly additionalUsageQuota: pulumi.Output<string | undefined>;
    /**
     * Display name of the user, for example user's full name.
     */
    readonly displayName: pulumi.Output<string>;
    /**
     * Email address of the user.
     */
    readonly email: pulumi.Output<string>;
    /**
     * Date and time when the invitation message was sent to the user.
     */
    readonly invitationSent: pulumi.Output<string>;
    /**
     * State of the invitation message for the user.
     */
    readonly invitationState: pulumi.Output<string>;
    /**
     * The name of the resource
     */
    readonly name: pulumi.Output<string>;
    /**
     * Current provisioning state of the user resource.
     */
    readonly provisioningState: pulumi.Output<string>;
    /**
     * State of the user's registration within the lab.
     */
    readonly registrationState: pulumi.Output<string>;
    /**
     * Error details of last operation done on lab plan.
     */
    readonly resourceOperationError: pulumi.Output<outputs.labservices.v20230607.ResourceOperationErrorResponse>;
    /**
     * Metadata pertaining to creation and last modification of the user resource.
     */
    readonly systemData: pulumi.Output<outputs.labservices.v20230607.SystemDataResponse>;
    /**
     * How long the user has used their virtual machines in this lab.
     */
    readonly totalUsage: pulumi.Output<string>;
    /**
     * The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
     */
    readonly type: pulumi.Output<string>;
    /**
     * Create a User resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: UserArgs, opts?: pulumi.CustomResourceOptions);
}
/**
 * The set of arguments for constructing a User resource.
 */
export interface UserArgs {
    /**
     * The amount of usage quota time the user gets in addition to the lab usage quota.
     */
    additionalUsageQuota?: pulumi.Input<string>;
    /**
     * Email address of the user.
     */
    email: pulumi.Input<string>;
    /**
     * The name of the lab that uniquely identifies it within containing lab plan. Used in resource URIs.
     */
    labName: pulumi.Input<string>;
    /**
     * The name of the resource group. The name is case insensitive.
     */
    resourceGroupName: pulumi.Input<string>;
    /**
     * The name of the user that uniquely identifies it within containing lab. Used in resource URIs.
     */
    userName?: pulumi.Input<string>;
}
