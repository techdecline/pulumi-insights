import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../../types/input";
import * as outputs from "../../types/output";
/**
 * Schedule for automatically turning virtual machines in a lab on and off at specified times.
 */
export declare class Schedule extends pulumi.CustomResource {
    /**
     * Get an existing Schedule resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    static get(name: string, id: pulumi.Input<pulumi.ID>, opts?: pulumi.CustomResourceOptions): Schedule;
    /**
     * Returns true if the given object is an instance of Schedule.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    static isInstance(obj: any): obj is Schedule;
    /**
     * The name of the resource
     */
    readonly name: pulumi.Output<string>;
    /**
     * Notes for this schedule.
     */
    readonly notes: pulumi.Output<string | undefined>;
    /**
     * Current provisioning state of the schedule.
     */
    readonly provisioningState: pulumi.Output<string>;
    /**
     * The recurrence pattern of the scheduled actions.
     */
    readonly recurrencePattern: pulumi.Output<outputs.labservices.v20230607.RecurrencePatternResponse | undefined>;
    /**
     * Error details of last operation done on schedule.
     */
    readonly resourceOperationError: pulumi.Output<outputs.labservices.v20230607.ResourceOperationErrorResponse>;
    /**
     * When lab user virtual machines will be started. Timestamp offsets will be ignored and timeZoneId is used instead.
     */
    readonly startAt: pulumi.Output<string | undefined>;
    /**
     * When lab user virtual machines will be stopped. Timestamp offsets will be ignored and timeZoneId is used instead.
     */
    readonly stopAt: pulumi.Output<string>;
    /**
     * Metadata pertaining to creation and last modification of the schedule.
     */
    readonly systemData: pulumi.Output<outputs.labservices.v20230607.SystemDataResponse>;
    /**
     * The IANA timezone id for the schedule.
     */
    readonly timeZoneId: pulumi.Output<string>;
    /**
     * The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
     */
    readonly type: pulumi.Output<string>;
    /**
     * Create a Schedule resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: ScheduleArgs, opts?: pulumi.CustomResourceOptions);
}
/**
 * The set of arguments for constructing a Schedule resource.
 */
export interface ScheduleArgs {
    /**
     * The name of the lab that uniquely identifies it within containing lab plan. Used in resource URIs.
     */
    labName: pulumi.Input<string>;
    /**
     * Notes for this schedule.
     */
    notes?: pulumi.Input<string>;
    /**
     * The recurrence pattern of the scheduled actions.
     */
    recurrencePattern?: pulumi.Input<inputs.labservices.v20230607.RecurrencePatternArgs>;
    /**
     * The name of the resource group. The name is case insensitive.
     */
    resourceGroupName: pulumi.Input<string>;
    /**
     * The name of the schedule that uniquely identifies it within containing lab. Used in resource URIs.
     */
    scheduleName?: pulumi.Input<string>;
    /**
     * When lab user virtual machines will be started. Timestamp offsets will be ignored and timeZoneId is used instead.
     */
    startAt?: pulumi.Input<string>;
    /**
     * When lab user virtual machines will be stopped. Timestamp offsets will be ignored and timeZoneId is used instead.
     */
    stopAt: pulumi.Input<string>;
    /**
     * The IANA timezone id for the schedule.
     */
    timeZoneId: pulumi.Input<string>;
}
