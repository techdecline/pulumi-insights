import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
/**
 * Pipeline resource type.
 * Azure REST API version: 2018-06-01. Prior API version in Azure Native 1.x: 2018-06-01.
 */
export declare class Pipeline extends pulumi.CustomResource {
    /**
     * Get an existing Pipeline resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    static get(name: string, id: pulumi.Input<pulumi.ID>, opts?: pulumi.CustomResourceOptions): Pipeline;
    /**
     * Returns true if the given object is an instance of Pipeline.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    static isInstance(obj: any): obj is Pipeline;
    /**
     * List of activities in pipeline.
     */
    readonly activities: pulumi.Output<(outputs.datafactory.AppendVariableActivityResponse | outputs.datafactory.AzureDataExplorerCommandActivityResponse | outputs.datafactory.AzureFunctionActivityResponse | outputs.datafactory.AzureMLBatchExecutionActivityResponse | outputs.datafactory.AzureMLExecutePipelineActivityResponse | outputs.datafactory.AzureMLUpdateResourceActivityResponse | outputs.datafactory.ControlActivityResponse | outputs.datafactory.CopyActivityResponse | outputs.datafactory.CustomActivityResponse | outputs.datafactory.DataLakeAnalyticsUSQLActivityResponse | outputs.datafactory.DatabricksNotebookActivityResponse | outputs.datafactory.DatabricksSparkJarActivityResponse | outputs.datafactory.DatabricksSparkPythonActivityResponse | outputs.datafactory.DeleteActivityResponse | outputs.datafactory.ExecuteDataFlowActivityResponse | outputs.datafactory.ExecutePipelineActivityResponse | outputs.datafactory.ExecuteSSISPackageActivityResponse | outputs.datafactory.ExecuteWranglingDataflowActivityResponse | outputs.datafactory.ExecutionActivityResponse | outputs.datafactory.FailActivityResponse | outputs.datafactory.FilterActivityResponse | outputs.datafactory.ForEachActivityResponse | outputs.datafactory.GetMetadataActivityResponse | outputs.datafactory.HDInsightHiveActivityResponse | outputs.datafactory.HDInsightMapReduceActivityResponse | outputs.datafactory.HDInsightPigActivityResponse | outputs.datafactory.HDInsightSparkActivityResponse | outputs.datafactory.HDInsightStreamingActivityResponse | outputs.datafactory.IfConditionActivityResponse | outputs.datafactory.LookupActivityResponse | outputs.datafactory.ScriptActivityResponse | outputs.datafactory.SetVariableActivityResponse | outputs.datafactory.SqlServerStoredProcedureActivityResponse | outputs.datafactory.SwitchActivityResponse | outputs.datafactory.SynapseNotebookActivityResponse | outputs.datafactory.SynapseSparkJobDefinitionActivityResponse | outputs.datafactory.UntilActivityResponse | outputs.datafactory.ValidationActivityResponse | outputs.datafactory.WaitActivityResponse | outputs.datafactory.WebActivityResponse | outputs.datafactory.WebHookActivityResponse)[] | undefined>;
    /**
     * List of tags that can be used for describing the Pipeline.
     */
    readonly annotations: pulumi.Output<any[] | undefined>;
    /**
     * The max number of concurrent runs for the pipeline.
     */
    readonly concurrency: pulumi.Output<number | undefined>;
    /**
     * The description of the pipeline.
     */
    readonly description: pulumi.Output<string | undefined>;
    /**
     * Etag identifies change in the resource.
     */
    readonly etag: pulumi.Output<string>;
    /**
     * The folder that this Pipeline is in. If not specified, Pipeline will appear at the root level.
     */
    readonly folder: pulumi.Output<outputs.datafactory.PipelineResponseFolder | undefined>;
    /**
     * The resource name.
     */
    readonly name: pulumi.Output<string>;
    /**
     * List of parameters for pipeline.
     */
    readonly parameters: pulumi.Output<{
        [key: string]: outputs.datafactory.ParameterSpecificationResponse;
    } | undefined>;
    /**
     * Pipeline Policy.
     */
    readonly policy: pulumi.Output<outputs.datafactory.PipelinePolicyResponse | undefined>;
    /**
     * Dimensions emitted by Pipeline.
     */
    readonly runDimensions: pulumi.Output<{
        [key: string]: any;
    } | undefined>;
    /**
     * The resource type.
     */
    readonly type: pulumi.Output<string>;
    /**
     * List of variables for pipeline.
     */
    readonly variables: pulumi.Output<{
        [key: string]: outputs.datafactory.VariableSpecificationResponse;
    } | undefined>;
    /**
     * Create a Pipeline resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: PipelineArgs, opts?: pulumi.CustomResourceOptions);
}
/**
 * The set of arguments for constructing a Pipeline resource.
 */
export interface PipelineArgs {
    /**
     * List of activities in pipeline.
     */
    activities?: pulumi.Input<pulumi.Input<inputs.datafactory.AppendVariableActivityArgs | inputs.datafactory.AzureDataExplorerCommandActivityArgs | inputs.datafactory.AzureFunctionActivityArgs | inputs.datafactory.AzureMLBatchExecutionActivityArgs | inputs.datafactory.AzureMLExecutePipelineActivityArgs | inputs.datafactory.AzureMLUpdateResourceActivityArgs | inputs.datafactory.ControlActivityArgs | inputs.datafactory.CopyActivityArgs | inputs.datafactory.CustomActivityArgs | inputs.datafactory.DataLakeAnalyticsUSQLActivityArgs | inputs.datafactory.DatabricksNotebookActivityArgs | inputs.datafactory.DatabricksSparkJarActivityArgs | inputs.datafactory.DatabricksSparkPythonActivityArgs | inputs.datafactory.DeleteActivityArgs | inputs.datafactory.ExecuteDataFlowActivityArgs | inputs.datafactory.ExecutePipelineActivityArgs | inputs.datafactory.ExecuteSSISPackageActivityArgs | inputs.datafactory.ExecuteWranglingDataflowActivityArgs | inputs.datafactory.ExecutionActivityArgs | inputs.datafactory.FailActivityArgs | inputs.datafactory.FilterActivityArgs | inputs.datafactory.ForEachActivityArgs | inputs.datafactory.GetMetadataActivityArgs | inputs.datafactory.HDInsightHiveActivityArgs | inputs.datafactory.HDInsightMapReduceActivityArgs | inputs.datafactory.HDInsightPigActivityArgs | inputs.datafactory.HDInsightSparkActivityArgs | inputs.datafactory.HDInsightStreamingActivityArgs | inputs.datafactory.IfConditionActivityArgs | inputs.datafactory.LookupActivityArgs | inputs.datafactory.ScriptActivityArgs | inputs.datafactory.SetVariableActivityArgs | inputs.datafactory.SqlServerStoredProcedureActivityArgs | inputs.datafactory.SwitchActivityArgs | inputs.datafactory.SynapseNotebookActivityArgs | inputs.datafactory.SynapseSparkJobDefinitionActivityArgs | inputs.datafactory.UntilActivityArgs | inputs.datafactory.ValidationActivityArgs | inputs.datafactory.WaitActivityArgs | inputs.datafactory.WebActivityArgs | inputs.datafactory.WebHookActivityArgs>[]>;
    /**
     * List of tags that can be used for describing the Pipeline.
     */
    annotations?: pulumi.Input<any[]>;
    /**
     * The max number of concurrent runs for the pipeline.
     */
    concurrency?: pulumi.Input<number>;
    /**
     * The description of the pipeline.
     */
    description?: pulumi.Input<string>;
    /**
     * The factory name.
     */
    factoryName: pulumi.Input<string>;
    /**
     * The folder that this Pipeline is in. If not specified, Pipeline will appear at the root level.
     */
    folder?: pulumi.Input<inputs.datafactory.PipelineFolderArgs>;
    /**
     * List of parameters for pipeline.
     */
    parameters?: pulumi.Input<{
        [key: string]: pulumi.Input<inputs.datafactory.ParameterSpecificationArgs>;
    }>;
    /**
     * The pipeline name.
     */
    pipelineName?: pulumi.Input<string>;
    /**
     * Pipeline Policy.
     */
    policy?: pulumi.Input<inputs.datafactory.PipelinePolicyArgs>;
    /**
     * The resource group name.
     */
    resourceGroupName: pulumi.Input<string>;
    /**
     * Dimensions emitted by Pipeline.
     */
    runDimensions?: pulumi.Input<{
        [key: string]: any;
    }>;
    /**
     * List of variables for pipeline.
     */
    variables?: pulumi.Input<{
        [key: string]: pulumi.Input<inputs.datafactory.VariableSpecificationArgs>;
    }>;
}
