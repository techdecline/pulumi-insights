import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../../types/input";
import * as outputs from "../../types/output";
/**
 * Change data capture resource type.
 */
export declare class ChangeDataCapture extends pulumi.CustomResource {
    /**
     * Get an existing ChangeDataCapture resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    static get(name: string, id: pulumi.Input<pulumi.ID>, opts?: pulumi.CustomResourceOptions): ChangeDataCapture;
    /**
     * Returns true if the given object is an instance of ChangeDataCapture.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    static isInstance(obj: any): obj is ChangeDataCapture;
    /**
     * A boolean to determine if the vnet configuration needs to be overwritten.
     */
    readonly allowVNetOverride: pulumi.Output<boolean | undefined>;
    /**
     * The description of the change data capture.
     */
    readonly description: pulumi.Output<string | undefined>;
    /**
     * Etag identifies change in the resource.
     */
    readonly etag: pulumi.Output<string>;
    /**
     * The folder that this CDC is in. If not specified, CDC will appear at the root level.
     */
    readonly folder: pulumi.Output<outputs.datafactory.v20180601.ChangeDataCaptureResponseFolder | undefined>;
    /**
     * The resource name.
     */
    readonly name: pulumi.Output<string>;
    /**
     * CDC policy
     */
    readonly policy: pulumi.Output<outputs.datafactory.v20180601.MapperPolicyResponse>;
    /**
     * List of sources connections that can be used as sources in the CDC.
     */
    readonly sourceConnectionsInfo: pulumi.Output<outputs.datafactory.v20180601.MapperSourceConnectionsInfoResponse[]>;
    /**
     * Status of the CDC as to if it is running or stopped.
     */
    readonly status: pulumi.Output<string | undefined>;
    /**
     * List of target connections that can be used as sources in the CDC.
     */
    readonly targetConnectionsInfo: pulumi.Output<outputs.datafactory.v20180601.MapperTargetConnectionsInfoResponse[]>;
    /**
     * The resource type.
     */
    readonly type: pulumi.Output<string>;
    /**
     * Create a ChangeDataCapture resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: ChangeDataCaptureArgs, opts?: pulumi.CustomResourceOptions);
}
/**
 * The set of arguments for constructing a ChangeDataCapture resource.
 */
export interface ChangeDataCaptureArgs {
    /**
     * A boolean to determine if the vnet configuration needs to be overwritten.
     */
    allowVNetOverride?: pulumi.Input<boolean>;
    /**
     * The change data capture name.
     */
    changeDataCaptureName?: pulumi.Input<string>;
    /**
     * The description of the change data capture.
     */
    description?: pulumi.Input<string>;
    /**
     * The factory name.
     */
    factoryName: pulumi.Input<string>;
    /**
     * The folder that this CDC is in. If not specified, CDC will appear at the root level.
     */
    folder?: pulumi.Input<inputs.datafactory.v20180601.ChangeDataCaptureFolderArgs>;
    /**
     * CDC policy
     */
    policy: pulumi.Input<inputs.datafactory.v20180601.MapperPolicyArgs>;
    /**
     * The resource group name.
     */
    resourceGroupName: pulumi.Input<string>;
    /**
     * List of sources connections that can be used as sources in the CDC.
     */
    sourceConnectionsInfo: pulumi.Input<pulumi.Input<inputs.datafactory.v20180601.MapperSourceConnectionsInfoArgs>[]>;
    /**
     * Status of the CDC as to if it is running or stopped.
     */
    status?: pulumi.Input<string>;
    /**
     * List of target connections that can be used as sources in the CDC.
     */
    targetConnectionsInfo: pulumi.Input<pulumi.Input<inputs.datafactory.v20180601.MapperTargetConnectionsInfoArgs>[]>;
}
