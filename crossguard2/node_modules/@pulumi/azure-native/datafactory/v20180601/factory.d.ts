import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../../types/input";
import * as outputs from "../../types/output";
import * as enums from "../../types/enums";
/**
 * Factory resource type.
 */
export declare class Factory extends pulumi.CustomResource {
    /**
     * Get an existing Factory resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    static get(name: string, id: pulumi.Input<pulumi.ID>, opts?: pulumi.CustomResourceOptions): Factory;
    /**
     * Returns true if the given object is an instance of Factory.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    static isInstance(obj: any): obj is Factory;
    /**
     * Time the factory was created in ISO8601 format.
     */
    readonly createTime: pulumi.Output<string>;
    /**
     * Etag identifies change in the resource.
     */
    readonly eTag: pulumi.Output<string>;
    /**
     * Properties to enable Customer Managed Key for the factory.
     */
    readonly encryption: pulumi.Output<outputs.datafactory.v20180601.EncryptionConfigurationResponse | undefined>;
    /**
     * List of parameters for factory.
     */
    readonly globalParameters: pulumi.Output<{
        [key: string]: outputs.datafactory.v20180601.GlobalParameterSpecificationResponse;
    } | undefined>;
    /**
     * Managed service identity of the factory.
     */
    readonly identity: pulumi.Output<outputs.datafactory.v20180601.FactoryIdentityResponse | undefined>;
    /**
     * The resource location.
     */
    readonly location: pulumi.Output<string | undefined>;
    /**
     * The resource name.
     */
    readonly name: pulumi.Output<string>;
    /**
     * Factory provisioning state, example Succeeded.
     */
    readonly provisioningState: pulumi.Output<string>;
    /**
     * Whether or not public network access is allowed for the data factory.
     */
    readonly publicNetworkAccess: pulumi.Output<string | undefined>;
    /**
     * Purview information of the factory.
     */
    readonly purviewConfiguration: pulumi.Output<outputs.datafactory.v20180601.PurviewConfigurationResponse | undefined>;
    /**
     * Git repo information of the factory.
     */
    readonly repoConfiguration: pulumi.Output<outputs.datafactory.v20180601.FactoryGitHubConfigurationResponse | outputs.datafactory.v20180601.FactoryVSTSConfigurationResponse | undefined>;
    /**
     * The resource tags.
     */
    readonly tags: pulumi.Output<{
        [key: string]: string;
    } | undefined>;
    /**
     * The resource type.
     */
    readonly type: pulumi.Output<string>;
    /**
     * Version of the factory.
     */
    readonly version: pulumi.Output<string>;
    /**
     * Create a Factory resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: FactoryArgs, opts?: pulumi.CustomResourceOptions);
}
/**
 * The set of arguments for constructing a Factory resource.
 */
export interface FactoryArgs {
    /**
     * Properties to enable Customer Managed Key for the factory.
     */
    encryption?: pulumi.Input<inputs.datafactory.v20180601.EncryptionConfigurationArgs>;
    /**
     * The factory name.
     */
    factoryName?: pulumi.Input<string>;
    /**
     * List of parameters for factory.
     */
    globalParameters?: pulumi.Input<{
        [key: string]: pulumi.Input<inputs.datafactory.v20180601.GlobalParameterSpecificationArgs>;
    }>;
    /**
     * Managed service identity of the factory.
     */
    identity?: pulumi.Input<inputs.datafactory.v20180601.FactoryIdentityArgs>;
    /**
     * The resource location.
     */
    location?: pulumi.Input<string>;
    /**
     * Whether or not public network access is allowed for the data factory.
     */
    publicNetworkAccess?: pulumi.Input<string | enums.datafactory.v20180601.PublicNetworkAccess>;
    /**
     * Purview information of the factory.
     */
    purviewConfiguration?: pulumi.Input<inputs.datafactory.v20180601.PurviewConfigurationArgs>;
    /**
     * Git repo information of the factory.
     */
    repoConfiguration?: pulumi.Input<inputs.datafactory.v20180601.FactoryGitHubConfigurationArgs | inputs.datafactory.v20180601.FactoryVSTSConfigurationArgs>;
    /**
     * The resource group name.
     */
    resourceGroupName: pulumi.Input<string>;
    /**
     * The resource tags.
     */
    tags?: pulumi.Input<{
        [key: string]: pulumi.Input<string>;
    }>;
}
