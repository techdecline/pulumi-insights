import * as pulumi from "@pulumi/pulumi";
/**
 * Get a trigger's event subscription status.
 */
export declare function getTriggerEventSubscriptionStatus(args: GetTriggerEventSubscriptionStatusArgs, opts?: pulumi.InvokeOptions): Promise<GetTriggerEventSubscriptionStatusResult>;
export interface GetTriggerEventSubscriptionStatusArgs {
    /**
     * The factory name.
     */
    factoryName: string;
    /**
     * The resource group name.
     */
    resourceGroupName: string;
    /**
     * The trigger name.
     */
    triggerName: string;
}
/**
 * Defines the response of a trigger subscription operation.
 */
export interface GetTriggerEventSubscriptionStatusResult {
    /**
     * Event Subscription Status.
     */
    readonly status: string;
    /**
     * Trigger name.
     */
    readonly triggerName: string;
}
/**
 * Get a trigger's event subscription status.
 */
export declare function getTriggerEventSubscriptionStatusOutput(args: GetTriggerEventSubscriptionStatusOutputArgs, opts?: pulumi.InvokeOutputOptions): pulumi.Output<GetTriggerEventSubscriptionStatusResult>;
export interface GetTriggerEventSubscriptionStatusOutputArgs {
    /**
     * The factory name.
     */
    factoryName: pulumi.Input<string>;
    /**
     * The resource group name.
     */
    resourceGroupName: pulumi.Input<string>;
    /**
     * The trigger name.
     */
    triggerName: pulumi.Input<string>;
}
