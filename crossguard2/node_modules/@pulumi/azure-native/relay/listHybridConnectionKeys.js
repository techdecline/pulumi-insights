"use strict";
// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***
Object.defineProperty(exports, "__esModule", { value: true });
exports.listHybridConnectionKeysOutput = exports.listHybridConnectionKeys = void 0;
const pulumi = require("@pulumi/pulumi");
const utilities = require("../utilities");
/**
 * Primary and secondary connection strings to the hybrid connection.
 * Azure REST API version: 2021-11-01.
 *
 * Other available API versions: 2024-01-01.
 */
function listHybridConnectionKeys(args, opts) {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("azure-native:relay:listHybridConnectionKeys", {
        "authorizationRuleName": args.authorizationRuleName,
        "hybridConnectionName": args.hybridConnectionName,
        "namespaceName": args.namespaceName,
        "resourceGroupName": args.resourceGroupName,
    }, opts);
}
exports.listHybridConnectionKeys = listHybridConnectionKeys;
/**
 * Primary and secondary connection strings to the hybrid connection.
 * Azure REST API version: 2021-11-01.
 *
 * Other available API versions: 2024-01-01.
 */
function listHybridConnectionKeysOutput(args, opts) {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invokeOutput("azure-native:relay:listHybridConnectionKeys", {
        "authorizationRuleName": args.authorizationRuleName,
        "hybridConnectionName": args.hybridConnectionName,
        "namespaceName": args.namespaceName,
        "resourceGroupName": args.resourceGroupName,
    }, opts);
}
exports.listHybridConnectionKeysOutput = listHybridConnectionKeysOutput;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibGlzdEh5YnJpZENvbm5lY3Rpb25LZXlzLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vcmVsYXkvbGlzdEh5YnJpZENvbm5lY3Rpb25LZXlzLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7QUFBQSxzRUFBc0U7QUFDdEUsaUZBQWlGOzs7QUFFakYseUNBQXlDO0FBQ3pDLDBDQUEwQztBQUUxQzs7Ozs7R0FLRztBQUNILFNBQWdCLHdCQUF3QixDQUFDLElBQWtDLEVBQUUsSUFBMkI7SUFDcEcsSUFBSSxHQUFHLE1BQU0sQ0FBQyxZQUFZLENBQUMsU0FBUyxDQUFDLG9CQUFvQixFQUFFLEVBQUUsSUFBSSxJQUFJLEVBQUUsQ0FBQyxDQUFDO0lBQ3pFLE9BQU8sTUFBTSxDQUFDLE9BQU8sQ0FBQyxNQUFNLENBQUMsNkNBQTZDLEVBQUU7UUFDeEUsdUJBQXVCLEVBQUUsSUFBSSxDQUFDLHFCQUFxQjtRQUNuRCxzQkFBc0IsRUFBRSxJQUFJLENBQUMsb0JBQW9CO1FBQ2pELGVBQWUsRUFBRSxJQUFJLENBQUMsYUFBYTtRQUNuQyxtQkFBbUIsRUFBRSxJQUFJLENBQUMsaUJBQWlCO0tBQzlDLEVBQUUsSUFBSSxDQUFDLENBQUM7QUFDYixDQUFDO0FBUkQsNERBUUM7QUE4Q0Q7Ozs7O0dBS0c7QUFDSCxTQUFnQiw4QkFBOEIsQ0FBQyxJQUF3QyxFQUFFLElBQWlDO0lBQ3RILElBQUksR0FBRyxNQUFNLENBQUMsWUFBWSxDQUFDLFNBQVMsQ0FBQyxvQkFBb0IsRUFBRSxFQUFFLElBQUksSUFBSSxFQUFFLENBQUMsQ0FBQztJQUN6RSxPQUFPLE1BQU0sQ0FBQyxPQUFPLENBQUMsWUFBWSxDQUFDLDZDQUE2QyxFQUFFO1FBQzlFLHVCQUF1QixFQUFFLElBQUksQ0FBQyxxQkFBcUI7UUFDbkQsc0JBQXNCLEVBQUUsSUFBSSxDQUFDLG9CQUFvQjtRQUNqRCxlQUFlLEVBQUUsSUFBSSxDQUFDLGFBQWE7UUFDbkMsbUJBQW1CLEVBQUUsSUFBSSxDQUFDLGlCQUFpQjtLQUM5QyxFQUFFLElBQUksQ0FBQyxDQUFDO0FBQ2IsQ0FBQztBQVJELHdFQVFDIn0=