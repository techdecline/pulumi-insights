"use strict";
// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***
Object.defineProperty(exports, "__esModule", { value: true });
exports.getHybridConnectionOutput = exports.getHybridConnection = void 0;
const pulumi = require("@pulumi/pulumi");
const utilities = require("../utilities");
/**
 * Returns the description for the specified hybrid connection.
 * Azure REST API version: 2021-11-01.
 *
 * Other available API versions: 2024-01-01.
 */
function getHybridConnection(args, opts) {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("azure-native:relay:getHybridConnection", {
        "hybridConnectionName": args.hybridConnectionName,
        "namespaceName": args.namespaceName,
        "resourceGroupName": args.resourceGroupName,
    }, opts);
}
exports.getHybridConnection = getHybridConnection;
/**
 * Returns the description for the specified hybrid connection.
 * Azure REST API version: 2021-11-01.
 *
 * Other available API versions: 2024-01-01.
 */
function getHybridConnectionOutput(args, opts) {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invokeOutput("azure-native:relay:getHybridConnection", {
        "hybridConnectionName": args.hybridConnectionName,
        "namespaceName": args.namespaceName,
        "resourceGroupName": args.resourceGroupName,
    }, opts);
}
exports.getHybridConnectionOutput = getHybridConnectionOutput;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZ2V0SHlicmlkQ29ubmVjdGlvbi5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uL3JlbGF5L2dldEh5YnJpZENvbm5lY3Rpb24udHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IjtBQUFBLHNFQUFzRTtBQUN0RSxpRkFBaUY7OztBQUVqRix5Q0FBeUM7QUFJekMsMENBQTBDO0FBRTFDOzs7OztHQUtHO0FBQ0gsU0FBZ0IsbUJBQW1CLENBQUMsSUFBNkIsRUFBRSxJQUEyQjtJQUMxRixJQUFJLEdBQUcsTUFBTSxDQUFDLFlBQVksQ0FBQyxTQUFTLENBQUMsb0JBQW9CLEVBQUUsRUFBRSxJQUFJLElBQUksRUFBRSxDQUFDLENBQUM7SUFDekUsT0FBTyxNQUFNLENBQUMsT0FBTyxDQUFDLE1BQU0sQ0FBQyx3Q0FBd0MsRUFBRTtRQUNuRSxzQkFBc0IsRUFBRSxJQUFJLENBQUMsb0JBQW9CO1FBQ2pELGVBQWUsRUFBRSxJQUFJLENBQUMsYUFBYTtRQUNuQyxtQkFBbUIsRUFBRSxJQUFJLENBQUMsaUJBQWlCO0tBQzlDLEVBQUUsSUFBSSxDQUFDLENBQUM7QUFDYixDQUFDO0FBUEQsa0RBT0M7QUE4REQ7Ozs7O0dBS0c7QUFDSCxTQUFnQix5QkFBeUIsQ0FBQyxJQUFtQyxFQUFFLElBQWlDO0lBQzVHLElBQUksR0FBRyxNQUFNLENBQUMsWUFBWSxDQUFDLFNBQVMsQ0FBQyxvQkFBb0IsRUFBRSxFQUFFLElBQUksSUFBSSxFQUFFLENBQUMsQ0FBQztJQUN6RSxPQUFPLE1BQU0sQ0FBQyxPQUFPLENBQUMsWUFBWSxDQUFDLHdDQUF3QyxFQUFFO1FBQ3pFLHNCQUFzQixFQUFFLElBQUksQ0FBQyxvQkFBb0I7UUFDakQsZUFBZSxFQUFFLElBQUksQ0FBQyxhQUFhO1FBQ25DLG1CQUFtQixFQUFFLElBQUksQ0FBQyxpQkFBaUI7S0FDOUMsRUFBRSxJQUFJLENBQUMsQ0FBQztBQUNiLENBQUM7QUFQRCw4REFPQyJ9