"use strict";
// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __exportStar = (this && this.__exportStar) || function(m, exports) {
    for (var p in m) if (p !== "default" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.v20240405 = exports.v20220125 = exports.GuestConfigurationHCRPAssignment = exports.GuestConfigurationConnectedVMwarevSphereAssignment = exports.GuestConfigurationAssignmentsVMSS = exports.GuestConfigurationAssignment = exports.getGuestConfigurationHCRPAssignmentOutput = exports.getGuestConfigurationHCRPAssignment = exports.getGuestConfigurationConnectedVMwarevSphereAssignmentOutput = exports.getGuestConfigurationConnectedVMwarevSphereAssignment = exports.getGuestConfigurationAssignmentsVMSSOutput = exports.getGuestConfigurationAssignmentsVMSS = exports.getGuestConfigurationAssignmentOutput = exports.getGuestConfigurationAssignment = void 0;
const pulumi = require("@pulumi/pulumi");
const utilities = require("../utilities");
exports.getGuestConfigurationAssignment = null;
exports.getGuestConfigurationAssignmentOutput = null;
utilities.lazyLoad(exports, ["getGuestConfigurationAssignment", "getGuestConfigurationAssignmentOutput"], () => require("./getGuestConfigurationAssignment"));
exports.getGuestConfigurationAssignmentsVMSS = null;
exports.getGuestConfigurationAssignmentsVMSSOutput = null;
utilities.lazyLoad(exports, ["getGuestConfigurationAssignmentsVMSS", "getGuestConfigurationAssignmentsVMSSOutput"], () => require("./getGuestConfigurationAssignmentsVMSS"));
exports.getGuestConfigurationConnectedVMwarevSphereAssignment = null;
exports.getGuestConfigurationConnectedVMwarevSphereAssignmentOutput = null;
utilities.lazyLoad(exports, ["getGuestConfigurationConnectedVMwarevSphereAssignment", "getGuestConfigurationConnectedVMwarevSphereAssignmentOutput"], () => require("./getGuestConfigurationConnectedVMwarevSphereAssignment"));
exports.getGuestConfigurationHCRPAssignment = null;
exports.getGuestConfigurationHCRPAssignmentOutput = null;
utilities.lazyLoad(exports, ["getGuestConfigurationHCRPAssignment", "getGuestConfigurationHCRPAssignmentOutput"], () => require("./getGuestConfigurationHCRPAssignment"));
exports.GuestConfigurationAssignment = null;
utilities.lazyLoad(exports, ["GuestConfigurationAssignment"], () => require("./guestConfigurationAssignment"));
exports.GuestConfigurationAssignmentsVMSS = null;
utilities.lazyLoad(exports, ["GuestConfigurationAssignmentsVMSS"], () => require("./guestConfigurationAssignmentsVMSS"));
exports.GuestConfigurationConnectedVMwarevSphereAssignment = null;
utilities.lazyLoad(exports, ["GuestConfigurationConnectedVMwarevSphereAssignment"], () => require("./guestConfigurationConnectedVMwarevSphereAssignment"));
exports.GuestConfigurationHCRPAssignment = null;
utilities.lazyLoad(exports, ["GuestConfigurationHCRPAssignment"], () => require("./guestConfigurationHCRPAssignment"));
// Export enums:
__exportStar(require("../types/enums/guestconfiguration"), exports);
// Export sub-modules:
const v20220125 = require("./v20220125");
exports.v20220125 = v20220125;
const v20240405 = require("./v20240405");
exports.v20240405 = v20240405;
const _module = {
    version: utilities.getVersion(),
    construct: (name, type, urn) => {
        switch (type) {
            case "azure-native:guestconfiguration:GuestConfigurationAssignment":
                return new exports.GuestConfigurationAssignment(name, undefined, { urn });
            case "azure-native:guestconfiguration:GuestConfigurationAssignmentsVMSS":
                return new exports.GuestConfigurationAssignmentsVMSS(name, undefined, { urn });
            case "azure-native:guestconfiguration:GuestConfigurationConnectedVMwarevSphereAssignment":
                return new exports.GuestConfigurationConnectedVMwarevSphereAssignment(name, undefined, { urn });
            case "azure-native:guestconfiguration:GuestConfigurationHCRPAssignment":
                return new exports.GuestConfigurationHCRPAssignment(name, undefined, { urn });
            default:
                throw new Error(`unknown resource type ${type}`);
        }
    },
};
pulumi.runtime.registerResourceModule("azure-native", "guestconfiguration", _module);
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaW5kZXguanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi9ndWVzdGNvbmZpZ3VyYXRpb24vaW5kZXgudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IjtBQUFBLHNFQUFzRTtBQUN0RSxpRkFBaUY7Ozs7Ozs7Ozs7Ozs7Ozs7O0FBRWpGLHlDQUF5QztBQUN6QywwQ0FBMEM7QUFJN0IsUUFBQSwrQkFBK0IsR0FBdUYsSUFBVyxDQUFDO0FBQ2xJLFFBQUEscUNBQXFDLEdBQTZGLElBQVcsQ0FBQztBQUMzSixTQUFTLENBQUMsUUFBUSxDQUFDLE9BQU8sRUFBRSxDQUFDLGlDQUFpQyxFQUFDLHVDQUF1QyxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsT0FBTyxDQUFDLG1DQUFtQyxDQUFDLENBQUMsQ0FBQztBQUdoSixRQUFBLG9DQUFvQyxHQUFpRyxJQUFXLENBQUM7QUFDakosUUFBQSwwQ0FBMEMsR0FBdUcsSUFBVyxDQUFDO0FBQzFLLFNBQVMsQ0FBQyxRQUFRLENBQUMsT0FBTyxFQUFFLENBQUMsc0NBQXNDLEVBQUMsNENBQTRDLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxPQUFPLENBQUMsd0NBQXdDLENBQUMsQ0FBQyxDQUFDO0FBRy9KLFFBQUEscURBQXFELEdBQW1JLElBQVcsQ0FBQztBQUNwTSxRQUFBLDJEQUEyRCxHQUF5SSxJQUFXLENBQUM7QUFDN04sU0FBUyxDQUFDLFFBQVEsQ0FBQyxPQUFPLEVBQUUsQ0FBQyx1REFBdUQsRUFBQyw2REFBNkQsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLE9BQU8sQ0FBQyx5REFBeUQsQ0FBQyxDQUFDLENBQUM7QUFHbE4sUUFBQSxtQ0FBbUMsR0FBK0YsSUFBVyxDQUFDO0FBQzlJLFFBQUEseUNBQXlDLEdBQXFHLElBQVcsQ0FBQztBQUN2SyxTQUFTLENBQUMsUUFBUSxDQUFDLE9BQU8sRUFBRSxDQUFDLHFDQUFxQyxFQUFDLDJDQUEyQyxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsT0FBTyxDQUFDLHVDQUF1QyxDQUFDLENBQUMsQ0FBQztBQUk1SixRQUFBLDRCQUE0QixHQUFpRixJQUFXLENBQUM7QUFDdEksU0FBUyxDQUFDLFFBQVEsQ0FBQyxPQUFPLEVBQUUsQ0FBQyw4QkFBOEIsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLE9BQU8sQ0FBQyxnQ0FBZ0MsQ0FBQyxDQUFDLENBQUM7QUFJbEcsUUFBQSxpQ0FBaUMsR0FBMkYsSUFBVyxDQUFDO0FBQ3JKLFNBQVMsQ0FBQyxRQUFRLENBQUMsT0FBTyxFQUFFLENBQUMsbUNBQW1DLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxPQUFPLENBQUMscUNBQXFDLENBQUMsQ0FBQyxDQUFDO0FBSTVHLFFBQUEsa0RBQWtELEdBQTZILElBQVcsQ0FBQztBQUN4TSxTQUFTLENBQUMsUUFBUSxDQUFDLE9BQU8sRUFBRSxDQUFDLG9EQUFvRCxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsT0FBTyxDQUFDLHNEQUFzRCxDQUFDLENBQUMsQ0FBQztBQUk5SSxRQUFBLGdDQUFnQyxHQUF5RixJQUFXLENBQUM7QUFDbEosU0FBUyxDQUFDLFFBQVEsQ0FBQyxPQUFPLEVBQUUsQ0FBQyxrQ0FBa0MsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLE9BQU8sQ0FBQyxvQ0FBb0MsQ0FBQyxDQUFDLENBQUM7QUFHdkgsZ0JBQWdCO0FBQ2hCLG9FQUFrRDtBQUVsRCxzQkFBc0I7QUFDdEIseUNBQXlDO0FBSXJDLDhCQUFTO0FBSGIseUNBQXlDO0FBSXJDLDhCQUFTO0FBR2IsTUFBTSxPQUFPLEdBQUc7SUFDWixPQUFPLEVBQUUsU0FBUyxDQUFDLFVBQVUsRUFBRTtJQUMvQixTQUFTLEVBQUUsQ0FBQyxJQUFZLEVBQUUsSUFBWSxFQUFFLEdBQVcsRUFBbUIsRUFBRTtRQUNwRSxRQUFRLElBQUksRUFBRTtZQUNWLEtBQUssOERBQThEO2dCQUMvRCxPQUFPLElBQUksb0NBQTRCLENBQUMsSUFBSSxFQUFPLFNBQVMsRUFBRSxFQUFFLEdBQUcsRUFBRSxDQUFDLENBQUE7WUFDMUUsS0FBSyxtRUFBbUU7Z0JBQ3BFLE9BQU8sSUFBSSx5Q0FBaUMsQ0FBQyxJQUFJLEVBQU8sU0FBUyxFQUFFLEVBQUUsR0FBRyxFQUFFLENBQUMsQ0FBQTtZQUMvRSxLQUFLLG9GQUFvRjtnQkFDckYsT0FBTyxJQUFJLDBEQUFrRCxDQUFDLElBQUksRUFBTyxTQUFTLEVBQUUsRUFBRSxHQUFHLEVBQUUsQ0FBQyxDQUFBO1lBQ2hHLEtBQUssa0VBQWtFO2dCQUNuRSxPQUFPLElBQUksd0NBQWdDLENBQUMsSUFBSSxFQUFPLFNBQVMsRUFBRSxFQUFFLEdBQUcsRUFBRSxDQUFDLENBQUE7WUFDOUU7Z0JBQ0ksTUFBTSxJQUFJLEtBQUssQ0FBQyx5QkFBeUIsSUFBSSxFQUFFLENBQUMsQ0FBQztTQUN4RDtJQUNMLENBQUM7Q0FDSixDQUFDO0FBQ0YsTUFBTSxDQUFDLE9BQU8sQ0FBQyxzQkFBc0IsQ0FBQyxjQUFjLEVBQUUsb0JBQW9CLEVBQUUsT0FBTyxDQUFDLENBQUEifQ==