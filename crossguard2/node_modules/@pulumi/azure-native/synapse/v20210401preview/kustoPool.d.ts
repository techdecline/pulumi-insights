import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../../types/input";
import * as outputs from "../../types/output";
import * as enums from "../../types/enums";
/**
 * Class representing a Kusto kusto pool.
 */
export declare class KustoPool extends pulumi.CustomResource {
    /**
     * Get an existing KustoPool resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    static get(name: string, id: pulumi.Input<pulumi.ID>, opts?: pulumi.CustomResourceOptions): KustoPool;
    /**
     * Returns true if the given object is an instance of KustoPool.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    static isInstance(obj: any): obj is KustoPool;
    /**
     * The Kusto Pool data ingestion URI.
     */
    readonly dataIngestionUri: pulumi.Output<string>;
    /**
     * The engine type
     */
    readonly engineType: pulumi.Output<string | undefined>;
    /**
     * A unique read-only string that changes whenever the resource is updated.
     */
    readonly etag: pulumi.Output<string>;
    /**
     * The geo-location where the resource lives
     */
    readonly location: pulumi.Output<string>;
    /**
     * The name of the resource
     */
    readonly name: pulumi.Output<string>;
    /**
     * The provisioned state of the resource.
     */
    readonly provisioningState: pulumi.Output<string>;
    /**
     * The SKU of the kusto pool.
     */
    readonly sku: pulumi.Output<outputs.synapse.v20210401preview.AzureSkuResponse>;
    /**
     * The state of the resource.
     */
    readonly state: pulumi.Output<string>;
    /**
     * The reason for the Kusto Pool's current state.
     */
    readonly stateReason: pulumi.Output<string>;
    /**
     * Azure Resource Manager metadata containing createdBy and modifiedBy information.
     */
    readonly systemData: pulumi.Output<outputs.synapse.v20210401preview.SystemDataResponse>;
    /**
     * Resource tags.
     */
    readonly tags: pulumi.Output<{
        [key: string]: string;
    } | undefined>;
    /**
     * The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
     */
    readonly type: pulumi.Output<string>;
    /**
     * The Kusto Pool URI.
     */
    readonly uri: pulumi.Output<string>;
    /**
     * The workspace unique identifier.
     */
    readonly workspaceUid: pulumi.Output<string | undefined>;
    /**
     * Create a KustoPool resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: KustoPoolArgs, opts?: pulumi.CustomResourceOptions);
}
/**
 * The set of arguments for constructing a KustoPool resource.
 */
export interface KustoPoolArgs {
    /**
     * The engine type
     */
    engineType?: pulumi.Input<string | enums.synapse.v20210401preview.EngineType>;
    /**
     * The name of the Kusto pool.
     */
    kustoPoolName?: pulumi.Input<string>;
    /**
     * The geo-location where the resource lives
     */
    location?: pulumi.Input<string>;
    /**
     * The name of the resource group. The name is case insensitive.
     */
    resourceGroupName: pulumi.Input<string>;
    /**
     * The SKU of the kusto pool.
     */
    sku: pulumi.Input<inputs.synapse.v20210401preview.AzureSkuArgs>;
    /**
     * Resource tags.
     */
    tags?: pulumi.Input<{
        [key: string]: pulumi.Input<string>;
    }>;
    /**
     * The name of the workspace
     */
    workspaceName: pulumi.Input<string>;
    /**
     * The workspace unique identifier.
     */
    workspaceUid?: pulumi.Input<string>;
}
