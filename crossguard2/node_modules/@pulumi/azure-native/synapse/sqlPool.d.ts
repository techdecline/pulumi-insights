import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as enums from "../types/enums";
/**
 * A SQL Analytics pool
 * Azure REST API version: 2021-06-01. Prior API version in Azure Native 1.x: 2021-03-01.
 *
 * Other available API versions: 2021-05-01, 2021-06-01-preview.
 */
export declare class SqlPool extends pulumi.CustomResource {
    /**
     * Get an existing SqlPool resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    static get(name: string, id: pulumi.Input<pulumi.ID>, opts?: pulumi.CustomResourceOptions): SqlPool;
    /**
     * Returns true if the given object is an instance of SqlPool.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    static isInstance(obj: any): obj is SqlPool;
    /**
     * Collation mode
     */
    readonly collation: pulumi.Output<string | undefined>;
    /**
     * Date the SQL pool was created
     */
    readonly creationDate: pulumi.Output<string>;
    /**
     * The geo-location where the resource lives
     */
    readonly location: pulumi.Output<string>;
    /**
     * Maximum size in bytes
     */
    readonly maxSizeBytes: pulumi.Output<number | undefined>;
    /**
     * The name of the resource
     */
    readonly name: pulumi.Output<string>;
    /**
     * Resource state
     */
    readonly provisioningState: pulumi.Output<string | undefined>;
    /**
     * Backup database to restore from
     */
    readonly recoverableDatabaseId: pulumi.Output<string | undefined>;
    /**
     * Snapshot time to restore
     */
    readonly restorePointInTime: pulumi.Output<string | undefined>;
    /**
     * SQL pool SKU
     */
    readonly sku: pulumi.Output<outputs.synapse.SkuResponse | undefined>;
    /**
     * Specifies the time that the sql pool was deleted
     */
    readonly sourceDatabaseDeletionDate: pulumi.Output<string | undefined>;
    /**
     * Resource status
     */
    readonly status: pulumi.Output<string>;
    /**
     * The storage account type used to store backups for this sql pool.
     */
    readonly storageAccountType: pulumi.Output<string | undefined>;
    /**
     * Resource tags.
     */
    readonly tags: pulumi.Output<{
        [key: string]: string;
    } | undefined>;
    /**
     * The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
     */
    readonly type: pulumi.Output<string>;
    /**
     * Create a SqlPool resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: SqlPoolArgs, opts?: pulumi.CustomResourceOptions);
}
/**
 * The set of arguments for constructing a SqlPool resource.
 */
export interface SqlPoolArgs {
    /**
     * Collation mode
     */
    collation?: pulumi.Input<string>;
    /**
     * Specifies the mode of sql pool creation.
     *
     * Default: regular sql pool creation.
     *
     * PointInTimeRestore: Creates a sql pool by restoring a point in time backup of an existing sql pool. sourceDatabaseId must be specified as the resource ID of the existing sql pool, and restorePointInTime must be specified.
     *
     * Recovery: Creates a sql pool by a geo-replicated backup. sourceDatabaseId  must be specified as the recoverableDatabaseId to restore.
     *
     * Restore: Creates a sql pool by restoring a backup of a deleted sql  pool. SourceDatabaseId should be the sql pool's original resource ID. SourceDatabaseId and sourceDatabaseDeletionDate must be specified.
     */
    createMode?: pulumi.Input<string | enums.synapse.CreateMode>;
    /**
     * The geo-location where the resource lives
     */
    location?: pulumi.Input<string>;
    /**
     * Maximum size in bytes
     */
    maxSizeBytes?: pulumi.Input<number>;
    /**
     * Resource state
     */
    provisioningState?: pulumi.Input<string>;
    /**
     * Backup database to restore from
     */
    recoverableDatabaseId?: pulumi.Input<string>;
    /**
     * The name of the resource group. The name is case insensitive.
     */
    resourceGroupName: pulumi.Input<string>;
    /**
     * Snapshot time to restore
     */
    restorePointInTime?: pulumi.Input<string>;
    /**
     * SQL pool SKU
     */
    sku?: pulumi.Input<inputs.synapse.SkuArgs>;
    /**
     * Specifies the time that the sql pool was deleted
     */
    sourceDatabaseDeletionDate?: pulumi.Input<string>;
    /**
     * Source database to create from
     */
    sourceDatabaseId?: pulumi.Input<string>;
    /**
     * SQL pool name
     */
    sqlPoolName?: pulumi.Input<string>;
    /**
     * The storage account type used to store backups for this sql pool.
     */
    storageAccountType?: pulumi.Input<string | enums.synapse.StorageAccountType>;
    /**
     * Resource tags.
     */
    tags?: pulumi.Input<{
        [key: string]: pulumi.Input<string>;
    }>;
    /**
     * The name of the workspace.
     */
    workspaceName: pulumi.Input<string>;
}
