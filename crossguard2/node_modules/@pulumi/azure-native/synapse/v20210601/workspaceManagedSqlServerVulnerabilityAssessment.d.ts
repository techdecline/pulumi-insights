import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../../types/input";
import * as outputs from "../../types/output";
/**
 * A server vulnerability assessment.
 */
export declare class WorkspaceManagedSqlServerVulnerabilityAssessment extends pulumi.CustomResource {
    /**
     * Get an existing WorkspaceManagedSqlServerVulnerabilityAssessment resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    static get(name: string, id: pulumi.Input<pulumi.ID>, opts?: pulumi.CustomResourceOptions): WorkspaceManagedSqlServerVulnerabilityAssessment;
    /**
     * Returns true if the given object is an instance of WorkspaceManagedSqlServerVulnerabilityAssessment.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    static isInstance(obj: any): obj is WorkspaceManagedSqlServerVulnerabilityAssessment;
    /**
     * The name of the resource
     */
    readonly name: pulumi.Output<string>;
    /**
     * The recurring scans settings
     */
    readonly recurringScans: pulumi.Output<outputs.synapse.v20210601.VulnerabilityAssessmentRecurringScansPropertiesResponse | undefined>;
    /**
     * A blob storage container path to hold the scan results (e.g. https://myStorage.blob.core.windows.net/VaScans/).
     */
    readonly storageContainerPath: pulumi.Output<string>;
    /**
     * The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
     */
    readonly type: pulumi.Output<string>;
    /**
     * Create a WorkspaceManagedSqlServerVulnerabilityAssessment resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: WorkspaceManagedSqlServerVulnerabilityAssessmentArgs, opts?: pulumi.CustomResourceOptions);
}
/**
 * The set of arguments for constructing a WorkspaceManagedSqlServerVulnerabilityAssessment resource.
 */
export interface WorkspaceManagedSqlServerVulnerabilityAssessmentArgs {
    /**
     * The recurring scans settings
     */
    recurringScans?: pulumi.Input<inputs.synapse.v20210601.VulnerabilityAssessmentRecurringScansPropertiesArgs>;
    /**
     * The name of the resource group. The name is case insensitive.
     */
    resourceGroupName: pulumi.Input<string>;
    /**
     * Specifies the identifier key of the storage account for vulnerability assessment scan results. If 'StorageContainerSasKey' isn't specified, storageAccountAccessKey is required.
     */
    storageAccountAccessKey?: pulumi.Input<string>;
    /**
     * A blob storage container path to hold the scan results (e.g. https://myStorage.blob.core.windows.net/VaScans/).
     */
    storageContainerPath: pulumi.Input<string>;
    /**
     * A shared access signature (SAS Key) that has read and write access to the blob container specified in 'storageContainerPath' parameter. If 'storageAccountAccessKey' isn't specified, StorageContainerSasKey is required.
     */
    storageContainerSasKey?: pulumi.Input<string>;
    /**
     * The name of the vulnerability assessment.
     */
    vulnerabilityAssessmentName?: pulumi.Input<string>;
    /**
     * The name of the workspace.
     */
    workspaceName: pulumi.Input<string>;
}
