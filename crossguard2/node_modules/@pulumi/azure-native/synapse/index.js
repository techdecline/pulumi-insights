"use strict";
// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __exportStar = (this && this.__exportStar) || function(m, exports) {
    for (var p in m) if (p !== "default" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.getSqlPoolVulnerabilityAssessmentOutput = exports.getSqlPoolVulnerabilityAssessment = exports.getSqlPoolTransparentDataEncryptionOutput = exports.getSqlPoolTransparentDataEncryption = exports.getSqlPoolSensitivityLabelOutput = exports.getSqlPoolSensitivityLabel = exports.getSqlPoolOutput = exports.getSqlPool = exports.getReadWriteDatabaseOutput = exports.getReadWriteDatabase = exports.getReadOnlyFollowingDatabaseOutput = exports.getReadOnlyFollowingDatabase = exports.getPrivateLinkHubOutput = exports.getPrivateLinkHub = exports.getPrivateEndpointConnectionOutput = exports.getPrivateEndpointConnection = exports.getKustoPoolPrincipalAssignmentOutput = exports.getKustoPoolPrincipalAssignment = exports.getKustoPoolDatabasePrincipalAssignmentOutput = exports.getKustoPoolDatabasePrincipalAssignment = exports.getKustoPoolAttachedDatabaseConfigurationOutput = exports.getKustoPoolAttachedDatabaseConfiguration = exports.getKustoPoolOutput = exports.getKustoPool = exports.getKeyOutput = exports.getKey = exports.getIpFirewallRuleOutput = exports.getIpFirewallRule = exports.getIotHubDataConnectionOutput = exports.getIotHubDataConnection = exports.getIntegrationRuntimeStatusOutput = exports.getIntegrationRuntimeStatus = exports.getIntegrationRuntimeObjectMetadatumOutput = exports.getIntegrationRuntimeObjectMetadatum = exports.getIntegrationRuntimeConnectionInfoOutput = exports.getIntegrationRuntimeConnectionInfo = exports.getIntegrationRuntimeOutput = exports.getIntegrationRuntime = exports.getEventHubDataConnectionOutput = exports.getEventHubDataConnection = exports.getEventGridDataConnectionOutput = exports.getEventGridDataConnection = exports.getDatabasePrincipalAssignmentOutput = exports.getDatabasePrincipalAssignment = exports.getBigDataPoolOutput = exports.getBigDataPool = exports.EventHubDataConnection = exports.EventGridDataConnection = exports.DatabasePrincipalAssignment = exports.BigDataPool = void 0;
exports.v20210601preview = exports.v20210601 = exports.v20210501 = exports.v20210401preview = exports.WorkspaceSqlAadAdmin = exports.WorkspaceManagedSqlServerVulnerabilityAssessment = exports.WorkspaceAadAdmin = exports.Workspace = exports.SqlPoolWorkloadGroup = exports.SqlPoolWorkloadClassifier = exports.SqlPoolVulnerabilityAssessmentRuleBaseline = exports.SqlPoolVulnerabilityAssessment = exports.SqlPoolTransparentDataEncryption = exports.SqlPoolSensitivityLabel = exports.SqlPool = exports.ReadWriteDatabase = exports.ReadOnlyFollowingDatabase = exports.PrivateLinkHub = exports.PrivateEndpointConnection = exports.listKustoPoolLanguageExtensionsOutput = exports.listKustoPoolLanguageExtensions = exports.listKustoPoolFollowerDatabasesOutput = exports.listKustoPoolFollowerDatabases = exports.listIntegrationRuntimeAuthKeyOutput = exports.listIntegrationRuntimeAuthKey = exports.KustoPoolPrincipalAssignment = exports.KustoPoolDatabasePrincipalAssignment = exports.KustoPoolAttachedDatabaseConfiguration = exports.KustoPool = exports.Key = exports.IpFirewallRule = exports.IotHubDataConnection = exports.IntegrationRuntime = exports.getWorkspaceSqlAadAdminOutput = exports.getWorkspaceSqlAadAdmin = exports.getWorkspaceManagedSqlServerVulnerabilityAssessmentOutput = exports.getWorkspaceManagedSqlServerVulnerabilityAssessment = exports.getWorkspaceAadAdminOutput = exports.getWorkspaceAadAdmin = exports.getWorkspaceOutput = exports.getWorkspace = exports.getSqlPoolWorkloadGroupOutput = exports.getSqlPoolWorkloadGroup = exports.getSqlPoolWorkloadClassifierOutput = exports.getSqlPoolWorkloadClassifier = exports.getSqlPoolVulnerabilityAssessmentRuleBaselineOutput = exports.getSqlPoolVulnerabilityAssessmentRuleBaseline = void 0;
const pulumi = require("@pulumi/pulumi");
const utilities = require("../utilities");
exports.BigDataPool = null;
utilities.lazyLoad(exports, ["BigDataPool"], () => require("./bigDataPool"));
exports.DatabasePrincipalAssignment = null;
utilities.lazyLoad(exports, ["DatabasePrincipalAssignment"], () => require("./databasePrincipalAssignment"));
exports.EventGridDataConnection = null;
utilities.lazyLoad(exports, ["EventGridDataConnection"], () => require("./eventGridDataConnection"));
exports.EventHubDataConnection = null;
utilities.lazyLoad(exports, ["EventHubDataConnection"], () => require("./eventHubDataConnection"));
exports.getBigDataPool = null;
exports.getBigDataPoolOutput = null;
utilities.lazyLoad(exports, ["getBigDataPool", "getBigDataPoolOutput"], () => require("./getBigDataPool"));
exports.getDatabasePrincipalAssignment = null;
exports.getDatabasePrincipalAssignmentOutput = null;
utilities.lazyLoad(exports, ["getDatabasePrincipalAssignment", "getDatabasePrincipalAssignmentOutput"], () => require("./getDatabasePrincipalAssignment"));
exports.getEventGridDataConnection = null;
exports.getEventGridDataConnectionOutput = null;
utilities.lazyLoad(exports, ["getEventGridDataConnection", "getEventGridDataConnectionOutput"], () => require("./getEventGridDataConnection"));
exports.getEventHubDataConnection = null;
exports.getEventHubDataConnectionOutput = null;
utilities.lazyLoad(exports, ["getEventHubDataConnection", "getEventHubDataConnectionOutput"], () => require("./getEventHubDataConnection"));
exports.getIntegrationRuntime = null;
exports.getIntegrationRuntimeOutput = null;
utilities.lazyLoad(exports, ["getIntegrationRuntime", "getIntegrationRuntimeOutput"], () => require("./getIntegrationRuntime"));
exports.getIntegrationRuntimeConnectionInfo = null;
exports.getIntegrationRuntimeConnectionInfoOutput = null;
utilities.lazyLoad(exports, ["getIntegrationRuntimeConnectionInfo", "getIntegrationRuntimeConnectionInfoOutput"], () => require("./getIntegrationRuntimeConnectionInfo"));
exports.getIntegrationRuntimeObjectMetadatum = null;
exports.getIntegrationRuntimeObjectMetadatumOutput = null;
utilities.lazyLoad(exports, ["getIntegrationRuntimeObjectMetadatum", "getIntegrationRuntimeObjectMetadatumOutput"], () => require("./getIntegrationRuntimeObjectMetadatum"));
exports.getIntegrationRuntimeStatus = null;
exports.getIntegrationRuntimeStatusOutput = null;
utilities.lazyLoad(exports, ["getIntegrationRuntimeStatus", "getIntegrationRuntimeStatusOutput"], () => require("./getIntegrationRuntimeStatus"));
exports.getIotHubDataConnection = null;
exports.getIotHubDataConnectionOutput = null;
utilities.lazyLoad(exports, ["getIotHubDataConnection", "getIotHubDataConnectionOutput"], () => require("./getIotHubDataConnection"));
exports.getIpFirewallRule = null;
exports.getIpFirewallRuleOutput = null;
utilities.lazyLoad(exports, ["getIpFirewallRule", "getIpFirewallRuleOutput"], () => require("./getIpFirewallRule"));
exports.getKey = null;
exports.getKeyOutput = null;
utilities.lazyLoad(exports, ["getKey", "getKeyOutput"], () => require("./getKey"));
exports.getKustoPool = null;
exports.getKustoPoolOutput = null;
utilities.lazyLoad(exports, ["getKustoPool", "getKustoPoolOutput"], () => require("./getKustoPool"));
exports.getKustoPoolAttachedDatabaseConfiguration = null;
exports.getKustoPoolAttachedDatabaseConfigurationOutput = null;
utilities.lazyLoad(exports, ["getKustoPoolAttachedDatabaseConfiguration", "getKustoPoolAttachedDatabaseConfigurationOutput"], () => require("./getKustoPoolAttachedDatabaseConfiguration"));
exports.getKustoPoolDatabasePrincipalAssignment = null;
exports.getKustoPoolDatabasePrincipalAssignmentOutput = null;
utilities.lazyLoad(exports, ["getKustoPoolDatabasePrincipalAssignment", "getKustoPoolDatabasePrincipalAssignmentOutput"], () => require("./getKustoPoolDatabasePrincipalAssignment"));
exports.getKustoPoolPrincipalAssignment = null;
exports.getKustoPoolPrincipalAssignmentOutput = null;
utilities.lazyLoad(exports, ["getKustoPoolPrincipalAssignment", "getKustoPoolPrincipalAssignmentOutput"], () => require("./getKustoPoolPrincipalAssignment"));
exports.getPrivateEndpointConnection = null;
exports.getPrivateEndpointConnectionOutput = null;
utilities.lazyLoad(exports, ["getPrivateEndpointConnection", "getPrivateEndpointConnectionOutput"], () => require("./getPrivateEndpointConnection"));
exports.getPrivateLinkHub = null;
exports.getPrivateLinkHubOutput = null;
utilities.lazyLoad(exports, ["getPrivateLinkHub", "getPrivateLinkHubOutput"], () => require("./getPrivateLinkHub"));
exports.getReadOnlyFollowingDatabase = null;
exports.getReadOnlyFollowingDatabaseOutput = null;
utilities.lazyLoad(exports, ["getReadOnlyFollowingDatabase", "getReadOnlyFollowingDatabaseOutput"], () => require("./getReadOnlyFollowingDatabase"));
exports.getReadWriteDatabase = null;
exports.getReadWriteDatabaseOutput = null;
utilities.lazyLoad(exports, ["getReadWriteDatabase", "getReadWriteDatabaseOutput"], () => require("./getReadWriteDatabase"));
exports.getSqlPool = null;
exports.getSqlPoolOutput = null;
utilities.lazyLoad(exports, ["getSqlPool", "getSqlPoolOutput"], () => require("./getSqlPool"));
exports.getSqlPoolSensitivityLabel = null;
exports.getSqlPoolSensitivityLabelOutput = null;
utilities.lazyLoad(exports, ["getSqlPoolSensitivityLabel", "getSqlPoolSensitivityLabelOutput"], () => require("./getSqlPoolSensitivityLabel"));
exports.getSqlPoolTransparentDataEncryption = null;
exports.getSqlPoolTransparentDataEncryptionOutput = null;
utilities.lazyLoad(exports, ["getSqlPoolTransparentDataEncryption", "getSqlPoolTransparentDataEncryptionOutput"], () => require("./getSqlPoolTransparentDataEncryption"));
exports.getSqlPoolVulnerabilityAssessment = null;
exports.getSqlPoolVulnerabilityAssessmentOutput = null;
utilities.lazyLoad(exports, ["getSqlPoolVulnerabilityAssessment", "getSqlPoolVulnerabilityAssessmentOutput"], () => require("./getSqlPoolVulnerabilityAssessment"));
exports.getSqlPoolVulnerabilityAssessmentRuleBaseline = null;
exports.getSqlPoolVulnerabilityAssessmentRuleBaselineOutput = null;
utilities.lazyLoad(exports, ["getSqlPoolVulnerabilityAssessmentRuleBaseline", "getSqlPoolVulnerabilityAssessmentRuleBaselineOutput"], () => require("./getSqlPoolVulnerabilityAssessmentRuleBaseline"));
exports.getSqlPoolWorkloadClassifier = null;
exports.getSqlPoolWorkloadClassifierOutput = null;
utilities.lazyLoad(exports, ["getSqlPoolWorkloadClassifier", "getSqlPoolWorkloadClassifierOutput"], () => require("./getSqlPoolWorkloadClassifier"));
exports.getSqlPoolWorkloadGroup = null;
exports.getSqlPoolWorkloadGroupOutput = null;
utilities.lazyLoad(exports, ["getSqlPoolWorkloadGroup", "getSqlPoolWorkloadGroupOutput"], () => require("./getSqlPoolWorkloadGroup"));
exports.getWorkspace = null;
exports.getWorkspaceOutput = null;
utilities.lazyLoad(exports, ["getWorkspace", "getWorkspaceOutput"], () => require("./getWorkspace"));
exports.getWorkspaceAadAdmin = null;
exports.getWorkspaceAadAdminOutput = null;
utilities.lazyLoad(exports, ["getWorkspaceAadAdmin", "getWorkspaceAadAdminOutput"], () => require("./getWorkspaceAadAdmin"));
exports.getWorkspaceManagedSqlServerVulnerabilityAssessment = null;
exports.getWorkspaceManagedSqlServerVulnerabilityAssessmentOutput = null;
utilities.lazyLoad(exports, ["getWorkspaceManagedSqlServerVulnerabilityAssessment", "getWorkspaceManagedSqlServerVulnerabilityAssessmentOutput"], () => require("./getWorkspaceManagedSqlServerVulnerabilityAssessment"));
exports.getWorkspaceSqlAadAdmin = null;
exports.getWorkspaceSqlAadAdminOutput = null;
utilities.lazyLoad(exports, ["getWorkspaceSqlAadAdmin", "getWorkspaceSqlAadAdminOutput"], () => require("./getWorkspaceSqlAadAdmin"));
exports.IntegrationRuntime = null;
utilities.lazyLoad(exports, ["IntegrationRuntime"], () => require("./integrationRuntime"));
exports.IotHubDataConnection = null;
utilities.lazyLoad(exports, ["IotHubDataConnection"], () => require("./iotHubDataConnection"));
exports.IpFirewallRule = null;
utilities.lazyLoad(exports, ["IpFirewallRule"], () => require("./ipFirewallRule"));
exports.Key = null;
utilities.lazyLoad(exports, ["Key"], () => require("./key"));
exports.KustoPool = null;
utilities.lazyLoad(exports, ["KustoPool"], () => require("./kustoPool"));
exports.KustoPoolAttachedDatabaseConfiguration = null;
utilities.lazyLoad(exports, ["KustoPoolAttachedDatabaseConfiguration"], () => require("./kustoPoolAttachedDatabaseConfiguration"));
exports.KustoPoolDatabasePrincipalAssignment = null;
utilities.lazyLoad(exports, ["KustoPoolDatabasePrincipalAssignment"], () => require("./kustoPoolDatabasePrincipalAssignment"));
exports.KustoPoolPrincipalAssignment = null;
utilities.lazyLoad(exports, ["KustoPoolPrincipalAssignment"], () => require("./kustoPoolPrincipalAssignment"));
exports.listIntegrationRuntimeAuthKey = null;
exports.listIntegrationRuntimeAuthKeyOutput = null;
utilities.lazyLoad(exports, ["listIntegrationRuntimeAuthKey", "listIntegrationRuntimeAuthKeyOutput"], () => require("./listIntegrationRuntimeAuthKey"));
exports.listKustoPoolFollowerDatabases = null;
exports.listKustoPoolFollowerDatabasesOutput = null;
utilities.lazyLoad(exports, ["listKustoPoolFollowerDatabases", "listKustoPoolFollowerDatabasesOutput"], () => require("./listKustoPoolFollowerDatabases"));
exports.listKustoPoolLanguageExtensions = null;
exports.listKustoPoolLanguageExtensionsOutput = null;
utilities.lazyLoad(exports, ["listKustoPoolLanguageExtensions", "listKustoPoolLanguageExtensionsOutput"], () => require("./listKustoPoolLanguageExtensions"));
exports.PrivateEndpointConnection = null;
utilities.lazyLoad(exports, ["PrivateEndpointConnection"], () => require("./privateEndpointConnection"));
exports.PrivateLinkHub = null;
utilities.lazyLoad(exports, ["PrivateLinkHub"], () => require("./privateLinkHub"));
exports.ReadOnlyFollowingDatabase = null;
utilities.lazyLoad(exports, ["ReadOnlyFollowingDatabase"], () => require("./readOnlyFollowingDatabase"));
exports.ReadWriteDatabase = null;
utilities.lazyLoad(exports, ["ReadWriteDatabase"], () => require("./readWriteDatabase"));
exports.SqlPool = null;
utilities.lazyLoad(exports, ["SqlPool"], () => require("./sqlPool"));
exports.SqlPoolSensitivityLabel = null;
utilities.lazyLoad(exports, ["SqlPoolSensitivityLabel"], () => require("./sqlPoolSensitivityLabel"));
exports.SqlPoolTransparentDataEncryption = null;
utilities.lazyLoad(exports, ["SqlPoolTransparentDataEncryption"], () => require("./sqlPoolTransparentDataEncryption"));
exports.SqlPoolVulnerabilityAssessment = null;
utilities.lazyLoad(exports, ["SqlPoolVulnerabilityAssessment"], () => require("./sqlPoolVulnerabilityAssessment"));
exports.SqlPoolVulnerabilityAssessmentRuleBaseline = null;
utilities.lazyLoad(exports, ["SqlPoolVulnerabilityAssessmentRuleBaseline"], () => require("./sqlPoolVulnerabilityAssessmentRuleBaseline"));
exports.SqlPoolWorkloadClassifier = null;
utilities.lazyLoad(exports, ["SqlPoolWorkloadClassifier"], () => require("./sqlPoolWorkloadClassifier"));
exports.SqlPoolWorkloadGroup = null;
utilities.lazyLoad(exports, ["SqlPoolWorkloadGroup"], () => require("./sqlPoolWorkloadGroup"));
exports.Workspace = null;
utilities.lazyLoad(exports, ["Workspace"], () => require("./workspace"));
exports.WorkspaceAadAdmin = null;
utilities.lazyLoad(exports, ["WorkspaceAadAdmin"], () => require("./workspaceAadAdmin"));
exports.WorkspaceManagedSqlServerVulnerabilityAssessment = null;
utilities.lazyLoad(exports, ["WorkspaceManagedSqlServerVulnerabilityAssessment"], () => require("./workspaceManagedSqlServerVulnerabilityAssessment"));
exports.WorkspaceSqlAadAdmin = null;
utilities.lazyLoad(exports, ["WorkspaceSqlAadAdmin"], () => require("./workspaceSqlAadAdmin"));
// Export enums:
__exportStar(require("../types/enums/synapse"), exports);
// Export sub-modules:
const v20210401preview = require("./v20210401preview");
exports.v20210401preview = v20210401preview;
const v20210501 = require("./v20210501");
exports.v20210501 = v20210501;
const v20210601 = require("./v20210601");
exports.v20210601 = v20210601;
const v20210601preview = require("./v20210601preview");
exports.v20210601preview = v20210601preview;
const _module = {
    version: utilities.getVersion(),
    construct: (name, type, urn) => {
        switch (type) {
            case "azure-native:synapse:BigDataPool":
                return new exports.BigDataPool(name, undefined, { urn });
            case "azure-native:synapse:DatabasePrincipalAssignment":
                return new exports.DatabasePrincipalAssignment(name, undefined, { urn });
            case "azure-native:synapse:EventGridDataConnection":
                return new exports.EventGridDataConnection(name, undefined, { urn });
            case "azure-native:synapse:EventHubDataConnection":
                return new exports.EventHubDataConnection(name, undefined, { urn });
            case "azure-native:synapse:IntegrationRuntime":
                return new exports.IntegrationRuntime(name, undefined, { urn });
            case "azure-native:synapse:IotHubDataConnection":
                return new exports.IotHubDataConnection(name, undefined, { urn });
            case "azure-native:synapse:IpFirewallRule":
                return new exports.IpFirewallRule(name, undefined, { urn });
            case "azure-native:synapse:Key":
                return new exports.Key(name, undefined, { urn });
            case "azure-native:synapse:KustoPool":
                return new exports.KustoPool(name, undefined, { urn });
            case "azure-native:synapse:KustoPoolAttachedDatabaseConfiguration":
                return new exports.KustoPoolAttachedDatabaseConfiguration(name, undefined, { urn });
            case "azure-native:synapse:KustoPoolDatabasePrincipalAssignment":
                return new exports.KustoPoolDatabasePrincipalAssignment(name, undefined, { urn });
            case "azure-native:synapse:KustoPoolPrincipalAssignment":
                return new exports.KustoPoolPrincipalAssignment(name, undefined, { urn });
            case "azure-native:synapse:PrivateEndpointConnection":
                return new exports.PrivateEndpointConnection(name, undefined, { urn });
            case "azure-native:synapse:PrivateLinkHub":
                return new exports.PrivateLinkHub(name, undefined, { urn });
            case "azure-native:synapse:ReadOnlyFollowingDatabase":
                return new exports.ReadOnlyFollowingDatabase(name, undefined, { urn });
            case "azure-native:synapse:ReadWriteDatabase":
                return new exports.ReadWriteDatabase(name, undefined, { urn });
            case "azure-native:synapse:SqlPool":
                return new exports.SqlPool(name, undefined, { urn });
            case "azure-native:synapse:SqlPoolSensitivityLabel":
                return new exports.SqlPoolSensitivityLabel(name, undefined, { urn });
            case "azure-native:synapse:SqlPoolTransparentDataEncryption":
                return new exports.SqlPoolTransparentDataEncryption(name, undefined, { urn });
            case "azure-native:synapse:SqlPoolVulnerabilityAssessment":
                return new exports.SqlPoolVulnerabilityAssessment(name, undefined, { urn });
            case "azure-native:synapse:SqlPoolVulnerabilityAssessmentRuleBaseline":
                return new exports.SqlPoolVulnerabilityAssessmentRuleBaseline(name, undefined, { urn });
            case "azure-native:synapse:SqlPoolWorkloadClassifier":
                return new exports.SqlPoolWorkloadClassifier(name, undefined, { urn });
            case "azure-native:synapse:SqlPoolWorkloadGroup":
                return new exports.SqlPoolWorkloadGroup(name, undefined, { urn });
            case "azure-native:synapse:Workspace":
                return new exports.Workspace(name, undefined, { urn });
            case "azure-native:synapse:WorkspaceAadAdmin":
                return new exports.WorkspaceAadAdmin(name, undefined, { urn });
            case "azure-native:synapse:WorkspaceManagedSqlServerVulnerabilityAssessment":
                return new exports.WorkspaceManagedSqlServerVulnerabilityAssessment(name, undefined, { urn });
            case "azure-native:synapse:WorkspaceSqlAadAdmin":
                return new exports.WorkspaceSqlAadAdmin(name, undefined, { urn });
            default:
                throw new Error(`unknown resource type ${type}`);
        }
    },
};
pulumi.runtime.registerResourceModule("azure-native", "synapse", _module);
//# sourceMappingURL=data:application/json;base64,