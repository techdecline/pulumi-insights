import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../../types/input";
import * as outputs from "../../types/output";
import * as enums from "../../types/enums";
/**
 * The description of the DigitalTwins service.
 */
export declare class DigitalTwin extends pulumi.CustomResource {
    /**
     * Get an existing DigitalTwin resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    static get(name: string, id: pulumi.Input<pulumi.ID>, opts?: pulumi.CustomResourceOptions): DigitalTwin;
    /**
     * Returns true if the given object is an instance of DigitalTwin.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    static isInstance(obj: any): obj is DigitalTwin;
    /**
     * Time when DigitalTwinsInstance was created.
     */
    readonly createdTime: pulumi.Output<string>;
    /**
     * Api endpoint to work with DigitalTwinsInstance.
     */
    readonly hostName: pulumi.Output<string>;
    /**
     * The managed identity for the DigitalTwinsInstance.
     */
    readonly identity: pulumi.Output<outputs.digitaltwins.v20230131.DigitalTwinsIdentityResponse | undefined>;
    /**
     * Time when DigitalTwinsInstance was updated.
     */
    readonly lastUpdatedTime: pulumi.Output<string>;
    /**
     * The resource location.
     */
    readonly location: pulumi.Output<string>;
    /**
     * The resource name.
     */
    readonly name: pulumi.Output<string>;
    /**
     * The private endpoint connections.
     */
    readonly privateEndpointConnections: pulumi.Output<outputs.digitaltwins.v20230131.PrivateEndpointConnectionResponse[] | undefined>;
    /**
     * The provisioning state.
     */
    readonly provisioningState: pulumi.Output<string>;
    /**
     * Public network access for the DigitalTwinsInstance.
     */
    readonly publicNetworkAccess: pulumi.Output<string | undefined>;
    /**
     * Metadata pertaining to creation and last modification of the DigitalTwinsInstance.
     */
    readonly systemData: pulumi.Output<outputs.digitaltwins.v20230131.SystemDataResponse>;
    /**
     * The resource tags.
     */
    readonly tags: pulumi.Output<{
        [key: string]: string;
    } | undefined>;
    /**
     * The resource type.
     */
    readonly type: pulumi.Output<string>;
    /**
     * Create a DigitalTwin resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: DigitalTwinArgs, opts?: pulumi.CustomResourceOptions);
}
/**
 * The set of arguments for constructing a DigitalTwin resource.
 */
export interface DigitalTwinArgs {
    /**
     * The managed identity for the DigitalTwinsInstance.
     */
    identity?: pulumi.Input<inputs.digitaltwins.v20230131.DigitalTwinsIdentityArgs>;
    /**
     * The resource location.
     */
    location?: pulumi.Input<string>;
    /**
     * The private endpoint connections.
     * These are also available as standalone resources. Do not mix inline and standalone resource as they will conflict with each other, leading to resources deletion.
     */
    privateEndpointConnections?: pulumi.Input<pulumi.Input<inputs.digitaltwins.v20230131.PrivateEndpointConnectionArgs>[]>;
    /**
     * Public network access for the DigitalTwinsInstance.
     */
    publicNetworkAccess?: pulumi.Input<string | enums.digitaltwins.v20230131.PublicNetworkAccess>;
    /**
     * The name of the resource group that contains the DigitalTwinsInstance.
     */
    resourceGroupName: pulumi.Input<string>;
    /**
     * The name of the DigitalTwinsInstance.
     */
    resourceName?: pulumi.Input<string>;
    /**
     * The resource tags.
     */
    tags?: pulumi.Input<{
        [key: string]: pulumi.Input<string>;
    }>;
}
