import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../../types/input";
import * as outputs from "../../types/output";
/**
 * A StandbyContainerGroupPoolResource.
 */
export declare class StandbyContainerGroupPool extends pulumi.CustomResource {
    /**
     * Get an existing StandbyContainerGroupPool resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    static get(name: string, id: pulumi.Input<pulumi.ID>, opts?: pulumi.CustomResourceOptions): StandbyContainerGroupPool;
    /**
     * Returns true if the given object is an instance of StandbyContainerGroupPool.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    static isInstance(obj: any): obj is StandbyContainerGroupPool;
    /**
     * Specifies container group properties of standby container group pools.
     */
    readonly containerGroupProperties: pulumi.Output<outputs.standbypool.v20231201preview.ContainerGroupPropertiesResponse>;
    /**
     * Specifies elasticity profile of standby container group pools.
     */
    readonly elasticityProfile: pulumi.Output<outputs.standbypool.v20231201preview.StandbyContainerGroupPoolElasticityProfileResponse>;
    /**
     * The geo-location where the resource lives
     */
    readonly location: pulumi.Output<string>;
    /**
     * The name of the resource
     */
    readonly name: pulumi.Output<string>;
    /**
     * The status of the last operation.
     */
    readonly provisioningState: pulumi.Output<string>;
    /**
     * Azure Resource Manager metadata containing createdBy and modifiedBy information.
     */
    readonly systemData: pulumi.Output<outputs.standbypool.v20231201preview.SystemDataResponse>;
    /**
     * Resource tags.
     */
    readonly tags: pulumi.Output<{
        [key: string]: string;
    } | undefined>;
    /**
     * The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
     */
    readonly type: pulumi.Output<string>;
    /**
     * Create a StandbyContainerGroupPool resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: StandbyContainerGroupPoolArgs, opts?: pulumi.CustomResourceOptions);
}
/**
 * The set of arguments for constructing a StandbyContainerGroupPool resource.
 */
export interface StandbyContainerGroupPoolArgs {
    /**
     * Specifies container group properties of standby container group pools.
     */
    containerGroupProperties: pulumi.Input<inputs.standbypool.v20231201preview.ContainerGroupPropertiesArgs>;
    /**
     * Specifies elasticity profile of standby container group pools.
     */
    elasticityProfile: pulumi.Input<inputs.standbypool.v20231201preview.StandbyContainerGroupPoolElasticityProfileArgs>;
    /**
     * The geo-location where the resource lives
     */
    location?: pulumi.Input<string>;
    /**
     * The name of the resource group. The name is case insensitive.
     */
    resourceGroupName: pulumi.Input<string>;
    /**
     * Name of the standby container group pool
     */
    standbyContainerGroupPoolName?: pulumi.Input<string>;
    /**
     * Resource tags.
     */
    tags?: pulumi.Input<{
        [key: string]: pulumi.Input<string>;
    }>;
}
