import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../../types/input";
import * as outputs from "../../types/output";
import * as enums from "../../types/enums";
export declare class Cluster extends pulumi.CustomResource {
    /**
     * Get an existing Cluster resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    static get(name: string, id: pulumi.Input<pulumi.ID>, opts?: pulumi.CustomResourceOptions): Cluster;
    /**
     * Returns true if the given object is an instance of Cluster.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    static isInstance(obj: any): obj is Cluster;
    /**
     * The rack definition that is intended to reflect only a single rack in a single rack cluster, or an aggregator rack in a multi-rack cluster.
     */
    readonly aggregatorOrSingleRackDefinition: pulumi.Output<outputs.networkcloud.v20231001preview.RackDefinitionResponse>;
    /**
     * The resource ID of the Log Analytics Workspace that will be used for storing relevant logs.
     */
    readonly analyticsWorkspaceId: pulumi.Output<string | undefined>;
    /**
     * The list of cluster runtime version upgrades available for this cluster.
     */
    readonly availableUpgradeVersions: pulumi.Output<outputs.networkcloud.v20231001preview.ClusterAvailableUpgradeVersionResponse[]>;
    /**
     * The capacity supported by this cluster.
     */
    readonly clusterCapacity: pulumi.Output<outputs.networkcloud.v20231001preview.ClusterCapacityResponse>;
    /**
     * The latest heartbeat status between the cluster manager and the cluster.
     */
    readonly clusterConnectionStatus: pulumi.Output<string>;
    /**
     * The extended location (custom location) that represents the cluster's control plane location. This extended location is used to route the requests of child objects of the cluster that are handled by the platform operator.
     */
    readonly clusterExtendedLocation: pulumi.Output<outputs.networkcloud.v20231001preview.ExtendedLocationResponse>;
    /**
     * The customer-provided location information to identify where the cluster resides.
     */
    readonly clusterLocation: pulumi.Output<string | undefined>;
    /**
     * The latest connectivity status between cluster manager and the cluster.
     */
    readonly clusterManagerConnectionStatus: pulumi.Output<string>;
    /**
     * The resource ID of the cluster manager that manages this cluster. This is set by the Cluster Manager when the cluster is created.
     */
    readonly clusterManagerId: pulumi.Output<string>;
    /**
     * The service principal to be used by the cluster during Arc Appliance installation.
     */
    readonly clusterServicePrincipal: pulumi.Output<outputs.networkcloud.v20231001preview.ServicePrincipalInformationResponse | undefined>;
    /**
     * The type of rack configuration for the cluster.
     */
    readonly clusterType: pulumi.Output<string>;
    /**
     * The current runtime version of the cluster.
     */
    readonly clusterVersion: pulumi.Output<string>;
    /**
     * The validation threshold indicating the allowable failures of compute machines during environment validation and deployment.
     */
    readonly computeDeploymentThreshold: pulumi.Output<outputs.networkcloud.v20231001preview.ValidationThresholdResponse | undefined>;
    /**
     * The list of rack definitions for the compute racks in a multi-rack
     * cluster, or an empty list in a single-rack cluster.
     */
    readonly computeRackDefinitions: pulumi.Output<outputs.networkcloud.v20231001preview.RackDefinitionResponse[] | undefined>;
    /**
     * The current detailed status of the cluster.
     */
    readonly detailedStatus: pulumi.Output<string>;
    /**
     * The descriptive message about the detailed status.
     */
    readonly detailedStatusMessage: pulumi.Output<string>;
    /**
     * The extended location of the cluster manager associated with the cluster.
     */
    readonly extendedLocation: pulumi.Output<outputs.networkcloud.v20231001preview.ExtendedLocationResponse>;
    /**
     * Field Deprecated. This field will not be populated in an upcoming version. The extended location (custom location) that represents the Hybrid AKS control plane location. This extended location is used when creating provisioned clusters (Hybrid AKS clusters).
     */
    readonly hybridAksExtendedLocation: pulumi.Output<outputs.networkcloud.v20231001preview.ExtendedLocationResponse>;
    /**
     * The geo-location where the resource lives
     */
    readonly location: pulumi.Output<string>;
    /**
     * The configuration of the managed resource group associated with the resource.
     */
    readonly managedResourceGroupConfiguration: pulumi.Output<outputs.networkcloud.v20231001preview.ManagedResourceGroupConfigurationResponse | undefined>;
    /**
     * The count of Manual Action Taken (MAT) events that have not been validated.
     */
    readonly manualActionCount: pulumi.Output<number>;
    /**
     * The name of the resource
     */
    readonly name: pulumi.Output<string>;
    /**
     * The resource ID of the Network Fabric associated with the cluster.
     */
    readonly networkFabricId: pulumi.Output<string>;
    /**
     * The provisioning state of the cluster.
     */
    readonly provisioningState: pulumi.Output<string>;
    /**
     * The settings for cluster runtime protection.
     */
    readonly runtimeProtectionConfiguration: pulumi.Output<outputs.networkcloud.v20231001preview.RuntimeProtectionConfigurationResponse | undefined>;
    /**
     * The configuration for use of a key vault to store secrets for later retrieval by the operator.
     */
    readonly secretArchive: pulumi.Output<outputs.networkcloud.v20231001preview.ClusterSecretArchiveResponse | undefined>;
    /**
     * The support end date of the runtime version of the cluster.
     */
    readonly supportExpiryDate: pulumi.Output<string>;
    /**
     * Azure Resource Manager metadata containing createdBy and modifiedBy information.
     */
    readonly systemData: pulumi.Output<outputs.networkcloud.v20231001preview.SystemDataResponse>;
    /**
     * Resource tags.
     */
    readonly tags: pulumi.Output<{
        [key: string]: string;
    } | undefined>;
    /**
     * The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
     */
    readonly type: pulumi.Output<string>;
    /**
     * The strategy for updating the cluster.
     */
    readonly updateStrategy: pulumi.Output<outputs.networkcloud.v20231001preview.ClusterUpdateStrategyResponse | undefined>;
    /**
     * The list of workload resource IDs that are hosted within this cluster.
     */
    readonly workloadResourceIds: pulumi.Output<string[]>;
    /**
     * Create a Cluster resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: ClusterArgs, opts?: pulumi.CustomResourceOptions);
}
/**
 * The set of arguments for constructing a Cluster resource.
 */
export interface ClusterArgs {
    /**
     * The rack definition that is intended to reflect only a single rack in a single rack cluster, or an aggregator rack in a multi-rack cluster.
     */
    aggregatorOrSingleRackDefinition: pulumi.Input<inputs.networkcloud.v20231001preview.RackDefinitionArgs>;
    /**
     * The resource ID of the Log Analytics Workspace that will be used for storing relevant logs.
     */
    analyticsWorkspaceId?: pulumi.Input<string>;
    /**
     * The customer-provided location information to identify where the cluster resides.
     */
    clusterLocation?: pulumi.Input<string>;
    /**
     * The name of the cluster.
     */
    clusterName?: pulumi.Input<string>;
    /**
     * The service principal to be used by the cluster during Arc Appliance installation.
     */
    clusterServicePrincipal?: pulumi.Input<inputs.networkcloud.v20231001preview.ServicePrincipalInformationArgs>;
    /**
     * The type of rack configuration for the cluster.
     */
    clusterType: pulumi.Input<string | enums.networkcloud.v20231001preview.ClusterType>;
    /**
     * The current runtime version of the cluster.
     */
    clusterVersion: pulumi.Input<string>;
    /**
     * The validation threshold indicating the allowable failures of compute machines during environment validation and deployment.
     */
    computeDeploymentThreshold?: pulumi.Input<inputs.networkcloud.v20231001preview.ValidationThresholdArgs>;
    /**
     * The list of rack definitions for the compute racks in a multi-rack
     * cluster, or an empty list in a single-rack cluster.
     */
    computeRackDefinitions?: pulumi.Input<pulumi.Input<inputs.networkcloud.v20231001preview.RackDefinitionArgs>[]>;
    /**
     * The extended location of the cluster manager associated with the cluster.
     */
    extendedLocation: pulumi.Input<inputs.networkcloud.v20231001preview.ExtendedLocationArgs>;
    /**
     * The geo-location where the resource lives
     */
    location?: pulumi.Input<string>;
    /**
     * The configuration of the managed resource group associated with the resource.
     */
    managedResourceGroupConfiguration?: pulumi.Input<inputs.networkcloud.v20231001preview.ManagedResourceGroupConfigurationArgs>;
    /**
     * The resource ID of the Network Fabric associated with the cluster.
     */
    networkFabricId: pulumi.Input<string>;
    /**
     * The name of the resource group. The name is case insensitive.
     */
    resourceGroupName: pulumi.Input<string>;
    /**
     * The settings for cluster runtime protection.
     */
    runtimeProtectionConfiguration?: pulumi.Input<inputs.networkcloud.v20231001preview.RuntimeProtectionConfigurationArgs>;
    /**
     * The configuration for use of a key vault to store secrets for later retrieval by the operator.
     */
    secretArchive?: pulumi.Input<inputs.networkcloud.v20231001preview.ClusterSecretArchiveArgs>;
    /**
     * Resource tags.
     */
    tags?: pulumi.Input<{
        [key: string]: pulumi.Input<string>;
    }>;
    /**
     * The strategy for updating the cluster.
     */
    updateStrategy?: pulumi.Input<inputs.networkcloud.v20231001preview.ClusterUpdateStrategyArgs>;
}
