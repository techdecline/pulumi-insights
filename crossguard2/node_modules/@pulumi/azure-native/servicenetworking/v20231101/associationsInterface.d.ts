import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../../types/input";
import * as outputs from "../../types/output";
import * as enums from "../../types/enums";
/**
 * Association Subresource of Traffic Controller
 */
export declare class AssociationsInterface extends pulumi.CustomResource {
    /**
     * Get an existing AssociationsInterface resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    static get(name: string, id: pulumi.Input<pulumi.ID>, opts?: pulumi.CustomResourceOptions): AssociationsInterface;
    /**
     * Returns true if the given object is an instance of AssociationsInterface.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    static isInstance(obj: any): obj is AssociationsInterface;
    /**
     * Association Type
     */
    readonly associationType: pulumi.Output<string>;
    /**
     * The geo-location where the resource lives
     */
    readonly location: pulumi.Output<string>;
    /**
     * The name of the resource
     */
    readonly name: pulumi.Output<string>;
    /**
     * Provisioning State of Traffic Controller Association Resource
     */
    readonly provisioningState: pulumi.Output<string>;
    /**
     * Association Subnet
     */
    readonly subnet: pulumi.Output<outputs.servicenetworking.v20231101.AssociationSubnetResponse | undefined>;
    /**
     * Azure Resource Manager metadata containing createdBy and modifiedBy information.
     */
    readonly systemData: pulumi.Output<outputs.servicenetworking.v20231101.SystemDataResponse>;
    /**
     * Resource tags.
     */
    readonly tags: pulumi.Output<{
        [key: string]: string;
    } | undefined>;
    /**
     * The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
     */
    readonly type: pulumi.Output<string>;
    /**
     * Create a AssociationsInterface resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: AssociationsInterfaceArgs, opts?: pulumi.CustomResourceOptions);
}
/**
 * The set of arguments for constructing a AssociationsInterface resource.
 */
export interface AssociationsInterfaceArgs {
    /**
     * Name of Association
     */
    associationName?: pulumi.Input<string>;
    /**
     * Association Type
     */
    associationType: pulumi.Input<string | enums.servicenetworking.v20231101.AssociationType>;
    /**
     * The geo-location where the resource lives
     */
    location?: pulumi.Input<string>;
    /**
     * The name of the resource group. The name is case insensitive.
     */
    resourceGroupName: pulumi.Input<string>;
    /**
     * Association Subnet
     */
    subnet?: pulumi.Input<inputs.servicenetworking.v20231101.AssociationSubnetArgs>;
    /**
     * Resource tags.
     */
    tags?: pulumi.Input<{
        [key: string]: pulumi.Input<string>;
    }>;
    /**
     * traffic controller name for path
     */
    trafficControllerName: pulumi.Input<string>;
}
