import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
/**
 * Key Vault Access Policy for managing policies on existing vaults.
 */
export declare class AccessPolicy extends pulumi.CustomResource {
    /**
     * Get an existing AccessPolicy resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    static get(name: string, id: pulumi.Input<pulumi.ID>, opts?: pulumi.CustomResourceOptions): AccessPolicy;
    /**
     * Returns true if the given object is an instance of AccessPolicy.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    static isInstance(obj: any): obj is AccessPolicy;
    /**
     * The definition of the access policy.
     */
    readonly policy: pulumi.Output<outputs.keyvault.AccessPolicyEntry | undefined>;
    /**
     * Name of the resource group that contains the vault.
     */
    readonly resourceGroupName: pulumi.Output<string | undefined>;
    /**
     * Name of the Key Vault.
     */
    readonly vaultName: pulumi.Output<string | undefined>;
    /**
     * Create a AccessPolicy resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: AccessPolicyArgs, opts?: pulumi.CustomResourceOptions);
}
/**
 * The set of arguments for constructing a AccessPolicy resource.
 */
export interface AccessPolicyArgs {
    /**
     * The definition of the access policy.
     */
    policy: pulumi.Input<inputs.keyvault.AccessPolicyEntryArgs>;
    /**
     * Name of the resource group that contains the vault.
     */
    resourceGroupName: pulumi.Input<string>;
    /**
     * Name of the Key Vault.
     */
    vaultName: pulumi.Input<string>;
}
