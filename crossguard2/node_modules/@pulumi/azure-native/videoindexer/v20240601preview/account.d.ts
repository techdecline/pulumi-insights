import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../../types/input";
import * as outputs from "../../types/output";
import * as enums from "../../types/enums";
/**
 * An Azure Video Indexer account.
 */
export declare class Account extends pulumi.CustomResource {
    /**
     * Get an existing Account resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    static get(name: string, id: pulumi.Input<pulumi.ID>, opts?: pulumi.CustomResourceOptions): Account;
    /**
     * Returns true if the given object is an instance of Account.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    static isInstance(obj: any): obj is Account;
    /**
     * The account's data-plane ID. This can be set only when connecting an existing classic account
     */
    readonly accountId: pulumi.Output<string | undefined>;
    /**
     * The account's name
     */
    readonly accountName: pulumi.Output<string>;
    /**
     * Managed service identity (system assigned and/or user assigned identities)
     */
    readonly identity: pulumi.Output<outputs.videoindexer.v20240601preview.ManagedServiceIdentityResponse | undefined>;
    /**
     * The geo-location where the resource lives
     */
    readonly location: pulumi.Output<string>;
    /**
     * The name of the resource
     */
    readonly name: pulumi.Output<string>;
    /**
     * The openAi services details
     */
    readonly openAiServices: pulumi.Output<outputs.videoindexer.v20240601preview.OpenAiServicesForPutRequestResponse | undefined>;
    /**
     * List of private endpoint connections associated with the account.
     */
    readonly privateEndpointConnections: pulumi.Output<outputs.videoindexer.v20240601preview.PrivateEndpointConnectionResponse[] | undefined>;
    /**
     * Gets the status of the account at the time the operation was called.
     */
    readonly provisioningState: pulumi.Output<string>;
    /**
     * Whether or not public network access is allowed for the account.
     */
    readonly publicNetworkAccess: pulumi.Output<string | undefined>;
    /**
     * The storage services details
     */
    readonly storageServices: pulumi.Output<outputs.videoindexer.v20240601preview.StorageServicesForPutRequestResponse | undefined>;
    /**
     * Azure Resource Manager metadata containing createdBy and modifiedBy information.
     */
    readonly systemData: pulumi.Output<outputs.videoindexer.v20240601preview.SystemDataResponse>;
    /**
     * Resource tags.
     */
    readonly tags: pulumi.Output<{
        [key: string]: string;
    } | undefined>;
    /**
     * The account's tenant id
     */
    readonly tenantId: pulumi.Output<string>;
    /**
     * An integer representing the total seconds that have been indexed on the account
     */
    readonly totalSecondsIndexed: pulumi.Output<number>;
    /**
     * The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
     */
    readonly type: pulumi.Output<string>;
    /**
     * Create a Account resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: AccountArgs, opts?: pulumi.CustomResourceOptions);
}
/**
 * The set of arguments for constructing a Account resource.
 */
export interface AccountArgs {
    /**
     * The account's data-plane ID. This can be set only when connecting an existing classic account
     */
    accountId?: pulumi.Input<string>;
    /**
     * The name of the Azure Video Indexer account.
     */
    accountName?: pulumi.Input<string>;
    /**
     * Managed service identity (system assigned and/or user assigned identities)
     */
    identity?: pulumi.Input<inputs.videoindexer.v20240601preview.ManagedServiceIdentityArgs>;
    /**
     * The geo-location where the resource lives
     */
    location?: pulumi.Input<string>;
    /**
     * The openAi services details
     */
    openAiServices?: pulumi.Input<inputs.videoindexer.v20240601preview.OpenAiServicesForPutRequestArgs>;
    /**
     * List of private endpoint connections associated with the account.
     * These are also available as standalone resources. Do not mix inline and standalone resource as they will conflict with each other, leading to resources deletion.
     */
    privateEndpointConnections?: pulumi.Input<pulumi.Input<inputs.videoindexer.v20240601preview.PrivateEndpointConnectionArgs>[]>;
    /**
     * Whether or not public network access is allowed for the account.
     */
    publicNetworkAccess?: pulumi.Input<string | enums.videoindexer.v20240601preview.PublicNetworkAccess>;
    /**
     * The name of the resource group. The name is case insensitive.
     */
    resourceGroupName: pulumi.Input<string>;
    /**
     * The storage services details
     */
    storageServices?: pulumi.Input<inputs.videoindexer.v20240601preview.StorageServicesForPutRequestArgs>;
    /**
     * Resource tags.
     */
    tags?: pulumi.Input<{
        [key: string]: pulumi.Input<string>;
    }>;
}
