import * as pulumi from "@pulumi/pulumi";
import * as outputs from "../../types/output";
/**
 * Details of the environments returned on successful response
 */
export declare function listAccessEnvironments(args: ListAccessEnvironmentsArgs, opts?: pulumi.InvokeOptions): Promise<ListAccessEnvironmentsResult>;
export interface ListAccessEnvironmentsArgs {
    /**
     * Organization resource name
     */
    organizationName: string;
    /**
     * The name of the resource group. The name is case insensitive.
     */
    resourceGroupName: string;
    /**
     * Search filters for the request
     */
    searchFilters?: {
        [key: string]: string;
    };
}
/**
 * Details of the environments returned on successful response
 */
export interface ListAccessEnvironmentsResult {
    /**
     * Environment list data
     */
    readonly data?: outputs.confluent.v20240213.EnvironmentRecordResponse[];
    /**
     * Type of response
     */
    readonly kind?: string;
    /**
     * Metadata of the  environment list
     */
    readonly metadata?: outputs.confluent.v20240213.ConfluentListMetadataResponse;
}
/**
 * Details of the environments returned on successful response
 */
export declare function listAccessEnvironmentsOutput(args: ListAccessEnvironmentsOutputArgs, opts?: pulumi.InvokeOutputOptions): pulumi.Output<ListAccessEnvironmentsResult>;
export interface ListAccessEnvironmentsOutputArgs {
    /**
     * Organization resource name
     */
    organizationName: pulumi.Input<string>;
    /**
     * The name of the resource group. The name is case insensitive.
     */
    resourceGroupName: pulumi.Input<string>;
    /**
     * Search filters for the request
     */
    searchFilters?: pulumi.Input<{
        [key: string]: pulumi.Input<string>;
    }>;
}
