import * as pulumi from "@pulumi/pulumi";
import * as outputs from "../../types/output";
/**
 * Details of the role binding names returned on successful response
 */
export declare function listAccessRoleBindingName(args: ListAccessRoleBindingNameArgs, opts?: pulumi.InvokeOptions): Promise<ListAccessRoleBindingNameResult>;
export interface ListAccessRoleBindingNameArgs {
    /**
     * Organization resource name
     */
    organizationName: string;
    /**
     * The name of the resource group. The name is case insensitive.
     */
    resourceGroupName: string;
    /**
     * Search filters for the request
     */
    searchFilters?: {
        [key: string]: string;
    };
}
/**
 * Details of the role binding names returned on successful response
 */
export interface ListAccessRoleBindingNameResult {
    /**
     * List of role binding names
     */
    readonly data?: string[];
    /**
     * Type of response
     */
    readonly kind?: string;
    /**
     * Metadata of the list
     */
    readonly metadata?: outputs.confluent.v20240213.ConfluentListMetadataResponse;
}
/**
 * Details of the role binding names returned on successful response
 */
export declare function listAccessRoleBindingNameOutput(args: ListAccessRoleBindingNameOutputArgs, opts?: pulumi.InvokeOutputOptions): pulumi.Output<ListAccessRoleBindingNameResult>;
export interface ListAccessRoleBindingNameOutputArgs {
    /**
     * Organization resource name
     */
    organizationName: pulumi.Input<string>;
    /**
     * The name of the resource group. The name is case insensitive.
     */
    resourceGroupName: pulumi.Input<string>;
    /**
     * Search filters for the request
     */
    searchFilters?: pulumi.Input<{
        [key: string]: pulumi.Input<string>;
    }>;
}
