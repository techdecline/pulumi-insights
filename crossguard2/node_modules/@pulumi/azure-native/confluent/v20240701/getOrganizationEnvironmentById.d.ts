import * as pulumi from "@pulumi/pulumi";
import * as outputs from "../../types/output";
/**
 * Details about environment name, metadata and environment id of an environment
 */
export declare function getOrganizationEnvironmentById(args: GetOrganizationEnvironmentByIdArgs, opts?: pulumi.InvokeOptions): Promise<GetOrganizationEnvironmentByIdResult>;
export interface GetOrganizationEnvironmentByIdArgs {
    /**
     * Confluent environment id
     */
    environmentId: string;
    /**
     * Organization resource name
     */
    organizationName: string;
    /**
     * The name of the resource group. The name is case insensitive.
     */
    resourceGroupName: string;
}
/**
 * Details about environment name, metadata and environment id of an environment
 */
export interface GetOrganizationEnvironmentByIdResult {
    /**
     * Id of the environment
     */
    readonly id?: string;
    /**
     * Type of environment
     */
    readonly kind?: string;
    /**
     * Metadata of the record
     */
    readonly metadata?: outputs.confluent.v20240701.SCMetadataEntityResponse;
    /**
     * Display name of the environment
     */
    readonly name?: string;
    /**
     * Stream governance configuration
     */
    readonly streamGovernanceConfig?: outputs.confluent.v20240701.StreamGovernanceConfigResponse;
    /**
     * Type of the resource
     */
    readonly type?: string;
}
/**
 * Details about environment name, metadata and environment id of an environment
 */
export declare function getOrganizationEnvironmentByIdOutput(args: GetOrganizationEnvironmentByIdOutputArgs, opts?: pulumi.InvokeOutputOptions): pulumi.Output<GetOrganizationEnvironmentByIdResult>;
export interface GetOrganizationEnvironmentByIdOutputArgs {
    /**
     * Confluent environment id
     */
    environmentId: pulumi.Input<string>;
    /**
     * Organization resource name
     */
    organizationName: pulumi.Input<string>;
    /**
     * The name of the resource group. The name is case insensitive.
     */
    resourceGroupName: pulumi.Input<string>;
}
