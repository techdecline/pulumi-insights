import * as pulumi from "@pulumi/pulumi";
import * as outputs from "../types/output";
/**
 * Details of connector record
 * Azure REST API version: 2024-07-01.
 */
export declare function getConnector(args: GetConnectorArgs, opts?: pulumi.InvokeOptions): Promise<GetConnectorResult>;
export interface GetConnectorArgs {
    /**
     * Confluent kafka or schema registry cluster id
     */
    clusterId: string;
    /**
     * Confluent connector name
     */
    connectorName: string;
    /**
     * Confluent environment id
     */
    environmentId: string;
    /**
     * Organization resource name
     */
    organizationName: string;
    /**
     * The name of the resource group. The name is case insensitive.
     */
    resourceGroupName: string;
}
/**
 * Details of connector record
 */
export interface GetConnectorResult {
    /**
     * Connector Info Base
     */
    readonly connectorBasicInfo?: outputs.confluent.ConnectorInfoBaseResponse;
    /**
     * Connector Service type info base properties.
     */
    readonly connectorServiceTypeInfo?: outputs.confluent.AzureBlobStorageSinkConnectorServiceInfoResponse | outputs.confluent.AzureBlobStorageSourceConnectorServiceInfoResponse | outputs.confluent.AzureCosmosDBSinkConnectorServiceInfoResponse | outputs.confluent.AzureCosmosDBSourceConnectorServiceInfoResponse | outputs.confluent.AzureSynapseAnalyticsSinkConnectorServiceInfoResponse;
    /**
     * Fully qualified resource ID for the resource. E.g. "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
     */
    readonly id: string;
    /**
     * The name of the resource
     */
    readonly name: string;
    /**
     * The connection information consumed by applications.
     */
    readonly partnerConnectorInfo?: outputs.confluent.KafkaAzureBlobStorageSinkConnectorInfoResponse | outputs.confluent.KafkaAzureBlobStorageSourceConnectorInfoResponse | outputs.confluent.KafkaAzureCosmosDBSinkConnectorInfoResponse | outputs.confluent.KafkaAzureCosmosDBSourceConnectorInfoResponse | outputs.confluent.KafkaAzureSynapseAnalyticsSinkConnectorInfoResponse;
    /**
     * Azure Resource Manager metadata containing createdBy and modifiedBy information.
     */
    readonly systemData: outputs.confluent.SystemDataResponse;
    /**
     * The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
     */
    readonly type: string;
}
/**
 * Details of connector record
 * Azure REST API version: 2024-07-01.
 */
export declare function getConnectorOutput(args: GetConnectorOutputArgs, opts?: pulumi.InvokeOutputOptions): pulumi.Output<GetConnectorResult>;
export interface GetConnectorOutputArgs {
    /**
     * Confluent kafka or schema registry cluster id
     */
    clusterId: pulumi.Input<string>;
    /**
     * Confluent connector name
     */
    connectorName: pulumi.Input<string>;
    /**
     * Confluent environment id
     */
    environmentId: pulumi.Input<string>;
    /**
     * Organization resource name
     */
    organizationName: pulumi.Input<string>;
    /**
     * The name of the resource group. The name is case insensitive.
     */
    resourceGroupName: pulumi.Input<string>;
}
