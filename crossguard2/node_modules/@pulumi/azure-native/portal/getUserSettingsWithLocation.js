"use strict";
// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***
Object.defineProperty(exports, "__esModule", { value: true });
exports.getUserSettingsWithLocationOutput = exports.getUserSettingsWithLocation = void 0;
const pulumi = require("@pulumi/pulumi");
const utilities = require("../utilities");
/**
 * Get current user settings for current signed in user. This operation returns settings for the user's cloud shell preferences including preferred location, storage profile, shell type, font and size settings.
 * Azure REST API version: 2018-10-01.
 */
function getUserSettingsWithLocation(args, opts) {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("azure-native:portal:getUserSettingsWithLocation", {
        "location": args.location,
        "userSettingsName": args.userSettingsName,
    }, opts);
}
exports.getUserSettingsWithLocation = getUserSettingsWithLocation;
/**
 * Get current user settings for current signed in user. This operation returns settings for the user's cloud shell preferences including preferred location, storage profile, shell type, font and size settings.
 * Azure REST API version: 2018-10-01.
 */
function getUserSettingsWithLocationOutput(args, opts) {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invokeOutput("azure-native:portal:getUserSettingsWithLocation", {
        "location": args.location,
        "userSettingsName": args.userSettingsName,
    }, opts);
}
exports.getUserSettingsWithLocationOutput = getUserSettingsWithLocationOutput;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZ2V0VXNlclNldHRpbmdzV2l0aExvY2F0aW9uLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vcG9ydGFsL2dldFVzZXJTZXR0aW5nc1dpdGhMb2NhdGlvbi50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiO0FBQUEsc0VBQXNFO0FBQ3RFLGlGQUFpRjs7O0FBRWpGLHlDQUF5QztBQUl6QywwQ0FBMEM7QUFFMUM7OztHQUdHO0FBQ0gsU0FBZ0IsMkJBQTJCLENBQUMsSUFBcUMsRUFBRSxJQUEyQjtJQUMxRyxJQUFJLEdBQUcsTUFBTSxDQUFDLFlBQVksQ0FBQyxTQUFTLENBQUMsb0JBQW9CLEVBQUUsRUFBRSxJQUFJLElBQUksRUFBRSxDQUFDLENBQUM7SUFDekUsT0FBTyxNQUFNLENBQUMsT0FBTyxDQUFDLE1BQU0sQ0FBQyxpREFBaUQsRUFBRTtRQUM1RSxVQUFVLEVBQUUsSUFBSSxDQUFDLFFBQVE7UUFDekIsa0JBQWtCLEVBQUUsSUFBSSxDQUFDLGdCQUFnQjtLQUM1QyxFQUFFLElBQUksQ0FBQyxDQUFDO0FBQ2IsQ0FBQztBQU5ELGtFQU1DO0FBc0JEOzs7R0FHRztBQUNILFNBQWdCLGlDQUFpQyxDQUFDLElBQTJDLEVBQUUsSUFBaUM7SUFDNUgsSUFBSSxHQUFHLE1BQU0sQ0FBQyxZQUFZLENBQUMsU0FBUyxDQUFDLG9CQUFvQixFQUFFLEVBQUUsSUFBSSxJQUFJLEVBQUUsQ0FBQyxDQUFDO0lBQ3pFLE9BQU8sTUFBTSxDQUFDLE9BQU8sQ0FBQyxZQUFZLENBQUMsaURBQWlELEVBQUU7UUFDbEYsVUFBVSxFQUFFLElBQUksQ0FBQyxRQUFRO1FBQ3pCLGtCQUFrQixFQUFFLElBQUksQ0FBQyxnQkFBZ0I7S0FDNUMsRUFBRSxJQUFJLENBQUMsQ0FBQztBQUNiLENBQUM7QUFORCw4RUFNQyJ9