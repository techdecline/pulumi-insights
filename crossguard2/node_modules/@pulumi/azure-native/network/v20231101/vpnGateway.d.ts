import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../../types/input";
import * as outputs from "../../types/output";
/**
 * VpnGateway Resource.
 */
export declare class VpnGateway extends pulumi.CustomResource {
    /**
     * Get an existing VpnGateway resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    static get(name: string, id: pulumi.Input<pulumi.ID>, opts?: pulumi.CustomResourceOptions): VpnGateway;
    /**
     * Returns true if the given object is an instance of VpnGateway.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    static isInstance(obj: any): obj is VpnGateway;
    /**
     * Local network gateway's BGP speaker settings.
     */
    readonly bgpSettings: pulumi.Output<outputs.network.v20231101.BgpSettingsResponse | undefined>;
    /**
     * List of all vpn connections to the gateway.
     */
    readonly connections: pulumi.Output<outputs.network.v20231101.VpnConnectionResponse[] | undefined>;
    /**
     * Enable BGP routes translation for NAT on this VpnGateway.
     */
    readonly enableBgpRouteTranslationForNat: pulumi.Output<boolean | undefined>;
    /**
     * A unique read-only string that changes whenever the resource is updated.
     */
    readonly etag: pulumi.Output<string>;
    /**
     * List of all IPs configured on the gateway.
     */
    readonly ipConfigurations: pulumi.Output<outputs.network.v20231101.VpnGatewayIpConfigurationResponse[]>;
    /**
     * Enable Routing Preference property for the Public IP Interface of the VpnGateway.
     */
    readonly isRoutingPreferenceInternet: pulumi.Output<boolean | undefined>;
    /**
     * Resource location.
     */
    readonly location: pulumi.Output<string>;
    /**
     * Resource name.
     */
    readonly name: pulumi.Output<string>;
    /**
     * List of all the nat Rules associated with the gateway.
     */
    readonly natRules: pulumi.Output<outputs.network.v20231101.VpnGatewayNatRuleResponse[] | undefined>;
    /**
     * The provisioning state of the VPN gateway resource.
     */
    readonly provisioningState: pulumi.Output<string>;
    /**
     * Resource tags.
     */
    readonly tags: pulumi.Output<{
        [key: string]: string;
    } | undefined>;
    /**
     * Resource type.
     */
    readonly type: pulumi.Output<string>;
    /**
     * The VirtualHub to which the gateway belongs.
     */
    readonly virtualHub: pulumi.Output<outputs.network.v20231101.SubResourceResponse | undefined>;
    /**
     * The scale unit for this vpn gateway.
     */
    readonly vpnGatewayScaleUnit: pulumi.Output<number | undefined>;
    /**
     * Create a VpnGateway resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: VpnGatewayArgs, opts?: pulumi.CustomResourceOptions);
}
/**
 * The set of arguments for constructing a VpnGateway resource.
 */
export interface VpnGatewayArgs {
    /**
     * Local network gateway's BGP speaker settings.
     */
    bgpSettings?: pulumi.Input<inputs.network.v20231101.BgpSettingsArgs>;
    /**
     * List of all vpn connections to the gateway.
     * These are also available as standalone resources. Do not mix inline and standalone resource as they will conflict with each other, leading to resources deletion.
     */
    connections?: pulumi.Input<pulumi.Input<inputs.network.v20231101.VpnConnectionArgs>[]>;
    /**
     * Enable BGP routes translation for NAT on this VpnGateway.
     */
    enableBgpRouteTranslationForNat?: pulumi.Input<boolean>;
    /**
     * The name of the gateway.
     */
    gatewayName?: pulumi.Input<string>;
    /**
     * Resource ID.
     */
    id?: pulumi.Input<string>;
    /**
     * Enable Routing Preference property for the Public IP Interface of the VpnGateway.
     */
    isRoutingPreferenceInternet?: pulumi.Input<boolean>;
    /**
     * Resource location.
     */
    location?: pulumi.Input<string>;
    /**
     * List of all the nat Rules associated with the gateway.
     * These are also available as standalone resources. Do not mix inline and standalone resource as they will conflict with each other, leading to resources deletion.
     */
    natRules?: pulumi.Input<pulumi.Input<inputs.network.v20231101.VpnGatewayNatRuleArgs>[]>;
    /**
     * The resource group name of the VpnGateway.
     */
    resourceGroupName: pulumi.Input<string>;
    /**
     * Resource tags.
     */
    tags?: pulumi.Input<{
        [key: string]: pulumi.Input<string>;
    }>;
    /**
     * The VirtualHub to which the gateway belongs.
     */
    virtualHub?: pulumi.Input<inputs.network.v20231101.SubResourceArgs>;
    /**
     * The scale unit for this vpn gateway.
     */
    vpnGatewayScaleUnit?: pulumi.Input<number>;
}
