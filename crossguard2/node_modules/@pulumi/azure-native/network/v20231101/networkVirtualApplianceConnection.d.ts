import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../../types/input";
import * as outputs from "../../types/output";
/**
 * NetworkVirtualApplianceConnection resource.
 */
export declare class NetworkVirtualApplianceConnection extends pulumi.CustomResource {
    /**
     * Get an existing NetworkVirtualApplianceConnection resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    static get(name: string, id: pulumi.Input<pulumi.ID>, opts?: pulumi.CustomResourceOptions): NetworkVirtualApplianceConnection;
    /**
     * Returns true if the given object is an instance of NetworkVirtualApplianceConnection.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    static isInstance(obj: any): obj is NetworkVirtualApplianceConnection;
    /**
     * Network Virtual Appliance ASN.
     */
    readonly asn: pulumi.Output<number | undefined>;
    /**
     * List of bgpPeerAddresses for the NVA instances
     */
    readonly bgpPeerAddress: pulumi.Output<string[] | undefined>;
    /**
     * Enable internet security.
     */
    readonly enableInternetSecurity: pulumi.Output<boolean | undefined>;
    /**
     * The name of the resource.
     */
    readonly name: pulumi.Output<string | undefined>;
    /**
     * The provisioning state of the NetworkVirtualApplianceConnection resource.
     */
    readonly provisioningState: pulumi.Output<string>;
    /**
     * The Routing Configuration indicating the associated and propagated route tables on this connection.
     */
    readonly routingConfiguration: pulumi.Output<outputs.network.v20231101.RoutingConfigurationResponse | undefined>;
    /**
     * Unique identifier for the connection.
     */
    readonly tunnelIdentifier: pulumi.Output<number | undefined>;
    /**
     * Create a NetworkVirtualApplianceConnection resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: NetworkVirtualApplianceConnectionArgs, opts?: pulumi.CustomResourceOptions);
}
/**
 * The set of arguments for constructing a NetworkVirtualApplianceConnection resource.
 */
export interface NetworkVirtualApplianceConnectionArgs {
    /**
     * Network Virtual Appliance ASN.
     */
    asn?: pulumi.Input<number>;
    /**
     * List of bgpPeerAddresses for the NVA instances
     */
    bgpPeerAddress?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The name of the NVA connection.
     */
    connectionName?: pulumi.Input<string>;
    /**
     * Enable internet security.
     */
    enableInternetSecurity?: pulumi.Input<boolean>;
    /**
     * Resource ID.
     */
    id?: pulumi.Input<string>;
    /**
     * The name of the resource.
     */
    name?: pulumi.Input<string>;
    /**
     * The name of the Network Virtual Appliance.
     */
    networkVirtualApplianceName: pulumi.Input<string>;
    /**
     * The name of the resource group.
     */
    resourceGroupName: pulumi.Input<string>;
    /**
     * The Routing Configuration indicating the associated and propagated route tables on this connection.
     */
    routingConfiguration?: pulumi.Input<inputs.network.v20231101.RoutingConfigurationArgs>;
    /**
     * Unique identifier for the connection.
     */
    tunnelIdentifier?: pulumi.Input<number>;
}
