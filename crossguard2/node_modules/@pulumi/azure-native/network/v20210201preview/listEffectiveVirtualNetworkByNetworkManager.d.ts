import * as pulumi from "@pulumi/pulumi";
import * as outputs from "../../types/output";
/**
 * List effective virtual networks in a network manager.
 */
export declare function listEffectiveVirtualNetworkByNetworkManager(args: ListEffectiveVirtualNetworkByNetworkManagerArgs, opts?: pulumi.InvokeOptions): Promise<ListEffectiveVirtualNetworkByNetworkManagerResult>;
export interface ListEffectiveVirtualNetworkByNetworkManagerArgs {
    /**
     * Conditional Members.
     */
    conditionalMembers?: string;
    /**
     * The name of the network manager.
     */
    networkManagerName: string;
    /**
     * The name of the resource group.
     */
    resourceGroupName: string;
    /**
     * Continuation token for pagination, capturing the next page size and offset, as well as the context of the query.
     */
    skipToken?: string;
    /**
     * An optional query parameter which specifies the maximum number of records to be returned by the server.
     */
    top?: number;
}
/**
 * Result of the request to list Effective Virtual Network. It contains a list of groups and a URL link to get the next set of results.
 */
export interface ListEffectiveVirtualNetworkByNetworkManagerResult {
    /**
     * When present, the value can be passed to a subsequent query call (together with the same query and scopes used in the current request) to retrieve the next page of data.
     */
    readonly skipToken?: string;
    /**
     * Gets a page of EffectiveVirtualNetwork
     */
    readonly value?: outputs.network.v20210201preview.EffectiveVirtualNetworkResponse[];
}
/**
 * List effective virtual networks in a network manager.
 */
export declare function listEffectiveVirtualNetworkByNetworkManagerOutput(args: ListEffectiveVirtualNetworkByNetworkManagerOutputArgs, opts?: pulumi.InvokeOutputOptions): pulumi.Output<ListEffectiveVirtualNetworkByNetworkManagerResult>;
export interface ListEffectiveVirtualNetworkByNetworkManagerOutputArgs {
    /**
     * Conditional Members.
     */
    conditionalMembers?: pulumi.Input<string>;
    /**
     * The name of the network manager.
     */
    networkManagerName: pulumi.Input<string>;
    /**
     * The name of the resource group.
     */
    resourceGroupName: pulumi.Input<string>;
    /**
     * Continuation token for pagination, capturing the next page size and offset, as well as the context of the query.
     */
    skipToken?: pulumi.Input<string>;
    /**
     * An optional query parameter which specifies the maximum number of records to be returned by the server.
     */
    top?: pulumi.Input<number>;
}
