"use strict";
// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***
Object.defineProperty(exports, "__esModule", { value: true });
exports.listNetworkManagerEffectiveSecurityAdminRuleOutput = exports.listNetworkManagerEffectiveSecurityAdminRule = void 0;
const pulumi = require("@pulumi/pulumi");
const utilities = require("../../utilities");
/**
 * List all effective security admin rules applied on a virtual network.
 */
function listNetworkManagerEffectiveSecurityAdminRule(args, opts) {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("azure-native:network/v20210201preview:listNetworkManagerEffectiveSecurityAdminRule", {
        "resourceGroupName": args.resourceGroupName,
        "skipToken": args.skipToken,
        "virtualNetworkName": args.virtualNetworkName,
    }, opts);
}
exports.listNetworkManagerEffectiveSecurityAdminRule = listNetworkManagerEffectiveSecurityAdminRule;
/**
 * List all effective security admin rules applied on a virtual network.
 */
function listNetworkManagerEffectiveSecurityAdminRuleOutput(args, opts) {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invokeOutput("azure-native:network/v20210201preview:listNetworkManagerEffectiveSecurityAdminRule", {
        "resourceGroupName": args.resourceGroupName,
        "skipToken": args.skipToken,
        "virtualNetworkName": args.virtualNetworkName,
    }, opts);
}
exports.listNetworkManagerEffectiveSecurityAdminRuleOutput = listNetworkManagerEffectiveSecurityAdminRuleOutput;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibGlzdE5ldHdvcmtNYW5hZ2VyRWZmZWN0aXZlU2VjdXJpdHlBZG1pblJ1bGUuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi9uZXR3b3JrL3YyMDIxMDIwMXByZXZpZXcvbGlzdE5ldHdvcmtNYW5hZ2VyRWZmZWN0aXZlU2VjdXJpdHlBZG1pblJ1bGUudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IjtBQUFBLHNFQUFzRTtBQUN0RSxpRkFBaUY7OztBQUVqRix5Q0FBeUM7QUFJekMsNkNBQTZDO0FBRTdDOztHQUVHO0FBQ0gsU0FBZ0IsNENBQTRDLENBQUMsSUFBc0QsRUFBRSxJQUEyQjtJQUM1SSxJQUFJLEdBQUcsTUFBTSxDQUFDLFlBQVksQ0FBQyxTQUFTLENBQUMsb0JBQW9CLEVBQUUsRUFBRSxJQUFJLElBQUksRUFBRSxDQUFDLENBQUM7SUFDekUsT0FBTyxNQUFNLENBQUMsT0FBTyxDQUFDLE1BQU0sQ0FBQyxvRkFBb0YsRUFBRTtRQUMvRyxtQkFBbUIsRUFBRSxJQUFJLENBQUMsaUJBQWlCO1FBQzNDLFdBQVcsRUFBRSxJQUFJLENBQUMsU0FBUztRQUMzQixvQkFBb0IsRUFBRSxJQUFJLENBQUMsa0JBQWtCO0tBQ2hELEVBQUUsSUFBSSxDQUFDLENBQUM7QUFDYixDQUFDO0FBUEQsb0dBT0M7QUE4QkQ7O0dBRUc7QUFDSCxTQUFnQixrREFBa0QsQ0FBQyxJQUE0RCxFQUFFLElBQWlDO0lBQzlKLElBQUksR0FBRyxNQUFNLENBQUMsWUFBWSxDQUFDLFNBQVMsQ0FBQyxvQkFBb0IsRUFBRSxFQUFFLElBQUksSUFBSSxFQUFFLENBQUMsQ0FBQztJQUN6RSxPQUFPLE1BQU0sQ0FBQyxPQUFPLENBQUMsWUFBWSxDQUFDLG9GQUFvRixFQUFFO1FBQ3JILG1CQUFtQixFQUFFLElBQUksQ0FBQyxpQkFBaUI7UUFDM0MsV0FBVyxFQUFFLElBQUksQ0FBQyxTQUFTO1FBQzNCLG9CQUFvQixFQUFFLElBQUksQ0FBQyxrQkFBa0I7S0FDaEQsRUFBRSxJQUFJLENBQUMsQ0FBQztBQUNiLENBQUM7QUFQRCxnSEFPQyJ9