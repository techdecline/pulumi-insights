import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../../types/input";
import * as outputs from "../../types/output";
/**
 * Information about the connection monitor.
 */
export declare class ConnectionMonitor extends pulumi.CustomResource {
    /**
     * Get an existing ConnectionMonitor resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    static get(name: string, id: pulumi.Input<pulumi.ID>, opts?: pulumi.CustomResourceOptions): ConnectionMonitor;
    /**
     * Returns true if the given object is an instance of ConnectionMonitor.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    static isInstance(obj: any): obj is ConnectionMonitor;
    /**
     * Determines if the connection monitor will start automatically once created.
     */
    readonly autoStart: pulumi.Output<boolean | undefined>;
    /**
     * Type of connection monitor.
     */
    readonly connectionMonitorType: pulumi.Output<string>;
    /**
     * Describes the destination of connection monitor.
     */
    readonly destination: pulumi.Output<outputs.network.v20230901.ConnectionMonitorDestinationResponse | undefined>;
    /**
     * List of connection monitor endpoints.
     */
    readonly endpoints: pulumi.Output<outputs.network.v20230901.ConnectionMonitorEndpointResponse[] | undefined>;
    /**
     * A unique read-only string that changes whenever the resource is updated.
     */
    readonly etag: pulumi.Output<string>;
    /**
     * Connection monitor location.
     */
    readonly location: pulumi.Output<string | undefined>;
    /**
     * Monitoring interval in seconds.
     */
    readonly monitoringIntervalInSeconds: pulumi.Output<number | undefined>;
    /**
     * The monitoring status of the connection monitor.
     */
    readonly monitoringStatus: pulumi.Output<string>;
    /**
     * Name of the connection monitor.
     */
    readonly name: pulumi.Output<string>;
    /**
     * Optional notes to be associated with the connection monitor.
     */
    readonly notes: pulumi.Output<string | undefined>;
    /**
     * List of connection monitor outputs.
     */
    readonly outputs: pulumi.Output<outputs.network.v20230901.ConnectionMonitorOutputResponse[] | undefined>;
    /**
     * The provisioning state of the connection monitor.
     */
    readonly provisioningState: pulumi.Output<string>;
    /**
     * Describes the source of connection monitor.
     */
    readonly source: pulumi.Output<outputs.network.v20230901.ConnectionMonitorSourceResponse | undefined>;
    /**
     * The date and time when the connection monitor was started.
     */
    readonly startTime: pulumi.Output<string>;
    /**
     * Connection monitor tags.
     */
    readonly tags: pulumi.Output<{
        [key: string]: string;
    } | undefined>;
    /**
     * List of connection monitor test configurations.
     */
    readonly testConfigurations: pulumi.Output<outputs.network.v20230901.ConnectionMonitorTestConfigurationResponse[] | undefined>;
    /**
     * List of connection monitor test groups.
     */
    readonly testGroups: pulumi.Output<outputs.network.v20230901.ConnectionMonitorTestGroupResponse[] | undefined>;
    /**
     * Connection monitor type.
     */
    readonly type: pulumi.Output<string>;
    /**
     * Create a ConnectionMonitor resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: ConnectionMonitorArgs, opts?: pulumi.CustomResourceOptions);
}
/**
 * The set of arguments for constructing a ConnectionMonitor resource.
 */
export interface ConnectionMonitorArgs {
    /**
     * Determines if the connection monitor will start automatically once created.
     */
    autoStart?: pulumi.Input<boolean>;
    /**
     * The name of the connection monitor.
     */
    connectionMonitorName?: pulumi.Input<string>;
    /**
     * Describes the destination of connection monitor.
     */
    destination?: pulumi.Input<inputs.network.v20230901.ConnectionMonitorDestinationArgs>;
    /**
     * List of connection monitor endpoints.
     */
    endpoints?: pulumi.Input<pulumi.Input<inputs.network.v20230901.ConnectionMonitorEndpointArgs>[]>;
    /**
     * Connection monitor location.
     */
    location?: pulumi.Input<string>;
    /**
     * Value indicating whether connection monitor V1 should be migrated to V2 format.
     */
    migrate?: pulumi.Input<string>;
    /**
     * Monitoring interval in seconds.
     */
    monitoringIntervalInSeconds?: pulumi.Input<number>;
    /**
     * The name of the Network Watcher resource.
     */
    networkWatcherName: pulumi.Input<string>;
    /**
     * Optional notes to be associated with the connection monitor.
     */
    notes?: pulumi.Input<string>;
    /**
     * List of connection monitor outputs.
     */
    outputs?: pulumi.Input<pulumi.Input<inputs.network.v20230901.ConnectionMonitorOutputArgs>[]>;
    /**
     * The name of the resource group containing Network Watcher.
     */
    resourceGroupName: pulumi.Input<string>;
    /**
     * Describes the source of connection monitor.
     */
    source?: pulumi.Input<inputs.network.v20230901.ConnectionMonitorSourceArgs>;
    /**
     * Connection monitor tags.
     */
    tags?: pulumi.Input<{
        [key: string]: pulumi.Input<string>;
    }>;
    /**
     * List of connection monitor test configurations.
     */
    testConfigurations?: pulumi.Input<pulumi.Input<inputs.network.v20230901.ConnectionMonitorTestConfigurationArgs>[]>;
    /**
     * List of connection monitor test groups.
     */
    testGroups?: pulumi.Input<pulumi.Input<inputs.network.v20230901.ConnectionMonitorTestGroupArgs>[]>;
}
