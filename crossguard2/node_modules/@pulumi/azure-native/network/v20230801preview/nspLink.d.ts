import * as pulumi from "@pulumi/pulumi";
/**
 * The network security perimeter link resource
 */
export declare class NspLink extends pulumi.CustomResource {
    /**
     * Get an existing NspLink resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    static get(name: string, id: pulumi.Input<pulumi.ID>, opts?: pulumi.CustomResourceOptions): NspLink;
    /**
     * Returns true if the given object is an instance of NspLink.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    static isInstance(obj: any): obj is NspLink;
    /**
     * Perimeter ARM Id for the remote NSP with which the link gets created in Auto-approval mode. It should be used when the NSP admin have Microsoft.Network/networkSecurityPerimeters/linkPerimeter/action permission on the remote NSP resource.
     */
    readonly autoApprovedRemotePerimeterResourceId: pulumi.Output<string | undefined>;
    /**
     * A message passed to the owner of the remote NSP link resource with this connection request. In case of Auto-approved flow, it is default to 'Auto Approved'. Restricted to 140 chars.
     */
    readonly description: pulumi.Output<string | undefined>;
    /**
     * A unique read-only string that changes whenever the resource is updated.
     */
    readonly etag: pulumi.Output<string>;
    /**
     * Local Inbound profile names to which Inbound is allowed. Use ['*'] to allow inbound to all profiles.
     */
    readonly localInboundProfiles: pulumi.Output<string[] | undefined>;
    /**
     * Local Outbound profile names from which Outbound is allowed. In current version, it is readonly property and it's value is set to ['*'] to allow outbound from all profiles. In later version, user will be able to modify it.
     */
    readonly localOutboundProfiles: pulumi.Output<string[]>;
    /**
     * Resource name.
     */
    readonly name: pulumi.Output<string>;
    /**
     * The provisioning state of the NSP Link resource.
     */
    readonly provisioningState: pulumi.Output<string>;
    /**
     * Remote Inbound profile names to which Inbound is allowed. Use ['*'] to allow inbound to all profiles. This property can only be updated in auto-approval mode.
     */
    readonly remoteInboundProfiles: pulumi.Output<string[] | undefined>;
    /**
     * Remote Outbound profile names from which Outbound is allowed. In current version, it is readonly property and it's value is set to ['*'] to allow outbound from all profiles. In later version, user will be able to modify it.
     */
    readonly remoteOutboundProfiles: pulumi.Output<string[]>;
    /**
     * Remote NSP Guid with which the link gets created.
     */
    readonly remotePerimeterGuid: pulumi.Output<string>;
    /**
     * Remote NSP location with which the link gets created.
     */
    readonly remotePerimeterLocation: pulumi.Output<string>;
    /**
     * The NSP link state.
     */
    readonly status: pulumi.Output<string>;
    /**
     * Resource type.
     */
    readonly type: pulumi.Output<string>;
    /**
     * Create a NspLink resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: NspLinkArgs, opts?: pulumi.CustomResourceOptions);
}
/**
 * The set of arguments for constructing a NspLink resource.
 */
export interface NspLinkArgs {
    /**
     * Perimeter ARM Id for the remote NSP with which the link gets created in Auto-approval mode. It should be used when the NSP admin have Microsoft.Network/networkSecurityPerimeters/linkPerimeter/action permission on the remote NSP resource.
     */
    autoApprovedRemotePerimeterResourceId?: pulumi.Input<string>;
    /**
     * A message passed to the owner of the remote NSP link resource with this connection request. In case of Auto-approved flow, it is default to 'Auto Approved'. Restricted to 140 chars.
     */
    description?: pulumi.Input<string>;
    /**
     * The name of the NSP link.
     */
    linkName?: pulumi.Input<string>;
    /**
     * Local Inbound profile names to which Inbound is allowed. Use ['*'] to allow inbound to all profiles.
     */
    localInboundProfiles?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The name of the network security perimeter.
     */
    networkSecurityPerimeterName: pulumi.Input<string>;
    /**
     * Remote Inbound profile names to which Inbound is allowed. Use ['*'] to allow inbound to all profiles. This property can only be updated in auto-approval mode.
     */
    remoteInboundProfiles?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The name of the resource group.
     */
    resourceGroupName: pulumi.Input<string>;
}
