import * as pulumi from "@pulumi/pulumi";
import * as outputs from "../../types/output";
/**
 * Gets a Rules Engine Configuration with the specified name within the specified Front Door.
 */
export declare function getRulesEngine(args: GetRulesEngineArgs, opts?: pulumi.InvokeOptions): Promise<GetRulesEngineResult>;
export interface GetRulesEngineArgs {
    /**
     * Name of the Front Door which is globally unique.
     */
    frontDoorName: string;
    /**
     * Name of the Resource group within the Azure subscription.
     */
    resourceGroupName: string;
    /**
     * Name of the Rules Engine which is unique within the Front Door.
     */
    rulesEngineName: string;
}
/**
 * A rules engine configuration containing a list of rules that will run to modify the runtime behavior of the request and response.
 */
export interface GetRulesEngineResult {
    /**
     * Resource ID.
     */
    readonly id: string;
    /**
     * Resource name.
     */
    readonly name: string;
    /**
     * Resource status.
     */
    readonly resourceState: string;
    /**
     * A list of rules that define a particular Rules Engine Configuration.
     */
    readonly rules?: outputs.network.v20210601.RulesEngineRuleResponse[];
    /**
     * Resource type.
     */
    readonly type: string;
}
/**
 * Gets a Rules Engine Configuration with the specified name within the specified Front Door.
 */
export declare function getRulesEngineOutput(args: GetRulesEngineOutputArgs, opts?: pulumi.InvokeOutputOptions): pulumi.Output<GetRulesEngineResult>;
export interface GetRulesEngineOutputArgs {
    /**
     * Name of the Front Door which is globally unique.
     */
    frontDoorName: pulumi.Input<string>;
    /**
     * Name of the Resource group within the Azure subscription.
     */
    resourceGroupName: pulumi.Input<string>;
    /**
     * Name of the Rules Engine which is unique within the Front Door.
     */
    rulesEngineName: pulumi.Input<string>;
}
