"use strict";
// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***
Object.defineProperty(exports, "__esModule", { value: true });
exports.ExpressRouteCircuitAuthorization = void 0;
const pulumi = require("@pulumi/pulumi");
const utilities = require("../utilities");
/**
 * Authorization in an ExpressRouteCircuit resource.
 * Azure REST API version: 2023-02-01. Prior API version in Azure Native 1.x: 2020-11-01.
 *
 * Other available API versions: 2019-06-01, 2023-04-01, 2023-05-01, 2023-06-01, 2023-09-01, 2023-11-01, 2024-01-01, 2024-03-01, 2024-05-01.
 */
class ExpressRouteCircuitAuthorization extends pulumi.CustomResource {
    /**
     * Get an existing ExpressRouteCircuitAuthorization resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    static get(name, id, opts) {
        return new ExpressRouteCircuitAuthorization(name, undefined, Object.assign(Object.assign({}, opts), { id: id }));
    }
    /**
     * Returns true if the given object is an instance of ExpressRouteCircuitAuthorization.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    static isInstance(obj) {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === ExpressRouteCircuitAuthorization.__pulumiType;
    }
    /**
     * Create a ExpressRouteCircuitAuthorization resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name, args, opts) {
        let resourceInputs = {};
        opts = opts || {};
        if (!opts.id) {
            if ((!args || args.circuitName === undefined) && !opts.urn) {
                throw new Error("Missing required property 'circuitName'");
            }
            if ((!args || args.resourceGroupName === undefined) && !opts.urn) {
                throw new Error("Missing required property 'resourceGroupName'");
            }
            resourceInputs["authorizationKey"] = args ? args.authorizationKey : undefined;
            resourceInputs["authorizationName"] = args ? args.authorizationName : undefined;
            resourceInputs["authorizationUseStatus"] = args ? args.authorizationUseStatus : undefined;
            resourceInputs["circuitName"] = args ? args.circuitName : undefined;
            resourceInputs["id"] = args ? args.id : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["resourceGroupName"] = args ? args.resourceGroupName : undefined;
            resourceInputs["etag"] = undefined /*out*/;
            resourceInputs["provisioningState"] = undefined /*out*/;
            resourceInputs["type"] = undefined /*out*/;
        }
        else {
            resourceInputs["authorizationKey"] = undefined /*out*/;
            resourceInputs["authorizationUseStatus"] = undefined /*out*/;
            resourceInputs["etag"] = undefined /*out*/;
            resourceInputs["name"] = undefined /*out*/;
            resourceInputs["provisioningState"] = undefined /*out*/;
            resourceInputs["type"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        const aliasOpts = { aliases: [{ type: "azure-native:network/v20150501preview:ExpressRouteCircuitAuthorization" }, { type: "azure-native:network/v20150615:ExpressRouteCircuitAuthorization" }, { type: "azure-native:network/v20160330:ExpressRouteCircuitAuthorization" }, { type: "azure-native:network/v20160601:ExpressRouteCircuitAuthorization" }, { type: "azure-native:network/v20160901:ExpressRouteCircuitAuthorization" }, { type: "azure-native:network/v20161201:ExpressRouteCircuitAuthorization" }, { type: "azure-native:network/v20170301:ExpressRouteCircuitAuthorization" }, { type: "azure-native:network/v20170601:ExpressRouteCircuitAuthorization" }, { type: "azure-native:network/v20170801:ExpressRouteCircuitAuthorization" }, { type: "azure-native:network/v20170901:ExpressRouteCircuitAuthorization" }, { type: "azure-native:network/v20171001:ExpressRouteCircuitAuthorization" }, { type: "azure-native:network/v20171101:ExpressRouteCircuitAuthorization" }, { type: "azure-native:network/v20180101:ExpressRouteCircuitAuthorization" }, { type: "azure-native:network/v20180201:ExpressRouteCircuitAuthorization" }, { type: "azure-native:network/v20180401:ExpressRouteCircuitAuthorization" }, { type: "azure-native:network/v20180601:ExpressRouteCircuitAuthorization" }, { type: "azure-native:network/v20180701:ExpressRouteCircuitAuthorization" }, { type: "azure-native:network/v20180801:ExpressRouteCircuitAuthorization" }, { type: "azure-native:network/v20181001:ExpressRouteCircuitAuthorization" }, { type: "azure-native:network/v20181101:ExpressRouteCircuitAuthorization" }, { type: "azure-native:network/v20181201:ExpressRouteCircuitAuthorization" }, { type: "azure-native:network/v20190201:ExpressRouteCircuitAuthorization" }, { type: "azure-native:network/v20190401:ExpressRouteCircuitAuthorization" }, { type: "azure-native:network/v20190601:ExpressRouteCircuitAuthorization" }, { type: "azure-native:network/v20190701:ExpressRouteCircuitAuthorization" }, { type: "azure-native:network/v20190801:ExpressRouteCircuitAuthorization" }, { type: "azure-native:network/v20190901:ExpressRouteCircuitAuthorization" }, { type: "azure-native:network/v20191101:ExpressRouteCircuitAuthorization" }, { type: "azure-native:network/v20191201:ExpressRouteCircuitAuthorization" }, { type: "azure-native:network/v20200301:ExpressRouteCircuitAuthorization" }, { type: "azure-native:network/v20200401:ExpressRouteCircuitAuthorization" }, { type: "azure-native:network/v20200501:ExpressRouteCircuitAuthorization" }, { type: "azure-native:network/v20200601:ExpressRouteCircuitAuthorization" }, { type: "azure-native:network/v20200701:ExpressRouteCircuitAuthorization" }, { type: "azure-native:network/v20200801:ExpressRouteCircuitAuthorization" }, { type: "azure-native:network/v20201101:ExpressRouteCircuitAuthorization" }, { type: "azure-native:network/v20210201:ExpressRouteCircuitAuthorization" }, { type: "azure-native:network/v20210301:ExpressRouteCircuitAuthorization" }, { type: "azure-native:network/v20210501:ExpressRouteCircuitAuthorization" }, { type: "azure-native:network/v20210801:ExpressRouteCircuitAuthorization" }, { type: "azure-native:network/v20220101:ExpressRouteCircuitAuthorization" }, { type: "azure-native:network/v20220501:ExpressRouteCircuitAuthorization" }, { type: "azure-native:network/v20220701:ExpressRouteCircuitAuthorization" }, { type: "azure-native:network/v20220901:ExpressRouteCircuitAuthorization" }, { type: "azure-native:network/v20221101:ExpressRouteCircuitAuthorization" }, { type: "azure-native:network/v20230201:ExpressRouteCircuitAuthorization" }, { type: "azure-native:network/v20230401:ExpressRouteCircuitAuthorization" }, { type: "azure-native:network/v20230501:ExpressRouteCircuitAuthorization" }, { type: "azure-native:network/v20230601:ExpressRouteCircuitAuthorization" }, { type: "azure-native:network/v20230901:ExpressRouteCircuitAuthorization" }, { type: "azure-native:network/v20231101:ExpressRouteCircuitAuthorization" }, { type: "azure-native:network/v20240101:ExpressRouteCircuitAuthorization" }, { type: "azure-native:network/v20240301:ExpressRouteCircuitAuthorization" }, { type: "azure-native:network/v20240501:ExpressRouteCircuitAuthorization" }] };
        opts = pulumi.mergeOptions(opts, aliasOpts);
        super(ExpressRouteCircuitAuthorization.__pulumiType, name, resourceInputs, opts);
    }
}
exports.ExpressRouteCircuitAuthorization = ExpressRouteCircuitAuthorization;
/** @internal */
ExpressRouteCircuitAuthorization.__pulumiType = 'azure-native:network:ExpressRouteCircuitAuthorization';
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZXhwcmVzc1JvdXRlQ2lyY3VpdEF1dGhvcml6YXRpb24uanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi9uZXR3b3JrL2V4cHJlc3NSb3V0ZUNpcmN1aXRBdXRob3JpemF0aW9uLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7QUFBQSxzRUFBc0U7QUFDdEUsaUZBQWlGOzs7QUFFakYseUNBQXlDO0FBSXpDLDBDQUEwQztBQUUxQzs7Ozs7R0FLRztBQUNILE1BQWEsZ0NBQWlDLFNBQVEsTUFBTSxDQUFDLGNBQWM7SUFDdkU7Ozs7Ozs7T0FPRztJQUNJLE1BQU0sQ0FBQyxHQUFHLENBQUMsSUFBWSxFQUFFLEVBQTJCLEVBQUUsSUFBbUM7UUFDNUYsT0FBTyxJQUFJLGdDQUFnQyxDQUFDLElBQUksRUFBRSxTQUFnQixrQ0FBTyxJQUFJLEtBQUUsRUFBRSxFQUFFLEVBQUUsSUFBRyxDQUFDO0lBQzdGLENBQUM7SUFLRDs7O09BR0c7SUFDSSxNQUFNLENBQUMsVUFBVSxDQUFDLEdBQVE7UUFDN0IsSUFBSSxHQUFHLEtBQUssU0FBUyxJQUFJLEdBQUcsS0FBSyxJQUFJLEVBQUU7WUFDbkMsT0FBTyxLQUFLLENBQUM7U0FDaEI7UUFDRCxPQUFPLEdBQUcsQ0FBQyxjQUFjLENBQUMsS0FBSyxnQ0FBZ0MsQ0FBQyxZQUFZLENBQUM7SUFDakYsQ0FBQztJQTJCRDs7Ozs7O09BTUc7SUFDSCxZQUFZLElBQVksRUFBRSxJQUEwQyxFQUFFLElBQW1DO1FBQ3JHLElBQUksY0FBYyxHQUFrQixFQUFFLENBQUM7UUFDdkMsSUFBSSxHQUFHLElBQUksSUFBSSxFQUFFLENBQUM7UUFDbEIsSUFBSSxDQUFDLElBQUksQ0FBQyxFQUFFLEVBQUU7WUFDVixJQUFJLENBQUMsQ0FBQyxJQUFJLElBQUksSUFBSSxDQUFDLFdBQVcsS0FBSyxTQUFTLENBQUMsSUFBSSxDQUFDLElBQUksQ0FBQyxHQUFHLEVBQUU7Z0JBQ3hELE1BQU0sSUFBSSxLQUFLLENBQUMseUNBQXlD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LElBQUksRUFBRSxpRUFBaUUsRUFBRSxFQUFFLEVBQUUsSUFBSSxFQUFFLGlFQUFpRSxFQUFFLEVBQUUsRUFBRSxJQUFJLEVBQUUsaUVBQWlFLEVBQUUsRUFBRSxFQUFFLElBQUksRUFBRSxpRUFBaUUsRUFBRSxFQUFFLEVBQUUsSUFBSSxFQUFFLGlFQUFpRSxFQUFFLEVBQUUsRUFBRSxJQUFJLEVBQUUsaUVBQWlFLEVBQUUsRUFBRSxFQUFFLElBQUksRUFBRSxpRUFBaUUsRUFBRSxFQUFFLEVBQUUsSUFBSSxFQUFFLGlFQUFpRSxFQUFFLEVBQUUsRUFBRSxJQUFJLEVBQUUsaUVBQWlFLEVBQUUsRUFBRSxFQUFFLElBQUksRUFBRSxpRUFBaUUsRUFBRSxFQUFFLEVBQUUsSUFBSSxFQUFFLGlFQUFpRSxFQUFFLEVBQUUsRUFBRSxJQUFJLEVBQUUsaUVBQWlFLEVBQUUsRUFBRSxFQUFFLElBQUksRUFBRSxpRUFBaUUsRUFBRSxFQUFFLEVBQUUsSUFBSSxFQUFFLGlFQUFpRSxFQUFFLEVBQUUsRUFBRSxJQUFJLEVBQUUsaUVBQWlFLEVBQUUsRUFBRSxFQUFFLElBQUksRUFBRSxpRUFBaUUsRUFBRSxFQUFFLEVBQUUsSUFBSSxFQUFFLGlFQUFpRSxFQUFFLEVBQUUsRUFBRSxJQUFJLEVBQUUsaUVBQWlFLEVBQUUsRUFBRSxFQUFFLElBQUksRUFBRSxpRUFBaUUsRUFBRSxFQUFFLEVBQUUsSUFBSSxFQUFFLGlFQUFpRSxFQUFFLEVBQUUsRUFBRSxJQUFJLEVBQUUsaUVBQWlFLEVBQUUsRUFBRSxFQUFFLElBQUksRUFBRSxpRUFBaUUsRUFBRSxFQUFFLEVBQUUsSUFBSSxFQUFFLGlFQUFpRSxFQUFFLEVBQUUsRUFBRSxJQUFJLEVBQUUsaUVBQWlFLEVBQUUsRUFBRSxFQUFFLElBQUksRUFBRSxpRUFBaUUsRUFBRSxFQUFFLEVBQUUsSUFBSSxFQUFFLGlFQUFpRSxFQUFFLEVBQUUsRUFBRSxJQUFJLEVBQUUsaUVBQWlFLEVBQUUsRUFBRSxFQUFFLElBQUksRUFBRSxpRUFBaUUsRUFBRSxFQUFFLEVBQUUsSUFBSSxFQUFFLGlFQUFpRSxFQUFFLEVBQUUsRUFBRSxJQUFJLEVBQUUsaUVBQWlFLEVBQUUsRUFBRSxFQUFFLElBQUksRUFBRSxpRUFBaUUsRUFBRSxFQUFFLEVBQUUsSUFBSSxFQUFFLGlFQUFpRSxFQUFFLEVBQUUsRUFBRSxJQUFJLEVBQUUsaUVBQWlFLEVBQUUsRUFBRSxFQUFFLElBQUksRUFBRSxpRUFBaUUsRUFBRSxFQUFFLEVBQUUsSUFBSSxFQUFFLGlFQUFpRSxFQUFFLEVBQUUsRUFBRSxJQUFJLEVBQUUsaUVBQWlFLEVBQUUsRUFBRSxFQUFFLElBQUksRUFBRSxpRUFBaUUsRUFBRSxFQUFFLEVBQUUsSUFBSSxFQUFFLGlFQUFpRSxFQUFFLEVBQUUsRUFBRSxJQUFJLEVBQUUsaUVBQWlFLEVBQUUsRUFBRSxFQUFFLElBQUksRUFBRSxpRUFBaUUsRUFBRSxFQUFFLEVBQUUsSUFBSSxFQUFFLGlFQUFpRSxFQUFFLEVBQUUsRUFBRSxJQUFJLEVBQUUsaUVBQWlFLEVBQUUsQ0FBQyxFQUFFLENBQUM7UUFDcm1JLElBQUksR0FBRyxNQUFNLENBQUMsWUFBWSxDQUFDLElBQUksRUFBRSxTQUFTLENBQUMsQ0FBQztRQUM1QyxLQUFLLENBQUMsZ0NBQWdDLENBQUMsWUFBWSxFQUFFLElBQUksRUFBRSxjQUFjLEVBQUUsSUFBSSxDQUFDLENBQUM7SUFDckYsQ0FBQzs7QUEzRkwsNEVBNEZDO0FBL0VHLGdCQUFnQjtBQUNPLDZDQUFZLEdBQUcsdURBQXVELENBQUMifQ==