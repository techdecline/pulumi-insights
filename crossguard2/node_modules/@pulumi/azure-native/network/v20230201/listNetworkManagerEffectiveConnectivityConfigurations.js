"use strict";
// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***
Object.defineProperty(exports, "__esModule", { value: true });
exports.listNetworkManagerEffectiveConnectivityConfigurationsOutput = exports.listNetworkManagerEffectiveConnectivityConfigurations = void 0;
const pulumi = require("@pulumi/pulumi");
const utilities = require("../../utilities");
/**
 * List all effective connectivity configurations applied on a virtual network.
 */
function listNetworkManagerEffectiveConnectivityConfigurations(args, opts) {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("azure-native:network/v20230201:listNetworkManagerEffectiveConnectivityConfigurations", {
        "resourceGroupName": args.resourceGroupName,
        "skipToken": args.skipToken,
        "top": args.top,
        "virtualNetworkName": args.virtualNetworkName,
    }, opts);
}
exports.listNetworkManagerEffectiveConnectivityConfigurations = listNetworkManagerEffectiveConnectivityConfigurations;
/**
 * List all effective connectivity configurations applied on a virtual network.
 */
function listNetworkManagerEffectiveConnectivityConfigurationsOutput(args, opts) {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invokeOutput("azure-native:network/v20230201:listNetworkManagerEffectiveConnectivityConfigurations", {
        "resourceGroupName": args.resourceGroupName,
        "skipToken": args.skipToken,
        "top": args.top,
        "virtualNetworkName": args.virtualNetworkName,
    }, opts);
}
exports.listNetworkManagerEffectiveConnectivityConfigurationsOutput = listNetworkManagerEffectiveConnectivityConfigurationsOutput;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibGlzdE5ldHdvcmtNYW5hZ2VyRWZmZWN0aXZlQ29ubmVjdGl2aXR5Q29uZmlndXJhdGlvbnMuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi9uZXR3b3JrL3YyMDIzMDIwMS9saXN0TmV0d29ya01hbmFnZXJFZmZlY3RpdmVDb25uZWN0aXZpdHlDb25maWd1cmF0aW9ucy50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiO0FBQUEsc0VBQXNFO0FBQ3RFLGlGQUFpRjs7O0FBRWpGLHlDQUF5QztBQUl6Qyw2Q0FBNkM7QUFFN0M7O0dBRUc7QUFDSCxTQUFnQixxREFBcUQsQ0FBQyxJQUErRCxFQUFFLElBQTJCO0lBQzlKLElBQUksR0FBRyxNQUFNLENBQUMsWUFBWSxDQUFDLFNBQVMsQ0FBQyxvQkFBb0IsRUFBRSxFQUFFLElBQUksSUFBSSxFQUFFLENBQUMsQ0FBQztJQUN6RSxPQUFPLE1BQU0sQ0FBQyxPQUFPLENBQUMsTUFBTSxDQUFDLHNGQUFzRixFQUFFO1FBQ2pILG1CQUFtQixFQUFFLElBQUksQ0FBQyxpQkFBaUI7UUFDM0MsV0FBVyxFQUFFLElBQUksQ0FBQyxTQUFTO1FBQzNCLEtBQUssRUFBRSxJQUFJLENBQUMsR0FBRztRQUNmLG9CQUFvQixFQUFFLElBQUksQ0FBQyxrQkFBa0I7S0FDaEQsRUFBRSxJQUFJLENBQUMsQ0FBQztBQUNiLENBQUM7QUFSRCxzSEFRQztBQWtDRDs7R0FFRztBQUNILFNBQWdCLDJEQUEyRCxDQUFDLElBQXFFLEVBQUUsSUFBaUM7SUFDaEwsSUFBSSxHQUFHLE1BQU0sQ0FBQyxZQUFZLENBQUMsU0FBUyxDQUFDLG9CQUFvQixFQUFFLEVBQUUsSUFBSSxJQUFJLEVBQUUsQ0FBQyxDQUFDO0lBQ3pFLE9BQU8sTUFBTSxDQUFDLE9BQU8sQ0FBQyxZQUFZLENBQUMsc0ZBQXNGLEVBQUU7UUFDdkgsbUJBQW1CLEVBQUUsSUFBSSxDQUFDLGlCQUFpQjtRQUMzQyxXQUFXLEVBQUUsSUFBSSxDQUFDLFNBQVM7UUFDM0IsS0FBSyxFQUFFLElBQUksQ0FBQyxHQUFHO1FBQ2Ysb0JBQW9CLEVBQUUsSUFBSSxDQUFDLGtCQUFrQjtLQUNoRCxFQUFFLElBQUksQ0FBQyxDQUFDO0FBQ2IsQ0FBQztBQVJELGtJQVFDIn0=