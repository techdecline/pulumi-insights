"use strict";
// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***
Object.defineProperty(exports, "__esModule", { value: true });
exports.getVirtualNetworkGatewayVpnclientIpsecParametersOutput = exports.getVirtualNetworkGatewayVpnclientIpsecParameters = void 0;
const pulumi = require("@pulumi/pulumi");
const utilities = require("../../utilities");
/**
 * The Get VpnclientIpsecParameters operation retrieves information about the vpnclient ipsec policy for P2S client of virtual network gateway in the specified resource group through Network resource provider.
 */
function getVirtualNetworkGatewayVpnclientIpsecParameters(args, opts) {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("azure-native:network/v20230201:getVirtualNetworkGatewayVpnclientIpsecParameters", {
        "resourceGroupName": args.resourceGroupName,
        "virtualNetworkGatewayName": args.virtualNetworkGatewayName,
    }, opts);
}
exports.getVirtualNetworkGatewayVpnclientIpsecParameters = getVirtualNetworkGatewayVpnclientIpsecParameters;
/**
 * The Get VpnclientIpsecParameters operation retrieves information about the vpnclient ipsec policy for P2S client of virtual network gateway in the specified resource group through Network resource provider.
 */
function getVirtualNetworkGatewayVpnclientIpsecParametersOutput(args, opts) {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invokeOutput("azure-native:network/v20230201:getVirtualNetworkGatewayVpnclientIpsecParameters", {
        "resourceGroupName": args.resourceGroupName,
        "virtualNetworkGatewayName": args.virtualNetworkGatewayName,
    }, opts);
}
exports.getVirtualNetworkGatewayVpnclientIpsecParametersOutput = getVirtualNetworkGatewayVpnclientIpsecParametersOutput;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZ2V0VmlydHVhbE5ldHdvcmtHYXRld2F5VnBuY2xpZW50SXBzZWNQYXJhbWV0ZXJzLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vbmV0d29yay92MjAyMzAyMDEvZ2V0VmlydHVhbE5ldHdvcmtHYXRld2F5VnBuY2xpZW50SXBzZWNQYXJhbWV0ZXJzLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7QUFBQSxzRUFBc0U7QUFDdEUsaUZBQWlGOzs7QUFFakYseUNBQXlDO0FBQ3pDLDZDQUE2QztBQUU3Qzs7R0FFRztBQUNILFNBQWdCLGdEQUFnRCxDQUFDLElBQTBELEVBQUUsSUFBMkI7SUFDcEosSUFBSSxHQUFHLE1BQU0sQ0FBQyxZQUFZLENBQUMsU0FBUyxDQUFDLG9CQUFvQixFQUFFLEVBQUUsSUFBSSxJQUFJLEVBQUUsQ0FBQyxDQUFDO0lBQ3pFLE9BQU8sTUFBTSxDQUFDLE9BQU8sQ0FBQyxNQUFNLENBQUMsaUZBQWlGLEVBQUU7UUFDNUcsbUJBQW1CLEVBQUUsSUFBSSxDQUFDLGlCQUFpQjtRQUMzQywyQkFBMkIsRUFBRSxJQUFJLENBQUMseUJBQXlCO0tBQzlELEVBQUUsSUFBSSxDQUFDLENBQUM7QUFDYixDQUFDO0FBTkQsNEdBTUM7QUFrREQ7O0dBRUc7QUFDSCxTQUFnQixzREFBc0QsQ0FBQyxJQUFnRSxFQUFFLElBQWlDO0lBQ3RLLElBQUksR0FBRyxNQUFNLENBQUMsWUFBWSxDQUFDLFNBQVMsQ0FBQyxvQkFBb0IsRUFBRSxFQUFFLElBQUksSUFBSSxFQUFFLENBQUMsQ0FBQztJQUN6RSxPQUFPLE1BQU0sQ0FBQyxPQUFPLENBQUMsWUFBWSxDQUFDLGlGQUFpRixFQUFFO1FBQ2xILG1CQUFtQixFQUFFLElBQUksQ0FBQyxpQkFBaUI7UUFDM0MsMkJBQTJCLEVBQUUsSUFBSSxDQUFDLHlCQUF5QjtLQUM5RCxFQUFFLElBQUksQ0FBQyxDQUFDO0FBQ2IsQ0FBQztBQU5ELHdIQU1DIn0=