import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../../types/input";
import * as outputs from "../../types/output";
import * as enums from "../../types/enums";
/**
 * Differentiated Services Code Point configuration for any given network interface
 */
export declare class DscpConfiguration extends pulumi.CustomResource {
    /**
     * Get an existing DscpConfiguration resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    static get(name: string, id: pulumi.Input<pulumi.ID>, opts?: pulumi.CustomResourceOptions): DscpConfiguration;
    /**
     * Returns true if the given object is an instance of DscpConfiguration.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    static isInstance(obj: any): obj is DscpConfiguration;
    /**
     * Associated Network Interfaces to the DSCP Configuration.
     */
    readonly associatedNetworkInterfaces: pulumi.Output<outputs.network.v20230401.NetworkInterfaceResponse[]>;
    /**
     * Destination IP ranges.
     */
    readonly destinationIpRanges: pulumi.Output<outputs.network.v20230401.QosIpRangeResponse[] | undefined>;
    /**
     * Destination port ranges.
     */
    readonly destinationPortRanges: pulumi.Output<outputs.network.v20230401.QosPortRangeResponse[] | undefined>;
    /**
     * A unique read-only string that changes whenever the resource is updated.
     */
    readonly etag: pulumi.Output<string>;
    /**
     * Resource location.
     */
    readonly location: pulumi.Output<string | undefined>;
    /**
     * List of markings to be used in the configuration.
     */
    readonly markings: pulumi.Output<number[] | undefined>;
    /**
     * Resource name.
     */
    readonly name: pulumi.Output<string>;
    /**
     * RNM supported protocol types.
     */
    readonly protocol: pulumi.Output<string | undefined>;
    /**
     * The provisioning state of the DSCP Configuration resource.
     */
    readonly provisioningState: pulumi.Output<string>;
    /**
     * Qos Collection ID generated by RNM.
     */
    readonly qosCollectionId: pulumi.Output<string>;
    /**
     * QoS object definitions
     */
    readonly qosDefinitionCollection: pulumi.Output<outputs.network.v20230401.QosDefinitionResponse[] | undefined>;
    /**
     * The resource GUID property of the DSCP Configuration resource.
     */
    readonly resourceGuid: pulumi.Output<string>;
    /**
     * Source IP ranges.
     */
    readonly sourceIpRanges: pulumi.Output<outputs.network.v20230401.QosIpRangeResponse[] | undefined>;
    /**
     * Sources port ranges.
     */
    readonly sourcePortRanges: pulumi.Output<outputs.network.v20230401.QosPortRangeResponse[] | undefined>;
    /**
     * Resource tags.
     */
    readonly tags: pulumi.Output<{
        [key: string]: string;
    } | undefined>;
    /**
     * Resource type.
     */
    readonly type: pulumi.Output<string>;
    /**
     * Create a DscpConfiguration resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: DscpConfigurationArgs, opts?: pulumi.CustomResourceOptions);
}
/**
 * The set of arguments for constructing a DscpConfiguration resource.
 */
export interface DscpConfigurationArgs {
    /**
     * Destination IP ranges.
     */
    destinationIpRanges?: pulumi.Input<pulumi.Input<inputs.network.v20230401.QosIpRangeArgs>[]>;
    /**
     * Destination port ranges.
     */
    destinationPortRanges?: pulumi.Input<pulumi.Input<inputs.network.v20230401.QosPortRangeArgs>[]>;
    /**
     * The name of the resource.
     */
    dscpConfigurationName?: pulumi.Input<string>;
    /**
     * Resource ID.
     */
    id?: pulumi.Input<string>;
    /**
     * Resource location.
     */
    location?: pulumi.Input<string>;
    /**
     * List of markings to be used in the configuration.
     */
    markings?: pulumi.Input<pulumi.Input<number>[]>;
    /**
     * RNM supported protocol types.
     */
    protocol?: pulumi.Input<string | enums.network.v20230401.ProtocolType>;
    /**
     * QoS object definitions
     */
    qosDefinitionCollection?: pulumi.Input<pulumi.Input<inputs.network.v20230401.QosDefinitionArgs>[]>;
    /**
     * The name of the resource group.
     */
    resourceGroupName: pulumi.Input<string>;
    /**
     * Source IP ranges.
     */
    sourceIpRanges?: pulumi.Input<pulumi.Input<inputs.network.v20230401.QosIpRangeArgs>[]>;
    /**
     * Sources port ranges.
     */
    sourcePortRanges?: pulumi.Input<pulumi.Input<inputs.network.v20230401.QosPortRangeArgs>[]>;
    /**
     * Resource tags.
     */
    tags?: pulumi.Input<{
        [key: string]: pulumi.Input<string>;
    }>;
}
