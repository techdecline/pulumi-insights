export { AdminRuleArgs } from "./adminRule";
export type AdminRule = import("./adminRule").AdminRule;
export declare const AdminRule: typeof import("./adminRule").AdminRule;
export { AdminRuleCollectionArgs } from "./adminRuleCollection";
export type AdminRuleCollection = import("./adminRuleCollection").AdminRuleCollection;
export declare const AdminRuleCollection: typeof import("./adminRuleCollection").AdminRuleCollection;
export { ApplicationGatewayArgs } from "./applicationGateway";
export type ApplicationGateway = import("./applicationGateway").ApplicationGateway;
export declare const ApplicationGateway: typeof import("./applicationGateway").ApplicationGateway;
export { ApplicationGatewayPrivateEndpointConnectionArgs } from "./applicationGatewayPrivateEndpointConnection";
export type ApplicationGatewayPrivateEndpointConnection = import("./applicationGatewayPrivateEndpointConnection").ApplicationGatewayPrivateEndpointConnection;
export declare const ApplicationGatewayPrivateEndpointConnection: typeof import("./applicationGatewayPrivateEndpointConnection").ApplicationGatewayPrivateEndpointConnection;
export { ApplicationSecurityGroupArgs } from "./applicationSecurityGroup";
export type ApplicationSecurityGroup = import("./applicationSecurityGroup").ApplicationSecurityGroup;
export declare const ApplicationSecurityGroup: typeof import("./applicationSecurityGroup").ApplicationSecurityGroup;
export { AzureFirewallArgs } from "./azureFirewall";
export type AzureFirewall = import("./azureFirewall").AzureFirewall;
export declare const AzureFirewall: typeof import("./azureFirewall").AzureFirewall;
export { BastionHostArgs } from "./bastionHost";
export type BastionHost = import("./bastionHost").BastionHost;
export declare const BastionHost: typeof import("./bastionHost").BastionHost;
export { ConfigurationPolicyGroupArgs } from "./configurationPolicyGroup";
export type ConfigurationPolicyGroup = import("./configurationPolicyGroup").ConfigurationPolicyGroup;
export declare const ConfigurationPolicyGroup: typeof import("./configurationPolicyGroup").ConfigurationPolicyGroup;
export { ConnectionMonitorArgs } from "./connectionMonitor";
export type ConnectionMonitor = import("./connectionMonitor").ConnectionMonitor;
export declare const ConnectionMonitor: typeof import("./connectionMonitor").ConnectionMonitor;
export { ConnectivityConfigurationArgs } from "./connectivityConfiguration";
export type ConnectivityConfiguration = import("./connectivityConfiguration").ConnectivityConfiguration;
export declare const ConnectivityConfiguration: typeof import("./connectivityConfiguration").ConnectivityConfiguration;
export { CustomIPPrefixArgs } from "./customIPPrefix";
export type CustomIPPrefix = import("./customIPPrefix").CustomIPPrefix;
export declare const CustomIPPrefix: typeof import("./customIPPrefix").CustomIPPrefix;
export { DdosCustomPolicyArgs } from "./ddosCustomPolicy";
export type DdosCustomPolicy = import("./ddosCustomPolicy").DdosCustomPolicy;
export declare const DdosCustomPolicy: typeof import("./ddosCustomPolicy").DdosCustomPolicy;
export { DdosProtectionPlanArgs } from "./ddosProtectionPlan";
export type DdosProtectionPlan = import("./ddosProtectionPlan").DdosProtectionPlan;
export declare const DdosProtectionPlan: typeof import("./ddosProtectionPlan").DdosProtectionPlan;
export { DefaultAdminRuleArgs } from "./defaultAdminRule";
export type DefaultAdminRule = import("./defaultAdminRule").DefaultAdminRule;
export declare const DefaultAdminRule: typeof import("./defaultAdminRule").DefaultAdminRule;
export { DscpConfigurationArgs } from "./dscpConfiguration";
export type DscpConfiguration = import("./dscpConfiguration").DscpConfiguration;
export declare const DscpConfiguration: typeof import("./dscpConfiguration").DscpConfiguration;
export { ExpressRouteCircuitArgs } from "./expressRouteCircuit";
export type ExpressRouteCircuit = import("./expressRouteCircuit").ExpressRouteCircuit;
export declare const ExpressRouteCircuit: typeof import("./expressRouteCircuit").ExpressRouteCircuit;
export { ExpressRouteCircuitAuthorizationArgs } from "./expressRouteCircuitAuthorization";
export type ExpressRouteCircuitAuthorization = import("./expressRouteCircuitAuthorization").ExpressRouteCircuitAuthorization;
export declare const ExpressRouteCircuitAuthorization: typeof import("./expressRouteCircuitAuthorization").ExpressRouteCircuitAuthorization;
export { ExpressRouteCircuitConnectionArgs } from "./expressRouteCircuitConnection";
export type ExpressRouteCircuitConnection = import("./expressRouteCircuitConnection").ExpressRouteCircuitConnection;
export declare const ExpressRouteCircuitConnection: typeof import("./expressRouteCircuitConnection").ExpressRouteCircuitConnection;
export { ExpressRouteCircuitPeeringArgs } from "./expressRouteCircuitPeering";
export type ExpressRouteCircuitPeering = import("./expressRouteCircuitPeering").ExpressRouteCircuitPeering;
export declare const ExpressRouteCircuitPeering: typeof import("./expressRouteCircuitPeering").ExpressRouteCircuitPeering;
export { ExpressRouteConnectionArgs } from "./expressRouteConnection";
export type ExpressRouteConnection = import("./expressRouteConnection").ExpressRouteConnection;
export declare const ExpressRouteConnection: typeof import("./expressRouteConnection").ExpressRouteConnection;
export { ExpressRouteCrossConnectionPeeringArgs } from "./expressRouteCrossConnectionPeering";
export type ExpressRouteCrossConnectionPeering = import("./expressRouteCrossConnectionPeering").ExpressRouteCrossConnectionPeering;
export declare const ExpressRouteCrossConnectionPeering: typeof import("./expressRouteCrossConnectionPeering").ExpressRouteCrossConnectionPeering;
export { ExpressRouteGatewayArgs } from "./expressRouteGateway";
export type ExpressRouteGateway = import("./expressRouteGateway").ExpressRouteGateway;
export declare const ExpressRouteGateway: typeof import("./expressRouteGateway").ExpressRouteGateway;
export { ExpressRoutePortArgs } from "./expressRoutePort";
export type ExpressRoutePort = import("./expressRoutePort").ExpressRoutePort;
export declare const ExpressRoutePort: typeof import("./expressRoutePort").ExpressRoutePort;
export { ExpressRoutePortAuthorizationArgs } from "./expressRoutePortAuthorization";
export type ExpressRoutePortAuthorization = import("./expressRoutePortAuthorization").ExpressRoutePortAuthorization;
export declare const ExpressRoutePortAuthorization: typeof import("./expressRoutePortAuthorization").ExpressRoutePortAuthorization;
export { FirewallPolicyArgs } from "./firewallPolicy";
export type FirewallPolicy = import("./firewallPolicy").FirewallPolicy;
export declare const FirewallPolicy: typeof import("./firewallPolicy").FirewallPolicy;
export { FirewallPolicyRuleCollectionGroupArgs } from "./firewallPolicyRuleCollectionGroup";
export type FirewallPolicyRuleCollectionGroup = import("./firewallPolicyRuleCollectionGroup").FirewallPolicyRuleCollectionGroup;
export declare const FirewallPolicyRuleCollectionGroup: typeof import("./firewallPolicyRuleCollectionGroup").FirewallPolicyRuleCollectionGroup;
export { FlowLogArgs } from "./flowLog";
export type FlowLog = import("./flowLog").FlowLog;
export declare const FlowLog: typeof import("./flowLog").FlowLog;
export { GetActiveSessionsArgs, GetActiveSessionsResult, GetActiveSessionsOutputArgs } from "./getActiveSessions";
export declare const getActiveSessions: typeof import("./getActiveSessions").getActiveSessions;
export declare const getActiveSessionsOutput: typeof import("./getActiveSessions").getActiveSessionsOutput;
export { GetAdminRuleArgs, GetAdminRuleResult, GetAdminRuleOutputArgs } from "./getAdminRule";
export declare const getAdminRule: typeof import("./getAdminRule").getAdminRule;
export declare const getAdminRuleOutput: typeof import("./getAdminRule").getAdminRuleOutput;
export { GetAdminRuleCollectionArgs, GetAdminRuleCollectionResult, GetAdminRuleCollectionOutputArgs } from "./getAdminRuleCollection";
export declare const getAdminRuleCollection: typeof import("./getAdminRuleCollection").getAdminRuleCollection;
export declare const getAdminRuleCollectionOutput: typeof import("./getAdminRuleCollection").getAdminRuleCollectionOutput;
export { GetApplicationGatewayArgs, GetApplicationGatewayResult, GetApplicationGatewayOutputArgs } from "./getApplicationGateway";
export declare const getApplicationGateway: typeof import("./getApplicationGateway").getApplicationGateway;
export declare const getApplicationGatewayOutput: typeof import("./getApplicationGateway").getApplicationGatewayOutput;
export { GetApplicationGatewayBackendHealthOnDemandArgs, GetApplicationGatewayBackendHealthOnDemandResult, GetApplicationGatewayBackendHealthOnDemandOutputArgs } from "./getApplicationGatewayBackendHealthOnDemand";
export declare const getApplicationGatewayBackendHealthOnDemand: typeof import("./getApplicationGatewayBackendHealthOnDemand").getApplicationGatewayBackendHealthOnDemand;
export declare const getApplicationGatewayBackendHealthOnDemandOutput: typeof import("./getApplicationGatewayBackendHealthOnDemand").getApplicationGatewayBackendHealthOnDemandOutput;
export { GetApplicationGatewayPrivateEndpointConnectionArgs, GetApplicationGatewayPrivateEndpointConnectionResult, GetApplicationGatewayPrivateEndpointConnectionOutputArgs } from "./getApplicationGatewayPrivateEndpointConnection";
export declare const getApplicationGatewayPrivateEndpointConnection: typeof import("./getApplicationGatewayPrivateEndpointConnection").getApplicationGatewayPrivateEndpointConnection;
export declare const getApplicationGatewayPrivateEndpointConnectionOutput: typeof import("./getApplicationGatewayPrivateEndpointConnection").getApplicationGatewayPrivateEndpointConnectionOutput;
export { GetApplicationSecurityGroupArgs, GetApplicationSecurityGroupResult, GetApplicationSecurityGroupOutputArgs } from "./getApplicationSecurityGroup";
export declare const getApplicationSecurityGroup: typeof import("./getApplicationSecurityGroup").getApplicationSecurityGroup;
export declare const getApplicationSecurityGroupOutput: typeof import("./getApplicationSecurityGroup").getApplicationSecurityGroupOutput;
export { GetAzureFirewallArgs, GetAzureFirewallResult, GetAzureFirewallOutputArgs } from "./getAzureFirewall";
export declare const getAzureFirewall: typeof import("./getAzureFirewall").getAzureFirewall;
export declare const getAzureFirewallOutput: typeof import("./getAzureFirewall").getAzureFirewallOutput;
export { GetBastionHostArgs, GetBastionHostResult, GetBastionHostOutputArgs } from "./getBastionHost";
export declare const getBastionHost: typeof import("./getBastionHost").getBastionHost;
export declare const getBastionHostOutput: typeof import("./getBastionHost").getBastionHostOutput;
export { GetBastionShareableLinkArgs, GetBastionShareableLinkResult, GetBastionShareableLinkOutputArgs } from "./getBastionShareableLink";
export declare const getBastionShareableLink: typeof import("./getBastionShareableLink").getBastionShareableLink;
export declare const getBastionShareableLinkOutput: typeof import("./getBastionShareableLink").getBastionShareableLinkOutput;
export { GetConfigurationPolicyGroupArgs, GetConfigurationPolicyGroupResult, GetConfigurationPolicyGroupOutputArgs } from "./getConfigurationPolicyGroup";
export declare const getConfigurationPolicyGroup: typeof import("./getConfigurationPolicyGroup").getConfigurationPolicyGroup;
export declare const getConfigurationPolicyGroupOutput: typeof import("./getConfigurationPolicyGroup").getConfigurationPolicyGroupOutput;
export { GetConnectionMonitorArgs, GetConnectionMonitorResult, GetConnectionMonitorOutputArgs } from "./getConnectionMonitor";
export declare const getConnectionMonitor: typeof import("./getConnectionMonitor").getConnectionMonitor;
export declare const getConnectionMonitorOutput: typeof import("./getConnectionMonitor").getConnectionMonitorOutput;
export { GetConnectivityConfigurationArgs, GetConnectivityConfigurationResult, GetConnectivityConfigurationOutputArgs } from "./getConnectivityConfiguration";
export declare const getConnectivityConfiguration: typeof import("./getConnectivityConfiguration").getConnectivityConfiguration;
export declare const getConnectivityConfigurationOutput: typeof import("./getConnectivityConfiguration").getConnectivityConfigurationOutput;
export { GetCustomIPPrefixArgs, GetCustomIPPrefixResult, GetCustomIPPrefixOutputArgs } from "./getCustomIPPrefix";
export declare const getCustomIPPrefix: typeof import("./getCustomIPPrefix").getCustomIPPrefix;
export declare const getCustomIPPrefixOutput: typeof import("./getCustomIPPrefix").getCustomIPPrefixOutput;
export { GetDdosCustomPolicyArgs, GetDdosCustomPolicyResult, GetDdosCustomPolicyOutputArgs } from "./getDdosCustomPolicy";
export declare const getDdosCustomPolicy: typeof import("./getDdosCustomPolicy").getDdosCustomPolicy;
export declare const getDdosCustomPolicyOutput: typeof import("./getDdosCustomPolicy").getDdosCustomPolicyOutput;
export { GetDdosProtectionPlanArgs, GetDdosProtectionPlanResult, GetDdosProtectionPlanOutputArgs } from "./getDdosProtectionPlan";
export declare const getDdosProtectionPlan: typeof import("./getDdosProtectionPlan").getDdosProtectionPlan;
export declare const getDdosProtectionPlanOutput: typeof import("./getDdosProtectionPlan").getDdosProtectionPlanOutput;
export { GetDefaultAdminRuleArgs, GetDefaultAdminRuleResult, GetDefaultAdminRuleOutputArgs } from "./getDefaultAdminRule";
export declare const getDefaultAdminRule: typeof import("./getDefaultAdminRule").getDefaultAdminRule;
export declare const getDefaultAdminRuleOutput: typeof import("./getDefaultAdminRule").getDefaultAdminRuleOutput;
export { GetDscpConfigurationArgs, GetDscpConfigurationResult, GetDscpConfigurationOutputArgs } from "./getDscpConfiguration";
export declare const getDscpConfiguration: typeof import("./getDscpConfiguration").getDscpConfiguration;
export declare const getDscpConfigurationOutput: typeof import("./getDscpConfiguration").getDscpConfigurationOutput;
export { GetExpressRouteCircuitArgs, GetExpressRouteCircuitResult, GetExpressRouteCircuitOutputArgs } from "./getExpressRouteCircuit";
export declare const getExpressRouteCircuit: typeof import("./getExpressRouteCircuit").getExpressRouteCircuit;
export declare const getExpressRouteCircuitOutput: typeof import("./getExpressRouteCircuit").getExpressRouteCircuitOutput;
export { GetExpressRouteCircuitAuthorizationArgs, GetExpressRouteCircuitAuthorizationResult, GetExpressRouteCircuitAuthorizationOutputArgs } from "./getExpressRouteCircuitAuthorization";
export declare const getExpressRouteCircuitAuthorization: typeof import("./getExpressRouteCircuitAuthorization").getExpressRouteCircuitAuthorization;
export declare const getExpressRouteCircuitAuthorizationOutput: typeof import("./getExpressRouteCircuitAuthorization").getExpressRouteCircuitAuthorizationOutput;
export { GetExpressRouteCircuitConnectionArgs, GetExpressRouteCircuitConnectionResult, GetExpressRouteCircuitConnectionOutputArgs } from "./getExpressRouteCircuitConnection";
export declare const getExpressRouteCircuitConnection: typeof import("./getExpressRouteCircuitConnection").getExpressRouteCircuitConnection;
export declare const getExpressRouteCircuitConnectionOutput: typeof import("./getExpressRouteCircuitConnection").getExpressRouteCircuitConnectionOutput;
export { GetExpressRouteCircuitPeeringArgs, GetExpressRouteCircuitPeeringResult, GetExpressRouteCircuitPeeringOutputArgs } from "./getExpressRouteCircuitPeering";
export declare const getExpressRouteCircuitPeering: typeof import("./getExpressRouteCircuitPeering").getExpressRouteCircuitPeering;
export declare const getExpressRouteCircuitPeeringOutput: typeof import("./getExpressRouteCircuitPeering").getExpressRouteCircuitPeeringOutput;
export { GetExpressRouteConnectionArgs, GetExpressRouteConnectionResult, GetExpressRouteConnectionOutputArgs } from "./getExpressRouteConnection";
export declare const getExpressRouteConnection: typeof import("./getExpressRouteConnection").getExpressRouteConnection;
export declare const getExpressRouteConnectionOutput: typeof import("./getExpressRouteConnection").getExpressRouteConnectionOutput;
export { GetExpressRouteCrossConnectionPeeringArgs, GetExpressRouteCrossConnectionPeeringResult, GetExpressRouteCrossConnectionPeeringOutputArgs } from "./getExpressRouteCrossConnectionPeering";
export declare const getExpressRouteCrossConnectionPeering: typeof import("./getExpressRouteCrossConnectionPeering").getExpressRouteCrossConnectionPeering;
export declare const getExpressRouteCrossConnectionPeeringOutput: typeof import("./getExpressRouteCrossConnectionPeering").getExpressRouteCrossConnectionPeeringOutput;
export { GetExpressRouteGatewayArgs, GetExpressRouteGatewayResult, GetExpressRouteGatewayOutputArgs } from "./getExpressRouteGateway";
export declare const getExpressRouteGateway: typeof import("./getExpressRouteGateway").getExpressRouteGateway;
export declare const getExpressRouteGatewayOutput: typeof import("./getExpressRouteGateway").getExpressRouteGatewayOutput;
export { GetExpressRoutePortArgs, GetExpressRoutePortResult, GetExpressRoutePortOutputArgs } from "./getExpressRoutePort";
export declare const getExpressRoutePort: typeof import("./getExpressRoutePort").getExpressRoutePort;
export declare const getExpressRoutePortOutput: typeof import("./getExpressRoutePort").getExpressRoutePortOutput;
export { GetExpressRoutePortAuthorizationArgs, GetExpressRoutePortAuthorizationResult, GetExpressRoutePortAuthorizationOutputArgs } from "./getExpressRoutePortAuthorization";
export declare const getExpressRoutePortAuthorization: typeof import("./getExpressRoutePortAuthorization").getExpressRoutePortAuthorization;
export declare const getExpressRoutePortAuthorizationOutput: typeof import("./getExpressRoutePortAuthorization").getExpressRoutePortAuthorizationOutput;
export { GetFirewallPolicyArgs, GetFirewallPolicyResult, GetFirewallPolicyOutputArgs } from "./getFirewallPolicy";
export declare const getFirewallPolicy: typeof import("./getFirewallPolicy").getFirewallPolicy;
export declare const getFirewallPolicyOutput: typeof import("./getFirewallPolicy").getFirewallPolicyOutput;
export { GetFirewallPolicyRuleCollectionGroupArgs, GetFirewallPolicyRuleCollectionGroupResult, GetFirewallPolicyRuleCollectionGroupOutputArgs } from "./getFirewallPolicyRuleCollectionGroup";
export declare const getFirewallPolicyRuleCollectionGroup: typeof import("./getFirewallPolicyRuleCollectionGroup").getFirewallPolicyRuleCollectionGroup;
export declare const getFirewallPolicyRuleCollectionGroupOutput: typeof import("./getFirewallPolicyRuleCollectionGroup").getFirewallPolicyRuleCollectionGroupOutput;
export { GetFlowLogArgs, GetFlowLogResult, GetFlowLogOutputArgs } from "./getFlowLog";
export declare const getFlowLog: typeof import("./getFlowLog").getFlowLog;
export declare const getFlowLogOutput: typeof import("./getFlowLog").getFlowLogOutput;
export { GetHubRouteTableArgs, GetHubRouteTableResult, GetHubRouteTableOutputArgs } from "./getHubRouteTable";
export declare const getHubRouteTable: typeof import("./getHubRouteTable").getHubRouteTable;
export declare const getHubRouteTableOutput: typeof import("./getHubRouteTable").getHubRouteTableOutput;
export { GetHubVirtualNetworkConnectionArgs, GetHubVirtualNetworkConnectionResult, GetHubVirtualNetworkConnectionOutputArgs } from "./getHubVirtualNetworkConnection";
export declare const getHubVirtualNetworkConnection: typeof import("./getHubVirtualNetworkConnection").getHubVirtualNetworkConnection;
export declare const getHubVirtualNetworkConnectionOutput: typeof import("./getHubVirtualNetworkConnection").getHubVirtualNetworkConnectionOutput;
export { GetInboundNatRuleArgs, GetInboundNatRuleResult, GetInboundNatRuleOutputArgs } from "./getInboundNatRule";
export declare const getInboundNatRule: typeof import("./getInboundNatRule").getInboundNatRule;
export declare const getInboundNatRuleOutput: typeof import("./getInboundNatRule").getInboundNatRuleOutput;
export { GetIpAllocationArgs, GetIpAllocationResult, GetIpAllocationOutputArgs } from "./getIpAllocation";
export declare const getIpAllocation: typeof import("./getIpAllocation").getIpAllocation;
export declare const getIpAllocationOutput: typeof import("./getIpAllocation").getIpAllocationOutput;
export { GetIpGroupArgs, GetIpGroupResult, GetIpGroupOutputArgs } from "./getIpGroup";
export declare const getIpGroup: typeof import("./getIpGroup").getIpGroup;
export declare const getIpGroupOutput: typeof import("./getIpGroup").getIpGroupOutput;
export { GetLoadBalancerArgs, GetLoadBalancerResult, GetLoadBalancerOutputArgs } from "./getLoadBalancer";
export declare const getLoadBalancer: typeof import("./getLoadBalancer").getLoadBalancer;
export declare const getLoadBalancerOutput: typeof import("./getLoadBalancer").getLoadBalancerOutput;
export { GetLoadBalancerBackendAddressPoolArgs, GetLoadBalancerBackendAddressPoolResult, GetLoadBalancerBackendAddressPoolOutputArgs } from "./getLoadBalancerBackendAddressPool";
export declare const getLoadBalancerBackendAddressPool: typeof import("./getLoadBalancerBackendAddressPool").getLoadBalancerBackendAddressPool;
export declare const getLoadBalancerBackendAddressPoolOutput: typeof import("./getLoadBalancerBackendAddressPool").getLoadBalancerBackendAddressPoolOutput;
export { GetLocalNetworkGatewayArgs, GetLocalNetworkGatewayResult, GetLocalNetworkGatewayOutputArgs } from "./getLocalNetworkGateway";
export declare const getLocalNetworkGateway: typeof import("./getLocalNetworkGateway").getLocalNetworkGateway;
export declare const getLocalNetworkGatewayOutput: typeof import("./getLocalNetworkGateway").getLocalNetworkGatewayOutput;
export { GetManagementGroupNetworkManagerConnectionArgs, GetManagementGroupNetworkManagerConnectionResult, GetManagementGroupNetworkManagerConnectionOutputArgs } from "./getManagementGroupNetworkManagerConnection";
export declare const getManagementGroupNetworkManagerConnection: typeof import("./getManagementGroupNetworkManagerConnection").getManagementGroupNetworkManagerConnection;
export declare const getManagementGroupNetworkManagerConnectionOutput: typeof import("./getManagementGroupNetworkManagerConnection").getManagementGroupNetworkManagerConnectionOutput;
export { GetNatGatewayArgs, GetNatGatewayResult, GetNatGatewayOutputArgs } from "./getNatGateway";
export declare const getNatGateway: typeof import("./getNatGateway").getNatGateway;
export declare const getNatGatewayOutput: typeof import("./getNatGateway").getNatGatewayOutput;
export { GetNatRuleArgs, GetNatRuleResult, GetNatRuleOutputArgs } from "./getNatRule";
export declare const getNatRule: typeof import("./getNatRule").getNatRule;
export declare const getNatRuleOutput: typeof import("./getNatRule").getNatRuleOutput;
export { GetNetworkGroupArgs, GetNetworkGroupResult, GetNetworkGroupOutputArgs } from "./getNetworkGroup";
export declare const getNetworkGroup: typeof import("./getNetworkGroup").getNetworkGroup;
export declare const getNetworkGroupOutput: typeof import("./getNetworkGroup").getNetworkGroupOutput;
export { GetNetworkInterfaceArgs, GetNetworkInterfaceResult, GetNetworkInterfaceOutputArgs } from "./getNetworkInterface";
export declare const getNetworkInterface: typeof import("./getNetworkInterface").getNetworkInterface;
export declare const getNetworkInterfaceOutput: typeof import("./getNetworkInterface").getNetworkInterfaceOutput;
export { GetNetworkInterfaceTapConfigurationArgs, GetNetworkInterfaceTapConfigurationResult, GetNetworkInterfaceTapConfigurationOutputArgs } from "./getNetworkInterfaceTapConfiguration";
export declare const getNetworkInterfaceTapConfiguration: typeof import("./getNetworkInterfaceTapConfiguration").getNetworkInterfaceTapConfiguration;
export declare const getNetworkInterfaceTapConfigurationOutput: typeof import("./getNetworkInterfaceTapConfiguration").getNetworkInterfaceTapConfigurationOutput;
export { GetNetworkManagerArgs, GetNetworkManagerResult, GetNetworkManagerOutputArgs } from "./getNetworkManager";
export declare const getNetworkManager: typeof import("./getNetworkManager").getNetworkManager;
export declare const getNetworkManagerOutput: typeof import("./getNetworkManager").getNetworkManagerOutput;
export { GetNetworkProfileArgs, GetNetworkProfileResult, GetNetworkProfileOutputArgs } from "./getNetworkProfile";
export declare const getNetworkProfile: typeof import("./getNetworkProfile").getNetworkProfile;
export declare const getNetworkProfileOutput: typeof import("./getNetworkProfile").getNetworkProfileOutput;
export { GetNetworkSecurityGroupArgs, GetNetworkSecurityGroupResult, GetNetworkSecurityGroupOutputArgs } from "./getNetworkSecurityGroup";
export declare const getNetworkSecurityGroup: typeof import("./getNetworkSecurityGroup").getNetworkSecurityGroup;
export declare const getNetworkSecurityGroupOutput: typeof import("./getNetworkSecurityGroup").getNetworkSecurityGroupOutput;
export { GetNetworkVirtualApplianceArgs, GetNetworkVirtualApplianceResult, GetNetworkVirtualApplianceOutputArgs } from "./getNetworkVirtualAppliance";
export declare const getNetworkVirtualAppliance: typeof import("./getNetworkVirtualAppliance").getNetworkVirtualAppliance;
export declare const getNetworkVirtualApplianceOutput: typeof import("./getNetworkVirtualAppliance").getNetworkVirtualApplianceOutput;
export { GetNetworkWatcherArgs, GetNetworkWatcherResult, GetNetworkWatcherOutputArgs } from "./getNetworkWatcher";
export declare const getNetworkWatcher: typeof import("./getNetworkWatcher").getNetworkWatcher;
export declare const getNetworkWatcherOutput: typeof import("./getNetworkWatcher").getNetworkWatcherOutput;
export { GetP2sVpnGatewayArgs, GetP2sVpnGatewayResult, GetP2sVpnGatewayOutputArgs } from "./getP2sVpnGateway";
export declare const getP2sVpnGateway: typeof import("./getP2sVpnGateway").getP2sVpnGateway;
export declare const getP2sVpnGatewayOutput: typeof import("./getP2sVpnGateway").getP2sVpnGatewayOutput;
export { GetP2sVpnGatewayP2sVpnConnectionHealthArgs, GetP2sVpnGatewayP2sVpnConnectionHealthResult, GetP2sVpnGatewayP2sVpnConnectionHealthOutputArgs } from "./getP2sVpnGatewayP2sVpnConnectionHealth";
export declare const getP2sVpnGatewayP2sVpnConnectionHealth: typeof import("./getP2sVpnGatewayP2sVpnConnectionHealth").getP2sVpnGatewayP2sVpnConnectionHealth;
export declare const getP2sVpnGatewayP2sVpnConnectionHealthOutput: typeof import("./getP2sVpnGatewayP2sVpnConnectionHealth").getP2sVpnGatewayP2sVpnConnectionHealthOutput;
export { GetP2sVpnGatewayP2sVpnConnectionHealthDetailedArgs, GetP2sVpnGatewayP2sVpnConnectionHealthDetailedResult, GetP2sVpnGatewayP2sVpnConnectionHealthDetailedOutputArgs } from "./getP2sVpnGatewayP2sVpnConnectionHealthDetailed";
export declare const getP2sVpnGatewayP2sVpnConnectionHealthDetailed: typeof import("./getP2sVpnGatewayP2sVpnConnectionHealthDetailed").getP2sVpnGatewayP2sVpnConnectionHealthDetailed;
export declare const getP2sVpnGatewayP2sVpnConnectionHealthDetailedOutput: typeof import("./getP2sVpnGatewayP2sVpnConnectionHealthDetailed").getP2sVpnGatewayP2sVpnConnectionHealthDetailedOutput;
export { GetPacketCaptureArgs, GetPacketCaptureResult, GetPacketCaptureOutputArgs } from "./getPacketCapture";
export declare const getPacketCapture: typeof import("./getPacketCapture").getPacketCapture;
export declare const getPacketCaptureOutput: typeof import("./getPacketCapture").getPacketCaptureOutput;
export { GetPrivateDnsZoneGroupArgs, GetPrivateDnsZoneGroupResult, GetPrivateDnsZoneGroupOutputArgs } from "./getPrivateDnsZoneGroup";
export declare const getPrivateDnsZoneGroup: typeof import("./getPrivateDnsZoneGroup").getPrivateDnsZoneGroup;
export declare const getPrivateDnsZoneGroupOutput: typeof import("./getPrivateDnsZoneGroup").getPrivateDnsZoneGroupOutput;
export { GetPrivateEndpointArgs, GetPrivateEndpointResult, GetPrivateEndpointOutputArgs } from "./getPrivateEndpoint";
export declare const getPrivateEndpoint: typeof import("./getPrivateEndpoint").getPrivateEndpoint;
export declare const getPrivateEndpointOutput: typeof import("./getPrivateEndpoint").getPrivateEndpointOutput;
export { GetPrivateLinkServiceArgs, GetPrivateLinkServiceResult, GetPrivateLinkServiceOutputArgs } from "./getPrivateLinkService";
export declare const getPrivateLinkService: typeof import("./getPrivateLinkService").getPrivateLinkService;
export declare const getPrivateLinkServiceOutput: typeof import("./getPrivateLinkService").getPrivateLinkServiceOutput;
export { GetPrivateLinkServicePrivateEndpointConnectionArgs, GetPrivateLinkServicePrivateEndpointConnectionResult, GetPrivateLinkServicePrivateEndpointConnectionOutputArgs } from "./getPrivateLinkServicePrivateEndpointConnection";
export declare const getPrivateLinkServicePrivateEndpointConnection: typeof import("./getPrivateLinkServicePrivateEndpointConnection").getPrivateLinkServicePrivateEndpointConnection;
export declare const getPrivateLinkServicePrivateEndpointConnectionOutput: typeof import("./getPrivateLinkServicePrivateEndpointConnection").getPrivateLinkServicePrivateEndpointConnectionOutput;
export { GetPublicIPAddressArgs, GetPublicIPAddressResult, GetPublicIPAddressOutputArgs } from "./getPublicIPAddress";
export declare const getPublicIPAddress: typeof import("./getPublicIPAddress").getPublicIPAddress;
export declare const getPublicIPAddressOutput: typeof import("./getPublicIPAddress").getPublicIPAddressOutput;
export { GetPublicIPPrefixArgs, GetPublicIPPrefixResult, GetPublicIPPrefixOutputArgs } from "./getPublicIPPrefix";
export declare const getPublicIPPrefix: typeof import("./getPublicIPPrefix").getPublicIPPrefix;
export declare const getPublicIPPrefixOutput: typeof import("./getPublicIPPrefix").getPublicIPPrefixOutput;
export { GetRouteArgs, GetRouteResult, GetRouteOutputArgs } from "./getRoute";
export declare const getRoute: typeof import("./getRoute").getRoute;
export declare const getRouteOutput: typeof import("./getRoute").getRouteOutput;
export { GetRouteFilterArgs, GetRouteFilterResult, GetRouteFilterOutputArgs } from "./getRouteFilter";
export declare const getRouteFilter: typeof import("./getRouteFilter").getRouteFilter;
export declare const getRouteFilterOutput: typeof import("./getRouteFilter").getRouteFilterOutput;
export { GetRouteFilterRuleArgs, GetRouteFilterRuleResult, GetRouteFilterRuleOutputArgs } from "./getRouteFilterRule";
export declare const getRouteFilterRule: typeof import("./getRouteFilterRule").getRouteFilterRule;
export declare const getRouteFilterRuleOutput: typeof import("./getRouteFilterRule").getRouteFilterRuleOutput;
export { GetRouteMapArgs, GetRouteMapResult, GetRouteMapOutputArgs } from "./getRouteMap";
export declare const getRouteMap: typeof import("./getRouteMap").getRouteMap;
export declare const getRouteMapOutput: typeof import("./getRouteMap").getRouteMapOutput;
export { GetRouteTableArgs, GetRouteTableResult, GetRouteTableOutputArgs } from "./getRouteTable";
export declare const getRouteTable: typeof import("./getRouteTable").getRouteTable;
export declare const getRouteTableOutput: typeof import("./getRouteTable").getRouteTableOutput;
export { GetRoutingIntentArgs, GetRoutingIntentResult, GetRoutingIntentOutputArgs } from "./getRoutingIntent";
export declare const getRoutingIntent: typeof import("./getRoutingIntent").getRoutingIntent;
export declare const getRoutingIntentOutput: typeof import("./getRoutingIntent").getRoutingIntentOutput;
export { GetScopeConnectionArgs, GetScopeConnectionResult, GetScopeConnectionOutputArgs } from "./getScopeConnection";
export declare const getScopeConnection: typeof import("./getScopeConnection").getScopeConnection;
export declare const getScopeConnectionOutput: typeof import("./getScopeConnection").getScopeConnectionOutput;
export { GetSecurityAdminConfigurationArgs, GetSecurityAdminConfigurationResult, GetSecurityAdminConfigurationOutputArgs } from "./getSecurityAdminConfiguration";
export declare const getSecurityAdminConfiguration: typeof import("./getSecurityAdminConfiguration").getSecurityAdminConfiguration;
export declare const getSecurityAdminConfigurationOutput: typeof import("./getSecurityAdminConfiguration").getSecurityAdminConfigurationOutput;
export { GetSecurityPartnerProviderArgs, GetSecurityPartnerProviderResult, GetSecurityPartnerProviderOutputArgs } from "./getSecurityPartnerProvider";
export declare const getSecurityPartnerProvider: typeof import("./getSecurityPartnerProvider").getSecurityPartnerProvider;
export declare const getSecurityPartnerProviderOutput: typeof import("./getSecurityPartnerProvider").getSecurityPartnerProviderOutput;
export { GetSecurityRuleArgs, GetSecurityRuleResult, GetSecurityRuleOutputArgs } from "./getSecurityRule";
export declare const getSecurityRule: typeof import("./getSecurityRule").getSecurityRule;
export declare const getSecurityRuleOutput: typeof import("./getSecurityRule").getSecurityRuleOutput;
export { GetServiceEndpointPolicyArgs, GetServiceEndpointPolicyResult, GetServiceEndpointPolicyOutputArgs } from "./getServiceEndpointPolicy";
export declare const getServiceEndpointPolicy: typeof import("./getServiceEndpointPolicy").getServiceEndpointPolicy;
export declare const getServiceEndpointPolicyOutput: typeof import("./getServiceEndpointPolicy").getServiceEndpointPolicyOutput;
export { GetServiceEndpointPolicyDefinitionArgs, GetServiceEndpointPolicyDefinitionResult, GetServiceEndpointPolicyDefinitionOutputArgs } from "./getServiceEndpointPolicyDefinition";
export declare const getServiceEndpointPolicyDefinition: typeof import("./getServiceEndpointPolicyDefinition").getServiceEndpointPolicyDefinition;
export declare const getServiceEndpointPolicyDefinitionOutput: typeof import("./getServiceEndpointPolicyDefinition").getServiceEndpointPolicyDefinitionOutput;
export { GetStaticMemberArgs, GetStaticMemberResult, GetStaticMemberOutputArgs } from "./getStaticMember";
export declare const getStaticMember: typeof import("./getStaticMember").getStaticMember;
export declare const getStaticMemberOutput: typeof import("./getStaticMember").getStaticMemberOutput;
export { GetSubnetArgs, GetSubnetResult, GetSubnetOutputArgs } from "./getSubnet";
export declare const getSubnet: typeof import("./getSubnet").getSubnet;
export declare const getSubnetOutput: typeof import("./getSubnet").getSubnetOutput;
export { GetSubscriptionNetworkManagerConnectionArgs, GetSubscriptionNetworkManagerConnectionResult, GetSubscriptionNetworkManagerConnectionOutputArgs } from "./getSubscriptionNetworkManagerConnection";
export declare const getSubscriptionNetworkManagerConnection: typeof import("./getSubscriptionNetworkManagerConnection").getSubscriptionNetworkManagerConnection;
export declare const getSubscriptionNetworkManagerConnectionOutput: typeof import("./getSubscriptionNetworkManagerConnection").getSubscriptionNetworkManagerConnectionOutput;
export { GetVirtualApplianceSiteArgs, GetVirtualApplianceSiteResult, GetVirtualApplianceSiteOutputArgs } from "./getVirtualApplianceSite";
export declare const getVirtualApplianceSite: typeof import("./getVirtualApplianceSite").getVirtualApplianceSite;
export declare const getVirtualApplianceSiteOutput: typeof import("./getVirtualApplianceSite").getVirtualApplianceSiteOutput;
export { GetVirtualHubArgs, GetVirtualHubResult, GetVirtualHubOutputArgs } from "./getVirtualHub";
export declare const getVirtualHub: typeof import("./getVirtualHub").getVirtualHub;
export declare const getVirtualHubOutput: typeof import("./getVirtualHub").getVirtualHubOutput;
export { GetVirtualHubBgpConnectionArgs, GetVirtualHubBgpConnectionResult, GetVirtualHubBgpConnectionOutputArgs } from "./getVirtualHubBgpConnection";
export declare const getVirtualHubBgpConnection: typeof import("./getVirtualHubBgpConnection").getVirtualHubBgpConnection;
export declare const getVirtualHubBgpConnectionOutput: typeof import("./getVirtualHubBgpConnection").getVirtualHubBgpConnectionOutput;
export { GetVirtualHubIpConfigurationArgs, GetVirtualHubIpConfigurationResult, GetVirtualHubIpConfigurationOutputArgs } from "./getVirtualHubIpConfiguration";
export declare const getVirtualHubIpConfiguration: typeof import("./getVirtualHubIpConfiguration").getVirtualHubIpConfiguration;
export declare const getVirtualHubIpConfigurationOutput: typeof import("./getVirtualHubIpConfiguration").getVirtualHubIpConfigurationOutput;
export { GetVirtualHubRouteTableV2Args, GetVirtualHubRouteTableV2Result, GetVirtualHubRouteTableV2OutputArgs } from "./getVirtualHubRouteTableV2";
export declare const getVirtualHubRouteTableV2: typeof import("./getVirtualHubRouteTableV2").getVirtualHubRouteTableV2;
export declare const getVirtualHubRouteTableV2Output: typeof import("./getVirtualHubRouteTableV2").getVirtualHubRouteTableV2Output;
export { GetVirtualNetworkArgs, GetVirtualNetworkResult, GetVirtualNetworkOutputArgs } from "./getVirtualNetwork";
export declare const getVirtualNetwork: typeof import("./getVirtualNetwork").getVirtualNetwork;
export declare const getVirtualNetworkOutput: typeof import("./getVirtualNetwork").getVirtualNetworkOutput;
export { GetVirtualNetworkGatewayArgs, GetVirtualNetworkGatewayResult, GetVirtualNetworkGatewayOutputArgs } from "./getVirtualNetworkGateway";
export declare const getVirtualNetworkGateway: typeof import("./getVirtualNetworkGateway").getVirtualNetworkGateway;
export declare const getVirtualNetworkGatewayOutput: typeof import("./getVirtualNetworkGateway").getVirtualNetworkGatewayOutput;
export { GetVirtualNetworkGatewayAdvertisedRoutesArgs, GetVirtualNetworkGatewayAdvertisedRoutesResult, GetVirtualNetworkGatewayAdvertisedRoutesOutputArgs } from "./getVirtualNetworkGatewayAdvertisedRoutes";
export declare const getVirtualNetworkGatewayAdvertisedRoutes: typeof import("./getVirtualNetworkGatewayAdvertisedRoutes").getVirtualNetworkGatewayAdvertisedRoutes;
export declare const getVirtualNetworkGatewayAdvertisedRoutesOutput: typeof import("./getVirtualNetworkGatewayAdvertisedRoutes").getVirtualNetworkGatewayAdvertisedRoutesOutput;
export { GetVirtualNetworkGatewayBgpPeerStatusArgs, GetVirtualNetworkGatewayBgpPeerStatusResult, GetVirtualNetworkGatewayBgpPeerStatusOutputArgs } from "./getVirtualNetworkGatewayBgpPeerStatus";
export declare const getVirtualNetworkGatewayBgpPeerStatus: typeof import("./getVirtualNetworkGatewayBgpPeerStatus").getVirtualNetworkGatewayBgpPeerStatus;
export declare const getVirtualNetworkGatewayBgpPeerStatusOutput: typeof import("./getVirtualNetworkGatewayBgpPeerStatus").getVirtualNetworkGatewayBgpPeerStatusOutput;
export { GetVirtualNetworkGatewayConnectionArgs, GetVirtualNetworkGatewayConnectionResult, GetVirtualNetworkGatewayConnectionOutputArgs } from "./getVirtualNetworkGatewayConnection";
export declare const getVirtualNetworkGatewayConnection: typeof import("./getVirtualNetworkGatewayConnection").getVirtualNetworkGatewayConnection;
export declare const getVirtualNetworkGatewayConnectionOutput: typeof import("./getVirtualNetworkGatewayConnection").getVirtualNetworkGatewayConnectionOutput;
export { GetVirtualNetworkGatewayConnectionIkeSasArgs, GetVirtualNetworkGatewayConnectionIkeSasResult, GetVirtualNetworkGatewayConnectionIkeSasOutputArgs } from "./getVirtualNetworkGatewayConnectionIkeSas";
export declare const getVirtualNetworkGatewayConnectionIkeSas: typeof import("./getVirtualNetworkGatewayConnectionIkeSas").getVirtualNetworkGatewayConnectionIkeSas;
export declare const getVirtualNetworkGatewayConnectionIkeSasOutput: typeof import("./getVirtualNetworkGatewayConnectionIkeSas").getVirtualNetworkGatewayConnectionIkeSasOutput;
export { GetVirtualNetworkGatewayLearnedRoutesArgs, GetVirtualNetworkGatewayLearnedRoutesResult, GetVirtualNetworkGatewayLearnedRoutesOutputArgs } from "./getVirtualNetworkGatewayLearnedRoutes";
export declare const getVirtualNetworkGatewayLearnedRoutes: typeof import("./getVirtualNetworkGatewayLearnedRoutes").getVirtualNetworkGatewayLearnedRoutes;
export declare const getVirtualNetworkGatewayLearnedRoutesOutput: typeof import("./getVirtualNetworkGatewayLearnedRoutes").getVirtualNetworkGatewayLearnedRoutesOutput;
export { GetVirtualNetworkGatewayNatRuleArgs, GetVirtualNetworkGatewayNatRuleResult, GetVirtualNetworkGatewayNatRuleOutputArgs } from "./getVirtualNetworkGatewayNatRule";
export declare const getVirtualNetworkGatewayNatRule: typeof import("./getVirtualNetworkGatewayNatRule").getVirtualNetworkGatewayNatRule;
export declare const getVirtualNetworkGatewayNatRuleOutput: typeof import("./getVirtualNetworkGatewayNatRule").getVirtualNetworkGatewayNatRuleOutput;
export { GetVirtualNetworkGatewayVpnProfilePackageUrlArgs, GetVirtualNetworkGatewayVpnProfilePackageUrlResult, GetVirtualNetworkGatewayVpnProfilePackageUrlOutputArgs } from "./getVirtualNetworkGatewayVpnProfilePackageUrl";
export declare const getVirtualNetworkGatewayVpnProfilePackageUrl: typeof import("./getVirtualNetworkGatewayVpnProfilePackageUrl").getVirtualNetworkGatewayVpnProfilePackageUrl;
export declare const getVirtualNetworkGatewayVpnProfilePackageUrlOutput: typeof import("./getVirtualNetworkGatewayVpnProfilePackageUrl").getVirtualNetworkGatewayVpnProfilePackageUrlOutput;
export { GetVirtualNetworkGatewayVpnclientConnectionHealthArgs, GetVirtualNetworkGatewayVpnclientConnectionHealthResult, GetVirtualNetworkGatewayVpnclientConnectionHealthOutputArgs } from "./getVirtualNetworkGatewayVpnclientConnectionHealth";
export declare const getVirtualNetworkGatewayVpnclientConnectionHealth: typeof import("./getVirtualNetworkGatewayVpnclientConnectionHealth").getVirtualNetworkGatewayVpnclientConnectionHealth;
export declare const getVirtualNetworkGatewayVpnclientConnectionHealthOutput: typeof import("./getVirtualNetworkGatewayVpnclientConnectionHealth").getVirtualNetworkGatewayVpnclientConnectionHealthOutput;
export { GetVirtualNetworkGatewayVpnclientIpsecParametersArgs, GetVirtualNetworkGatewayVpnclientIpsecParametersResult, GetVirtualNetworkGatewayVpnclientIpsecParametersOutputArgs } from "./getVirtualNetworkGatewayVpnclientIpsecParameters";
export declare const getVirtualNetworkGatewayVpnclientIpsecParameters: typeof import("./getVirtualNetworkGatewayVpnclientIpsecParameters").getVirtualNetworkGatewayVpnclientIpsecParameters;
export declare const getVirtualNetworkGatewayVpnclientIpsecParametersOutput: typeof import("./getVirtualNetworkGatewayVpnclientIpsecParameters").getVirtualNetworkGatewayVpnclientIpsecParametersOutput;
export { GetVirtualNetworkPeeringArgs, GetVirtualNetworkPeeringResult, GetVirtualNetworkPeeringOutputArgs } from "./getVirtualNetworkPeering";
export declare const getVirtualNetworkPeering: typeof import("./getVirtualNetworkPeering").getVirtualNetworkPeering;
export declare const getVirtualNetworkPeeringOutput: typeof import("./getVirtualNetworkPeering").getVirtualNetworkPeeringOutput;
export { GetVirtualNetworkTapArgs, GetVirtualNetworkTapResult, GetVirtualNetworkTapOutputArgs } from "./getVirtualNetworkTap";
export declare const getVirtualNetworkTap: typeof import("./getVirtualNetworkTap").getVirtualNetworkTap;
export declare const getVirtualNetworkTapOutput: typeof import("./getVirtualNetworkTap").getVirtualNetworkTapOutput;
export { GetVirtualRouterArgs, GetVirtualRouterResult, GetVirtualRouterOutputArgs } from "./getVirtualRouter";
export declare const getVirtualRouter: typeof import("./getVirtualRouter").getVirtualRouter;
export declare const getVirtualRouterOutput: typeof import("./getVirtualRouter").getVirtualRouterOutput;
export { GetVirtualRouterPeeringArgs, GetVirtualRouterPeeringResult, GetVirtualRouterPeeringOutputArgs } from "./getVirtualRouterPeering";
export declare const getVirtualRouterPeering: typeof import("./getVirtualRouterPeering").getVirtualRouterPeering;
export declare const getVirtualRouterPeeringOutput: typeof import("./getVirtualRouterPeering").getVirtualRouterPeeringOutput;
export { GetVirtualWanArgs, GetVirtualWanResult, GetVirtualWanOutputArgs } from "./getVirtualWan";
export declare const getVirtualWan: typeof import("./getVirtualWan").getVirtualWan;
export declare const getVirtualWanOutput: typeof import("./getVirtualWan").getVirtualWanOutput;
export { GetVpnConnectionArgs, GetVpnConnectionResult, GetVpnConnectionOutputArgs } from "./getVpnConnection";
export declare const getVpnConnection: typeof import("./getVpnConnection").getVpnConnection;
export declare const getVpnConnectionOutput: typeof import("./getVpnConnection").getVpnConnectionOutput;
export { GetVpnGatewayArgs, GetVpnGatewayResult, GetVpnGatewayOutputArgs } from "./getVpnGateway";
export declare const getVpnGateway: typeof import("./getVpnGateway").getVpnGateway;
export declare const getVpnGatewayOutput: typeof import("./getVpnGateway").getVpnGatewayOutput;
export { GetVpnLinkConnectionIkeSasArgs, GetVpnLinkConnectionIkeSasResult, GetVpnLinkConnectionIkeSasOutputArgs } from "./getVpnLinkConnectionIkeSas";
export declare const getVpnLinkConnectionIkeSas: typeof import("./getVpnLinkConnectionIkeSas").getVpnLinkConnectionIkeSas;
export declare const getVpnLinkConnectionIkeSasOutput: typeof import("./getVpnLinkConnectionIkeSas").getVpnLinkConnectionIkeSasOutput;
export { GetVpnServerConfigurationArgs, GetVpnServerConfigurationResult, GetVpnServerConfigurationOutputArgs } from "./getVpnServerConfiguration";
export declare const getVpnServerConfiguration: typeof import("./getVpnServerConfiguration").getVpnServerConfiguration;
export declare const getVpnServerConfigurationOutput: typeof import("./getVpnServerConfiguration").getVpnServerConfigurationOutput;
export { GetVpnSiteArgs, GetVpnSiteResult, GetVpnSiteOutputArgs } from "./getVpnSite";
export declare const getVpnSite: typeof import("./getVpnSite").getVpnSite;
export declare const getVpnSiteOutput: typeof import("./getVpnSite").getVpnSiteOutput;
export { GetWebApplicationFirewallPolicyArgs, GetWebApplicationFirewallPolicyResult, GetWebApplicationFirewallPolicyOutputArgs } from "./getWebApplicationFirewallPolicy";
export declare const getWebApplicationFirewallPolicy: typeof import("./getWebApplicationFirewallPolicy").getWebApplicationFirewallPolicy;
export declare const getWebApplicationFirewallPolicyOutput: typeof import("./getWebApplicationFirewallPolicy").getWebApplicationFirewallPolicyOutput;
export { HubRouteTableArgs } from "./hubRouteTable";
export type HubRouteTable = import("./hubRouteTable").HubRouteTable;
export declare const HubRouteTable: typeof import("./hubRouteTable").HubRouteTable;
export { HubVirtualNetworkConnectionArgs } from "./hubVirtualNetworkConnection";
export type HubVirtualNetworkConnection = import("./hubVirtualNetworkConnection").HubVirtualNetworkConnection;
export declare const HubVirtualNetworkConnection: typeof import("./hubVirtualNetworkConnection").HubVirtualNetworkConnection;
export { InboundNatRuleArgs } from "./inboundNatRule";
export type InboundNatRule = import("./inboundNatRule").InboundNatRule;
export declare const InboundNatRule: typeof import("./inboundNatRule").InboundNatRule;
export { IpAllocationArgs } from "./ipAllocation";
export type IpAllocation = import("./ipAllocation").IpAllocation;
export declare const IpAllocation: typeof import("./ipAllocation").IpAllocation;
export { IpGroupArgs } from "./ipGroup";
export type IpGroup = import("./ipGroup").IpGroup;
export declare const IpGroup: typeof import("./ipGroup").IpGroup;
export { ListActiveConnectivityConfigurationsArgs, ListActiveConnectivityConfigurationsResult, ListActiveConnectivityConfigurationsOutputArgs } from "./listActiveConnectivityConfigurations";
export declare const listActiveConnectivityConfigurations: typeof import("./listActiveConnectivityConfigurations").listActiveConnectivityConfigurations;
export declare const listActiveConnectivityConfigurationsOutput: typeof import("./listActiveConnectivityConfigurations").listActiveConnectivityConfigurationsOutput;
export { ListActiveSecurityAdminRulesArgs, ListActiveSecurityAdminRulesResult, ListActiveSecurityAdminRulesOutputArgs } from "./listActiveSecurityAdminRules";
export declare const listActiveSecurityAdminRules: typeof import("./listActiveSecurityAdminRules").listActiveSecurityAdminRules;
export declare const listActiveSecurityAdminRulesOutput: typeof import("./listActiveSecurityAdminRules").listActiveSecurityAdminRulesOutput;
export { ListFirewallPolicyIdpsSignatureArgs, ListFirewallPolicyIdpsSignatureResult, ListFirewallPolicyIdpsSignatureOutputArgs } from "./listFirewallPolicyIdpsSignature";
export declare const listFirewallPolicyIdpsSignature: typeof import("./listFirewallPolicyIdpsSignature").listFirewallPolicyIdpsSignature;
export declare const listFirewallPolicyIdpsSignatureOutput: typeof import("./listFirewallPolicyIdpsSignature").listFirewallPolicyIdpsSignatureOutput;
export { ListFirewallPolicyIdpsSignaturesFilterValueArgs, ListFirewallPolicyIdpsSignaturesFilterValueResult, ListFirewallPolicyIdpsSignaturesFilterValueOutputArgs } from "./listFirewallPolicyIdpsSignaturesFilterValue";
export declare const listFirewallPolicyIdpsSignaturesFilterValue: typeof import("./listFirewallPolicyIdpsSignaturesFilterValue").listFirewallPolicyIdpsSignaturesFilterValue;
export declare const listFirewallPolicyIdpsSignaturesFilterValueOutput: typeof import("./listFirewallPolicyIdpsSignaturesFilterValue").listFirewallPolicyIdpsSignaturesFilterValueOutput;
export { ListNetworkManagerDeploymentStatusArgs, ListNetworkManagerDeploymentStatusResult, ListNetworkManagerDeploymentStatusOutputArgs } from "./listNetworkManagerDeploymentStatus";
export declare const listNetworkManagerDeploymentStatus: typeof import("./listNetworkManagerDeploymentStatus").listNetworkManagerDeploymentStatus;
export declare const listNetworkManagerDeploymentStatusOutput: typeof import("./listNetworkManagerDeploymentStatus").listNetworkManagerDeploymentStatusOutput;
export { ListNetworkManagerEffectiveConnectivityConfigurationsArgs, ListNetworkManagerEffectiveConnectivityConfigurationsResult, ListNetworkManagerEffectiveConnectivityConfigurationsOutputArgs } from "./listNetworkManagerEffectiveConnectivityConfigurations";
export declare const listNetworkManagerEffectiveConnectivityConfigurations: typeof import("./listNetworkManagerEffectiveConnectivityConfigurations").listNetworkManagerEffectiveConnectivityConfigurations;
export declare const listNetworkManagerEffectiveConnectivityConfigurationsOutput: typeof import("./listNetworkManagerEffectiveConnectivityConfigurations").listNetworkManagerEffectiveConnectivityConfigurationsOutput;
export { ListNetworkManagerEffectiveSecurityAdminRulesArgs, ListNetworkManagerEffectiveSecurityAdminRulesResult, ListNetworkManagerEffectiveSecurityAdminRulesOutputArgs } from "./listNetworkManagerEffectiveSecurityAdminRules";
export declare const listNetworkManagerEffectiveSecurityAdminRules: typeof import("./listNetworkManagerEffectiveSecurityAdminRules").listNetworkManagerEffectiveSecurityAdminRules;
export declare const listNetworkManagerEffectiveSecurityAdminRulesOutput: typeof import("./listNetworkManagerEffectiveSecurityAdminRules").listNetworkManagerEffectiveSecurityAdminRulesOutput;
export { LoadBalancerArgs } from "./loadBalancer";
export type LoadBalancer = import("./loadBalancer").LoadBalancer;
export declare const LoadBalancer: typeof import("./loadBalancer").LoadBalancer;
export { LoadBalancerBackendAddressPoolArgs } from "./loadBalancerBackendAddressPool";
export type LoadBalancerBackendAddressPool = import("./loadBalancerBackendAddressPool").LoadBalancerBackendAddressPool;
export declare const LoadBalancerBackendAddressPool: typeof import("./loadBalancerBackendAddressPool").LoadBalancerBackendAddressPool;
export { LocalNetworkGatewayArgs } from "./localNetworkGateway";
export type LocalNetworkGateway = import("./localNetworkGateway").LocalNetworkGateway;
export declare const LocalNetworkGateway: typeof import("./localNetworkGateway").LocalNetworkGateway;
export { ManagementGroupNetworkManagerConnectionArgs } from "./managementGroupNetworkManagerConnection";
export type ManagementGroupNetworkManagerConnection = import("./managementGroupNetworkManagerConnection").ManagementGroupNetworkManagerConnection;
export declare const ManagementGroupNetworkManagerConnection: typeof import("./managementGroupNetworkManagerConnection").ManagementGroupNetworkManagerConnection;
export { NatGatewayArgs } from "./natGateway";
export type NatGateway = import("./natGateway").NatGateway;
export declare const NatGateway: typeof import("./natGateway").NatGateway;
export { NatRuleArgs } from "./natRule";
export type NatRule = import("./natRule").NatRule;
export declare const NatRule: typeof import("./natRule").NatRule;
export { NetworkGroupArgs } from "./networkGroup";
export type NetworkGroup = import("./networkGroup").NetworkGroup;
export declare const NetworkGroup: typeof import("./networkGroup").NetworkGroup;
export { NetworkInterfaceArgs } from "./networkInterface";
export type NetworkInterface = import("./networkInterface").NetworkInterface;
export declare const NetworkInterface: typeof import("./networkInterface").NetworkInterface;
export { NetworkInterfaceTapConfigurationArgs } from "./networkInterfaceTapConfiguration";
export type NetworkInterfaceTapConfiguration = import("./networkInterfaceTapConfiguration").NetworkInterfaceTapConfiguration;
export declare const NetworkInterfaceTapConfiguration: typeof import("./networkInterfaceTapConfiguration").NetworkInterfaceTapConfiguration;
export { NetworkManagerArgs } from "./networkManager";
export type NetworkManager = import("./networkManager").NetworkManager;
export declare const NetworkManager: typeof import("./networkManager").NetworkManager;
export { NetworkProfileArgs } from "./networkProfile";
export type NetworkProfile = import("./networkProfile").NetworkProfile;
export declare const NetworkProfile: typeof import("./networkProfile").NetworkProfile;
export { NetworkSecurityGroupArgs } from "./networkSecurityGroup";
export type NetworkSecurityGroup = import("./networkSecurityGroup").NetworkSecurityGroup;
export declare const NetworkSecurityGroup: typeof import("./networkSecurityGroup").NetworkSecurityGroup;
export { NetworkVirtualApplianceArgs } from "./networkVirtualAppliance";
export type NetworkVirtualAppliance = import("./networkVirtualAppliance").NetworkVirtualAppliance;
export declare const NetworkVirtualAppliance: typeof import("./networkVirtualAppliance").NetworkVirtualAppliance;
export { NetworkWatcherArgs } from "./networkWatcher";
export type NetworkWatcher = import("./networkWatcher").NetworkWatcher;
export declare const NetworkWatcher: typeof import("./networkWatcher").NetworkWatcher;
export { P2sVpnGatewayArgs } from "./p2sVpnGateway";
export type P2sVpnGateway = import("./p2sVpnGateway").P2sVpnGateway;
export declare const P2sVpnGateway: typeof import("./p2sVpnGateway").P2sVpnGateway;
export { PacketCaptureArgs } from "./packetCapture";
export type PacketCapture = import("./packetCapture").PacketCapture;
export declare const PacketCapture: typeof import("./packetCapture").PacketCapture;
export { PrivateDnsZoneGroupArgs } from "./privateDnsZoneGroup";
export type PrivateDnsZoneGroup = import("./privateDnsZoneGroup").PrivateDnsZoneGroup;
export declare const PrivateDnsZoneGroup: typeof import("./privateDnsZoneGroup").PrivateDnsZoneGroup;
export { PrivateEndpointArgs } from "./privateEndpoint";
export type PrivateEndpoint = import("./privateEndpoint").PrivateEndpoint;
export declare const PrivateEndpoint: typeof import("./privateEndpoint").PrivateEndpoint;
export { PrivateLinkServiceArgs } from "./privateLinkService";
export type PrivateLinkService = import("./privateLinkService").PrivateLinkService;
export declare const PrivateLinkService: typeof import("./privateLinkService").PrivateLinkService;
export { PrivateLinkServicePrivateEndpointConnectionArgs } from "./privateLinkServicePrivateEndpointConnection";
export type PrivateLinkServicePrivateEndpointConnection = import("./privateLinkServicePrivateEndpointConnection").PrivateLinkServicePrivateEndpointConnection;
export declare const PrivateLinkServicePrivateEndpointConnection: typeof import("./privateLinkServicePrivateEndpointConnection").PrivateLinkServicePrivateEndpointConnection;
export { PublicIPAddressArgs } from "./publicIPAddress";
export type PublicIPAddress = import("./publicIPAddress").PublicIPAddress;
export declare const PublicIPAddress: typeof import("./publicIPAddress").PublicIPAddress;
export { PublicIPPrefixArgs } from "./publicIPPrefix";
export type PublicIPPrefix = import("./publicIPPrefix").PublicIPPrefix;
export declare const PublicIPPrefix: typeof import("./publicIPPrefix").PublicIPPrefix;
export { RouteArgs } from "./route";
export type Route = import("./route").Route;
export declare const Route: typeof import("./route").Route;
export { RouteFilterArgs } from "./routeFilter";
export type RouteFilter = import("./routeFilter").RouteFilter;
export declare const RouteFilter: typeof import("./routeFilter").RouteFilter;
export { RouteFilterRuleArgs } from "./routeFilterRule";
export type RouteFilterRule = import("./routeFilterRule").RouteFilterRule;
export declare const RouteFilterRule: typeof import("./routeFilterRule").RouteFilterRule;
export { RouteMapArgs } from "./routeMap";
export type RouteMap = import("./routeMap").RouteMap;
export declare const RouteMap: typeof import("./routeMap").RouteMap;
export { RouteTableArgs } from "./routeTable";
export type RouteTable = import("./routeTable").RouteTable;
export declare const RouteTable: typeof import("./routeTable").RouteTable;
export { RoutingIntentArgs } from "./routingIntent";
export type RoutingIntent = import("./routingIntent").RoutingIntent;
export declare const RoutingIntent: typeof import("./routingIntent").RoutingIntent;
export { ScopeConnectionArgs } from "./scopeConnection";
export type ScopeConnection = import("./scopeConnection").ScopeConnection;
export declare const ScopeConnection: typeof import("./scopeConnection").ScopeConnection;
export { SecurityAdminConfigurationArgs } from "./securityAdminConfiguration";
export type SecurityAdminConfiguration = import("./securityAdminConfiguration").SecurityAdminConfiguration;
export declare const SecurityAdminConfiguration: typeof import("./securityAdminConfiguration").SecurityAdminConfiguration;
export { SecurityPartnerProviderArgs } from "./securityPartnerProvider";
export type SecurityPartnerProvider = import("./securityPartnerProvider").SecurityPartnerProvider;
export declare const SecurityPartnerProvider: typeof import("./securityPartnerProvider").SecurityPartnerProvider;
export { SecurityRuleArgs } from "./securityRule";
export type SecurityRule = import("./securityRule").SecurityRule;
export declare const SecurityRule: typeof import("./securityRule").SecurityRule;
export { ServiceEndpointPolicyArgs } from "./serviceEndpointPolicy";
export type ServiceEndpointPolicy = import("./serviceEndpointPolicy").ServiceEndpointPolicy;
export declare const ServiceEndpointPolicy: typeof import("./serviceEndpointPolicy").ServiceEndpointPolicy;
export { ServiceEndpointPolicyDefinitionArgs } from "./serviceEndpointPolicyDefinition";
export type ServiceEndpointPolicyDefinition = import("./serviceEndpointPolicyDefinition").ServiceEndpointPolicyDefinition;
export declare const ServiceEndpointPolicyDefinition: typeof import("./serviceEndpointPolicyDefinition").ServiceEndpointPolicyDefinition;
export { StaticMemberArgs } from "./staticMember";
export type StaticMember = import("./staticMember").StaticMember;
export declare const StaticMember: typeof import("./staticMember").StaticMember;
export { SubnetArgs } from "./subnet";
export type Subnet = import("./subnet").Subnet;
export declare const Subnet: typeof import("./subnet").Subnet;
export { SubscriptionNetworkManagerConnectionArgs } from "./subscriptionNetworkManagerConnection";
export type SubscriptionNetworkManagerConnection = import("./subscriptionNetworkManagerConnection").SubscriptionNetworkManagerConnection;
export declare const SubscriptionNetworkManagerConnection: typeof import("./subscriptionNetworkManagerConnection").SubscriptionNetworkManagerConnection;
export { VirtualApplianceSiteArgs } from "./virtualApplianceSite";
export type VirtualApplianceSite = import("./virtualApplianceSite").VirtualApplianceSite;
export declare const VirtualApplianceSite: typeof import("./virtualApplianceSite").VirtualApplianceSite;
export { VirtualHubArgs } from "./virtualHub";
export type VirtualHub = import("./virtualHub").VirtualHub;
export declare const VirtualHub: typeof import("./virtualHub").VirtualHub;
export { VirtualHubBgpConnectionArgs } from "./virtualHubBgpConnection";
export type VirtualHubBgpConnection = import("./virtualHubBgpConnection").VirtualHubBgpConnection;
export declare const VirtualHubBgpConnection: typeof import("./virtualHubBgpConnection").VirtualHubBgpConnection;
export { VirtualHubIpConfigurationArgs } from "./virtualHubIpConfiguration";
export type VirtualHubIpConfiguration = import("./virtualHubIpConfiguration").VirtualHubIpConfiguration;
export declare const VirtualHubIpConfiguration: typeof import("./virtualHubIpConfiguration").VirtualHubIpConfiguration;
export { VirtualHubRouteTableV2Args } from "./virtualHubRouteTableV2";
export type VirtualHubRouteTableV2 = import("./virtualHubRouteTableV2").VirtualHubRouteTableV2;
export declare const VirtualHubRouteTableV2: typeof import("./virtualHubRouteTableV2").VirtualHubRouteTableV2;
export { VirtualNetworkArgs } from "./virtualNetwork";
export type VirtualNetwork = import("./virtualNetwork").VirtualNetwork;
export declare const VirtualNetwork: typeof import("./virtualNetwork").VirtualNetwork;
export { VirtualNetworkGatewayArgs } from "./virtualNetworkGateway";
export type VirtualNetworkGateway = import("./virtualNetworkGateway").VirtualNetworkGateway;
export declare const VirtualNetworkGateway: typeof import("./virtualNetworkGateway").VirtualNetworkGateway;
export { VirtualNetworkGatewayConnectionArgs } from "./virtualNetworkGatewayConnection";
export type VirtualNetworkGatewayConnection = import("./virtualNetworkGatewayConnection").VirtualNetworkGatewayConnection;
export declare const VirtualNetworkGatewayConnection: typeof import("./virtualNetworkGatewayConnection").VirtualNetworkGatewayConnection;
export { VirtualNetworkGatewayNatRuleArgs } from "./virtualNetworkGatewayNatRule";
export type VirtualNetworkGatewayNatRule = import("./virtualNetworkGatewayNatRule").VirtualNetworkGatewayNatRule;
export declare const VirtualNetworkGatewayNatRule: typeof import("./virtualNetworkGatewayNatRule").VirtualNetworkGatewayNatRule;
export { VirtualNetworkPeeringArgs } from "./virtualNetworkPeering";
export type VirtualNetworkPeering = import("./virtualNetworkPeering").VirtualNetworkPeering;
export declare const VirtualNetworkPeering: typeof import("./virtualNetworkPeering").VirtualNetworkPeering;
export { VirtualNetworkTapArgs } from "./virtualNetworkTap";
export type VirtualNetworkTap = import("./virtualNetworkTap").VirtualNetworkTap;
export declare const VirtualNetworkTap: typeof import("./virtualNetworkTap").VirtualNetworkTap;
export { VirtualRouterArgs } from "./virtualRouter";
export type VirtualRouter = import("./virtualRouter").VirtualRouter;
export declare const VirtualRouter: typeof import("./virtualRouter").VirtualRouter;
export { VirtualRouterPeeringArgs } from "./virtualRouterPeering";
export type VirtualRouterPeering = import("./virtualRouterPeering").VirtualRouterPeering;
export declare const VirtualRouterPeering: typeof import("./virtualRouterPeering").VirtualRouterPeering;
export { VirtualWanArgs } from "./virtualWan";
export type VirtualWan = import("./virtualWan").VirtualWan;
export declare const VirtualWan: typeof import("./virtualWan").VirtualWan;
export { VpnConnectionArgs } from "./vpnConnection";
export type VpnConnection = import("./vpnConnection").VpnConnection;
export declare const VpnConnection: typeof import("./vpnConnection").VpnConnection;
export { VpnGatewayArgs } from "./vpnGateway";
export type VpnGateway = import("./vpnGateway").VpnGateway;
export declare const VpnGateway: typeof import("./vpnGateway").VpnGateway;
export { VpnServerConfigurationArgs } from "./vpnServerConfiguration";
export type VpnServerConfiguration = import("./vpnServerConfiguration").VpnServerConfiguration;
export declare const VpnServerConfiguration: typeof import("./vpnServerConfiguration").VpnServerConfiguration;
export { VpnSiteArgs } from "./vpnSite";
export type VpnSite = import("./vpnSite").VpnSite;
export declare const VpnSite: typeof import("./vpnSite").VpnSite;
export { WebApplicationFirewallPolicyArgs } from "./webApplicationFirewallPolicy";
export type WebApplicationFirewallPolicy = import("./webApplicationFirewallPolicy").WebApplicationFirewallPolicy;
export declare const WebApplicationFirewallPolicy: typeof import("./webApplicationFirewallPolicy").WebApplicationFirewallPolicy;
export * from "../../types/enums/network/v20230401";
