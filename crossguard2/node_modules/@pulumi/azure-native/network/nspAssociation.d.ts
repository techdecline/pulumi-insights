import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as enums from "../types/enums";
/**
 * The NSP resource association resource
 * Azure REST API version: 2021-02-01-preview. Prior API version in Azure Native 1.x: 2021-02-01-preview.
 *
 * Other available API versions: 2023-07-01-preview, 2023-08-01-preview.
 */
export declare class NspAssociation extends pulumi.CustomResource {
    /**
     * Get an existing NspAssociation resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    static get(name: string, id: pulumi.Input<pulumi.ID>, opts?: pulumi.CustomResourceOptions): NspAssociation;
    /**
     * Returns true if the given object is an instance of NspAssociation.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    static isInstance(obj: any): obj is NspAssociation;
    /**
     * Access mode on the association.
     */
    readonly accessMode: pulumi.Output<string | undefined>;
    /**
     * Specifies if there are provisioning issues
     */
    readonly hasProvisioningIssues: pulumi.Output<string>;
    /**
     * Resource location.
     */
    readonly location: pulumi.Output<string | undefined>;
    /**
     * Resource name.
     */
    readonly name: pulumi.Output<string>;
    /**
     * The PaaS resource to be associated.
     */
    readonly privateLinkResource: pulumi.Output<outputs.network.SubResourceResponse | undefined>;
    /**
     * Profile id to which the PaaS resource is associated.
     */
    readonly profile: pulumi.Output<outputs.network.SubResourceResponse | undefined>;
    /**
     * The provisioning state of the resource  association resource.
     */
    readonly provisioningState: pulumi.Output<string>;
    /**
     * Resource tags.
     */
    readonly tags: pulumi.Output<{
        [key: string]: string;
    } | undefined>;
    /**
     * Resource type.
     */
    readonly type: pulumi.Output<string>;
    /**
     * Create a NspAssociation resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: NspAssociationArgs, opts?: pulumi.CustomResourceOptions);
}
/**
 * The set of arguments for constructing a NspAssociation resource.
 */
export interface NspAssociationArgs {
    /**
     * Access mode on the association.
     */
    accessMode?: pulumi.Input<string | enums.network.AssociationAccessMode>;
    /**
     * The name of the NSP association.
     */
    associationName?: pulumi.Input<string>;
    /**
     * Resource ID.
     */
    id?: pulumi.Input<string>;
    /**
     * Resource location.
     */
    location?: pulumi.Input<string>;
    /**
     * The name of the resource that is unique within a resource group. This name can be used to access the resource.
     */
    name?: pulumi.Input<string>;
    /**
     * The name of the network security perimeter.
     */
    networkSecurityPerimeterName: pulumi.Input<string>;
    /**
     * The PaaS resource to be associated.
     */
    privateLinkResource?: pulumi.Input<inputs.network.SubResourceArgs>;
    /**
     * Profile id to which the PaaS resource is associated.
     */
    profile?: pulumi.Input<inputs.network.SubResourceArgs>;
    /**
     * The name of the resource group.
     */
    resourceGroupName: pulumi.Input<string>;
    /**
     * Resource tags.
     */
    tags?: pulumi.Input<{
        [key: string]: pulumi.Input<string>;
    }>;
}
