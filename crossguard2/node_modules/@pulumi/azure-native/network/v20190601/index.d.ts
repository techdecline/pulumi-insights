export { ApplicationGatewayArgs } from "./applicationGateway";
export type ApplicationGateway = import("./applicationGateway").ApplicationGateway;
export declare const ApplicationGateway: typeof import("./applicationGateway").ApplicationGateway;
export { ExpressRouteCircuitArgs } from "./expressRouteCircuit";
export type ExpressRouteCircuit = import("./expressRouteCircuit").ExpressRouteCircuit;
export declare const ExpressRouteCircuit: typeof import("./expressRouteCircuit").ExpressRouteCircuit;
export { ExpressRouteCircuitAuthorizationArgs } from "./expressRouteCircuitAuthorization";
export type ExpressRouteCircuitAuthorization = import("./expressRouteCircuitAuthorization").ExpressRouteCircuitAuthorization;
export declare const ExpressRouteCircuitAuthorization: typeof import("./expressRouteCircuitAuthorization").ExpressRouteCircuitAuthorization;
export { ExpressRouteCircuitPeeringArgs } from "./expressRouteCircuitPeering";
export type ExpressRouteCircuitPeering = import("./expressRouteCircuitPeering").ExpressRouteCircuitPeering;
export declare const ExpressRouteCircuitPeering: typeof import("./expressRouteCircuitPeering").ExpressRouteCircuitPeering;
export { GetApplicationGatewayArgs, GetApplicationGatewayResult, GetApplicationGatewayOutputArgs } from "./getApplicationGateway";
export declare const getApplicationGateway: typeof import("./getApplicationGateway").getApplicationGateway;
export declare const getApplicationGatewayOutput: typeof import("./getApplicationGateway").getApplicationGatewayOutput;
export { GetApplicationGatewayBackendHealthOnDemandArgs, GetApplicationGatewayBackendHealthOnDemandResult, GetApplicationGatewayBackendHealthOnDemandOutputArgs } from "./getApplicationGatewayBackendHealthOnDemand";
export declare const getApplicationGatewayBackendHealthOnDemand: typeof import("./getApplicationGatewayBackendHealthOnDemand").getApplicationGatewayBackendHealthOnDemand;
export declare const getApplicationGatewayBackendHealthOnDemandOutput: typeof import("./getApplicationGatewayBackendHealthOnDemand").getApplicationGatewayBackendHealthOnDemandOutput;
export { GetExpressRouteCircuitArgs, GetExpressRouteCircuitResult, GetExpressRouteCircuitOutputArgs } from "./getExpressRouteCircuit";
export declare const getExpressRouteCircuit: typeof import("./getExpressRouteCircuit").getExpressRouteCircuit;
export declare const getExpressRouteCircuitOutput: typeof import("./getExpressRouteCircuit").getExpressRouteCircuitOutput;
export { GetExpressRouteCircuitAuthorizationArgs, GetExpressRouteCircuitAuthorizationResult, GetExpressRouteCircuitAuthorizationOutputArgs } from "./getExpressRouteCircuitAuthorization";
export declare const getExpressRouteCircuitAuthorization: typeof import("./getExpressRouteCircuitAuthorization").getExpressRouteCircuitAuthorization;
export declare const getExpressRouteCircuitAuthorizationOutput: typeof import("./getExpressRouteCircuitAuthorization").getExpressRouteCircuitAuthorizationOutput;
export { GetExpressRouteCircuitPeeringArgs, GetExpressRouteCircuitPeeringResult, GetExpressRouteCircuitPeeringOutputArgs } from "./getExpressRouteCircuitPeering";
export declare const getExpressRouteCircuitPeering: typeof import("./getExpressRouteCircuitPeering").getExpressRouteCircuitPeering;
export declare const getExpressRouteCircuitPeeringOutput: typeof import("./getExpressRouteCircuitPeering").getExpressRouteCircuitPeeringOutput;
export { GetInboundNatRuleArgs, GetInboundNatRuleResult, GetInboundNatRuleOutputArgs } from "./getInboundNatRule";
export declare const getInboundNatRule: typeof import("./getInboundNatRule").getInboundNatRule;
export declare const getInboundNatRuleOutput: typeof import("./getInboundNatRule").getInboundNatRuleOutput;
export { GetLoadBalancerArgs, GetLoadBalancerResult, GetLoadBalancerOutputArgs } from "./getLoadBalancer";
export declare const getLoadBalancer: typeof import("./getLoadBalancer").getLoadBalancer;
export declare const getLoadBalancerOutput: typeof import("./getLoadBalancer").getLoadBalancerOutput;
export { GetNatGatewayArgs, GetNatGatewayResult, GetNatGatewayOutputArgs } from "./getNatGateway";
export declare const getNatGateway: typeof import("./getNatGateway").getNatGateway;
export declare const getNatGatewayOutput: typeof import("./getNatGateway").getNatGatewayOutput;
export { GetNetworkInterfaceArgs, GetNetworkInterfaceResult, GetNetworkInterfaceOutputArgs } from "./getNetworkInterface";
export declare const getNetworkInterface: typeof import("./getNetworkInterface").getNetworkInterface;
export declare const getNetworkInterfaceOutput: typeof import("./getNetworkInterface").getNetworkInterfaceOutput;
export { GetNetworkSecurityGroupArgs, GetNetworkSecurityGroupResult, GetNetworkSecurityGroupOutputArgs } from "./getNetworkSecurityGroup";
export declare const getNetworkSecurityGroup: typeof import("./getNetworkSecurityGroup").getNetworkSecurityGroup;
export declare const getNetworkSecurityGroupOutput: typeof import("./getNetworkSecurityGroup").getNetworkSecurityGroupOutput;
export { GetPublicIPAddressArgs, GetPublicIPAddressResult, GetPublicIPAddressOutputArgs } from "./getPublicIPAddress";
export declare const getPublicIPAddress: typeof import("./getPublicIPAddress").getPublicIPAddress;
export declare const getPublicIPAddressOutput: typeof import("./getPublicIPAddress").getPublicIPAddressOutput;
export { GetPublicIPPrefixArgs, GetPublicIPPrefixResult, GetPublicIPPrefixOutputArgs } from "./getPublicIPPrefix";
export declare const getPublicIPPrefix: typeof import("./getPublicIPPrefix").getPublicIPPrefix;
export declare const getPublicIPPrefixOutput: typeof import("./getPublicIPPrefix").getPublicIPPrefixOutput;
export { GetRouteArgs, GetRouteResult, GetRouteOutputArgs } from "./getRoute";
export declare const getRoute: typeof import("./getRoute").getRoute;
export declare const getRouteOutput: typeof import("./getRoute").getRouteOutput;
export { GetRouteTableArgs, GetRouteTableResult, GetRouteTableOutputArgs } from "./getRouteTable";
export declare const getRouteTable: typeof import("./getRouteTable").getRouteTable;
export declare const getRouteTableOutput: typeof import("./getRouteTable").getRouteTableOutput;
export { GetSecurityRuleArgs, GetSecurityRuleResult, GetSecurityRuleOutputArgs } from "./getSecurityRule";
export declare const getSecurityRule: typeof import("./getSecurityRule").getSecurityRule;
export declare const getSecurityRuleOutput: typeof import("./getSecurityRule").getSecurityRuleOutput;
export { GetSubnetArgs, GetSubnetResult, GetSubnetOutputArgs } from "./getSubnet";
export declare const getSubnet: typeof import("./getSubnet").getSubnet;
export declare const getSubnetOutput: typeof import("./getSubnet").getSubnetOutput;
export { GetVirtualNetworkArgs, GetVirtualNetworkResult, GetVirtualNetworkOutputArgs } from "./getVirtualNetwork";
export declare const getVirtualNetwork: typeof import("./getVirtualNetwork").getVirtualNetwork;
export declare const getVirtualNetworkOutput: typeof import("./getVirtualNetwork").getVirtualNetworkOutput;
export { GetVirtualNetworkPeeringArgs, GetVirtualNetworkPeeringResult, GetVirtualNetworkPeeringOutputArgs } from "./getVirtualNetworkPeering";
export declare const getVirtualNetworkPeering: typeof import("./getVirtualNetworkPeering").getVirtualNetworkPeering;
export declare const getVirtualNetworkPeeringOutput: typeof import("./getVirtualNetworkPeering").getVirtualNetworkPeeringOutput;
export { InboundNatRuleArgs } from "./inboundNatRule";
export type InboundNatRule = import("./inboundNatRule").InboundNatRule;
export declare const InboundNatRule: typeof import("./inboundNatRule").InboundNatRule;
export { LoadBalancerArgs } from "./loadBalancer";
export type LoadBalancer = import("./loadBalancer").LoadBalancer;
export declare const LoadBalancer: typeof import("./loadBalancer").LoadBalancer;
export { NatGatewayArgs } from "./natGateway";
export type NatGateway = import("./natGateway").NatGateway;
export declare const NatGateway: typeof import("./natGateway").NatGateway;
export { NetworkInterfaceArgs } from "./networkInterface";
export type NetworkInterface = import("./networkInterface").NetworkInterface;
export declare const NetworkInterface: typeof import("./networkInterface").NetworkInterface;
export { NetworkSecurityGroupArgs } from "./networkSecurityGroup";
export type NetworkSecurityGroup = import("./networkSecurityGroup").NetworkSecurityGroup;
export declare const NetworkSecurityGroup: typeof import("./networkSecurityGroup").NetworkSecurityGroup;
export { PublicIPAddressArgs } from "./publicIPAddress";
export type PublicIPAddress = import("./publicIPAddress").PublicIPAddress;
export declare const PublicIPAddress: typeof import("./publicIPAddress").PublicIPAddress;
export { PublicIPPrefixArgs } from "./publicIPPrefix";
export type PublicIPPrefix = import("./publicIPPrefix").PublicIPPrefix;
export declare const PublicIPPrefix: typeof import("./publicIPPrefix").PublicIPPrefix;
export { RouteArgs } from "./route";
export type Route = import("./route").Route;
export declare const Route: typeof import("./route").Route;
export { RouteTableArgs } from "./routeTable";
export type RouteTable = import("./routeTable").RouteTable;
export declare const RouteTable: typeof import("./routeTable").RouteTable;
export { SecurityRuleArgs } from "./securityRule";
export type SecurityRule = import("./securityRule").SecurityRule;
export declare const SecurityRule: typeof import("./securityRule").SecurityRule;
export { SubnetArgs } from "./subnet";
export type Subnet = import("./subnet").Subnet;
export declare const Subnet: typeof import("./subnet").Subnet;
export { VirtualNetworkArgs } from "./virtualNetwork";
export type VirtualNetwork = import("./virtualNetwork").VirtualNetwork;
export declare const VirtualNetwork: typeof import("./virtualNetwork").VirtualNetwork;
export { VirtualNetworkPeeringArgs } from "./virtualNetworkPeering";
export type VirtualNetworkPeering = import("./virtualNetworkPeering").VirtualNetworkPeering;
export declare const VirtualNetworkPeering: typeof import("./virtualNetworkPeering").VirtualNetworkPeering;
export * from "../../types/enums/network/v20190601";
