"use strict";
// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __exportStar = (this && this.__exportStar) || function(m, exports) {
    for (var p in m) if (p !== "default" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.UserRuleCollection = exports.UserRule = exports.TrafficManagerUserMetricsKey = exports.SecurityUserConfiguration = exports.Profile = exports.NetworkGroup = exports.listNetworkManagerEffectiveSecurityAdminRulesOutput = exports.listNetworkManagerEffectiveSecurityAdminRules = exports.listNetworkManagerEffectiveConnectivityConfigurationsOutput = exports.listNetworkManagerEffectiveConnectivityConfigurations = exports.listListEffectiveVirtualNetworkByNetworkGroupOutput = exports.listListEffectiveVirtualNetworkByNetworkGroup = exports.listEffectiveVirtualNetworkByNetworkManagerOutput = exports.listEffectiveVirtualNetworkByNetworkManager = exports.listActiveSecurityUserRulesOutput = exports.listActiveSecurityUserRules = exports.getUserRuleCollectionOutput = exports.getUserRuleCollection = exports.getUserRuleOutput = exports.getUserRule = exports.getTrafficManagerUserMetricsKeyOutput = exports.getTrafficManagerUserMetricsKey = exports.getSecurityUserConfigurationOutput = exports.getSecurityUserConfiguration = exports.getProfileOutput = exports.getProfile = exports.getNetworkGroupOutput = exports.getNetworkGroup = exports.getEndpointOutput = exports.getEndpoint = exports.getDefaultUserRuleOutput = exports.getDefaultUserRule = exports.Endpoint = exports.DefaultUserRule = void 0;
const pulumi = require("@pulumi/pulumi");
const utilities = require("../../utilities");
exports.DefaultUserRule = null;
utilities.lazyLoad(exports, ["DefaultUserRule"], () => require("./defaultUserRule"));
exports.Endpoint = null;
utilities.lazyLoad(exports, ["Endpoint"], () => require("./endpoint"));
exports.getDefaultUserRule = null;
exports.getDefaultUserRuleOutput = null;
utilities.lazyLoad(exports, ["getDefaultUserRule", "getDefaultUserRuleOutput"], () => require("./getDefaultUserRule"));
exports.getEndpoint = null;
exports.getEndpointOutput = null;
utilities.lazyLoad(exports, ["getEndpoint", "getEndpointOutput"], () => require("./getEndpoint"));
exports.getNetworkGroup = null;
exports.getNetworkGroupOutput = null;
utilities.lazyLoad(exports, ["getNetworkGroup", "getNetworkGroupOutput"], () => require("./getNetworkGroup"));
exports.getProfile = null;
exports.getProfileOutput = null;
utilities.lazyLoad(exports, ["getProfile", "getProfileOutput"], () => require("./getProfile"));
exports.getSecurityUserConfiguration = null;
exports.getSecurityUserConfigurationOutput = null;
utilities.lazyLoad(exports, ["getSecurityUserConfiguration", "getSecurityUserConfigurationOutput"], () => require("./getSecurityUserConfiguration"));
exports.getTrafficManagerUserMetricsKey = null;
exports.getTrafficManagerUserMetricsKeyOutput = null;
utilities.lazyLoad(exports, ["getTrafficManagerUserMetricsKey", "getTrafficManagerUserMetricsKeyOutput"], () => require("./getTrafficManagerUserMetricsKey"));
exports.getUserRule = null;
exports.getUserRuleOutput = null;
utilities.lazyLoad(exports, ["getUserRule", "getUserRuleOutput"], () => require("./getUserRule"));
exports.getUserRuleCollection = null;
exports.getUserRuleCollectionOutput = null;
utilities.lazyLoad(exports, ["getUserRuleCollection", "getUserRuleCollectionOutput"], () => require("./getUserRuleCollection"));
exports.listActiveSecurityUserRules = null;
exports.listActiveSecurityUserRulesOutput = null;
utilities.lazyLoad(exports, ["listActiveSecurityUserRules", "listActiveSecurityUserRulesOutput"], () => require("./listActiveSecurityUserRules"));
exports.listEffectiveVirtualNetworkByNetworkManager = null;
exports.listEffectiveVirtualNetworkByNetworkManagerOutput = null;
utilities.lazyLoad(exports, ["listEffectiveVirtualNetworkByNetworkManager", "listEffectiveVirtualNetworkByNetworkManagerOutput"], () => require("./listEffectiveVirtualNetworkByNetworkManager"));
exports.listListEffectiveVirtualNetworkByNetworkGroup = null;
exports.listListEffectiveVirtualNetworkByNetworkGroupOutput = null;
utilities.lazyLoad(exports, ["listListEffectiveVirtualNetworkByNetworkGroup", "listListEffectiveVirtualNetworkByNetworkGroupOutput"], () => require("./listListEffectiveVirtualNetworkByNetworkGroup"));
exports.listNetworkManagerEffectiveConnectivityConfigurations = null;
exports.listNetworkManagerEffectiveConnectivityConfigurationsOutput = null;
utilities.lazyLoad(exports, ["listNetworkManagerEffectiveConnectivityConfigurations", "listNetworkManagerEffectiveConnectivityConfigurationsOutput"], () => require("./listNetworkManagerEffectiveConnectivityConfigurations"));
exports.listNetworkManagerEffectiveSecurityAdminRules = null;
exports.listNetworkManagerEffectiveSecurityAdminRulesOutput = null;
utilities.lazyLoad(exports, ["listNetworkManagerEffectiveSecurityAdminRules", "listNetworkManagerEffectiveSecurityAdminRulesOutput"], () => require("./listNetworkManagerEffectiveSecurityAdminRules"));
exports.NetworkGroup = null;
utilities.lazyLoad(exports, ["NetworkGroup"], () => require("./networkGroup"));
exports.Profile = null;
utilities.lazyLoad(exports, ["Profile"], () => require("./profile"));
exports.SecurityUserConfiguration = null;
utilities.lazyLoad(exports, ["SecurityUserConfiguration"], () => require("./securityUserConfiguration"));
exports.TrafficManagerUserMetricsKey = null;
utilities.lazyLoad(exports, ["TrafficManagerUserMetricsKey"], () => require("./trafficManagerUserMetricsKey"));
exports.UserRule = null;
utilities.lazyLoad(exports, ["UserRule"], () => require("./userRule"));
exports.UserRuleCollection = null;
utilities.lazyLoad(exports, ["UserRuleCollection"], () => require("./userRuleCollection"));
// Export enums:
__exportStar(require("../../types/enums/network/v20220401preview"), exports);
const _module = {
    version: utilities.getVersion(),
    construct: (name, type, urn) => {
        switch (type) {
            case "azure-native:network/v20220401preview:DefaultUserRule":
                return new exports.DefaultUserRule(name, undefined, { urn });
            case "azure-native:network/v20220401preview:Endpoint":
                return new exports.Endpoint(name, undefined, { urn });
            case "azure-native:network/v20220401preview:NetworkGroup":
                return new exports.NetworkGroup(name, undefined, { urn });
            case "azure-native:network/v20220401preview:Profile":
                return new exports.Profile(name, undefined, { urn });
            case "azure-native:network/v20220401preview:SecurityUserConfiguration":
                return new exports.SecurityUserConfiguration(name, undefined, { urn });
            case "azure-native:network/v20220401preview:TrafficManagerUserMetricsKey":
                return new exports.TrafficManagerUserMetricsKey(name, undefined, { urn });
            case "azure-native:network/v20220401preview:UserRule":
                return new exports.UserRule(name, undefined, { urn });
            case "azure-native:network/v20220401preview:UserRuleCollection":
                return new exports.UserRuleCollection(name, undefined, { urn });
            default:
                throw new Error(`unknown resource type ${type}`);
        }
    },
};
pulumi.runtime.registerResourceModule("azure-native", "network/v20220401preview", _module);
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaW5kZXguanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi9uZXR3b3JrL3YyMDIyMDQwMXByZXZpZXcvaW5kZXgudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IjtBQUFBLHNFQUFzRTtBQUN0RSxpRkFBaUY7Ozs7Ozs7Ozs7Ozs7Ozs7O0FBRWpGLHlDQUF5QztBQUN6Qyw2Q0FBNkM7QUFLaEMsUUFBQSxlQUFlLEdBQXVELElBQVcsQ0FBQztBQUMvRixTQUFTLENBQUMsUUFBUSxDQUFDLE9BQU8sRUFBRSxDQUFDLGlCQUFpQixDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsT0FBTyxDQUFDLG1CQUFtQixDQUFDLENBQUMsQ0FBQztBQUl4RSxRQUFBLFFBQVEsR0FBeUMsSUFBVyxDQUFDO0FBQzFFLFNBQVMsQ0FBQyxRQUFRLENBQUMsT0FBTyxFQUFFLENBQUMsVUFBVSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsT0FBTyxDQUFDLFlBQVksQ0FBQyxDQUFDLENBQUM7QUFHMUQsUUFBQSxrQkFBa0IsR0FBNkQsSUFBVyxDQUFDO0FBQzNGLFFBQUEsd0JBQXdCLEdBQW1FLElBQVcsQ0FBQztBQUNwSCxTQUFTLENBQUMsUUFBUSxDQUFDLE9BQU8sRUFBRSxDQUFDLG9CQUFvQixFQUFDLDBCQUEwQixDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsT0FBTyxDQUFDLHNCQUFzQixDQUFDLENBQUMsQ0FBQztBQUd6RyxRQUFBLFdBQVcsR0FBK0MsSUFBVyxDQUFDO0FBQ3RFLFFBQUEsaUJBQWlCLEdBQXFELElBQVcsQ0FBQztBQUMvRixTQUFTLENBQUMsUUFBUSxDQUFDLE9BQU8sRUFBRSxDQUFDLGFBQWEsRUFBQyxtQkFBbUIsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLE9BQU8sQ0FBQyxlQUFlLENBQUMsQ0FBQyxDQUFDO0FBR3BGLFFBQUEsZUFBZSxHQUF1RCxJQUFXLENBQUM7QUFDbEYsUUFBQSxxQkFBcUIsR0FBNkQsSUFBVyxDQUFDO0FBQzNH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