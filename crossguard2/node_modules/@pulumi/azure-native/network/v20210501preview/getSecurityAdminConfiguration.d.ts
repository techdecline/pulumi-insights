import * as pulumi from "@pulumi/pulumi";
import * as outputs from "../../types/output";
/**
 * Retrieves a network manager security admin configuration.
 */
export declare function getSecurityAdminConfiguration(args: GetSecurityAdminConfigurationArgs, opts?: pulumi.InvokeOptions): Promise<GetSecurityAdminConfigurationResult>;
export interface GetSecurityAdminConfigurationArgs {
    /**
     * The name of the network manager Security Configuration.
     */
    configurationName: string;
    /**
     * The name of the network manager.
     */
    networkManagerName: string;
    /**
     * The name of the resource group.
     */
    resourceGroupName: string;
}
/**
 * Defines the security configuration
 */
export interface GetSecurityAdminConfigurationResult {
    /**
     * Enum list of network intent policy based services.
     */
    readonly applyOnNetworkIntentPolicyBasedServices?: string[];
    /**
     * Flag if need to delete existing network security groups.
     */
    readonly deleteExistingNSGs?: string;
    /**
     * A description of the security configuration.
     */
    readonly description?: string;
    /**
     * A display name of the security configuration.
     */
    readonly displayName?: string;
    /**
     * A unique read-only string that changes whenever the resource is updated.
     */
    readonly etag: string;
    /**
     * Resource ID.
     */
    readonly id: string;
    /**
     * Resource name.
     */
    readonly name: string;
    /**
     * The provisioning state of the resource.
     */
    readonly provisioningState: string;
    /**
     * Security Type.
     */
    readonly securityType?: string;
    /**
     * The system metadata related to this resource.
     */
    readonly systemData: outputs.network.v20210501preview.SystemDataResponse;
    /**
     * Resource type.
     */
    readonly type: string;
}
/**
 * Retrieves a network manager security admin configuration.
 */
export declare function getSecurityAdminConfigurationOutput(args: GetSecurityAdminConfigurationOutputArgs, opts?: pulumi.InvokeOutputOptions): pulumi.Output<GetSecurityAdminConfigurationResult>;
export interface GetSecurityAdminConfigurationOutputArgs {
    /**
     * The name of the network manager Security Configuration.
     */
    configurationName: pulumi.Input<string>;
    /**
     * The name of the network manager.
     */
    networkManagerName: pulumi.Input<string>;
    /**
     * The name of the resource group.
     */
    resourceGroupName: pulumi.Input<string>;
}
