import * as pulumi from "@pulumi/pulumi";
import * as outputs from "../../types/output";
/**
 * Network default admin rule.
 */
export declare class DefaultAdminRule extends pulumi.CustomResource {
    /**
     * Get an existing DefaultAdminRule resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    static get(name: string, id: pulumi.Input<pulumi.ID>, opts?: pulumi.CustomResourceOptions): DefaultAdminRule;
    /**
     * Returns true if the given object is an instance of DefaultAdminRule.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    static isInstance(obj: any): obj is DefaultAdminRule;
    /**
     * Indicates the access allowed for this particular rule
     */
    readonly access: pulumi.Output<string>;
    /**
     * A description for this rule. Restricted to 140 chars.
     */
    readonly description: pulumi.Output<string>;
    /**
     * The destination port ranges.
     */
    readonly destinationPortRanges: pulumi.Output<string[]>;
    /**
     * The destination address prefixes. CIDR or destination IP ranges.
     */
    readonly destinations: pulumi.Output<outputs.network.v20230601.AddressPrefixItemResponse[]>;
    /**
     * Indicates if the traffic matched against the rule in inbound or outbound.
     */
    readonly direction: pulumi.Output<string>;
    /**
     * A unique read-only string that changes whenever the resource is updated.
     */
    readonly etag: pulumi.Output<string>;
    /**
     * Default rule flag.
     */
    readonly flag: pulumi.Output<string | undefined>;
    /**
     * Whether the rule is custom or default.
     * Expected value is 'Default'.
     */
    readonly kind: pulumi.Output<"Default">;
    /**
     * Resource name.
     */
    readonly name: pulumi.Output<string>;
    /**
     * The priority of the rule. The value can be between 1 and 4096. The priority number must be unique for each rule in the collection. The lower the priority number, the higher the priority of the rule.
     */
    readonly priority: pulumi.Output<number>;
    /**
     * Network protocol this rule applies to.
     */
    readonly protocol: pulumi.Output<string>;
    /**
     * The provisioning state of the resource.
     */
    readonly provisioningState: pulumi.Output<string>;
    /**
     * Unique identifier for this resource.
     */
    readonly resourceGuid: pulumi.Output<string>;
    /**
     * The source port ranges.
     */
    readonly sourcePortRanges: pulumi.Output<string[]>;
    /**
     * The CIDR or source IP ranges.
     */
    readonly sources: pulumi.Output<outputs.network.v20230601.AddressPrefixItemResponse[]>;
    /**
     * The system metadata related to this resource.
     */
    readonly systemData: pulumi.Output<outputs.network.v20230601.SystemDataResponse>;
    /**
     * Resource type.
     */
    readonly type: pulumi.Output<string>;
    /**
     * Create a DefaultAdminRule resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: DefaultAdminRuleArgs, opts?: pulumi.CustomResourceOptions);
}
/**
 * The set of arguments for constructing a DefaultAdminRule resource.
 */
export interface DefaultAdminRuleArgs {
    /**
     * The name of the network manager Security Configuration.
     */
    configurationName: pulumi.Input<string>;
    /**
     * Default rule flag.
     */
    flag?: pulumi.Input<string>;
    /**
     * Whether the rule is custom or default.
     * Expected value is 'Default'.
     */
    kind: pulumi.Input<"Default">;
    /**
     * The name of the network manager.
     */
    networkManagerName: pulumi.Input<string>;
    /**
     * The name of the resource group.
     */
    resourceGroupName: pulumi.Input<string>;
    /**
     * The name of the network manager security Configuration rule collection.
     */
    ruleCollectionName: pulumi.Input<string>;
    /**
     * The name of the rule.
     */
    ruleName?: pulumi.Input<string>;
}
