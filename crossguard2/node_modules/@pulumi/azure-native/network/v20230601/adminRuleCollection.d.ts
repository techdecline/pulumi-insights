import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../../types/input";
import * as outputs from "../../types/output";
/**
 * Defines the admin rule collection.
 */
export declare class AdminRuleCollection extends pulumi.CustomResource {
    /**
     * Get an existing AdminRuleCollection resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    static get(name: string, id: pulumi.Input<pulumi.ID>, opts?: pulumi.CustomResourceOptions): AdminRuleCollection;
    /**
     * Returns true if the given object is an instance of AdminRuleCollection.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    static isInstance(obj: any): obj is AdminRuleCollection;
    /**
     * Groups for configuration
     */
    readonly appliesToGroups: pulumi.Output<outputs.network.v20230601.NetworkManagerSecurityGroupItemResponse[]>;
    /**
     * A description of the admin rule collection.
     */
    readonly description: pulumi.Output<string | undefined>;
    /**
     * A unique read-only string that changes whenever the resource is updated.
     */
    readonly etag: pulumi.Output<string>;
    /**
     * Resource name.
     */
    readonly name: pulumi.Output<string>;
    /**
     * The provisioning state of the resource.
     */
    readonly provisioningState: pulumi.Output<string>;
    /**
     * Unique identifier for this resource.
     */
    readonly resourceGuid: pulumi.Output<string>;
    /**
     * The system metadata related to this resource.
     */
    readonly systemData: pulumi.Output<outputs.network.v20230601.SystemDataResponse>;
    /**
     * Resource type.
     */
    readonly type: pulumi.Output<string>;
    /**
     * Create a AdminRuleCollection resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: AdminRuleCollectionArgs, opts?: pulumi.CustomResourceOptions);
}
/**
 * The set of arguments for constructing a AdminRuleCollection resource.
 */
export interface AdminRuleCollectionArgs {
    /**
     * Groups for configuration
     */
    appliesToGroups: pulumi.Input<pulumi.Input<inputs.network.v20230601.NetworkManagerSecurityGroupItemArgs>[]>;
    /**
     * The name of the network manager Security Configuration.
     */
    configurationName: pulumi.Input<string>;
    /**
     * A description of the admin rule collection.
     */
    description?: pulumi.Input<string>;
    /**
     * The name of the network manager.
     */
    networkManagerName: pulumi.Input<string>;
    /**
     * The name of the resource group.
     */
    resourceGroupName: pulumi.Input<string>;
    /**
     * The name of the network manager security Configuration rule collection.
     */
    ruleCollectionName?: pulumi.Input<string>;
}
