"use strict";
// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __exportStar = (this && this.__exportStar) || function(m, exports) {
    for (var p in m) if (p !== "default" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.VpnSite = exports.VpnGateway = exports.VpnConnection = exports.VirtualWAN = exports.VirtualHub = exports.ServiceEndpointPolicyDefinition = exports.ServiceEndpointPolicy = exports.NetworkInterface = exports.getVpnSiteOutput = exports.getVpnSite = exports.getVpnGatewayOutput = exports.getVpnGateway = exports.getVpnConnectionOutput = exports.getVpnConnection = exports.getVirtualWANOutput = exports.getVirtualWAN = exports.getVirtualHubOutput = exports.getVirtualHub = exports.getServiceEndpointPolicyDefinitionOutput = exports.getServiceEndpointPolicyDefinition = exports.getServiceEndpointPolicyOutput = exports.getServiceEndpointPolicy = exports.getNetworkInterfaceOutput = exports.getNetworkInterface = void 0;
const pulumi = require("@pulumi/pulumi");
const utilities = require("../../utilities");
exports.getNetworkInterface = null;
exports.getNetworkInterfaceOutput = null;
utilities.lazyLoad(exports, ["getNetworkInterface", "getNetworkInterfaceOutput"], () => require("./getNetworkInterface"));
exports.getServiceEndpointPolicy = null;
exports.getServiceEndpointPolicyOutput = null;
utilities.lazyLoad(exports, ["getServiceEndpointPolicy", "getServiceEndpointPolicyOutput"], () => require("./getServiceEndpointPolicy"));
exports.getServiceEndpointPolicyDefinition = null;
exports.getServiceEndpointPolicyDefinitionOutput = null;
utilities.lazyLoad(exports, ["getServiceEndpointPolicyDefinition", "getServiceEndpointPolicyDefinitionOutput"], () => require("./getServiceEndpointPolicyDefinition"));
exports.getVirtualHub = null;
exports.getVirtualHubOutput = null;
utilities.lazyLoad(exports, ["getVirtualHub", "getVirtualHubOutput"], () => require("./getVirtualHub"));
exports.getVirtualWAN = null;
exports.getVirtualWANOutput = null;
utilities.lazyLoad(exports, ["getVirtualWAN", "getVirtualWANOutput"], () => require("./getVirtualWAN"));
exports.getVpnConnection = null;
exports.getVpnConnectionOutput = null;
utilities.lazyLoad(exports, ["getVpnConnection", "getVpnConnectionOutput"], () => require("./getVpnConnection"));
exports.getVpnGateway = null;
exports.getVpnGatewayOutput = null;
utilities.lazyLoad(exports, ["getVpnGateway", "getVpnGatewayOutput"], () => require("./getVpnGateway"));
exports.getVpnSite = null;
exports.getVpnSiteOutput = null;
utilities.lazyLoad(exports, ["getVpnSite", "getVpnSiteOutput"], () => require("./getVpnSite"));
exports.NetworkInterface = null;
utilities.lazyLoad(exports, ["NetworkInterface"], () => require("./networkInterface"));
exports.ServiceEndpointPolicy = null;
utilities.lazyLoad(exports, ["ServiceEndpointPolicy"], () => require("./serviceEndpointPolicy"));
exports.ServiceEndpointPolicyDefinition = null;
utilities.lazyLoad(exports, ["ServiceEndpointPolicyDefinition"], () => require("./serviceEndpointPolicyDefinition"));
exports.VirtualHub = null;
utilities.lazyLoad(exports, ["VirtualHub"], () => require("./virtualHub"));
exports.VirtualWAN = null;
utilities.lazyLoad(exports, ["VirtualWAN"], () => require("./virtualWAN"));
exports.VpnConnection = null;
utilities.lazyLoad(exports, ["VpnConnection"], () => require("./vpnConnection"));
exports.VpnGateway = null;
utilities.lazyLoad(exports, ["VpnGateway"], () => require("./vpnGateway"));
exports.VpnSite = null;
utilities.lazyLoad(exports, ["VpnSite"], () => require("./vpnSite"));
// Export enums:
__exportStar(require("../../types/enums/network/v20180701"), exports);
const _module = {
    version: utilities.getVersion(),
    construct: (name, type, urn) => {
        switch (type) {
            case "azure-native:network/v20180701:NetworkInterface":
                return new exports.NetworkInterface(name, undefined, { urn });
            case "azure-native:network/v20180701:ServiceEndpointPolicy":
                return new exports.ServiceEndpointPolicy(name, undefined, { urn });
            case "azure-native:network/v20180701:ServiceEndpointPolicyDefinition":
                return new exports.ServiceEndpointPolicyDefinition(name, undefined, { urn });
            case "azure-native:network/v20180701:VirtualHub":
                return new exports.VirtualHub(name, undefined, { urn });
            case "azure-native:network/v20180701:VirtualWAN":
                return new exports.VirtualWAN(name, undefined, { urn });
            case "azure-native:network/v20180701:VpnConnection":
                return new exports.VpnConnection(name, undefined, { urn });
            case "azure-native:network/v20180701:VpnGateway":
                return new exports.VpnGateway(name, undefined, { urn });
            case "azure-native:network/v20180701:VpnSite":
                return new exports.VpnSite(name, undefined, { urn });
            default:
                throw new Error(`unknown resource type ${type}`);
        }
    },
};
pulumi.runtime.registerResourceModule("azure-native", "network/v20180701", _module);
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaW5kZXguanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi9uZXR3b3JrL3YyMDE4MDcwMS9pbmRleC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiO0FBQUEsc0VBQXNFO0FBQ3RFLGlGQUFpRjs7Ozs7Ozs7Ozs7Ozs7Ozs7QUFFakYseUNBQXlDO0FBQ3pDLDZDQUE2QztBQUloQyxRQUFBLG1CQUFtQixHQUErRCxJQUFXLENBQUM7QUFDOUYsUUFBQSx5QkFBeUIsR0FBcUUsSUFBVyxDQUFDO0FBQ3ZILFNBQVMsQ0FBQyxRQUFRLENBQUMsT0FBTyxFQUFFLENBQUMscUJBQXFCLEVBQUMsMkJBQTJCLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxPQUFPLENBQUMsdUJBQXVCLENBQUMsQ0FBQyxDQUFDO0FBRzVHLFFBQUEsd0JBQXdCLEdBQXlFLElBQVcsQ0FBQztBQUM3RyxRQUFBLDhCQUE4QixHQUErRSxJQUFXLENBQUM7QUFDdEksU0FBUyxDQUFDLFFBQVEsQ0FBQyxPQUFPLEVBQUUsQ0FBQywwQkFBMEIsRUFBQyxnQ0FBZ0MsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLE9BQU8sQ0FBQyw0QkFBNEIsQ0FBQyxDQUFDLENBQUM7QUFHM0gsUUFBQSxrQ0FBa0MsR0FBNkYsSUFBVyxDQUFDO0FBQzNJLFFBQUEsd0NBQXdDLEdBQW1HLElBQVcsQ0FBQztBQUNwSyxTQUFTLENBQUMsUUFBUSxDQUFDLE9BQU8sRUFBRSxDQUFDLG9DQUFvQyxFQUFDLDBDQUEwQyxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsT0FBTyxDQUFDLHNDQUFzQyxDQUFDLENBQUMsQ0FBQztBQUd6SixRQUFBLGFBQWEsR0FBbUQsSUFBVyxDQUFDO0FBQzVFLFFBQUEsbUJBQW1CLEdBQXlELElBQVcsQ0FBQztBQUNyRyxTQUFTLENBQUMsUUFBUSxDQUFDLE9BQU8sRUFBRSxDQUFDLGVBQWUsRUFBQyxxQkFBcUIsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLE9BQU8sQ0FB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