import * as pulumi from "@pulumi/pulumi";
/**
 * Gets the specified NSP profile.
 */
export declare function getNetworkSecurityPerimeterProfile(args: GetNetworkSecurityPerimeterProfileArgs, opts?: pulumi.InvokeOptions): Promise<GetNetworkSecurityPerimeterProfileResult>;
export interface GetNetworkSecurityPerimeterProfileArgs {
    /**
     * The name of the network security perimeter.
     */
    networkSecurityPerimeterName: string;
    /**
     * The name of the NSP profile.
     */
    profileName: string;
    /**
     * The name of the resource group.
     */
    resourceGroupName: string;
}
/**
 * The network security perimeter profile resource
 */
export interface GetNetworkSecurityPerimeterProfileResult {
    /**
     * Version number that increases with every update to access rules within the profile.
     */
    readonly accessRulesVersion: string;
    /**
     * Version number that increases with every update to diagnostic settings within the profile.
     */
    readonly diagnosticSettingsVersion: string;
    /**
     * Resource ID.
     */
    readonly id: string;
    /**
     * Resource location.
     */
    readonly location?: string;
    /**
     * Resource name.
     */
    readonly name: string;
    /**
     * Resource tags.
     */
    readonly tags?: {
        [key: string]: string;
    };
    /**
     * Resource type.
     */
    readonly type: string;
}
/**
 * Gets the specified NSP profile.
 */
export declare function getNetworkSecurityPerimeterProfileOutput(args: GetNetworkSecurityPerimeterProfileOutputArgs, opts?: pulumi.InvokeOutputOptions): pulumi.Output<GetNetworkSecurityPerimeterProfileResult>;
export interface GetNetworkSecurityPerimeterProfileOutputArgs {
    /**
     * The name of the network security perimeter.
     */
    networkSecurityPerimeterName: pulumi.Input<string>;
    /**
     * The name of the NSP profile.
     */
    profileName: pulumi.Input<string>;
    /**
     * The name of the resource group.
     */
    resourceGroupName: pulumi.Input<string>;
}
