"use strict";
// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***
Object.defineProperty(exports, "__esModule", { value: true });
exports.getP2sVpnGatewayP2sVpnConnectionHealthDetailedOutput = exports.getP2sVpnGatewayP2sVpnConnectionHealthDetailed = void 0;
const pulumi = require("@pulumi/pulumi");
const utilities = require("../../utilities");
/**
 * Gets the sas url to get the connection health detail of P2S clients of the virtual wan P2SVpnGateway in the specified resource group.
 */
function getP2sVpnGatewayP2sVpnConnectionHealthDetailed(args, opts) {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("azure-native:network/v20240101:getP2sVpnGatewayP2sVpnConnectionHealthDetailed", {
        "gatewayName": args.gatewayName,
        "outputBlobSasUrl": args.outputBlobSasUrl,
        "resourceGroupName": args.resourceGroupName,
        "vpnUserNamesFilter": args.vpnUserNamesFilter,
    }, opts);
}
exports.getP2sVpnGatewayP2sVpnConnectionHealthDetailed = getP2sVpnGatewayP2sVpnConnectionHealthDetailed;
/**
 * Gets the sas url to get the connection health detail of P2S clients of the virtual wan P2SVpnGateway in the specified resource group.
 */
function getP2sVpnGatewayP2sVpnConnectionHealthDetailedOutput(args, opts) {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invokeOutput("azure-native:network/v20240101:getP2sVpnGatewayP2sVpnConnectionHealthDetailed", {
        "gatewayName": args.gatewayName,
        "outputBlobSasUrl": args.outputBlobSasUrl,
        "resourceGroupName": args.resourceGroupName,
        "vpnUserNamesFilter": args.vpnUserNamesFilter,
    }, opts);
}
exports.getP2sVpnGatewayP2sVpnConnectionHealthDetailedOutput = getP2sVpnGatewayP2sVpnConnectionHealthDetailedOutput;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZ2V0UDJzVnBuR2F0ZXdheVAyc1ZwbkNvbm5lY3Rpb25IZWFsdGhEZXRhaWxlZC5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uL25ldHdvcmsvdjIwMjQwMTAxL2dldFAyc1ZwbkdhdGV3YXlQMnNWcG5Db25uZWN0aW9uSGVhbHRoRGV0YWlsZWQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IjtBQUFBLHNFQUFzRTtBQUN0RSxpRkFBaUY7OztBQUVqRix5Q0FBeUM7QUFDekMsNkNBQTZDO0FBRTdDOztHQUVHO0FBQ0gsU0FBZ0IsOENBQThDLENBQUMsSUFBd0QsRUFBRSxJQUEyQjtJQUNoSixJQUFJLEdBQUcsTUFBTSxDQUFDLFlBQVksQ0FBQyxTQUFTLENBQUMsb0JBQW9CLEVBQUUsRUFBRSxJQUFJLElBQUksRUFBRSxDQUFDLENBQUM7SUFDekUsT0FBTyxNQUFNLENBQUMsT0FBTyxDQUFDLE1BQU0sQ0FBQywrRUFBK0UsRUFBRTtRQUMxRyxhQUFhLEVBQUUsSUFBSSxDQUFDLFdBQVc7UUFDL0Isa0JBQWtCLEVBQUUsSUFBSSxDQUFDLGdCQUFnQjtRQUN6QyxtQkFBbUIsRUFBRSxJQUFJLENBQUMsaUJBQWlCO1FBQzNDLG9CQUFvQixFQUFFLElBQUksQ0FBQyxrQkFBa0I7S0FDaEQsRUFBRSxJQUFJLENBQUMsQ0FBQztBQUNiLENBQUM7QUFSRCx3R0FRQztBQThCRDs7R0FFRztBQUNILFNBQWdCLG9EQUFvRCxDQUFDLElBQThELEVBQUUsSUFBaUM7SUFDbEssSUFBSSxHQUFHLE1BQU0sQ0FBQyxZQUFZLENBQUMsU0FBUyxDQUFDLG9CQUFvQixFQUFFLEVBQUUsSUFBSSxJQUFJLEVBQUUsQ0FBQyxDQUFDO0lBQ3pFLE9BQU8sTUFBTSxDQUFDLE9BQU8sQ0FBQyxZQUFZLENBQUMsK0VBQStFLEVBQUU7UUFDaEgsYUFBYSxFQUFFLElBQUksQ0FBQyxXQUFXO1FBQy9CLGtCQUFrQixFQUFFLElBQUksQ0FBQyxnQkFBZ0I7UUFDekMsbUJBQW1CLEVBQUUsSUFBSSxDQUFDLGlCQUFpQjtRQUMzQyxvQkFBb0IsRUFBRSxJQUFJLENBQUMsa0JBQWtCO0tBQ2hELEVBQUUsSUFBSSxDQUFDLENBQUM7QUFDYixDQUFDO0FBUkQsb0hBUUMifQ==