import * as pulumi from "@pulumi/pulumi";
import * as outputs from "../../types/output";
/**
 * Gets load balancer backend address pool.
 */
export declare function getLoadBalancerBackendAddressPool(args: GetLoadBalancerBackendAddressPoolArgs, opts?: pulumi.InvokeOptions): Promise<GetLoadBalancerBackendAddressPoolResult>;
export interface GetLoadBalancerBackendAddressPoolArgs {
    /**
     * The name of the backend address pool.
     */
    backendAddressPoolName: string;
    /**
     * The name of the load balancer.
     */
    loadBalancerName: string;
    /**
     * The name of the resource group.
     */
    resourceGroupName: string;
}
/**
 * Pool of backend IP addresses.
 */
export interface GetLoadBalancerBackendAddressPoolResult {
    /**
     * An array of references to IP addresses defined in network interfaces.
     */
    readonly backendIPConfigurations: outputs.network.v20240101.NetworkInterfaceIPConfigurationResponse[];
    /**
     * Amount of seconds Load Balancer waits for before sending RESET to client and backend address.
     */
    readonly drainPeriodInSeconds?: number;
    /**
     * A unique read-only string that changes whenever the resource is updated.
     */
    readonly etag: string;
    /**
     * Resource ID.
     */
    readonly id?: string;
    /**
     * An array of references to inbound NAT rules that use this backend address pool.
     */
    readonly inboundNatRules: outputs.network.v20240101.SubResourceResponse[];
    /**
     * An array of backend addresses.
     */
    readonly loadBalancerBackendAddresses?: outputs.network.v20240101.LoadBalancerBackendAddressResponse[];
    /**
     * An array of references to load balancing rules that use this backend address pool.
     */
    readonly loadBalancingRules: outputs.network.v20240101.SubResourceResponse[];
    /**
     * The location of the backend address pool.
     */
    readonly location?: string;
    /**
     * The name of the resource that is unique within the set of backend address pools used by the load balancer. This name can be used to access the resource.
     */
    readonly name?: string;
    /**
     * A reference to an outbound rule that uses this backend address pool.
     */
    readonly outboundRule: outputs.network.v20240101.SubResourceResponse;
    /**
     * An array of references to outbound rules that use this backend address pool.
     */
    readonly outboundRules: outputs.network.v20240101.SubResourceResponse[];
    /**
     * The provisioning state of the backend address pool resource.
     */
    readonly provisioningState: string;
    /**
     * Backend address synchronous mode for the backend pool
     */
    readonly syncMode?: string;
    /**
     * An array of gateway load balancer tunnel interfaces.
     */
    readonly tunnelInterfaces?: outputs.network.v20240101.GatewayLoadBalancerTunnelInterfaceResponse[];
    /**
     * Type of the resource.
     */
    readonly type: string;
    /**
     * A reference to a virtual network.
     */
    readonly virtualNetwork?: outputs.network.v20240101.SubResourceResponse;
}
/**
 * Gets load balancer backend address pool.
 */
export declare function getLoadBalancerBackendAddressPoolOutput(args: GetLoadBalancerBackendAddressPoolOutputArgs, opts?: pulumi.InvokeOutputOptions): pulumi.Output<GetLoadBalancerBackendAddressPoolResult>;
export interface GetLoadBalancerBackendAddressPoolOutputArgs {
    /**
     * The name of the backend address pool.
     */
    backendAddressPoolName: pulumi.Input<string>;
    /**
     * The name of the load balancer.
     */
    loadBalancerName: pulumi.Input<string>;
    /**
     * The name of the resource group.
     */
    resourceGroupName: pulumi.Input<string>;
}
