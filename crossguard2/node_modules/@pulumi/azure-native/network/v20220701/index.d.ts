export { DnsForwardingRulesetArgs } from "./dnsForwardingRuleset";
export type DnsForwardingRuleset = import("./dnsForwardingRuleset").DnsForwardingRuleset;
export declare const DnsForwardingRuleset: typeof import("./dnsForwardingRuleset").DnsForwardingRuleset;
export { DnsResolverArgs } from "./dnsResolver";
export type DnsResolver = import("./dnsResolver").DnsResolver;
export declare const DnsResolver: typeof import("./dnsResolver").DnsResolver;
export { ForwardingRuleArgs } from "./forwardingRule";
export type ForwardingRule = import("./forwardingRule").ForwardingRule;
export declare const ForwardingRule: typeof import("./forwardingRule").ForwardingRule;
export { GetDnsForwardingRulesetArgs, GetDnsForwardingRulesetResult, GetDnsForwardingRulesetOutputArgs } from "./getDnsForwardingRuleset";
export declare const getDnsForwardingRuleset: typeof import("./getDnsForwardingRuleset").getDnsForwardingRuleset;
export declare const getDnsForwardingRulesetOutput: typeof import("./getDnsForwardingRuleset").getDnsForwardingRulesetOutput;
export { GetDnsResolverArgs, GetDnsResolverResult, GetDnsResolverOutputArgs } from "./getDnsResolver";
export declare const getDnsResolver: typeof import("./getDnsResolver").getDnsResolver;
export declare const getDnsResolverOutput: typeof import("./getDnsResolver").getDnsResolverOutput;
export { GetForwardingRuleArgs, GetForwardingRuleResult, GetForwardingRuleOutputArgs } from "./getForwardingRule";
export declare const getForwardingRule: typeof import("./getForwardingRule").getForwardingRule;
export declare const getForwardingRuleOutput: typeof import("./getForwardingRule").getForwardingRuleOutput;
export { GetInboundEndpointArgs, GetInboundEndpointResult, GetInboundEndpointOutputArgs } from "./getInboundEndpoint";
export declare const getInboundEndpoint: typeof import("./getInboundEndpoint").getInboundEndpoint;
export declare const getInboundEndpointOutput: typeof import("./getInboundEndpoint").getInboundEndpointOutput;
export { GetOutboundEndpointArgs, GetOutboundEndpointResult, GetOutboundEndpointOutputArgs } from "./getOutboundEndpoint";
export declare const getOutboundEndpoint: typeof import("./getOutboundEndpoint").getOutboundEndpoint;
export declare const getOutboundEndpointOutput: typeof import("./getOutboundEndpoint").getOutboundEndpointOutput;
export { GetPrivateResolverVirtualNetworkLinkArgs, GetPrivateResolverVirtualNetworkLinkResult, GetPrivateResolverVirtualNetworkLinkOutputArgs } from "./getPrivateResolverVirtualNetworkLink";
export declare const getPrivateResolverVirtualNetworkLink: typeof import("./getPrivateResolverVirtualNetworkLink").getPrivateResolverVirtualNetworkLink;
export declare const getPrivateResolverVirtualNetworkLinkOutput: typeof import("./getPrivateResolverVirtualNetworkLink").getPrivateResolverVirtualNetworkLinkOutput;
export { GetSecurityRuleArgs, GetSecurityRuleResult, GetSecurityRuleOutputArgs } from "./getSecurityRule";
export declare const getSecurityRule: typeof import("./getSecurityRule").getSecurityRule;
export declare const getSecurityRuleOutput: typeof import("./getSecurityRule").getSecurityRuleOutput;
export { GetSubnetArgs, GetSubnetResult, GetSubnetOutputArgs } from "./getSubnet";
export declare const getSubnet: typeof import("./getSubnet").getSubnet;
export declare const getSubnetOutput: typeof import("./getSubnet").getSubnetOutput;
export { InboundEndpointArgs } from "./inboundEndpoint";
export type InboundEndpoint = import("./inboundEndpoint").InboundEndpoint;
export declare const InboundEndpoint: typeof import("./inboundEndpoint").InboundEndpoint;
export { ListDnsForwardingRulesetByVirtualNetworkArgs, ListDnsForwardingRulesetByVirtualNetworkResult, ListDnsForwardingRulesetByVirtualNetworkOutputArgs } from "./listDnsForwardingRulesetByVirtualNetwork";
export declare const listDnsForwardingRulesetByVirtualNetwork: typeof import("./listDnsForwardingRulesetByVirtualNetwork").listDnsForwardingRulesetByVirtualNetwork;
export declare const listDnsForwardingRulesetByVirtualNetworkOutput: typeof import("./listDnsForwardingRulesetByVirtualNetwork").listDnsForwardingRulesetByVirtualNetworkOutput;
export { ListDnsResolverByVirtualNetworkArgs, ListDnsResolverByVirtualNetworkResult, ListDnsResolverByVirtualNetworkOutputArgs } from "./listDnsResolverByVirtualNetwork";
export declare const listDnsResolverByVirtualNetwork: typeof import("./listDnsResolverByVirtualNetwork").listDnsResolverByVirtualNetwork;
export declare const listDnsResolverByVirtualNetworkOutput: typeof import("./listDnsResolverByVirtualNetwork").listDnsResolverByVirtualNetworkOutput;
export { OutboundEndpointArgs } from "./outboundEndpoint";
export type OutboundEndpoint = import("./outboundEndpoint").OutboundEndpoint;
export declare const OutboundEndpoint: typeof import("./outboundEndpoint").OutboundEndpoint;
export { PrivateResolverVirtualNetworkLinkArgs } from "./privateResolverVirtualNetworkLink";
export type PrivateResolverVirtualNetworkLink = import("./privateResolverVirtualNetworkLink").PrivateResolverVirtualNetworkLink;
export declare const PrivateResolverVirtualNetworkLink: typeof import("./privateResolverVirtualNetworkLink").PrivateResolverVirtualNetworkLink;
export { SecurityRuleArgs } from "./securityRule";
export type SecurityRule = import("./securityRule").SecurityRule;
export declare const SecurityRule: typeof import("./securityRule").SecurityRule;
export { SubnetArgs } from "./subnet";
export type Subnet = import("./subnet").Subnet;
export declare const Subnet: typeof import("./subnet").Subnet;
export * from "../../types/enums/network/v20220701";
