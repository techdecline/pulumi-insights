"use strict";
// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __exportStar = (this && this.__exportStar) || function(m, exports) {
    for (var p in m) if (p !== "default" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.WebApplicationFirewallPolicy = exports.VirtualWan = exports.P2sVpnServerConfiguration = exports.P2sVpnGateway = exports.getWebApplicationFirewallPolicyOutput = exports.getWebApplicationFirewallPolicy = exports.getVirtualWanOutput = exports.getVirtualWan = exports.getP2sVpnServerConfigurationOutput = exports.getP2sVpnServerConfiguration = exports.getP2sVpnGatewayP2sVpnConnectionHealthOutput = exports.getP2sVpnGatewayP2sVpnConnectionHealth = exports.getP2sVpnGatewayOutput = exports.getP2sVpnGateway = void 0;
const pulumi = require("@pulumi/pulumi");
const utilities = require("../../utilities");
exports.getP2sVpnGateway = null;
exports.getP2sVpnGatewayOutput = null;
utilities.lazyLoad(exports, ["getP2sVpnGateway", "getP2sVpnGatewayOutput"], () => require("./getP2sVpnGateway"));
exports.getP2sVpnGatewayP2sVpnConnectionHealth = null;
exports.getP2sVpnGatewayP2sVpnConnectionHealthOutput = null;
utilities.lazyLoad(exports, ["getP2sVpnGatewayP2sVpnConnectionHealth", "getP2sVpnGatewayP2sVpnConnectionHealthOutput"], () => require("./getP2sVpnGatewayP2sVpnConnectionHealth"));
exports.getP2sVpnServerConfiguration = null;
exports.getP2sVpnServerConfigurationOutput = null;
utilities.lazyLoad(exports, ["getP2sVpnServerConfiguration", "getP2sVpnServerConfigurationOutput"], () => require("./getP2sVpnServerConfiguration"));
exports.getVirtualWan = null;
exports.getVirtualWanOutput = null;
utilities.lazyLoad(exports, ["getVirtualWan", "getVirtualWanOutput"], () => require("./getVirtualWan"));
exports.getWebApplicationFirewallPolicy = null;
exports.getWebApplicationFirewallPolicyOutput = null;
utilities.lazyLoad(exports, ["getWebApplicationFirewallPolicy", "getWebApplicationFirewallPolicyOutput"], () => require("./getWebApplicationFirewallPolicy"));
exports.P2sVpnGateway = null;
utilities.lazyLoad(exports, ["P2sVpnGateway"], () => require("./p2sVpnGateway"));
exports.P2sVpnServerConfiguration = null;
utilities.lazyLoad(exports, ["P2sVpnServerConfiguration"], () => require("./p2sVpnServerConfiguration"));
exports.VirtualWan = null;
utilities.lazyLoad(exports, ["VirtualWan"], () => require("./virtualWan"));
exports.WebApplicationFirewallPolicy = null;
utilities.lazyLoad(exports, ["WebApplicationFirewallPolicy"], () => require("./webApplicationFirewallPolicy"));
// Export enums:
__exportStar(require("../../types/enums/network/v20190701"), exports);
const _module = {
    version: utilities.getVersion(),
    construct: (name, type, urn) => {
        switch (type) {
            case "azure-native:network/v20190701:P2sVpnGateway":
                return new exports.P2sVpnGateway(name, undefined, { urn });
            case "azure-native:network/v20190701:P2sVpnServerConfiguration":
                return new exports.P2sVpnServerConfiguration(name, undefined, { urn });
            case "azure-native:network/v20190701:VirtualWan":
                return new exports.VirtualWan(name, undefined, { urn });
            case "azure-native:network/v20190701:WebApplicationFirewallPolicy":
                return new exports.WebApplicationFirewallPolicy(name, undefined, { urn });
            default:
                throw new Error(`unknown resource type ${type}`);
        }
    },
};
pulumi.runtime.registerResourceModule("azure-native", "network/v20190701", _module);
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaW5kZXguanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi9uZXR3b3JrL3YyMDE5MDcwMS9pbmRleC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiO0FBQUEsc0VBQXNFO0FBQ3RFLGlGQUFpRjs7Ozs7Ozs7Ozs7Ozs7Ozs7QUFFakYseUNBQXlDO0FBQ3pDLDZDQUE2QztBQUloQyxRQUFBLGdCQUFnQixHQUF5RCxJQUFXLENBQUM7QUFDckYsUUFBQSxzQkFBc0IsR0FBK0QsSUFBVyxDQUFDO0FBQzlHLFNBQVMsQ0FBQyxRQUFRLENBQUMsT0FBTyxFQUFFLENBQUMsa0JBQWtCLEVBQUMsd0JBQXdCLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxPQUFPLENBQUMsb0JBQW9CLENBQUMsQ0FBQyxDQUFDO0FBR25HLFFBQUEsc0NBQXNDLEdBQXFHLElBQVcsQ0FBQztBQUN2SixRQUFBLDRDQUE0QyxHQUEyRyxJQUFXLENBQUM7QUFDaEwsU0FBUyxDQUFDLFFBQVEsQ0FBQyxPQUFPLEVBQUUsQ0FBQyx3Q0FBd0MsRUFBQyw4Q0FBOEMsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLE9BQU8sQ0FBQywwQ0FBMEMsQ0FBQyxDQUFDLENBQUM7QUFHckssUUFBQSw0QkFBNEIsR0FBaUYsSUFBVyxDQUFDO0FBQ3pILFFBQUEsa0NBQWtDLEdBQXVGLElBQVcsQ0FBQztBQUNsSixTQUFTLENBQUMsUUFBUSxDQUFDLE9BQU8sRUFBRSxDQUFDLDhCQUE4QixFQUFDLG9DQUFvQyxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsT0FBTyxDQUFDLGdDQUFnQyxDQUFDLENBQUMsQ0FBQztBQUd2SSxRQUFBLGFBQWEsR0FBbUQsSUFBVyxDQUFDO0FBQzVFLFFBQUEsbUJBQW1CLEdBQXlELElBQVcsQ0FBQztBQUNyRyxTQUFTLENBQUMsUUFBUSxDQUFDLE9BQU8sRUFBRSxDQUFDLGVBQWUsRUFBQyxxQkFBcUIsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLE9BQU8sQ0FBQyxpQkFBaUIsQ0FBQyxDQUFDLENBQUM7QUFHMUYsUUFBQSwrQkFBK0IsR0FBdUYsSUFBVyxDQUFDO0FBQ2xJLFFBQUEscUNBQXFDLEdBQTZGLElBQVcsQ0FBQztBQUMzSixTQUFTLENBQUMsUUFBUSxDQUFDLE9BQU8sRUFBRSxDQUFDLGlDQUFpQyxFQUFDLHVDQUF1QyxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsT0FBTyxDQUFDLG1DQUFtQyxDQUFDLENBQUMsQ0FBQztBQUloSixRQUFBLGFBQWEsR0FBbUQsSUFBVyxDQUFDO0FBQ3pGLFNBQVMsQ0FBQyxRQUFRLENBQUMsT0FBTyxFQUFFLENBQUMsZUFBZSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsT0FBTyxDQUFDLGlCQUFpQixDQUFDLENBQUMsQ0FBQztBQUlwRSxRQUFBLHlCQUF5QixHQUEyRSxJQUFXLENBQUM7QUFDN0gsU0FBUyxDQUFDLFFBQVEsQ0FBQyxPQUFPLEVBQUUsQ0FBQywyQkFBMkIsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLE9BQU8sQ0FBQyw2QkFBNkIsQ0FBQyxDQUFDLENBQUM7QUFJNUYsUUFBQSxVQUFVLEdBQTZDLElBQVcsQ0FBQztBQUNoRixTQUFTLENBQUMsUUFBUSxDQUFDLE9BQU8sRUFBRSxDQUFDLFlBQVksQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLE9BQU8sQ0FBQyxjQUFjLENBQUMsQ0FBQyxDQUFDO0FBSTlELFFBQUEsNEJBQTRCLEdBQWlGLElBQVcsQ0FBQztBQUN0SSxTQUFTLENBQUMsUUFBUSxDQUFDLE9BQU8sRUFBRSxDQUFDLDhCQUE4QixDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsT0FBTyxDQUFDLGdDQUFnQyxDQUFDLENBQUMsQ0FBQztBQUcvRyxnQkFBZ0I7QUFDaEIsc0VBQW9EO0FBRXBELE1BQU0sT0FBTyxHQUFHO0lBQ1osT0FBTyxFQUFFLFNBQVMsQ0FBQyxVQUFVLEVBQUU7SUFDL0IsU0FBUyxFQUFFLENBQUMsSUFBWSxFQUFFLElBQVksRUFBRSxHQUFXLEVBQW1CLEVBQUU7UUFDcEUsUUFBUSxJQUFJLEVBQUU7WUFDVixLQUFLLDhDQUE4QztnQkFDL0MsT0FBTyxJQUFJLHFCQUFhLENBQUMsSUFBSSxFQUFPLFNBQVMsRUFBRSxFQUFFLEdBQUcsRUFBRSxDQUFDLENBQUE7WUFDM0QsS0FBSywwREFBMEQ7Z0JBQzNELE9BQU8sSUFBSSxpQ0FBeUIsQ0FBQyxJQUFJLEVBQU8sU0FBUyxFQUFFLEVBQUUsR0FBRyxFQUFFLENBQUMsQ0FBQTtZQUN2RSxLQUFLLDJDQUEyQztnQkFDNUMsT0FBTyxJQUFJLGtCQUFVLENBQUMsSUFBSSxFQUFPLFNBQVMsRUFBRSxFQUFFLEdBQUcsRUFBRSxDQUFDLENBQUE7WUFDeEQsS0FBSyw2REFBNkQ7Z0JBQzlELE9BQU8sSUFBSSxvQ0FBNEIsQ0FBQyxJQUFJLEVBQU8sU0FBUyxFQUFFLEVBQUUsR0FBRyxFQUFFLENBQUMsQ0FBQTtZQUMxRTtnQkFDSSxNQUFNLElBQUksS0FBSyxDQUFDLHlCQUF5QixJQUFJLEVBQUUsQ0FBQyxDQUFDO1NBQ3hEO0lBQ0wsQ0FBQztDQUNKLENBQUM7QUFDRixNQUFNLENBQUMsT0FBTyxDQUFDLHNCQUFzQixDQUFDLGNBQWMsRUFBRSxtQkFBbUIsRUFBRSxPQUFPLENBQUMsQ0FBQSJ9