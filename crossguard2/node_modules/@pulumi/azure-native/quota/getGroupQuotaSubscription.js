"use strict";
// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***
Object.defineProperty(exports, "__esModule", { value: true });
exports.getGroupQuotaSubscriptionOutput = exports.getGroupQuotaSubscription = void 0;
const pulumi = require("@pulumi/pulumi");
const utilities = require("../utilities");
/**
 * Returns the subscriptionIds along with its provisioning state for being associated with the GroupQuota. If the subscription is not a member of GroupQuota, it will return 404, else 200.
 * Azure REST API version: 2023-06-01-preview.
 *
 * Other available API versions: 2024-10-15-preview, 2024-12-18-preview, 2025-03-01.
 */
function getGroupQuotaSubscription(args, opts) {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("azure-native:quota:getGroupQuotaSubscription", {
        "groupQuotaName": args.groupQuotaName,
        "managementGroupId": args.managementGroupId,
    }, opts);
}
exports.getGroupQuotaSubscription = getGroupQuotaSubscription;
/**
 * Returns the subscriptionIds along with its provisioning state for being associated with the GroupQuota. If the subscription is not a member of GroupQuota, it will return 404, else 200.
 * Azure REST API version: 2023-06-01-preview.
 *
 * Other available API versions: 2024-10-15-preview, 2024-12-18-preview, 2025-03-01.
 */
function getGroupQuotaSubscriptionOutput(args, opts) {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invokeOutput("azure-native:quota:getGroupQuotaSubscription", {
        "groupQuotaName": args.groupQuotaName,
        "managementGroupId": args.managementGroupId,
    }, opts);
}
exports.getGroupQuotaSubscriptionOutput = getGroupQuotaSubscriptionOutput;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZ2V0R3JvdXBRdW90YVN1YnNjcmlwdGlvbi5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uL3F1b3RhL2dldEdyb3VwUXVvdGFTdWJzY3JpcHRpb24udHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IjtBQUFBLHNFQUFzRTtBQUN0RSxpRkFBaUY7OztBQUVqRix5Q0FBeUM7QUFJekMsMENBQTBDO0FBRTFDOzs7OztHQUtHO0FBQ0gsU0FBZ0IseUJBQXlCLENBQUMsSUFBbUMsRUFBRSxJQUEyQjtJQUN0RyxJQUFJLEdBQUcsTUFBTSxDQUFDLFlBQVksQ0FBQyxTQUFTLENBQUMsb0JBQW9CLEVBQUUsRUFBRSxJQUFJLElBQUksRUFBRSxDQUFDLENBQUM7SUFDekUsT0FBTyxNQUFNLENBQUMsT0FBTyxDQUFDLE1BQU0sQ0FBQyw4Q0FBOEMsRUFBRTtRQUN6RSxnQkFBZ0IsRUFBRSxJQUFJLENBQUMsY0FBYztRQUNyQyxtQkFBbUIsRUFBRSxJQUFJLENBQUMsaUJBQWlCO0tBQzlDLEVBQUUsSUFBSSxDQUFDLENBQUM7QUFDYixDQUFDO0FBTkQsOERBTUM7QUFtQ0Q7Ozs7O0dBS0c7QUFDSCxTQUFnQiwrQkFBK0IsQ0FBQyxJQUF5QyxFQUFFLElBQWlDO0lBQ3hILElBQUksR0FBRyxNQUFNLENBQUMsWUFBWSxDQUFDLFNBQVMsQ0FBQyxvQkFBb0IsRUFBRSxFQUFFLElBQUksSUFBSSxFQUFFLENBQUMsQ0FBQztJQUN6RSxPQUFPLE1BQU0sQ0FBQyxPQUFPLENBQUMsWUFBWSxDQUFDLDhDQUE4QyxFQUFFO1FBQy9FLGdCQUFnQixFQUFFLElBQUksQ0FBQyxjQUFjO1FBQ3JDLG1CQUFtQixFQUFFLElBQUksQ0FBQyxpQkFBaUI7S0FDOUMsRUFBRSxJQUFJLENBQUMsQ0FBQztBQUNiLENBQUM7QUFORCwwRUFNQyJ9