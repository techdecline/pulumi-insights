import * as pulumi from "@pulumi/pulumi";
/**
 * Class representing a CosmosDb data connection.
 */
export declare class CosmosDbDataConnection extends pulumi.CustomResource {
    /**
     * Get an existing CosmosDbDataConnection resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    static get(name: string, id: pulumi.Input<pulumi.ID>, opts?: pulumi.CustomResourceOptions): CosmosDbDataConnection;
    /**
     * Returns true if the given object is an instance of CosmosDbDataConnection.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    static isInstance(obj: any): obj is CosmosDbDataConnection;
    /**
     * The resource ID of the Cosmos DB account used to create the data connection.
     */
    readonly cosmosDbAccountResourceId: pulumi.Output<string>;
    /**
     * The name of an existing container in the Cosmos DB database.
     */
    readonly cosmosDbContainer: pulumi.Output<string>;
    /**
     * The name of an existing database in the Cosmos DB account.
     */
    readonly cosmosDbDatabase: pulumi.Output<string>;
    /**
     * Kind of the endpoint for the data connection
     * Expected value is 'CosmosDb'.
     */
    readonly kind: pulumi.Output<"CosmosDb">;
    /**
     * Resource location.
     */
    readonly location: pulumi.Output<string | undefined>;
    /**
     * The object ID of the managed identity resource.
     */
    readonly managedIdentityObjectId: pulumi.Output<string>;
    /**
     * The resource ID of a managed system or user-assigned identity. The identity is used to authenticate with Cosmos DB.
     */
    readonly managedIdentityResourceId: pulumi.Output<string>;
    /**
     * The name of an existing mapping rule to use when ingesting the retrieved data.
     */
    readonly mappingRuleName: pulumi.Output<string | undefined>;
    /**
     * The name of the resource
     */
    readonly name: pulumi.Output<string>;
    /**
     * The provisioned state of the resource.
     */
    readonly provisioningState: pulumi.Output<string>;
    /**
     * Optional. If defined, the data connection retrieves Cosmos DB documents created or updated after the specified retrieval start date.
     */
    readonly retrievalStartDate: pulumi.Output<string | undefined>;
    /**
     * The case-sensitive name of the existing target table in your cluster. Retrieved data is ingested into this table.
     */
    readonly tableName: pulumi.Output<string>;
    /**
     * The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
     */
    readonly type: pulumi.Output<string>;
    /**
     * Create a CosmosDbDataConnection resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: CosmosDbDataConnectionArgs, opts?: pulumi.CustomResourceOptions);
}
/**
 * The set of arguments for constructing a CosmosDbDataConnection resource.
 */
export interface CosmosDbDataConnectionArgs {
    /**
     * The name of the Kusto cluster.
     */
    clusterName: pulumi.Input<string>;
    /**
     * The resource ID of the Cosmos DB account used to create the data connection.
     */
    cosmosDbAccountResourceId: pulumi.Input<string>;
    /**
     * The name of an existing container in the Cosmos DB database.
     */
    cosmosDbContainer: pulumi.Input<string>;
    /**
     * The name of an existing database in the Cosmos DB account.
     */
    cosmosDbDatabase: pulumi.Input<string>;
    /**
     * The name of the data connection.
     */
    dataConnectionName?: pulumi.Input<string>;
    /**
     * The name of the database in the Kusto cluster.
     */
    databaseName: pulumi.Input<string>;
    /**
     * Kind of the endpoint for the data connection
     * Expected value is 'CosmosDb'.
     */
    kind: pulumi.Input<"CosmosDb">;
    /**
     * Resource location.
     */
    location?: pulumi.Input<string>;
    /**
     * The resource ID of a managed system or user-assigned identity. The identity is used to authenticate with Cosmos DB.
     */
    managedIdentityResourceId: pulumi.Input<string>;
    /**
     * The name of an existing mapping rule to use when ingesting the retrieved data.
     */
    mappingRuleName?: pulumi.Input<string>;
    /**
     * The name of the resource group containing the Kusto cluster.
     */
    resourceGroupName: pulumi.Input<string>;
    /**
     * Optional. If defined, the data connection retrieves Cosmos DB documents created or updated after the specified retrieval start date.
     */
    retrievalStartDate?: pulumi.Input<string>;
    /**
     * The case-sensitive name of the existing target table in your cluster. Retrieved data is ingested into this table.
     */
    tableName: pulumi.Input<string>;
}
