import * as pulumi from "@pulumi/pulumi";
import * as outputs from "../../types/output";
/**
 * Gets a storage container
 */
export declare function getStorageContainer(args: GetStorageContainerArgs, opts?: pulumi.InvokeOptions): Promise<GetStorageContainerResult>;
export interface GetStorageContainerArgs {
    /**
     * The name of the resource group. The name is case insensitive.
     */
    resourceGroupName: string;
    /**
     * Name of the storage container
     */
    storageContainerName: string;
}
/**
 * The storage container resource definition.
 */
export interface GetStorageContainerResult {
    /**
     * The extendedLocation of the resource.
     */
    readonly extendedLocation?: outputs.azurestackhci.v20240101.ExtendedLocationResponse;
    /**
     * Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
     */
    readonly id: string;
    /**
     * The geo-location where the resource lives
     */
    readonly location: string;
    /**
     * The name of the resource
     */
    readonly name: string;
    /**
     * Path of the storage container on the disk
     */
    readonly path: string;
    /**
     * Provisioning state of the storage container.
     */
    readonly provisioningState: string;
    /**
     * The observed state of storage containers
     */
    readonly status: outputs.azurestackhci.v20240101.StorageContainerStatusResponse;
    /**
     * Azure Resource Manager metadata containing createdBy and modifiedBy information.
     */
    readonly systemData: outputs.azurestackhci.v20240101.SystemDataResponse;
    /**
     * Resource tags.
     */
    readonly tags?: {
        [key: string]: string;
    };
    /**
     * The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
     */
    readonly type: string;
}
/**
 * Gets a storage container
 */
export declare function getStorageContainerOutput(args: GetStorageContainerOutputArgs, opts?: pulumi.InvokeOutputOptions): pulumi.Output<GetStorageContainerResult>;
export interface GetStorageContainerOutputArgs {
    /**
     * The name of the resource group. The name is case insensitive.
     */
    resourceGroupName: pulumi.Input<string>;
    /**
     * Name of the storage container
     */
    storageContainerName: pulumi.Input<string>;
}
