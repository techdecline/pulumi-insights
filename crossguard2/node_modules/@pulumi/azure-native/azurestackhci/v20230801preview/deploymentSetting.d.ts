import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../../types/input";
import * as outputs from "../../types/output";
import * as enums from "../../types/enums";
/**
 * Edge device resource
 */
export declare class DeploymentSetting extends pulumi.CustomResource {
    /**
     * Get an existing DeploymentSetting resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    static get(name: string, id: pulumi.Input<pulumi.ID>, opts?: pulumi.CustomResourceOptions): DeploymentSetting;
    /**
     * Returns true if the given object is an instance of DeploymentSetting.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    static isInstance(obj: any): obj is DeploymentSetting;
    /**
     * Azure resource ids of Arc machines to be part of cluster.
     */
    readonly arcNodeResourceIds: pulumi.Output<string[]>;
    /**
     * Scale units will contains list of deployment data
     */
    readonly deploymentConfiguration: pulumi.Output<outputs.azurestackhci.v20230801preview.DeploymentConfigurationResponse>;
    /**
     * The deployment mode for cluster deployment.
     */
    readonly deploymentMode: pulumi.Output<string>;
    /**
     * The name of the resource
     */
    readonly name: pulumi.Output<string>;
    /**
     * DeploymentSetting provisioning state
     */
    readonly provisioningState: pulumi.Output<string>;
    /**
     * Deployment Status reported from cluster.
     */
    readonly reportedProperties: pulumi.Output<outputs.azurestackhci.v20230801preview.ReportedPropertiesResponse>;
    /**
     * Azure Resource Manager metadata containing createdBy and modifiedBy information.
     */
    readonly systemData: pulumi.Output<outputs.azurestackhci.v20230801preview.SystemDataResponse>;
    /**
     * The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
     */
    readonly type: pulumi.Output<string>;
    /**
     * Create a DeploymentSetting resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: DeploymentSettingArgs, opts?: pulumi.CustomResourceOptions);
}
/**
 * The set of arguments for constructing a DeploymentSetting resource.
 */
export interface DeploymentSettingArgs {
    /**
     * Azure resource ids of Arc machines to be part of cluster.
     */
    arcNodeResourceIds: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The name of the cluster.
     */
    clusterName: pulumi.Input<string>;
    /**
     * Scale units will contains list of deployment data
     */
    deploymentConfiguration: pulumi.Input<inputs.azurestackhci.v20230801preview.DeploymentConfigurationArgs>;
    /**
     * The deployment mode for cluster deployment.
     */
    deploymentMode: pulumi.Input<string | enums.azurestackhci.v20230801preview.DeploymentMode>;
    /**
     * Name of Deployment Setting
     */
    deploymentSettingsName?: pulumi.Input<string>;
    /**
     * The name of the resource group. The name is case insensitive.
     */
    resourceGroupName: pulumi.Input<string>;
}
