import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../../types/input";
import * as outputs from "../../types/output";
/**
 * The network interface resource definition.
 */
export declare class NetworkinterfaceRetrieve extends pulumi.CustomResource {
    /**
     * Get an existing NetworkinterfaceRetrieve resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    static get(name: string, id: pulumi.Input<pulumi.ID>, opts?: pulumi.CustomResourceOptions): NetworkinterfaceRetrieve;
    /**
     * Returns true if the given object is an instance of NetworkinterfaceRetrieve.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    static isInstance(obj: any): obj is NetworkinterfaceRetrieve;
    /**
     * DNS Settings for the interface
     */
    readonly dnsSettings: pulumi.Output<outputs.azurestackhci.v20210901preview.InterfaceDNSSettingsResponse | undefined>;
    /**
     * The extendedLocation of the resource.
     */
    readonly extendedLocation: pulumi.Output<outputs.azurestackhci.v20210901preview.ExtendedLocationResponse | undefined>;
    /**
     * IPConfigurations - A list of IPConfigurations of the network interface.
     */
    readonly ipConfigurations: pulumi.Output<outputs.azurestackhci.v20210901preview.IpConfigurationResponse[] | undefined>;
    /**
     * The geo-location where the resource lives
     */
    readonly location: pulumi.Output<string>;
    /**
     * MacAddress - The MAC address of the network interface.
     */
    readonly macAddress: pulumi.Output<string | undefined>;
    /**
     * The name of the resource
     */
    readonly name: pulumi.Output<string>;
    readonly provisioningState: pulumi.Output<string>;
    /**
     * name of the object to be used in moc
     */
    readonly resourceName: pulumi.Output<string | undefined>;
    /**
     * NetworkInterfaceStatus defines the observed state of network interfaces
     */
    readonly status: pulumi.Output<outputs.azurestackhci.v20210901preview.NetworkInterfaceStatusResponse>;
    /**
     * Metadata pertaining to creation and last modification of the resource.
     */
    readonly systemData: pulumi.Output<outputs.azurestackhci.v20210901preview.SystemDataResponse>;
    /**
     * Resource tags.
     */
    readonly tags: pulumi.Output<{
        [key: string]: string;
    } | undefined>;
    /**
     * The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
     */
    readonly type: pulumi.Output<string>;
    /**
     * Create a NetworkinterfaceRetrieve resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: NetworkinterfaceRetrieveArgs, opts?: pulumi.CustomResourceOptions);
}
/**
 * The set of arguments for constructing a NetworkinterfaceRetrieve resource.
 */
export interface NetworkinterfaceRetrieveArgs {
    /**
     * DNS Settings for the interface
     */
    dnsSettings?: pulumi.Input<inputs.azurestackhci.v20210901preview.InterfaceDNSSettingsArgs>;
    /**
     * The extendedLocation of the resource.
     */
    extendedLocation?: pulumi.Input<inputs.azurestackhci.v20210901preview.ExtendedLocationArgs>;
    /**
     * IPConfigurations - A list of IPConfigurations of the network interface.
     */
    ipConfigurations?: pulumi.Input<pulumi.Input<inputs.azurestackhci.v20210901preview.IpConfigurationArgs>[]>;
    /**
     * The geo-location where the resource lives
     */
    location?: pulumi.Input<string>;
    /**
     * MacAddress - The MAC address of the network interface.
     */
    macAddress?: pulumi.Input<string>;
    networkinterfacesName?: pulumi.Input<string>;
    /**
     * The name of the resource group. The name is case insensitive.
     */
    resourceGroupName: pulumi.Input<string>;
    /**
     * name of the object to be used in moc
     */
    resourceName?: pulumi.Input<string>;
    /**
     * Resource tags.
     */
    tags?: pulumi.Input<{
        [key: string]: pulumi.Input<string>;
    }>;
}
