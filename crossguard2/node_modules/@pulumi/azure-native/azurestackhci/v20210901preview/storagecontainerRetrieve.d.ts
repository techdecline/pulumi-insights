import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../../types/input";
import * as outputs from "../../types/output";
/**
 * The storage container resource definition.
 */
export declare class StoragecontainerRetrieve extends pulumi.CustomResource {
    /**
     * Get an existing StoragecontainerRetrieve resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    static get(name: string, id: pulumi.Input<pulumi.ID>, opts?: pulumi.CustomResourceOptions): StoragecontainerRetrieve;
    /**
     * Returns true if the given object is an instance of StoragecontainerRetrieve.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    static isInstance(obj: any): obj is StoragecontainerRetrieve;
    /**
     * Amount of space available on the disk in MB
     */
    readonly availableSizeMB: pulumi.Output<number>;
    /**
     * Total size of the disk in MB
     */
    readonly containerSizeMB: pulumi.Output<number>;
    readonly extendedLocation: pulumi.Output<outputs.azurestackhci.v20210901preview.StoragecontainersResponseExtendedLocation | undefined>;
    /**
     * The resource location
     */
    readonly location: pulumi.Output<string>;
    /**
     * Resource Name
     */
    readonly name: pulumi.Output<string>;
    /**
     * Path of the storage container on the disk
     */
    readonly path: pulumi.Output<string | undefined>;
    readonly provisioningState: pulumi.Output<string | undefined>;
    /**
     * name of the object to be used in moc
     */
    readonly resourceName: pulumi.Output<string | undefined>;
    /**
     * storageContainerStatus defines the observed state of storagecontainers
     */
    readonly status: pulumi.Output<outputs.azurestackhci.v20210901preview.StorageContainerStatusResponse>;
    /**
     * Metadata pertaining to creation and last modification of the resource.
     */
    readonly systemData: pulumi.Output<outputs.azurestackhci.v20210901preview.SystemDataResponse>;
    /**
     * Resource tags
     */
    readonly tags: pulumi.Output<{
        [key: string]: string;
    } | undefined>;
    /**
     * Resource Type
     */
    readonly type: pulumi.Output<string>;
    /**
     * Create a StoragecontainerRetrieve resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: StoragecontainerRetrieveArgs, opts?: pulumi.CustomResourceOptions);
}
/**
 * The set of arguments for constructing a StoragecontainerRetrieve resource.
 */
export interface StoragecontainerRetrieveArgs {
    extendedLocation?: pulumi.Input<inputs.azurestackhci.v20210901preview.StoragecontainersExtendedLocationArgs>;
    /**
     * The resource location
     */
    location?: pulumi.Input<string>;
    /**
     * Path of the storage container on the disk
     */
    path?: pulumi.Input<string>;
    provisioningState?: pulumi.Input<string>;
    /**
     * The name of the resource group. The name is case insensitive.
     */
    resourceGroupName: pulumi.Input<string>;
    /**
     * name of the object to be used in moc
     */
    resourceName?: pulumi.Input<string>;
    storagecontainersName?: pulumi.Input<string>;
    /**
     * Resource tags
     */
    tags?: pulumi.Input<{
        [key: string]: pulumi.Input<string>;
    }>;
}
