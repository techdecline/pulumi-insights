import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../../types/input";
import * as outputs from "../../types/output";
import * as enums from "../../types/enums";
/**
 * The gallery image resource definition.
 */
export declare class GalleryimageRetrieve extends pulumi.CustomResource {
    /**
     * Get an existing GalleryimageRetrieve resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    static get(name: string, id: pulumi.Input<pulumi.ID>, opts?: pulumi.CustomResourceOptions): GalleryimageRetrieve;
    /**
     * Returns true if the given object is an instance of GalleryimageRetrieve.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    static isInstance(obj: any): obj is GalleryimageRetrieve;
    /**
     * Datasource for the gallery image when provisioning with cloud-init (Azure or NoCloud)
     */
    readonly cloudInitDataSource: pulumi.Output<string | undefined>;
    /**
     * Container Name for storage container
     */
    readonly containerName: pulumi.Output<string | undefined>;
    /**
     * The extendedLocation of the resource.
     */
    readonly extendedLocation: pulumi.Output<outputs.azurestackhci.v20210901preview.ExtendedLocationResponse | undefined>;
    /**
     * The hypervisor generation of the Virtual Machine [V1, V2]
     */
    readonly hyperVGeneration: pulumi.Output<string | undefined>;
    /**
     * This is the gallery image definition identifier.
     */
    readonly identifier: pulumi.Output<outputs.azurestackhci.v20210901preview.GalleryImageIdentifierResponse | undefined>;
    /**
     * location of the image the gallery image should be created from
     */
    readonly imagePath: pulumi.Output<string | undefined>;
    /**
     * The geo-location where the resource lives
     */
    readonly location: pulumi.Output<string>;
    /**
     * The name of the resource
     */
    readonly name: pulumi.Output<string>;
    /**
     * operating system type that the gallery image uses. Expected to be linux or windows
     */
    readonly osType: pulumi.Output<string | undefined>;
    /**
     * Provisioning state of the gallery image.
     */
    readonly provisioningState: pulumi.Output<string>;
    /**
     * name of the object to be used in moc
     */
    readonly resourceName: pulumi.Output<string | undefined>;
    /**
     * GalleryImageStatus defines the observed state of galleryimages
     */
    readonly status: pulumi.Output<outputs.azurestackhci.v20210901preview.GalleryImageStatusResponse>;
    /**
     * Metadata pertaining to creation and last modification of the resource.
     */
    readonly systemData: pulumi.Output<outputs.azurestackhci.v20210901preview.SystemDataResponse>;
    /**
     * Resource tags.
     */
    readonly tags: pulumi.Output<{
        [key: string]: string;
    } | undefined>;
    /**
     * The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
     */
    readonly type: pulumi.Output<string>;
    /**
     * Specifies information about the gallery image version that you want to create or update.
     */
    readonly version: pulumi.Output<outputs.azurestackhci.v20210901preview.GalleryImageVersionResponse | undefined>;
    /**
     * Create a GalleryimageRetrieve resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: GalleryimageRetrieveArgs, opts?: pulumi.CustomResourceOptions);
}
/**
 * The set of arguments for constructing a GalleryimageRetrieve resource.
 */
export interface GalleryimageRetrieveArgs {
    /**
     * Datasource for the gallery image when provisioning with cloud-init (Azure or NoCloud)
     */
    cloudInitDataSource?: pulumi.Input<string | enums.azurestackhci.v20210901preview.CloudInitDataSource>;
    /**
     * Container Name for storage container
     */
    containerName?: pulumi.Input<string>;
    /**
     * The extendedLocation of the resource.
     */
    extendedLocation?: pulumi.Input<inputs.azurestackhci.v20210901preview.ExtendedLocationArgs>;
    /**
     * Name of the gallery image
     */
    galleryimagesName?: pulumi.Input<string>;
    /**
     * The hypervisor generation of the Virtual Machine [V1, V2]
     */
    hyperVGeneration?: pulumi.Input<string | enums.azurestackhci.v20210901preview.HyperVGeneration>;
    /**
     * This is the gallery image definition identifier.
     */
    identifier?: pulumi.Input<inputs.azurestackhci.v20210901preview.GalleryImageIdentifierArgs>;
    /**
     * location of the image the gallery image should be created from
     */
    imagePath?: pulumi.Input<string>;
    /**
     * The geo-location where the resource lives
     */
    location?: pulumi.Input<string>;
    /**
     * operating system type that the gallery image uses. Expected to be linux or windows
     */
    osType?: pulumi.Input<enums.azurestackhci.v20210901preview.OperatingSystemTypes>;
    /**
     * The name of the resource group. The name is case insensitive.
     */
    resourceGroupName: pulumi.Input<string>;
    /**
     * name of the object to be used in moc
     */
    resourceName?: pulumi.Input<string>;
    /**
     * Resource tags.
     */
    tags?: pulumi.Input<{
        [key: string]: pulumi.Input<string>;
    }>;
    /**
     * Specifies information about the gallery image version that you want to create or update.
     */
    version?: pulumi.Input<inputs.azurestackhci.v20210901preview.GalleryImageVersionArgs>;
}
