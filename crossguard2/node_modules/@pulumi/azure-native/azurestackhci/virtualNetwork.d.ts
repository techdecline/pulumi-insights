import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as enums from "../types/enums";
/**
 * The virtual network resource definition.
 * Azure REST API version: 2022-12-15-preview.
 *
 * Other available API versions: 2023-07-01-preview.
 */
export declare class VirtualNetwork extends pulumi.CustomResource {
    /**
     * Get an existing VirtualNetwork resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    static get(name: string, id: pulumi.Input<pulumi.ID>, opts?: pulumi.CustomResourceOptions): VirtualNetwork;
    /**
     * Returns true if the given object is an instance of VirtualNetwork.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    static isInstance(obj: any): obj is VirtualNetwork;
    /**
     * DhcpOptions contains an array of DNS servers available to VMs deployed in the virtual network. Standard DHCP option for a subnet overrides VNET DHCP options.
     */
    readonly dhcpOptions: pulumi.Output<outputs.azurestackhci.VirtualNetworkPropertiesResponseDhcpOptions | undefined>;
    /**
     * The extendedLocation of the resource.
     */
    readonly extendedLocation: pulumi.Output<outputs.azurestackhci.ExtendedLocationResponse | undefined>;
    /**
     * The geo-location where the resource lives
     */
    readonly location: pulumi.Output<string>;
    /**
     * The name of the resource
     */
    readonly name: pulumi.Output<string>;
    /**
     * Type of the network
     */
    readonly networkType: pulumi.Output<string | undefined>;
    /**
     * Provisioning state of the virtual network.
     */
    readonly provisioningState: pulumi.Output<string>;
    /**
     * The observed state of virtual networks
     */
    readonly status: pulumi.Output<outputs.azurestackhci.VirtualNetworkStatusResponse>;
    /**
     * Subnet - list of subnets under the virtual network
     */
    readonly subnets: pulumi.Output<outputs.azurestackhci.VirtualNetworkPropertiesResponseSubnets[] | undefined>;
    /**
     * Azure Resource Manager metadata containing createdBy and modifiedBy information.
     */
    readonly systemData: pulumi.Output<outputs.azurestackhci.SystemDataResponse>;
    /**
     * Resource tags.
     */
    readonly tags: pulumi.Output<{
        [key: string]: string;
    } | undefined>;
    /**
     * The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
     */
    readonly type: pulumi.Output<string>;
    /**
     * name of the network switch to be used for VMs
     */
    readonly vmSwitchName: pulumi.Output<string | undefined>;
    /**
     * Create a VirtualNetwork resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: VirtualNetworkArgs, opts?: pulumi.CustomResourceOptions);
}
/**
 * The set of arguments for constructing a VirtualNetwork resource.
 */
export interface VirtualNetworkArgs {
    /**
     * DhcpOptions contains an array of DNS servers available to VMs deployed in the virtual network. Standard DHCP option for a subnet overrides VNET DHCP options.
     */
    dhcpOptions?: pulumi.Input<inputs.azurestackhci.VirtualNetworkPropertiesDhcpOptionsArgs>;
    /**
     * The extendedLocation of the resource.
     */
    extendedLocation?: pulumi.Input<inputs.azurestackhci.ExtendedLocationArgs>;
    /**
     * The geo-location where the resource lives
     */
    location?: pulumi.Input<string>;
    /**
     * Type of the network
     */
    networkType?: pulumi.Input<string | enums.azurestackhci.NetworkTypeEnum>;
    /**
     * The name of the resource group. The name is case insensitive.
     */
    resourceGroupName: pulumi.Input<string>;
    /**
     * Subnet - list of subnets under the virtual network
     */
    subnets?: pulumi.Input<pulumi.Input<inputs.azurestackhci.VirtualNetworkPropertiesSubnetsArgs>[]>;
    /**
     * Resource tags.
     */
    tags?: pulumi.Input<{
        [key: string]: pulumi.Input<string>;
    }>;
    /**
     * Name of the virtual network
     */
    virtualNetworkName?: pulumi.Input<string>;
    /**
     * name of the network switch to be used for VMs
     */
    vmSwitchName?: pulumi.Input<string>;
}
