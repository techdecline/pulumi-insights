import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../../types/input";
import * as outputs from "../../types/output";
import * as enums from "../../types/enums";
/**
 * Cluster details.
 */
export declare class Cluster extends pulumi.CustomResource {
    /**
     * Get an existing Cluster resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    static get(name: string, id: pulumi.Input<pulumi.ID>, opts?: pulumi.CustomResourceOptions): Cluster;
    /**
     * Returns true if the given object is an instance of Cluster.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    static isInstance(obj: any): obj is Cluster;
    /**
     * Object id of cluster AAD identity.
     */
    readonly aadApplicationObjectId: pulumi.Output<string | undefined>;
    /**
     * App id of cluster AAD identity.
     */
    readonly aadClientId: pulumi.Output<string | undefined>;
    /**
     * Id of cluster identity service principal.
     */
    readonly aadServicePrincipalObjectId: pulumi.Output<string | undefined>;
    /**
     * Tenant id of cluster AAD identity.
     */
    readonly aadTenantId: pulumi.Output<string | undefined>;
    /**
     * Type of billing applied to the resource.
     */
    readonly billingModel: pulumi.Output<string>;
    /**
     * Unique, immutable resource id.
     */
    readonly cloudId: pulumi.Output<string>;
    /**
     * Endpoint configured for management from the Azure portal.
     */
    readonly cloudManagementEndpoint: pulumi.Output<string | undefined>;
    /**
     * Overall connectivity status for the cluster resource.
     */
    readonly connectivityStatus: pulumi.Output<string>;
    /**
     * Desired properties of the cluster.
     */
    readonly desiredProperties: pulumi.Output<outputs.azurestackhci.v20230801.ClusterDesiredPropertiesResponse | undefined>;
    /**
     * Attestation configurations for isolated VM (e.g. TVM, CVM) of the cluster.
     */
    readonly isolatedVmAttestationConfiguration: pulumi.Output<outputs.azurestackhci.v20230801.IsolatedVmAttestationConfigurationResponse>;
    /**
     * Most recent billing meter timestamp.
     */
    readonly lastBillingTimestamp: pulumi.Output<string>;
    /**
     * Most recent cluster sync timestamp.
     */
    readonly lastSyncTimestamp: pulumi.Output<string>;
    /**
     * The geo-location where the resource lives
     */
    readonly location: pulumi.Output<string>;
    /**
     * The name of the resource
     */
    readonly name: pulumi.Output<string>;
    /**
     * The service principal ID of the system assigned identity. This property will only be provided for a system assigned identity.
     */
    readonly principalId: pulumi.Output<string>;
    /**
     * Provisioning state.
     */
    readonly provisioningState: pulumi.Output<string>;
    /**
     * First cluster sync timestamp.
     */
    readonly registrationTimestamp: pulumi.Output<string>;
    /**
     * Properties reported by cluster agent.
     */
    readonly reportedProperties: pulumi.Output<outputs.azurestackhci.v20230801.ClusterReportedPropertiesResponse>;
    /**
     * Object id of RP Service Principal
     */
    readonly resourceProviderObjectId: pulumi.Output<string>;
    /**
     * Region specific DataPath Endpoint of the cluster.
     */
    readonly serviceEndpoint: pulumi.Output<string>;
    /**
     * Software Assurance properties of the cluster.
     */
    readonly softwareAssuranceProperties: pulumi.Output<outputs.azurestackhci.v20230801.SoftwareAssurancePropertiesResponse | undefined>;
    /**
     * Status of the cluster agent.
     */
    readonly status: pulumi.Output<string>;
    /**
     * Azure Resource Manager metadata containing createdBy and modifiedBy information.
     */
    readonly systemData: pulumi.Output<outputs.azurestackhci.v20230801.SystemDataResponse>;
    /**
     * Resource tags.
     */
    readonly tags: pulumi.Output<{
        [key: string]: string;
    } | undefined>;
    /**
     * The tenant ID of the system assigned identity. This property will only be provided for a system assigned identity.
     */
    readonly tenantId: pulumi.Output<string>;
    /**
     * Number of days remaining in the trial period.
     */
    readonly trialDaysRemaining: pulumi.Output<number>;
    /**
     * The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
     */
    readonly type: pulumi.Output<string>;
    /**
     * The set of user assigned identities associated with the resource. The userAssignedIdentities dictionary keys will be ARM resource ids in the form: '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedIdentity/userAssignedIdentities/{identityName}. The dictionary values can be empty objects ({}) in requests.
     */
    readonly userAssignedIdentities: pulumi.Output<{
        [key: string]: outputs.azurestackhci.v20230801.UserAssignedIdentityResponse;
    } | undefined>;
    /**
     * Create a Cluster resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: ClusterArgs, opts?: pulumi.CustomResourceOptions);
}
/**
 * The set of arguments for constructing a Cluster resource.
 */
export interface ClusterArgs {
    /**
     * Object id of cluster AAD identity.
     */
    aadApplicationObjectId?: pulumi.Input<string>;
    /**
     * App id of cluster AAD identity.
     */
    aadClientId?: pulumi.Input<string>;
    /**
     * Id of cluster identity service principal.
     */
    aadServicePrincipalObjectId?: pulumi.Input<string>;
    /**
     * Tenant id of cluster AAD identity.
     */
    aadTenantId?: pulumi.Input<string>;
    /**
     * Endpoint configured for management from the Azure portal.
     */
    cloudManagementEndpoint?: pulumi.Input<string>;
    /**
     * The name of the cluster.
     */
    clusterName?: pulumi.Input<string>;
    /**
     * Desired properties of the cluster.
     */
    desiredProperties?: pulumi.Input<inputs.azurestackhci.v20230801.ClusterDesiredPropertiesArgs>;
    /**
     * The geo-location where the resource lives
     */
    location?: pulumi.Input<string>;
    /**
     * The name of the resource group. The name is case insensitive.
     */
    resourceGroupName: pulumi.Input<string>;
    /**
     * Software Assurance properties of the cluster.
     */
    softwareAssuranceProperties?: pulumi.Input<inputs.azurestackhci.v20230801.SoftwareAssurancePropertiesArgs>;
    /**
     * Resource tags.
     */
    tags?: pulumi.Input<{
        [key: string]: pulumi.Input<string>;
    }>;
    /**
     * Type of managed service identity (where both SystemAssigned and UserAssigned types are allowed).
     */
    type: pulumi.Input<string | enums.azurestackhci.v20230801.ManagedServiceIdentityType>;
    /**
     * The set of user assigned identities associated with the resource. The userAssignedIdentities dictionary keys will be ARM resource ids in the form: '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedIdentity/userAssignedIdentities/{identityName}. The dictionary values can be empty objects ({}) in requests.
     */
    userAssignedIdentities?: pulumi.Input<pulumi.Input<string>[]>;
}
