import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../../types/input";
import * as outputs from "../../types/output";
import * as enums from "../../types/enums";
/**
 * Describes the Redis Enterprise cluster
 */
export declare class RedisEnterprise extends pulumi.CustomResource {
    /**
     * Get an existing RedisEnterprise resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    static get(name: string, id: pulumi.Input<pulumi.ID>, opts?: pulumi.CustomResourceOptions): RedisEnterprise;
    /**
     * Returns true if the given object is an instance of RedisEnterprise.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    static isInstance(obj: any): obj is RedisEnterprise;
    /**
     * Encryption-at-rest configuration for the cluster.
     */
    readonly encryption: pulumi.Output<outputs.cache.v20240901preview.ClusterPropertiesResponseEncryption | undefined>;
    /**
     * Enabled by default. If highAvailability is disabled, the data set is not replicated. This affects the availability SLA, and increases the risk of data loss.
     */
    readonly highAvailability: pulumi.Output<string | undefined>;
    /**
     * DNS name of the cluster endpoint
     */
    readonly hostName: pulumi.Output<string>;
    /**
     * The identity of the resource.
     */
    readonly identity: pulumi.Output<outputs.cache.v20240901preview.ManagedServiceIdentityResponse | undefined>;
    /**
     * Distinguishes the kind of cluster. Read-only.
     */
    readonly kind: pulumi.Output<string>;
    /**
     * The geo-location where the resource lives
     */
    readonly location: pulumi.Output<string>;
    /**
     * The minimum TLS version for the cluster to support, e.g. '1.2'. Newer versions can be added in the future. Note that TLS 1.0 and TLS 1.1 are now completely obsolete -- you cannot use them. They are mentioned only for the sake of consistency with old API versions.
     */
    readonly minimumTlsVersion: pulumi.Output<string | undefined>;
    /**
     * The name of the resource
     */
    readonly name: pulumi.Output<string>;
    /**
     * List of private endpoint connections associated with the specified Redis Enterprise cluster
     */
    readonly privateEndpointConnections: pulumi.Output<outputs.cache.v20240901preview.PrivateEndpointConnectionResponse[]>;
    /**
     * Current provisioning status of the cluster
     */
    readonly provisioningState: pulumi.Output<string>;
    /**
     * Version of redis the cluster supports, e.g. '6'
     */
    readonly redisVersion: pulumi.Output<string>;
    /**
     * Explains the current redundancy strategy of the cluster, which affects the expected SLA.
     */
    readonly redundancyMode: pulumi.Output<string>;
    /**
     * Current resource status of the cluster
     */
    readonly resourceState: pulumi.Output<string>;
    /**
     * The SKU to create, which affects price, performance, and features.
     */
    readonly sku: pulumi.Output<outputs.cache.v20240901preview.EnterpriseSkuResponse>;
    /**
     * Resource tags.
     */
    readonly tags: pulumi.Output<{
        [key: string]: string;
    } | undefined>;
    /**
     * The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
     */
    readonly type: pulumi.Output<string>;
    /**
     * The Availability Zones where this cluster will be deployed.
     */
    readonly zones: pulumi.Output<string[] | undefined>;
    /**
     * Create a RedisEnterprise resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: RedisEnterpriseArgs, opts?: pulumi.CustomResourceOptions);
}
/**
 * The set of arguments for constructing a RedisEnterprise resource.
 */
export interface RedisEnterpriseArgs {
    /**
     * The name of the Redis Enterprise cluster.
     */
    clusterName?: pulumi.Input<string>;
    /**
     * Encryption-at-rest configuration for the cluster.
     */
    encryption?: pulumi.Input<inputs.cache.v20240901preview.ClusterPropertiesEncryptionArgs>;
    /**
     * Enabled by default. If highAvailability is disabled, the data set is not replicated. This affects the availability SLA, and increases the risk of data loss.
     */
    highAvailability?: pulumi.Input<string | enums.cache.v20240901preview.HighAvailability>;
    /**
     * The identity of the resource.
     */
    identity?: pulumi.Input<inputs.cache.v20240901preview.ManagedServiceIdentityArgs>;
    /**
     * The geo-location where the resource lives
     */
    location?: pulumi.Input<string>;
    /**
     * The minimum TLS version for the cluster to support, e.g. '1.2'. Newer versions can be added in the future. Note that TLS 1.0 and TLS 1.1 are now completely obsolete -- you cannot use them. They are mentioned only for the sake of consistency with old API versions.
     */
    minimumTlsVersion?: pulumi.Input<string | enums.cache.v20240901preview.TlsVersion>;
    /**
     * The name of the resource group. The name is case insensitive.
     */
    resourceGroupName: pulumi.Input<string>;
    /**
     * The SKU to create, which affects price, performance, and features.
     */
    sku: pulumi.Input<inputs.cache.v20240901preview.EnterpriseSkuArgs>;
    /**
     * Resource tags.
     */
    tags?: pulumi.Input<{
        [key: string]: pulumi.Input<string>;
    }>;
    /**
     * The Availability Zones where this cluster will be deployed.
     */
    zones?: pulumi.Input<pulumi.Input<string>[]>;
}
