import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../../types/input";
import * as outputs from "../../types/output";
import * as enums from "../../types/enums";
/**
 * Describes a database on the RedisEnterprise cluster
 */
export declare class Database extends pulumi.CustomResource {
    /**
     * Get an existing Database resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    static get(name: string, id: pulumi.Input<pulumi.ID>, opts?: pulumi.CustomResourceOptions): Database;
    /**
     * Returns true if the given object is an instance of Database.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    static isInstance(obj: any): obj is Database;
    /**
     * Specifies whether redis clients can connect using TLS-encrypted or plaintext redis protocols. Default is TLS-encrypted.
     */
    readonly clientProtocol: pulumi.Output<string | undefined>;
    /**
     * Clustering policy - default is OSSCluster. Specified at create time.
     */
    readonly clusteringPolicy: pulumi.Output<string | undefined>;
    /**
     * Redis eviction policy - default is VolatileLRU
     */
    readonly evictionPolicy: pulumi.Output<string | undefined>;
    /**
     * Optional set of properties to configure geo replication for this database.
     */
    readonly geoReplication: pulumi.Output<outputs.cache.v20240201.DatabasePropertiesResponseGeoReplication | undefined>;
    /**
     * Optional set of redis modules to enable in this database - modules can only be added at creation time.
     */
    readonly modules: pulumi.Output<outputs.cache.v20240201.ModuleResponse[] | undefined>;
    /**
     * The name of the resource
     */
    readonly name: pulumi.Output<string>;
    /**
     * Persistence settings
     */
    readonly persistence: pulumi.Output<outputs.cache.v20240201.PersistenceResponse | undefined>;
    /**
     * TCP port of the database endpoint. Specified at create time. Defaults to an available port.
     */
    readonly port: pulumi.Output<number | undefined>;
    /**
     * Current provisioning status of the database
     */
    readonly provisioningState: pulumi.Output<string>;
    /**
     * Current resource status of the database
     */
    readonly resourceState: pulumi.Output<string>;
    /**
     * The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
     */
    readonly type: pulumi.Output<string>;
    /**
     * Create a Database resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: DatabaseArgs, opts?: pulumi.CustomResourceOptions);
}
/**
 * The set of arguments for constructing a Database resource.
 */
export interface DatabaseArgs {
    /**
     * Specifies whether redis clients can connect using TLS-encrypted or plaintext redis protocols. Default is TLS-encrypted.
     */
    clientProtocol?: pulumi.Input<string | enums.cache.v20240201.Protocol>;
    /**
     * The name of the RedisEnterprise cluster.
     */
    clusterName: pulumi.Input<string>;
    /**
     * Clustering policy - default is OSSCluster. Specified at create time.
     */
    clusteringPolicy?: pulumi.Input<string | enums.cache.v20240201.ClusteringPolicy>;
    /**
     * The name of the database.
     */
    databaseName?: pulumi.Input<string>;
    /**
     * Redis eviction policy - default is VolatileLRU
     */
    evictionPolicy?: pulumi.Input<string | enums.cache.v20240201.EvictionPolicy>;
    /**
     * Optional set of properties to configure geo replication for this database.
     */
    geoReplication?: pulumi.Input<inputs.cache.v20240201.DatabasePropertiesGeoReplicationArgs>;
    /**
     * Optional set of redis modules to enable in this database - modules can only be added at creation time.
     */
    modules?: pulumi.Input<pulumi.Input<inputs.cache.v20240201.ModuleArgs>[]>;
    /**
     * Persistence settings
     */
    persistence?: pulumi.Input<inputs.cache.v20240201.PersistenceArgs>;
    /**
     * TCP port of the database endpoint. Specified at create time. Defaults to an available port.
     */
    port?: pulumi.Input<number>;
    /**
     * The name of the resource group. The name is case insensitive.
     */
    resourceGroupName: pulumi.Input<string>;
}
