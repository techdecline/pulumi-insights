import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../../types/input";
import * as outputs from "../../types/output";
import * as enums from "../../types/enums";
/**
 * A single Redis item in List or Get Operation.
 */
export declare class Redis extends pulumi.CustomResource {
    /**
     * Get an existing Redis resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    static get(name: string, id: pulumi.Input<pulumi.ID>, opts?: pulumi.CustomResourceOptions): Redis;
    /**
     * Returns true if the given object is an instance of Redis.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    static isInstance(obj: any): obj is Redis;
    /**
     * The keys of the Redis cache - not set if this object is not the response to Create or Update redis cache
     */
    readonly accessKeys: pulumi.Output<outputs.cache.v20230801.RedisAccessKeysResponse>;
    /**
     * Specifies whether the non-ssl Redis server port (6379) is enabled.
     */
    readonly enableNonSslPort: pulumi.Output<boolean | undefined>;
    /**
     * Redis host name.
     */
    readonly hostName: pulumi.Output<string>;
    /**
     * The identity of the resource.
     */
    readonly identity: pulumi.Output<outputs.cache.v20230801.ManagedServiceIdentityResponse | undefined>;
    /**
     * List of the Redis instances associated with the cache
     */
    readonly instances: pulumi.Output<outputs.cache.v20230801.RedisInstanceDetailsResponse[]>;
    /**
     * List of the linked servers associated with the cache
     */
    readonly linkedServers: pulumi.Output<outputs.cache.v20230801.RedisLinkedServerResponse[]>;
    /**
     * The geo-location where the resource lives
     */
    readonly location: pulumi.Output<string>;
    /**
     * Optional: requires clients to use a specified TLS version (or higher) to connect (e,g, '1.0', '1.1', '1.2')
     */
    readonly minimumTlsVersion: pulumi.Output<string | undefined>;
    /**
     * The name of the resource
     */
    readonly name: pulumi.Output<string>;
    /**
     * Redis non-SSL port.
     */
    readonly port: pulumi.Output<number>;
    /**
     * List of private endpoint connection associated with the specified redis cache
     */
    readonly privateEndpointConnections: pulumi.Output<outputs.cache.v20230801.PrivateEndpointConnectionResponse[]>;
    /**
     * Redis instance provisioning status.
     */
    readonly provisioningState: pulumi.Output<string>;
    /**
     * Whether or not public endpoint access is allowed for this cache.  Value is optional but if passed in, must be 'Enabled' or 'Disabled'. If 'Disabled', private endpoints are the exclusive access method. Default value is 'Enabled'
     */
    readonly publicNetworkAccess: pulumi.Output<string | undefined>;
    /**
     * All Redis Settings. Few possible keys: rdb-backup-enabled,rdb-storage-connection-string,rdb-backup-frequency,maxmemory-delta,maxmemory-policy,notify-keyspace-events,maxmemory-samples,slowlog-log-slower-than,slowlog-max-len,list-max-ziplist-entries,list-max-ziplist-value,hash-max-ziplist-entries,hash-max-ziplist-value,set-max-intset-entries,zset-max-ziplist-entries,zset-max-ziplist-value etc.
     */
    readonly redisConfiguration: pulumi.Output<outputs.cache.v20230801.RedisCommonPropertiesResponseRedisConfiguration | undefined>;
    /**
     * Redis version. This should be in the form 'major[.minor]' (only 'major' is required) or the value 'latest' which refers to the latest stable Redis version that is available. Supported versions: 4.0, 6.0 (latest). Default value is 'latest'.
     */
    readonly redisVersion: pulumi.Output<string | undefined>;
    /**
     * The number of replicas to be created per primary.
     */
    readonly replicasPerMaster: pulumi.Output<number | undefined>;
    /**
     * The number of replicas to be created per primary.
     */
    readonly replicasPerPrimary: pulumi.Output<number | undefined>;
    /**
     * The number of shards to be created on a Premium Cluster Cache.
     */
    readonly shardCount: pulumi.Output<number | undefined>;
    /**
     * The SKU of the Redis cache to deploy.
     */
    readonly sku: pulumi.Output<outputs.cache.v20230801.SkuResponse>;
    /**
     * Redis SSL port.
     */
    readonly sslPort: pulumi.Output<number>;
    /**
     * Static IP address. Optionally, may be specified when deploying a Redis cache inside an existing Azure Virtual Network; auto assigned by default.
     */
    readonly staticIP: pulumi.Output<string | undefined>;
    /**
     * The full resource ID of a subnet in a virtual network to deploy the Redis cache in. Example format: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/Microsoft.{Network|ClassicNetwork}/VirtualNetworks/vnet1/subnets/subnet1
     */
    readonly subnetId: pulumi.Output<string | undefined>;
    /**
     * Resource tags.
     */
    readonly tags: pulumi.Output<{
        [key: string]: string;
    } | undefined>;
    /**
     * A dictionary of tenant settings
     */
    readonly tenantSettings: pulumi.Output<{
        [key: string]: string;
    } | undefined>;
    /**
     * The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
     */
    readonly type: pulumi.Output<string>;
    /**
     * Optional: Specifies the update channel for the monthly Redis updates your Redis Cache will receive. Caches using 'Preview' update channel get latest Redis updates at least 4 weeks ahead of 'Stable' channel caches. Default value is 'Stable'.
     */
    readonly updateChannel: pulumi.Output<string | undefined>;
    /**
     * A list of availability zones denoting where the resource needs to come from.
     */
    readonly zones: pulumi.Output<string[] | undefined>;
    /**
     * Create a Redis resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: RedisArgs, opts?: pulumi.CustomResourceOptions);
}
/**
 * The set of arguments for constructing a Redis resource.
 */
export interface RedisArgs {
    /**
     * Specifies whether the non-ssl Redis server port (6379) is enabled.
     */
    enableNonSslPort?: pulumi.Input<boolean>;
    /**
     * The identity of the resource.
     */
    identity?: pulumi.Input<inputs.cache.v20230801.ManagedServiceIdentityArgs>;
    /**
     * The geo-location where the resource lives
     */
    location?: pulumi.Input<string>;
    /**
     * Optional: requires clients to use a specified TLS version (or higher) to connect (e,g, '1.0', '1.1', '1.2')
     */
    minimumTlsVersion?: pulumi.Input<string | enums.cache.v20230801.TlsVersion>;
    /**
     * The name of the Redis cache.
     */
    name?: pulumi.Input<string>;
    /**
     * Whether or not public endpoint access is allowed for this cache.  Value is optional but if passed in, must be 'Enabled' or 'Disabled'. If 'Disabled', private endpoints are the exclusive access method. Default value is 'Enabled'
     */
    publicNetworkAccess?: pulumi.Input<string | enums.cache.v20230801.PublicNetworkAccess>;
    /**
     * All Redis Settings. Few possible keys: rdb-backup-enabled,rdb-storage-connection-string,rdb-backup-frequency,maxmemory-delta,maxmemory-policy,notify-keyspace-events,maxmemory-samples,slowlog-log-slower-than,slowlog-max-len,list-max-ziplist-entries,list-max-ziplist-value,hash-max-ziplist-entries,hash-max-ziplist-value,set-max-intset-entries,zset-max-ziplist-entries,zset-max-ziplist-value etc.
     */
    redisConfiguration?: pulumi.Input<inputs.cache.v20230801.RedisCommonPropertiesRedisConfigurationArgs>;
    /**
     * Redis version. This should be in the form 'major[.minor]' (only 'major' is required) or the value 'latest' which refers to the latest stable Redis version that is available. Supported versions: 4.0, 6.0 (latest). Default value is 'latest'.
     */
    redisVersion?: pulumi.Input<string>;
    /**
     * The number of replicas to be created per primary.
     */
    replicasPerMaster?: pulumi.Input<number>;
    /**
     * The number of replicas to be created per primary.
     */
    replicasPerPrimary?: pulumi.Input<number>;
    /**
     * The name of the resource group. The name is case insensitive.
     */
    resourceGroupName: pulumi.Input<string>;
    /**
     * The number of shards to be created on a Premium Cluster Cache.
     */
    shardCount?: pulumi.Input<number>;
    /**
     * The SKU of the Redis cache to deploy.
     */
    sku: pulumi.Input<inputs.cache.v20230801.SkuArgs>;
    /**
     * Static IP address. Optionally, may be specified when deploying a Redis cache inside an existing Azure Virtual Network; auto assigned by default.
     */
    staticIP?: pulumi.Input<string>;
    /**
     * The full resource ID of a subnet in a virtual network to deploy the Redis cache in. Example format: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/Microsoft.{Network|ClassicNetwork}/VirtualNetworks/vnet1/subnets/subnet1
     */
    subnetId?: pulumi.Input<string>;
    /**
     * Resource tags.
     */
    tags?: pulumi.Input<{
        [key: string]: pulumi.Input<string>;
    }>;
    /**
     * A dictionary of tenant settings
     */
    tenantSettings?: pulumi.Input<{
        [key: string]: pulumi.Input<string>;
    }>;
    /**
     * Optional: Specifies the update channel for the monthly Redis updates your Redis Cache will receive. Caches using 'Preview' update channel get latest Redis updates at least 4 weeks ahead of 'Stable' channel caches. Default value is 'Stable'.
     */
    updateChannel?: pulumi.Input<string | enums.cache.v20230801.UpdateChannel>;
    /**
     * A list of availability zones denoting where the resource needs to come from.
     */
    zones?: pulumi.Input<pulumi.Input<string>[]>;
}
