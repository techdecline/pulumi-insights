import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
/**
 * Friendly Secret name mapping to the any Secret or secret related information.
 * Azure REST API version: 2023-05-01. Prior API version in Azure Native 1.x: 2020-09-01.
 *
 * Other available API versions: 2023-07-01-preview, 2024-02-01, 2024-05-01-preview, 2024-06-01-preview, 2024-09-01.
 */
export declare class Secret extends pulumi.CustomResource {
    /**
     * Get an existing Secret resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    static get(name: string, id: pulumi.Input<pulumi.ID>, opts?: pulumi.CustomResourceOptions): Secret;
    /**
     * Returns true if the given object is an instance of Secret.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    static isInstance(obj: any): obj is Secret;
    readonly deploymentStatus: pulumi.Output<string>;
    /**
     * Resource name.
     */
    readonly name: pulumi.Output<string>;
    /**
     * object which contains secret parameters
     */
    readonly parameters: pulumi.Output<outputs.cdn.AzureFirstPartyManagedCertificateParametersResponse | outputs.cdn.CustomerCertificateParametersResponse | outputs.cdn.ManagedCertificateParametersResponse | outputs.cdn.UrlSigningKeyParametersResponse | undefined>;
    /**
     * The name of the profile which holds the secret.
     */
    readonly profileName: pulumi.Output<string>;
    /**
     * Provisioning status
     */
    readonly provisioningState: pulumi.Output<string>;
    /**
     * Read only system data
     */
    readonly systemData: pulumi.Output<outputs.cdn.SystemDataResponse>;
    /**
     * Resource type.
     */
    readonly type: pulumi.Output<string>;
    /**
     * Create a Secret resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: SecretArgs, opts?: pulumi.CustomResourceOptions);
}
/**
 * The set of arguments for constructing a Secret resource.
 */
export interface SecretArgs {
    /**
     * object which contains secret parameters
     */
    parameters?: pulumi.Input<inputs.cdn.AzureFirstPartyManagedCertificateParametersArgs | inputs.cdn.CustomerCertificateParametersArgs | inputs.cdn.ManagedCertificateParametersArgs | inputs.cdn.UrlSigningKeyParametersArgs>;
    /**
     * Name of the Azure Front Door Standard or Azure Front Door Premium profile which is unique within the resource group.
     */
    profileName: pulumi.Input<string>;
    /**
     * Name of the Resource group within the Azure subscription.
     */
    resourceGroupName: pulumi.Input<string>;
    /**
     * Name of the Secret under the profile.
     */
    secretName?: pulumi.Input<string>;
}
