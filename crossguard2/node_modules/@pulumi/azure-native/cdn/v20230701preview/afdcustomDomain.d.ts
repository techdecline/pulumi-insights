import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../../types/input";
import * as outputs from "../../types/output";
/**
 * Friendly domain name mapping to the endpoint hostname that the customer provides for branding purposes, e.g. www.contoso.com.
 */
export declare class AFDCustomDomain extends pulumi.CustomResource {
    /**
     * Get an existing AFDCustomDomain resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    static get(name: string, id: pulumi.Input<pulumi.ID>, opts?: pulumi.CustomResourceOptions): AFDCustomDomain;
    /**
     * Returns true if the given object is an instance of AFDCustomDomain.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    static isInstance(obj: any): obj is AFDCustomDomain;
    /**
     * Resource reference to the Azure DNS zone
     */
    readonly azureDnsZone: pulumi.Output<outputs.cdn.v20230701preview.ResourceReferenceResponse | undefined>;
    readonly deploymentStatus: pulumi.Output<string>;
    /**
     * Provisioning substate shows the progress of custom HTTPS enabling/disabling process step by step. DCV stands for DomainControlValidation.
     */
    readonly domainValidationState: pulumi.Output<string>;
    /**
     * Key-Value pair representing migration properties for domains.
     */
    readonly extendedProperties: pulumi.Output<{
        [key: string]: string;
    } | undefined>;
    /**
     * The host name of the domain. Must be a domain name.
     */
    readonly hostName: pulumi.Output<string>;
    /**
     * Resource name.
     */
    readonly name: pulumi.Output<string>;
    /**
     * Resource reference to the Azure resource where custom domain ownership was prevalidated
     */
    readonly preValidatedCustomDomainResourceId: pulumi.Output<outputs.cdn.v20230701preview.ResourceReferenceResponse | undefined>;
    /**
     * The name of the profile which holds the domain.
     */
    readonly profileName: pulumi.Output<string>;
    /**
     * Provisioning status
     */
    readonly provisioningState: pulumi.Output<string>;
    /**
     * The JSON object list that contains the overall picture of how routes are used for the shared custom domain across different profiles.
     */
    readonly referencedRoutePaths: pulumi.Output<outputs.cdn.v20230701preview.AFDDomainReferencedRoutePathResponse[]>;
    /**
     * Read only system data
     */
    readonly systemData: pulumi.Output<outputs.cdn.v20230701preview.SystemDataResponse>;
    /**
     * The configuration specifying how to enable HTTPS for the domain - using AzureFrontDoor managed certificate or user's own certificate. If not specified, enabling ssl uses AzureFrontDoor managed certificate by default.
     */
    readonly tlsSettings: pulumi.Output<outputs.cdn.v20230701preview.AFDDomainHttpsParametersResponse | undefined>;
    /**
     * Resource type.
     */
    readonly type: pulumi.Output<string>;
    /**
     * Values the customer needs to validate domain ownership
     */
    readonly validationProperties: pulumi.Output<outputs.cdn.v20230701preview.DomainValidationPropertiesResponse>;
    /**
     * Create a AFDCustomDomain resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: AFDCustomDomainArgs, opts?: pulumi.CustomResourceOptions);
}
/**
 * The set of arguments for constructing a AFDCustomDomain resource.
 */
export interface AFDCustomDomainArgs {
    /**
     * Resource reference to the Azure DNS zone
     */
    azureDnsZone?: pulumi.Input<inputs.cdn.v20230701preview.ResourceReferenceArgs>;
    /**
     * Name of the domain under the profile which is unique globally
     */
    customDomainName?: pulumi.Input<string>;
    /**
     * Key-Value pair representing migration properties for domains.
     */
    extendedProperties?: pulumi.Input<{
        [key: string]: pulumi.Input<string>;
    }>;
    /**
     * The host name of the domain. Must be a domain name.
     */
    hostName: pulumi.Input<string>;
    /**
     * Resource reference to the Azure resource where custom domain ownership was prevalidated
     */
    preValidatedCustomDomainResourceId?: pulumi.Input<inputs.cdn.v20230701preview.ResourceReferenceArgs>;
    /**
     * Name of the Azure Front Door Standard or Azure Front Door Premium profile which is unique within the resource group.
     */
    profileName: pulumi.Input<string>;
    /**
     * Name of the Resource group within the Azure subscription.
     */
    resourceGroupName: pulumi.Input<string>;
    /**
     * The configuration specifying how to enable HTTPS for the domain - using AzureFrontDoor managed certificate or user's own certificate. If not specified, enabling ssl uses AzureFrontDoor managed certificate by default.
     */
    tlsSettings?: pulumi.Input<inputs.cdn.v20230701preview.AFDDomainHttpsParametersArgs>;
}
