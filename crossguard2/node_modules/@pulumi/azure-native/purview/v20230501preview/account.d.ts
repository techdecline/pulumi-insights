import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../../types/input";
import * as outputs from "../../types/output";
import * as enums from "../../types/enums";
/**
 * Account resource
 */
export declare class Account extends pulumi.CustomResource {
    /**
     * Get an existing Account resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    static get(name: string, id: pulumi.Input<pulumi.ID>, opts?: pulumi.CustomResourceOptions): Account;
    /**
     * Returns true if the given object is an instance of Account.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    static isInstance(obj: any): obj is Account;
    /**
     * Gets or sets the status of the account.
     */
    readonly accountStatus: pulumi.Output<outputs.purview.v20230501preview.AccountPropertiesResponseAccountStatus>;
    /**
     * External Cloud Service connectors
     */
    readonly cloudConnectors: pulumi.Output<outputs.purview.v20230501preview.CloudConnectorsResponse | undefined>;
    /**
     * Gets the time at which the entity was created.
     */
    readonly createdAt: pulumi.Output<string>;
    /**
     * Gets the creator of the entity.
     */
    readonly createdBy: pulumi.Output<string>;
    /**
     * Gets the creators of the entity's object id.
     */
    readonly createdByObjectId: pulumi.Output<string>;
    /**
     * The URIs that are the public endpoints of the account.
     */
    readonly endpoints: pulumi.Output<outputs.purview.v20230501preview.AccountPropertiesResponseEndpoints>;
    /**
     * Gets or sets the friendly name.
     */
    readonly friendlyName: pulumi.Output<string>;
    /**
     * The Managed Identity of the resource
     */
    readonly identity: pulumi.Output<outputs.purview.v20230501preview.IdentityResponse | undefined>;
    /**
     * Ingestion Storage Account Info
     */
    readonly ingestionStorage: pulumi.Output<outputs.purview.v20230501preview.IngestionStorageResponse | undefined>;
    /**
     * Gets or sets the location.
     */
    readonly location: pulumi.Output<string | undefined>;
    /**
     * Gets or sets the state of managed eventhub. If enabled managed eventhub will be created, if disabled the managed eventhub will be removed.
     */
    readonly managedEventHubState: pulumi.Output<string | undefined>;
    /**
     * Gets or sets the managed resource group name
     */
    readonly managedResourceGroupName: pulumi.Output<string | undefined>;
    /**
     * Gets the resource identifiers of the managed resources.
     */
    readonly managedResources: pulumi.Output<outputs.purview.v20230501preview.AccountPropertiesResponseManagedResources>;
    /**
     * Gets or sets the public network access for managed resources.
     */
    readonly managedResourcesPublicNetworkAccess: pulumi.Output<string | undefined>;
    /**
     * Gets or sets the name.
     */
    readonly name: pulumi.Output<string>;
    /**
     * Gets the private endpoint connections information.
     */
    readonly privateEndpointConnections: pulumi.Output<outputs.purview.v20230501preview.PrivateEndpointConnectionResponse[]>;
    /**
     * Gets or sets the state of the provisioning.
     */
    readonly provisioningState: pulumi.Output<string>;
    /**
     * Gets or sets the public network access.
     */
    readonly publicNetworkAccess: pulumi.Output<string | undefined>;
    /**
     * Gets or sets the Sku.
     */
    readonly sku: pulumi.Output<outputs.purview.v20230501preview.AccountResponseSku>;
    /**
     * Metadata pertaining to creation and last modification of the resource.
     */
    readonly systemData: pulumi.Output<outputs.purview.v20230501preview.TrackedResourceResponseSystemData>;
    /**
     * Tags on the azure resource.
     */
    readonly tags: pulumi.Output<{
        [key: string]: string;
    } | undefined>;
    /**
     * Gets or sets the type.
     */
    readonly type: pulumi.Output<string>;
    /**
     * Create a Account resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: AccountArgs, opts?: pulumi.CustomResourceOptions);
}
/**
 * The set of arguments for constructing a Account resource.
 */
export interface AccountArgs {
    /**
     * The name of the account.
     */
    accountName?: pulumi.Input<string>;
    /**
     * The Managed Identity of the resource
     */
    identity?: pulumi.Input<inputs.purview.v20230501preview.IdentityArgs>;
    /**
     * Ingestion Storage Account Info
     */
    ingestionStorage?: pulumi.Input<inputs.purview.v20230501preview.IngestionStorageArgs>;
    /**
     * Gets or sets the location.
     */
    location?: pulumi.Input<string>;
    /**
     * Gets or sets the state of managed eventhub. If enabled managed eventhub will be created, if disabled the managed eventhub will be removed.
     */
    managedEventHubState?: pulumi.Input<string | enums.purview.v20230501preview.ManagedEventHubState>;
    /**
     * Gets or sets the managed resource group name
     */
    managedResourceGroupName?: pulumi.Input<string>;
    /**
     * Gets or sets the public network access for managed resources.
     */
    managedResourcesPublicNetworkAccess?: pulumi.Input<string | enums.purview.v20230501preview.ManagedResourcesPublicNetworkAccess>;
    /**
     * Gets or sets the public network access.
     */
    publicNetworkAccess?: pulumi.Input<string | enums.purview.v20230501preview.PublicNetworkAccess>;
    /**
     * The resource group name.
     */
    resourceGroupName: pulumi.Input<string>;
    /**
     * Tags on the azure resource.
     */
    tags?: pulumi.Input<{
        [key: string]: pulumi.Input<string>;
    }>;
}
