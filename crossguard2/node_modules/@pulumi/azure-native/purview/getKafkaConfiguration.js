"use strict";
// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***
Object.defineProperty(exports, "__esModule", { value: true });
exports.getKafkaConfigurationOutput = exports.getKafkaConfiguration = void 0;
const pulumi = require("@pulumi/pulumi");
const utilities = require("../utilities");
/**
 * Gets the kafka configuration for the account
 * Azure REST API version: 2021-12-01.
 *
 * Other available API versions: 2023-05-01-preview, 2024-04-01-preview.
 */
function getKafkaConfiguration(args, opts) {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("azure-native:purview:getKafkaConfiguration", {
        "accountName": args.accountName,
        "kafkaConfigurationName": args.kafkaConfigurationName,
        "resourceGroupName": args.resourceGroupName,
    }, opts);
}
exports.getKafkaConfiguration = getKafkaConfiguration;
/**
 * Gets the kafka configuration for the account
 * Azure REST API version: 2021-12-01.
 *
 * Other available API versions: 2023-05-01-preview, 2024-04-01-preview.
 */
function getKafkaConfigurationOutput(args, opts) {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invokeOutput("azure-native:purview:getKafkaConfiguration", {
        "accountName": args.accountName,
        "kafkaConfigurationName": args.kafkaConfigurationName,
        "resourceGroupName": args.resourceGroupName,
    }, opts);
}
exports.getKafkaConfigurationOutput = getKafkaConfigurationOutput;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZ2V0S2Fma2FDb25maWd1cmF0aW9uLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vcHVydmlldy9nZXRLYWZrYUNvbmZpZ3VyYXRpb24udHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IjtBQUFBLHNFQUFzRTtBQUN0RSxpRkFBaUY7OztBQUVqRix5Q0FBeUM7QUFJekMsMENBQTBDO0FBRTFDOzs7OztHQUtHO0FBQ0gsU0FBZ0IscUJBQXFCLENBQUMsSUFBK0IsRUFBRSxJQUEyQjtJQUM5RixJQUFJLEdBQUcsTUFBTSxDQUFDLFlBQVksQ0FBQyxTQUFTLENBQUMsb0JBQW9CLEVBQUUsRUFBRSxJQUFJLElBQUksRUFBRSxDQUFDLENBQUM7SUFDekUsT0FBTyxNQUFNLENBQUMsT0FBTyxDQUFDLE1BQU0sQ0FBQyw0Q0FBNEMsRUFBRTtRQUN2RSxhQUFhLEVBQUUsSUFBSSxDQUFDLFdBQVc7UUFDL0Isd0JBQXdCLEVBQUUsSUFBSSxDQUFDLHNCQUFzQjtRQUNyRCxtQkFBbUIsRUFBRSxJQUFJLENBQUMsaUJBQWlCO0tBQzlDLEVBQUUsSUFBSSxDQUFDLENBQUM7QUFDYixDQUFDO0FBUEQsc0RBT0M7QUErREQ7Ozs7O0dBS0c7QUFDSCxTQUFnQiwyQkFBMkIsQ0FBQyxJQUFxQyxFQUFFLElBQWlDO0lBQ2hILElBQUksR0FBRyxNQUFNLENBQUMsWUFBWSxDQUFDLFNBQVMsQ0FBQyxvQkFBb0IsRUFBRSxFQUFFLElBQUksSUFBSSxFQUFFLENBQUMsQ0FBQztJQUN6RSxPQUFPLE1BQU0sQ0FBQyxPQUFPLENBQUMsWUFBWSxDQUFDLDRDQUE0QyxFQUFFO1FBQzdFLGFBQWEsRUFBRSxJQUFJLENBQUMsV0FBVztRQUMvQix3QkFBd0IsRUFBRSxJQUFJLENBQUMsc0JBQXNCO1FBQ3JELG1CQUFtQixFQUFFLElBQUksQ0FBQyxpQkFBaUI7S0FDOUMsRUFBRSxJQUFJLENBQUMsQ0FBQztBQUNiLENBQUM7QUFQRCxrRUFPQyJ9