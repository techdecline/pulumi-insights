import * as pulumi from "@pulumi/pulumi";
import * as outputs from "../../types/output";
/**
 * Get an account
 */
export declare function getAccount(args: GetAccountArgs, opts?: pulumi.InvokeOptions): Promise<GetAccountResult>;
export interface GetAccountArgs {
    /**
     * The name of the account.
     */
    accountName: string;
    /**
     * The resource group name.
     */
    resourceGroupName: string;
}
/**
 * Account resource
 */
export interface GetAccountResult {
    /**
     * Gets or sets the status of the account.
     */
    readonly accountStatus: outputs.purview.v20240401preview.AccountPropertiesResponseAccountStatus;
    /**
     * External Cloud Service connectors
     */
    readonly cloudConnectors?: outputs.purview.v20240401preview.CloudConnectorsResponse;
    /**
     * Gets the time at which the entity was created.
     */
    readonly createdAt: string;
    /**
     * Gets the creator of the entity.
     */
    readonly createdBy: string;
    /**
     * Gets the creators of the entity's object id.
     */
    readonly createdByObjectId: string;
    /**
     * Gets the default domain in the account.
     */
    readonly defaultDomain: string;
    /**
     * The URIs that are the public endpoints of the account.
     */
    readonly endpoints: outputs.purview.v20240401preview.AccountPropertiesResponseEndpoints;
    /**
     * Gets or sets the friendly name.
     */
    readonly friendlyName: string;
    /**
     * Gets or sets the identifier.
     */
    readonly id: string;
    /**
     * The Managed Identity of the resource
     */
    readonly identity?: outputs.purview.v20240401preview.IdentityResponse;
    /**
     * Ingestion Storage Account Info
     */
    readonly ingestionStorage?: outputs.purview.v20240401preview.IngestionStorageResponse;
    /**
     * Gets or sets the location.
     */
    readonly location?: string;
    /**
     * Gets or sets the state of managed eventhub. If enabled managed eventhub will be created, if disabled the managed eventhub will be removed.
     */
    readonly managedEventHubState?: string;
    /**
     * Gets or sets the managed resource group name
     */
    readonly managedResourceGroupName?: string;
    /**
     * Gets the resource identifiers of the managed resources.
     */
    readonly managedResources: outputs.purview.v20240401preview.AccountPropertiesResponseManagedResources;
    /**
     * Gets or sets the public network access for managed resources.
     */
    readonly managedResourcesPublicNetworkAccess?: string;
    /**
     * Gets or sets the Merge Info.
     */
    readonly mergeInfo?: outputs.purview.v20240401preview.AccountMergeInfoResponse;
    /**
     * Gets or sets the name.
     */
    readonly name: string;
    /**
     * Gets the private endpoint connections information.
     */
    readonly privateEndpointConnections: outputs.purview.v20240401preview.PrivateEndpointConnectionResponse[];
    /**
     * Gets or sets the state of the provisioning.
     */
    readonly provisioningState: string;
    /**
     * Gets or sets the public network access.
     */
    readonly publicNetworkAccess?: string;
    /**
     * Gets or sets the Sku.
     */
    readonly sku?: outputs.purview.v20240401preview.AccountResponseSku;
    /**
     * Metadata pertaining to creation and last modification of the resource.
     */
    readonly systemData: outputs.purview.v20240401preview.TrackedResourceResponseSystemData;
    /**
     * Tags on the azure resource.
     */
    readonly tags?: {
        [key: string]: string;
    };
    /**
     * Gets or sets the state of tenant endpoint.
     */
    readonly tenantEndpointState?: string;
    /**
     * Gets or sets the type.
     */
    readonly type: string;
}
/**
 * Get an account
 */
export declare function getAccountOutput(args: GetAccountOutputArgs, opts?: pulumi.InvokeOutputOptions): pulumi.Output<GetAccountResult>;
export interface GetAccountOutputArgs {
    /**
     * The name of the account.
     */
    accountName: pulumi.Input<string>;
    /**
     * The resource group name.
     */
    resourceGroupName: pulumi.Input<string>;
}
