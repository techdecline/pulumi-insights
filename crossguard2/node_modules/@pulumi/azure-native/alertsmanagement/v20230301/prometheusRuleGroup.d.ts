import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../../types/input";
import * as outputs from "../../types/output";
/**
 * The Prometheus rule group resource.
 */
export declare class PrometheusRuleGroup extends pulumi.CustomResource {
    /**
     * Get an existing PrometheusRuleGroup resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    static get(name: string, id: pulumi.Input<pulumi.ID>, opts?: pulumi.CustomResourceOptions): PrometheusRuleGroup;
    /**
     * Returns true if the given object is an instance of PrometheusRuleGroup.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    static isInstance(obj: any): obj is PrometheusRuleGroup;
    /**
     * Apply rule to data from a specific cluster.
     */
    readonly clusterName: pulumi.Output<string | undefined>;
    /**
     * Rule group description.
     */
    readonly description: pulumi.Output<string | undefined>;
    /**
     * Enable/disable rule group.
     */
    readonly enabled: pulumi.Output<boolean | undefined>;
    /**
     * The interval in which to run the Prometheus rule group represented in ISO 8601 duration format. Should be between 1 and 15 minutes
     */
    readonly interval: pulumi.Output<string | undefined>;
    /**
     * The geo-location where the resource lives
     */
    readonly location: pulumi.Output<string>;
    /**
     * The name of the resource
     */
    readonly name: pulumi.Output<string>;
    /**
     * Defines the rules in the Prometheus rule group.
     */
    readonly rules: pulumi.Output<outputs.alertsmanagement.v20230301.PrometheusRuleResponse[]>;
    /**
     * Target Azure Monitor workspaces resource ids. This api-version is currently limited to creating with one scope. This may change in future.
     */
    readonly scopes: pulumi.Output<string[]>;
    /**
     * Azure Resource Manager metadata containing createdBy and modifiedBy information.
     */
    readonly systemData: pulumi.Output<outputs.alertsmanagement.v20230301.SystemDataResponse>;
    /**
     * Resource tags.
     */
    readonly tags: pulumi.Output<{
        [key: string]: string;
    } | undefined>;
    /**
     * The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
     */
    readonly type: pulumi.Output<string>;
    /**
     * Create a PrometheusRuleGroup resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: PrometheusRuleGroupArgs, opts?: pulumi.CustomResourceOptions);
}
/**
 * The set of arguments for constructing a PrometheusRuleGroup resource.
 */
export interface PrometheusRuleGroupArgs {
    /**
     * Apply rule to data from a specific cluster.
     */
    clusterName?: pulumi.Input<string>;
    /**
     * Rule group description.
     */
    description?: pulumi.Input<string>;
    /**
     * Enable/disable rule group.
     */
    enabled?: pulumi.Input<boolean>;
    /**
     * The interval in which to run the Prometheus rule group represented in ISO 8601 duration format. Should be between 1 and 15 minutes
     */
    interval?: pulumi.Input<string>;
    /**
     * The geo-location where the resource lives
     */
    location?: pulumi.Input<string>;
    /**
     * The name of the resource group. The name is case insensitive.
     */
    resourceGroupName: pulumi.Input<string>;
    /**
     * The name of the rule group.
     */
    ruleGroupName?: pulumi.Input<string>;
    /**
     * Defines the rules in the Prometheus rule group.
     */
    rules: pulumi.Input<pulumi.Input<inputs.alertsmanagement.v20230301.PrometheusRuleArgs>[]>;
    /**
     * Target Azure Monitor workspaces resource ids. This api-version is currently limited to creating with one scope. This may change in future.
     */
    scopes: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Resource tags.
     */
    tags?: pulumi.Input<{
        [key: string]: pulumi.Input<string>;
    }>;
}
