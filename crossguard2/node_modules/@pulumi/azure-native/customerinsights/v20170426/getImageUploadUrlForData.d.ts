import * as pulumi from "@pulumi/pulumi";
/**
 * Gets data image upload URL.
 */
export declare function getImageUploadUrlForData(args: GetImageUploadUrlForDataArgs, opts?: pulumi.InvokeOptions): Promise<GetImageUploadUrlForDataResult>;
export interface GetImageUploadUrlForDataArgs {
    /**
     * Type of entity. Can be Profile or Interaction.
     */
    entityType?: string;
    /**
     * Name of the entity type.
     */
    entityTypeName?: string;
    /**
     * The name of the hub.
     */
    hubName: string;
    /**
     * Relative path of the image.
     */
    relativePath?: string;
    /**
     * The name of the resource group.
     */
    resourceGroupName: string;
}
/**
 * The image definition.
 */
export interface GetImageUploadUrlForDataResult {
    /**
     * Content URL for the image blob.
     */
    readonly contentUrl?: string;
    /**
     * Whether image exists already.
     */
    readonly imageExists?: boolean;
    /**
     * Relative path of the image.
     */
    readonly relativePath?: string;
}
/**
 * Gets data image upload URL.
 */
export declare function getImageUploadUrlForDataOutput(args: GetImageUploadUrlForDataOutputArgs, opts?: pulumi.InvokeOutputOptions): pulumi.Output<GetImageUploadUrlForDataResult>;
export interface GetImageUploadUrlForDataOutputArgs {
    /**
     * Type of entity. Can be Profile or Interaction.
     */
    entityType?: pulumi.Input<string>;
    /**
     * Name of the entity type.
     */
    entityTypeName?: pulumi.Input<string>;
    /**
     * The name of the hub.
     */
    hubName: pulumi.Input<string>;
    /**
     * Relative path of the image.
     */
    relativePath?: pulumi.Input<string>;
    /**
     * The name of the resource group.
     */
    resourceGroupName: pulumi.Input<string>;
}
