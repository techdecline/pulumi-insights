import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../../types/input";
import * as outputs from "../../types/output";
import * as enums from "../../types/enums";
/**
 * MEC role.
 */
export declare class MECRole extends pulumi.CustomResource {
    /**
     * Get an existing MECRole resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    static get(name: string, id: pulumi.Input<pulumi.ID>, opts?: pulumi.CustomResourceOptions): MECRole;
    /**
     * Returns true if the given object is an instance of MECRole.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    static isInstance(obj: any): obj is MECRole;
    /**
     * Activation key of the MEC.
     */
    readonly connectionString: pulumi.Output<outputs.databoxedge.v20230701.AsymmetricEncryptedSecretResponse | undefined>;
    /**
     * Controller Endpoint.
     */
    readonly controllerEndpoint: pulumi.Output<string | undefined>;
    /**
     * Role type.
     * Expected value is 'MEC'.
     */
    readonly kind: pulumi.Output<"MEC">;
    /**
     * The object name.
     */
    readonly name: pulumi.Output<string>;
    /**
     * Unique Id of the Resource.
     */
    readonly resourceUniqueId: pulumi.Output<string | undefined>;
    /**
     * Role status.
     */
    readonly roleStatus: pulumi.Output<string>;
    /**
     * Metadata pertaining to creation and last modification of Role
     */
    readonly systemData: pulumi.Output<outputs.databoxedge.v20230701.SystemDataResponse>;
    /**
     * The hierarchical type of the object.
     */
    readonly type: pulumi.Output<string>;
    /**
     * Create a MECRole resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: MECRoleArgs, opts?: pulumi.CustomResourceOptions);
}
/**
 * The set of arguments for constructing a MECRole resource.
 */
export interface MECRoleArgs {
    /**
     * Activation key of the MEC.
     */
    connectionString?: pulumi.Input<inputs.databoxedge.v20230701.AsymmetricEncryptedSecretArgs>;
    /**
     * Controller Endpoint.
     */
    controllerEndpoint?: pulumi.Input<string>;
    /**
     * The device name.
     */
    deviceName: pulumi.Input<string>;
    /**
     * Role type.
     * Expected value is 'MEC'.
     */
    kind: pulumi.Input<"MEC">;
    /**
     * The role name.
     */
    name?: pulumi.Input<string>;
    /**
     * The resource group name.
     */
    resourceGroupName: pulumi.Input<string>;
    /**
     * Unique Id of the Resource.
     */
    resourceUniqueId?: pulumi.Input<string>;
    /**
     * Role status.
     */
    roleStatus: pulumi.Input<string | enums.databoxedge.v20230701.RoleStatus>;
}
