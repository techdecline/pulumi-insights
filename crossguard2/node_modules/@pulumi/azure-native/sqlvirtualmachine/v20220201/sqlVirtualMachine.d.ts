import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../../types/input";
import * as outputs from "../../types/output";
import * as enums from "../../types/enums";
/**
 * A SQL virtual machine.
 */
export declare class SqlVirtualMachine extends pulumi.CustomResource {
    /**
     * Get an existing SqlVirtualMachine resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    static get(name: string, id: pulumi.Input<pulumi.ID>, opts?: pulumi.CustomResourceOptions): SqlVirtualMachine;
    /**
     * Returns true if the given object is an instance of SqlVirtualMachine.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    static isInstance(obj: any): obj is SqlVirtualMachine;
    /**
     * Assessment Settings.
     */
    readonly assessmentSettings: pulumi.Output<outputs.sqlvirtualmachine.v20220201.AssessmentSettingsResponse | undefined>;
    /**
     * Auto backup settings for SQL Server.
     */
    readonly autoBackupSettings: pulumi.Output<outputs.sqlvirtualmachine.v20220201.AutoBackupSettingsResponse | undefined>;
    /**
     * Auto patching settings for applying critical security updates to SQL virtual machine.
     */
    readonly autoPatchingSettings: pulumi.Output<outputs.sqlvirtualmachine.v20220201.AutoPatchingSettingsResponse | undefined>;
    /**
     * Azure Active Directory identity of the server.
     */
    readonly identity: pulumi.Output<outputs.sqlvirtualmachine.v20220201.ResourceIdentityResponse | undefined>;
    /**
     * Key vault credential settings.
     */
    readonly keyVaultCredentialSettings: pulumi.Output<outputs.sqlvirtualmachine.v20220201.KeyVaultCredentialSettingsResponse | undefined>;
    /**
     * Resource location.
     */
    readonly location: pulumi.Output<string>;
    /**
     * Resource name.
     */
    readonly name: pulumi.Output<string>;
    /**
     * Provisioning state to track the async operation status.
     */
    readonly provisioningState: pulumi.Output<string>;
    /**
     * SQL Server configuration management settings.
     */
    readonly serverConfigurationsManagementSettings: pulumi.Output<outputs.sqlvirtualmachine.v20220201.ServerConfigurationsManagementSettingsResponse | undefined>;
    /**
     * SQL image offer. Examples include SQL2016-WS2016, SQL2017-WS2016.
     */
    readonly sqlImageOffer: pulumi.Output<string | undefined>;
    /**
     * SQL Server edition type.
     */
    readonly sqlImageSku: pulumi.Output<string | undefined>;
    /**
     * SQL Server Management type.
     */
    readonly sqlManagement: pulumi.Output<string | undefined>;
    /**
     * SQL Server license type.
     */
    readonly sqlServerLicenseType: pulumi.Output<string | undefined>;
    /**
     * ARM resource id of the SQL virtual machine group this SQL virtual machine is or will be part of.
     */
    readonly sqlVirtualMachineGroupResourceId: pulumi.Output<string | undefined>;
    /**
     * Storage Configuration Settings.
     */
    readonly storageConfigurationSettings: pulumi.Output<outputs.sqlvirtualmachine.v20220201.StorageConfigurationSettingsResponse | undefined>;
    /**
     * Metadata pertaining to creation and last modification of the resource.
     */
    readonly systemData: pulumi.Output<outputs.sqlvirtualmachine.v20220201.SystemDataResponse>;
    /**
     * Resource tags.
     */
    readonly tags: pulumi.Output<{
        [key: string]: string;
    } | undefined>;
    /**
     * Resource type.
     */
    readonly type: pulumi.Output<string>;
    /**
     * ARM Resource id of underlying virtual machine created from SQL marketplace image.
     */
    readonly virtualMachineResourceId: pulumi.Output<string | undefined>;
    /**
     * Domain credentials for setting up Windows Server Failover Cluster for SQL availability group.
     */
    readonly wsfcDomainCredentials: pulumi.Output<outputs.sqlvirtualmachine.v20220201.WsfcDomainCredentialsResponse | undefined>;
    /**
     * Domain credentials for setting up Windows Server Failover Cluster for SQL availability group.
     */
    readonly wsfcStaticIp: pulumi.Output<string | undefined>;
    /**
     * Create a SqlVirtualMachine resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: SqlVirtualMachineArgs, opts?: pulumi.CustomResourceOptions);
}
/**
 * The set of arguments for constructing a SqlVirtualMachine resource.
 */
export interface SqlVirtualMachineArgs {
    /**
     * Assessment Settings.
     */
    assessmentSettings?: pulumi.Input<inputs.sqlvirtualmachine.v20220201.AssessmentSettingsArgs>;
    /**
     * Auto backup settings for SQL Server.
     */
    autoBackupSettings?: pulumi.Input<inputs.sqlvirtualmachine.v20220201.AutoBackupSettingsArgs>;
    /**
     * Auto patching settings for applying critical security updates to SQL virtual machine.
     */
    autoPatchingSettings?: pulumi.Input<inputs.sqlvirtualmachine.v20220201.AutoPatchingSettingsArgs>;
    /**
     * Azure Active Directory identity of the server.
     */
    identity?: pulumi.Input<inputs.sqlvirtualmachine.v20220201.ResourceIdentityArgs>;
    /**
     * Key vault credential settings.
     */
    keyVaultCredentialSettings?: pulumi.Input<inputs.sqlvirtualmachine.v20220201.KeyVaultCredentialSettingsArgs>;
    /**
     * Resource location.
     */
    location?: pulumi.Input<string>;
    /**
     * Name of the resource group that contains the resource. You can obtain this value from the Azure Resource Manager API or the portal.
     */
    resourceGroupName: pulumi.Input<string>;
    /**
     * SQL Server configuration management settings.
     */
    serverConfigurationsManagementSettings?: pulumi.Input<inputs.sqlvirtualmachine.v20220201.ServerConfigurationsManagementSettingsArgs>;
    /**
     * SQL image offer. Examples include SQL2016-WS2016, SQL2017-WS2016.
     */
    sqlImageOffer?: pulumi.Input<string>;
    /**
     * SQL Server edition type.
     */
    sqlImageSku?: pulumi.Input<string | enums.sqlvirtualmachine.v20220201.SqlImageSku>;
    /**
     * SQL Server Management type.
     */
    sqlManagement?: pulumi.Input<string | enums.sqlvirtualmachine.v20220201.SqlManagementMode>;
    /**
     * SQL Server license type.
     */
    sqlServerLicenseType?: pulumi.Input<string | enums.sqlvirtualmachine.v20220201.SqlServerLicenseType>;
    /**
     * ARM resource id of the SQL virtual machine group this SQL virtual machine is or will be part of.
     */
    sqlVirtualMachineGroupResourceId?: pulumi.Input<string>;
    /**
     * Name of the SQL virtual machine.
     */
    sqlVirtualMachineName?: pulumi.Input<string>;
    /**
     * Storage Configuration Settings.
     */
    storageConfigurationSettings?: pulumi.Input<inputs.sqlvirtualmachine.v20220201.StorageConfigurationSettingsArgs>;
    /**
     * Resource tags.
     */
    tags?: pulumi.Input<{
        [key: string]: pulumi.Input<string>;
    }>;
    /**
     * ARM Resource id of underlying virtual machine created from SQL marketplace image.
     */
    virtualMachineResourceId?: pulumi.Input<string>;
    /**
     * Domain credentials for setting up Windows Server Failover Cluster for SQL availability group.
     */
    wsfcDomainCredentials?: pulumi.Input<inputs.sqlvirtualmachine.v20220201.WsfcDomainCredentialsArgs>;
    /**
     * Domain credentials for setting up Windows Server Failover Cluster for SQL availability group.
     */
    wsfcStaticIp?: pulumi.Input<string>;
}
