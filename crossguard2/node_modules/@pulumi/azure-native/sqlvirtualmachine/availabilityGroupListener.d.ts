import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
/**
 * A SQL Server availability group listener.
 * Azure REST API version: 2022-02-01. Prior API version in Azure Native 1.x: 2017-03-01-preview.
 *
 * Other available API versions: 2023-01-01-preview, 2023-10-01.
 */
export declare class AvailabilityGroupListener extends pulumi.CustomResource {
    /**
     * Get an existing AvailabilityGroupListener resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    static get(name: string, id: pulumi.Input<pulumi.ID>, opts?: pulumi.CustomResourceOptions): AvailabilityGroupListener;
    /**
     * Returns true if the given object is an instance of AvailabilityGroupListener.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    static isInstance(obj: any): obj is AvailabilityGroupListener;
    /**
     * Availability Group configuration.
     */
    readonly availabilityGroupConfiguration: pulumi.Output<outputs.sqlvirtualmachine.AgConfigurationResponse | undefined>;
    /**
     * Name of the availability group.
     */
    readonly availabilityGroupName: pulumi.Output<string | undefined>;
    /**
     * Create a default availability group if it does not exist.
     */
    readonly createDefaultAvailabilityGroupIfNotExist: pulumi.Output<boolean | undefined>;
    /**
     * List of load balancer configurations for an availability group listener.
     */
    readonly loadBalancerConfigurations: pulumi.Output<outputs.sqlvirtualmachine.LoadBalancerConfigurationResponse[] | undefined>;
    /**
     * List of multi subnet IP configurations for an AG listener.
     */
    readonly multiSubnetIpConfigurations: pulumi.Output<outputs.sqlvirtualmachine.MultiSubnetIpConfigurationResponse[] | undefined>;
    /**
     * Resource name.
     */
    readonly name: pulumi.Output<string>;
    /**
     * Listener port.
     */
    readonly port: pulumi.Output<number | undefined>;
    /**
     * Provisioning state to track the async operation status.
     */
    readonly provisioningState: pulumi.Output<string>;
    /**
     * Metadata pertaining to creation and last modification of the resource.
     */
    readonly systemData: pulumi.Output<outputs.sqlvirtualmachine.SystemDataResponse>;
    /**
     * Resource type.
     */
    readonly type: pulumi.Output<string>;
    /**
     * Create a AvailabilityGroupListener resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: AvailabilityGroupListenerArgs, opts?: pulumi.CustomResourceOptions);
}
/**
 * The set of arguments for constructing a AvailabilityGroupListener resource.
 */
export interface AvailabilityGroupListenerArgs {
    /**
     * Availability Group configuration.
     */
    availabilityGroupConfiguration?: pulumi.Input<inputs.sqlvirtualmachine.AgConfigurationArgs>;
    /**
     * Name of the availability group listener.
     */
    availabilityGroupListenerName?: pulumi.Input<string>;
    /**
     * Name of the availability group.
     */
    availabilityGroupName?: pulumi.Input<string>;
    /**
     * Create a default availability group if it does not exist.
     */
    createDefaultAvailabilityGroupIfNotExist?: pulumi.Input<boolean>;
    /**
     * List of load balancer configurations for an availability group listener.
     */
    loadBalancerConfigurations?: pulumi.Input<pulumi.Input<inputs.sqlvirtualmachine.LoadBalancerConfigurationArgs>[]>;
    /**
     * List of multi subnet IP configurations for an AG listener.
     */
    multiSubnetIpConfigurations?: pulumi.Input<pulumi.Input<inputs.sqlvirtualmachine.MultiSubnetIpConfigurationArgs>[]>;
    /**
     * Listener port.
     */
    port?: pulumi.Input<number>;
    /**
     * Name of the resource group that contains the resource. You can obtain this value from the Azure Resource Manager API or the portal.
     */
    resourceGroupName: pulumi.Input<string>;
    /**
     * Name of the SQL virtual machine group.
     */
    sqlVirtualMachineGroupName: pulumi.Input<string>;
}
