import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../../types/input";
import * as outputs from "../../types/output";
import * as enums from "../../types/enums";
/**
 * Type of the Storage Target.
 */
export declare class StorageTarget extends pulumi.CustomResource {
    /**
     * Get an existing StorageTarget resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    static get(name: string, id: pulumi.Input<pulumi.ID>, opts?: pulumi.CustomResourceOptions): StorageTarget;
    /**
     * Returns true if the given object is an instance of StorageTarget.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    static isInstance(obj: any): obj is StorageTarget;
    /**
     * The percentage of cache space allocated for this storage target
     */
    readonly allocationPercentage: pulumi.Output<number>;
    /**
     * Properties when targetType is blobNfs.
     */
    readonly blobNfs: pulumi.Output<outputs.storagecache.v20231101preview.BlobNfsTargetResponse | undefined>;
    /**
     * Properties when targetType is clfs.
     */
    readonly clfs: pulumi.Output<outputs.storagecache.v20231101preview.ClfsTargetResponse | undefined>;
    /**
     * List of cache namespace junctions to target for namespace associations.
     */
    readonly junctions: pulumi.Output<outputs.storagecache.v20231101preview.NamespaceJunctionResponse[] | undefined>;
    /**
     * Region name string.
     */
    readonly location: pulumi.Output<string>;
    /**
     * Name of the Storage Target.
     */
    readonly name: pulumi.Output<string>;
    /**
     * Properties when targetType is nfs3.
     */
    readonly nfs3: pulumi.Output<outputs.storagecache.v20231101preview.Nfs3TargetResponse | undefined>;
    /**
     * ARM provisioning state, see https://github.com/Azure/azure-resource-manager-rpc/blob/master/v1.0/Addendum.md#provisioningstate-property
     */
    readonly provisioningState: pulumi.Output<string>;
    /**
     * Storage target operational state.
     */
    readonly state: pulumi.Output<string | undefined>;
    /**
     * The system meta data relating to this resource.
     */
    readonly systemData: pulumi.Output<outputs.storagecache.v20231101preview.SystemDataResponse>;
    /**
     * Type of the Storage Target.
     */
    readonly targetType: pulumi.Output<string>;
    /**
     * Type of the Storage Target; Microsoft.StorageCache/Cache/StorageTarget
     */
    readonly type: pulumi.Output<string>;
    /**
     * Properties when targetType is unknown.
     */
    readonly unknown: pulumi.Output<outputs.storagecache.v20231101preview.UnknownTargetResponse | undefined>;
    /**
     * Create a StorageTarget resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: StorageTargetArgs, opts?: pulumi.CustomResourceOptions);
}
/**
 * The set of arguments for constructing a StorageTarget resource.
 */
export interface StorageTargetArgs {
    /**
     * Properties when targetType is blobNfs.
     */
    blobNfs?: pulumi.Input<inputs.storagecache.v20231101preview.BlobNfsTargetArgs>;
    /**
     * Name of cache. Length of name must not be greater than 80 and chars must be from the [-0-9a-zA-Z_] char class.
     */
    cacheName: pulumi.Input<string>;
    /**
     * Properties when targetType is clfs.
     */
    clfs?: pulumi.Input<inputs.storagecache.v20231101preview.ClfsTargetArgs>;
    /**
     * List of cache namespace junctions to target for namespace associations.
     */
    junctions?: pulumi.Input<pulumi.Input<inputs.storagecache.v20231101preview.NamespaceJunctionArgs>[]>;
    /**
     * Properties when targetType is nfs3.
     */
    nfs3?: pulumi.Input<inputs.storagecache.v20231101preview.Nfs3TargetArgs>;
    /**
     * The name of the resource group. The name is case insensitive.
     */
    resourceGroupName: pulumi.Input<string>;
    /**
     * Storage target operational state.
     */
    state?: pulumi.Input<string | enums.storagecache.v20231101preview.OperationalStateType>;
    /**
     * Name of Storage Target.
     */
    storageTargetName?: pulumi.Input<string>;
    /**
     * Type of the Storage Target.
     */
    targetType: pulumi.Input<string | enums.storagecache.v20231101preview.StorageTargetType>;
    /**
     * Properties when targetType is unknown.
     */
    unknown?: pulumi.Input<inputs.storagecache.v20231101preview.UnknownTargetArgs>;
}
