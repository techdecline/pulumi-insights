"use strict";
// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __exportStar = (this && this.__exportStar) || function(m, exports) {
    for (var p in m) if (p !== "default" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.getRequiredAmlFSSubnetsSizeOutput = exports.getRequiredAmlFSSubnetsSize = exports.getCacheOutput = exports.getCache = exports.getAmlFilesystemOutput = exports.getAmlFilesystem = exports.Cache = exports.AmlFilesystem = void 0;
const pulumi = require("@pulumi/pulumi");
const utilities = require("../../utilities");
exports.AmlFilesystem = null;
utilities.lazyLoad(exports, ["AmlFilesystem"], () => require("./amlFilesystem"));
exports.Cache = null;
utilities.lazyLoad(exports, ["Cache"], () => require("./cache"));
exports.getAmlFilesystem = null;
exports.getAmlFilesystemOutput = null;
utilities.lazyLoad(exports, ["getAmlFilesystem", "getAmlFilesystemOutput"], () => require("./getAmlFilesystem"));
exports.getCache = null;
exports.getCacheOutput = null;
utilities.lazyLoad(exports, ["getCache", "getCacheOutput"], () => require("./getCache"));
exports.getRequiredAmlFSSubnetsSize = null;
exports.getRequiredAmlFSSubnetsSizeOutput = null;
utilities.lazyLoad(exports, ["getRequiredAmlFSSubnetsSize", "getRequiredAmlFSSubnetsSizeOutput"], () => require("./getRequiredAmlFSSubnetsSize"));
// Export enums:
__exportStar(require("../../types/enums/storagecache/v20230301preview"), exports);
const _module = {
    version: utilities.getVersion(),
    construct: (name, type, urn) => {
        switch (type) {
            case "azure-native:storagecache/v20230301preview:AmlFilesystem":
                return new exports.AmlFilesystem(name, undefined, { urn });
            case "azure-native:storagecache/v20230301preview:Cache":
                return new exports.Cache(name, undefined, { urn });
            default:
                throw new Error(`unknown resource type ${type}`);
        }
    },
};
pulumi.runtime.registerResourceModule("azure-native", "storagecache/v20230301preview", _module);
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaW5kZXguanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi9zdG9yYWdlY2FjaGUvdjIwMjMwMzAxcHJldmlldy9pbmRleC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiO0FBQUEsc0VBQXNFO0FBQ3RFLGlGQUFpRjs7Ozs7Ozs7Ozs7Ozs7Ozs7QUFFakYseUNBQXlDO0FBQ3pDLDZDQUE2QztBQUtoQyxRQUFBLGFBQWEsR0FBbUQsSUFBVyxDQUFDO0FBQ3pGLFNBQVMsQ0FBQyxRQUFRLENBQUMsT0FBTyxFQUFFLENBQUMsZUFBZSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsT0FBTyxDQUFDLGlCQUFpQixDQUFDLENBQUMsQ0FBQztBQUlwRSxRQUFBLEtBQUssR0FBbUMsSUFBVyxDQUFDO0FBQ2pFLFNBQVMsQ0FBQyxRQUFRLENBQUMsT0FBTyxFQUFFLENBQUMsT0FBTyxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsT0FBTyxDQUFDLFNBQVMsQ0FBQyxDQUFDLENBQUM7QUFHcEQsUUFBQSxnQkFBZ0IsR0FBeUQsSUFBVyxDQUFDO0FBQ3JGLFFBQUEsc0JBQXNCLEdBQStELElBQVcsQ0FBQztBQUM5RyxTQUFTLENBQUMsUUFBUSxDQUFDLE9BQU8sRUFBRSxDQUFDLGtCQUFrQixFQUFDLHdCQUF3QixDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsT0FBTyxDQUFDLG9CQUFvQixDQUFDLENBQUMsQ0FBQztBQUduRyxRQUFBLFFBQVEsR0FBeUMsSUFBVyxDQUFDO0FBQzdELFFBQUEsY0FBYyxHQUErQyxJQUFXLENBQUM7QUFDdEYsU0FBUyxDQUFDLFFBQVEsQ0FBQyxPQUFPLEVBQUUsQ0FBQyxVQUFVLEVBQUMsZ0JBQWdCLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxPQUFPLENBQUMsWUFBWSxDQUFDLENBQUMsQ0FBQztBQUczRSxRQUFBLDJCQUEyQixHQUErRSxJQUFXLENBQUM7QUFDdEgsUUFBQSxpQ0FBaUMsR0FBcUYsSUFBVyxDQUFDO0FBQy9JLFNBQVMsQ0FBQyxRQUFRLENBQUMsT0FBTyxFQUFFLENBQUMsNkJBQTZCLEVBQUMsbUNBQW1DLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxPQUFPLENBQUMsK0JBQStCLENBQUMsQ0FBQyxDQUFDO0FBR2pKLGdCQUFnQjtBQUNoQixrRkFBZ0U7QUFFaEUsTUFBTSxPQUFPLEdBQUc7SUFDWixPQUFPLEVBQUUsU0FBUyxDQUFDLFVBQVUsRUFBRTtJQUMvQixTQUFTLEVBQUUsQ0FBQyxJQUFZLEVBQUUsSUFBWSxFQUFFLEdBQVcsRUFBbUIsRUFBRTtRQUNwRSxRQUFRLElBQUksRUFBRTtZQUNWLEtBQUssMERBQTBEO2dCQUMzRCxPQUFPLElBQUkscUJBQWEsQ0FBQyxJQUFJLEVBQU8sU0FBUyxFQUFFLEVBQUUsR0FBRyxFQUFFLENBQUMsQ0FBQTtZQUMzRCxLQUFLLGtEQUFrRDtnQkFDbkQsT0FBTyxJQUFJLGFBQUssQ0FBQyxJQUFJLEVBQU8sU0FBUyxFQUFFLEVBQUUsR0FBRyxFQUFFLENBQUMsQ0FBQTtZQUNuRDtnQkFDSSxNQUFNLElBQUksS0FBSyxDQUFDLHlCQUF5QixJQUFJLEVBQUUsQ0FBQyxDQUFDO1NBQ3hEO0lBQ0wsQ0FBQztDQUNKLENBQUM7QUFDRixNQUFNLENBQUMsT0FBTyxDQUFDLHNCQUFzQixDQUFDLGNBQWMsRUFBRSwrQkFBK0IsRUFBRSxPQUFPLENBQUMsQ0FBQSJ9