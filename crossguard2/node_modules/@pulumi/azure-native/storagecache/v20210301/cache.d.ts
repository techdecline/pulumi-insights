import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../../types/input";
import * as outputs from "../../types/output";
import * as enums from "../../types/enums";
/**
 * A Cache instance. Follows Azure Resource Manager standards: https://github.com/Azure/azure-resource-manager-rpc/blob/master/v1.0/resource-api-reference.md
 */
export declare class Cache extends pulumi.CustomResource {
    /**
     * Get an existing Cache resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    static get(name: string, id: pulumi.Input<pulumi.ID>, opts?: pulumi.CustomResourceOptions): Cache;
    /**
     * Returns true if the given object is an instance of Cache.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    static isInstance(obj: any): obj is Cache;
    /**
     * The size of this Cache, in GB.
     */
    readonly cacheSizeGB: pulumi.Output<number | undefined>;
    /**
     * Specifies Directory Services settings of the cache.
     */
    readonly directoryServicesSettings: pulumi.Output<outputs.storagecache.v20210301.CacheDirectorySettingsResponse | undefined>;
    /**
     * Specifies encryption settings of the cache.
     */
    readonly encryptionSettings: pulumi.Output<outputs.storagecache.v20210301.CacheEncryptionSettingsResponse | undefined>;
    /**
     * Health of the Cache.
     */
    readonly health: pulumi.Output<outputs.storagecache.v20210301.CacheHealthResponse>;
    /**
     * The identity of the cache, if configured.
     */
    readonly identity: pulumi.Output<outputs.storagecache.v20210301.CacheIdentityResponse | undefined>;
    /**
     * Region name string.
     */
    readonly location: pulumi.Output<string | undefined>;
    /**
     * Array of IP addresses that can be used by clients mounting this Cache.
     */
    readonly mountAddresses: pulumi.Output<string[]>;
    /**
     * Name of Cache.
     */
    readonly name: pulumi.Output<string>;
    /**
     * Specifies network settings of the cache.
     */
    readonly networkSettings: pulumi.Output<outputs.storagecache.v20210301.CacheNetworkSettingsResponse | undefined>;
    /**
     * ARM provisioning state, see https://github.com/Azure/azure-resource-manager-rpc/blob/master/v1.0/Addendum.md#provisioningstate-property
     */
    readonly provisioningState: pulumi.Output<string | undefined>;
    /**
     * Specifies security settings of the cache.
     */
    readonly securitySettings: pulumi.Output<outputs.storagecache.v20210301.CacheSecuritySettingsResponse | undefined>;
    /**
     * SKU for the Cache.
     */
    readonly sku: pulumi.Output<outputs.storagecache.v20210301.CacheResponseSku | undefined>;
    /**
     * Subnet used for the Cache.
     */
    readonly subnet: pulumi.Output<string | undefined>;
    /**
     * The system meta data relating to this resource.
     */
    readonly systemData: pulumi.Output<outputs.storagecache.v20210301.SystemDataResponse>;
    /**
     * Resource tags.
     */
    readonly tags: pulumi.Output<{
        [key: string]: string;
    } | undefined>;
    /**
     * Type of the Cache; Microsoft.StorageCache/Cache
     */
    readonly type: pulumi.Output<string>;
    /**
     * Upgrade status of the Cache.
     */
    readonly upgradeStatus: pulumi.Output<outputs.storagecache.v20210301.CacheUpgradeStatusResponse | undefined>;
    /**
     * Create a Cache resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: CacheArgs, opts?: pulumi.CustomResourceOptions);
}
/**
 * The set of arguments for constructing a Cache resource.
 */
export interface CacheArgs {
    /**
     * Name of Cache. Length of name must not be greater than 80 and chars must be from the [-0-9a-zA-Z_] char class.
     */
    cacheName?: pulumi.Input<string>;
    /**
     * The size of this Cache, in GB.
     */
    cacheSizeGB?: pulumi.Input<number>;
    /**
     * Specifies Directory Services settings of the cache.
     */
    directoryServicesSettings?: pulumi.Input<inputs.storagecache.v20210301.CacheDirectorySettingsArgs>;
    /**
     * Specifies encryption settings of the cache.
     */
    encryptionSettings?: pulumi.Input<inputs.storagecache.v20210301.CacheEncryptionSettingsArgs>;
    /**
     * The identity of the cache, if configured.
     */
    identity?: pulumi.Input<inputs.storagecache.v20210301.CacheIdentityArgs>;
    /**
     * Region name string.
     */
    location?: pulumi.Input<string>;
    /**
     * Specifies network settings of the cache.
     */
    networkSettings?: pulumi.Input<inputs.storagecache.v20210301.CacheNetworkSettingsArgs>;
    /**
     * ARM provisioning state, see https://github.com/Azure/azure-resource-manager-rpc/blob/master/v1.0/Addendum.md#provisioningstate-property
     */
    provisioningState?: pulumi.Input<string | enums.storagecache.v20210301.ProvisioningStateType>;
    /**
     * Target resource group.
     */
    resourceGroupName: pulumi.Input<string>;
    /**
     * Specifies security settings of the cache.
     */
    securitySettings?: pulumi.Input<inputs.storagecache.v20210301.CacheSecuritySettingsArgs>;
    /**
     * SKU for the Cache.
     */
    sku?: pulumi.Input<inputs.storagecache.v20210301.CacheSkuArgs>;
    /**
     * Subnet used for the Cache.
     */
    subnet?: pulumi.Input<string>;
    /**
     * Resource tags.
     */
    tags?: pulumi.Input<{
        [key: string]: pulumi.Input<string>;
    }>;
}
