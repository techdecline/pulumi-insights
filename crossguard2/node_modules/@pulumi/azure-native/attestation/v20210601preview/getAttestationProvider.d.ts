import * as pulumi from "@pulumi/pulumi";
import * as outputs from "../../types/output";
/**
 * Get the status of Attestation Provider.
 */
export declare function getAttestationProvider(args: GetAttestationProviderArgs, opts?: pulumi.InvokeOptions): Promise<GetAttestationProviderResult>;
export interface GetAttestationProviderArgs {
    /**
     * Name of the attestation provider.
     */
    providerName: string;
    /**
     * The name of the resource group. The name is case insensitive.
     */
    resourceGroupName: string;
}
/**
 * Attestation service response message.
 */
export interface GetAttestationProviderResult {
    /**
     * Gets the uri of attestation service
     */
    readonly attestUri?: string;
    /**
     * Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
     */
    readonly id: string;
    /**
     * The geo-location where the resource lives
     */
    readonly location: string;
    /**
     * The name of the resource
     */
    readonly name: string;
    /**
     * List of private endpoint connections associated with the attestation provider.
     */
    readonly privateEndpointConnections: outputs.attestation.v20210601preview.PrivateEndpointConnectionResponse[];
    /**
     * Controls whether traffic from the public network is allowed to access the Attestation Provider APIs.
     */
    readonly publicNetworkAccess?: string;
    /**
     * Status of attestation service.
     */
    readonly status?: string;
    /**
     * The system metadata relating to this resource
     */
    readonly systemData: outputs.attestation.v20210601preview.SystemDataResponse;
    /**
     * Resource tags.
     */
    readonly tags?: {
        [key: string]: string;
    };
    /**
     * Trust model for the attestation provider.
     */
    readonly trustModel?: string;
    /**
     * The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
     */
    readonly type: string;
}
/**
 * Get the status of Attestation Provider.
 */
export declare function getAttestationProviderOutput(args: GetAttestationProviderOutputArgs, opts?: pulumi.InvokeOutputOptions): pulumi.Output<GetAttestationProviderResult>;
export interface GetAttestationProviderOutputArgs {
    /**
     * Name of the attestation provider.
     */
    providerName: pulumi.Input<string>;
    /**
     * The name of the resource group. The name is case insensitive.
     */
    resourceGroupName: pulumi.Input<string>;
}
