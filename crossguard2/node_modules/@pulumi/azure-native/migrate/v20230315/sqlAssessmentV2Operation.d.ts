import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../../types/input";
import * as outputs from "../../types/output";
import * as enums from "../../types/enums";
/**
 * SQL Assessment REST resource.
 */
export declare class SqlAssessmentV2Operation extends pulumi.CustomResource {
    /**
     * Get an existing SqlAssessmentV2Operation resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    static get(name: string, id: pulumi.Input<pulumi.ID>, opts?: pulumi.CustomResourceOptions): SqlAssessmentV2Operation;
    /**
     * Returns true if the given object is an instance of SqlAssessmentV2Operation.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    static isInstance(obj: any): obj is SqlAssessmentV2Operation;
    /**
     * Assessment type of the assessment.
     */
    readonly assessmentType: pulumi.Output<string | undefined>;
    /**
     * Gets or sets user preference indicating intent of async commit mode.
     */
    readonly asyncCommitModeIntent: pulumi.Output<string | undefined>;
    /**
     * Azure Location or Azure region where to which the machines will be migrated.
     */
    readonly azureLocation: pulumi.Output<string | undefined>;
    /**
     * Azure Offer Code.
     */
    readonly azureOfferCode: pulumi.Output<string | undefined>;
    /**
     * Gets or sets Azure Offer Code for VM.
     */
    readonly azureOfferCodeForVm: pulumi.Output<string | undefined>;
    /**
     * Gets or sets a value indicating azure security offering type.
     */
    readonly azureSecurityOfferingType: pulumi.Output<string | undefined>;
    /**
     * Gets or sets user configurable SQL database settings.
     */
    readonly azureSqlDatabaseSettings: pulumi.Output<outputs.migrate.v20230315.SqlDbSettingsResponse | undefined>;
    /**
     * Gets or sets user configurable SQL managed instance settings.
     */
    readonly azureSqlManagedInstanceSettings: pulumi.Output<outputs.migrate.v20230315.SqlMiSettingsResponse | undefined>;
    /**
     * Gets or sets user configurable SQL VM settings.
     */
    readonly azureSqlVmSettings: pulumi.Output<outputs.migrate.v20230315.SqlVmSettingsResponse | undefined>;
    /**
     * Confidence Rating in Percentage.
     */
    readonly confidenceRatingInPercentage: pulumi.Output<number | undefined>;
    /**
     * Date and Time when assessment was created.
     */
    readonly createdTimestamp: pulumi.Output<string>;
    /**
     * Currency in which prices should be reported.
     */
    readonly currency: pulumi.Output<string | undefined>;
    /**
     * Gets or sets the Azure Location or Azure region where to which the machines
     * will be migrated.
     */
    readonly disasterRecoveryLocation: pulumi.Output<string | undefined>;
    /**
     * Custom discount percentage.
     */
    readonly discountPercentage: pulumi.Output<number | undefined>;
    /**
     * Gets or sets the Enterprise agreement subscription id.
     */
    readonly eaSubscriptionId: pulumi.Output<string | undefined>;
    /**
     * Gets or sets a value indicating whether HADR assessments needs to be created.
     */
    readonly enableHadrAssessment: pulumi.Output<boolean | undefined>;
    /**
     * Gets or sets the duration for which the entity (SQL, VMs) are up in the
     * on-premises environment.
     */
    readonly entityUptime: pulumi.Output<outputs.migrate.v20230315.EntityUptimeResponse | undefined>;
    /**
     * Gets or sets user configurable setting to display the environment type.
     */
    readonly environmentType: pulumi.Output<string | undefined>;
    /**
     * Gets the group type for the assessment.
     */
    readonly groupType: pulumi.Output<string | undefined>;
    /**
     * Gets or sets a value indicating whether internet access is available.
     */
    readonly isInternetAccessAvailable: pulumi.Output<boolean | undefined>;
    /**
     * Gets or sets user preference indicating intent of multi-subnet configuration.
     */
    readonly multiSubnetIntent: pulumi.Output<string | undefined>;
    /**
     * The name of the resource
     */
    readonly name: pulumi.Output<string>;
    /**
     * Gets or sets SQL optimization logic.
     */
    readonly optimizationLogic: pulumi.Output<string | undefined>;
    /**
     * Gets or sets user configurable setting to display the azure hybrid use benefit.
     */
    readonly osLicense: pulumi.Output<string | undefined>;
    /**
     * Percentile of the utilization data values to be considered while assessing
     * machines.
     */
    readonly percentile: pulumi.Output<string | undefined>;
    /**
     * Gets or sets the end time to consider performance data for assessment.
     */
    readonly perfDataEndTime: pulumi.Output<string | undefined>;
    /**
     * Gets or sets the start time to consider performance data for assessment.
     */
    readonly perfDataStartTime: pulumi.Output<string | undefined>;
    /**
     * Last time when rates were queried.
     */
    readonly pricesTimestamp: pulumi.Output<string>;
    /**
     * The status of the last operation.
     */
    readonly provisioningState: pulumi.Output<string | undefined>;
    /**
     * Reserved instance.
     */
    readonly reservedInstance: pulumi.Output<string | undefined>;
    /**
     * Gets or sets azure reserved instance for VM.
     */
    readonly reservedInstanceForVm: pulumi.Output<string | undefined>;
    /**
     * Percentage of buffer that user wants on performance metrics when recommending
     * Azure sizes.
     */
    readonly scalingFactor: pulumi.Output<number | undefined>;
    /**
     * Schema version.
     */
    readonly schemaVersion: pulumi.Output<string>;
    /**
     * Assessment sizing criterion.
     */
    readonly sizingCriterion: pulumi.Output<string | undefined>;
    /**
     * SQL server license.
     */
    readonly sqlServerLicense: pulumi.Output<string | undefined>;
    /**
     * User configurable setting to display the Stage of Assessment.
     */
    readonly stage: pulumi.Output<string>;
    /**
     * Whether assessment is in valid state and all machines have been assessed.
     */
    readonly status: pulumi.Output<string>;
    /**
     * Azure Resource Manager metadata containing createdBy and modifiedBy information.
     */
    readonly systemData: pulumi.Output<outputs.migrate.v20230315.SystemDataResponse>;
    /**
     * Time Range for which the historic utilization data should be considered for
     * assessment.
     */
    readonly timeRange: pulumi.Output<string | undefined>;
    /**
     * The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
     */
    readonly type: pulumi.Output<string>;
    /**
     * Date and Time when assessment was last updated.
     */
    readonly updatedTimestamp: pulumi.Output<string>;
    /**
     * Create a SqlAssessmentV2Operation resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: SqlAssessmentV2OperationArgs, opts?: pulumi.CustomResourceOptions);
}
/**
 * The set of arguments for constructing a SqlAssessmentV2Operation resource.
 */
export interface SqlAssessmentV2OperationArgs {
    /**
     * SQL Assessment arm name.
     */
    assessmentName?: pulumi.Input<string>;
    /**
     * Assessment type of the assessment.
     */
    assessmentType?: pulumi.Input<string | enums.migrate.v20230315.AssessmentType>;
    /**
     * Gets or sets user preference indicating intent of async commit mode.
     */
    asyncCommitModeIntent?: pulumi.Input<string | enums.migrate.v20230315.AsyncCommitModeIntent>;
    /**
     * Azure Location or Azure region where to which the machines will be migrated.
     */
    azureLocation?: pulumi.Input<string>;
    /**
     * Azure Offer Code.
     */
    azureOfferCode?: pulumi.Input<string | enums.migrate.v20230315.AzureOfferCode>;
    /**
     * Gets or sets Azure Offer Code for VM.
     */
    azureOfferCodeForVm?: pulumi.Input<string | enums.migrate.v20230315.AzureOfferCode>;
    /**
     * Gets or sets a value indicating azure security offering type.
     */
    azureSecurityOfferingType?: pulumi.Input<string | enums.migrate.v20230315.AzureSecurityOfferingType>;
    /**
     * Gets or sets user configurable SQL database settings.
     */
    azureSqlDatabaseSettings?: pulumi.Input<inputs.migrate.v20230315.SqlDbSettingsArgs>;
    /**
     * Gets or sets user configurable SQL managed instance settings.
     */
    azureSqlManagedInstanceSettings?: pulumi.Input<inputs.migrate.v20230315.SqlMiSettingsArgs>;
    /**
     * Gets or sets user configurable SQL VM settings.
     */
    azureSqlVmSettings?: pulumi.Input<inputs.migrate.v20230315.SqlVmSettingsArgs>;
    /**
     * Confidence Rating in Percentage.
     */
    confidenceRatingInPercentage?: pulumi.Input<number>;
    /**
     * Currency in which prices should be reported.
     */
    currency?: pulumi.Input<string | enums.migrate.v20230315.AzureCurrency>;
    /**
     * Gets or sets the Azure Location or Azure region where to which the machines
     * will be migrated.
     */
    disasterRecoveryLocation?: pulumi.Input<string | enums.migrate.v20230315.AzureLocation>;
    /**
     * Custom discount percentage.
     */
    discountPercentage?: pulumi.Input<number>;
    /**
     * Gets or sets the Enterprise agreement subscription id.
     */
    eaSubscriptionId?: pulumi.Input<string>;
    /**
     * Gets or sets a value indicating whether HADR assessments needs to be created.
     */
    enableHadrAssessment?: pulumi.Input<boolean>;
    /**
     * Gets or sets the duration for which the entity (SQL, VMs) are up in the
     * on-premises environment.
     */
    entityUptime?: pulumi.Input<inputs.migrate.v20230315.EntityUptimeArgs>;
    /**
     * Gets or sets user configurable setting to display the environment type.
     */
    environmentType?: pulumi.Input<string | enums.migrate.v20230315.EnvironmentType>;
    /**
     * Group ARM name
     */
    groupName: pulumi.Input<string>;
    /**
     * Gets the group type for the assessment.
     */
    groupType?: pulumi.Input<string | enums.migrate.v20230315.GroupType>;
    /**
     * Gets or sets a value indicating whether internet access is available.
     */
    isInternetAccessAvailable?: pulumi.Input<boolean>;
    /**
     * Gets or sets user preference indicating intent of multi-subnet configuration.
     */
    multiSubnetIntent?: pulumi.Input<string | enums.migrate.v20230315.MultiSubnetIntent>;
    /**
     * Gets or sets SQL optimization logic.
     */
    optimizationLogic?: pulumi.Input<string | enums.migrate.v20230315.OptimizationLogic>;
    /**
     * Gets or sets user configurable setting to display the azure hybrid use benefit.
     */
    osLicense?: pulumi.Input<string | enums.migrate.v20230315.OsLicense>;
    /**
     * Percentile of the utilization data values to be considered while assessing
     * machines.
     */
    percentile?: pulumi.Input<string | enums.migrate.v20230315.Percentile>;
    /**
     * Gets or sets the end time to consider performance data for assessment.
     */
    perfDataEndTime?: pulumi.Input<string>;
    /**
     * Gets or sets the start time to consider performance data for assessment.
     */
    perfDataStartTime?: pulumi.Input<string>;
    /**
     * Assessment Project Name
     */
    projectName: pulumi.Input<string>;
    /**
     * The status of the last operation.
     */
    provisioningState?: pulumi.Input<string | enums.migrate.v20230315.ProvisioningState>;
    /**
     * Reserved instance.
     */
    reservedInstance?: pulumi.Input<string | enums.migrate.v20230315.AzureReservedInstance>;
    /**
     * Gets or sets azure reserved instance for VM.
     */
    reservedInstanceForVm?: pulumi.Input<string | enums.migrate.v20230315.AzureReservedInstance>;
    /**
     * The name of the resource group. The name is case insensitive.
     */
    resourceGroupName: pulumi.Input<string>;
    /**
     * Percentage of buffer that user wants on performance metrics when recommending
     * Azure sizes.
     */
    scalingFactor?: pulumi.Input<number>;
    /**
     * Assessment sizing criterion.
     */
    sizingCriterion?: pulumi.Input<string | enums.migrate.v20230315.AssessmentSizingCriterion>;
    /**
     * SQL server license.
     */
    sqlServerLicense?: pulumi.Input<string | enums.migrate.v20230315.SqlServerLicense>;
    /**
     * Time Range for which the historic utilization data should be considered for
     * assessment.
     */
    timeRange?: pulumi.Input<string | enums.migrate.v20230315.TimeRange>;
}
