import * as pulumi from "@pulumi/pulumi";
import * as outputs from "../../types/output";
import * as enums from "../../types/enums";
/**
 * Group resource.
 */
export declare class GroupsOperation extends pulumi.CustomResource {
    /**
     * Get an existing GroupsOperation resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    static get(name: string, id: pulumi.Input<pulumi.ID>, opts?: pulumi.CustomResourceOptions): GroupsOperation;
    /**
     * Returns true if the given object is an instance of GroupsOperation.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    static isInstance(obj: any): obj is GroupsOperation;
    /**
     * If the assessments are in running state.
     */
    readonly areAssessmentsRunning: pulumi.Output<boolean>;
    /**
     * List of References to Assessments created on this group.
     */
    readonly assessments: pulumi.Output<string[]>;
    /**
     * Time when this group was created. Date-Time represented in ISO-8601 format.
     */
    readonly createdTimestamp: pulumi.Output<string>;
    /**
     * Whether the group has been created and is valid.
     */
    readonly groupStatus: pulumi.Output<string>;
    /**
     * The type of group.
     */
    readonly groupType: pulumi.Output<string | undefined>;
    /**
     * Number of machines part of this group.
     */
    readonly machineCount: pulumi.Output<number>;
    /**
     * The name of the resource
     */
    readonly name: pulumi.Output<string>;
    /**
     * The status of the last operation.
     */
    readonly provisioningState: pulumi.Output<string | undefined>;
    /**
     * List of assessment types supported on this group.
     */
    readonly supportedAssessmentTypes: pulumi.Output<string[] | undefined>;
    /**
     * Azure Resource Manager metadata containing createdBy and modifiedBy information.
     */
    readonly systemData: pulumi.Output<outputs.migrate.v20230315.SystemDataResponse>;
    /**
     * The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
     */
    readonly type: pulumi.Output<string>;
    /**
     * Time when this group was last updated. Date-Time represented in ISO-8601 format.
     */
    readonly updatedTimestamp: pulumi.Output<string>;
    /**
     * Create a GroupsOperation resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: GroupsOperationArgs, opts?: pulumi.CustomResourceOptions);
}
/**
 * The set of arguments for constructing a GroupsOperation resource.
 */
export interface GroupsOperationArgs {
    /**
     * Group ARM name
     */
    groupName?: pulumi.Input<string>;
    /**
     * The type of group.
     */
    groupType?: pulumi.Input<string | enums.migrate.v20230315.GroupType>;
    /**
     * Assessment Project Name
     */
    projectName: pulumi.Input<string>;
    /**
     * The status of the last operation.
     */
    provisioningState?: pulumi.Input<string | enums.migrate.v20230315.ProvisioningState>;
    /**
     * The name of the resource group. The name is case insensitive.
     */
    resourceGroupName: pulumi.Input<string>;
    /**
     * List of assessment types supported on this group.
     */
    supportedAssessmentTypes?: pulumi.Input<pulumi.Input<string | enums.migrate.v20230315.AssessmentType>[]>;
}
