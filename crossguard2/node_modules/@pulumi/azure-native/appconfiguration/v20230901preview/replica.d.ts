import * as pulumi from "@pulumi/pulumi";
import * as outputs from "../../types/output";
/**
 * The replica resource.
 */
export declare class Replica extends pulumi.CustomResource {
    /**
     * Get an existing Replica resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    static get(name: string, id: pulumi.Input<pulumi.ID>, opts?: pulumi.CustomResourceOptions): Replica;
    /**
     * Returns true if the given object is an instance of Replica.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    static isInstance(obj: any): obj is Replica;
    /**
     * The URI of the replica where the replica API will be available.
     */
    readonly endpoint: pulumi.Output<string>;
    /**
     * The location of the replica.
     */
    readonly location: pulumi.Output<string | undefined>;
    /**
     * The name of the replica.
     */
    readonly name: pulumi.Output<string>;
    /**
     * The provisioning state of the replica.
     */
    readonly provisioningState: pulumi.Output<string>;
    /**
     * Resource system metadata.
     */
    readonly systemData: pulumi.Output<outputs.appconfiguration.v20230901preview.SystemDataResponse>;
    /**
     * The type of the resource.
     */
    readonly type: pulumi.Output<string>;
    /**
     * Create a Replica resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: ReplicaArgs, opts?: pulumi.CustomResourceOptions);
}
/**
 * The set of arguments for constructing a Replica resource.
 */
export interface ReplicaArgs {
    /**
     * The name of the configuration store.
     */
    configStoreName: pulumi.Input<string>;
    /**
     * The location of the replica.
     */
    location?: pulumi.Input<string>;
    /**
     * The name of the replica.
     */
    replicaName?: pulumi.Input<string>;
    /**
     * The name of the resource group to which the container registry belongs.
     */
    resourceGroupName: pulumi.Input<string>;
}
