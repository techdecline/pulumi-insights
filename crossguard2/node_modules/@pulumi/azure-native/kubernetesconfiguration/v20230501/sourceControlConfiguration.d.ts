import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../../types/input";
import * as outputs from "../../types/output";
import * as enums from "../../types/enums";
/**
 * The SourceControl Configuration object returned in Get & Put response.
 */
export declare class SourceControlConfiguration extends pulumi.CustomResource {
    /**
     * Get an existing SourceControlConfiguration resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    static get(name: string, id: pulumi.Input<pulumi.ID>, opts?: pulumi.CustomResourceOptions): SourceControlConfiguration;
    /**
     * Returns true if the given object is an instance of SourceControlConfiguration.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    static isInstance(obj: any): obj is SourceControlConfiguration;
    /**
     * Compliance Status of the Configuration
     */
    readonly complianceStatus: pulumi.Output<outputs.kubernetesconfiguration.v20230501.ComplianceStatusResponse>;
    /**
     * Name-value pairs of protected configuration settings for the configuration
     */
    readonly configurationProtectedSettings: pulumi.Output<{
        [key: string]: string;
    } | undefined>;
    /**
     * Option to enable Helm Operator for this git configuration.
     */
    readonly enableHelmOperator: pulumi.Output<boolean | undefined>;
    /**
     * Properties for Helm operator.
     */
    readonly helmOperatorProperties: pulumi.Output<outputs.kubernetesconfiguration.v20230501.HelmOperatorPropertiesResponse | undefined>;
    /**
     * The name of the resource
     */
    readonly name: pulumi.Output<string>;
    /**
     * Instance name of the operator - identifying the specific configuration.
     */
    readonly operatorInstanceName: pulumi.Output<string | undefined>;
    /**
     * The namespace to which this operator is installed to. Maximum of 253 lower case alphanumeric characters, hyphen and period only.
     */
    readonly operatorNamespace: pulumi.Output<string | undefined>;
    /**
     * Any Parameters for the Operator instance in string format.
     */
    readonly operatorParams: pulumi.Output<string | undefined>;
    /**
     * Scope at which the operator will be installed.
     */
    readonly operatorScope: pulumi.Output<string | undefined>;
    /**
     * Type of the operator
     */
    readonly operatorType: pulumi.Output<string | undefined>;
    /**
     * The provisioning state of the resource provider.
     */
    readonly provisioningState: pulumi.Output<string>;
    /**
     * Public Key associated with this SourceControl configuration (either generated within the cluster or provided by the user).
     */
    readonly repositoryPublicKey: pulumi.Output<string>;
    /**
     * Url of the SourceControl Repository.
     */
    readonly repositoryUrl: pulumi.Output<string | undefined>;
    /**
     * Base64-encoded known_hosts contents containing public SSH keys required to access private Git instances
     */
    readonly sshKnownHostsContents: pulumi.Output<string | undefined>;
    /**
     * Top level metadata https://github.com/Azure/azure-resource-manager-rpc/blob/master/v1.0/common-api-contracts.md#system-metadata-for-all-azure-resources
     */
    readonly systemData: pulumi.Output<outputs.kubernetesconfiguration.v20230501.SystemDataResponse>;
    /**
     * The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
     */
    readonly type: pulumi.Output<string>;
    /**
     * Create a SourceControlConfiguration resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: SourceControlConfigurationArgs, opts?: pulumi.CustomResourceOptions);
}
/**
 * The set of arguments for constructing a SourceControlConfiguration resource.
 */
export interface SourceControlConfigurationArgs {
    /**
     * The name of the kubernetes cluster.
     */
    clusterName: pulumi.Input<string>;
    /**
     * The Kubernetes cluster resource name - i.e. managedClusters, connectedClusters, provisionedClusters.
     */
    clusterResourceName: pulumi.Input<string>;
    /**
     * The Kubernetes cluster RP - i.e. Microsoft.ContainerService, Microsoft.Kubernetes, Microsoft.HybridContainerService.
     */
    clusterRp: pulumi.Input<string>;
    /**
     * Name-value pairs of protected configuration settings for the configuration
     */
    configurationProtectedSettings?: pulumi.Input<{
        [key: string]: pulumi.Input<string>;
    }>;
    /**
     * Option to enable Helm Operator for this git configuration.
     */
    enableHelmOperator?: pulumi.Input<boolean>;
    /**
     * Properties for Helm operator.
     */
    helmOperatorProperties?: pulumi.Input<inputs.kubernetesconfiguration.v20230501.HelmOperatorPropertiesArgs>;
    /**
     * Instance name of the operator - identifying the specific configuration.
     */
    operatorInstanceName?: pulumi.Input<string>;
    /**
     * The namespace to which this operator is installed to. Maximum of 253 lower case alphanumeric characters, hyphen and period only.
     */
    operatorNamespace?: pulumi.Input<string>;
    /**
     * Any Parameters for the Operator instance in string format.
     */
    operatorParams?: pulumi.Input<string>;
    /**
     * Scope at which the operator will be installed.
     */
    operatorScope?: pulumi.Input<string | enums.kubernetesconfiguration.v20230501.OperatorScopeType>;
    /**
     * Type of the operator
     */
    operatorType?: pulumi.Input<string | enums.kubernetesconfiguration.v20230501.OperatorType>;
    /**
     * Url of the SourceControl Repository.
     */
    repositoryUrl?: pulumi.Input<string>;
    /**
     * The name of the resource group. The name is case insensitive.
     */
    resourceGroupName: pulumi.Input<string>;
    /**
     * Name of the Source Control Configuration.
     */
    sourceControlConfigurationName?: pulumi.Input<string>;
    /**
     * Base64-encoded known_hosts contents containing public SSH keys required to access private Git instances
     */
    sshKnownHostsContents?: pulumi.Input<string>;
}
