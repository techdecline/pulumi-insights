import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../../types/input";
import * as outputs from "../../types/output";
import * as enums from "../../types/enums";
/**
 * The Flux Configuration object returned in Get & Put response.
 */
export declare class FluxConfiguration extends pulumi.CustomResource {
    /**
     * Get an existing FluxConfiguration resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    static get(name: string, id: pulumi.Input<pulumi.ID>, opts?: pulumi.CustomResourceOptions): FluxConfiguration;
    /**
     * Returns true if the given object is an instance of FluxConfiguration.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    static isInstance(obj: any): obj is FluxConfiguration;
    /**
     * Parameters to reconcile to the Bucket source kind type.
     */
    readonly bucket: pulumi.Output<outputs.kubernetesconfiguration.v20220101preview.BucketDefinitionResponse | undefined>;
    /**
     * Combined status of the Flux Kubernetes resources created by the fluxConfiguration or created by the managed objects.
     */
    readonly complianceState: pulumi.Output<string>;
    /**
     * Key-value pairs of protected configuration settings for the configuration
     */
    readonly configurationProtectedSettings: pulumi.Output<{
        [key: string]: string;
    } | undefined>;
    /**
     * Error message returned to the user in the case of provisioning failure.
     */
    readonly errorMessage: pulumi.Output<string>;
    /**
     * Parameters to reconcile to the GitRepository source kind type.
     */
    readonly gitRepository: pulumi.Output<outputs.kubernetesconfiguration.v20220101preview.GitRepositoryDefinitionResponse | undefined>;
    /**
     * Array of kustomizations used to reconcile the artifact pulled by the source type on the cluster.
     */
    readonly kustomizations: pulumi.Output<{
        [key: string]: outputs.kubernetesconfiguration.v20220101preview.KustomizationDefinitionResponse;
    } | undefined>;
    /**
     * Datetime the fluxConfiguration last synced its source on the cluster.
     */
    readonly lastSourceUpdatedAt: pulumi.Output<string>;
    /**
     * Branch and SHA of the last source commit synced with the cluster.
     */
    readonly lastSourceUpdatedCommitId: pulumi.Output<string>;
    /**
     * The name of the resource
     */
    readonly name: pulumi.Output<string>;
    /**
     * The namespace to which this configuration is installed to. Maximum of 253 lower case alphanumeric characters, hyphen and period only.
     */
    readonly namespace: pulumi.Output<string | undefined>;
    /**
     * Status of the creation of the fluxConfiguration.
     */
    readonly provisioningState: pulumi.Output<string>;
    /**
     * Public Key associated with this fluxConfiguration (either generated within the cluster or provided by the user).
     */
    readonly repositoryPublicKey: pulumi.Output<string>;
    /**
     * Scope at which the operator will be installed.
     */
    readonly scope: pulumi.Output<string | undefined>;
    /**
     * Source Kind to pull the configuration data from.
     */
    readonly sourceKind: pulumi.Output<string | undefined>;
    /**
     * Statuses of the Flux Kubernetes resources created by the fluxConfiguration or created by the managed objects provisioned by the fluxConfiguration.
     */
    readonly statuses: pulumi.Output<outputs.kubernetesconfiguration.v20220101preview.ObjectStatusDefinitionResponse[]>;
    /**
     * Whether this configuration should suspend its reconciliation of its kustomizations and sources.
     */
    readonly suspend: pulumi.Output<boolean | undefined>;
    /**
     * Top level metadata https://github.com/Azure/azure-resource-manager-rpc/blob/master/v1.0/common-api-contracts.md#system-metadata-for-all-azure-resources
     */
    readonly systemData: pulumi.Output<outputs.kubernetesconfiguration.v20220101preview.SystemDataResponse>;
    /**
     * The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
     */
    readonly type: pulumi.Output<string>;
    /**
     * Create a FluxConfiguration resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: FluxConfigurationArgs, opts?: pulumi.CustomResourceOptions);
}
/**
 * The set of arguments for constructing a FluxConfiguration resource.
 */
export interface FluxConfigurationArgs {
    /**
     * Parameters to reconcile to the Bucket source kind type.
     */
    bucket?: pulumi.Input<inputs.kubernetesconfiguration.v20220101preview.BucketDefinitionArgs>;
    /**
     * The name of the kubernetes cluster.
     */
    clusterName: pulumi.Input<string>;
    /**
     * The Kubernetes cluster resource name - either managedClusters (for AKS clusters) or connectedClusters (for OnPrem K8S clusters).
     */
    clusterResourceName: pulumi.Input<string>;
    /**
     * The Kubernetes cluster RP - either Microsoft.ContainerService (for AKS clusters) or Microsoft.Kubernetes (for OnPrem K8S clusters).
     */
    clusterRp: pulumi.Input<string>;
    /**
     * Key-value pairs of protected configuration settings for the configuration
     */
    configurationProtectedSettings?: pulumi.Input<{
        [key: string]: pulumi.Input<string>;
    }>;
    /**
     * Name of the Flux Configuration.
     */
    fluxConfigurationName?: pulumi.Input<string>;
    /**
     * Parameters to reconcile to the GitRepository source kind type.
     */
    gitRepository?: pulumi.Input<inputs.kubernetesconfiguration.v20220101preview.GitRepositoryDefinitionArgs>;
    /**
     * Array of kustomizations used to reconcile the artifact pulled by the source type on the cluster.
     */
    kustomizations?: pulumi.Input<{
        [key: string]: pulumi.Input<inputs.kubernetesconfiguration.v20220101preview.KustomizationDefinitionArgs>;
    }>;
    /**
     * The namespace to which this configuration is installed to. Maximum of 253 lower case alphanumeric characters, hyphen and period only.
     */
    namespace?: pulumi.Input<string>;
    /**
     * The name of the resource group. The name is case insensitive.
     */
    resourceGroupName: pulumi.Input<string>;
    /**
     * Scope at which the operator will be installed.
     */
    scope?: pulumi.Input<string | enums.kubernetesconfiguration.v20220101preview.ScopeType>;
    /**
     * Source Kind to pull the configuration data from.
     */
    sourceKind?: pulumi.Input<string | enums.kubernetesconfiguration.v20220101preview.SourceKindType>;
    /**
     * Whether this configuration should suspend its reconciliation of its kustomizations and sources.
     */
    suspend?: pulumi.Input<boolean>;
}
