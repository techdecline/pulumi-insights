import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../../types/input";
import * as outputs from "../../types/output";
/**
 * The Extension Instance object.
 */
export declare class Extension extends pulumi.CustomResource {
    /**
     * Get an existing Extension resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    static get(name: string, id: pulumi.Input<pulumi.ID>, opts?: pulumi.CustomResourceOptions): Extension;
    /**
     * Returns true if the given object is an instance of Extension.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    static isInstance(obj: any): obj is Extension;
    /**
     * Flag to note if this instance participates in auto upgrade of minor version, or not.
     */
    readonly autoUpgradeMinorVersion: pulumi.Output<boolean | undefined>;
    /**
     * Configuration settings that are sensitive, as name-value pairs for configuring this instance of the extension.
     */
    readonly configurationProtectedSettings: pulumi.Output<{
        [key: string]: string;
    } | undefined>;
    /**
     * Configuration settings, as name-value pairs for configuring this instance of the extension.
     */
    readonly configurationSettings: pulumi.Output<{
        [key: string]: string;
    } | undefined>;
    /**
     * DateLiteral (per ISO8601) noting the time the resource was created by the client (user).
     */
    readonly creationTime: pulumi.Output<string>;
    /**
     * Error information from the Agent - e.g. errors during installation.
     */
    readonly errorInfo: pulumi.Output<outputs.kubernetesconfiguration.v20200701preview.ErrorDefinitionResponse>;
    /**
     * Type of the Extension, of which this resource is an instance of.  It must be one of the Extension Types registered with Microsoft.KubernetesConfiguration by the Extension publisher.
     */
    readonly extensionType: pulumi.Output<string | undefined>;
    /**
     * The identity of the configuration.
     */
    readonly identity: pulumi.Output<outputs.kubernetesconfiguration.v20200701preview.ConfigurationIdentityResponse | undefined>;
    /**
     * Status of installation of this instance of the extension.
     */
    readonly installState: pulumi.Output<string>;
    /**
     * DateLiteral (per ISO8601) noting the time the resource was modified by the client (user).
     */
    readonly lastModifiedTime: pulumi.Output<string>;
    /**
     * DateLiteral (per ISO8601) noting the time of last status from the agent.
     */
    readonly lastStatusTime: pulumi.Output<string>;
    /**
     * Resource name
     */
    readonly name: pulumi.Output<string>;
    /**
     * ReleaseTrain this extension instance participates in for auto-upgrade (e.g. Stable, Preview, etc.) - only if autoUpgradeMinorVersion is 'true'.
     */
    readonly releaseTrain: pulumi.Output<string | undefined>;
    /**
     * Scope at which the extension instance is installed.
     */
    readonly scope: pulumi.Output<outputs.kubernetesconfiguration.v20200701preview.ScopeResponse | undefined>;
    /**
     * Status from this instance of the extension.
     */
    readonly statuses: pulumi.Output<outputs.kubernetesconfiguration.v20200701preview.ExtensionStatusResponse[] | undefined>;
    /**
     * Top level metadata https://github.com/Azure/azure-resource-manager-rpc/blob/master/v1.0/common-api-contracts.md#system-metadata-for-all-azure-resources
     */
    readonly systemData: pulumi.Output<outputs.kubernetesconfiguration.v20200701preview.SystemDataResponse | undefined>;
    /**
     * Resource type
     */
    readonly type: pulumi.Output<string>;
    /**
     * Version of the extension for this extension instance, if it is 'pinned' to a specific version. autoUpgradeMinorVersion must be 'false'.
     */
    readonly version: pulumi.Output<string | undefined>;
    /**
     * Create a Extension resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: ExtensionArgs, opts?: pulumi.CustomResourceOptions);
}
/**
 * The set of arguments for constructing a Extension resource.
 */
export interface ExtensionArgs {
    /**
     * Flag to note if this instance participates in auto upgrade of minor version, or not.
     */
    autoUpgradeMinorVersion?: pulumi.Input<boolean>;
    /**
     * The name of the kubernetes cluster.
     */
    clusterName: pulumi.Input<string>;
    /**
     * The Kubernetes cluster resource name - either managedClusters (for AKS clusters) or connectedClusters (for OnPrem K8S clusters).
     */
    clusterResourceName: pulumi.Input<string>;
    /**
     * The Kubernetes cluster RP - either Microsoft.ContainerService (for AKS clusters) or Microsoft.Kubernetes (for OnPrem K8S clusters).
     */
    clusterRp: pulumi.Input<string>;
    /**
     * Configuration settings that are sensitive, as name-value pairs for configuring this instance of the extension.
     */
    configurationProtectedSettings?: pulumi.Input<{
        [key: string]: pulumi.Input<string>;
    }>;
    /**
     * Configuration settings, as name-value pairs for configuring this instance of the extension.
     */
    configurationSettings?: pulumi.Input<{
        [key: string]: pulumi.Input<string>;
    }>;
    /**
     * Name of an instance of the Extension.
     */
    extensionInstanceName?: pulumi.Input<string>;
    /**
     * Type of the Extension, of which this resource is an instance of.  It must be one of the Extension Types registered with Microsoft.KubernetesConfiguration by the Extension publisher.
     */
    extensionType?: pulumi.Input<string>;
    /**
     * The identity of the configuration.
     */
    identity?: pulumi.Input<inputs.kubernetesconfiguration.v20200701preview.ConfigurationIdentityArgs>;
    /**
     * ReleaseTrain this extension instance participates in for auto-upgrade (e.g. Stable, Preview, etc.) - only if autoUpgradeMinorVersion is 'true'.
     */
    releaseTrain?: pulumi.Input<string>;
    /**
     * The name of the resource group.
     */
    resourceGroupName: pulumi.Input<string>;
    /**
     * Scope at which the extension instance is installed.
     */
    scope?: pulumi.Input<inputs.kubernetesconfiguration.v20200701preview.ScopeArgs>;
    /**
     * Status from this instance of the extension.
     */
    statuses?: pulumi.Input<pulumi.Input<inputs.kubernetesconfiguration.v20200701preview.ExtensionStatusArgs>[]>;
    /**
     * Version of the extension for this extension instance, if it is 'pinned' to a specific version. autoUpgradeMinorVersion must be 'false'.
     */
    version?: pulumi.Input<string>;
}
