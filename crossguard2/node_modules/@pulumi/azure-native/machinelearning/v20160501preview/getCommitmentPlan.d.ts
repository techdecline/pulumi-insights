import * as pulumi from "@pulumi/pulumi";
import * as outputs from "../../types/output";
/**
 * Retrieve an Azure ML commitment plan by its subscription, resource group and name.
 */
export declare function getCommitmentPlan(args: GetCommitmentPlanArgs, opts?: pulumi.InvokeOptions): Promise<GetCommitmentPlanResult>;
export interface GetCommitmentPlanArgs {
    /**
     * The Azure ML commitment plan name.
     */
    commitmentPlanName: string;
    /**
     * The resource group name.
     */
    resourceGroupName: string;
}
/**
 * An Azure ML commitment plan resource.
 */
export interface GetCommitmentPlanResult {
    /**
     * An entity tag used to enforce optimistic concurrency.
     */
    readonly etag?: string;
    /**
     * Resource Id.
     */
    readonly id: string;
    /**
     * Resource location.
     */
    readonly location: string;
    /**
     * Resource name.
     */
    readonly name: string;
    /**
     * The commitment plan properties.
     */
    readonly properties: outputs.machinelearning.v20160501preview.CommitmentPlanPropertiesResponse;
    /**
     * The commitment plan SKU.
     */
    readonly sku?: outputs.machinelearning.v20160501preview.ResourceSkuResponse;
    /**
     * User-defined tags for the resource.
     */
    readonly tags?: {
        [key: string]: string;
    };
    /**
     * Resource type.
     */
    readonly type: string;
}
/**
 * Retrieve an Azure ML commitment plan by its subscription, resource group and name.
 */
export declare function getCommitmentPlanOutput(args: GetCommitmentPlanOutputArgs, opts?: pulumi.InvokeOutputOptions): pulumi.Output<GetCommitmentPlanResult>;
export interface GetCommitmentPlanOutputArgs {
    /**
     * The Azure ML commitment plan name.
     */
    commitmentPlanName: pulumi.Input<string>;
    /**
     * The resource group name.
     */
    resourceGroupName: pulumi.Input<string>;
}
