import * as pulumi from "@pulumi/pulumi";
import * as outputs from "../../types/output";
/**
 * The Agent resource.
 */
export declare class Agent extends pulumi.CustomResource {
    /**
     * Get an existing Agent resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    static get(name: string, id: pulumi.Input<pulumi.ID>, opts?: pulumi.CustomResourceOptions): Agent;
    /**
     * Returns true if the given object is an instance of Agent.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    static isInstance(obj: any): obj is Agent;
    /**
     * The Agent status.
     */
    readonly agentStatus: pulumi.Output<string>;
    /**
     * The Agent version.
     */
    readonly agentVersion: pulumi.Output<string>;
    /**
     * The fully qualified resource ID of the Hybrid Compute resource for the Agent.
     */
    readonly arcResourceId: pulumi.Output<string>;
    /**
     * The VM UUID of the Hybrid Compute resource for the Agent.
     */
    readonly arcVmUuid: pulumi.Output<string>;
    /**
     * A description for the Agent.
     */
    readonly description: pulumi.Output<string | undefined>;
    readonly errorDetails: pulumi.Output<outputs.storagemover.v20231001.AgentPropertiesResponseErrorDetails>;
    /**
     * The last updated time of the Agent status.
     */
    readonly lastStatusUpdate: pulumi.Output<string>;
    /**
     * Local IP address reported by the Agent.
     */
    readonly localIPAddress: pulumi.Output<string>;
    /**
     * Available memory reported by the Agent, in MB.
     */
    readonly memoryInMB: pulumi.Output<number>;
    /**
     * The name of the resource
     */
    readonly name: pulumi.Output<string>;
    /**
     * Available compute cores reported by the Agent.
     */
    readonly numberOfCores: pulumi.Output<number>;
    /**
     * The provisioning state of this resource.
     */
    readonly provisioningState: pulumi.Output<string>;
    /**
     * Azure Resource Manager metadata containing createdBy and modifiedBy information.
     */
    readonly systemData: pulumi.Output<outputs.storagemover.v20231001.SystemDataResponse>;
    /**
     * The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
     */
    readonly type: pulumi.Output<string>;
    /**
     * Uptime of the Agent in seconds.
     */
    readonly uptimeInSeconds: pulumi.Output<number>;
    /**
     * Create a Agent resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: AgentArgs, opts?: pulumi.CustomResourceOptions);
}
/**
 * The set of arguments for constructing a Agent resource.
 */
export interface AgentArgs {
    /**
     * The name of the Agent resource.
     */
    agentName?: pulumi.Input<string>;
    /**
     * The fully qualified resource ID of the Hybrid Compute resource for the Agent.
     */
    arcResourceId: pulumi.Input<string>;
    /**
     * The VM UUID of the Hybrid Compute resource for the Agent.
     */
    arcVmUuid: pulumi.Input<string>;
    /**
     * A description for the Agent.
     */
    description?: pulumi.Input<string>;
    /**
     * The name of the resource group. The name is case insensitive.
     */
    resourceGroupName: pulumi.Input<string>;
    /**
     * The name of the Storage Mover resource.
     */
    storageMoverName: pulumi.Input<string>;
}
