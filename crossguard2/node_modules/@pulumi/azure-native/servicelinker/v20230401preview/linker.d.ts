import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../../types/input";
import * as outputs from "../../types/output";
import * as enums from "../../types/enums";
/**
 * Linker of source and target resource
 */
export declare class Linker extends pulumi.CustomResource {
    /**
     * Get an existing Linker resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    static get(name: string, id: pulumi.Input<pulumi.ID>, opts?: pulumi.CustomResourceOptions): Linker;
    /**
     * Returns true if the given object is an instance of Linker.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    static isInstance(obj: any): obj is Linker;
    /**
     * The authentication type.
     */
    readonly authInfo: pulumi.Output<outputs.servicelinker.v20230401preview.AccessKeyInfoBaseResponse | outputs.servicelinker.v20230401preview.EasyAuthMicrosoftEntraIDAuthInfoResponse | outputs.servicelinker.v20230401preview.SecretAuthInfoResponse | outputs.servicelinker.v20230401preview.ServicePrincipalCertificateAuthInfoResponse | outputs.servicelinker.v20230401preview.ServicePrincipalSecretAuthInfoResponse | outputs.servicelinker.v20230401preview.SystemAssignedIdentityAuthInfoResponse | outputs.servicelinker.v20230401preview.UserAccountAuthInfoResponse | outputs.servicelinker.v20230401preview.UserAssignedIdentityAuthInfoResponse | undefined>;
    /**
     * The application client type
     */
    readonly clientType: pulumi.Output<string | undefined>;
    /**
     * The connection information consumed by applications, including secrets, connection strings.
     */
    readonly configurationInfo: pulumi.Output<outputs.servicelinker.v20230401preview.ConfigurationInfoResponse | undefined>;
    /**
     * The name of the resource
     */
    readonly name: pulumi.Output<string>;
    /**
     * The provisioning state.
     */
    readonly provisioningState: pulumi.Output<string>;
    /**
     * The network solution.
     */
    readonly publicNetworkSolution: pulumi.Output<outputs.servicelinker.v20230401preview.PublicNetworkSolutionResponse | undefined>;
    /**
     * connection scope in source service.
     */
    readonly scope: pulumi.Output<string | undefined>;
    /**
     * An option to store secret value in secure place
     */
    readonly secretStore: pulumi.Output<outputs.servicelinker.v20230401preview.SecretStoreResponse | undefined>;
    /**
     * Azure Resource Manager metadata containing createdBy and modifiedBy information.
     */
    readonly systemData: pulumi.Output<outputs.servicelinker.v20230401preview.SystemDataResponse>;
    /**
     * The target service properties
     */
    readonly targetService: pulumi.Output<outputs.servicelinker.v20230401preview.AzureResourceResponse | outputs.servicelinker.v20230401preview.ConfluentBootstrapServerResponse | outputs.servicelinker.v20230401preview.ConfluentSchemaRegistryResponse | outputs.servicelinker.v20230401preview.SelfHostedServerResponse | undefined>;
    /**
     * The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
     */
    readonly type: pulumi.Output<string>;
    /**
     * The VNet solution.
     */
    readonly vNetSolution: pulumi.Output<outputs.servicelinker.v20230401preview.VNetSolutionResponse | undefined>;
    /**
     * Create a Linker resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: LinkerArgs, opts?: pulumi.CustomResourceOptions);
}
/**
 * The set of arguments for constructing a Linker resource.
 */
export interface LinkerArgs {
    /**
     * The authentication type.
     */
    authInfo?: pulumi.Input<inputs.servicelinker.v20230401preview.AccessKeyInfoBaseArgs | inputs.servicelinker.v20230401preview.EasyAuthMicrosoftEntraIDAuthInfoArgs | inputs.servicelinker.v20230401preview.SecretAuthInfoArgs | inputs.servicelinker.v20230401preview.ServicePrincipalCertificateAuthInfoArgs | inputs.servicelinker.v20230401preview.ServicePrincipalSecretAuthInfoArgs | inputs.servicelinker.v20230401preview.SystemAssignedIdentityAuthInfoArgs | inputs.servicelinker.v20230401preview.UserAccountAuthInfoArgs | inputs.servicelinker.v20230401preview.UserAssignedIdentityAuthInfoArgs>;
    /**
     * The application client type
     */
    clientType?: pulumi.Input<string | enums.servicelinker.v20230401preview.ClientType>;
    /**
     * The connection information consumed by applications, including secrets, connection strings.
     */
    configurationInfo?: pulumi.Input<inputs.servicelinker.v20230401preview.ConfigurationInfoArgs>;
    /**
     * The name Linker resource.
     */
    linkerName?: pulumi.Input<string>;
    /**
     * The network solution.
     */
    publicNetworkSolution?: pulumi.Input<inputs.servicelinker.v20230401preview.PublicNetworkSolutionArgs>;
    /**
     * The fully qualified Azure Resource manager identifier of the resource to be connected.
     */
    resourceUri: pulumi.Input<string>;
    /**
     * connection scope in source service.
     */
    scope?: pulumi.Input<string>;
    /**
     * An option to store secret value in secure place
     */
    secretStore?: pulumi.Input<inputs.servicelinker.v20230401preview.SecretStoreArgs>;
    /**
     * The target service properties
     */
    targetService?: pulumi.Input<inputs.servicelinker.v20230401preview.AzureResourceArgs | inputs.servicelinker.v20230401preview.ConfluentBootstrapServerArgs | inputs.servicelinker.v20230401preview.ConfluentSchemaRegistryArgs | inputs.servicelinker.v20230401preview.SelfHostedServerArgs>;
    /**
     * The VNet solution.
     */
    vNetSolution?: pulumi.Input<inputs.servicelinker.v20230401preview.VNetSolutionArgs>;
}
