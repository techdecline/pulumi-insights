import * as pulumi from "@pulumi/pulumi";
import * as outputs from "../../types/output";
/**
 * Get the details of a Streaming Policy in the Media Services account
 */
export declare function getStreamingPolicy(args: GetStreamingPolicyArgs, opts?: pulumi.InvokeOptions): Promise<GetStreamingPolicyResult>;
export interface GetStreamingPolicyArgs {
    /**
     * The Media Services account name.
     */
    accountName: string;
    /**
     * The name of the resource group within the Azure subscription.
     */
    resourceGroupName: string;
    /**
     * The Streaming Policy name.
     */
    streamingPolicyName: string;
}
/**
 * A Streaming Policy resource
 */
export interface GetStreamingPolicyResult {
    /**
     * Configuration of CommonEncryptionCbcs
     */
    readonly commonEncryptionCbcs?: outputs.media.v20230101.CommonEncryptionCbcsResponse;
    /**
     * Configuration of CommonEncryptionCenc
     */
    readonly commonEncryptionCenc?: outputs.media.v20230101.CommonEncryptionCencResponse;
    /**
     * Creation time of Streaming Policy
     */
    readonly created: string;
    /**
     * Default ContentKey used by current Streaming Policy
     */
    readonly defaultContentKeyPolicyName?: string;
    /**
     * Configuration of EnvelopeEncryption
     */
    readonly envelopeEncryption?: outputs.media.v20230101.EnvelopeEncryptionResponse;
    /**
     * Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
     */
    readonly id: string;
    /**
     * The name of the resource
     */
    readonly name: string;
    /**
     * Configurations of NoEncryption
     */
    readonly noEncryption?: outputs.media.v20230101.NoEncryptionResponse;
    /**
     * The system metadata relating to this resource.
     */
    readonly systemData: outputs.media.v20230101.SystemDataResponse;
    /**
     * The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
     */
    readonly type: string;
}
/**
 * Get the details of a Streaming Policy in the Media Services account
 */
export declare function getStreamingPolicyOutput(args: GetStreamingPolicyOutputArgs, opts?: pulumi.InvokeOutputOptions): pulumi.Output<GetStreamingPolicyResult>;
export interface GetStreamingPolicyOutputArgs {
    /**
     * The Media Services account name.
     */
    accountName: pulumi.Input<string>;
    /**
     * The name of the resource group within the Azure subscription.
     */
    resourceGroupName: pulumi.Input<string>;
    /**
     * The Streaming Policy name.
     */
    streamingPolicyName: pulumi.Input<string>;
}
