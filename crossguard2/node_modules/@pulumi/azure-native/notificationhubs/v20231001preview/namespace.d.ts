import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../../types/input";
import * as outputs from "../../types/output";
import * as enums from "../../types/enums";
/**
 * Notification Hubs Namespace Resource.
 */
export declare class Namespace extends pulumi.CustomResource {
    /**
     * Get an existing Namespace resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    static get(name: string, id: pulumi.Input<pulumi.ID>, opts?: pulumi.CustomResourceOptions): Namespace;
    /**
     * Returns true if the given object is an instance of Namespace.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    static isInstance(obj: any): obj is Namespace;
    /**
     * Time when the namespace was created.
     */
    readonly createdAt: pulumi.Output<string>;
    /**
     * Gets or sets whether or not the namespace is set as Critical.
     */
    readonly critical: pulumi.Output<boolean>;
    /**
     * Deprecated.
     */
    readonly dataCenter: pulumi.Output<string | undefined>;
    /**
     * Gets or sets whether or not the namespace is currently enabled.
     */
    readonly enabled: pulumi.Output<boolean>;
    /**
     * The geo-location where the resource lives
     */
    readonly location: pulumi.Output<string>;
    /**
     * Azure Insights Metrics id.
     */
    readonly metricId: pulumi.Output<string>;
    /**
     * The name of the resource
     */
    readonly name: pulumi.Output<string>;
    /**
     * Defines values for NamespaceType.
     */
    readonly namespaceType: pulumi.Output<string | undefined>;
    /**
     * A collection of network authorization rules.
     */
    readonly networkAcls: pulumi.Output<outputs.notificationhubs.v20231001preview.NetworkAclsResponse | undefined>;
    /**
     * Collection of Notification Hub or Notification Hub Namespace PNS credentials.
     */
    readonly pnsCredentials: pulumi.Output<outputs.notificationhubs.v20231001preview.PnsCredentialsResponse | undefined>;
    /**
     * Private Endpoint Connections for namespace
     */
    readonly privateEndpointConnections: pulumi.Output<outputs.notificationhubs.v20231001preview.PrivateEndpointConnectionResourceResponse[]>;
    /**
     * Defines values for OperationProvisioningState.
     */
    readonly provisioningState: pulumi.Output<string | undefined>;
    /**
     * Type of public network access.
     */
    readonly publicNetworkAccess: pulumi.Output<string | undefined>;
    /**
     * Region. The value is always set to the same value as Namespace.Location, so we are deprecating
     * this property.
     */
    readonly region: pulumi.Output<string>;
    /**
     * Allowed replication region
     */
    readonly replicationRegion: pulumi.Output<string | undefined>;
    /**
     * Gets or sets scaleUnit where the namespace gets created
     */
    readonly scaleUnit: pulumi.Output<string | undefined>;
    /**
     * Gets or sets endpoint you can use to perform NotificationHub
     * operations.
     */
    readonly serviceBusEndpoint: pulumi.Output<string>;
    /**
     * The Sku description for a namespace
     */
    readonly sku: pulumi.Output<outputs.notificationhubs.v20231001preview.SkuResponse>;
    /**
     * Namespace status.
     */
    readonly status: pulumi.Output<string | undefined>;
    /**
     * Namespace subscription id.
     */
    readonly subscriptionId: pulumi.Output<string>;
    /**
     * Azure Resource Manager metadata containing createdBy and modifiedBy information.
     */
    readonly systemData: pulumi.Output<outputs.notificationhubs.v20231001preview.SystemDataResponse>;
    /**
     * Resource tags.
     */
    readonly tags: pulumi.Output<{
        [key: string]: string;
    } | undefined>;
    /**
     * The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
     */
    readonly type: pulumi.Output<string>;
    /**
     * Time when the namespace was updated.
     */
    readonly updatedAt: pulumi.Output<string>;
    /**
     * Namespace SKU name.
     */
    readonly zoneRedundancy: pulumi.Output<string | undefined>;
    /**
     * Create a Namespace resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: NamespaceArgs, opts?: pulumi.CustomResourceOptions);
}
/**
 * The set of arguments for constructing a Namespace resource.
 */
export interface NamespaceArgs {
    /**
     * Deprecated.
     */
    dataCenter?: pulumi.Input<string>;
    /**
     * The geo-location where the resource lives
     */
    location?: pulumi.Input<string>;
    /**
     * Namespace name
     */
    namespaceName?: pulumi.Input<string>;
    /**
     * Defines values for NamespaceType.
     */
    namespaceType?: pulumi.Input<string | enums.notificationhubs.v20231001preview.NamespaceType>;
    /**
     * A collection of network authorization rules.
     */
    networkAcls?: pulumi.Input<inputs.notificationhubs.v20231001preview.NetworkAclsArgs>;
    /**
     * Collection of Notification Hub or Notification Hub Namespace PNS credentials.
     */
    pnsCredentials?: pulumi.Input<inputs.notificationhubs.v20231001preview.PnsCredentialsArgs>;
    /**
     * Defines values for OperationProvisioningState.
     */
    provisioningState?: pulumi.Input<string | enums.notificationhubs.v20231001preview.OperationProvisioningState>;
    /**
     * Type of public network access.
     */
    publicNetworkAccess?: pulumi.Input<string | enums.notificationhubs.v20231001preview.PublicNetworkAccess>;
    /**
     * Allowed replication region
     */
    replicationRegion?: pulumi.Input<string | enums.notificationhubs.v20231001preview.ReplicationRegion>;
    /**
     * The name of the resource group. The name is case insensitive.
     */
    resourceGroupName: pulumi.Input<string>;
    /**
     * Gets or sets scaleUnit where the namespace gets created
     */
    scaleUnit?: pulumi.Input<string>;
    /**
     * The Sku description for a namespace
     */
    sku: pulumi.Input<inputs.notificationhubs.v20231001preview.SkuArgs>;
    /**
     * Namespace status.
     */
    status?: pulumi.Input<string | enums.notificationhubs.v20231001preview.NamespaceStatus>;
    /**
     * Resource tags.
     */
    tags?: pulumi.Input<{
        [key: string]: pulumi.Input<string>;
    }>;
    /**
     * Namespace SKU name.
     */
    zoneRedundancy?: pulumi.Input<string | enums.notificationhubs.v20231001preview.ZoneRedundancyPreference>;
}
