"use strict";
// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __exportStar = (this && this.__exportStar) || function(m, exports) {
    for (var p in m) if (p !== "default" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.Task = exports.SqlMigrationService = exports.ServiceTask = exports.Service = exports.Project = exports.MigrationService = exports.listSqlMigrationServiceMonitoringDataOutput = exports.listSqlMigrationServiceMonitoringData = exports.listSqlMigrationServiceAuthKeysOutput = exports.listSqlMigrationServiceAuthKeys = exports.getTaskOutput = exports.getTask = exports.getSqlMigrationServiceOutput = exports.getSqlMigrationService = exports.getServiceTaskOutput = exports.getServiceTask = exports.getServiceOutput = exports.getService = exports.getProjectOutput = exports.getProject = exports.getMigrationServiceOutput = exports.getMigrationService = exports.getFileOutput = exports.getFile = exports.getDatabaseMigrationsSqlDbOutput = exports.getDatabaseMigrationsSqlDb = exports.getDatabaseMigrationsMongoToCosmosDbvCoreMongoOutput = exports.getDatabaseMigrationsMongoToCosmosDbvCoreMongo = exports.getDatabaseMigrationsMongoToCosmosDbRUMongoOutput = exports.getDatabaseMigrationsMongoToCosmosDbRUMongo = exports.File = exports.DatabaseMigrationsSqlDb = exports.DatabaseMigrationsMongoToCosmosDbvCoreMongo = exports.DatabaseMigrationsMongoToCosmosDbRUMongo = void 0;
const pulumi = require("@pulumi/pulumi");
const utilities = require("../../utilities");
exports.DatabaseMigrationsMongoToCosmosDbRUMongo = null;
utilities.lazyLoad(exports, ["DatabaseMigrationsMongoToCosmosDbRUMongo"], () => require("./databaseMigrationsMongoToCosmosDbRUMongo"));
exports.DatabaseMigrationsMongoToCosmosDbvCoreMongo = null;
utilities.lazyLoad(exports, ["DatabaseMigrationsMongoToCosmosDbvCoreMongo"], () => require("./databaseMigrationsMongoToCosmosDbvCoreMongo"));
exports.DatabaseMigrationsSqlDb = null;
utilities.lazyLoad(exports, ["DatabaseMigrationsSqlDb"], () => require("./databaseMigrationsSqlDb"));
exports.File = null;
utilities.lazyLoad(exports, ["File"], () => require("./file"));
exports.getDatabaseMigrationsMongoToCosmosDbRUMongo = null;
exports.getDatabaseMigrationsMongoToCosmosDbRUMongoOutput = null;
utilities.lazyLoad(exports, ["getDatabaseMigrationsMongoToCosmosDbRUMongo", "getDatabaseMigrationsMongoToCosmosDbRUMongoOutput"], () => require("./getDatabaseMigrationsMongoToCosmosDbRUMongo"));
exports.getDatabaseMigrationsMongoToCosmosDbvCoreMongo = null;
exports.getDatabaseMigrationsMongoToCosmosDbvCoreMongoOutput = null;
utilities.lazyLoad(exports, ["getDatabaseMigrationsMongoToCosmosDbvCoreMongo", "getDatabaseMigrationsMongoToCosmosDbvCoreMongoOutput"], () => require("./getDatabaseMigrationsMongoToCosmosDbvCoreMongo"));
exports.getDatabaseMigrationsSqlDb = null;
exports.getDatabaseMigrationsSqlDbOutput = null;
utilities.lazyLoad(exports, ["getDatabaseMigrationsSqlDb", "getDatabaseMigrationsSqlDbOutput"], () => require("./getDatabaseMigrationsSqlDb"));
exports.getFile = null;
exports.getFileOutput = null;
utilities.lazyLoad(exports, ["getFile", "getFileOutput"], () => require("./getFile"));
exports.getMigrationService = null;
exports.getMigrationServiceOutput = null;
utilities.lazyLoad(exports, ["getMigrationService", "getMigrationServiceOutput"], () => require("./getMigrationService"));
exports.getProject = null;
exports.getProjectOutput = null;
utilities.lazyLoad(exports, ["getProject", "getProjectOutput"], () => require("./getProject"));
exports.getService = null;
exports.getServiceOutput = null;
utilities.lazyLoad(exports, ["getService", "getServiceOutput"], () => require("./getService"));
exports.getServiceTask = null;
exports.getServiceTaskOutput = null;
utilities.lazyLoad(exports, ["getServiceTask", "getServiceTaskOutput"], () => require("./getServiceTask"));
exports.getSqlMigrationService = null;
exports.getSqlMigrationServiceOutput = null;
utilities.lazyLoad(exports, ["getSqlMigrationService", "getSqlMigrationServiceOutput"], () => require("./getSqlMigrationService"));
exports.getTask = null;
exports.getTaskOutput = null;
utilities.lazyLoad(exports, ["getTask", "getTaskOutput"], () => require("./getTask"));
exports.listSqlMigrationServiceAuthKeys = null;
exports.listSqlMigrationServiceAuthKeysOutput = null;
utilities.lazyLoad(exports, ["listSqlMigrationServiceAuthKeys", "listSqlMigrationServiceAuthKeysOutput"], () => require("./listSqlMigrationServiceAuthKeys"));
exports.listSqlMigrationServiceMonitoringData = null;
exports.listSqlMigrationServiceMonitoringDataOutput = null;
utilities.lazyLoad(exports, ["listSqlMigrationServiceMonitoringData", "listSqlMigrationServiceMonitoringDataOutput"], () => require("./listSqlMigrationServiceMonitoringData"));
exports.MigrationService = null;
utilities.lazyLoad(exports, ["MigrationService"], () => require("./migrationService"));
exports.Project = null;
utilities.lazyLoad(exports, ["Project"], () => require("./project"));
exports.Service = null;
utilities.lazyLoad(exports, ["Service"], () => require("./service"));
exports.ServiceTask = null;
utilities.lazyLoad(exports, ["ServiceTask"], () => require("./serviceTask"));
exports.SqlMigrationService = null;
utilities.lazyLoad(exports, ["SqlMigrationService"], () => require("./sqlMigrationService"));
exports.Task = null;
utilities.lazyLoad(exports, ["Task"], () => require("./task"));
// Export enums:
__exportStar(require("../../types/enums/datamigration/v20230715preview"), exports);
const _module = {
    version: utilities.getVersion(),
    construct: (name, type, urn) => {
        switch (type) {
            case "azure-native:datamigration/v20230715preview:DatabaseMigrationsMongoToCosmosDbRUMongo":
                return new exports.DatabaseMigrationsMongoToCosmosDbRUMongo(name, undefined, { urn });
            case "azure-native:datamigration/v20230715preview:DatabaseMigrationsMongoToCosmosDbvCoreMongo":
                return new exports.DatabaseMigrationsMongoToCosmosDbvCoreMongo(name, undefined, { urn });
            case "azure-native:datamigration/v20230715preview:DatabaseMigrationsSqlDb":
                return new exports.DatabaseMigrationsSqlDb(name, undefined, { urn });
            case "azure-native:datamigration/v20230715preview:File":
                return new exports.File(name, undefined, { urn });
            case "azure-native:datamigration/v20230715preview:MigrationService":
                return new exports.MigrationService(name, undefined, { urn });
            case "azure-native:datamigration/v20230715preview:Project":
                return new exports.Project(name, undefined, { urn });
            case "azure-native:datamigration/v20230715preview:Service":
                return new exports.Service(name, undefined, { urn });
            case "azure-native:datamigration/v20230715preview:ServiceTask":
                return new exports.ServiceTask(name, undefined, { urn });
            case "azure-native:datamigration/v20230715preview:SqlMigrationService":
                return new exports.SqlMigrationService(name, undefined, { urn });
            case "azure-native:datamigration/v20230715preview:Task":
                return new exports.Task(name, undefined, { urn });
            default:
                throw new Error(`unknown resource type ${type}`);
        }
    },
};
pulumi.runtime.registerResourceModule("azure-native", "datamigration/v20230715preview", _module);
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaW5kZXguanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi9kYXRhbWlncmF0aW9uL3YyMDIzMDcxNXByZXZpZXcvaW5kZXgudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IjtBQUFBLHNFQUFzRTtBQUN0RSxpRkFBaUY7Ozs7Ozs7Ozs7Ozs7Ozs7O0FBRWpGLHlDQUF5QztBQUN6Qyw2Q0FBNkM7QUFLaEMsUUFBQSx3Q0FBd0MsR0FBeUcsSUFBVyxDQUFDO0FBQzFLLFNBQVMsQ0FBQyxRQUFRLENBQUMsT0FBTyxFQUFFLENBQUMsMENBQTBDLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxPQUFPLENBQUMsNENBQTRDLENBQUMsQ0FBQyxDQUFDO0FBSTFILFFBQUEsMkNBQTJDLEdBQStHLElBQVcsQ0FBQztBQUNuTCxTQUFTLENBQUMsUUFBUSxDQUFDLE9BQU8sRUFBRSxDQUFDLDZDQUE2QyxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsT0FBTyxDQUFDLCtDQUErQyxDQUFDLENBQUMsQ0FBQztBQUloSSxRQUFBLHVCQUF1QixHQUF1RSxJQUFXLENBQUM7QUFDdkgsU0FBUyxDQUFDLFFBQVEsQ0FBQyxPQUFPLEVBQUUsQ0FBQyx5QkFBeUIsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLE9BQU8sQ0FBQywyQkFBMkIsQ0FBQyxDQUFDLENBQUM7QUFJeEYsUUFBQSxJQUFJLEdBQWlDLElBQVcsQ0FBQztBQUM5RCxTQUFTLENBQUMsUUFBUSxDQUFDLE9BQU8sRUFBRSxDQUFDLE1BQU0sQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLE9BQU8sQ0FBQyxRQUFRLENBQUMsQ0FBQyxDQUFDO0FBR2xELFFBQUEsMkNBQTJDLEdBQStHLElBQVcsQ0FBQztBQUN0SyxRQUFBLGlEQUFpRCxHQUFxSCxJQUFXLENBQUM7QUFDL0wsU0FBUyxDQUFDLFFBQVEsQ0FBQyxPQUFPLEVBQUUsQ0FBQyw2Q0FBNkMsRUFBQyxtREFBbUQsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLE9BQU8sQ0FBQywrQ0FBK0MsQ0FBQyxDQUFDLENBQUM7QUFHcEwsUUFBQSw4Q0FBOEMsR0FBcUgsSUFBVyxDQUFDO0FBQy9LLFFBQUEsb0RBQW9ELEdBQTJILElBQVcsQ0FBQztBQUN4TSxTQUFTLENBQUMsUUFBUSxDQUFDLE9BQU8sRUFBRSxDQUFDLGdEQUFnRCxFQUFDLHNEQUFzRCxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsT0FBTyxDQUFDLGtEQUFrRCxDQUFDLENBQUMsQ0FBQztBQUc3TCxRQUFBLDBCQUEwQixHQUE2RSxJQUFXLENBQUM7QUFDbkgsUUFBQSxnQ0FBZ0MsR0FBbUYsSUFBVyxDQUFDO0FBQzVJLFNBQVMsQ0FBQyxRQUFRLENBQUMsT0FBTyxFQUFFLENBQUMsNEJBQTRCLEVBQUMsa0NBQWtDLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxPQUFPLENBQUMsOEJBQThCLENBQUMsQ0FBQyxDQUFDO0FBR2pJLFFBQUEsT0FBTyxHQUF1QyxJQUFXLENBQUM7QUFDMUQsUUFBQSxhQUFhLEdBQTZDLElBQVcsQ0FBQztBQUNuRixTQUFTLENBQUMsUUFBUSxDQUFDLE9BQU8sRUFBRSxDQUFDLFNBQVMsRUFBQyxlQUFlLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxPQUFPLENBQUMsV0FBVyxDQUFDLENBQUMsQ0FBQztBQUd4RSxRQUFBLG1CQUFtQixHQUErRCxJQUFXLENBQUM7QUFDOUYsUUFBQSx5QkFBeUIsR0FBcUUsSUFBVyxDQUFDO0FBQ3ZILFNBQVMsQ0FBQyxRQUFRLENBQUMsT0FBTyxFQUFFLENBQUMscUJBQXFCLEVBQUMsMkJBQTJCLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxPQUFPLENBQUMsdUJBQXVCLENBQUMsQ0FBQyxDQUFDO0FBRzVHLFFBQUEsVUFBVSxHQUE2QyxJQUFXLENBQUM7QUFDbkUsUUFBQSxnQkFBZ0IsR0FBbUQsSUFBVyxDQUFDO0FBQzVGLFNBQVMsQ0FBQyxRQUFRLENBQUMsT0FBTyxFQUFFLENBQUMsWUFBWSxFQUFDLGtCQUFrQixDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsT0FBTyxDQUFDLGNBQWMsQ0FBQyxDQUFDLENBQUM7QUFHakYsUUFBQSxVQUFVLEdBQTZDLElBQVcsQ0FBQztBQUNuRSxRQUFBLGdCQUFnQixHQUFtRCxJQUFXLENBQUM7QUFDNUYsU0FBUyxDQUFDLFFBQVEsQ0FBQyxPQUFPLEVBQUUsQ0FBQyxZQUFZLEVBQUMsa0JBQWtCLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxPQUFPLENBQUMsY0FBYyxDQUFDLENBQUMsQ0FBQztBQUdqRixRQUFBLGNBQWMsR0FBcUQsSUFBVyxDQUFDO0FBQy9FLFFBQUEsb0JBQW9CLEdBQTJELElBQVcsQ0FBQztBQUN4RyxTQUFTLENBQUMsUUFBUSxDQUFDLE9BQU8sRUFBRSxDQUFDLGdCQUFnQixFQUFDLHNCQUFzQixDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsT0FBTyxDQUFDLGtCQUFrQixDQUFDLENBQUMsQ0FBQztBQUc3RixRQUFBLHNCQUFzQixHQUFxRSxJQUFXLENBQUM7QUFDdkcsUUFBQSw0QkFBNEIsR0FBMkUsSUFBVyxDQUFDO0FBQ2hJLFNBQVMsQ0FBQyxRQUFRLENBQUMsT0FBTyxFQUFFLENBQUMsd0JBQXdCLEVBQUMsOEJBQThCLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxPQUFPLENBQUMsMEJBQTBCLENBQUMsQ0FBQyxDQUFDO0FBR3JILFFBQUEsT0FBTyxHQUF1QyxJQUFXLENBQUM7QUFDMUQsUUFBQSxhQUFhLEdBQTZDLElBQVcsQ0FBQztBQUNuRixTQUFTLENBQUMsUUFBUSxDQUFDLE9BQU8sRUFBRSxDQUFDLFNBQVMsRUFBQyxlQUFlLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxPQUFPLENBQUMsV0FBVyxDQUFDLENBQUMsQ0FBQztBQUd4RSxRQUFBLCtCQUErQixHQUF1RixJQUFXLENBQUM7QUFDbEksUUFBQSxxQ0FBcUMsR0FBNkYsSUFBVyxDQUFDO0FBQzNKLFNBQVMsQ0FBQyxRQUFRLENBQUMsT0FBTyxFQUFFLENBQUMsaUNBQWlDLEVBQUMsdUNBQXVDLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxPQUFPLENBQUMsbUNBQW1DLENBQUMsQ0FBQyxDQUFDO0FBR2hKLFFBQUEscUNBQXFDLEdBQW1HLElBQVcsQ0FBQztBQUNwSixRQUFBLDJDQUEyQyxHQUF5RyxJQUFXLENBQUM7QUFDN0ssU0FBUyxDQUFDLFFBQVEsQ0FBQyxPQUFPLEVBQUUsQ0FBQyx1Q0FBdUMsRUFBQyw2Q0FBNkMsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLE9BQU8sQ0FBQyx5Q0FBeUMsQ0FBQyxDQUFDLENBQUM7QUFJbEssUUFBQSxnQkFBZ0IsR0FBeUQsSUFBVyxDQUFDO0FBQ2xHLFNBQVMsQ0FBQyxRQUFRLENBQUMsT0FBTyxFQUFFLENBQUMsa0JBQWtCLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxPQUFPLENBQUMsb0JBQW9CLENBQUMsQ0FBQyxDQUFDO0FBSTFFLFFBQUEsT0FBTyxHQUF1QyxJQUFXLENBQUM7QUFDdkUsU0FBUyxDQUFDLFFBQVEsQ0FBQyxPQUFPLEVBQUUsQ0FBQyxTQUFTLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxPQUFPLENBQUMsV0FBVyxDQUFDLENBQUMsQ0FBQztBQUl4RCxRQUFBLE9BQU8sR0FBdUMsSUFBVyxDQUFDO0FBQ3ZFLFNBQVMsQ0FBQyxRQUFRLENBQUMsT0FBTyxFQUFFLENBQUMsU0FBUyxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsT0FBTyxDQUFDLFdBQVcsQ0FBQyxDQUFDLENBQUM7QUFJeEQsUUFBQSxXQUFXLEdBQStDLElBQVcsQ0FBQztBQUNuRixTQUFTLENBQUMsUUFBUSxDQUFDLE9BQU8sRUFBRSxDQUFDLGFBQWEsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLE9BQU8sQ0FBQyxlQUFlLENBQUMsQ0FBQyxDQUFDO0FBSWhFLFFBQUEsbUJBQW1CLEdBQStELElBQVcsQ0FBQztBQUMzRyxTQUFTLENBQUMsUUFBUSxDQUFDLE9BQU8sRUFBRSxDQUFDLHFCQUFxQixDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsT0FBTyxDQUFDLHVCQUF1QixDQUFDLENBQUMsQ0FBQztBQUloRixRQUFBLElBQUksR0FBaUMsSUFBVyxDQUFDO0FBQzlELFNBQVMsQ0FBQyxRQUFRLENBQUMsT0FBTyxFQUFFLENBQUMsTUFBTSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsT0FBTyxDQUFDLFFBQVEsQ0FBQyxDQUFDLENBQUM7QUFHL0QsZ0JBQWdCO0FBQ2hCLG1GQUFpRTtBQUVqRSxNQUFNLE9BQU8sR0FBRztJQUNaLE9BQU8sRUFBRSxTQUFTLENBQUMsVUFBVSxFQUFFO0lBQy9CLFNBQVMsRUFBRSxDQUFDLElBQVksRUFBRSxJQUFZLEVBQUUsR0FBVyxFQUFtQixFQUFFO1FBQ3BFLFFBQVEsSUFBSSxFQUFFO1lBQ1YsS0FBSyxzRkFBc0Y7Z0JBQ3ZGLE9BQU8sSUFBSSxnREFBd0MsQ0FBQyxJQUFJLEVBQU8sU0FBUyxFQUFFLEVBQUUsR0FBRyxFQUFFLENBQUMsQ0FBQTtZQUN0RixLQUFLLHlGQUF5RjtnQkFDMUYsT0FBTyxJQUFJLG1EQUEyQyxDQUFDLElBQUksRUFBTyxTQUFTLEVBQUUsRUFBRSxHQUFHLEVBQUUsQ0FBQyxDQUFBO1lBQ3pGLEtBQUsscUVBQXFFO2dCQUN0RSxPQUFPLElBQUksK0JBQXVCLENBQUMsSUFBSSxFQUFPLFNBQVMsRUFBRSxFQUFFLEdBQUcsRUFBRSxDQUFDLENBQUE7WUFDckUsS0FBSyxrREFBa0Q7Z0JBQ25ELE9BQU8sSUFBSSxZQUFJLENBQUMsSUFBSSxFQUFPLFNBQVMsRUFBRSxFQUFFLEdBQUcsRUFBRSxDQUFDLENBQUE7WUFDbEQsS0FBSyw4REFBOEQ7Z0JBQy9ELE9BQU8sSUFBSSx3QkFBZ0IsQ0FBQyxJQUFJLEVBQU8sU0FBUyxFQUFFLEVBQUUsR0FBRyxFQUFFLENBQUMsQ0FBQTtZQUM5RCxLQUFLLHFEQUFxRDtnQkFDdEQsT0FBTyxJQUFJLGVBQU8sQ0FBQyxJQUFJLEVBQU8sU0FBUyxFQUFFLEVBQUUsR0FBRyxFQUFFLENBQUMsQ0FBQTtZQUNyRCxLQUFLLHFEQUFxRDtnQkFDdEQsT0FBTyxJQUFJLGVBQU8sQ0FBQyxJQUFJLEVBQU8sU0FBUyxFQUFFLEVBQUUsR0FBRyxFQUFFLENBQUMsQ0FBQTtZQUNyRCxLQUFLLHlEQUF5RDtnQkFDMUQsT0FBTyxJQUFJLG1CQUFXLENBQUMsSUFBSSxFQUFPLFNBQVMsRUFBRSxFQUFFLEdBQUcsRUFBRSxDQUFDLENBQUE7WUFDekQsS0FBSyxpRUFBaUU7Z0JBQ2xFLE9BQU8sSUFBSSwyQkFBbUIsQ0FBQyxJQUFJLEVBQU8sU0FBUyxFQUFFLEVBQUUsR0FBRyxFQUFFLENBQUMsQ0FBQTtZQUNqRSxLQUFLLGtEQUFrRDtnQkFDbkQsT0FBTyxJQUFJLFlBQUksQ0FBQyxJQUFJLEVBQU8sU0FBUyxFQUFFLEVBQUUsR0FBRyxFQUFFLENBQUMsQ0FBQTtZQUNsRDtnQkFDSSxNQUFNLElBQUksS0FBSyxDQUFDLHlCQUF5QixJQUFJLEVBQUUsQ0FBQyxDQUFDO1NBQ3hEO0lBQ0wsQ0FBQztDQUNKLENBQUM7QUFDRixNQUFNLENBQUMsT0FBTyxDQUFDLHNCQUFzQixDQUFDLGNBQWMsRUFBRSxnQ0FBZ0MsRUFBRSxPQUFPLENBQUMsQ0FBQSJ9