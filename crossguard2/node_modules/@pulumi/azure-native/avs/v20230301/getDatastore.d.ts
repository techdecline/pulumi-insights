import * as pulumi from "@pulumi/pulumi";
import * as outputs from "../../types/output";
/**
 * A datastore resource
 */
export declare function getDatastore(args: GetDatastoreArgs, opts?: pulumi.InvokeOptions): Promise<GetDatastoreResult>;
export interface GetDatastoreArgs {
    /**
     * Name of the cluster in the private cloud
     */
    clusterName: string;
    /**
     * Name of the datastore in the private cloud cluster
     */
    datastoreName: string;
    /**
     * Name of the private cloud
     */
    privateCloudName: string;
    /**
     * The name of the resource group. The name is case insensitive.
     */
    resourceGroupName: string;
}
/**
 * A datastore resource
 */
export interface GetDatastoreResult {
    /**
     * An iSCSI volume
     */
    readonly diskPoolVolume?: outputs.avs.v20230301.DiskPoolVolumeResponse;
    /**
     * Resource ID.
     */
    readonly id: string;
    /**
     * Resource name.
     */
    readonly name: string;
    /**
     * An Azure NetApp Files volume
     */
    readonly netAppVolume?: outputs.avs.v20230301.NetAppVolumeResponse;
    /**
     * The state of the datastore provisioning
     */
    readonly provisioningState: string;
    /**
     * The operational status of the datastore
     */
    readonly status: string;
    /**
     * Resource type.
     */
    readonly type: string;
}
/**
 * A datastore resource
 */
export declare function getDatastoreOutput(args: GetDatastoreOutputArgs, opts?: pulumi.InvokeOutputOptions): pulumi.Output<GetDatastoreResult>;
export interface GetDatastoreOutputArgs {
    /**
     * Name of the cluster in the private cloud
     */
    clusterName: pulumi.Input<string>;
    /**
     * Name of the datastore in the private cloud cluster
     */
    datastoreName: pulumi.Input<string>;
    /**
     * Name of the private cloud
     */
    privateCloudName: pulumi.Input<string>;
    /**
     * The name of the resource group. The name is case insensitive.
     */
    resourceGroupName: pulumi.Input<string>;
}
