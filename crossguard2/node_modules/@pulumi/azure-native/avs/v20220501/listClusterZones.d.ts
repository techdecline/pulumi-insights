import * as pulumi from "@pulumi/pulumi";
import * as outputs from "../../types/output";
/**
 * List of all zones and associated hosts for a cluster
 */
export declare function listClusterZones(args: ListClusterZonesArgs, opts?: pulumi.InvokeOptions): Promise<ListClusterZonesResult>;
export interface ListClusterZonesArgs {
    /**
     * Name of the cluster in the private cloud
     */
    clusterName: string;
    /**
     * Name of the private cloud
     */
    privateCloudName: string;
    /**
     * The name of the resource group. The name is case insensitive.
     */
    resourceGroupName: string;
}
/**
 * List of all zones and associated hosts for a cluster
 */
export interface ListClusterZonesResult {
    /**
     * Zone and associated hosts info
     */
    readonly zones?: outputs.avs.v20220501.ClusterZoneResponse[];
}
/**
 * List of all zones and associated hosts for a cluster
 */
export declare function listClusterZonesOutput(args: ListClusterZonesOutputArgs, opts?: pulumi.InvokeOutputOptions): pulumi.Output<ListClusterZonesResult>;
export interface ListClusterZonesOutputArgs {
    /**
     * Name of the cluster in the private cloud
     */
    clusterName: pulumi.Input<string>;
    /**
     * Name of the private cloud
     */
    privateCloudName: pulumi.Input<string>;
    /**
     * The name of the resource group. The name is case insensitive.
     */
    resourceGroupName: pulumi.Input<string>;
}
