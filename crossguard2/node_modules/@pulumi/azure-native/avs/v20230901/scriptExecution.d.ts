import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../../types/input";
import * as outputs from "../../types/output";
/**
 * An instance of a script executed by a user - custom or AVS
 */
export declare class ScriptExecution extends pulumi.CustomResource {
    /**
     * Get an existing ScriptExecution resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    static get(name: string, id: pulumi.Input<pulumi.ID>, opts?: pulumi.CustomResourceOptions): ScriptExecution;
    /**
     * Returns true if the given object is an instance of ScriptExecution.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    static isInstance(obj: any): obj is ScriptExecution;
    /**
     * Standard error output stream from the powershell execution
     */
    readonly errors: pulumi.Output<string[]>;
    /**
     * Error message if the script was able to run, but if the script itself had
     * errors or powershell threw an exception
     */
    readonly failureReason: pulumi.Output<string | undefined>;
    /**
     * Time the script execution was finished
     */
    readonly finishedAt: pulumi.Output<string>;
    /**
     * Parameters that will be hidden/not visible to ARM, such as passwords and
     * credentials
     */
    readonly hiddenParameters: pulumi.Output<(outputs.avs.v20230901.PSCredentialExecutionParameterResponse | outputs.avs.v20230901.ScriptSecureStringExecutionParameterResponse | outputs.avs.v20230901.ScriptStringExecutionParameterResponse)[] | undefined>;
    /**
     * Standard information out stream from the powershell execution
     */
    readonly information: pulumi.Output<string[]>;
    /**
     * The name of the resource
     */
    readonly name: pulumi.Output<string>;
    /**
     * User-defined dictionary.
     */
    readonly namedOutputs: pulumi.Output<{
        [key: string]: any;
    } | undefined>;
    /**
     * Standard output stream from the powershell execution
     */
    readonly output: pulumi.Output<string[] | undefined>;
    /**
     * Parameters the script will accept
     */
    readonly parameters: pulumi.Output<(outputs.avs.v20230901.PSCredentialExecutionParameterResponse | outputs.avs.v20230901.ScriptSecureStringExecutionParameterResponse | outputs.avs.v20230901.ScriptStringExecutionParameterResponse)[] | undefined>;
    /**
     * The state of the script execution resource
     */
    readonly provisioningState: pulumi.Output<string>;
    /**
     * Time to live for the resource. If not provided, will be available for 60 days
     */
    readonly retention: pulumi.Output<string | undefined>;
    /**
     * A reference to the script cmdlet resource if user is running a AVS script
     */
    readonly scriptCmdletId: pulumi.Output<string | undefined>;
    /**
     * Time the script execution was started
     */
    readonly startedAt: pulumi.Output<string>;
    /**
     * Time the script execution was submitted
     */
    readonly submittedAt: pulumi.Output<string>;
    /**
     * Azure Resource Manager metadata containing createdBy and modifiedBy information.
     */
    readonly systemData: pulumi.Output<outputs.avs.v20230901.SystemDataResponse>;
    /**
     * Time limit for execution
     */
    readonly timeout: pulumi.Output<string>;
    /**
     * The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
     */
    readonly type: pulumi.Output<string>;
    /**
     * Standard warning out stream from the powershell execution
     */
    readonly warnings: pulumi.Output<string[]>;
    /**
     * Create a ScriptExecution resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: ScriptExecutionArgs, opts?: pulumi.CustomResourceOptions);
}
/**
 * The set of arguments for constructing a ScriptExecution resource.
 */
export interface ScriptExecutionArgs {
    /**
     * Error message if the script was able to run, but if the script itself had
     * errors or powershell threw an exception
     */
    failureReason?: pulumi.Input<string>;
    /**
     * Parameters that will be hidden/not visible to ARM, such as passwords and
     * credentials
     */
    hiddenParameters?: pulumi.Input<pulumi.Input<inputs.avs.v20230901.PSCredentialExecutionParameterArgs | inputs.avs.v20230901.ScriptSecureStringExecutionParameterArgs | inputs.avs.v20230901.ScriptStringExecutionParameterArgs>[]>;
    /**
     * User-defined dictionary.
     */
    namedOutputs?: pulumi.Input<{
        [key: string]: any;
    }>;
    /**
     * Standard output stream from the powershell execution
     */
    output?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Parameters the script will accept
     */
    parameters?: pulumi.Input<pulumi.Input<inputs.avs.v20230901.PSCredentialExecutionParameterArgs | inputs.avs.v20230901.ScriptSecureStringExecutionParameterArgs | inputs.avs.v20230901.ScriptStringExecutionParameterArgs>[]>;
    /**
     * Name of the private cloud
     */
    privateCloudName: pulumi.Input<string>;
    /**
     * The name of the resource group. The name is case insensitive.
     */
    resourceGroupName: pulumi.Input<string>;
    /**
     * Time to live for the resource. If not provided, will be available for 60 days
     */
    retention?: pulumi.Input<string>;
    /**
     * A reference to the script cmdlet resource if user is running a AVS script
     */
    scriptCmdletId?: pulumi.Input<string>;
    /**
     * Name of the script cmdlet.
     */
    scriptExecutionName?: pulumi.Input<string>;
    /**
     * Time limit for execution
     */
    timeout: pulumi.Input<string>;
}
