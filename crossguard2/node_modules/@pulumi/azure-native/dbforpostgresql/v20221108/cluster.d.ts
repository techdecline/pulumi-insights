import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../../types/input";
import * as outputs from "../../types/output";
/**
 * Represents a cluster.
 */
export declare class Cluster extends pulumi.CustomResource {
    /**
     * Get an existing Cluster resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    static get(name: string, id: pulumi.Input<pulumi.ID>, opts?: pulumi.CustomResourceOptions): Cluster;
    /**
     * Returns true if the given object is an instance of Cluster.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    static isInstance(obj: any): obj is Cluster;
    /**
     * The administrator's login name of the servers in the cluster.
     */
    readonly administratorLogin: pulumi.Output<string>;
    /**
     * The Citus extension version on all cluster servers.
     */
    readonly citusVersion: pulumi.Output<string | undefined>;
    /**
     * If public access is enabled on coordinator.
     */
    readonly coordinatorEnablePublicIpAccess: pulumi.Output<boolean | undefined>;
    /**
     * The edition of a coordinator server (default: GeneralPurpose). Required for creation.
     */
    readonly coordinatorServerEdition: pulumi.Output<string | undefined>;
    /**
     * The storage of a server in MB. Required for creation. See https://learn.microsoft.com/azure/cosmos-db/postgresql/resources-compute for more information.
     */
    readonly coordinatorStorageQuotaInMb: pulumi.Output<number | undefined>;
    /**
     * The vCores count of a server (max: 96). Required for creation. See https://learn.microsoft.com/azure/cosmos-db/postgresql/resources-compute for more information.
     */
    readonly coordinatorVCores: pulumi.Output<number | undefined>;
    /**
     * The earliest restore point time (ISO8601 format) for the cluster.
     */
    readonly earliestRestoreTime: pulumi.Output<string>;
    /**
     * If high availability (HA) is enabled or not for the cluster.
     */
    readonly enableHa: pulumi.Output<boolean | undefined>;
    /**
     * If distributed tables are placed on coordinator or not. Should be set to 'true' on single node clusters. Requires shard rebalancing after value is changed.
     */
    readonly enableShardsOnCoordinator: pulumi.Output<boolean | undefined>;
    /**
     * The geo-location where the resource lives
     */
    readonly location: pulumi.Output<string>;
    /**
     * Maintenance window of a cluster.
     */
    readonly maintenanceWindow: pulumi.Output<outputs.dbforpostgresql.v20221108.MaintenanceWindowResponse | undefined>;
    /**
     * The name of the resource
     */
    readonly name: pulumi.Output<string>;
    /**
     * Worker node count of the cluster. When node count is 0, it represents a single node configuration with the ability to create distributed tables on that node. 2 or more worker nodes represent multi-node configuration. Node count value cannot be 1. Required for creation.
     */
    readonly nodeCount: pulumi.Output<number | undefined>;
    /**
     * If public access is enabled on worker nodes.
     */
    readonly nodeEnablePublicIpAccess: pulumi.Output<boolean | undefined>;
    /**
     * The edition of a node server (default: MemoryOptimized).
     */
    readonly nodeServerEdition: pulumi.Output<string | undefined>;
    /**
     * The storage in MB on each worker node. See https://learn.microsoft.com/azure/cosmos-db/postgresql/resources-compute for more information.
     */
    readonly nodeStorageQuotaInMb: pulumi.Output<number | undefined>;
    /**
     * The compute in vCores on each worker node (max: 104). See https://learn.microsoft.com/azure/cosmos-db/postgresql/resources-compute for more information.
     */
    readonly nodeVCores: pulumi.Output<number | undefined>;
    /**
     * Date and time in UTC (ISO8601 format) for cluster restore.
     */
    readonly pointInTimeUTC: pulumi.Output<string | undefined>;
    /**
     * The major PostgreSQL version on all cluster servers.
     */
    readonly postgresqlVersion: pulumi.Output<string | undefined>;
    /**
     * Preferred primary availability zone (AZ) for all cluster servers.
     */
    readonly preferredPrimaryZone: pulumi.Output<string | undefined>;
    /**
     * The private endpoint connections for a cluster.
     */
    readonly privateEndpointConnections: pulumi.Output<outputs.dbforpostgresql.v20221108.SimplePrivateEndpointConnectionResponse[]>;
    /**
     * Provisioning state of the cluster
     */
    readonly provisioningState: pulumi.Output<string>;
    /**
     * The array of read replica clusters.
     */
    readonly readReplicas: pulumi.Output<string[]>;
    /**
     * The list of server names in the cluster
     */
    readonly serverNames: pulumi.Output<outputs.dbforpostgresql.v20221108.ServerNameItemResponse[]>;
    /**
     * The Azure region of source cluster for read replica clusters.
     */
    readonly sourceLocation: pulumi.Output<string | undefined>;
    /**
     * The resource id of source cluster for read replica clusters.
     */
    readonly sourceResourceId: pulumi.Output<string | undefined>;
    /**
     * A state of a cluster/server that is visible to user.
     */
    readonly state: pulumi.Output<string>;
    /**
     * Azure Resource Manager metadata containing createdBy and modifiedBy information.
     */
    readonly systemData: pulumi.Output<outputs.dbforpostgresql.v20221108.SystemDataResponse>;
    /**
     * Resource tags.
     */
    readonly tags: pulumi.Output<{
        [key: string]: string;
    } | undefined>;
    /**
     * The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
     */
    readonly type: pulumi.Output<string>;
    /**
     * Create a Cluster resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: ClusterArgs, opts?: pulumi.CustomResourceOptions);
}
/**
 * The set of arguments for constructing a Cluster resource.
 */
export interface ClusterArgs {
    /**
     * The password of the administrator login. Required for creation.
     */
    administratorLoginPassword?: pulumi.Input<string>;
    /**
     * The Citus extension version on all cluster servers.
     */
    citusVersion?: pulumi.Input<string>;
    /**
     * The name of the cluster.
     */
    clusterName?: pulumi.Input<string>;
    /**
     * If public access is enabled on coordinator.
     */
    coordinatorEnablePublicIpAccess?: pulumi.Input<boolean>;
    /**
     * The edition of a coordinator server (default: GeneralPurpose). Required for creation.
     */
    coordinatorServerEdition?: pulumi.Input<string>;
    /**
     * The storage of a server in MB. Required for creation. See https://learn.microsoft.com/azure/cosmos-db/postgresql/resources-compute for more information.
     */
    coordinatorStorageQuotaInMb?: pulumi.Input<number>;
    /**
     * The vCores count of a server (max: 96). Required for creation. See https://learn.microsoft.com/azure/cosmos-db/postgresql/resources-compute for more information.
     */
    coordinatorVCores?: pulumi.Input<number>;
    /**
     * If high availability (HA) is enabled or not for the cluster.
     */
    enableHa?: pulumi.Input<boolean>;
    /**
     * If distributed tables are placed on coordinator or not. Should be set to 'true' on single node clusters. Requires shard rebalancing after value is changed.
     */
    enableShardsOnCoordinator?: pulumi.Input<boolean>;
    /**
     * The geo-location where the resource lives
     */
    location?: pulumi.Input<string>;
    /**
     * Maintenance window of a cluster.
     */
    maintenanceWindow?: pulumi.Input<inputs.dbforpostgresql.v20221108.MaintenanceWindowArgs>;
    /**
     * Worker node count of the cluster. When node count is 0, it represents a single node configuration with the ability to create distributed tables on that node. 2 or more worker nodes represent multi-node configuration. Node count value cannot be 1. Required for creation.
     */
    nodeCount?: pulumi.Input<number>;
    /**
     * If public access is enabled on worker nodes.
     */
    nodeEnablePublicIpAccess?: pulumi.Input<boolean>;
    /**
     * The edition of a node server (default: MemoryOptimized).
     */
    nodeServerEdition?: pulumi.Input<string>;
    /**
     * The storage in MB on each worker node. See https://learn.microsoft.com/azure/cosmos-db/postgresql/resources-compute for more information.
     */
    nodeStorageQuotaInMb?: pulumi.Input<number>;
    /**
     * The compute in vCores on each worker node (max: 104). See https://learn.microsoft.com/azure/cosmos-db/postgresql/resources-compute for more information.
     */
    nodeVCores?: pulumi.Input<number>;
    /**
     * Date and time in UTC (ISO8601 format) for cluster restore.
     */
    pointInTimeUTC?: pulumi.Input<string>;
    /**
     * The major PostgreSQL version on all cluster servers.
     */
    postgresqlVersion?: pulumi.Input<string>;
    /**
     * Preferred primary availability zone (AZ) for all cluster servers.
     */
    preferredPrimaryZone?: pulumi.Input<string>;
    /**
     * The name of the resource group. The name is case insensitive.
     */
    resourceGroupName: pulumi.Input<string>;
    /**
     * The Azure region of source cluster for read replica clusters.
     */
    sourceLocation?: pulumi.Input<string>;
    /**
     * The resource id of source cluster for read replica clusters.
     */
    sourceResourceId?: pulumi.Input<string>;
    /**
     * Resource tags.
     */
    tags?: pulumi.Input<{
        [key: string]: pulumi.Input<string>;
    }>;
}
