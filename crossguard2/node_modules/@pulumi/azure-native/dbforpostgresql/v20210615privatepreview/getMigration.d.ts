import * as pulumi from "@pulumi/pulumi";
import * as outputs from "../../types/output";
/**
 * Gets details of a migration.
 */
export declare function getMigration(args: GetMigrationArgs, opts?: pulumi.InvokeOptions): Promise<GetMigrationResult>;
export interface GetMigrationArgs {
    /**
     * The name of the migration.
     */
    migrationName: string;
    /**
     * The name of the target database server.
     */
    targetDBServerName: string;
    /**
     * The resource group name of the target database server.
     */
    targetDBServerResourceGroupName: string;
    /**
     * The subscription ID of the target database server.
     */
    targetDBServerSubscriptionId: string;
}
/**
 * Represents a migration resource.
 */
export interface GetMigrationResult {
    /**
     * Migration status.
     */
    readonly currentStatus: outputs.dbforpostgresql.v20210615privatepreview.MigrationStatusResponse;
    readonly dBsToMigrate?: string[];
    /**
     * Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
     */
    readonly id: string;
    /**
     * The geo-location where the resource lives
     */
    readonly location: string;
    /**
     * Migration details level.
     */
    readonly migrationDetailsLevel: string;
    readonly migrationId: string;
    readonly migrationName: string;
    /**
     * Migration resource group.
     */
    readonly migrationResourceGroup?: outputs.dbforpostgresql.v20210615privatepreview.MigrationResourceGroupResponse;
    readonly migrationWindowStartTimeInUtc?: string;
    /**
     * The name of the resource
     */
    readonly name: string;
    readonly overwriteDBsInTarget?: boolean;
    /**
     * Migration secret parameters.
     */
    readonly secretParameters?: outputs.dbforpostgresql.v20210615privatepreview.MigrationSecretParametersResponse;
    readonly setupLogicalReplicationOnSourceDBIfNeeded?: boolean;
    /**
     * Database server metadata.
     */
    readonly sourceDBServerMetadata: outputs.dbforpostgresql.v20210615privatepreview.DBServerMetadataResponse;
    readonly sourceDBServerResourceId?: string;
    readonly startDataMigration?: boolean;
    /**
     * Metadata pertaining to creation and last modification of the resource.
     */
    readonly systemData: outputs.dbforpostgresql.v20210615privatepreview.SystemDataResponse;
    /**
     * Resource tags.
     */
    readonly tags?: {
        [key: string]: string;
    };
    /**
     * Database server metadata.
     */
    readonly targetDBServerMetadata: outputs.dbforpostgresql.v20210615privatepreview.DBServerMetadataResponse;
    readonly targetDBServerResourceId: string;
    readonly triggerCutover?: boolean;
    /**
     * The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
     */
    readonly type: string;
    readonly userAssignedIdentityResourceId?: string;
}
/**
 * Gets details of a migration.
 */
export declare function getMigrationOutput(args: GetMigrationOutputArgs, opts?: pulumi.InvokeOutputOptions): pulumi.Output<GetMigrationResult>;
export interface GetMigrationOutputArgs {
    /**
     * The name of the migration.
     */
    migrationName: pulumi.Input<string>;
    /**
     * The name of the target database server.
     */
    targetDBServerName: pulumi.Input<string>;
    /**
     * The resource group name of the target database server.
     */
    targetDBServerResourceGroupName: pulumi.Input<string>;
    /**
     * The subscription ID of the target database server.
     */
    targetDBServerSubscriptionId: pulumi.Input<string>;
}
