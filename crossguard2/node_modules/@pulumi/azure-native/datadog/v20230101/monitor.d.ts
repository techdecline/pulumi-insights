import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../../types/input";
import * as outputs from "../../types/output";
export declare class Monitor extends pulumi.CustomResource {
    /**
     * Get an existing Monitor resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    static get(name: string, id: pulumi.Input<pulumi.ID>, opts?: pulumi.CustomResourceOptions): Monitor;
    /**
     * Returns true if the given object is an instance of Monitor.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    static isInstance(obj: any): obj is Monitor;
    readonly identity: pulumi.Output<outputs.datadog.v20230101.IdentityPropertiesResponse | undefined>;
    readonly location: pulumi.Output<string>;
    /**
     * Name of the monitor resource.
     */
    readonly name: pulumi.Output<string>;
    /**
     * Properties specific to the monitor resource.
     */
    readonly properties: pulumi.Output<outputs.datadog.v20230101.MonitorPropertiesResponse>;
    readonly sku: pulumi.Output<outputs.datadog.v20230101.ResourceSkuResponse | undefined>;
    /**
     * Metadata pertaining to creation and last modification of the resource.
     */
    readonly systemData: pulumi.Output<outputs.datadog.v20230101.SystemDataResponse>;
    readonly tags: pulumi.Output<{
        [key: string]: string;
    } | undefined>;
    /**
     * The type of the monitor resource.
     */
    readonly type: pulumi.Output<string>;
    /**
     * Create a Monitor resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: MonitorArgs, opts?: pulumi.CustomResourceOptions);
}
/**
 * The set of arguments for constructing a Monitor resource.
 */
export interface MonitorArgs {
    identity?: pulumi.Input<inputs.datadog.v20230101.IdentityPropertiesArgs>;
    location?: pulumi.Input<string>;
    /**
     * Monitor resource name
     */
    monitorName?: pulumi.Input<string>;
    /**
     * Properties specific to the monitor resource.
     */
    properties?: pulumi.Input<inputs.datadog.v20230101.MonitorPropertiesArgs>;
    /**
     * The name of the resource group. The name is case insensitive.
     */
    resourceGroupName: pulumi.Input<string>;
    sku?: pulumi.Input<inputs.datadog.v20230101.ResourceSkuArgs>;
    tags?: pulumi.Input<{
        [key: string]: pulumi.Input<string>;
    }>;
}
