import * as pulumi from "@pulumi/pulumi";
/**
 * Get the source addresses for the specified flow.
 */
export declare function getFlowSourceAddresses(args: GetFlowSourceAddressesArgs, opts?: pulumi.InvokeOptions): Promise<GetFlowSourceAddressesResult>;
export interface GetFlowSourceAddressesArgs {
    /**
     * The name for the connection that is to be requested.
     */
    connectionName: string;
    /**
     * The name for the flow that is to be onboarded.
     */
    flowName: string;
    /**
     * The name of the resource group. The name is case insensitive.
     */
    resourceGroupName: string;
}
/**
 * The source IP address and CIDR ranges of the stream
 */
export interface GetFlowSourceAddressesResult {
    /**
     * A source IP address or CIDR range
     */
    readonly sourceAddresses?: string[];
}
/**
 * Get the source addresses for the specified flow.
 */
export declare function getFlowSourceAddressesOutput(args: GetFlowSourceAddressesOutputArgs, opts?: pulumi.InvokeOutputOptions): pulumi.Output<GetFlowSourceAddressesResult>;
export interface GetFlowSourceAddressesOutputArgs {
    /**
     * The name for the connection that is to be requested.
     */
    connectionName: pulumi.Input<string>;
    /**
     * The name for the flow that is to be onboarded.
     */
    flowName: pulumi.Input<string>;
    /**
     * The name of the resource group. The name is case insensitive.
     */
    resourceGroupName: pulumi.Input<string>;
}
