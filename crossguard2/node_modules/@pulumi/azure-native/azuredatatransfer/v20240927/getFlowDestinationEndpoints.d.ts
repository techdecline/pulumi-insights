import * as pulumi from "@pulumi/pulumi";
/**
 * Get the destination endpoints for the specified flow and stream ID.
 */
export declare function getFlowDestinationEndpoints(args: GetFlowDestinationEndpointsArgs, opts?: pulumi.InvokeOptions): Promise<GetFlowDestinationEndpointsResult>;
export interface GetFlowDestinationEndpointsArgs {
    /**
     * The name for the connection that is to be requested.
     */
    connectionName: string;
    /**
     * The name for the flow that is to be onboarded.
     */
    flowName: string;
    /**
     * The name of the resource group. The name is case insensitive.
     */
    resourceGroupName: string;
}
/**
 * List of destination endpoints for the flow stream
 */
export interface GetFlowDestinationEndpointsResult {
    /**
     * The destination endpoints for the flow stream
     */
    readonly endpoints?: string[];
}
/**
 * Get the destination endpoints for the specified flow and stream ID.
 */
export declare function getFlowDestinationEndpointsOutput(args: GetFlowDestinationEndpointsOutputArgs, opts?: pulumi.InvokeOutputOptions): pulumi.Output<GetFlowDestinationEndpointsResult>;
export interface GetFlowDestinationEndpointsOutputArgs {
    /**
     * The name for the connection that is to be requested.
     */
    connectionName: pulumi.Input<string>;
    /**
     * The name for the flow that is to be onboarded.
     */
    flowName: pulumi.Input<string>;
    /**
     * The name of the resource group. The name is case insensitive.
     */
    resourceGroupName: pulumi.Input<string>;
}
