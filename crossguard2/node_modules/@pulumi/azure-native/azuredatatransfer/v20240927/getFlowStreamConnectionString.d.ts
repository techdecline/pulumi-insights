import * as pulumi from "@pulumi/pulumi";
/**
 * Get the connection string for the specified flow.
 */
export declare function getFlowStreamConnectionString(args: GetFlowStreamConnectionStringArgs, opts?: pulumi.InvokeOptions): Promise<GetFlowStreamConnectionStringResult>;
export interface GetFlowStreamConnectionStringArgs {
    /**
     * The name for the connection that is to be requested.
     */
    connectionName: string;
    /**
     * The name for the flow that is to be onboarded.
     */
    flowName: string;
    /**
     * The name of the resource group. The name is case insensitive.
     */
    resourceGroupName: string;
}
/**
 * The connection string for the specified streaming flow
 */
export interface GetFlowStreamConnectionStringResult {
    /**
     * The connection string for the specified streaming flow
     */
    readonly connectionString?: string;
}
/**
 * Get the connection string for the specified flow.
 */
export declare function getFlowStreamConnectionStringOutput(args: GetFlowStreamConnectionStringOutputArgs, opts?: pulumi.InvokeOutputOptions): pulumi.Output<GetFlowStreamConnectionStringResult>;
export interface GetFlowStreamConnectionStringOutputArgs {
    /**
     * The name for the connection that is to be requested.
     */
    connectionName: pulumi.Input<string>;
    /**
     * The name for the flow that is to be onboarded.
     */
    flowName: pulumi.Input<string>;
    /**
     * The name of the resource group. The name is case insensitive.
     */
    resourceGroupName: pulumi.Input<string>;
}
