export declare const EncryptionStatus: {
    readonly Enabled: "Enabled";
    readonly Disabled: "Disabled";
};
/**
 * Indicates whether or not the encryption is enabled for the workspace.
 */
export type EncryptionStatus = (typeof EncryptionStatus)[keyof typeof EncryptionStatus];
export declare const ImageAnnotationType: {
    readonly Classification: "Classification";
    readonly BoundingBox: "BoundingBox";
    readonly InstanceSegmentation: "InstanceSegmentation";
};
/**
 * Annotation type of image labeling tasks.
 */
export type ImageAnnotationType = (typeof ImageAnnotationType)[keyof typeof ImageAnnotationType];
export declare const LinkedServiceLinkType: {
    readonly Synapse: "Synapse";
};
/**
 * Type of the link target.
 */
export type LinkedServiceLinkType = (typeof LinkedServiceLinkType)[keyof typeof LinkedServiceLinkType];
export declare const MediaType: {
    readonly Image: "Image";
    readonly Text: "Text";
};
/**
 * Media type of data asset.
 */
export type MediaType = (typeof MediaType)[keyof typeof MediaType];
export declare const PrivateEndpointServiceConnectionStatus: {
    readonly Pending: "Pending";
    readonly Approved: "Approved";
    readonly Rejected: "Rejected";
    readonly Disconnected: "Disconnected";
    readonly Timeout: "Timeout";
};
/**
 * Indicates whether the connection has been Approved/Rejected/Removed by the owner of the service.
 */
export type PrivateEndpointServiceConnectionStatus = (typeof PrivateEndpointServiceConnectionStatus)[keyof typeof PrivateEndpointServiceConnectionStatus];
export declare const ResourceIdentityType: {
    readonly SystemAssigned: "SystemAssigned";
    readonly SystemAssigned_UserAssigned: "SystemAssigned,UserAssigned";
    readonly UserAssigned: "UserAssigned";
    readonly None: "None";
};
/**
 * The identity type.
 */
export type ResourceIdentityType = (typeof ResourceIdentityType)[keyof typeof ResourceIdentityType];
