"use strict";
// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***
Object.defineProperty(exports, "__esModule", { value: true });
exports.TextAnnotationType = exports.SecretsType = exports.ScaleType = exports.SamplingAlgorithm = exports.ResourceIdentityAssignment = exports.ReferenceType = exports.OriginType = exports.OperatingSystemType = exports.MediaType = exports.JobType = exports.ImageAnnotationType = exports.IdentityConfigurationType = exports.Goal = exports.EndpointComputeType = exports.EndpointAuthMode = exports.EarlyTerminationPolicyType = exports.DockerSpecificationType = exports.DistributionType = exports.DatasetType = exports.DataBindingMode = exports.CredentialsType = exports.ContentsType = exports.BatchOutputAction = exports.BatchLoggingLevel = void 0;
exports.BatchLoggingLevel = {
    Info: "Info",
    Warning: "Warning",
    Debug: "Debug",
};
exports.BatchOutputAction = {
    SummaryOnly: "SummaryOnly",
    AppendRow: "AppendRow",
};
exports.ContentsType = {
    AzureBlob: "AzureBlob",
    AzureDataLakeGen1: "AzureDataLakeGen1",
    AzureDataLakeGen2: "AzureDataLakeGen2",
    AzureFile: "AzureFile",
    AzureMySql: "AzureMySql",
    AzurePostgreSql: "AzurePostgreSql",
    AzureSqlDatabase: "AzureSqlDatabase",
    GlusterFs: "GlusterFs",
};
exports.CredentialsType = {
    AccountKey: "AccountKey",
    Certificate: "Certificate",
    None: "None",
    Sas: "Sas",
    ServicePrincipal: "ServicePrincipal",
    SqlAdmin: "SqlAdmin",
};
exports.DataBindingMode = {
    Mount: "Mount",
    Download: "Download",
    Upload: "Upload",
    ReadOnlyMount: "ReadOnlyMount",
    ReadWriteMount: "ReadWriteMount",
    Direct: "Direct",
    EvalMount: "EvalMount",
    EvalDownload: "EvalDownload",
};
exports.DatasetType = {
    Simple: "Simple",
    Dataflow: "Dataflow",
};
exports.DistributionType = {
    PyTorch: "PyTorch",
    TensorFlow: "TensorFlow",
    Mpi: "Mpi",
};
exports.DockerSpecificationType = {
    Build: "Build",
    Image: "Image",
};
exports.EarlyTerminationPolicyType = {
    Bandit: "Bandit",
    MedianStopping: "MedianStopping",
    TruncationSelection: "TruncationSelection",
};
exports.EndpointAuthMode = {
    AMLToken: "AMLToken",
    Key: "Key",
    AADToken: "AADToken",
};
exports.EndpointComputeType = {
    Managed: "Managed",
    K8S: "K8S",
    AzureMLCompute: "AzureMLCompute",
};
exports.Goal = {
    Minimize: "Minimize",
    Maximize: "Maximize",
};
exports.IdentityConfigurationType = {
    Managed: "Managed",
    AMLToken: "AMLToken",
};
exports.ImageAnnotationType = {
    Classification: "Classification",
    BoundingBox: "BoundingBox",
    InstanceSegmentation: "InstanceSegmentation",
};
exports.JobType = {
    Command: "Command",
    Sweep: "Sweep",
    Labeling: "Labeling",
};
exports.MediaType = {
    Image: "Image",
    Text: "Text",
};
exports.OperatingSystemType = {
    Linux: "Linux",
    Windows: "Windows",
};
exports.OriginType = {
    Synapse: "Synapse",
};
exports.ReferenceType = {
    Id: "Id",
    DataPath: "DataPath",
    OutputPath: "OutputPath",
};
exports.ResourceIdentityAssignment = {
    SystemAssigned: "SystemAssigned",
    UserAssigned: "UserAssigned",
    SystemAssigned_UserAssigned: "SystemAssigned,UserAssigned",
    None: "None",
};
exports.SamplingAlgorithm = {
    Grid: "Grid",
    Random: "Random",
    Bayesian: "Bayesian",
};
exports.ScaleType = {
    Auto: "Auto",
    Manual: "Manual",
};
exports.SecretsType = {
    AccountKey: "AccountKey",
    Certificate: "Certificate",
    None: "None",
    Sas: "Sas",
    ServicePrincipal: "ServicePrincipal",
    SqlAdmin: "SqlAdmin",
};
exports.TextAnnotationType = {
    Classification: "Classification",
};
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaW5kZXguanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi8uLi90eXBlcy9lbnVtcy9tYWNoaW5lbGVhcm5pbmdzZXJ2aWNlcy92MjAyMTAzMDFwcmV2aWV3L2luZGV4LnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7QUFBQSxzRUFBc0U7QUFDdEUsaUZBQWlGOzs7QUFHcEUsUUFBQSxpQkFBaUIsR0FBRztJQUM3QixJQUFJLEVBQUUsTUFBTTtJQUNaLE9BQU8sRUFBRSxTQUFTO0lBQ2xCLEtBQUssRUFBRSxPQUFPO0NBQ1IsQ0FBQztBQU9FLFFBQUEsaUJBQWlCLEdBQUc7SUFDN0IsV0FBVyxFQUFFLGFBQWE7SUFDMUIsU0FBUyxFQUFFLFdBQVc7Q0FDaEIsQ0FBQztBQU9FLFFBQUEsWUFBWSxHQUFHO0lBQ3hCLFNBQVMsRUFBRSxXQUFXO0lBQ3RCLGlCQUFpQixFQUFFLG1CQUFtQjtJQUN0QyxpQkFBaUIsRUFBRSxtQkFBbUI7SUFDdEMsU0FBUyxFQUFFLFdBQVc7SUFDdEIsVUFBVSxFQUFFLFlBQVk7SUFDeEIsZUFBZSxFQUFFLGlCQUFpQjtJQUNsQyxnQkFBZ0IsRUFBRSxrQkFBa0I7SUFDcEMsU0FBUyxFQUFFLFdBQVc7Q0FDaEIsQ0FBQztBQU9FLFFBQUEsZUFBZSxHQUFHO0lBQzNCLFVBQVUsRUFBRSxZQUFZO0lBQ3hCLFdBQVcsRUFBRSxhQUFhO0lBQzFCLElBQUksRUFBRSxNQUFNO0lBQ1osR0FBRyxFQUFFLEtBQUs7SUFDVixnQkFBZ0IsRUFBRSxrQkFBa0I7SUFDcEMsUUFBUSxFQUFFLFVBQVU7Q0FDZCxDQUFDO0FBT0UsUUFBQSxlQUFlLEdBQUc7SUFDM0IsS0FBSyxFQUFFLE9BQU87SUFDZCxRQUFRLEVBQUUsVUFBVTtJQUNwQixNQUFNLEVBQUUsUUFBUTtJQUNoQixhQUFhLEVBQUUsZUFBZTtJQUM5QixjQUFjLEVBQUUsZ0JBQWdCO0lBQ2hDLE1BQU0sRUFBRSxRQUFRO0lBQ2hCLFNBQVMsRUFBRSxXQUFXO0lB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