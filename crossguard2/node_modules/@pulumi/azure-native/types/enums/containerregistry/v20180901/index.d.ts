export declare const Architecture: {
    readonly Amd64: "amd64";
    readonly X86: "x86";
    readonly Arm: "arm";
};
/**
 * The OS architecture.
 */
export type Architecture = (typeof Architecture)[keyof typeof Architecture];
export declare const BaseImageTriggerType: {
    readonly All: "All";
    readonly Runtime: "Runtime";
};
/**
 * The type of the auto trigger for base image dependency updates.
 */
export type BaseImageTriggerType = (typeof BaseImageTriggerType)[keyof typeof BaseImageTriggerType];
export declare const OS: {
    readonly Windows: "Windows";
    readonly Linux: "Linux";
};
/**
 * The operating system type required for the run.
 */
export type OS = (typeof OS)[keyof typeof OS];
export declare const SecretObjectType: {
    readonly Opaque: "Opaque";
};
/**
 * The type of the secret object which determines how the value of the secret object has to be
 * interpreted.
 */
export type SecretObjectType = (typeof SecretObjectType)[keyof typeof SecretObjectType];
export declare const SourceControlType: {
    readonly Github: "Github";
    readonly VisualStudioTeamService: "VisualStudioTeamService";
};
/**
 * The type of source control service.
 */
export type SourceControlType = (typeof SourceControlType)[keyof typeof SourceControlType];
export declare const SourceRegistryLoginMode: {
    readonly None: "None";
    readonly Default: "Default";
};
/**
 * The authentication mode which determines the source registry login scope. The credentials for the source registry
 * will be generated using the given scope. These credentials will be used to login to
 * the source registry during the run.
 */
export type SourceRegistryLoginMode = (typeof SourceRegistryLoginMode)[keyof typeof SourceRegistryLoginMode];
export declare const SourceTriggerEvent: {
    readonly Commit: "commit";
    readonly Pullrequest: "pullrequest";
};
export type SourceTriggerEvent = (typeof SourceTriggerEvent)[keyof typeof SourceTriggerEvent];
export declare const TaskStatus: {
    readonly Disabled: "Disabled";
    readonly Enabled: "Enabled";
};
/**
 * The current status of task.
 */
export type TaskStatus = (typeof TaskStatus)[keyof typeof TaskStatus];
export declare const TokenType: {
    readonly PAT: "PAT";
    readonly OAuth: "OAuth";
};
/**
 * The type of Auth token.
 */
export type TokenType = (typeof TokenType)[keyof typeof TokenType];
export declare const TriggerStatus: {
    readonly Disabled: "Disabled";
    readonly Enabled: "Enabled";
};
/**
 * The current status of trigger.
 */
export type TriggerStatus = (typeof TriggerStatus)[keyof typeof TriggerStatus];
export declare const Variant: {
    readonly V6: "v6";
    readonly V7: "v7";
    readonly V8: "v8";
};
/**
 * Variant of the CPU.
 */
export type Variant = (typeof Variant)[keyof typeof Variant];
