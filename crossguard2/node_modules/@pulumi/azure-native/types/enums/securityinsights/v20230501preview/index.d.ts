export declare const ContentType: {
    readonly AnalyticsRule: "AnalyticsRule";
    readonly Workbook: "Workbook";
};
/**
 * Content type.
 */
export type ContentType = (typeof ContentType)[keyof typeof ContentType];
export declare const DeploymentFetchStatus: {
    readonly Success: "Success";
    readonly Unauthorized: "Unauthorized";
    readonly NotFound: "NotFound";
};
/**
 * Status while fetching the last deployment.
 */
export type DeploymentFetchStatus = (typeof DeploymentFetchStatus)[keyof typeof DeploymentFetchStatus];
export declare const DeploymentResult: {
    readonly Success: "Success";
    readonly Canceled: "Canceled";
    readonly Failed: "Failed";
};
/**
 * The outcome of the deployment.
 */
export type DeploymentResult = (typeof DeploymentResult)[keyof typeof DeploymentResult];
export declare const DeploymentState: {
    readonly In_Progress: "In_Progress";
    readonly Completed: "Completed";
    readonly Queued: "Queued";
    readonly Canceling: "Canceling";
};
/**
 * Current status of the deployment.
 */
export type DeploymentState = (typeof DeploymentState)[keyof typeof DeploymentState];
export declare const EntityTimelineKind: {
    /**
     * activity
     */
    readonly Activity: "Activity";
    /**
     * bookmarks
     */
    readonly Bookmark: "Bookmark";
    /**
     * security alerts
     */
    readonly SecurityAlert: "SecurityAlert";
    /**
     * anomaly
     */
    readonly Anomaly: "Anomaly";
};
/**
 * The entity query kind
 */
export type EntityTimelineKind = (typeof EntityTimelineKind)[keyof typeof EntityTimelineKind];
export declare const RepoType: {
    readonly Github: "Github";
    readonly DevOps: "DevOps";
};
/**
 * The repository type of the source control
 */
export type RepoType = (typeof RepoType)[keyof typeof RepoType];
export declare const Version: {
    readonly V1: "V1";
    readonly V2: "V2";
};
/**
 * The version number associated with the source control
 */
export type Version = (typeof Version)[keyof typeof Version];
