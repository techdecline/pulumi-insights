"use strict";
// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***
Object.defineProperty(exports, "__esModule", { value: true });
exports.CustomEntityQueryKind = exports.ContentType = exports.ConfigurationType = exports.ConditionType = exports.AutomationRulePropertyConditionSupportedProperty = exports.AutomationRulePropertyConditionSupportedOperator = exports.AutomationRulePropertyChangedConditionSupportedPropertyType = exports.AutomationRulePropertyChangedConditionSupportedChangedType = exports.AutomationRulePropertyArrayChangedConditionSupportedChangeType = exports.AutomationRulePropertyArrayChangedConditionSupportedArrayType = exports.AttackTactic = exports.AlertSeverity = exports.AlertRuleKind = exports.AlertProperty = exports.AlertDetail = exports.AgentType = exports.ActionType = exports.v20250101preview = exports.v20241001preview = exports.v20240901 = exports.v20240401preview = exports.v20240301 = exports.v20240101preview = exports.v20231201preview = exports.v20231101 = exports.v20231001preview = exports.v20230901preview = exports.v20230801preview = exports.v20230701preview = exports.v20230601preview = exports.v20230501preview = exports.v20230401preview = exports.v20230301preview = exports.v20230201preview = exports.v20230201 = exports.v20221201preview = exports.v20221101preview = exports.v20221001preview = exports.v20220901preview = exports.v20220801preview = exports.v20220701preview = exports.v20220601preview = exports.v20220501preview = exports.v20220401preview = exports.v20220101preview = exports.v20211001preview = exports.v20210901preview = exports.v20210401 = exports.v20210301preview = exports.v20190101preview = void 0;
exports.TriggersWhen = exports.TriggersOn = exports.TriggerOperator = exports.ThreatIntelligenceResourceInnerKind = exports.SystemStatusType = exports.SystemConfigurationConnectorType = exports.SupportTier = exports.Status = exports.SourceKind = exports.Source = exports.SettingsStatus = exports.SettingKind = exports.SecurityMLAnalyticsSettingsKind = exports.SecretSource = exports.SapAuthenticationType = exports.RepoType = exports.ProviderPermissionsScope = exports.PackageKind = exports.OwnerType = exports.Operator = exports.Mode = exports.MicrosoftSecurityProductName = exports.MatchingMethod = exports.LogType = exports.LogStatusType = exports.Kind = exports.KeyVaultAuthenticationMode = exports.IngestionType = exports.IngestionMode = exports.IncidentTaskStatus = exports.IncidentStatus = exports.IncidentSeverity = exports.IncidentClassificationReason = exports.IncidentClassification = exports.HypothesisStatus = exports.HttpsConfigurationType = exports.Flag = exports.FileImportContentType = exports.FileFormat = exports.EventGroupingAggregationKind = exports.EntityType = exports.EntityTimelineKind = exports.EntityProviders = exports.EntityMappingType = exports.DeploymentState = exports.DeploymentResult = exports.DeploymentFetchStatus = exports.DataTypeState = exports.DataConnectorKind = exports.DataConnectorDefinitionKind = void 0;
exports.Version = exports.UebaDataSources = void 0;
// Export sub-modules:
const v20190101preview = require("./v20190101preview");
exports.v20190101preview = v20190101preview;
const v20210301preview = require("./v20210301preview");
exports.v20210301preview = v20210301preview;
const v20210401 = require("./v20210401");
exports.v20210401 = v20210401;
const v20210901preview = require("./v20210901preview");
exports.v20210901preview = v20210901preview;
const v20211001preview = require("./v20211001preview");
exports.v20211001preview = v20211001preview;
const v20220101preview = require("./v20220101preview");
exports.v20220101preview = v20220101preview;
const v20220401preview = require("./v20220401preview");
exports.v20220401preview = v20220401preview;
const v20220501preview = require("./v20220501preview");
exports.v20220501preview = v20220501preview;
const v20220601preview = require("./v20220601preview");
exports.v20220601preview = v20220601preview;
const v20220701preview = require("./v20220701preview");
exports.v20220701preview = v20220701preview;
const v20220801preview = require("./v20220801preview");
exports.v20220801preview = v20220801preview;
const v20220901preview = require("./v20220901preview");
exports.v20220901preview = v20220901preview;
const v20221001preview = require("./v20221001preview");
exports.v20221001preview = v20221001preview;
const v20221101preview = require("./v20221101preview");
exports.v20221101preview = v20221101preview;
const v20221201preview = require("./v20221201preview");
exports.v20221201preview = v20221201preview;
const v20230201 = require("./v20230201");
exports.v20230201 = v20230201;
const v20230201preview = require("./v20230201preview");
exports.v20230201preview = v20230201preview;
const v20230301preview = require("./v20230301preview");
exports.v20230301preview = v20230301preview;
const v20230401preview = require("./v20230401preview");
exports.v20230401preview = v20230401preview;
const v20230501preview = require("./v20230501preview");
exports.v20230501preview = v20230501preview;
const v20230601preview = require("./v20230601preview");
exports.v20230601preview = v20230601preview;
const v20230701preview = require("./v20230701preview");
exports.v20230701preview = v20230701preview;
const v20230801preview = require("./v20230801preview");
exports.v20230801preview = v20230801preview;
const v20230901preview = require("./v20230901preview");
exports.v20230901preview = v20230901preview;
const v20231001preview = require("./v20231001preview");
exports.v20231001preview = v20231001preview;
const v20231101 = require("./v20231101");
exports.v20231101 = v20231101;
const v20231201preview = require("./v20231201preview");
exports.v20231201preview = v20231201preview;
const v20240101preview = require("./v20240101preview");
exports.v20240101preview = v20240101preview;
const v20240301 = require("./v20240301");
exports.v20240301 = v20240301;
const v20240401preview = require("./v20240401preview");
exports.v20240401preview = v20240401preview;
const v20240901 = require("./v20240901");
exports.v20240901 = v20240901;
const v20241001preview = require("./v20241001preview");
exports.v20241001preview = v20241001preview;
const v20250101preview = require("./v20250101preview");
exports.v20250101preview = v20250101preview;
exports.ActionType = {
    /**
     * Modify an object's properties
     */
    ModifyProperties: "ModifyProperties",
    /**
     * Run a playbook on an object
     */
    RunPlaybook: "RunPlaybook",
};
exports.AgentType = {
    SAP: "SAP",
};
exports.AlertDetail = {
    /**
     * Alert display name
     */
    DisplayName: "DisplayName",
    /**
     * Alert severity
     */
    Severity: "Severity",
};
exports.AlertProperty = {
    /**
     * Alert's link
     */
    AlertLink: "AlertLink",
    /**
     * Confidence level property
     */
    ConfidenceLevel: "ConfidenceLevel",
    /**
     * Confidence score
     */
    ConfidenceScore: "ConfidenceScore",
    /**
     * Extended links to the alert
     */
    ExtendedLinks: "ExtendedLinks",
    /**
     * Product name alert property
     */
    ProductName: "ProductName",
    /**
     * Provider name alert property
     */
    ProviderName: "ProviderName",
    /**
     * Product component name alert property
     */
    ProductComponentName: "ProductComponentName",
    /**
     * Remediation steps alert property
     */
    RemediationSteps: "RemediationSteps",
    /**
     * Techniques alert property
     */
    Techniques: "Techniques",
};
exports.AlertRuleKind = {
    Scheduled: "Scheduled",
    MicrosoftSecurityIncidentCreation: "MicrosoftSecurityIncidentCreation",
    Fusion: "Fusion",
};
exports.AlertSeverity = {
    /**
     * High severity
     */
    High: "High",
    /**
     * Medium severity
     */
    Medium: "Medium",
    /**
     * Low severity
     */
    Low: "Low",
    /**
     * Informational severity
     */
    Informational: "Informational",
};
exports.AttackTactic = {
    Reconnaissance: "Reconnaissance",
    ResourceDevelopment: "ResourceDevelopment",
    InitialAccess: "InitialAccess",
    Execution: "Execution",
    Persistence: "Persistence",
    PrivilegeEscalation: "PrivilegeEscalation",
    DefenseEvasion: "DefenseEvasion",
    CredentialAccess: "CredentialAccess",
    Discovery: "Discovery",
    LateralMovement: "LateralMovement",
    Collection: "Collection",
    Exfiltration: "Exfiltration",
    CommandAndControl: "CommandAndControl",
    Impact: "Impact",
    PreAttack: "PreAttack",
    ImpairProcessControl: "ImpairProcessControl",
    InhibitResponseFunction: "InhibitResponseFunction",
};
exports.AutomationRulePropertyArrayChangedConditionSupportedArrayType = {
    /**
     * Evaluate the condition on the alerts
     */
    Alerts: "Alerts",
    /**
     * Evaluate the condition on the labels
     */
    Labels: "Labels",
    /**
     * Evaluate the condition on the tactics
     */
    Tactics: "Tactics",
    /**
     * Evaluate the condition on the comments
     */
    Comments: "Comments",
};
exports.AutomationRulePropertyArrayChangedConditionSupportedChangeType = {
    /**
     * Evaluate the condition on items added to the array
     */
    Added: "Added",
};
exports.AutomationRulePropertyChangedConditionSupportedChangedType = {
    /**
     * Evaluate the condition on the previous value of the property
     */
    ChangedFrom: "ChangedFrom",
    /**
     * Evaluate the condition on the updated value of the property
     */
    ChangedTo: "ChangedTo",
};
exports.AutomationRulePropertyChangedConditionSupportedPropertyType = {
    /**
     * Evaluate the condition on the incident severity
     */
    IncidentSeverity: "IncidentSeverity",
    /**
     * Evaluate the condition on the incident status
     */
    IncidentStatus: "IncidentStatus",
    /**
     * Evaluate the condition on the incident owner
     */
    IncidentOwner: "IncidentOwner",
};
exports.AutomationRulePropertyConditionSupportedOperator = {
    /**
     * Evaluates if the property equals at least one of the condition values
     */
    Equals: "Equals",
    /**
     * Evaluates if the property does not equal any of the condition values
     */
    NotEquals: "NotEquals",
    /**
     * Evaluates if the property contains at least one of the condition values
     */
    Contains: "Contains",
    /**
     * Evaluates if the property does not contain any of the condition values
     */
    NotContains: "NotContains",
    /**
     * Evaluates if the property starts with any of the condition values
     */
    StartsWith: "StartsWith",
    /**
     * Evaluates if the property does not start with any of the condition values
     */
    NotStartsWith: "NotStartsWith",
    /**
     * Evaluates if the property ends with any of the condition values
     */
    EndsWith: "EndsWith",
    /**
     * Evaluates if the property does not end with any of the condition values
     */
    NotEndsWith: "NotEndsWith",
};
exports.AutomationRulePropertyConditionSupportedProperty = {
    /**
     * The title of the incident
     */
    IncidentTitle: "IncidentTitle",
    /**
     * The description of the incident
     */
    IncidentDescription: "IncidentDescription",
    /**
     * The severity of the incident
     */
    IncidentSeverity: "IncidentSeverity",
    /**
     * The status of the incident
     */
    IncidentStatus: "IncidentStatus",
    /**
     * The related Analytic rule ids of the incident
     */
    IncidentRelatedAnalyticRuleIds: "IncidentRelatedAnalyticRuleIds",
    /**
     * The tactics of the incident
     */
    IncidentTactics: "IncidentTactics",
    /**
     * The labels of the incident
     */
    IncidentLabel: "IncidentLabel",
    /**
     * The provider name of the incident
     */
    IncidentProviderName: "IncidentProviderName",
    /**
     * The update source of the incident
     */
    IncidentUpdatedBySource: "IncidentUpdatedBySource",
    /**
     * The account Azure Active Directory tenant id
     */
    AccountAadTenantId: "AccountAadTenantId",
    /**
     * The account Azure Active Directory user id
     */
    AccountAadUserId: "AccountAadUserId",
    /**
     * The account name
     */
    AccountName: "AccountName",
    /**
     * The account NetBIOS domain name
     */
    AccountNTDomain: "AccountNTDomain",
    /**
     * The account Azure Active Directory Passport User ID
     */
    AccountPUID: "AccountPUID",
    /**
     * The account security identifier
     */
    AccountSid: "AccountSid",
    /**
     * The account unique identifier
     */
    AccountObjectGuid: "AccountObjectGuid",
    /**
     * The account user principal name suffix
     */
    AccountUPNSuffix: "AccountUPNSuffix",
    /**
     * The name of the product of the alert
     */
    AlertProductNames: "AlertProductNames",
    /**
     * The analytic rule ids of the alert
     */
    AlertAnalyticRuleIds: "AlertAnalyticRuleIds",
    /**
     * The Azure resource id
     */
    AzureResourceResourceId: "AzureResourceResourceId",
    /**
     * The Azure resource subscription id
     */
    AzureResourceSubscriptionId: "AzureResourceSubscriptionId",
    /**
     * The cloud application identifier
     */
    CloudApplicationAppId: "CloudApplicationAppId",
    /**
     * The cloud application name
     */
    CloudApplicationAppName: "CloudApplicationAppName",
    /**
     * The dns record domain name
     */
    DNSDomainName: "DNSDomainName",
    /**
     * The file directory full path
     */
    FileDirectory: "FileDirectory",
    /**
     * The file name without path
     */
    FileName: "FileName",
    /**
     * The file hash value
     */
    FileHashValue: "FileHashValue",
    /**
     * The host Azure resource id
     */
    HostAzureID: "HostAzureID",
    /**
     * The host name without domain
     */
    HostName: "HostName",
    /**
     * The host NetBIOS name
     */
    HostNetBiosName: "HostNetBiosName",
    /**
     * The host NT domain
     */
    HostNTDomain: "HostNTDomain",
    /**
     * The host operating system
     */
    HostOSVersion: "HostOSVersion",
    /**
     * "The IoT device id
     */
    IoTDeviceId: "IoTDeviceId",
    /**
     * The IoT device name
     */
    IoTDeviceName: "IoTDeviceName",
    /**
     * The IoT device type
     */
    IoTDeviceType: "IoTDeviceType",
    /**
     * The IoT device vendor
     */
    IoTDeviceVendor: "IoTDeviceVendor",
    /**
     * The IoT device model
     */
    IoTDeviceModel: "IoTDeviceModel",
    /**
     * The IoT device operating system
     */
    IoTDeviceOperatingSystem: "IoTDeviceOperatingSystem",
    /**
     * The IP address
     */
    IPAddress: "IPAddress",
    /**
     * The mailbox display name
     */
    MailboxDisplayName: "MailboxDisplayName",
    /**
     * The mailbox primary address
     */
    MailboxPrimaryAddress: "MailboxPrimaryAddress",
    /**
     * The mailbox user principal name
     */
    MailboxUPN: "MailboxUPN",
    /**
     * The mail message delivery action
     */
    MailMessageDeliveryAction: "MailMessageDeliveryAction",
    /**
     * The mail message delivery location
     */
    MailMessageDeliveryLocation: "MailMessageDeliveryLocation",
    /**
     * The mail message recipient
     */
    MailMessageRecipient: "MailMessageRecipient",
    /**
     * The mail message sender IP address
     */
    MailMessageSenderIP: "MailMessageSenderIP",
    /**
     * The mail message subject
     */
    MailMessageSubject: "MailMessageSubject",
    /**
     * The mail message P1 sender
     */
    MailMessageP1Sender: "MailMessageP1Sender",
    /**
     * The mail message P2 sender
     */
    MailMessageP2Sender: "MailMessageP2Sender",
    /**
     * The malware category
     */
    MalwareCategory: "MalwareCategory",
    /**
     * The malware name
     */
    MalwareName: "MalwareName",
    /**
     * The process execution command line
     */
    ProcessCommandLine: "ProcessCommandLine",
    /**
     * The process id
     */
    ProcessId: "ProcessId",
    /**
     * The registry key path
     */
    RegistryKey: "RegistryKey",
    /**
     * The registry key value in string formatted representation
     */
    RegistryValueData: "RegistryValueData",
    /**
     * The url
     */
    Url: "Url",
};
exports.ConditionType = {
    /**
     * Evaluate an object property value
     */
    Property: "Property",
    /**
     * Evaluate an object property changed value
     */
    PropertyChanged: "PropertyChanged",
    /**
     * Evaluate an object array property changed value
     */
    PropertyArrayChanged: "PropertyArrayChanged",
};
exports.ConfigurationType = {
    SAP: "SAP",
};
exports.ContentType = {
    AnalyticsRule: "AnalyticsRule",
    Workbook: "Workbook",
};
exports.CustomEntityQueryKind = {
    Activity: "Activity",
};
exports.DataConnectorDefinitionKind = {
    Customizable: "Customizable",
};
exports.DataConnectorKind = {
    AzureActiveDirectory: "AzureActiveDirectory",
    AzureSecurityCenter: "AzureSecurityCenter",
    MicrosoftCloudAppSecurity: "MicrosoftCloudAppSecurity",
    ThreatIntelligence: "ThreatIntelligence",
    Office365: "Office365",
    AmazonWebServicesCloudTrail: "AmazonWebServicesCloudTrail",
    AzureAdvancedThreatProtection: "AzureAdvancedThreatProtection",
    MicrosoftDefenderAdvancedThreatProtection: "MicrosoftDefenderAdvancedThreatProtection",
};
exports.DataTypeState = {
    Enabled: "Enabled",
    Disabled: "Disabled",
};
exports.DeploymentFetchStatus = {
    Success: "Success",
    Unauthorized: "Unauthorized",
    NotFound: "NotFound",
};
exports.DeploymentResult = {
    Success: "Success",
    Canceled: "Canceled",
    Failed: "Failed",
};
exports.DeploymentState = {
    In_Progress: "In_Progress",
    Completed: "Completed",
    Queued: "Queued",
    Canceling: "Canceling",
};
exports.EntityMappingType = {
    /**
     * User account entity type
     */
    Account: "Account",
    /**
     * Host entity type
     */
    Host: "Host",
    /**
     * IP address entity type
     */
    IP: "IP",
    /**
     * Malware entity type
     */
    Malware: "Malware",
    /**
     * System file entity type
     */
    File: "File",
    /**
     * Process entity type
     */
    Process: "Process",
    /**
     * Cloud app entity type
     */
    CloudApplication: "CloudApplication",
    /**
     * DNS entity type
     */
    DNS: "DNS",
    /**
     * Azure resource entity type
     */
    AzureResource: "AzureResource",
    /**
     * File-hash entity type
     */
    FileHash: "FileHash",
    /**
     * Registry key entity type
     */
    RegistryKey: "RegistryKey",
    /**
     * Registry value entity type
     */
    RegistryValue: "RegistryValue",
    /**
     * Security group entity type
     */
    SecurityGroup: "SecurityGroup",
    /**
     * URL entity type
     */
    URL: "URL",
    /**
     * Mailbox entity type
     */
    Mailbox: "Mailbox",
    /**
     * Mail cluster entity type
     */
    MailCluster: "MailCluster",
    /**
     * Mail message entity type
     */
    MailMessage: "MailMessage",
    /**
     * Submission mail entity type
     */
    SubmissionMail: "SubmissionMail",
};
exports.EntityProviders = {
    ActiveDirectory: "ActiveDirectory",
    AzureActiveDirectory: "AzureActiveDirectory",
};
exports.EntityTimelineKind = {
    /**
     * activity
     */
    Activity: "Activity",
    /**
     * bookmarks
     */
    Bookmark: "Bookmark",
    /**
     * security alerts
     */
    SecurityAlert: "SecurityAlert",
    /**
     * anomaly
     */
    Anomaly: "Anomaly",
};
exports.EntityType = {
    /**
     * Entity represents account in the system.
     */
    Account: "Account",
    /**
     * Entity represents host in the system.
     */
    Host: "Host",
    /**
     * Entity represents file in the system.
     */
    File: "File",
    /**
     * Entity represents azure resource in the system.
     */
    AzureResource: "AzureResource",
    /**
     * Entity represents cloud application in the system.
     */
    CloudApplication: "CloudApplication",
    /**
     * Entity represents dns in the system.
     */
    DNS: "DNS",
    /**
     * Entity represents file hash in the system.
     */
    FileHash: "FileHash",
    /**
     * Entity represents ip in the system.
     */
    IP: "IP",
    /**
     * Entity represents malware in the system.
     */
    Malware: "Malware",
    /**
     * Entity represents process in the system.
     */
    Process: "Process",
    /**
     * Entity represents registry key in the system.
     */
    RegistryKey: "RegistryKey",
    /**
     * Entity represents registry value in the system.
     */
    RegistryValue: "RegistryValue",
    /**
     * Entity represents security group in the system.
     */
    SecurityGroup: "SecurityGroup",
    /**
     * Entity represents url in the system.
     */
    URL: "URL",
    /**
     * Entity represents IoT device in the system.
     */
    IoTDevice: "IoTDevice",
    /**
     * Entity represents security alert in the system.
     */
    SecurityAlert: "SecurityAlert",
    /**
     * Entity represents HuntingBookmark in the system.
     */
    HuntingBookmark: "HuntingBookmark",
    /**
     * Entity represents mail cluster in the system.
     */
    MailCluster: "MailCluster",
    /**
     * Entity represents mail message in the system.
     */
    MailMessage: "MailMessage",
    /**
     * Entity represents mailbox in the system.
     */
    Mailbox: "Mailbox",
    /**
     * Entity represents submission mail in the system.
     */
    SubmissionMail: "SubmissionMail",
    /**
     * Entity represents network interface in the system.
     */
    Nic: "Nic",
};
exports.EventGroupingAggregationKind = {
    SingleAlert: "SingleAlert",
    AlertPerResult: "AlertPerResult",
};
exports.FileFormat = {
    /**
     * A CSV file.
     */
    CSV: "CSV",
    /**
     * A JSON file.
     */
    JSON: "JSON",
    /**
     * A file of other format.
     */
    Unspecified: "Unspecified",
};
exports.FileImportContentType = {
    /**
     * File containing records with the core fields of an indicator, plus the observables to construct the STIX pattern.
     */
    BasicIndicator: "BasicIndicator",
    /**
     * File containing STIX indicators.
     */
    StixIndicator: "StixIndicator",
    /**
     * File containing other records.
     */
    Unspecified: "Unspecified",
};
exports.Flag = {
    True: "true",
    False: "false",
};
exports.HttpsConfigurationType = {
    HttpOnly: "HttpOnly",
    HttpsWithSslVerification: "HttpsWithSslVerification",
    HttpsWithoutSslVerification: "HttpsWithoutSslVerification",
};
exports.HypothesisStatus = {
    Unknown: "Unknown",
    Invalidated: "Invalidated",
    Validated: "Validated",
};
exports.IncidentClassification = {
    /**
     * Incident classification was undetermined
     */
    Undetermined: "Undetermined",
    /**
     * Incident was true positive
     */
    TruePositive: "TruePositive",
    /**
     * Incident was benign positive
     */
    BenignPositive: "BenignPositive",
    /**
     * Incident was false positive
     */
    FalsePositive: "FalsePositive",
};
exports.IncidentClassificationReason = {
    /**
     * Classification reason was suspicious activity
     */
    SuspiciousActivity: "SuspiciousActivity",
    /**
     * Classification reason was suspicious but expected
     */
    SuspiciousButExpected: "SuspiciousButExpected",
    /**
     * Classification reason was incorrect alert logic
     */
    IncorrectAlertLogic: "IncorrectAlertLogic",
    /**
     * Classification reason was inaccurate data
     */
    InaccurateData: "InaccurateData",
};
exports.IncidentSeverity = {
    /**
     * High severity
     */
    High: "High",
    /**
     * Medium severity
     */
    Medium: "Medium",
    /**
     * Low severity
     */
    Low: "Low",
    /**
     * Informational severity
     */
    Informational: "Informational",
};
exports.IncidentStatus = {
    /**
     * An active incident which isn't being handled currently
     */
    New: "New",
    /**
     * An active incident which is being handled
     */
    Active: "Active",
    /**
     * A non-active incident
     */
    Closed: "Closed",
};
exports.IncidentTaskStatus = {
    /**
     * A new task
     */
    New: "New",
    /**
     * A completed task
     */
    Completed: "Completed",
};
exports.IngestionMode = {
    /**
     * No records should be ingested when invalid records are detected.
     */
    IngestOnlyIfAllAreValid: "IngestOnlyIfAllAreValid",
    /**
     * Valid records should still be ingested when invalid records are detected.
     */
    IngestAnyValidRecords: "IngestAnyValidRecords",
    /**
     * Unspecified
     */
    Unspecified: "Unspecified",
};
exports.IngestionType = {
    Full: "Full",
    Incremental: "Incremental",
};
exports.KeyVaultAuthenticationMode = {
    ManagedIdentity: "ManagedIdentity",
    ServicePrincipal: "ServicePrincipal",
};
exports.Kind = {
    DataConnector: "DataConnector",
    DataType: "DataType",
    Workbook: "Workbook",
    WorkbookTemplate: "WorkbookTemplate",
    Playbook: "Playbook",
    PlaybookTemplate: "PlaybookTemplate",
    AnalyticsRuleTemplate: "AnalyticsRuleTemplate",
    AnalyticsRule: "AnalyticsRule",
    HuntingQuery: "HuntingQuery",
    InvestigationQuery: "InvestigationQuery",
    Parser: "Parser",
    Watchlist: "Watchlist",
    WatchlistTemplate: "WatchlistTemplate",
    Solution: "Solution",
    AzureFunction: "AzureFunction",
    LogicAppsCustomConnector: "LogicAppsCustomConnector",
    AutomationRule: "AutomationRule",
};
exports.LogStatusType = {
    Enabled: "Enabled",
    Disabled: "Disabled",
};
exports.LogType = {
    AbapAuditLog: "AbapAuditLog",
    AbapJobLog: "AbapJobLog",
    AbapSpoolLog: "AbapSpoolLog",
    AbapSpoolOutputLog: "AbapSpoolOutputLog",
    AbapChangeDocsLog: "AbapChangeDocsLog",
    AbapAppLog: "AbapAppLog",
    AbapWorkflowLog: "AbapWorkflowLog",
    AbapCrLog: "AbapCrLog",
    AbapTableDataLog: "AbapTableDataLog",
    AbapFilesLogs: "AbapFilesLogs",
    JavaFilesLogs: "JavaFilesLogs",
    AGRTCODES: "AGRTCODES",
    USR01: "USR01",
    USR02: "USR02",
    AGR1251: "AGR1251",
    AGRUSERS: "AGRUSERS",
    AGRPROF: "AGRPROF",
    UST04: "UST04",
    USR21: "USR21",
    ADR6: "ADR6",
    ADCP: "ADCP",
    USR05: "USR05",
    USGRPUSER: "USGRPUSER",
    USERADDR: "USERADDR",
    DEVACCESS: "DEVACCESS",
    AGRDEFINE: "AGRDEFINE",
    PAHI: "PAHI",
    AGRAGRS: "AGRAGRS",
    USRSTAMP: "USRSTAMP",
    AGRFLAGS: "AGRFLAGS",
    SNCSYSACL: "SNCSYSACL",
    USRACL: "USRACL",
};
exports.MatchingMethod = {
    /**
     * Grouping alerts into a single incident if all the entities match
     */
    AllEntities: "AllEntities",
    /**
     * Grouping any alerts triggered by this rule into a single incident
     */
    AnyAlert: "AnyAlert",
    /**
     * Grouping alerts into a single incident if the selected entities, custom details and alert details match
     */
    Selected: "Selected",
};
exports.MicrosoftSecurityProductName = {
    Microsoft_Cloud_App_Security: "Microsoft Cloud App Security",
    Azure_Security_Center: "Azure Security Center",
    Azure_Advanced_Threat_Protection: "Azure Advanced Threat Protection",
    Azure_Active_Directory_Identity_Protection: "Azure Active Directory Identity Protection",
    Azure_Security_Center_for_IoT: "Azure Security Center for IoT",
};
exports.Mode = {
    /**
     * The workspace manager configuration is enabled
     */
    Enabled: "Enabled",
    /**
     * The workspace manager configuration is disabled
     */
    Disabled: "Disabled",
};
exports.Operator = {
    AND: "AND",
    OR: "OR",
};
exports.OwnerType = {
    /**
     * The incident owner type is unknown
     */
    Unknown: "Unknown",
    /**
     * The incident owner type is an AAD user
     */
    User: "User",
    /**
     * The incident owner type is an AAD group
     */
    Group: "Group",
};
exports.PackageKind = {
    Solution: "Solution",
    Standalone: "Standalone",
};
exports.ProviderPermissionsScope = {
    Subscription: "Subscription",
    ResourceGroup: "ResourceGroup",
    Workspace: "Workspace",
};
exports.RepoType = {
    Github: "Github",
    DevOps: "DevOps",
};
exports.SapAuthenticationType = {
    UsernamePassword: "UsernamePassword",
    Snc: "Snc",
    SncWithUsernamePassword: "SncWithUsernamePassword",
};
exports.SecretSource = {
    AzureKeyVault: "AzureKeyVault",
};
exports.SecurityMLAnalyticsSettingsKind = {
    Anomaly: "Anomaly",
};
exports.SettingKind = {
    Anomalies: "Anomalies",
    EyesOn: "EyesOn",
    EntityAnalytics: "EntityAnalytics",
    Ueba: "Ueba",
};
exports.SettingsStatus = {
    /**
     * Anomaly settings status in Production mode
     */
    Production: "Production",
    /**
     * Anomaly settings status in Flighting mode
     */
    Flighting: "Flighting",
};
exports.Source = {
    Local_file: "Local file",
    Remote_storage: "Remote storage",
};
exports.SourceKind = {
    LocalWorkspace: "LocalWorkspace",
    Community: "Community",
    Solution: "Solution",
    SourceRepository: "SourceRepository",
};
exports.Status = {
    New: "New",
    Active: "Active",
    Closed: "Closed",
};
exports.SupportTier = {
    Microsoft: "Microsoft",
    Partner: "Partner",
    Community: "Community",
};
exports.SystemConfigurationConnectorType = {
    Rfc: "Rfc",
    SapControl: "SapControl",
};
exports.SystemStatusType = {
    Running: "Running",
    Stopped: "Stopped",
};
exports.ThreatIntelligenceResourceInnerKind = {
    /**
     * Entity represents threat intelligence indicator in the system.
     */
    Indicator: "indicator",
};
exports.TriggerOperator = {
    GreaterThan: "GreaterThan",
    LessThan: "LessThan",
    Equal: "Equal",
    NotEqual: "NotEqual",
};
exports.TriggersOn = {
    /**
     * Trigger on Incidents
     */
    Incidents: "Incidents",
    /**
     * Trigger on Alerts
     */
    Alerts: "Alerts",
};
exports.TriggersWhen = {
    /**
     * Trigger on created objects
     */
    Created: "Created",
    /**
     * Trigger on updated objects
     */
    Updated: "Updated",
};
exports.UebaDataSources = {
    AuditLogs: "AuditLogs",
    AzureActivity: "AzureActivity",
    SecurityEvent: "SecurityEvent",
    SigninLogs: "SigninLogs",
};
exports.Version = {
    V1: "V1",
    V2: "V2",
};
//# sourceMappingURL=data:application/json;base64,