export declare const BillingManagementTenantState: {
    readonly Other: "Other";
    readonly NotAllowed: "NotAllowed";
    readonly Active: "Active";
    readonly Revoked: "Revoked";
};
/**
 * The state determines whether users from the associated tenant can be assigned roles for commerce activities like viewing and downloading invoices, managing payments, and making purchases.
 */
export type BillingManagementTenantState = (typeof BillingManagementTenantState)[keyof typeof BillingManagementTenantState];
export declare const InvoiceSectionState: {
    readonly Other: "Other";
    readonly Active: "Active";
    readonly Deleted: "Deleted";
    readonly Disabled: "Disabled";
    readonly UnderReview: "UnderReview";
    readonly Warned: "Warned";
    readonly Restricted: "Restricted";
};
/**
 * Identifies the status of an invoice section.
 */
export type InvoiceSectionState = (typeof InvoiceSectionState)[keyof typeof InvoiceSectionState];
export declare const InvoiceSectionStateReasonCode: {
    readonly Other: "Other";
    readonly PastDue: "PastDue";
    readonly UnusualActivity: "UnusualActivity";
    readonly SpendingLimitReached: "SpendingLimitReached";
    readonly SpendingLimitExpired: "SpendingLimitExpired";
};
/**
 * Reason for the specified invoice section status.
 */
export type InvoiceSectionStateReasonCode = (typeof InvoiceSectionStateReasonCode)[keyof typeof InvoiceSectionStateReasonCode];
export declare const ProvisioningTenantState: {
    readonly Other: "Other";
    readonly NotRequested: "NotRequested";
    readonly Active: "Active";
    readonly Pending: "Pending";
    readonly BillingRequestExpired: "BillingRequestExpired";
    readonly BillingRequestDeclined: "BillingRequestDeclined";
    readonly Revoked: "Revoked";
};
/**
 * The state determines whether subscriptions and licenses can be provisioned in the associated tenant. It can be set to 'Pending' to initiate a billing request.
 */
export type ProvisioningTenantState = (typeof ProvisioningTenantState)[keyof typeof ProvisioningTenantState];
