"use strict";
// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***
Object.defineProperty(exports, "__esModule", { value: true });
exports.SecurityPolicyType = exports.SecretType = exports.RuleQueryStringCachingBehavior = exports.RuleIsCompressionEnabled = exports.RuleCacheBehavior = exports.ResponseBasedDetectedErrorTypes = exports.RequestUriOperator = exports.RequestMethodOperator = exports.RequestHeaderOperator = exports.RequestBodyOperator = exports.RemoteAddressOperator = exports.RedirectType = exports.QueryStringOperator = exports.QueryStringCachingBehavior = exports.QueryStringBehavior = exports.ProbeProtocol = exports.PostArgsOperator = exports.PolicyMode = exports.PolicyEnabledState = exports.ParamIndicator = exports.OptimizationType = exports.Operator = exports.MatchVariable = exports.MatchProcessingBehavior = exports.ManagedServiceIdentityType = exports.ManagedRuleEnabledState = exports.LinkToDefaultDomain = exports.IsDeviceOperator = exports.HttpsRedirect = exports.HttpVersionOperator = exports.HostNameOperator = exports.HealthProbeRequestType = exports.HeaderAction = exports.GeoFilterActions = exports.ForwardingProtocol = exports.EnabledState = exports.DestinationProtocol = exports.DeliveryRuleAction = exports.CustomRuleEnabledState = exports.CookiesOperator = exports.ClientPortOperator = exports.CacheType = exports.CacheBehavior = exports.AutoGeneratedDomainNameLabelScope = exports.Algorithm = exports.AfdQueryStringCachingBehavior = exports.AfdMinimumTlsVersion = exports.AfdCertificateType = exports.ActionType = exports.AFDEndpointProtocols = void 0;
exports.WafMatchVariable = exports.UrlPathOperator = exports.UrlFileNameOperator = exports.UrlFileExtensionOperator = exports.TransformType = exports.Transform = exports.SslProtocolOperator = exports.SslProtocol = exports.SocketAddrOperator = exports.SkuName = exports.SharedPrivateLinkResourceStatus = exports.ServerPortOperator = void 0;
exports.AFDEndpointProtocols = {
    Http: "Http",
    Https: "Https",
};
exports.ActionType = {
    Allow: "Allow",
    Block: "Block",
    Log: "Log",
    Redirect: "Redirect",
};
exports.AfdCertificateType = {
    CustomerCertificate: "CustomerCertificate",
    ManagedCertificate: "ManagedCertificate",
    AzureFirstPartyManagedCertificate: "AzureFirstPartyManagedCertificate",
};
exports.AfdMinimumTlsVersion = {
    TLS10: "TLS10",
    TLS12: "TLS12",
};
exports.AfdQueryStringCachingBehavior = {
    IgnoreQueryString: "IgnoreQueryString",
    UseQueryString: "UseQueryString",
    IgnoreSpecifiedQueryStrings: "IgnoreSpecifiedQueryStrings",
    IncludeSpecifiedQueryStrings: "IncludeSpecifiedQueryStrings",
};
exports.Algorithm = {
    SHA256: "SHA256",
};
exports.AutoGeneratedDomainNameLabelScope = {
    TenantReuse: "TenantReuse",
    SubscriptionReuse: "SubscriptionReuse",
    ResourceGroupReuse: "ResourceGroupReuse",
    NoReuse: "NoReuse",
};
exports.CacheBehavior = {
    BypassCache: "BypassCache",
    Override: "Override",
    SetIfMissing: "SetIfMissing",
};
exports.CacheType = {
    All: "All",
};
exports.ClientPortOperator = {
    Any: "Any",
    Equal: "Equal",
    Contains: "Contains",
    BeginsWith: "BeginsWith",
    EndsWith: "EndsWith",
    LessThan: "LessThan",
    LessThanOrEqual: "LessThanOrEqual",
    GreaterThan: "GreaterThan",
    GreaterThanOrEqual: "GreaterThanOrEqual",
    RegEx: "RegEx",
};
exports.CookiesOperator = {
    Any: "Any",
    Equal: "Equal",
    Contains: "Contains",
    BeginsWith: "BeginsWith",
    EndsWith: "EndsWith",
    LessThan: "LessThan",
    LessThanOrEqual: "LessThanOrEqual",
    GreaterThan: "GreaterThan",
    GreaterThanOrEqual: "GreaterThanOrEqual",
    RegEx: "RegEx",
};
exports.CustomRuleEnabledState = {
    Disabled: "Disabled",
    Enabled: "Enabled",
};
exports.DeliveryRuleAction = {
    CacheExpiration: "CacheExpiration",
    CacheKeyQueryString: "CacheKeyQueryString",
    ModifyRequestHeader: "ModifyRequestHeader",
    ModifyResponseHeader: "ModifyResponseHeader",
    UrlRedirect: "UrlRedirect",
    UrlRewrite: "UrlRewrite",
    UrlSigning: "UrlSigning",
    OriginGroupOverride: "OriginGroupOverride",
    RouteConfigurationOverride: "RouteConfigurationOverride",
    AfdUrlSigning: "AfdUrlSigning",
};
exports.DestinationProtocol = {
    MatchRequest: "MatchRequest",
    Http: "Http",
    Https: "Https",
};
exports.EnabledState = {
    Enabled: "Enabled",
    Disabled: "Disabled",
};
exports.ForwardingProtocol = {
    HttpOnly: "HttpOnly",
    HttpsOnly: "HttpsOnly",
    MatchRequest: "MatchRequest",
};
exports.GeoFilterActions = {
    Block: "Block",
    Allow: "Allow",
};
exports.HeaderAction = {
    Append: "Append",
    Overwrite: "Overwrite",
    Delete: "Delete",
};
exports.HealthProbeRequestType = {
    NotSet: "NotSet",
    GET: "GET",
    HEAD: "HEAD",
};
exports.HostNameOperator = {
    Any: "Any",
    Equal: "Equal",
    Contains: "Contains",
    BeginsWith: "BeginsWith",
    EndsWith: "EndsWith",
    LessThan: "LessThan",
    LessThanOrEqual: "LessThanOrEqual",
    GreaterThan: "GreaterThan",
    GreaterThanOrEqual: "GreaterThanOrEqual",
    RegEx: "RegEx",
};
exports.HttpVersionOperator = {
    Equal: "Equal",
};
exports.HttpsRedirect = {
    Enabled: "Enabled",
    Disabled: "Disabled",
};
exports.IsDeviceOperator = {
    Equal: "Equal",
};
exports.LinkToDefaultDomain = {
    Enabled: "Enabled",
    Disabled: "Disabled",
};
exports.ManagedRuleEnabledState = {
    Disabled: "Disabled",
    Enabled: "Enabled",
};
exports.ManagedServiceIdentityType = {
    None: "None",
    SystemAssigned: "SystemAssigned",
    UserAssigned: "UserAssigned",
    SystemAssigned_UserAssigned: "SystemAssigned, UserAssigned",
};
exports.MatchProcessingBehavior = {
    Continue: "Continue",
    Stop: "Stop",
};
exports.MatchVariable = {
    RemoteAddress: "RemoteAddress",
    RequestMethod: "RequestMethod",
    QueryString: "QueryString",
    PostArgs: "PostArgs",
    RequestUri: "RequestUri",
    RequestHeader: "RequestHeader",
    RequestBody: "RequestBody",
    RequestScheme: "RequestScheme",
    UrlPath: "UrlPath",
    UrlFileExtension: "UrlFileExtension",
    UrlFileName: "UrlFileName",
    HttpVersion: "HttpVersion",
    Cookies: "Cookies",
    IsDevice: "IsDevice",
    SocketAddr: "SocketAddr",
    ClientPort: "ClientPort",
    ServerPort: "ServerPort",
    HostName: "HostName",
    SslProtocol: "SslProtocol",
};
exports.Operator = {
    Any: "Any",
    IPMatch: "IPMatch",
    GeoMatch: "GeoMatch",
    Equal: "Equal",
    Contains: "Contains",
    LessThan: "LessThan",
    GreaterThan: "GreaterThan",
    LessThanOrEqual: "LessThanOrEqual",
    GreaterThanOrEqual: "GreaterThanOrEqual",
    BeginsWith: "BeginsWith",
    EndsWith: "EndsWith",
    RegEx: "RegEx",
};
exports.OptimizationType = {
    GeneralWebDelivery: "GeneralWebDelivery",
    GeneralMediaStreaming: "GeneralMediaStreaming",
    VideoOnDemandMediaStreaming: "VideoOnDemandMediaStreaming",
    LargeFileDownload: "LargeFileDownload",
    DynamicSiteAcceleration: "DynamicSiteAcceleration",
};
exports.ParamIndicator = {
    Expires: "Expires",
    KeyId: "KeyId",
    Signature: "Signature",
};
exports.PolicyEnabledState = {
    Disabled: "Disabled",
    Enabled: "Enabled",
};
exports.PolicyMode = {
    Prevention: "Prevention",
    Detection: "Detection",
};
exports.PostArgsOperator = {
    Any: "Any",
    Equal: "Equal",
    Contains: "Contains",
    BeginsWith: "BeginsWith",
    EndsWith: "EndsWith",
    LessThan: "LessThan",
    LessThanOrEqual: "LessThanOrEqual",
    GreaterThan: "GreaterThan",
    GreaterThanOrEqual: "GreaterThanOrEqual",
    RegEx: "RegEx",
};
exports.ProbeProtocol = {
    NotSet: "NotSet",
    Http: "Http",
    Https: "Https",
};
exports.QueryStringBehavior = {
    Include: "Include",
    IncludeAll: "IncludeAll",
    Exclude: "Exclude",
    ExcludeAll: "ExcludeAll",
};
exports.QueryStringCachingBehavior = {
    IgnoreQueryString: "IgnoreQueryString",
    BypassCaching: "BypassCaching",
    UseQueryString: "UseQueryString",
    NotSet: "NotSet",
};
exports.QueryStringOperator = {
    Any: "Any",
    Equal: "Equal",
    Contains: "Contains",
    BeginsWith: "BeginsWith",
    EndsWith: "EndsWith",
    LessThan: "LessThan",
    LessThanOrEqual: "LessThanOrEqual",
    GreaterThan: "GreaterThan",
    GreaterThanOrEqual: "GreaterThanOrEqual",
    RegEx: "RegEx",
};
exports.RedirectType = {
    Moved: "Moved",
    Found: "Found",
    TemporaryRedirect: "TemporaryRedirect",
    PermanentRedirect: "PermanentRedirect",
};
exports.RemoteAddressOperator = {
    Any: "Any",
    IPMatch: "IPMatch",
    GeoMatch: "GeoMatch",
};
exports.RequestBodyOperator = {
    Any: "Any",
    Equal: "Equal",
    Contains: "Contains",
    BeginsWith: "BeginsWith",
    EndsWith: "EndsWith",
    LessThan: "LessThan",
    LessThanOrEqual: "LessThanOrEqual",
    GreaterThan: "GreaterThan",
    GreaterThanOrEqual: "GreaterThanOrEqual",
    RegEx: "RegEx",
};
exports.RequestHeaderOperator = {
    Any: "Any",
    Equal: "Equal",
    Contains: "Contains",
    BeginsWith: "BeginsWith",
    EndsWith: "EndsWith",
    LessThan: "LessThan",
    LessThanOrEqual: "LessThanOrEqual",
    GreaterThan: "GreaterThan",
    GreaterThanOrEqual: "GreaterThanOrEqual",
    RegEx: "RegEx",
};
exports.RequestMethodOperator = {
    Equal: "Equal",
};
exports.RequestUriOperator = {
    Any: "Any",
    Equal: "Equal",
    Contains: "Contains",
    BeginsWith: "BeginsWith",
    EndsWith: "EndsWith",
    LessThan: "LessThan",
    LessThanOrEqual: "LessThanOrEqual",
    GreaterThan: "GreaterThan",
    GreaterThanOrEqual: "GreaterThanOrEqual",
    RegEx: "RegEx",
};
exports.ResponseBasedDetectedErrorTypes = {
    None: "None",
    TcpErrorsOnly: "TcpErrorsOnly",
    TcpAndHttpErrors: "TcpAndHttpErrors",
};
exports.RuleCacheBehavior = {
    HonorOrigin: "HonorOrigin",
    OverrideAlways: "OverrideAlways",
    OverrideIfOriginMissing: "OverrideIfOriginMissing",
};
exports.RuleIsCompressionEnabled = {
    Enabled: "Enabled",
    Disabled: "Disabled",
};
exports.RuleQueryStringCachingBehavior = {
    IgnoreQueryString: "IgnoreQueryString",
    UseQueryString: "UseQueryString",
    IgnoreSpecifiedQueryStrings: "IgnoreSpecifiedQueryStrings",
    IncludeSpecifiedQueryStrings: "IncludeSpecifiedQueryStrings",
};
exports.SecretType = {
    UrlSigningKey: "UrlSigningKey",
    CustomerCertificate: "CustomerCertificate",
    ManagedCertificate: "ManagedCertificate",
    AzureFirstPartyManagedCertificate: "AzureFirstPartyManagedCertificate",
};
exports.SecurityPolicyType = {
    WebApplicationFirewall: "WebApplicationFirewall",
};
exports.ServerPortOperator = {
    Any: "Any",
    Equal: "Equal",
    Contains: "Contains",
    BeginsWith: "BeginsWith",
    EndsWith: "EndsWith",
    LessThan: "LessThan",
    LessThanOrEqual: "LessThanOrEqual",
    GreaterThan: "GreaterThan",
    GreaterThanOrEqual: "GreaterThanOrEqual",
    RegEx: "RegEx",
};
exports.SharedPrivateLinkResourceStatus = {
    Pending: "Pending",
    Approved: "Approved",
    Rejected: "Rejected",
    Disconnected: "Disconnected",
    Timeout: "Timeout",
};
exports.SkuName = {
    Standard_Verizon: "Standard_Verizon",
    Premium_Verizon: "Premium_Verizon",
    Custom_Verizon: "Custom_Verizon",
    Standard_Akamai: "Standard_Akamai",
    Standard_ChinaCdn: "Standard_ChinaCdn",
    Standard_Microsoft: "Standard_Microsoft",
    Standard_AzureFrontDoor: "Standard_AzureFrontDoor",
    Premium_AzureFrontDoor: "Premium_AzureFrontDoor",
    Standard_955BandWidth_ChinaCdn: "Standard_955BandWidth_ChinaCdn",
    Standard_AvgBandWidth_ChinaCdn: "Standard_AvgBandWidth_ChinaCdn",
    StandardPlus_ChinaCdn: "StandardPlus_ChinaCdn",
    StandardPlus_955BandWidth_ChinaCdn: "StandardPlus_955BandWidth_ChinaCdn",
    StandardPlus_AvgBandWidth_ChinaCdn: "StandardPlus_AvgBandWidth_ChinaCdn",
};
exports.SocketAddrOperator = {
    Any: "Any",
    IPMatch: "IPMatch",
};
exports.SslProtocol = {
    TLSv1: "TLSv1",
    TLSv1_1: "TLSv1.1",
    TLSv1_2: "TLSv1.2",
};
exports.SslProtocolOperator = {
    Equal: "Equal",
};
exports.Transform = {
    Lowercase: "Lowercase",
    Uppercase: "Uppercase",
    Trim: "Trim",
    UrlDecode: "UrlDecode",
    UrlEncode: "UrlEncode",
    RemoveNulls: "RemoveNulls",
};
exports.TransformType = {
    Lowercase: "Lowercase",
    Uppercase: "Uppercase",
    Trim: "Trim",
    UrlDecode: "UrlDecode",
    UrlEncode: "UrlEncode",
    RemoveNulls: "RemoveNulls",
};
exports.UrlFileExtensionOperator = {
    Any: "Any",
    Equal: "Equal",
    Contains: "Contains",
    BeginsWith: "BeginsWith",
    EndsWith: "EndsWith",
    LessThan: "LessThan",
    LessThanOrEqual: "LessThanOrEqual",
    GreaterThan: "GreaterThan",
    GreaterThanOrEqual: "GreaterThanOrEqual",
    RegEx: "RegEx",
};
exports.UrlFileNameOperator = {
    Any: "Any",
    Equal: "Equal",
    Contains: "Contains",
    BeginsWith: "BeginsWith",
    EndsWith: "EndsWith",
    LessThan: "LessThan",
    LessThanOrEqual: "LessThanOrEqual",
    GreaterThan: "GreaterThan",
    GreaterThanOrEqual: "GreaterThanOrEqual",
    RegEx: "RegEx",
};
exports.UrlPathOperator = {
    Any: "Any",
    Equal: "Equal",
    Contains: "Contains",
    BeginsWith: "BeginsWith",
    EndsWith: "EndsWith",
    LessThan: "LessThan",
    LessThanOrEqual: "LessThanOrEqual",
    GreaterThan: "GreaterThan",
    GreaterThanOrEqual: "GreaterThanOrEqual",
    Wildcard: "Wildcard",
    RegEx: "RegEx",
};
exports.WafMatchVariable = {
    RemoteAddr: "RemoteAddr",
    SocketAddr: "SocketAddr",
    RequestMethod: "RequestMethod",
    RequestHeader: "RequestHeader",
    RequestUri: "RequestUri",
    QueryString: "QueryString",
    RequestBody: "RequestBody",
    Cookies: "Cookies",
    PostArgs: "PostArgs",
};
//# sourceMappingURL=data:application/json;base64,