export declare const DomainJoinType: {
    readonly HybridAzureADJoin: "HybridAzureADJoin";
    readonly AzureADJoin: "AzureADJoin";
};
/**
 * AAD Join type.
 */
export type DomainJoinType = (typeof DomainJoinType)[keyof typeof DomainJoinType];
export declare const EnvironmentTypeEnableStatus: {
    readonly Enabled: "Enabled";
    readonly Disabled: "Disabled";
};
/**
 * Defines whether this Environment Type can be used in this Project.
 */
export type EnvironmentTypeEnableStatus = (typeof EnvironmentTypeEnableStatus)[keyof typeof EnvironmentTypeEnableStatus];
export declare const HibernateSupport: {
    readonly Disabled: "Disabled";
    readonly Enabled: "Enabled";
};
/**
 * Indicates whether Dev Boxes created with this definition are capable of hibernation. Not all images are capable of supporting hibernation. To find out more see https://aka.ms/devbox/hibernate
 */
export type HibernateSupport = (typeof HibernateSupport)[keyof typeof HibernateSupport];
export declare const LicenseType: {
    readonly Windows_Client: "Windows_Client";
};
/**
 * Specifies the license type indicating the caller has already acquired licenses for the Dev Boxes that will be created.
 */
export type LicenseType = (typeof LicenseType)[keyof typeof LicenseType];
export declare const LocalAdminStatus: {
    readonly Disabled: "Disabled";
    readonly Enabled: "Enabled";
};
/**
 * Indicates whether owners of Dev Boxes in this pool are added as local administrators on the Dev Box.
 */
export type LocalAdminStatus = (typeof LocalAdminStatus)[keyof typeof LocalAdminStatus];
export declare const ManagedServiceIdentityType: {
    readonly None: "None";
    readonly SystemAssigned: "SystemAssigned";
    readonly UserAssigned: "UserAssigned";
    readonly SystemAssigned_UserAssigned: "SystemAssigned, UserAssigned";
};
/**
 * Type of managed service identity (where both SystemAssigned and UserAssigned types are allowed).
 */
export type ManagedServiceIdentityType = (typeof ManagedServiceIdentityType)[keyof typeof ManagedServiceIdentityType];
export declare const ScheduleEnableStatus: {
    readonly Enabled: "Enabled";
    readonly Disabled: "Disabled";
};
/**
 * Indicates whether or not this scheduled task is enabled.
 */
export type ScheduleEnableStatus = (typeof ScheduleEnableStatus)[keyof typeof ScheduleEnableStatus];
export declare const ScheduledFrequency: {
    readonly Daily: "Daily";
};
/**
 * The frequency of this scheduled task.
 */
export type ScheduledFrequency = (typeof ScheduledFrequency)[keyof typeof ScheduledFrequency];
export declare const ScheduledType: {
    readonly StopDevBox: "StopDevBox";
};
/**
 * Supported type this scheduled task represents.
 */
export type ScheduledType = (typeof ScheduledType)[keyof typeof ScheduledType];
export declare const SkuTier: {
    readonly Free: "Free";
    readonly Basic: "Basic";
    readonly Standard: "Standard";
    readonly Premium: "Premium";
};
/**
 * This field is required to be implemented by the Resource Provider if the service has more than one tier, but is not required on a PUT.
 */
export type SkuTier = (typeof SkuTier)[keyof typeof SkuTier];
export declare const StopOnDisconnectEnableStatus: {
    readonly Enabled: "Enabled";
    readonly Disabled: "Disabled";
};
/**
 * Whether the feature to stop the Dev Box on disconnect once the grace period has lapsed is enabled.
 */
export type StopOnDisconnectEnableStatus = (typeof StopOnDisconnectEnableStatus)[keyof typeof StopOnDisconnectEnableStatus];
