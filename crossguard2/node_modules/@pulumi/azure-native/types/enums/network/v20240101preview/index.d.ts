export declare const AddressPrefixType: {
    readonly IPPrefix: "IPPrefix";
    readonly ServiceTag: "ServiceTag";
    readonly NetworkGroup: "NetworkGroup";
};
/**
 * Address prefix type.
 */
export type AddressPrefixType = (typeof AddressPrefixType)[keyof typeof AddressPrefixType];
export declare const AddressSpaceAggregationOption: {
    readonly None: "None";
    readonly Manual: "Manual";
};
/**
 * Determine update behavior for changes to network groups referenced within the rules in this configuration.
 */
export type AddressSpaceAggregationOption = (typeof AddressSpaceAggregationOption)[keyof typeof AddressSpaceAggregationOption];
export declare const AdminRuleKind: {
    readonly Custom: "Custom";
    readonly Default: "Default";
};
/**
 * Whether the rule is custom or default.
 */
export type AdminRuleKind = (typeof AdminRuleKind)[keyof typeof AdminRuleKind];
export declare const ConfigurationType: {
    readonly SecurityAdmin: "SecurityAdmin";
    readonly Connectivity: "Connectivity";
};
/**
 * Configuration Deployment Type.
 */
export type ConfigurationType = (typeof ConfigurationType)[keyof typeof ConfigurationType];
export declare const NetworkIntentPolicyBasedService: {
    readonly None: "None";
    readonly All: "All";
    readonly AllowRulesOnly: "AllowRulesOnly";
};
/**
 * Network intent policy based services.
 */
export type NetworkIntentPolicyBasedService = (typeof NetworkIntentPolicyBasedService)[keyof typeof NetworkIntentPolicyBasedService];
export declare const NetworkProtocol: {
    readonly Any: "Any";
    readonly TCP: "TCP";
    readonly UDP: "UDP";
    readonly ICMP: "ICMP";
};
/**
 * Network protocol this resource applies to.
 */
export type NetworkProtocol = (typeof NetworkProtocol)[keyof typeof NetworkProtocol];
export declare const SecurityConfigurationRuleAccess: {
    readonly Allow: "Allow";
    readonly Deny: "Deny";
    readonly AlwaysAllow: "AlwaysAllow";
};
/**
 * Indicates the access allowed for this particular rule
 */
export type SecurityConfigurationRuleAccess = (typeof SecurityConfigurationRuleAccess)[keyof typeof SecurityConfigurationRuleAccess];
export declare const SecurityConfigurationRuleDirection: {
    readonly Inbound: "Inbound";
    readonly Outbound: "Outbound";
};
/**
 * Indicates if the traffic matched against the rule in inbound or outbound.
 */
export type SecurityConfigurationRuleDirection = (typeof SecurityConfigurationRuleDirection)[keyof typeof SecurityConfigurationRuleDirection];
export declare const SecurityConfigurationRuleProtocol: {
    readonly Tcp: "Tcp";
    readonly Udp: "Udp";
    readonly Icmp: "Icmp";
    readonly Esp: "Esp";
    readonly Any: "Any";
    readonly Ah: "Ah";
};
/**
 * Network protocol this rule applies to.
 */
export type SecurityConfigurationRuleProtocol = (typeof SecurityConfigurationRuleProtocol)[keyof typeof SecurityConfigurationRuleProtocol];
