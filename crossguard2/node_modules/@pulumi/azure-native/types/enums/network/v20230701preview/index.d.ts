export declare const AccessRuleDirection: {
    readonly Inbound: "Inbound";
    readonly Outbound: "Outbound";
};
/**
 * Direction that specifies whether the access rules is inbound/outbound.
 */
export type AccessRuleDirection = (typeof AccessRuleDirection)[keyof typeof AccessRuleDirection];
export declare const ActionType: {
    readonly Allow: "Allow";
    readonly Alert: "Alert";
    readonly Block: "Block";
};
/**
 * The type of action to take.
 */
export type ActionType = (typeof ActionType)[keyof typeof ActionType];
export declare const AssociationAccessMode: {
    readonly Learning: "Learning";
    readonly Enforced: "Enforced";
    readonly Audit: "Audit";
};
/**
 * Access mode on the association.
 */
export type AssociationAccessMode = (typeof AssociationAccessMode)[keyof typeof AssociationAccessMode];
export declare const BlockResponseCode: {
    readonly SERVFAIL: "SERVFAIL";
};
/**
 * The response code for block actions.
 */
export type BlockResponseCode = (typeof BlockResponseCode)[keyof typeof BlockResponseCode];
export declare const DnsSecurityRuleState: {
    readonly Enabled: "Enabled";
    readonly Disabled: "Disabled";
};
/**
 * The state of DNS security rule.
 */
export type DnsSecurityRuleState = (typeof DnsSecurityRuleState)[keyof typeof DnsSecurityRuleState];
export declare const ForwardingRuleState: {
    readonly Enabled: "Enabled";
    readonly Disabled: "Disabled";
};
/**
 * The state of forwarding rule.
 */
export type ForwardingRuleState = (typeof ForwardingRuleState)[keyof typeof ForwardingRuleState];
export declare const IpAllocationMethod: {
    readonly Static: "Static";
    readonly Dynamic: "Dynamic";
};
/**
 * Private IP address allocation method.
 */
export type IpAllocationMethod = (typeof IpAllocationMethod)[keyof typeof IpAllocationMethod];
export declare const ZoneType: {
    readonly Public: "Public";
    readonly Private: "Private";
};
/**
 * The type of this DNS zone (Public or Private).
 */
export type ZoneType = (typeof ZoneType)[keyof typeof ZoneType];
