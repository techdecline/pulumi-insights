export declare const DataPointsObservabilityMode: {
    /**
     * No mapping to OpenTelemetry.
     */
    readonly None: "none";
    /**
     * Map as counter to OpenTelemetry.
     */
    readonly Counter: "counter";
    /**
     * Map as gauge to OpenTelemetry.
     */
    readonly Gauge: "gauge";
    /**
     * Map as histogram to OpenTelemetry.
     */
    readonly Histogram: "histogram";
    /**
     * Map as log to OpenTelemetry.
     */
    readonly Log: "log";
};
/**
 * An indication of how the data point should be mapped to OpenTelemetry.
 */
export type DataPointsObservabilityMode = (typeof DataPointsObservabilityMode)[keyof typeof DataPointsObservabilityMode];
export declare const EventsObservabilityMode: {
    /**
     * No mapping to OpenTelemetry.
     */
    readonly None: "none";
    /**
     * Map as log to OpenTelemetry.
     */
    readonly Log: "log";
};
/**
 * An indication of how the event should be mapped to OpenTelemetry.
 */
export type EventsObservabilityMode = (typeof EventsObservabilityMode)[keyof typeof EventsObservabilityMode];
export declare const UserAuthenticationMode: {
    /**
     * The user authentication method is anonymous.
     */
    readonly Anonymous: "Anonymous";
    /**
     * The user authentication method is an x509 certificate.
     */
    readonly Certificate: "Certificate";
    /**
     * The user authentication method is a username and password.
     */
    readonly UsernamePassword: "UsernamePassword";
};
/**
 * Defines the method to authenticate the user of the client at the server.
 */
export type UserAuthenticationMode = (typeof UserAuthenticationMode)[keyof typeof UserAuthenticationMode];
