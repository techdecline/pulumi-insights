"use strict";
// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***
Object.defineProperty(exports, "__esModule", { value: true });
exports.StopHostsWhen = exports.StartupBehavior = exports.SkuTier = exports.SetStartVMOnConnect = exports.SessionHostLoadBalancingAlgorithm = exports.SessionHostComponentUpdateType = exports.SessionHandlingOperation = exports.ScalingHostPoolType = exports.SSOSecretType = exports.ResourceIdentityType = exports.RemoteApplicationType = exports.RelayUDP = exports.RegistrationTokenOperation = exports.PublicUDP = exports.PublicNetworkAccess = exports.PrivateEndpointServiceConnectionStatus = exports.PreferredAppGroupType = exports.PersonalDesktopAssignmentType = exports.PackageTimestamped = exports.ManagementType = exports.ManagedPrivateUDP = exports.LoadBalancerType = exports.HostpoolPublicNetworkAccess = exports.HostPoolType = exports.FailHealthCheckOnStagingFailure = exports.DirectUDP = exports.DayOfWeek = exports.CommandLineSetting = exports.ApplicationGroupType = void 0;
exports.ApplicationGroupType = {
    RemoteApp: "RemoteApp",
    Desktop: "Desktop",
};
exports.CommandLineSetting = {
    DoNotAllow: "DoNotAllow",
    Allow: "Allow",
    Require: "Require",
};
exports.DayOfWeek = {
    Monday: "Monday",
    Tuesday: "Tuesday",
    Wednesday: "Wednesday",
    Thursday: "Thursday",
    Friday: "Friday",
    Saturday: "Saturday",
    Sunday: "Sunday",
};
exports.DirectUDP = {
    Default: "Default",
    Enabled: "Enabled",
    Disabled: "Disabled",
};
exports.FailHealthCheckOnStagingFailure = {
    Unhealthy: "Unhealthy",
    NeedsAssistance: "NeedsAssistance",
    DoNotFail: "DoNotFail",
};
exports.HostPoolType = {
    /**
     * Users will be assigned a SessionHost either by administrators (PersonalDesktopAssignmentType = Direct) or upon connecting to the pool (PersonalDesktopAssignmentType = Automatic). They will always be redirected to their assigned SessionHost.
     */
    Personal: "Personal",
    /**
     * Users get a new (random) SessionHost every time it connects to the HostPool.
     */
    Pooled: "Pooled",
    /**
     * Users assign their own machines, load balancing logic remains the same as Personal. PersonalDesktopAssignmentType must be Direct.
     */
    BYODesktop: "BYODesktop",
};
exports.HostpoolPublicNetworkAccess = {
    Enabled: "Enabled",
    Disabled: "Disabled",
    EnabledForSessionHostsOnly: "EnabledForSessionHostsOnly",
    EnabledForClientsOnly: "EnabledForClientsOnly",
};
exports.LoadBalancerType = {
    BreadthFirst: "BreadthFirst",
    DepthFirst: "DepthFirst",
    Persistent: "Persistent",
};
exports.ManagedPrivateUDP = {
    Default: "Default",
    Enabled: "Enabled",
    Disabled: "Disabled",
};
exports.ManagementType = {
    Automated: "Automated",
    Standard: "Standard",
};
exports.PackageTimestamped = {
    Timestamped: "Timestamped",
    NotTimestamped: "NotTimestamped",
};
exports.PersonalDesktopAssignmentType = {
    Automatic: "Automatic",
    Direct: "Direct",
};
exports.PreferredAppGroupType = {
    None: "None",
    Desktop: "Desktop",
    RailApplications: "RailApplications",
};
exports.PrivateEndpointServiceConnectionStatus = {
    Pending: "Pending",
    Approved: "Approved",
    Rejected: "Rejected",
};
exports.PublicNetworkAccess = {
    Enabled: "Enabled",
    Disabled: "Disabled",
};
exports.PublicUDP = {
    Default: "Default",
    Enabled: "Enabled",
    Disabled: "Disabled",
};
exports.RegistrationTokenOperation = {
    Delete: "Delete",
    None: "None",
    Update: "Update",
};
exports.RelayUDP = {
    Default: "Default",
    Enabled: "Enabled",
    Disabled: "Disabled",
};
exports.RemoteApplicationType = {
    InBuilt: "InBuilt",
    MsixApplication: "MsixApplication",
};
exports.ResourceIdentityType = {
    SystemAssigned: "SystemAssigned",
};
exports.SSOSecretType = {
    SharedKey: "SharedKey",
    Certificate: "Certificate",
    SharedKeyInKeyVault: "SharedKeyInKeyVault",
    CertificateInKeyVault: "CertificateInKeyVault",
};
exports.ScalingHostPoolType = {
    /**
     * Users get a new (random) SessionHost every time it connects to the HostPool.
     */
    Pooled: "Pooled",
};
exports.SessionHandlingOperation = {
    None: "None",
    Deallocate: "Deallocate",
};
exports.SessionHostComponentUpdateType = {
    /**
     * Agent and other agent side components are delivery schedule is controlled by WVD Infra.
     */
    Default: "Default",
    /**
     * TenantAdmin have opted in for Scheduled Component Update feature.
     */
    Scheduled: "Scheduled",
};
exports.SessionHostLoadBalancingAlgorithm = {
    BreadthFirst: "BreadthFirst",
    DepthFirst: "DepthFirst",
};
exports.SetStartVMOnConnect = {
    Enable: "Enable",
    Disable: "Disable",
};
exports.SkuTier = {
    Free: "Free",
    Basic: "Basic",
    Standard: "Standard",
    Premium: "Premium",
};
exports.StartupBehavior = {
    /**
     * Session hosts will not be started by the service. This setting depends on Start VM on Connect to be enabled to start the session hosts.
     */
    None: "None",
    /**
     * Session hosts with an assigned user will be started during Ramp Up
     */
    WithAssignedUser: "WithAssignedUser",
    /**
     * All personal session hosts in the hostpool will be started during ramp up.
     */
    All: "All",
};
exports.StopHostsWhen = {
    ZeroSessions: "ZeroSessions",
    ZeroActiveSessions: "ZeroActiveSessions",
};
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaW5kZXguanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi8uLi90eXBlcy9lbnVtcy9kZXNrdG9wdmlydHVhbGl6YXRpb24vdjIwMjQwMTE2cHJldmlldy9pbmRleC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiO0FBQUEsc0VBQXNFO0FBQ3RFLGlGQUFpRjs7O0FBR3BFLFFBQUEsb0JBQW9CLEdBQUc7SUFDaEMsU0FBUyxFQUFFLFdBQVc7SUFDdEIsT0FBTyxFQUFFLFNBQVM7Q0FDWixDQUFDO0FBT0UsUUFBQSxrQkFBa0IsR0FBRztJQUM5QixVQUFVLEVBQUUsWUFBWTtJQUN4QixLQUFLLEVBQUUsT0FBTztJQUNkLE9BQU8sRUFBRSxTQUFTO0NBQ1osQ0FBQztBQU9FLFFBQUEsU0FBUyxHQUFHO0lBQ3JCLE1BQU0sRUFBRSxRQUFRO0lBQ2hCLE9BQU8sRUFBRSxTQUFTO0lBQ2xCLFNBQVMsRUFBRSxXQUFXO0lBQ3RCLFFBQVEsRUFBRSxVQUFVO0lBQ3BCLE1BQU0sRUFBRSxRQUFRO0lBQ2hCLFFBQVEsRUFBRSxVQUFVO0lBQ3BCLE1BQU0sRUFBRSxRQUFRO0NBQ1YsQ0FBQztBQUlFLFFBQUEsU0FBUyxHQUFHO0lBQ3JCLE9BQU8sRUFBRSxTQUFTO0lBQ2xCLE9BQU8sRUFBRSxTQUFTO0lBQ2xCLFFBQVEsRUFBRSxVQUFVO0NBQ2QsQ0FBQztBQU9FLFFBQUEsK0JBQStCLEdBQUc7SUFDM0MsU0FBUyxFQUFFLFdBQVc7SUFDdEIsZUFBZSxFQUFFLGlCQUFpQjtJQUNsQyxTQUFTLEVBQUUsV0FBVztDQUNoQixDQUFDO0FBT0UsUUFBQSxZQUFZLEdBQUc7SUFDeEI7O09BRUc7SUFDSCxRQUFRLEVBQUUsVUFBVTtJQUNwQjs7T0FFRztJQUNILE1BQU0sRUFBRSxRQUFRO0lBQ2hCOztPQUVHO0lBQ0gsVUFBVSxFQUFFLFlBQVk7Q0FDbEIsQ0FBQztBQU9FLFFBQUEsMkJBQTJCLEdBQUc7SUFDdkMsT0FBTyxFQUFFLFNBQVM7SUFDbEIs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