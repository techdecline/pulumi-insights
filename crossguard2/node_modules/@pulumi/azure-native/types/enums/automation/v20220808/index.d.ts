export declare const ContentSourceType: {
    readonly EmbeddedContent: "embeddedContent";
    readonly Uri: "uri";
};
/**
 * Gets or sets the content source type.
 */
export type ContentSourceType = (typeof ContentSourceType)[keyof typeof ContentSourceType];
export declare const EncryptionKeySourceType: {
    readonly Microsoft_Automation: "Microsoft.Automation";
    readonly Microsoft_Keyvault: "Microsoft.Keyvault";
};
/**
 * Encryption Key Source
 */
export type EncryptionKeySourceType = (typeof EncryptionKeySourceType)[keyof typeof EncryptionKeySourceType];
export declare const ResourceIdentityType: {
    readonly SystemAssigned: "SystemAssigned";
    readonly UserAssigned: "UserAssigned";
    readonly SystemAssigned_UserAssigned: "SystemAssigned, UserAssigned";
    readonly None: "None";
};
/**
 * The identity type.
 */
export type ResourceIdentityType = (typeof ResourceIdentityType)[keyof typeof ResourceIdentityType];
export declare const RunbookTypeEnum: {
    readonly Script: "Script";
    readonly Graph: "Graph";
    readonly PowerShellWorkflow: "PowerShellWorkflow";
    readonly PowerShell: "PowerShell";
    readonly GraphPowerShellWorkflow: "GraphPowerShellWorkflow";
    readonly GraphPowerShell: "GraphPowerShell";
    readonly Python2: "Python2";
    readonly Python3: "Python3";
};
/**
 * Gets or sets the type of the runbook.
 */
export type RunbookTypeEnum = (typeof RunbookTypeEnum)[keyof typeof RunbookTypeEnum];
export declare const ScheduleDay: {
    readonly Monday: "Monday";
    readonly Tuesday: "Tuesday";
    readonly Wednesday: "Wednesday";
    readonly Thursday: "Thursday";
    readonly Friday: "Friday";
    readonly Saturday: "Saturday";
    readonly Sunday: "Sunday";
};
/**
 * Day of the occurrence. Must be one of monday, tuesday, wednesday, thursday, friday, saturday, sunday.
 */
export type ScheduleDay = (typeof ScheduleDay)[keyof typeof ScheduleDay];
export declare const ScheduleFrequency: {
    readonly OneTime: "OneTime";
    readonly Day: "Day";
    readonly Hour: "Hour";
    readonly Week: "Week";
    readonly Month: "Month";
    /**
     * The minimum allowed interval for Minute schedules is 15 minutes.
     */
    readonly Minute: "Minute";
};
/**
 * Gets or sets the frequency of the schedule.
 */
export type ScheduleFrequency = (typeof ScheduleFrequency)[keyof typeof ScheduleFrequency];
export declare const SkuNameEnum: {
    readonly Free: "Free";
    readonly Basic: "Basic";
};
/**
 * Gets or sets the SKU name of the account.
 */
export type SkuNameEnum = (typeof SkuNameEnum)[keyof typeof SkuNameEnum];
export declare const SourceType: {
    readonly VsoGit: "VsoGit";
    readonly VsoTfvc: "VsoTfvc";
    readonly GitHub: "GitHub";
};
/**
 * The source type. Must be one of VsoGit, VsoTfvc, GitHub, case sensitive.
 */
export type SourceType = (typeof SourceType)[keyof typeof SourceType];
export declare const TokenType: {
    readonly PersonalAccessToken: "PersonalAccessToken";
    readonly Oauth: "Oauth";
};
/**
 * The token type. Must be either PersonalAccessToken or Oauth.
 */
export type TokenType = (typeof TokenType)[keyof typeof TokenType];
