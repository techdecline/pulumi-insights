export declare const ACLAction: {
    readonly Allow: "Allow";
    readonly Deny: "Deny";
};
/**
 * Default action when no other rule matches
 */
export type ACLAction = (typeof ACLAction)[keyof typeof ACLAction];
export declare const ManagedIdentityType: {
    readonly None: "None";
    readonly SystemAssigned: "SystemAssigned";
    readonly UserAssigned: "UserAssigned";
};
/**
 * Represent the identity type: systemAssigned, userAssigned, None
 */
export type ManagedIdentityType = (typeof ManagedIdentityType)[keyof typeof ManagedIdentityType];
export declare const UpstreamAuthType: {
    readonly None: "None";
    readonly ManagedIdentity: "ManagedIdentity";
};
/**
 * Gets or sets the type of auth. None or ManagedIdentity is supported now.
 */
export type UpstreamAuthType = (typeof UpstreamAuthType)[keyof typeof UpstreamAuthType];
export declare const WebPubSubRequestType: {
    readonly ClientConnection: "ClientConnection";
    readonly ServerConnection: "ServerConnection";
    readonly RESTAPI: "RESTAPI";
    readonly Trace: "Trace";
};
/**
 * Allowed request types. The value can be one or more of: ClientConnection, ServerConnection, RESTAPI.
 */
export type WebPubSubRequestType = (typeof WebPubSubRequestType)[keyof typeof WebPubSubRequestType];
export declare const WebPubSubSkuTier: {
    readonly Free: "Free";
    readonly Basic: "Basic";
    readonly Standard: "Standard";
    readonly Premium: "Premium";
};
/**
 * Optional tier of this particular SKU. 'Standard' or 'Free'.
 *
 * `Basic` is deprecated, use `Standard` instead.
 */
export type WebPubSubSkuTier = (typeof WebPubSubSkuTier)[keyof typeof WebPubSubSkuTier];
