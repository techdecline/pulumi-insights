export declare const ACLAction: {
    readonly Allow: "Allow";
    readonly Deny: "Deny";
};
/**
 * Azure Networking ACL Action.
 */
export type ACLAction = (typeof ACLAction)[keyof typeof ACLAction];
export declare const EventListenerEndpointDiscriminator: {
    readonly EventHub: "EventHub";
};
export type EventListenerEndpointDiscriminator = (typeof EventListenerEndpointDiscriminator)[keyof typeof EventListenerEndpointDiscriminator];
export declare const EventListenerFilterDiscriminator: {
    readonly EventName: "EventName";
};
export type EventListenerFilterDiscriminator = (typeof EventListenerFilterDiscriminator)[keyof typeof EventListenerFilterDiscriminator];
export declare const ManagedIdentityType: {
    readonly None: "None";
    readonly SystemAssigned: "SystemAssigned";
    readonly UserAssigned: "UserAssigned";
};
/**
 * Represents the identity type: systemAssigned, userAssigned, None
 */
export type ManagedIdentityType = (typeof ManagedIdentityType)[keyof typeof ManagedIdentityType];
export declare const PrivateLinkServiceConnectionStatus: {
    readonly Pending: "Pending";
    readonly Approved: "Approved";
    readonly Rejected: "Rejected";
    readonly Disconnected: "Disconnected";
};
/**
 * Indicates whether the connection has been Approved/Rejected/Removed by the owner of the service.
 */
export type PrivateLinkServiceConnectionStatus = (typeof PrivateLinkServiceConnectionStatus)[keyof typeof PrivateLinkServiceConnectionStatus];
export declare const ServiceKind: {
    readonly WebPubSub: "WebPubSub";
    readonly SocketIO: "SocketIO";
};
/**
 * The kind of the service
 */
export type ServiceKind = (typeof ServiceKind)[keyof typeof ServiceKind];
export declare const UpstreamAuthType: {
    readonly None: "None";
    readonly ManagedIdentity: "ManagedIdentity";
};
/**
 * Upstream auth type enum.
 */
export type UpstreamAuthType = (typeof UpstreamAuthType)[keyof typeof UpstreamAuthType];
export declare const WebPubSubRequestType: {
    readonly ClientConnection: "ClientConnection";
    readonly ServerConnection: "ServerConnection";
    readonly RESTAPI: "RESTAPI";
    readonly Trace: "Trace";
};
/**
 * The incoming request type to the service
 */
export type WebPubSubRequestType = (typeof WebPubSubRequestType)[keyof typeof WebPubSubRequestType];
export declare const WebPubSubSkuTier: {
    readonly Free: "Free";
    readonly Basic: "Basic";
    readonly Standard: "Standard";
    readonly Premium: "Premium";
};
/**
 * Optional tier of this particular SKU. 'Standard' or 'Free'.
 *
 * `Basic` is deprecated, use `Standard` instead.
 */
export type WebPubSubSkuTier = (typeof WebPubSubSkuTier)[keyof typeof WebPubSubSkuTier];
