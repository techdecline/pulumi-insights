export declare const AccessRightsDescription: {
    readonly ServiceConfig: "ServiceConfig";
    readonly EnrollmentRead: "EnrollmentRead";
    readonly EnrollmentWrite: "EnrollmentWrite";
    readonly DeviceConnect: "DeviceConnect";
    readonly RegistrationStatusRead: "RegistrationStatusRead";
    readonly RegistrationStatusWrite: "RegistrationStatusWrite";
};
/**
 * Rights that this key has.
 */
export type AccessRightsDescription = (typeof AccessRightsDescription)[keyof typeof AccessRightsDescription];
export declare const AllocationPolicy: {
    readonly Hashed: "Hashed";
    readonly GeoLatency: "GeoLatency";
    readonly Static: "Static";
};
/**
 * Allocation policy to be used by this provisioning service.
 */
export type AllocationPolicy = (typeof AllocationPolicy)[keyof typeof AllocationPolicy];
export declare const IotDpsSku: {
    readonly S1: "S1";
};
/**
 * Sku name.
 */
export type IotDpsSku = (typeof IotDpsSku)[keyof typeof IotDpsSku];
export declare const IpFilterActionType: {
    readonly Accept: "Accept";
    readonly Reject: "Reject";
};
/**
 * The desired action for requests captured by this rule.
 */
export type IpFilterActionType = (typeof IpFilterActionType)[keyof typeof IpFilterActionType];
export declare const IpFilterTargetType: {
    readonly All: "all";
    readonly ServiceApi: "serviceApi";
    readonly DeviceApi: "deviceApi";
};
/**
 * Target for requests captured by this rule.
 */
export type IpFilterTargetType = (typeof IpFilterTargetType)[keyof typeof IpFilterTargetType];
export declare const PrivateLinkServiceConnectionStatus: {
    readonly Pending: "Pending";
    readonly Approved: "Approved";
    readonly Rejected: "Rejected";
    readonly Disconnected: "Disconnected";
};
/**
 * The status of a private endpoint connection
 */
export type PrivateLinkServiceConnectionStatus = (typeof PrivateLinkServiceConnectionStatus)[keyof typeof PrivateLinkServiceConnectionStatus];
export declare const PublicNetworkAccess: {
    readonly Enabled: "Enabled";
    readonly Disabled: "Disabled";
};
/**
 * Whether requests from Public Network are allowed
 */
export type PublicNetworkAccess = (typeof PublicNetworkAccess)[keyof typeof PublicNetworkAccess];
export declare const State: {
    readonly Activating: "Activating";
    readonly Active: "Active";
    readonly Deleting: "Deleting";
    readonly Deleted: "Deleted";
    readonly ActivationFailed: "ActivationFailed";
    readonly DeletionFailed: "DeletionFailed";
    readonly Transitioning: "Transitioning";
    readonly Suspending: "Suspending";
    readonly Suspended: "Suspended";
    readonly Resuming: "Resuming";
    readonly FailingOver: "FailingOver";
    readonly FailoverFailed: "FailoverFailed";
};
/**
 * Current state of the provisioning service.
 */
export type State = (typeof State)[keyof typeof State];
