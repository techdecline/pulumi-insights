export declare const AccountSkuName: {
    readonly Standard: "Standard";
    readonly Free: "Free";
};
/**
 * Gets or sets the sku name.
 */
export type AccountSkuName = (typeof AccountSkuName)[keyof typeof AccountSkuName];
export declare const EventHubType: {
    readonly Notification: "Notification";
    readonly Hook: "Hook";
};
/**
 * The event hub type.
 */
export type EventHubType = (typeof EventHubType)[keyof typeof EventHubType];
export declare const EventStreamingState: {
    readonly Disabled: "Disabled";
    readonly Enabled: "Enabled";
};
/**
 * The state of the event streaming service
 */
export type EventStreamingState = (typeof EventStreamingState)[keyof typeof EventStreamingState];
export declare const EventStreamingType: {
    readonly None: "None";
    readonly Managed: "Managed";
    readonly Azure: "Azure";
};
/**
 * The event streaming service type
 */
export type EventStreamingType = (typeof EventStreamingType)[keyof typeof EventStreamingType];
export declare const KafkaConfigurationIdentityType: {
    readonly None: "None";
    readonly SystemAssigned: "SystemAssigned";
    readonly UserAssigned: "UserAssigned";
};
/**
 * Identity Type.
 */
export type KafkaConfigurationIdentityType = (typeof KafkaConfigurationIdentityType)[keyof typeof KafkaConfigurationIdentityType];
export declare const ManagedEventHubState: {
    readonly NotSpecified: "NotSpecified";
    readonly Disabled: "Disabled";
    readonly Enabled: "Enabled";
};
/**
 * Gets or sets the state of managed eventhub. If enabled managed eventhub will be created, if disabled the managed eventhub will be removed.
 */
export type ManagedEventHubState = (typeof ManagedEventHubState)[keyof typeof ManagedEventHubState];
export declare const ManagedIdentityType: {
    readonly None: "None";
    readonly SystemAssigned: "SystemAssigned";
    readonly UserAssigned: "UserAssigned";
};
/**
 * Identity Type
 */
export type ManagedIdentityType = (typeof ManagedIdentityType)[keyof typeof ManagedIdentityType];
export declare const PrivateEndpointConnectionStatus: {
    readonly Unknown: "Unknown";
    readonly Pending: "Pending";
    readonly Approved: "Approved";
    readonly Rejected: "Rejected";
    readonly Disconnected: "Disconnected";
};
/**
 * The status.
 */
export type PrivateEndpointConnectionStatus = (typeof PrivateEndpointConnectionStatus)[keyof typeof PrivateEndpointConnectionStatus];
export declare const PublicNetworkAccess: {
    readonly NotSpecified: "NotSpecified";
    readonly Enabled: "Enabled";
    readonly Disabled: "Disabled";
};
/**
 * Gets or sets the public network access.
 */
export type PublicNetworkAccess = (typeof PublicNetworkAccess)[keyof typeof PublicNetworkAccess];
export declare const TenantEndpointState: {
    readonly NotSpecified: "NotSpecified";
    readonly Disabled: "Disabled";
    readonly Enabled: "Enabled";
};
/**
 * Gets or sets the state of tenant endpoint.
 */
export type TenantEndpointState = (typeof TenantEndpointState)[keyof typeof TenantEndpointState];
