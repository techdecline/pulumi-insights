export declare const ChannelBinding: {
    readonly Enabled: "Enabled";
    readonly Disabled: "Disabled";
};
/**
 * A flag to determine whether or not ChannelBinding is enabled or disabled.
 */
export type ChannelBinding = (typeof ChannelBinding)[keyof typeof ChannelBinding];
export declare const ExternalAccess: {
    readonly Enabled: "Enabled";
    readonly Disabled: "Disabled";
};
/**
 * A flag to determine whether or not Secure LDAP access over the internet is enabled or disabled.
 */
export type ExternalAccess = (typeof ExternalAccess)[keyof typeof ExternalAccess];
export declare const FilteredSync: {
    readonly Enabled: "Enabled";
    readonly Disabled: "Disabled";
};
/**
 * Enabled or Disabled flag to turn on Group-based filtered sync
 */
export type FilteredSync = (typeof FilteredSync)[keyof typeof FilteredSync];
export declare const KerberosArmoring: {
    readonly Enabled: "Enabled";
    readonly Disabled: "Disabled";
};
/**
 * A flag to determine whether or not KerberosArmoring is enabled or disabled.
 */
export type KerberosArmoring = (typeof KerberosArmoring)[keyof typeof KerberosArmoring];
export declare const KerberosRc4Encryption: {
    readonly Enabled: "Enabled";
    readonly Disabled: "Disabled";
};
/**
 * A flag to determine whether or not KerberosRc4Encryption is enabled or disabled.
 */
export type KerberosRc4Encryption = (typeof KerberosRc4Encryption)[keyof typeof KerberosRc4Encryption];
export declare const LdapSigning: {
    readonly Enabled: "Enabled";
    readonly Disabled: "Disabled";
};
/**
 * A flag to determine whether or not LdapSigning is enabled or disabled.
 */
export type LdapSigning = (typeof LdapSigning)[keyof typeof LdapSigning];
export declare const Ldaps: {
    readonly Enabled: "Enabled";
    readonly Disabled: "Disabled";
};
/**
 * A flag to determine whether or not Secure LDAP is enabled or disabled.
 */
export type Ldaps = (typeof Ldaps)[keyof typeof Ldaps];
export declare const NotifyDcAdmins: {
    readonly Enabled: "Enabled";
    readonly Disabled: "Disabled";
};
/**
 * Should domain controller admins be notified
 */
export type NotifyDcAdmins = (typeof NotifyDcAdmins)[keyof typeof NotifyDcAdmins];
export declare const NotifyGlobalAdmins: {
    readonly Enabled: "Enabled";
    readonly Disabled: "Disabled";
};
/**
 * Should global admins be notified
 */
export type NotifyGlobalAdmins = (typeof NotifyGlobalAdmins)[keyof typeof NotifyGlobalAdmins];
export declare const NtlmV1: {
    readonly Enabled: "Enabled";
    readonly Disabled: "Disabled";
};
/**
 * A flag to determine whether or not NtlmV1 is enabled or disabled.
 */
export type NtlmV1 = (typeof NtlmV1)[keyof typeof NtlmV1];
export declare const Status: {
    readonly None: "None";
    readonly Running: "Running";
    readonly OK: "OK";
    readonly Failure: "Failure";
    readonly Warning: "Warning";
    readonly Skipped: "Skipped";
};
/**
 * Status for individual validator after running diagnostics.
 */
export type Status = (typeof Status)[keyof typeof Status];
export declare const SyncKerberosPasswords: {
    readonly Enabled: "Enabled";
    readonly Disabled: "Disabled";
};
/**
 * A flag to determine whether or not SyncKerberosPasswords is enabled or disabled.
 */
export type SyncKerberosPasswords = (typeof SyncKerberosPasswords)[keyof typeof SyncKerberosPasswords];
export declare const SyncNtlmPasswords: {
    readonly Enabled: "Enabled";
    readonly Disabled: "Disabled";
};
/**
 * A flag to determine whether or not SyncNtlmPasswords is enabled or disabled.
 */
export type SyncNtlmPasswords = (typeof SyncNtlmPasswords)[keyof typeof SyncNtlmPasswords];
export declare const SyncOnPremPasswords: {
    readonly Enabled: "Enabled";
    readonly Disabled: "Disabled";
};
/**
 * A flag to determine whether or not SyncOnPremPasswords is enabled or disabled.
 */
export type SyncOnPremPasswords = (typeof SyncOnPremPasswords)[keyof typeof SyncOnPremPasswords];
export declare const SyncScope: {
    readonly All: "All";
    readonly CloudOnly: "CloudOnly";
};
/**
 * All or CloudOnly, All users in AAD are synced to AAD DS domain or only users actively syncing in the cloud
 */
export type SyncScope = (typeof SyncScope)[keyof typeof SyncScope];
export declare const TlsV1: {
    readonly Enabled: "Enabled";
    readonly Disabled: "Disabled";
};
/**
 * A flag to determine whether or not TlsV1 is enabled or disabled.
 */
export type TlsV1 = (typeof TlsV1)[keyof typeof TlsV1];
