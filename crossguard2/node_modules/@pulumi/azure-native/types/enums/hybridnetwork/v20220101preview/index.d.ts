export declare const DeviceType: {
    readonly Unknown: "Unknown";
    readonly AzureStackEdge: "AzureStackEdge";
};
/**
 * The type of the device.
 */
export type DeviceType = (typeof DeviceType)[keyof typeof DeviceType];
export declare const DiskCreateOptionTypes: {
    readonly Unknown: "Unknown";
    readonly Empty: "Empty";
};
/**
 * Specifies how the virtual machine should be created.
 */
export type DiskCreateOptionTypes = (typeof DiskCreateOptionTypes)[keyof typeof DiskCreateOptionTypes];
export declare const IPAllocationMethod: {
    readonly Unknown: "Unknown";
    readonly Static: "Static";
    readonly Dynamic: "Dynamic";
};
/**
 * IP address allocation method.
 */
export type IPAllocationMethod = (typeof IPAllocationMethod)[keyof typeof IPAllocationMethod];
export declare const IPVersion: {
    readonly Unknown: "Unknown";
    readonly IPv4: "IPv4";
};
/**
 * IP address version.
 */
export type IPVersion = (typeof IPVersion)[keyof typeof IPVersion];
export declare const NetworkFunctionRoleConfigurationType: {
    readonly Unknown: "Unknown";
    readonly VirtualMachine: "VirtualMachine";
};
/**
 * Role type.
 */
export type NetworkFunctionRoleConfigurationType = (typeof NetworkFunctionRoleConfigurationType)[keyof typeof NetworkFunctionRoleConfigurationType];
export declare const NetworkFunctionType: {
    readonly Unknown: "Unknown";
    readonly VirtualNetworkFunction: "VirtualNetworkFunction";
    readonly ContainerizedNetworkFunction: "ContainerizedNetworkFunction";
};
/**
 * The network function type.
 */
export type NetworkFunctionType = (typeof NetworkFunctionType)[keyof typeof NetworkFunctionType];
export declare const OperatingSystemTypes: {
    readonly Unknown: "Unknown";
    readonly Windows: "Windows";
    readonly Linux: "Linux";
};
/**
 * The OS type.
 */
export type OperatingSystemTypes = (typeof OperatingSystemTypes)[keyof typeof OperatingSystemTypes];
export declare const SkuDeploymentMode: {
    readonly Unknown: "Unknown";
    readonly Azure: "Azure";
    readonly PrivateEdgeZone: "PrivateEdgeZone";
};
/**
 * The sku deployment mode.
 */
export type SkuDeploymentMode = (typeof SkuDeploymentMode)[keyof typeof SkuDeploymentMode];
export declare const SkuType: {
    readonly Unknown: "Unknown";
    readonly EvolvedPacketCore: "EvolvedPacketCore";
    readonly SDWAN: "SDWAN";
    readonly Firewall: "Firewall";
};
/**
 * The sku type.
 */
export type SkuType = (typeof SkuType)[keyof typeof SkuType];
export declare const VMSwitchType: {
    readonly Unknown: "Unknown";
    readonly Management: "Management";
    readonly Wan: "Wan";
    readonly Lan: "Lan";
};
/**
 * The type of the VM switch.
 */
export type VMSwitchType = (typeof VMSwitchType)[keyof typeof VMSwitchType];
export declare const VirtualMachineSizeTypes: {
    readonly Unknown: "Unknown";
    readonly Standard_D1_v2: "Standard_D1_v2";
    readonly Standard_D2_v2: "Standard_D2_v2";
    readonly Standard_D3_v2: "Standard_D3_v2";
    readonly Standard_D4_v2: "Standard_D4_v2";
    readonly Standard_D5_v2: "Standard_D5_v2";
    readonly Standard_D11_v2: "Standard_D11_v2";
    readonly Standard_D12_v2: "Standard_D12_v2";
    readonly Standard_D13_v2: "Standard_D13_v2";
    readonly Standard_DS1_v2: "Standard_DS1_v2";
    readonly Standard_DS2_v2: "Standard_DS2_v2";
    readonly Standard_DS3_v2: "Standard_DS3_v2";
    readonly Standard_DS4_v2: "Standard_DS4_v2";
    readonly Standard_DS5_v2: "Standard_DS5_v2";
    readonly Standard_DS11_v2: "Standard_DS11_v2";
    readonly Standard_DS12_v2: "Standard_DS12_v2";
    readonly Standard_DS13_v2: "Standard_DS13_v2";
    readonly Standard_F1: "Standard_F1";
    readonly Standard_F2: "Standard_F2";
    readonly Standard_F4: "Standard_F4";
    readonly Standard_F8: "Standard_F8";
    readonly Standard_F16: "Standard_F16";
    readonly Standard_F1s: "Standard_F1s";
    readonly Standard_F2s: "Standard_F2s";
    readonly Standard_F4s: "Standard_F4s";
    readonly Standard_F8s: "Standard_F8s";
    readonly Standard_F16s: "Standard_F16s";
};
/**
 * The size of the virtual machine.
 */
export type VirtualMachineSizeTypes = (typeof VirtualMachineSizeTypes)[keyof typeof VirtualMachineSizeTypes];
