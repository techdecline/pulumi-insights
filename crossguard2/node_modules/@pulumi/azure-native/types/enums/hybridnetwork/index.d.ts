import * as v20220101preview from "./v20220101preview";
import * as v20230901 from "./v20230901";
import * as v20240415 from "./v20240415";
export { v20220101preview, v20230901, v20240415, };
export declare const ApplicationEnablement: {
    readonly Unknown: "Unknown";
    readonly Enabled: "Enabled";
    readonly Disabled: "Disabled";
};
/**
 * The application enablement.
 */
export type ApplicationEnablement = (typeof ApplicationEnablement)[keyof typeof ApplicationEnablement];
export declare const ArtifactReplicationStrategy: {
    readonly Unknown: "Unknown";
    readonly SingleReplication: "SingleReplication";
};
/**
 * The replication strategy.
 */
export type ArtifactReplicationStrategy = (typeof ArtifactReplicationStrategy)[keyof typeof ArtifactReplicationStrategy];
export declare const ArtifactStoreType: {
    readonly Unknown: "Unknown";
    readonly AzureContainerRegistry: "AzureContainerRegistry";
    readonly AzureStorageAccount: "AzureStorageAccount";
};
/**
 * The artifact store type.
 */
export type ArtifactStoreType = (typeof ArtifactStoreType)[keyof typeof ArtifactStoreType];
export declare const ArtifactType: {
    readonly Unknown: "Unknown";
    readonly OCIArtifact: "OCIArtifact";
    readonly VhdImageFile: "VhdImageFile";
    readonly ArmTemplate: "ArmTemplate";
    readonly ImageFile: "ImageFile";
};
/**
 * The artifact type.
 */
export type ArtifactType = (typeof ArtifactType)[keyof typeof ArtifactType];
export declare const AzureArcKubernetesArtifactType: {
    readonly Unknown: "Unknown";
    readonly HelmPackage: "HelmPackage";
};
/**
 * The artifact type.
 */
export type AzureArcKubernetesArtifactType = (typeof AzureArcKubernetesArtifactType)[keyof typeof AzureArcKubernetesArtifactType];
export declare const AzureCoreArtifactType: {
    readonly Unknown: "Unknown";
    readonly VhdImageFile: "VhdImageFile";
    readonly ArmTemplate: "ArmTemplate";
};
/**
 * The artifact type.
 */
export type AzureCoreArtifactType = (typeof AzureCoreArtifactType)[keyof typeof AzureCoreArtifactType];
export declare const AzureOperatorNexusArtifactType: {
    readonly Unknown: "Unknown";
    readonly ImageFile: "ImageFile";
    readonly ArmTemplate: "ArmTemplate";
};
/**
 * The artifact type.
 */
export type AzureOperatorNexusArtifactType = (typeof AzureOperatorNexusArtifactType)[keyof typeof AzureOperatorNexusArtifactType];
export declare const ConfigurationGroupValueConfigurationType: {
    readonly Unknown: "Unknown";
    readonly Secret: "Secret";
    readonly Open: "Open";
};
/**
 * The value which indicates if configuration values are secrets
 */
export type ConfigurationGroupValueConfigurationType = (typeof ConfigurationGroupValueConfigurationType)[keyof typeof ConfigurationGroupValueConfigurationType];
export declare const ContainerizedNetworkFunctionNFVIType: {
    readonly Unknown: "Unknown";
    readonly AzureArcKubernetes: "AzureArcKubernetes";
};
/**
 * The network function type.
 */
export type ContainerizedNetworkFunctionNFVIType = (typeof ContainerizedNetworkFunctionNFVIType)[keyof typeof ContainerizedNetworkFunctionNFVIType];
export declare const DeviceType: {
    readonly Unknown: "Unknown";
    readonly AzureStackEdge: "AzureStackEdge";
};
/**
 * The type of the device.
 */
export type DeviceType = (typeof DeviceType)[keyof typeof DeviceType];
export declare const DiskCreateOptionTypes: {
    readonly Unknown: "Unknown";
    readonly Empty: "Empty";
};
/**
 * Specifies how the virtual machine should be created.
 */
export type DiskCreateOptionTypes = (typeof DiskCreateOptionTypes)[keyof typeof DiskCreateOptionTypes];
export declare const IPAllocationMethod: {
    readonly Unknown: "Unknown";
    readonly Static: "Static";
    readonly Dynamic: "Dynamic";
};
/**
 * IP address allocation method.
 */
export type IPAllocationMethod = (typeof IPAllocationMethod)[keyof typeof IPAllocationMethod];
export declare const IPVersion: {
    readonly Unknown: "Unknown";
    readonly IPv4: "IPv4";
};
/**
 * IP address version.
 */
export type IPVersion = (typeof IPVersion)[keyof typeof IPVersion];
export declare const IdType: {
    readonly Unknown: "Unknown";
    readonly Open: "Open";
    readonly Secret: "Secret";
};
/**
 * The resource reference arm id type.
 */
export type IdType = (typeof IdType)[keyof typeof IdType];
export declare const ManagedServiceIdentityType: {
    readonly None: "None";
    readonly SystemAssigned: "SystemAssigned";
    readonly UserAssigned: "UserAssigned";
    readonly SystemAssigned_UserAssigned: "SystemAssigned,UserAssigned";
};
/**
 * Type of managed service identity (where both SystemAssigned and UserAssigned types are allowed).
 */
export type ManagedServiceIdentityType = (typeof ManagedServiceIdentityType)[keyof typeof ManagedServiceIdentityType];
export declare const NFVIType: {
    readonly Unknown: "Unknown";
    readonly AzureArcKubernetes: "AzureArcKubernetes";
    readonly AzureCore: "AzureCore";
    readonly AzureOperatorNexus: "AzureOperatorNexus";
};
/**
 * The NFVI type.
 */
export type NFVIType = (typeof NFVIType)[keyof typeof NFVIType];
export declare const NetworkFunctionRoleConfigurationType: {
    readonly Unknown: "Unknown";
    readonly VirtualMachine: "VirtualMachine";
};
/**
 * Role type.
 */
export type NetworkFunctionRoleConfigurationType = (typeof NetworkFunctionRoleConfigurationType)[keyof typeof NetworkFunctionRoleConfigurationType];
export declare const NetworkFunctionType: {
    readonly Unknown: "Unknown";
    readonly VirtualNetworkFunction: "VirtualNetworkFunction";
    readonly ContainerizedNetworkFunction: "ContainerizedNetworkFunction";
};
/**
 * The network function type.
 */
export type NetworkFunctionType = (typeof NetworkFunctionType)[keyof typeof NetworkFunctionType];
export declare const OperatingSystemTypes: {
    readonly Unknown: "Unknown";
    readonly Windows: "Windows";
    readonly Linux: "Linux";
};
/**
 * The OS type.
 */
export type OperatingSystemTypes = (typeof OperatingSystemTypes)[keyof typeof OperatingSystemTypes];
export declare const PublisherScope: {
    readonly Unknown: "Unknown";
    readonly Private: "Private";
};
/**
 * The publisher scope.
 */
export type PublisherScope = (typeof PublisherScope)[keyof typeof PublisherScope];
export declare const SkuDeploymentMode: {
    readonly Unknown: "Unknown";
    readonly Azure: "Azure";
    readonly PrivateEdgeZone: "PrivateEdgeZone";
};
/**
 * The sku deployment mode.
 */
export type SkuDeploymentMode = (typeof SkuDeploymentMode)[keyof typeof SkuDeploymentMode];
export declare const SkuName: {
    readonly Basic: "Basic";
    readonly Standard: "Standard";
};
/**
 * Name of this Sku
 */
export type SkuName = (typeof SkuName)[keyof typeof SkuName];
export declare const SkuType: {
    readonly Unknown: "Unknown";
    readonly EvolvedPacketCore: "EvolvedPacketCore";
    readonly SDWAN: "SDWAN";
    readonly Firewall: "Firewall";
};
/**
 * The sku type.
 */
export type SkuType = (typeof SkuType)[keyof typeof SkuType];
export declare const TemplateType: {
    readonly Unknown: "Unknown";
    readonly ArmTemplate: "ArmTemplate";
};
/**
 * The template type.
 */
export type TemplateType = (typeof TemplateType)[keyof typeof TemplateType];
export declare const Type: {
    readonly Unknown: "Unknown";
    readonly ArmResourceDefinition: "ArmResourceDefinition";
    readonly NetworkFunctionDefinition: "NetworkFunctionDefinition";
};
/**
 * The resource element template type.
 */
export type Type = (typeof Type)[keyof typeof Type];
export declare const VMSwitchType: {
    readonly Unknown: "Unknown";
    readonly Management: "Management";
    readonly Wan: "Wan";
    readonly Lan: "Lan";
};
/**
 * The type of the VM switch.
 */
export type VMSwitchType = (typeof VMSwitchType)[keyof typeof VMSwitchType];
export declare const VirtualMachineSizeTypes: {
    readonly Unknown: "Unknown";
    readonly Standard_D1_v2: "Standard_D1_v2";
    readonly Standard_D2_v2: "Standard_D2_v2";
    readonly Standard_D3_v2: "Standard_D3_v2";
    readonly Standard_D4_v2: "Standard_D4_v2";
    readonly Standard_D5_v2: "Standard_D5_v2";
    readonly Standard_D11_v2: "Standard_D11_v2";
    readonly Standard_D12_v2: "Standard_D12_v2";
    readonly Standard_D13_v2: "Standard_D13_v2";
    readonly Standard_DS1_v2: "Standard_DS1_v2";
    readonly Standard_DS2_v2: "Standard_DS2_v2";
    readonly Standard_DS3_v2: "Standard_DS3_v2";
    readonly Standard_DS4_v2: "Standard_DS4_v2";
    readonly Standard_DS5_v2: "Standard_DS5_v2";
    readonly Standard_DS11_v2: "Standard_DS11_v2";
    readonly Standard_DS12_v2: "Standard_DS12_v2";
    readonly Standard_DS13_v2: "Standard_DS13_v2";
    readonly Standard_F1: "Standard_F1";
    readonly Standard_F2: "Standard_F2";
    readonly Standard_F4: "Standard_F4";
    readonly Standard_F8: "Standard_F8";
    readonly Standard_F16: "Standard_F16";
    readonly Standard_F1s: "Standard_F1s";
    readonly Standard_F2s: "Standard_F2s";
    readonly Standard_F4s: "Standard_F4s";
    readonly Standard_F8s: "Standard_F8s";
    readonly Standard_F16s: "Standard_F16s";
};
/**
 * The size of the virtual machine.
 */
export type VirtualMachineSizeTypes = (typeof VirtualMachineSizeTypes)[keyof typeof VirtualMachineSizeTypes];
export declare const VirtualNetworkFunctionNFVIType: {
    readonly Unknown: "Unknown";
    readonly AzureCore: "AzureCore";
    readonly AzureOperatorNexus: "AzureOperatorNexus";
};
/**
 * The network function type.
 */
export type VirtualNetworkFunctionNFVIType = (typeof VirtualNetworkFunctionNFVIType)[keyof typeof VirtualNetworkFunctionNFVIType];
