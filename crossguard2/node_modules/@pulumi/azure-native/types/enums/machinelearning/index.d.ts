import * as v20160501preview from "./v20160501preview";
import * as v20170101 from "./v20170101";
export { v20160501preview, v20170101, };
export declare const AssetType: {
    readonly Module: "Module";
    readonly Resource: "Resource";
};
/**
 * Asset's type.
 */
export type AssetType = (typeof AssetType)[keyof typeof AssetType];
export declare const ColumnFormat: {
    readonly Byte: "Byte";
    readonly Char: "Char";
    readonly Complex64: "Complex64";
    readonly Complex128: "Complex128";
    readonly Date_time: "Date-time";
    readonly Date_timeOffset: "Date-timeOffset";
    readonly Double: "Double";
    readonly Duration: "Duration";
    readonly Float: "Float";
    readonly Int8: "Int8";
    readonly Int16: "Int16";
    readonly Int32: "Int32";
    readonly Int64: "Int64";
    readonly Uint8: "Uint8";
    readonly Uint16: "Uint16";
    readonly Uint32: "Uint32";
    readonly Uint64: "Uint64";
};
/**
 * Additional format information for the data type.
 */
export type ColumnFormat = (typeof ColumnFormat)[keyof typeof ColumnFormat];
export declare const ColumnType: {
    readonly Boolean: "Boolean";
    readonly Integer: "Integer";
    readonly Number: "Number";
    readonly String: "String";
};
/**
 * Data type of the column.
 */
export type ColumnType = (typeof ColumnType)[keyof typeof ColumnType];
export declare const DiagnosticsLevel: {
    readonly None: "None";
    readonly Error: "Error";
    readonly All: "All";
};
/**
 * Specifies the verbosity of the diagnostic output. Valid values are: None - disables tracing; Error - collects only error (stderr) traces; All - collects all traces (stdout and stderr).
 */
export type DiagnosticsLevel = (typeof DiagnosticsLevel)[keyof typeof DiagnosticsLevel];
export declare const InputPortType: {
    readonly Dataset: "Dataset";
};
/**
 * Port data type.
 */
export type InputPortType = (typeof InputPortType)[keyof typeof InputPortType];
export declare const OutputPortType: {
    readonly Dataset: "Dataset";
};
/**
 * Port data type.
 */
export type OutputPortType = (typeof OutputPortType)[keyof typeof OutputPortType];
export declare const ParameterType: {
    readonly String: "String";
    readonly Int: "Int";
    readonly Float: "Float";
    readonly Enumerated: "Enumerated";
    readonly Script: "Script";
    readonly Mode: "Mode";
    readonly Credential: "Credential";
    readonly Boolean: "Boolean";
    readonly Double: "Double";
    readonly ColumnPicker: "ColumnPicker";
    readonly ParameterRange: "ParameterRange";
    readonly DataGatewayName: "DataGatewayName";
};
/**
 * Graph parameter's type.
 */
export type ParameterType = (typeof ParameterType)[keyof typeof ParameterType];
