export declare const AnalyticalStorageSchemaType: {
    readonly WellDefined: "WellDefined";
    readonly FullFidelity: "FullFidelity";
};
/**
 * Describes the types of schema for analytical storage.
 */
export type AnalyticalStorageSchemaType = (typeof AnalyticalStorageSchemaType)[keyof typeof AnalyticalStorageSchemaType];
export declare const AuthenticationMethod: {
    readonly None: "None";
    readonly Cassandra: "Cassandra";
    readonly Ldap: "Ldap";
};
/**
 * Which authentication method Cassandra should use to authenticate clients. 'None' turns off authentication, so should not be used except in emergencies. 'Cassandra' is the default password based authentication. The default is 'Cassandra'.
 */
export type AuthenticationMethod = (typeof AuthenticationMethod)[keyof typeof AuthenticationMethod];
export declare const BackupPolicyMigrationStatus: {
    readonly Invalid: "Invalid";
    readonly InProgress: "InProgress";
    readonly Completed: "Completed";
    readonly Failed: "Failed";
};
/**
 * Describes the status of migration between backup policy types.
 */
export type BackupPolicyMigrationStatus = (typeof BackupPolicyMigrationStatus)[keyof typeof BackupPolicyMigrationStatus];
export declare const BackupPolicyType: {
    readonly Periodic: "Periodic";
    readonly Continuous: "Continuous";
};
/**
 * Describes the mode of backups.
 */
export type BackupPolicyType = (typeof BackupPolicyType)[keyof typeof BackupPolicyType];
export declare const BackupStorageRedundancy: {
    readonly Geo: "Geo";
    readonly Local: "Local";
    readonly Zone: "Zone";
};
/**
 * Enum to indicate type of backup residency
 */
export type BackupStorageRedundancy = (typeof BackupStorageRedundancy)[keyof typeof BackupStorageRedundancy];
export declare const ClusterType: {
    readonly Production: "Production";
    readonly NonProduction: "NonProduction";
};
/**
 * Type of the cluster. If set to Production, some operations might not be permitted on cluster.
 */
export type ClusterType = (typeof ClusterType)[keyof typeof ClusterType];
export declare const CompositePathSortOrder: {
    readonly Ascending: "ascending";
    readonly Descending: "descending";
};
/**
 * Sort order for composite paths.
 */
export type CompositePathSortOrder = (typeof CompositePathSortOrder)[keyof typeof CompositePathSortOrder];
export declare const ConflictResolutionMode: {
    readonly LastWriterWins: "LastWriterWins";
    readonly Custom: "Custom";
};
/**
 * Indicates the conflict resolution mode.
 */
export type ConflictResolutionMode = (typeof ConflictResolutionMode)[keyof typeof ConflictResolutionMode];
export declare const ConnectorOffer: {
    readonly Small: "Small";
};
/**
 * The cassandra connector offer type for the Cosmos DB database C* account.
 */
export type ConnectorOffer = (typeof ConnectorOffer)[keyof typeof ConnectorOffer];
export declare const ContinuousTier: {
    readonly Continuous7Days: "Continuous7Days";
    readonly Continuous30Days: "Continuous30Days";
};
/**
 * Enum to indicate type of Continuos backup mode
 */
export type ContinuousTier = (typeof ContinuousTier)[keyof typeof ContinuousTier];
export declare const CreateMode: {
    readonly Default: "Default";
    readonly Restore: "Restore";
};
/**
 * Enum to indicate the mode of resource creation.
 */
export type CreateMode = (typeof CreateMode)[keyof typeof CreateMode];
export declare const CustomerManagedKeyStatus: {
    readonly Access_to_your_account_is_currently_revoked_because_the_Azure_Cosmos_DB_service_is_unable_to_obtain_the_AAD_authentication_token_for_the_account_s_default_identity_for_more_details_about_this_error_and_how_to_restore_access_to_your_account_please_visit_https_learn_microsoft_com_en_us_azure_cosmos_db_cmk_troubleshooting_guide_azure_active_directory_token_acquisition_error_4000_: "Access to your account is currently revoked because the Azure Cosmos DB service is unable to obtain the AAD authentication token for the account's default identity; for more details about this error and how to restore access to your account please visit https://learn.microsoft.com/en-us/azure/cosmos-db/cmk-troubleshooting-guide#azure-active-directory-token-acquisition-error (4000).";
    readonly Access_to_your_account_is_currently_revoked_because_the_Azure_Cosmos_DB_account_s_key_vault_key_URI_does_not_follow_the_expected_format_for_more_details_about_this_error_and_how_to_restore_access_to_your_account_please_visit_https_learn_microsoft_com_en_us_azure_cosmos_db_cmk_troubleshooting_guide_improper_syntax_detected_on_the_key_vault_uri_property_4006_: "Access to your account is currently revoked because the Azure Cosmos DB account's key vault key URI does not follow the expected format; for more details about this error and how to restore access to your account please visit https://learn.microsoft.com/en-us/azure/cosmos-db/cmk-troubleshooting-guide#improper-syntax-detected-on-the-key-vault-uri-property (4006).";
    readonly Access_to_your_account_is_currently_revoked_because_the_current_default_identity_no_longer_has_permission_to_the_associated_Key_Vault_key_for_more_details_about_this_error_and_how_to_restore_access_to_your_account_please_visit_https_learn_microsoft_com_en_us_azure_cosmos_db_cmk_troubleshooting_guide_default_identity_is_unauthorized_to_access_the_azure_key_vault_key_4002_: "Access to your account is currently revoked because the current default identity no longer has permission to the associated Key Vault key; for more details about this error and how to restore access to your account please visit https://learn.microsoft.com/en-us/azure/cosmos-db/cmk-troubleshooting-guide#default-identity-is-unauthorized-to-access-the-azure-key-vault-key (4002).";
    readonly Access_to_your_account_is_currently_revoked_because_the_Azure_Key_Vault_DNS_name_specified_by_the_account_s_keyvaultkeyuri_property_could_not_be_resolved_for_more_details_about_this_error_and_how_to_restore_access_to_your_account_please_visit_https_learn_microsoft_com_en_us_azure_cosmos_db_cmk_troubleshooting_guide_unable_to_resolve_the_key_vaults_dns_4009_: "Access to your account is currently revoked because the Azure Key Vault DNS name specified by the account's keyvaultkeyuri property could not be resolved; for more details about this error and how to restore access to your account please visit https://learn.microsoft.com/en-us/azure/cosmos-db/cmk-troubleshooting-guide#unable-to-resolve-the-key-vaults-dns (4009).";
    readonly Access_to_your_account_is_currently_revoked_because_the_correspondent_key_is_not_found_on_the_specified_Key_Vault_for_more_details_about_this_error_and_how_to_restore_access_to_your_account_please_visit_https_learn_microsoft_com_en_us_azure_cosmos_db_cmk_troubleshooting_guide_azure_key_vault_resource_not_found_4003_: "Access to your account is currently revoked because the correspondent key is not found on the specified Key Vault; for more details about this error and how to restore access to your account please visit https://learn.microsoft.com/en-us/azure/cosmos-db/cmk-troubleshooting-guide#azure-key-vault-resource-not-found (4003).";
    readonly Access_to_your_account_is_currently_revoked_because_the_Azure_Cosmos_DB_service_is_unable_to_wrap_or_unwrap_the_key_for_more_details_about_this_error_and_how_to_restore_access_to_your_account_please_visit_https_learn_microsoft_com_en_us_azure_cosmos_db_cmk_troubleshooting_guide_internal_unwrapping_procedure_error_4005_: "Access to your account is currently revoked because the Azure Cosmos DB service is unable to wrap or unwrap the key; for more details about this error and how to restore access to your account please visit https://learn.microsoft.com/en-us/azure/cosmos-db/cmk-troubleshooting-guide#internal-unwrapping-procedure-error (4005).";
    readonly Access_to_your_account_is_currently_revoked_because_the_Azure_Cosmos_DB_account_has_an_undefined_default_identity_for_more_details_about_this_error_and_how_to_restore_access_to_your_account_please_visit_https_learn_microsoft_com_en_us_azure_cosmos_db_cmk_troubleshooting_guide_invalid_azure_cosmos_db_default_identity_4015_: "Access to your account is currently revoked because the Azure Cosmos DB account has an undefined default identity; for more details about this error and how to restore access to your account please visit https://learn.microsoft.com/en-us/azure/cosmos-db/cmk-troubleshooting-guide#invalid-azure-cosmos-db-default-identity (4015).";
    readonly Access_to_your_account_is_currently_revoked_because_the_access_rules_are_blocking_outbound_requests_to_the_Azure_Key_Vault_service_for_more_details_about_this_error_and_how_to_restore_access_to_your_account_please_visit_https_learn_microsoft_com_en_us_azure_cosmos_db_cmk_troubleshooting_guide_4016_: "Access to your account is currently revoked because the access rules are blocking outbound requests to the Azure Key Vault service; for more details about this error and how to restore access to your account please visit https://learn.microsoft.com/en-us/azure/cosmos-db/cmk-troubleshooting-guide (4016).";
    readonly Access_to_your_account_is_currently_revoked_because_the_correspondent_Azure_Key_Vault_was_not_found_for_more_details_about_this_error_and_how_to_restore_access_to_your_account_please_visit_https_learn_microsoft_com_en_us_azure_cosmos_db_cmk_troubleshooting_guide_azure_key_vault_resource_not_found_4017_: "Access to your account is currently revoked because the correspondent Azure Key Vault was not found; for more details about this error and how to restore access to your account please visit https://learn.microsoft.com/en-us/azure/cosmos-db/cmk-troubleshooting-guide#azure-key-vault-resource-not-found (4017).";
    readonly Access_to_your_account_is_currently_revoked_for_more_details_about_this_error_and_how_to_restore_access_to_your_account_please_visit_https_learn_microsoft_com_en_us_azure_cosmos_db_cmk_troubleshooting_guide: "Access to your account is currently revoked; for more details about this error and how to restore access to your account please visit https://learn.microsoft.com/en-us/azure/cosmos-db/cmk-troubleshooting-guide";
    readonly Access_to_the_configured_customer_managed_key_confirmed_: "Access to the configured customer managed key confirmed.";
};
/**
 * Indicates the status of the Customer Managed Key feature on the account. In case there are errors, the property provides troubleshooting guidance.
 */
export type CustomerManagedKeyStatus = (typeof CustomerManagedKeyStatus)[keyof typeof CustomerManagedKeyStatus];
export declare const DataType: {
    readonly String: "String";
    readonly Number: "Number";
    readonly Point: "Point";
    readonly Polygon: "Polygon";
    readonly LineString: "LineString";
    readonly MultiPolygon: "MultiPolygon";
};
/**
 * The datatype for which the indexing behavior is applied to.
 */
export type DataType = (typeof DataType)[keyof typeof DataType];
export declare const DatabaseAccountKind: {
    readonly GlobalDocumentDB: "GlobalDocumentDB";
    readonly MongoDB: "MongoDB";
    readonly Parse: "Parse";
};
/**
 * Indicates the type of database account. This can only be set at database account creation.
 */
export type DatabaseAccountKind = (typeof DatabaseAccountKind)[keyof typeof DatabaseAccountKind];
export declare const DatabaseAccountOfferType: {
    readonly Standard: "Standard";
};
/**
 * The offer type for the database
 */
export type DatabaseAccountOfferType = (typeof DatabaseAccountOfferType)[keyof typeof DatabaseAccountOfferType];
export declare const DefaultConsistencyLevel: {
    readonly Eventual: "Eventual";
    readonly Session: "Session";
    readonly BoundedStaleness: "BoundedStaleness";
    readonly Strong: "Strong";
    readonly ConsistentPrefix: "ConsistentPrefix";
};
/**
 * The default consistency level and configuration settings of the Cosmos DB account.
 */
export type DefaultConsistencyLevel = (typeof DefaultConsistencyLevel)[keyof typeof DefaultConsistencyLevel];
export declare const DefaultPriorityLevel: {
    readonly High: "High";
    readonly Low: "Low";
};
/**
 * Enum to indicate default Priority Level of request for Priority Based Execution.
 */
export type DefaultPriorityLevel = (typeof DefaultPriorityLevel)[keyof typeof DefaultPriorityLevel];
export declare const EnableFullTextQuery: {
    readonly None: "None";
    readonly True: "True";
    readonly False: "False";
};
/**
 * Describe the level of detail with which queries are to be logged.
 */
export type EnableFullTextQuery = (typeof EnableFullTextQuery)[keyof typeof EnableFullTextQuery];
export declare const IndexKind: {
    readonly Hash: "Hash";
    readonly Range: "Range";
    readonly Spatial: "Spatial";
};
/**
 * Indicates the type of index.
 */
export type IndexKind = (typeof IndexKind)[keyof typeof IndexKind];
export declare const IndexingMode: {
    readonly Consistent: "consistent";
    readonly Lazy: "lazy";
    readonly None: "none";
};
/**
 * Indicates the indexing mode.
 */
export type IndexingMode = (typeof IndexingMode)[keyof typeof IndexingMode];
export declare const ManagedCassandraProvisioningState: {
    readonly Creating: "Creating";
    readonly Updating: "Updating";
    readonly Deleting: "Deleting";
    readonly Succeeded: "Succeeded";
    readonly Failed: "Failed";
    readonly Canceled: "Canceled";
};
/**
 * The status of the resource at the time the operation was called.
 */
export type ManagedCassandraProvisioningState = (typeof ManagedCassandraProvisioningState)[keyof typeof ManagedCassandraProvisioningState];
export declare const ManagedCassandraResourceIdentityType: {
    readonly SystemAssigned: "SystemAssigned";
    readonly None: "None";
};
/**
 * The type of the resource.
 */
export type ManagedCassandraResourceIdentityType = (typeof ManagedCassandraResourceIdentityType)[keyof typeof ManagedCassandraResourceIdentityType];
export declare const MinimalTlsVersion: {
    readonly Tls: "Tls";
    readonly Tls11: "Tls11";
    readonly Tls12: "Tls12";
};
/**
 * Indicates the minimum allowed Tls version. The default is Tls 1.0, except for Cassandra and Mongo API's, which only work with Tls 1.2.
 */
export type MinimalTlsVersion = (typeof MinimalTlsVersion)[keyof typeof MinimalTlsVersion];
export declare const MongoRoleDefinitionType: {
    readonly BuiltInRole: "BuiltInRole";
    readonly CustomRole: "CustomRole";
};
/**
 * Indicates whether the Role Definition was built-in or user created.
 */
export type MongoRoleDefinitionType = (typeof MongoRoleDefinitionType)[keyof typeof MongoRoleDefinitionType];
export declare const NetworkAclBypass: {
    readonly None: "None";
    readonly AzureServices: "AzureServices";
};
/**
 * Indicates what services are allowed to bypass firewall checks.
 */
export type NetworkAclBypass = (typeof NetworkAclBypass)[keyof typeof NetworkAclBypass];
export declare const NodeKind: {
    readonly Shard: "Shard";
};
/**
 * The node type deployed in the node group.
 */
export type NodeKind = (typeof NodeKind)[keyof typeof NodeKind];
export declare const PartitionKind: {
    readonly Hash: "Hash";
    readonly Range: "Range";
    readonly MultiHash: "MultiHash";
};
/**
 * Indicates the kind of algorithm used for partitioning. For MultiHash, multiple partition keys (upto three maximum) are supported for container create
 */
export type PartitionKind = (typeof PartitionKind)[keyof typeof PartitionKind];
export declare const PublicNetworkAccess: {
    readonly Enabled: "Enabled";
    readonly Disabled: "Disabled";
    readonly SecuredByPerimeter: "SecuredByPerimeter";
};
/**
 * Whether requests from Public Network are allowed
 */
export type PublicNetworkAccess = (typeof PublicNetworkAccess)[keyof typeof PublicNetworkAccess];
export declare const ResourceIdentityType: {
    readonly SystemAssigned: "SystemAssigned";
    readonly UserAssigned: "UserAssigned";
    readonly SystemAssigned_UserAssigned: "SystemAssigned,UserAssigned";
    readonly None: "None";
};
/**
 * The type of identity used for the resource. The type 'SystemAssigned,UserAssigned' includes both an implicitly created identity and a set of user assigned identities. The type 'None' will remove any identities from the service.
 */
export type ResourceIdentityType = (typeof ResourceIdentityType)[keyof typeof ResourceIdentityType];
export declare const RestoreMode: {
    readonly PointInTime: "PointInTime";
};
/**
 * Describes the mode of the restore.
 */
export type RestoreMode = (typeof RestoreMode)[keyof typeof RestoreMode];
export declare const RoleDefinitionType: {
    readonly BuiltInRole: "BuiltInRole";
    readonly CustomRole: "CustomRole";
};
/**
 * Indicates whether the Role Definition was built-in or user created.
 */
export type RoleDefinitionType = (typeof RoleDefinitionType)[keyof typeof RoleDefinitionType];
export declare const ServerVersion: {
    readonly ServerVersion_3_2: "3.2";
    readonly ServerVersion_3_6: "3.6";
    readonly ServerVersion_4_0: "4.0";
    readonly ServerVersion_4_2: "4.2";
};
/**
 * Describes the ServerVersion of an a MongoDB account.
 */
export type ServerVersion = (typeof ServerVersion)[keyof typeof ServerVersion];
export declare const ServiceSize: {
    readonly Cosmos_D4s: "Cosmos.D4s";
    readonly Cosmos_D8s: "Cosmos.D8s";
    readonly Cosmos_D16s: "Cosmos.D16s";
};
/**
 * Instance type for the service.
 */
export type ServiceSize = (typeof ServiceSize)[keyof typeof ServiceSize];
export declare const ServiceType: {
    readonly SqlDedicatedGateway: "SqlDedicatedGateway";
    readonly DataTransfer: "DataTransfer";
    readonly GraphAPICompute: "GraphAPICompute";
    readonly MaterializedViewsBuilder: "MaterializedViewsBuilder";
};
/**
 * ServiceType for the service.
 */
export type ServiceType = (typeof ServiceType)[keyof typeof ServiceType];
export declare const SpatialType: {
    readonly Point: "Point";
    readonly LineString: "LineString";
    readonly Polygon: "Polygon";
    readonly MultiPolygon: "MultiPolygon";
};
/**
 * Indicates the spatial type of index.
 */
export type SpatialType = (typeof SpatialType)[keyof typeof SpatialType];
export declare const TriggerOperation: {
    readonly All: "All";
    readonly Create: "Create";
    readonly Update: "Update";
    readonly Delete: "Delete";
    readonly Replace: "Replace";
};
/**
 * The operation the trigger is associated with
 */
export type TriggerOperation = (typeof TriggerOperation)[keyof typeof TriggerOperation];
export declare const TriggerType: {
    readonly Pre: "Pre";
    readonly Post: "Post";
};
/**
 * Type of the Trigger
 */
export type TriggerType = (typeof TriggerType)[keyof typeof TriggerType];
