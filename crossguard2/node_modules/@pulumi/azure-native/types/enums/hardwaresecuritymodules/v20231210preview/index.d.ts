export declare const CloudHsmClusterSkuFamily: {
    readonly B: "B";
};
/**
 * Sku family of the Cloud HSM Cluster
 */
export type CloudHsmClusterSkuFamily = (typeof CloudHsmClusterSkuFamily)[keyof typeof CloudHsmClusterSkuFamily];
export declare const CloudHsmClusterSkuName: {
    readonly Standard_B1: "Standard_B1";
    readonly Standard_B10: "Standard B10";
};
/**
 * Sku name of the Cloud HSM Cluster
 */
export type CloudHsmClusterSkuName = (typeof CloudHsmClusterSkuName)[keyof typeof CloudHsmClusterSkuName];
export declare const ManagedServiceIdentityType: {
    readonly None: "None";
    readonly SystemAssigned: "SystemAssigned";
    readonly UserAssigned: "UserAssigned";
    readonly SystemAssigned_UserAssigned: "SystemAssigned,UserAssigned";
};
/**
 * Type of managed service identity (where both SystemAssigned and UserAssigned types are allowed).
 */
export type ManagedServiceIdentityType = (typeof ManagedServiceIdentityType)[keyof typeof ManagedServiceIdentityType];
export declare const PrivateEndpointServiceConnectionStatus: {
    readonly Pending: "Pending";
    readonly Approved: "Approved";
    readonly Rejected: "Rejected";
};
/**
 * Indicates whether the connection has been Approved/Rejected/Removed by the owner of the service.
 */
export type PrivateEndpointServiceConnectionStatus = (typeof PrivateEndpointServiceConnectionStatus)[keyof typeof PrivateEndpointServiceConnectionStatus];
export declare const ProvisioningState: {
    readonly Provisioning: "Provisioning";
    readonly Succeeded: "Succeeded";
    readonly Failed: "Failed";
    readonly Deleting: "Deleting";
    readonly Canceled: "Canceled";
};
/**
 * The Cloud HSM Cluster's provisioningState
 */
export type ProvisioningState = (typeof ProvisioningState)[keyof typeof ProvisioningState];
