"use strict";
// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***
Object.defineProperty(exports, "__esModule", { value: true });
exports.State = exports.SkuName = exports.SignedResourceTypes = exports.SignedResource = exports.ShareAccessTier = exports.Services = exports.Schedule = exports.RuleType = exports.RoutingChoice = exports.RootSquashType = exports.PublicNetworkAccess = exports.PublicAccess = exports.PrivateEndpointServiceConnectionStatus = exports.Permissions = exports.ObjectType = exports.Name = exports.MinimumTlsVersion = exports.LargeFileSharesState = exports.Kind = exports.KeyType = exports.KeySource = exports.InventoryRuleType = exports.IdentityType = exports.HttpProtocol = exports.Format = exports.ExtendedLocationTypes = exports.ExpirationAction = exports.EncryptionScopeState = exports.EncryptionScopeSource = exports.EnabledProtocols = exports.DnsEndpointType = exports.DirectoryServiceOptions = exports.DefaultSharePermission = exports.DefaultAction = exports.Bypass = exports.AllowedMethods = exports.AllowedCopyScope = exports.Action = exports.AccountType = exports.AccountImmutabilityPolicyState = exports.AccessTier = void 0;
exports.AccessTier = {
    Hot: "Hot",
    Cool: "Cool",
    Premium: "Premium",
};
exports.AccountImmutabilityPolicyState = {
    Unlocked: "Unlocked",
    Locked: "Locked",
    Disabled: "Disabled",
};
exports.AccountType = {
    User: "User",
    Computer: "Computer",
};
exports.Action = {
    Allow: "Allow",
};
exports.AllowedCopyScope = {
    PrivateLink: "PrivateLink",
    AAD: "AAD",
};
exports.AllowedMethods = {
    DELETE: "DELETE",
    GET: "GET",
    HEAD: "HEAD",
    MERGE: "MERGE",
    POST: "POST",
    OPTIONS: "OPTIONS",
    PUT: "PUT",
    PATCH: "PATCH",
    CONNECT: "CONNECT",
    TRACE: "TRACE",
};
exports.Bypass = {
    None: "None",
    Logging: "Logging",
    Metrics: "Metrics",
    AzureServices: "AzureServices",
};
exports.DefaultAction = {
    Allow: "Allow",
    Deny: "Deny",
};
exports.DefaultSharePermission = {
    None: "None",
    StorageFileDataSmbShareReader: "StorageFileDataSmbShareReader",
    StorageFileDataSmbShareContributor: "StorageFileDataSmbShareContributor",
    StorageFileDataSmbShareElevatedContributor: "StorageFileDataSmbShareElevatedContributor",
};
exports.DirectoryServiceOptions = {
    None: "None",
    AADDS: "AADDS",
    AD: "AD",
    AADKERB: "AADKERB",
};
exports.DnsEndpointType = {
    Standard: "Standard",
    AzureDnsZone: "AzureDnsZone",
};
exports.EnabledProtocols = {
    SMB: "SMB",
    NFS: "NFS",
};
exports.EncryptionScopeSource = {
    Microsoft_Storage: "Microsoft.Storage",
    Microsoft_KeyVault: "Microsoft.KeyVault",
};
exports.EncryptionScopeState = {
    Enabled: "Enabled",
    Disabled: "Disabled",
};
exports.ExpirationAction = {
    Log: "Log",
};
exports.ExtendedLocationTypes = {
    EdgeZone: "EdgeZone",
};
exports.Format = {
    Csv: "Csv",
    Parquet: "Parquet",
};
exports.HttpProtocol = {
    Https_http: "https,http",
    Https: "https",
};
exports.IdentityType = {
    None: "None",
    SystemAssigned: "SystemAssigned",
    UserAssigned: "UserAssigned",
    SystemAssigned_UserAssigned: "SystemAssigned,UserAssigned",
};
exports.InventoryRuleType = {
    Inventory: "Inventory",
};
exports.KeySource = {
    Microsoft_Storage: "Microsoft.Storage",
    Microsoft_Keyvault: "Microsoft.Keyvault",
};
exports.KeyType = {
    Service: "Service",
    Account: "Account",
};
exports.Kind = {
    Storage: "Storage",
    StorageV2: "StorageV2",
    BlobStorage: "BlobStorage",
    FileStorage: "FileStorage",
    BlockBlobStorage: "BlockBlobStorage",
};
exports.LargeFileSharesState = {
    Disabled: "Disabled",
    Enabled: "Enabled",
};
exports.MinimumTlsVersion = {
    TLS1_0: "TLS1_0",
    TLS1_1: "TLS1_1",
    TLS1_2: "TLS1_2",
};
exports.Name = {
    AccessTimeTracking: "AccessTimeTracking",
};
exports.ObjectType = {
    Blob: "Blob",
    Container: "Container",
};
exports.Permissions = {
    R: "r",
    D: "d",
    W: "w",
    L: "l",
    A: "a",
    C: "c",
    U: "u",
    P: "p",
};
exports.PrivateEndpointServiceConnectionStatus = {
    Pending: "Pending",
    Approved: "Approved",
    Rejected: "Rejected",
};
exports.PublicAccess = {
    Container: "Container",
    Blob: "Blob",
    None: "None",
};
exports.PublicNetworkAccess = {
    Enabled: "Enabled",
    Disabled: "Disabled",
};
exports.RootSquashType = {
    NoRootSquash: "NoRootSquash",
    RootSquash: "RootSquash",
    AllSquash: "AllSquash",
};
exports.RoutingChoice = {
    MicrosoftRouting: "MicrosoftRouting",
    InternetRouting: "InternetRouting",
};
exports.RuleType = {
    Lifecycle: "Lifecycle",
};
exports.Schedule = {
    Daily: "Daily",
    Weekly: "Weekly",
};
exports.Services = {
    B: "b",
    Q: "q",
    T: "t",
    F: "f",
};
exports.ShareAccessTier = {
    TransactionOptimized: "TransactionOptimized",
    Hot: "Hot",
    Cool: "Cool",
    Premium: "Premium",
};
exports.SignedResource = {
    B: "b",
    C: "c",
    F: "f",
    S: "s",
};
exports.SignedResourceTypes = {
    S: "s",
    C: "c",
    O: "o",
};
exports.SkuName = {
    Standard_LRS: "Standard_LRS",
    Standard_GRS: "Standard_GRS",
    Standard_RAGRS: "Standard_RAGRS",
    Standard_ZRS: "Standard_ZRS",
    Premium_LRS: "Premium_LRS",
    Premium_ZRS: "Premium_ZRS",
    Standard_GZRS: "Standard_GZRS",
    Standard_RAGZRS: "Standard_RAGZRS",
};
exports.State = {
    Provisioning: "Provisioning",
    Deprovisioning: "Deprovisioning",
    Succeeded: "Succeeded",
    Failed: "Failed",
    NetworkSourceDeleted: "NetworkSourceDeleted",
};
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaW5kZXguanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi8uLi90eXBlcy9lbnVtcy9zdG9yYWdlL3YyMDIzMDEwMS9pbmRleC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiO0FBQUEsc0VBQXNFO0FBQ3RFLGlGQUFpRjs7O0FBR3BFLFFBQUEsVUFBVSxHQUFHO0lBQ3RCLEdBQUcsRUFBRSxLQUFLO0lBQ1YsSUFBSSxFQUFFLE1BQU07SUFDWixPQUFPLEVBQUUsU0FBUztDQUNaLENBQUM7QUFPRSxRQUFBLDhCQUE4QixHQUFHO0lBQzFDLFFBQVEsRUFBRSxVQUFVO0lBQ3BCLE1BQU0sRUFBRSxRQUFRO0lBQ2hCLFFBQVEsRUFBRSxVQUFVO0NBQ2QsQ0FBQztBQU9FLFFBQUEsV0FBVyxHQUFHO0lBQ3ZCLElBQUksRUFBRSxNQUFNO0lBQ1osUUFBUSxFQUFFLFVBQVU7Q0FDZCxDQUFDO0FBT0UsUUFBQSxNQUFNLEdBQUc7SUFDbEIsS0FBSyxFQUFFLE9BQU87Q0FDUixDQUFDO0FBT0UsUUFBQSxnQkFBZ0IsR0FBRztJQUM1QixXQUFXLEVBQUUsYUFBYTtJQUMxQixHQUFHLEVBQUUsS0FBSztDQUNKLENBQUM7QUFPRSxRQUFBLGNBQWMsR0FBRztJQUMxQixNQUFNLEVBQUUsUUFBUTtJQUNoQixHQUFHLEVBQUUsS0FBSztJQUNWLElBQUksRUFBRSxNQUFNO0lBQ1osS0FBSyxFQUFFLE9BQU87SUFDZCxJQUFJLEVBQUUsTUFBTTtJQUNaLE9BQU8sRUFBRSxTQUFTO0lBQ2xCLEdBQUcsRUFBRSxLQUFLO0lBQ1YsS0FBSyxFQUFFLE9BQU87SUFDZCxPQUFPLEVBQUUsU0FBUztJQUNsQixLQUFLLEVBQUUsT0FBTztDQUNSLENBQUM7QUFJRSxRQUFBLE1BQU0sR0FBRztJQUNsQixJQUFJLEVBQUUsTUFBTTtJQUNaLE9BQU8sRUFBRSxTQUFTO0lBQ2xCLE9BQU8sRUFBRSxTQUFTO0lBQ2xCLGFBQWEsRUFBRSxlQUFlO0NBQ3hCLENBQUM7QUFP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