"use strict";
// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***
Object.defineProperty(exports, "__esModule", { value: true });
exports.WellKnownCommunities = exports.TapRuleActionType = exports.SourceDestinationType = exports.RoutePolicyConditionType = exports.RoutePolicyActionType = exports.RedistributeStaticRoutes = exports.RedistributeConnectedSubnets = exports.PrefixType = exports.PortType = exports.PollingType = exports.PeeringOption = exports.NniType = exports.NfcSku = exports.NetworkRackType = exports.Layer4Protocol = exports.IsWorkloadManagementNetworkEnabled = exports.IsMonitoringEnabled = exports.IsManagementType = exports.IPAddressType = exports.GatewayType = exports.Extension = exports.EncapsulationType = exports.Encapsulation = exports.DestinationType = exports.ConfigurationType = exports.Condition = exports.CommunityActionTypes = exports.BooleanEnumProperty = exports.AllowASOverride = exports.AddressFamilyType = exports.Action = exports.AclActionType = void 0;
exports.AclActionType = {
    Drop: "Drop",
    Count: "Count",
    Log: "Log",
};
exports.Action = {
    Allow: "Allow",
    Deny: "Deny",
};
exports.AddressFamilyType = {
    IPv4: "IPv4",
    IPv6: "IPv6",
};
exports.AllowASOverride = {
    Enable: "Enable",
    Disable: "Disable",
};
exports.BooleanEnumProperty = {
    True: "True",
    False: "False",
};
exports.CommunityActionTypes = {
    Permit: "Permit",
    Deny: "Deny",
};
exports.Condition = {
    EqualTo: "EqualTo",
    GreaterThanOrEqualTo: "GreaterThanOrEqualTo",
    LesserThanOrEqualTo: "LesserThanOrEqualTo",
    Range: "Range",
};
exports.ConfigurationType = {
    File: "File",
    Inline: "Inline",
};
exports.DestinationType = {
    IsolationDomain: "IsolationDomain",
    Direct: "Direct",
};
exports.Encapsulation = {
    None: "None",
    GRE: "GRE",
};
exports.EncapsulationType = {
    None: "None",
    GTPv1: "GTPv1",
};
exports.Extension = {
    NoExtension: "NoExtension",
    NPB: "NPB",
};
exports.GatewayType = {
    Infrastructure: "Infrastructure",
    Workload: "Workload",
};
exports.IPAddressType = {
    IPv4: "IPv4",
    IPv6: "IPv6",
};
exports.IsManagementType = {
    True: "True",
    False: "False",
};
exports.IsMonitoringEnabled = {
    True: "True",
    False: "False",
};
exports.IsWorkloadManagementNetworkEnabled = {
    True: "True",
    False: "False",
};
exports.Layer4Protocol = {
    TCP: "TCP",
    UDP: "UDP",
};
exports.NetworkRackType = {
    Aggregate: "Aggregate",
    Compute: "Compute",
    Combined: "Combined",
};
exports.NfcSku = {
    Basic: "Basic",
    Standard: "Standard",
    HighPerformance: "HighPerformance",
};
exports.NniType = {
    CE: "CE",
    NPB: "NPB",
};
exports.PeeringOption = {
    OptionA: "OptionA",
    OptionB: "OptionB",
};
exports.PollingType = {
    Pull: "Pull",
    Push: "Push",
};
exports.PortType = {
    SourcePort: "SourcePort",
    DestinationPort: "DestinationPort",
};
exports.PrefixType = {
    Prefix: "Prefix",
    LongestPrefix: "LongestPrefix",
};
exports.RedistributeConnectedSubnets = {
    True: "True",
    False: "False",
};
exports.RedistributeStaticRoutes = {
    True: "True",
    False: "False",
};
exports.RoutePolicyActionType = {
    Permit: "Permit",
    Deny: "Deny",
    Continue: "Continue",
};
exports.RoutePolicyConditionType = {
    Or: "Or",
    And: "And",
};
exports.SourceDestinationType = {
    SourceIP: "SourceIP",
    DestinationIP: "DestinationIP",
};
exports.TapRuleActionType = {
    Drop: "Drop",
    Count: "Count",
    Log: "Log",
    Replicate: "Replicate",
    Goto: "Goto",
    Redirect: "Redirect",
    Mirror: "Mirror",
};
exports.WellKnownCommunities = {
    Internet: "Internet",
    LocalAS: "LocalAS",
    NoAdvertise: "NoAdvertise",
    NoExport: "NoExport",
    GShut: "GShut",
};
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaW5kZXguanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi8uLi90eXBlcy9lbnVtcy9tYW5hZ2VkbmV0d29ya2ZhYnJpYy92MjAyMzA2MTUvaW5kZXgudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IjtBQUFBLHNFQUFzRTtBQUN0RSxpRkFBaUY7OztBQUdwRSxRQUFBLGFBQWEsR0FBRztJQUN6QixJQUFJLEVBQUUsTUFBTTtJQUNaLEtBQUssRUFBRSxPQUFPO0lBQ2QsR0FBRyxFQUFFLEtBQUs7Q0FDSixDQUFDO0FBT0UsUUFBQSxNQUFNLEdBQUc7SUFDbEIsS0FBSyxFQUFFLE9BQU87SUFDZCxJQUFJLEVBQUUsTUFBTTtDQUNOLENBQUM7QUFPRSxRQUFBLGlCQUFpQixHQUFHO0lBQzdCLElBQUksRUFBRSxNQUFNO0lBQ1osSUFBSSxFQUFFLE1BQU07Q0FDTixDQUFDO0FBT0UsUUFBQSxlQUFlLEdBQUc7SUFDM0IsTUFBTSxFQUFFLFFBQVE7SUFDaEIsT0FBTyxFQUFFLFNBQVM7Q0FDWixDQUFDO0FBT0UsUUFBQSxtQkFBbUIsR0FBRztJQUMvQixJQUFJLEVBQUUsTUFBTTtJQUNaLEtBQUssRUFBRSxPQUFPO0NBQ1IsQ0FBQztBQU9FLFFBQUEsb0JBQW9CLEdBQUc7SUFDaEMsTUFBTSxFQUFFLFFBQVE7SUFDaEIsSUFBSSxFQUFFLE1BQU07Q0FDTixDQUFDO0FBT0UsUUFBQSxTQUFTLEdBQUc7SUFDckIsT0FBTyxFQUFFLFNBQVM7SUFDbEIsb0JBQW9CLEVBQUUsc0JBQXNCO0lBQzVDLG1CQUFtQixFQUFFLHFCQUFxQjtJQUMxQyxLQUFLLEVBQUUsT0FBTztDQUNSLENBQUM7QUFPRSxRQUFBLGlCQUFpQixHQUFHO0lBQzdCLElBQUksRUFBRSxNQUFNO0lBQ1osTUFBTSxFQUFFLFFBQVE7Q0FDVixDQUFDO0FBT0UsUUFBQSxlQUFlLEdBQUc7SUFDM0IsZUFBZSxFQUFFLGlCQUFpQjtJQUNsQyxNQUFNLEVBQUUsUUFBUTtDQUNWLENB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