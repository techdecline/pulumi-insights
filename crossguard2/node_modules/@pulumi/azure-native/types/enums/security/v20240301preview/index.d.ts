export declare const CloudName: {
    readonly Azure: "Azure";
    readonly AWS: "AWS";
    readonly GCP: "GCP";
    readonly Github: "Github";
    readonly AzureDevOps: "AzureDevOps";
    readonly GitLab: "GitLab";
};
/**
 * The multi cloud resource's cloud name.
 */
export type CloudName = (typeof CloudName)[keyof typeof CloudName];
export declare const EnvironmentType: {
    readonly AwsAccount: "AwsAccount";
    readonly GcpProject: "GcpProject";
    readonly GithubScope: "GithubScope";
    readonly AzureDevOpsScope: "AzureDevOpsScope";
    readonly GitlabScope: "GitlabScope";
};
/**
 * The type of the environment data.
 */
export type EnvironmentType = (typeof EnvironmentType)[keyof typeof EnvironmentType];
export declare const OfferingType: {
    readonly CspmMonitorAws: "CspmMonitorAws";
    readonly DefenderForContainersAws: "DefenderForContainersAws";
    readonly DefenderForServersAws: "DefenderForServersAws";
    readonly DefenderForDatabasesAws: "DefenderForDatabasesAws";
    readonly CspmMonitorGcp: "CspmMonitorGcp";
    readonly CspmMonitorGithub: "CspmMonitorGithub";
    readonly CspmMonitorAzureDevOps: "CspmMonitorAzureDevOps";
    readonly DefenderForServersGcp: "DefenderForServersGcp";
    readonly DefenderForContainersGcp: "DefenderForContainersGcp";
    readonly DefenderForDatabasesGcp: "DefenderForDatabasesGcp";
    readonly DefenderCspmAws: "DefenderCspmAws";
    readonly DefenderCspmGcp: "DefenderCspmGcp";
    readonly CspmMonitorGitLab: "CspmMonitorGitLab";
};
/**
 * The type of the security offering.
 */
export type OfferingType = (typeof OfferingType)[keyof typeof OfferingType];
export declare const OrganizationMembershipType: {
    readonly Member: "Member";
    readonly Organization: "Organization";
};
/**
 * The multi cloud account's membership type in the organization
 */
export type OrganizationMembershipType = (typeof OrganizationMembershipType)[keyof typeof OrganizationMembershipType];
export declare const ScanningMode: {
    readonly Default: "Default";
};
/**
 * The scanning mode for the VM scan.
 */
export type ScanningMode = (typeof ScanningMode)[keyof typeof ScanningMode];
export declare const SubPlan: {
    readonly P1: "P1";
    readonly P2: "P2";
};
/**
 * The available sub plans
 */
export type SubPlan = (typeof SubPlan)[keyof typeof SubPlan];
export declare const Type: {
    readonly Qualys: "Qualys";
    readonly TVM: "TVM";
};
/**
 * The Vulnerability Assessment solution to be provisioned. Can be either 'TVM' or 'Qualys'
 */
export type Type = (typeof Type)[keyof typeof Type];
