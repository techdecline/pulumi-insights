export declare const KnownColumnDefinitionType: {
    readonly String: "string";
    readonly Int: "int";
    readonly Long: "long";
    readonly Real: "real";
    readonly Boolean: "boolean";
    readonly Datetime: "datetime";
    readonly Dynamic: "dynamic";
};
/**
 * The type of the column data.
 */
export type KnownColumnDefinitionType = (typeof KnownColumnDefinitionType)[keyof typeof KnownColumnDefinitionType];
export declare const KnownDataCollectionEndpointResourceKind: {
    readonly Linux: "Linux";
    readonly Windows: "Windows";
};
/**
 * The kind of the resource.
 */
export type KnownDataCollectionEndpointResourceKind = (typeof KnownDataCollectionEndpointResourceKind)[keyof typeof KnownDataCollectionEndpointResourceKind];
export declare const KnownDataCollectionRuleResourceKind: {
    readonly Linux: "Linux";
    readonly Windows: "Windows";
};
/**
 * The kind of the resource.
 */
export type KnownDataCollectionRuleResourceKind = (typeof KnownDataCollectionRuleResourceKind)[keyof typeof KnownDataCollectionRuleResourceKind];
export declare const KnownDataFlowStreams: {
    readonly Microsoft_Event: "Microsoft-Event";
    readonly Microsoft_InsightsMetrics: "Microsoft-InsightsMetrics";
    readonly Microsoft_Perf: "Microsoft-Perf";
    readonly Microsoft_Syslog: "Microsoft-Syslog";
    readonly Microsoft_WindowsEvent: "Microsoft-WindowsEvent";
};
export type KnownDataFlowStreams = (typeof KnownDataFlowStreams)[keyof typeof KnownDataFlowStreams];
export declare const KnownExtensionDataSourceStreams: {
    readonly Microsoft_Event: "Microsoft-Event";
    readonly Microsoft_InsightsMetrics: "Microsoft-InsightsMetrics";
    readonly Microsoft_Perf: "Microsoft-Perf";
    readonly Microsoft_Syslog: "Microsoft-Syslog";
    readonly Microsoft_WindowsEvent: "Microsoft-WindowsEvent";
};
export type KnownExtensionDataSourceStreams = (typeof KnownExtensionDataSourceStreams)[keyof typeof KnownExtensionDataSourceStreams];
export declare const KnownLogFileTextSettingsRecordStartTimestampFormat: {
    readonly ISO_8601: "ISO 8601";
    readonly YYYY_MM_DD_HH_MM_SS: "YYYY-MM-DD HH:MM:SS";
    readonly M_D_YYYY_HH_MM_SS_AM_PM: "M/D/YYYY HH:MM:SS AM/PM";
    readonly Mon_DD_YYYY_HH_MM_SS: "Mon DD, YYYY HH:MM:SS";
    readonly YyMMdd_HH_mm_ss: "yyMMdd HH:mm:ss";
    readonly DdMMyy_HH_mm_ss: "ddMMyy HH:mm:ss";
    readonly MMM_d_hh_mm_ss: "MMM d hh:mm:ss";
    readonly Dd_MMM_yyyy_HH_mm_ss_zzz: "dd/MMM/yyyy:HH:mm:ss zzz";
    readonly Yyyy_MM_ddTHH_mm_ssK: "yyyy-MM-ddTHH:mm:ssK";
};
/**
 * One of the supported timestamp formats
 */
export type KnownLogFileTextSettingsRecordStartTimestampFormat = (typeof KnownLogFileTextSettingsRecordStartTimestampFormat)[keyof typeof KnownLogFileTextSettingsRecordStartTimestampFormat];
export declare const KnownLogFilesDataSourceFormat: {
    readonly Text: "text";
};
/**
 * The data format of the log files
 */
export type KnownLogFilesDataSourceFormat = (typeof KnownLogFilesDataSourceFormat)[keyof typeof KnownLogFilesDataSourceFormat];
export declare const KnownPerfCounterDataSourceStreams: {
    readonly Microsoft_Perf: "Microsoft-Perf";
    readonly Microsoft_InsightsMetrics: "Microsoft-InsightsMetrics";
};
export type KnownPerfCounterDataSourceStreams = (typeof KnownPerfCounterDataSourceStreams)[keyof typeof KnownPerfCounterDataSourceStreams];
export declare const KnownPrometheusForwarderDataSourceStreams: {
    readonly Microsoft_PrometheusMetrics: "Microsoft-PrometheusMetrics";
};
export type KnownPrometheusForwarderDataSourceStreams = (typeof KnownPrometheusForwarderDataSourceStreams)[keyof typeof KnownPrometheusForwarderDataSourceStreams];
export declare const KnownPublicNetworkAccessOptions: {
    readonly Enabled: "Enabled";
    readonly Disabled: "Disabled";
    readonly SecuredByPerimeter: "SecuredByPerimeter";
};
/**
 * The configuration to set whether network access from public internet to the endpoints are allowed.
 */
export type KnownPublicNetworkAccessOptions = (typeof KnownPublicNetworkAccessOptions)[keyof typeof KnownPublicNetworkAccessOptions];
export declare const KnownSyslogDataSourceFacilityNames: {
    readonly Alert: "alert";
    readonly Audit: "audit";
    readonly Auth: "auth";
    readonly Authpriv: "authpriv";
    readonly Clock: "clock";
    readonly Cron: "cron";
    readonly Daemon: "daemon";
    readonly Ftp: "ftp";
    readonly Kern: "kern";
    readonly Lpr: "lpr";
    readonly Mail: "mail";
    readonly Mark: "mark";
    readonly News: "news";
    readonly Nopri: "nopri";
    readonly Ntp: "ntp";
    readonly Syslog: "syslog";
    readonly User: "user";
    readonly Uucp: "uucp";
    readonly Local0: "local0";
    readonly Local1: "local1";
    readonly Local2: "local2";
    readonly Local3: "local3";
    readonly Local4: "local4";
    readonly Local5: "local5";
    readonly Local6: "local6";
    readonly Local7: "local7";
    readonly Asterisk: "*";
};
export type KnownSyslogDataSourceFacilityNames = (typeof KnownSyslogDataSourceFacilityNames)[keyof typeof KnownSyslogDataSourceFacilityNames];
export declare const KnownSyslogDataSourceLogLevels: {
    readonly Debug: "Debug";
    readonly Info: "Info";
    readonly Notice: "Notice";
    readonly Warning: "Warning";
    readonly Error: "Error";
    readonly Critical: "Critical";
    readonly Alert: "Alert";
    readonly Emergency: "Emergency";
    readonly Asterisk: "*";
};
export type KnownSyslogDataSourceLogLevels = (typeof KnownSyslogDataSourceLogLevels)[keyof typeof KnownSyslogDataSourceLogLevels];
export declare const KnownSyslogDataSourceStreams: {
    readonly Microsoft_Syslog: "Microsoft-Syslog";
};
export type KnownSyslogDataSourceStreams = (typeof KnownSyslogDataSourceStreams)[keyof typeof KnownSyslogDataSourceStreams];
export declare const KnownWindowsEventLogDataSourceStreams: {
    readonly Microsoft_WindowsEvent: "Microsoft-WindowsEvent";
    readonly Microsoft_Event: "Microsoft-Event";
};
export type KnownWindowsEventLogDataSourceStreams = (typeof KnownWindowsEventLogDataSourceStreams)[keyof typeof KnownWindowsEventLogDataSourceStreams];
export declare const ManagedServiceIdentityType: {
    readonly None: "None";
    readonly SystemAssigned: "SystemAssigned";
    readonly UserAssigned: "UserAssigned";
    readonly SystemAssigned_UserAssigned: "SystemAssigned,UserAssigned";
};
/**
 * Type of managed service identity (where both SystemAssigned and UserAssigned types are allowed).
 */
export type ManagedServiceIdentityType = (typeof ManagedServiceIdentityType)[keyof typeof ManagedServiceIdentityType];
