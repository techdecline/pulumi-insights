"use strict";
// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***
Object.defineProperty(exports, "__esModule", { value: true });
exports.Operator = exports.Odatatype = exports.DynamicThresholdSensitivity = exports.DynamicThresholdOperator = exports.CriterionType = exports.AggregationTypeEnum = void 0;
exports.AggregationTypeEnum = {
    Average: "Average",
    Count: "Count",
    Minimum: "Minimum",
    Maximum: "Maximum",
    Total: "Total",
};
exports.CriterionType = {
    StaticThresholdCriterion: "StaticThresholdCriterion",
    DynamicThresholdCriterion: "DynamicThresholdCriterion",
};
exports.DynamicThresholdOperator = {
    GreaterThan: "GreaterThan",
    LessThan: "LessThan",
    GreaterOrLessThan: "GreaterOrLessThan",
};
exports.DynamicThresholdSensitivity = {
    Low: "Low",
    Medium: "Medium",
    High: "High",
};
exports.Odatatype = {
    Microsoft_Azure_Monitor_SingleResourceMultipleMetricCriteria: "Microsoft.Azure.Monitor.SingleResourceMultipleMetricCriteria",
    Microsoft_Azure_Monitor_MultipleResourceMultipleMetricCriteria: "Microsoft.Azure.Monitor.MultipleResourceMultipleMetricCriteria",
    Microsoft_Azure_Monitor_WebtestLocationAvailabilityCriteria: "Microsoft.Azure.Monitor.WebtestLocationAvailabilityCriteria",
};
exports.Operator = {
    Equals: "Equals",
    GreaterThan: "GreaterThan",
    GreaterThanOrEqual: "GreaterThanOrEqual",
    LessThan: "LessThan",
    LessThanOrEqual: "LessThanOrEqual",
};
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaW5kZXguanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi8uLi90eXBlcy9lbnVtcy9pbnNpZ2h0cy92MjAxODAzMDEvaW5kZXgudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IjtBQUFBLHNFQUFzRTtBQUN0RSxpRkFBaUY7OztBQUdwRSxRQUFBLG1CQUFtQixHQUFHO0lBQy9CLE9BQU8sRUFBRSxTQUFTO0lBQ2xCLEtBQUssRUFBRSxPQUFPO0lBQ2QsT0FBTyxFQUFFLFNBQVM7SUFDbEIsT0FBTyxFQUFFLFNBQVM7SUFDbEIsS0FBSyxFQUFFLE9BQU87Q0FDUixDQUFDO0FBT0UsUUFBQSxhQUFhLEdBQUc7SUFDekIsd0JBQXdCLEVBQUUsMEJBQTBCO0lBQ3BELHlCQUF5QixFQUFFLDJCQUEyQjtDQUNoRCxDQUFDO0FBT0UsUUFBQSx3QkFBd0IsR0FBRztJQUNwQyxXQUFXLEVBQUUsYUFBYTtJQUMxQixRQUFRLEVBQUUsVUFBVTtJQUNwQixpQkFBaUIsRUFBRSxtQkFBbUI7Q0FDaEMsQ0FBQztBQU9FLFFBQUEsMkJBQTJCLEdBQUc7SUFDdkMsR0FBRyxFQUFFLEtBQUs7SUFDVixNQUFNLEVBQUUsUUFBUTtJQUNoQixJQUFJLEVBQUUsTUFBTTtDQUNOLENBQUM7QUFPRSxRQUFBLFNBQVMsR0FBRztJQUNyQiw0REFBNEQsRUFBRSw4REFBOEQ7SUFDNUgsOERBQThELEVBQUUsZ0VBQWdFO0lBQ2hJLDJEQUEyRCxFQUFFLDZEQUE2RDtDQUNwSCxDQUFDO0FBT0UsUUFBQSxRQUFRLEdBQUc7SUFDcEIsTUFBTSxFQUFFLFFBQVE7SUFDaEIsV0FBVyxFQUFFLGFBQWE7SUFDMUIsa0JBQWtCLEVBQUUsb0JBQW9CO0lBQ3hDLFFBQVEsRUFBRSxVQUFVO0lBQ3BCLGVBQWUsRUFBRSxpQkFBaUI7Q0FDNUIsQ0FBQyJ9