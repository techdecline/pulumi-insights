export declare const AutomationArtifactStatus: {
    readonly NotGenerated: "NotGenerated";
    readonly Generated: "Generated";
};
/**
 * Gets or sets the status of automation artifacts.
 */
export type AutomationArtifactStatus = (typeof AutomationArtifactStatus)[keyof typeof AutomationArtifactStatus];
export declare const ConfigurationType: {
    readonly IISConnectionString: "IISConnectionString";
    readonly IISAuthentication: "IISAuthentication";
    readonly ApacheTomcatContextResource: "ApacheTomcatContextResource";
};
/**
 * Gets or sets the configuration type.
 */
export type ConfigurationType = (typeof ConfigurationType)[keyof typeof ConfigurationType];
export declare const LoadBalancerType: {
    readonly Private: "Private";
    readonly Public: "Public";
};
/**
 * Gets or sets the load balancer type.
 */
export type LoadBalancerType = (typeof LoadBalancerType)[keyof typeof LoadBalancerType];
export declare const OperatingSystemType: {
    readonly Windows: "Windows";
    readonly Linux: "Linux";
};
export type OperatingSystemType = (typeof OperatingSystemType)[keyof typeof OperatingSystemType];
export declare const ResourceIdentityTypes: {
    readonly None: "None";
    readonly SystemAssigned: "SystemAssigned";
    readonly UserAssigned: "UserAssigned";
};
export type ResourceIdentityTypes = (typeof ResourceIdentityTypes)[keyof typeof ResourceIdentityTypes];
export declare const SecretStoreType: {
    readonly None: "None";
    readonly KubeSecret: "KubeSecret";
    readonly KeyVaultSecret: "KeyVaultSecret";
    readonly AppServiceAppSettings: "AppServiceAppSettings";
};
export type SecretStoreType = (typeof SecretStoreType)[keyof typeof SecretStoreType];
export declare const TargetHydrationStorageProviderType: {
    readonly AzureFileShare: "AzureFileShare";
};
/**
 * Gets or sets the storage provider type on the target.
 * Applicable when StorageProjectionType is not ContainerFileSystem.
 */
export type TargetHydrationStorageProviderType = (typeof TargetHydrationStorageProviderType)[keyof typeof TargetHydrationStorageProviderType];
export declare const TargetStorageAccessType: {
    readonly Shared: "Shared";
    readonly Exclusive: "Exclusive";
};
/**
 * Gets or sets the target storage access type.
 */
export type TargetStorageAccessType = (typeof TargetStorageAccessType)[keyof typeof TargetStorageAccessType];
export declare const TargetStorageProjectionType: {
    readonly ContainerFileSystem: "ContainerFileSystem";
    readonly PersistentVolume: "PersistentVolume";
};
/**
 * Gets or sets the target projection type.
 */
export type TargetStorageProjectionType = (typeof TargetStorageProjectionType)[keyof typeof TargetStorageProjectionType];
export declare const WorkloadDeploymentTarget: {
    readonly AzureKubernetesService: "AzureKubernetesService";
    readonly AzureAppServiceContainer: "AzureAppServiceContainer";
    readonly AzureAppServiceNative: "AzureAppServiceNative";
};
/**
 * Gets or sets the deployment target platform.
 */
export type WorkloadDeploymentTarget = (typeof WorkloadDeploymentTarget)[keyof typeof WorkloadDeploymentTarget];
export declare const WorkloadDeploymentType: {
    readonly IISAKSWorkloadDeployment: "IISAKSWorkloadDeployment";
    readonly ApacheTomcatAKSWorkloadDeployment: "ApacheTomcatAKSWorkloadDeployment";
};
/**
 * Gets or sets the instance type.
 */
export type WorkloadDeploymentType = (typeof WorkloadDeploymentType)[keyof typeof WorkloadDeploymentType];
export declare const WorkloadType: {
    readonly IISWorkload: "IISWorkload";
    readonly ApacheTomcatWorkload: "ApacheTomcatWorkload";
};
/**
 * Gets or sets the instance type.
 */
export type WorkloadType = (typeof WorkloadType)[keyof typeof WorkloadType];
