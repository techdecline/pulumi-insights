export declare const CleanupState: {
    readonly None: "None";
    readonly Started: "Started";
    readonly InProgress: "InProgress";
    readonly Completed: "Completed";
    readonly Failed: "Failed";
};
/**
 * Gets or sets the cleanup state of the solution.
 */
export type CleanupState = (typeof CleanupState)[keyof typeof CleanupState];
export declare const Goal: {
    readonly Servers: "Servers";
    readonly Databases: "Databases";
    readonly DesktopVirtualization: "DesktopVirtualization";
    readonly WebApplications: "WebApplications";
    readonly DataCenter: "DataCenter";
};
/**
 * Gets or sets the goal of the solution.
 */
export type Goal = (typeof Goal)[keyof typeof Goal];
export declare const PrivateLinkServiceConnectionStateStatus: {
    readonly Approved: "Approved";
    readonly Pending: "Pending";
    readonly Rejected: "Rejected";
    readonly Disconnected: "Disconnected";
};
/**
 * Private link connection state.
 */
export type PrivateLinkServiceConnectionStateStatus = (typeof PrivateLinkServiceConnectionStateStatus)[keyof typeof PrivateLinkServiceConnectionStateStatus];
export declare const PublicNetworkAccess: {
    readonly NotSpecified: "NotSpecified";
    readonly Enabled: "Enabled";
    readonly Disabled: "Disabled";
};
/**
 * Gets or sets the state of public network access.
 */
export type PublicNetworkAccess = (typeof PublicNetworkAccess)[keyof typeof PublicNetworkAccess];
export declare const Purpose: {
    readonly Discovery: "Discovery";
    readonly Assessment: "Assessment";
    readonly Migration: "Migration";
};
/**
 * Gets or sets the purpose of the solution.
 */
export type Purpose = (typeof Purpose)[keyof typeof Purpose];
export declare const Status: {
    readonly Inactive: "Inactive";
    readonly Active: "Active";
};
/**
 * Gets or sets the current status of the solution.
 */
export type Status = (typeof Status)[keyof typeof Status];
export declare const Tool: {
    readonly ServerDiscovery: "ServerDiscovery";
    readonly ServerAssessment: "ServerAssessment";
    readonly ServerMigration: "ServerMigration";
    readonly Cloudamize: "Cloudamize";
    readonly Turbonomic: "Turbonomic";
    readonly Zerto: "Zerto";
    readonly CorentTech: "CorentTech";
    readonly ServerAssessmentV1: "ServerAssessmentV1";
    readonly ServerMigration_Replication: "ServerMigration_Replication";
    readonly Carbonite: "Carbonite";
    readonly DataMigrationAssistant: "DataMigrationAssistant";
    readonly DatabaseMigrationService: "DatabaseMigrationService";
    readonly Device42: "Device42";
    readonly JetStream: "JetStream";
    readonly RackWare: "RackWare";
    readonly UnifyCloud: "UnifyCloud";
    readonly Flexera: "Flexera";
    readonly ServerDiscovery_Import: "ServerDiscovery_Import";
    readonly Lakeside: "Lakeside";
    readonly AppServiceMigrationAssistant: "AppServiceMigrationAssistant";
    readonly Movere: "Movere";
    readonly CloudSphere: "CloudSphere";
    readonly Modernization: "Modernization";
    readonly ServerMigration_DataReplication: "ServerMigration_DataReplication";
    readonly Unknown: "Unknown";
};
/**
 * Gets or sets the tool being used in the solution.
 */
export type Tool = (typeof Tool)[keyof typeof Tool];
