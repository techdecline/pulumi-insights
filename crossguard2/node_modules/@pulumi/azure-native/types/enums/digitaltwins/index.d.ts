import * as v20201201 from "./v20201201";
import * as v20230131 from "./v20230131";
export { v20201201, v20230131, };
export declare const AuthenticationType: {
    readonly KeyBased: "KeyBased";
    readonly IdentityBased: "IdentityBased";
};
/**
 * Specifies the authentication type being used for connecting to the endpoint. Defaults to 'KeyBased'. If 'KeyBased' is selected, a connection string must be specified (at least the primary connection string). If 'IdentityBased' is select, the endpointUri and entityPath properties must be specified.
 */
export type AuthenticationType = (typeof AuthenticationType)[keyof typeof AuthenticationType];
export declare const ConnectionType: {
    readonly AzureDataExplorer: "AzureDataExplorer";
};
/**
 * The type of time series connection resource.
 */
export type ConnectionType = (typeof ConnectionType)[keyof typeof ConnectionType];
export declare const DigitalTwinsIdentityType: {
    readonly None: "None";
    readonly SystemAssigned: "SystemAssigned";
    readonly UserAssigned: "UserAssigned";
    readonly SystemAssigned_UserAssigned: "SystemAssigned,UserAssigned";
};
/**
 * The type of Managed Identity used by the DigitalTwinsInstance.
 */
export type DigitalTwinsIdentityType = (typeof DigitalTwinsIdentityType)[keyof typeof DigitalTwinsIdentityType];
export declare const EndpointType: {
    readonly EventHub: "EventHub";
    readonly EventGrid: "EventGrid";
    readonly ServiceBus: "ServiceBus";
};
/**
 * The type of Digital Twins endpoint
 */
export type EndpointType = (typeof EndpointType)[keyof typeof EndpointType];
export declare const IdentityType: {
    readonly SystemAssigned: "SystemAssigned";
    readonly UserAssigned: "UserAssigned";
};
/**
 * The type of managed identity used.
 */
export type IdentityType = (typeof IdentityType)[keyof typeof IdentityType];
export declare const PrivateLinkServiceConnectionStatus: {
    readonly Pending: "Pending";
    readonly Approved: "Approved";
    readonly Rejected: "Rejected";
    readonly Disconnected: "Disconnected";
};
/**
 * The status of a private endpoint connection.
 */
export type PrivateLinkServiceConnectionStatus = (typeof PrivateLinkServiceConnectionStatus)[keyof typeof PrivateLinkServiceConnectionStatus];
export declare const PublicNetworkAccess: {
    readonly Enabled: "Enabled";
    readonly Disabled: "Disabled";
};
/**
 * Public network access for the DigitalTwinsInstance.
 */
export type PublicNetworkAccess = (typeof PublicNetworkAccess)[keyof typeof PublicNetworkAccess];
export declare const RecordPropertyAndItemRemovals: {
    readonly True: "true";
    readonly False: "false";
};
/**
 * Specifies whether or not to record twin / relationship property and item removals, including removals of indexed or keyed values (such as map entries, array elements, etc.). This feature is de-activated unless explicitly set to 'true'. Setting this property to 'true' will generate an additional column in the property events table in ADX.
 */
export type RecordPropertyAndItemRemovals = (typeof RecordPropertyAndItemRemovals)[keyof typeof RecordPropertyAndItemRemovals];
