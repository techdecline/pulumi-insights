import * as v20190505preview from "./v20190505preview";
import * as v20210401 from "./v20210401";
import * as v20210808 from "./v20210808";
export { v20190505preview, v20210401, v20210808, };
export declare const ActionRuleStatus: {
    readonly Enabled: "Enabled";
    readonly Disabled: "Disabled";
};
/**
 * Indicates if the given action rule is enabled or disabled
 */
export type ActionRuleStatus = (typeof ActionRuleStatus)[keyof typeof ActionRuleStatus];
export declare const ActionRuleType: {
    readonly Suppression: "Suppression";
    readonly ActionGroup: "ActionGroup";
    readonly Diagnostics: "Diagnostics";
};
/**
 * Indicates type of action rule
 */
export type ActionRuleType = (typeof ActionRuleType)[keyof typeof ActionRuleType];
export declare const ActionType: {
    readonly AddActionGroups: "AddActionGroups";
    readonly RemoveAllActionGroups: "RemoveAllActionGroups";
};
/**
 * Action that should be applied.
 */
export type ActionType = (typeof ActionType)[keyof typeof ActionType];
export declare const AlertRuleState: {
    readonly Enabled: "Enabled";
    readonly Disabled: "Disabled";
};
/**
 * The alert rule state.
 */
export type AlertRuleState = (typeof AlertRuleState)[keyof typeof AlertRuleState];
export declare const DaysOfWeek: {
    readonly Sunday: "Sunday";
    readonly Monday: "Monday";
    readonly Tuesday: "Tuesday";
    readonly Wednesday: "Wednesday";
    readonly Thursday: "Thursday";
    readonly Friday: "Friday";
    readonly Saturday: "Saturday";
};
/**
 * Days of week.
 */
export type DaysOfWeek = (typeof DaysOfWeek)[keyof typeof DaysOfWeek];
export declare const Field: {
    readonly Severity: "Severity";
    readonly MonitorService: "MonitorService";
    readonly MonitorCondition: "MonitorCondition";
    readonly SignalType: "SignalType";
    readonly TargetResourceType: "TargetResourceType";
    readonly TargetResource: "TargetResource";
    readonly TargetResourceGroup: "TargetResourceGroup";
    readonly AlertRuleId: "AlertRuleId";
    readonly AlertRuleName: "AlertRuleName";
    readonly Description: "Description";
    readonly AlertContext: "AlertContext";
};
/**
 * Field for a given condition.
 */
export type Field = (typeof Field)[keyof typeof Field];
export declare const Operator: {
    readonly Equals: "Equals";
    readonly NotEquals: "NotEquals";
    readonly Contains: "Contains";
    readonly DoesNotContain: "DoesNotContain";
};
/**
 * Operator for a given condition.
 */
export type Operator = (typeof Operator)[keyof typeof Operator];
export declare const RecurrenceType: {
    readonly Daily: "Daily";
    readonly Weekly: "Weekly";
    readonly Monthly: "Monthly";
};
/**
 * Specifies when the recurrence should be applied.
 */
export type RecurrenceType = (typeof RecurrenceType)[keyof typeof RecurrenceType];
export declare const ScopeType: {
    readonly ResourceGroup: "ResourceGroup";
    readonly Resource: "Resource";
    readonly Subscription: "Subscription";
};
/**
 * type of target scope
 */
export type ScopeType = (typeof ScopeType)[keyof typeof ScopeType];
export declare const Severity: {
    readonly Sev0: "Sev0";
    readonly Sev1: "Sev1";
    readonly Sev2: "Sev2";
    readonly Sev3: "Sev3";
    readonly Sev4: "Sev4";
};
/**
 * The alert rule severity.
 */
export type Severity = (typeof Severity)[keyof typeof Severity];
export declare const SuppressionType: {
    readonly Always: "Always";
    readonly Once: "Once";
    readonly Daily: "Daily";
    readonly Weekly: "Weekly";
    readonly Monthly: "Monthly";
};
/**
 * Specifies when the suppression should be applied
 */
export type SuppressionType = (typeof SuppressionType)[keyof typeof SuppressionType];
