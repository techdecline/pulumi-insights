export declare const AccountProvisioningMode: {
    readonly Automatic: "automatic";
    readonly Manual: "manual";
};
/**
 * The service account provisioning mode for this Active Directory connector.
 */
export type AccountProvisioningMode = (typeof AccountProvisioningMode)[keyof typeof AccountProvisioningMode];
export declare const ArcSqlManagedInstanceLicenseType: {
    readonly BasePrice: "BasePrice";
    readonly LicenseIncluded: "LicenseIncluded";
    readonly DisasterRecovery: "DisasterRecovery";
};
/**
 * The license type to apply for this managed instance.
 */
export type ArcSqlManagedInstanceLicenseType = (typeof ArcSqlManagedInstanceLicenseType)[keyof typeof ArcSqlManagedInstanceLicenseType];
export declare const ArcSqlServerLicenseType: {
    readonly Undefined: "Undefined";
    readonly Free: "Free";
    readonly HADR: "HADR";
    readonly ServerCAL: "ServerCAL";
    readonly LicenseOnly: "LicenseOnly";
    readonly PAYG: "PAYG";
    readonly Paid: "Paid";
};
/**
 * SQL Server license type.
 */
export type ArcSqlServerLicenseType = (typeof ArcSqlServerLicenseType)[keyof typeof ArcSqlServerLicenseType];
export declare const ConnectionStatus: {
    readonly Connected: "Connected";
    readonly Disconnected: "Disconnected";
    readonly Registered: "Registered";
    readonly Unknown: "Unknown";
};
/**
 * The cloud connectivity status.
 */
export type ConnectionStatus = (typeof ConnectionStatus)[keyof typeof ConnectionStatus];
export declare const DatabaseState: {
    readonly Online: "Online";
    readonly Restoring: "Restoring";
    readonly Recovering: "Recovering";
    readonly RecoveryPending: "RecoveryPending";
    readonly Suspect: "Suspect";
    readonly Emergency: "Emergency";
    readonly Offline: "Offline";
    readonly Copying: "Copying";
    readonly OfflineSecondary: "OfflineSecondary";
};
/**
 * State of the database.
 */
export type DatabaseState = (typeof DatabaseState)[keyof typeof DatabaseState];
export declare const DefenderStatus: {
    readonly Protected: "Protected";
    readonly Unprotected: "Unprotected";
    readonly Unknown: "Unknown";
};
/**
 * Status of Azure Defender.
 */
export type DefenderStatus = (typeof DefenderStatus)[keyof typeof DefenderStatus];
export declare const EditionType: {
    readonly Evaluation: "Evaluation";
    readonly Enterprise: "Enterprise";
    readonly Standard: "Standard";
    readonly Web: "Web";
    readonly Developer: "Developer";
    readonly Express: "Express";
    readonly Business_Intelligence: "Business Intelligence";
};
/**
 * SQL Server edition.
 */
export type EditionType = (typeof EditionType)[keyof typeof EditionType];
export declare const ExtendedLocationTypes: {
    readonly CustomLocation: "CustomLocation";
};
/**
 * The type of the extended location.
 */
export type ExtendedLocationTypes = (typeof ExtendedLocationTypes)[keyof typeof ExtendedLocationTypes];
export declare const FailoverGroupPartnerSyncMode: {
    readonly Async: "async";
    readonly Sync: "sync";
};
/**
 * The partner sync mode of the SQL managed instance.
 */
export type FailoverGroupPartnerSyncMode = (typeof FailoverGroupPartnerSyncMode)[keyof typeof FailoverGroupPartnerSyncMode];
export declare const HostType: {
    readonly Azure_Virtual_Machine: "Azure Virtual Machine";
    readonly Azure_VMWare_Virtual_Machine: "Azure VMWare Virtual Machine";
    readonly Azure_Kubernetes_Service: "Azure Kubernetes Service";
    readonly AWS_VMWare_Virtual_Machine: "AWS VMWare Virtual Machine";
    readonly AWS_Kubernetes_Service: "AWS Kubernetes Service";
    readonly GCP_VMWare_Virtual_Machine: "GCP VMWare Virtual Machine";
    readonly GCP_Kubernetes_Service: "GCP Kubernetes Service";
    readonly Container: "Container";
    readonly Virtual_Machine: "Virtual Machine";
    readonly Physical_Server: "Physical Server";
    readonly AWS_Virtual_Machine: "AWS Virtual Machine";
    readonly GCP_Virtual_Machine: "GCP Virtual Machine";
    readonly Other: "Other";
};
/**
 * Type of host for Azure Arc SQL Server
 */
export type HostType = (typeof HostType)[keyof typeof HostType];
export declare const Infrastructure: {
    readonly Azure: "azure";
    readonly Gcp: "gcp";
    readonly Aws: "aws";
    readonly Alibaba: "alibaba";
    readonly Onpremises: "onpremises";
    readonly Other: "other";
};
/**
 * The infrastructure the data controller is running on.
 */
export type Infrastructure = (typeof Infrastructure)[keyof typeof Infrastructure];
export declare const InstanceFailoverGroupRole: {
    readonly Primary: "primary";
    readonly Secondary: "secondary";
    readonly Force_primary_allow_data_loss: "force-primary-allow-data-loss";
    readonly Force_secondary: "force-secondary";
};
/**
 * The role of the SQL managed instance in this failover group.
 */
export type InstanceFailoverGroupRole = (typeof InstanceFailoverGroupRole)[keyof typeof InstanceFailoverGroupRole];
export declare const PostgresInstanceSkuTier: {
    readonly Hyperscale: "Hyperscale";
};
/**
 * This field is required to be implemented by the Resource Provider if the service has more than one tier.
 */
export type PostgresInstanceSkuTier = (typeof PostgresInstanceSkuTier)[keyof typeof PostgresInstanceSkuTier];
export declare const RecoveryMode: {
    readonly Full: "Full";
    readonly Bulk_logged: "Bulk-logged";
    readonly Simple: "Simple";
};
/**
 * Status of the database.
 */
export type RecoveryMode = (typeof RecoveryMode)[keyof typeof RecoveryMode];
export declare const SqlManagedInstanceSkuName: {
    readonly VCore: "vCore";
};
/**
 * The name of the SKU.
 */
export type SqlManagedInstanceSkuName = (typeof SqlManagedInstanceSkuName)[keyof typeof SqlManagedInstanceSkuName];
export declare const SqlManagedInstanceSkuTier: {
    readonly GeneralPurpose: "GeneralPurpose";
    readonly BusinessCritical: "BusinessCritical";
};
/**
 * The pricing tier for the instance.
 */
export type SqlManagedInstanceSkuTier = (typeof SqlManagedInstanceSkuTier)[keyof typeof SqlManagedInstanceSkuTier];
export declare const SqlVersion: {
    readonly SQL_Server_2012: "SQL Server 2012";
    readonly SQL_Server_2014: "SQL Server 2014";
    readonly SQL_Server_2016: "SQL Server 2016";
    readonly SQL_Server_2017: "SQL Server 2017";
    readonly SQL_Server_2019: "SQL Server 2019";
    readonly SQL_Server_2022: "SQL Server 2022";
    readonly Unknown: "Unknown";
};
/**
 * SQL Server version.
 */
export type SqlVersion = (typeof SqlVersion)[keyof typeof SqlVersion];
