export declare const ExportType: {
    readonly Usage: "Usage";
};
/**
 * The type of the query.
 */
export type ExportType = (typeof ExportType)[keyof typeof ExportType];
export declare const FormatType: {
    readonly Csv: "Csv";
};
/**
 * The format of the export being delivered.
 */
export type FormatType = (typeof FormatType)[keyof typeof FormatType];
export declare const FunctionType: {
    readonly Sum: "Sum";
};
/**
 * The name of the aggregation function to use.
 */
export type FunctionType = (typeof FunctionType)[keyof typeof FunctionType];
export declare const GranularityType: {
    readonly Daily: "Daily";
    readonly Hourly: "Hourly";
};
/**
 * The granularity of rows in the query.
 */
export type GranularityType = (typeof GranularityType)[keyof typeof GranularityType];
export declare const OperatorType: {
    readonly In: "In";
};
/**
 * The operator to use for comparison.
 */
export type OperatorType = (typeof OperatorType)[keyof typeof OperatorType];
export declare const QueryColumnType: {
    readonly Tag: "Tag";
    readonly Dimension: "Dimension";
};
/**
 * Has type of the column to group.
 */
export type QueryColumnType = (typeof QueryColumnType)[keyof typeof QueryColumnType];
export declare const RecurrenceType: {
    readonly Daily: "Daily";
    readonly Weekly: "Weekly";
    readonly Monthly: "Monthly";
    readonly Annually: "Annually";
};
/**
 * The schedule recurrence.
 */
export type RecurrenceType = (typeof RecurrenceType)[keyof typeof RecurrenceType];
export declare const SortDirection: {
    readonly Ascending: "Ascending";
    readonly Descending: "Descending";
};
/**
 * The sorting direction
 */
export type SortDirection = (typeof SortDirection)[keyof typeof SortDirection];
export declare const StatusType: {
    readonly Active: "Active";
    readonly Inactive: "Inactive";
};
/**
 * The status of the schedule. Whether active or not. If inactive, the export's scheduled execution is paused.
 */
export type StatusType = (typeof StatusType)[keyof typeof StatusType];
export declare const TimeframeType: {
    readonly WeekToDate: "WeekToDate";
    readonly MonthToDate: "MonthToDate";
    readonly YearToDate: "YearToDate";
    readonly TheLastWeek: "TheLastWeek";
    readonly TheLastMonth: "TheLastMonth";
    readonly TheLastYear: "TheLastYear";
    readonly Custom: "Custom";
};
/**
 * The time frame for pulling data for the query. If custom, then a specific time period must be provided.
 */
export type TimeframeType = (typeof TimeframeType)[keyof typeof TimeframeType];
