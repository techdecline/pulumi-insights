export declare const ApplicationType: {
    readonly ConfidentialLedger: "ConfidentialLedger";
    readonly CodeTransparency: "CodeTransparency";
};
/**
 * Application type of the Confidential Ledger.
 */
export type ApplicationType = (typeof ApplicationType)[keyof typeof ApplicationType];
export declare const EnclavePlatform: {
    readonly IntelSgx: "IntelSgx";
    readonly AmdSevSnp: "AmdSevSnp";
};
/**
 * Enclave platform of Managed CCF.
 */
export type EnclavePlatform = (typeof EnclavePlatform)[keyof typeof EnclavePlatform];
export declare const LanguageRuntime: {
    readonly CPP: "CPP";
    readonly JS: "JS";
};
/**
 * Unique name for the Managed CCF.
 */
export type LanguageRuntime = (typeof LanguageRuntime)[keyof typeof LanguageRuntime];
export declare const LedgerRoleName: {
    readonly Reader: "Reader";
    readonly Contributor: "Contributor";
    readonly Administrator: "Administrator";
};
/**
 * LedgerRole associated with the Security Principal of Ledger
 */
export type LedgerRoleName = (typeof LedgerRoleName)[keyof typeof LedgerRoleName];
export declare const LedgerSku: {
    readonly Standard: "Standard";
    readonly Basic: "Basic";
    readonly Unknown: "Unknown";
};
/**
 * SKU associated with the ledger
 */
export type LedgerSku = (typeof LedgerSku)[keyof typeof LedgerSku];
export declare const LedgerType: {
    readonly Unknown: "Unknown";
    readonly Public: "Public";
    readonly Private: "Private";
};
/**
 * Type of Confidential Ledger
 */
export type LedgerType = (typeof LedgerType)[keyof typeof LedgerType];
export declare const RunningState: {
    readonly Active: "Active";
    readonly Paused: "Paused";
    readonly Unknown: "Unknown";
    readonly Pausing: "Pausing";
    readonly Resuming: "Resuming";
};
/**
 * Object representing RunningState for Managed CCF.
 */
export type RunningState = (typeof RunningState)[keyof typeof RunningState];
