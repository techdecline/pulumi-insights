import * as v20220521preview from "./v20220521preview";
import * as v20230401preview from "./v20230401preview";
import * as v20231007 from "./v20231007";
import * as v20240601 from "./v20240601";
export { v20220521preview, v20230401preview, v20231007, v20240601, };
export declare const AllocationMethod: {
    readonly Dynamic: "Dynamic";
    readonly Static: "Static";
};
/**
 * Gets or sets the mac address type.
 */
export type AllocationMethod = (typeof AllocationMethod)[keyof typeof AllocationMethod];
export declare const CreateDiffDisk: {
    readonly False: "false";
    readonly True: "true";
};
/**
 * Gets or sets a value indicating diff disk.
 */
export type CreateDiffDisk = (typeof CreateDiffDisk)[keyof typeof CreateDiffDisk];
export declare const DynamicMemoryEnabled: {
    readonly False: "false";
    readonly True: "true";
};
/**
 * Gets or sets a value indicating whether to enable dynamic memory or not.
 */
export type DynamicMemoryEnabled = (typeof DynamicMemoryEnabled)[keyof typeof DynamicMemoryEnabled];
export declare const IdentityType: {
    readonly None: "None";
    readonly SystemAssigned: "SystemAssigned";
};
/**
 * The type of managed service identity.
 */
export type IdentityType = (typeof IdentityType)[keyof typeof IdentityType];
export declare const InventoryType: {
    readonly Cloud: "Cloud";
    readonly VirtualNetwork: "VirtualNetwork";
    readonly VirtualMachineTemplate: "VirtualMachineTemplate";
    readonly VirtualMachine: "VirtualMachine";
};
/**
 * They inventory type.
 */
export type InventoryType = (typeof InventoryType)[keyof typeof InventoryType];
export declare const LimitCpuForMigration: {
    readonly False: "false";
    readonly True: "true";
};
/**
 * Gets or sets a value indicating whether to enable processor compatibility mode for live migration of VMs.
 */
export type LimitCpuForMigration = (typeof LimitCpuForMigration)[keyof typeof LimitCpuForMigration];
export declare const ProvisioningAction: {
    readonly Install: "install";
    readonly Uninstall: "uninstall";
    readonly Repair: "repair";
};
/**
 * Gets or sets the guest agent provisioning action.
 */
export type ProvisioningAction = (typeof ProvisioningAction)[keyof typeof ProvisioningAction];
