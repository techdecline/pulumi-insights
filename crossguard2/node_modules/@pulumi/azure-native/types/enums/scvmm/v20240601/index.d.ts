export declare const AllocationMethod: {
    /**
     * Dynamically allocated address.
     */
    readonly Dynamic: "Dynamic";
    /**
     * Statically allocated address.
     */
    readonly Static: "Static";
};
/**
 * Gets or sets the mac address type.
 */
export type AllocationMethod = (typeof AllocationMethod)[keyof typeof AllocationMethod];
export declare const CreateDiffDisk: {
    /**
     * Enable create diff disk.
     */
    readonly True: "true";
    /**
     * Disable create diff disk.
     */
    readonly False: "false";
};
/**
 * Gets or sets a value indicating diff disk.
 */
export type CreateDiffDisk = (typeof CreateDiffDisk)[keyof typeof CreateDiffDisk];
export declare const DynamicMemoryEnabled: {
    /**
     * Enable dynamic memory.
     */
    readonly True: "true";
    /**
     * Disable dynamic memory.
     */
    readonly False: "false";
};
/**
 * Gets or sets a value indicating whether to enable dynamic memory or not.
 */
export type DynamicMemoryEnabled = (typeof DynamicMemoryEnabled)[keyof typeof DynamicMemoryEnabled];
export declare const InventoryType: {
    /**
     * Cloud inventory type
     */
    readonly Cloud: "Cloud";
    /**
     * VirtualNetwork inventory type
     */
    readonly VirtualNetwork: "VirtualNetwork";
    /**
     * VirtualMachine inventory type
     */
    readonly VirtualMachine: "VirtualMachine";
    /**
     * VirtualMachineTemplate inventory type
     */
    readonly VirtualMachineTemplate: "VirtualMachineTemplate";
};
/**
 * They inventory type.
 */
export type InventoryType = (typeof InventoryType)[keyof typeof InventoryType];
export declare const LimitCpuForMigration: {
    /**
     * Enable limit CPU for migration.
     */
    readonly True: "true";
    /**
     * Disable limit CPU for migration.
     */
    readonly False: "false";
};
/**
 * Gets or sets a value indicating whether to enable processor compatibility mode for live migration of VMs.
 */
export type LimitCpuForMigration = (typeof LimitCpuForMigration)[keyof typeof LimitCpuForMigration];
export declare const ProvisioningAction: {
    /**
     * Install guest agent.
     */
    readonly Install: "install";
    /**
     * Uninstall guest agent.
     */
    readonly Uninstall: "uninstall";
    /**
     * Repair guest agent.
     */
    readonly Repair: "repair";
};
/**
 * Gets or sets the guest agent provisioning action.
 */
export type ProvisioningAction = (typeof ProvisioningAction)[keyof typeof ProvisioningAction];
