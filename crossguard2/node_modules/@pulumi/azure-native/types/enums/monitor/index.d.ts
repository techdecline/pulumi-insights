import * as v20230403 from "./v20230403";
import * as v20231001preview from "./v20231001preview";
import * as v20241001preview from "./v20241001preview";
export { v20230403, v20231001preview, v20241001preview, };
export declare const ExporterType: {
    /**
     * Export logs to Azure Monitor Workspace.
     */
    readonly AzureMonitorWorkspaceLogs: "AzureMonitorWorkspaceLogs";
    /**
     * Export data to another pipeline group instance.
     */
    readonly PipelineGroup: "PipelineGroup";
};
/**
 * The type of exporter.
 */
export type ExporterType = (typeof ExporterType)[keyof typeof ExporterType];
export declare const ExtendedLocationType: {
    /**
     * Azure Edge Zones location type
     */
    readonly EdgeZone: "EdgeZone";
    /**
     * Azure Custom Locations type
     */
    readonly CustomLocation: "CustomLocation";
};
/**
 * The type of the extended location.
 */
export type ExtendedLocationType = (typeof ExtendedLocationType)[keyof typeof ExtendedLocationType];
export declare const ExternalNetworkingMode: {
    /**
     * Load balancer only.
     */
    readonly LoadBalancerOnly: "LoadBalancerOnly";
};
/**
 * External networking mode.
 */
export type ExternalNetworkingMode = (typeof ExternalNetworkingMode)[keyof typeof ExternalNetworkingMode];
export declare const PipelineType: {
    /**
     * Pipeline for logs telemetry.
     */
    readonly Logs: "logs";
};
/**
 * The type of pipeline
 */
export type PipelineType = (typeof PipelineType)[keyof typeof PipelineType];
export declare const ProcessorType: {
    /**
     * Batch processor.
     */
    readonly Batch: "Batch";
};
/**
 * The type of processor.
 */
export type ProcessorType = (typeof ProcessorType)[keyof typeof ProcessorType];
export declare const PublicNetworkAccess: {
    readonly Enabled: "Enabled";
    readonly Disabled: "Disabled";
};
/**
 * Gets or sets allow or disallow public network access to Azure Monitor Workspace
 */
export type PublicNetworkAccess = (typeof PublicNetworkAccess)[keyof typeof PublicNetworkAccess];
export declare const ReceiverType: {
    /**
     * Linux syslog.
     */
    readonly Syslog: "Syslog";
    /**
     * Receives data from azure monitor agent receiver.
     */
    readonly Ama: "Ama";
    /**
     * Receives data from another pipeline group.
     */
    readonly PipelineGroup: "PipelineGroup";
    /**
     * Receives data from a OTLP collector.
     */
    readonly OTLP: "OTLP";
    /**
     * Receives data from an UDP collector.
     */
    readonly UDP: "UDP";
};
/**
 * The type of receiver.
 */
export type ReceiverType = (typeof ReceiverType)[keyof typeof ReceiverType];
export declare const StreamEncodingType: {
    /**
     * No encoding validation. Treats the file as a stream of raw bytes.
     */
    readonly Nop: "nop";
    /**
     * UTF-8 encoding.
     */
    readonly Utf_8: "utf-8";
    /**
     * UTF-16 encoding with little-endian byte order.
     */
    readonly Utf_16le: "utf-16le";
    /**
     * UTF-16 encoding with little-endian byte order.
     */
    readonly Utf_16be: "utf-16be";
    /**
     * ASCII encoding.
     */
    readonly Ascii: "ascii";
    /**
     * The Big5 Chinese character encoding.
     */
    readonly Big5: "big5";
};
/**
 * The encoding of the stream being received.
 */
export type StreamEncodingType = (typeof StreamEncodingType)[keyof typeof StreamEncodingType];
export declare const SyslogProtocol: {
    /**
     * rfc3164 protocol.
     */
    readonly Rfc3164: "rfc3164";
    /**
     * rfc5424 protocol.
     */
    readonly Rfc5424: "rfc5424";
};
/**
 * Protocol to parse syslog messages. Default rfc3164
 */
export type SyslogProtocol = (typeof SyslogProtocol)[keyof typeof SyslogProtocol];
