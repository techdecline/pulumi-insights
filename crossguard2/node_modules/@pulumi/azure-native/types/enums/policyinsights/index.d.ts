import * as v20211001 from "./v20211001";
import * as v20220901 from "./v20220901";
import * as v20241001 from "./v20241001";
export { v20211001, v20220901, v20241001, };
export declare const ComplianceState: {
    /**
     * The resource is in compliance with the policy.
     */
    readonly Compliant: "Compliant";
    /**
     * The resource is not in compliance with the policy.
     */
    readonly NonCompliant: "NonCompliant";
    /**
     * The compliance state of the resource is not known.
     */
    readonly Unknown: "Unknown";
};
/**
 * The compliance state that should be set on the resource.
 */
export type ComplianceState = (typeof ComplianceState)[keyof typeof ComplianceState];
export declare const ResourceDiscoveryMode: {
    /**
     * Remediate resources that are already known to be non-compliant.
     */
    readonly ExistingNonCompliant: "ExistingNonCompliant";
    /**
     * Re-evaluate the compliance state of resources and then remediate the resources found to be non-compliant.
     */
    readonly ReEvaluateCompliance: "ReEvaluateCompliance";
};
/**
 * The way resources to remediate are discovered. Defaults to ExistingNonCompliant if not specified.
 */
export type ResourceDiscoveryMode = (typeof ResourceDiscoveryMode)[keyof typeof ResourceDiscoveryMode];
