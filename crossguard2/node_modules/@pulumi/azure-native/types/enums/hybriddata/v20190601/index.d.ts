export declare const RunLocation: {
    readonly None: "none";
    readonly Australiaeast: "australiaeast";
    readonly Australiasoutheast: "australiasoutheast";
    readonly Brazilsouth: "brazilsouth";
    readonly Canadacentral: "canadacentral";
    readonly Canadaeast: "canadaeast";
    readonly Centralindia: "centralindia";
    readonly Centralus: "centralus";
    readonly Eastasia: "eastasia";
    readonly Eastus: "eastus";
    readonly Eastus2: "eastus2";
    readonly Japaneast: "japaneast";
    readonly Japanwest: "japanwest";
    readonly Koreacentral: "koreacentral";
    readonly Koreasouth: "koreasouth";
    readonly Southeastasia: "southeastasia";
    readonly Southcentralus: "southcentralus";
    readonly Southindia: "southindia";
    readonly Northcentralus: "northcentralus";
    readonly Northeurope: "northeurope";
    readonly Uksouth: "uksouth";
    readonly Ukwest: "ukwest";
    readonly Westcentralus: "westcentralus";
    readonly Westeurope: "westeurope";
    readonly Westindia: "westindia";
    readonly Westus: "westus";
    readonly Westus2: "westus2";
};
/**
 * This is the preferred geo location for the job to run.
 */
export type RunLocation = (typeof RunLocation)[keyof typeof RunLocation];
export declare const State: {
    readonly Disabled: "Disabled";
    readonly Enabled: "Enabled";
    readonly Supported: "Supported";
};
/**
 * State of the job definition.
 */
export type State = (typeof State)[keyof typeof State];
export declare const SupportedAlgorithm: {
    readonly None: "None";
    readonly RSA1_5: "RSA1_5";
    readonly RSA_OAEP: "RSA_OAEP";
    readonly PlainText: "PlainText";
};
/**
 * The encryption algorithm used to encrypt data.
 */
export type SupportedAlgorithm = (typeof SupportedAlgorithm)[keyof typeof SupportedAlgorithm];
export declare const UserConfirmation: {
    readonly NotRequired: "NotRequired";
    readonly Required: "Required";
};
/**
 * Enum to detect if user confirmation is required. If not passed will default to NotRequired.
 */
export type UserConfirmation = (typeof UserConfirmation)[keyof typeof UserConfirmation];
