import * as v20170401 from "./v20170401";
import * as v20230101preview from "./v20230101preview";
import * as v20230901 from "./v20230901";
import * as v20231001preview from "./v20231001preview";
export { v20170401, v20230101preview, v20230901, v20231001preview, };
export declare const AccessRights: {
    readonly Manage: "Manage";
    readonly Send: "Send";
    readonly Listen: "Listen";
};
/**
 * Defines values for AccessRights.
 */
export type AccessRights = (typeof AccessRights)[keyof typeof AccessRights];
export declare const NamespaceStatus: {
    readonly Created: "Created";
    readonly Creating: "Creating";
    readonly Suspended: "Suspended";
    readonly Deleting: "Deleting";
};
/**
 * Namespace status.
 */
export type NamespaceStatus = (typeof NamespaceStatus)[keyof typeof NamespaceStatus];
export declare const NamespaceType: {
    readonly Messaging: "Messaging";
    readonly NotificationHub: "NotificationHub";
};
/**
 * Defines values for NamespaceType.
 */
export type NamespaceType = (typeof NamespaceType)[keyof typeof NamespaceType];
export declare const OperationProvisioningState: {
    readonly Unknown: "Unknown";
    readonly InProgress: "InProgress";
    readonly Succeeded: "Succeeded";
    readonly Failed: "Failed";
    readonly Canceled: "Canceled";
    readonly Pending: "Pending";
    readonly Disabled: "Disabled";
};
/**
 * Defines values for OperationProvisioningState.
 */
export type OperationProvisioningState = (typeof OperationProvisioningState)[keyof typeof OperationProvisioningState];
export declare const PrivateEndpointConnectionProvisioningState: {
    readonly Unknown: "Unknown";
    readonly Succeeded: "Succeeded";
    readonly Creating: "Creating";
    readonly Updating: "Updating";
    readonly UpdatingByProxy: "UpdatingByProxy";
    readonly Deleting: "Deleting";
    readonly DeletingByProxy: "DeletingByProxy";
    readonly Deleted: "Deleted";
};
/**
 * State of Private Endpoint Connection.
 */
export type PrivateEndpointConnectionProvisioningState = (typeof PrivateEndpointConnectionProvisioningState)[keyof typeof PrivateEndpointConnectionProvisioningState];
export declare const PrivateLinkConnectionStatus: {
    readonly Disconnected: "Disconnected";
    readonly Pending: "Pending";
    readonly Approved: "Approved";
    readonly Rejected: "Rejected";
};
/**
 * State of Private Link Connection.
 */
export type PrivateLinkConnectionStatus = (typeof PrivateLinkConnectionStatus)[keyof typeof PrivateLinkConnectionStatus];
export declare const PublicNetworkAccess: {
    readonly Enabled: "Enabled";
    readonly Disabled: "Disabled";
};
/**
 * Type of public network access.
 */
export type PublicNetworkAccess = (typeof PublicNetworkAccess)[keyof typeof PublicNetworkAccess];
export declare const ReplicationRegion: {
    readonly Default: "Default";
    readonly WestUs2: "WestUs2";
    readonly NorthEurope: "NorthEurope";
    readonly AustraliaEast: "AustraliaEast";
    readonly BrazilSouth: "BrazilSouth";
    readonly SouthEastAsia: "SouthEastAsia";
    readonly SouthAfricaNorth: "SouthAfricaNorth";
    readonly None: "None";
};
/**
 * Allowed replication region
 */
export type ReplicationRegion = (typeof ReplicationRegion)[keyof typeof ReplicationRegion];
export declare const SkuName: {
    readonly Free: "Free";
    readonly Basic: "Basic";
    readonly Standard: "Standard";
};
/**
 * Namespace SKU name.
 */
export type SkuName = (typeof SkuName)[keyof typeof SkuName];
export declare const ZoneRedundancyPreference: {
    readonly Disabled: "Disabled";
    readonly Enabled: "Enabled";
};
/**
 * Namespace SKU name.
 */
export type ZoneRedundancyPreference = (typeof ZoneRedundancyPreference)[keyof typeof ZoneRedundancyPreference];
