"use strict";
// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***
Object.defineProperty(exports, "__esModule", { value: true });
exports.UserType = exports.RoleManagementPolicyRuleType = exports.RecipientType = exports.PIMOnlyMode = exports.NotificationLevel = exports.NotificationDeliveryMechanism = exports.ExcludedPrincipalTypes = exports.EnablementRules = exports.ApprovalMode = void 0;
exports.ApprovalMode = {
    SingleStage: "SingleStage",
    Serial: "Serial",
    Parallel: "Parallel",
    NoApproval: "NoApproval",
};
exports.EnablementRules = {
    MultiFactorAuthentication: "MultiFactorAuthentication",
    Justification: "Justification",
    Ticketing: "Ticketing",
};
exports.ExcludedPrincipalTypes = {
    ServicePrincipalsAsTarget: "ServicePrincipalsAsTarget",
    ServicePrincipalsAsRequestor: "ServicePrincipalsAsRequestor",
};
exports.NotificationDeliveryMechanism = {
    Email: "Email",
};
exports.NotificationLevel = {
    None: "None",
    Critical: "Critical",
    All: "All",
};
exports.PIMOnlyMode = {
    Disabled: "Disabled",
    Enabled: "Enabled",
    ReportOnly: "ReportOnly",
};
exports.RecipientType = {
    Requestor: "Requestor",
    Approver: "Approver",
    Admin: "Admin",
};
exports.RoleManagementPolicyRuleType = {
    RoleManagementPolicyApprovalRule: "RoleManagementPolicyApprovalRule",
    RoleManagementPolicyAuthenticationContextRule: "RoleManagementPolicyAuthenticationContextRule",
    RoleManagementPolicyEnablementRule: "RoleManagementPolicyEnablementRule",
    RoleManagementPolicyExpirationRule: "RoleManagementPolicyExpirationRule",
    RoleManagementPolicyNotificationRule: "RoleManagementPolicyNotificationRule",
    RoleManagementPolicyPimOnlyModeRule: "RoleManagementPolicyPimOnlyModeRule",
};
exports.UserType = {
    User: "User",
    Group: "Group",
    ServicePrincipal: "ServicePrincipal",
};
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaW5kZXguanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi8uLi90eXBlcy9lbnVtcy9hdXRob3JpemF0aW9uL3YyMDI0MDkwMXByZXZpZXcvaW5kZXgudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IjtBQUFBLHNFQUFzRTtBQUN0RSxpRkFBaUY7OztBQUdwRSxRQUFBLFlBQVksR0FBRztJQUN4QixXQUFXLEVBQUUsYUFBYTtJQUMxQixNQUFNLEVBQUUsUUFBUTtJQUNoQixRQUFRLEVBQUUsVUFBVTtJQUNwQixVQUFVLEVBQUUsWUFBWTtDQUNsQixDQUFDO0FBT0UsUUFBQSxlQUFlLEdBQUc7SUFDM0IseUJBQXlCLEVBQUUsMkJBQTJCO0lBQ3RELGFBQWEsRUFBRSxlQUFlO0lBQzlCLFNBQVMsRUFBRSxXQUFXO0NBQ2hCLENBQUM7QUFPRSxRQUFBLHNCQUFzQixHQUFHO0lBQ2xDLHlCQUF5QixFQUFFLDJCQUEyQjtJQUN0RCw0QkFBNEIsRUFBRSw4QkFBOEI7Q0FDdEQsQ0FBQztBQUlFLFFBQUEsNkJBQTZCLEdBQUc7SUFDekMsS0FBSyxFQUFFLE9BQU87Q0FDUixDQUFDO0FBT0UsUUFBQSxpQkFBaUIsR0FBRztJQUM3QixJQUFJLEVBQUUsTUFBTTtJQUNaLFFBQVEsRUFBRSxVQUFVO0lBQ3BCLEdBQUcsRUFBRSxLQUFLO0NBQ0osQ0FBQztBQU9FLFFBQUEsV0FBVyxHQUFHO0lBQ3ZCLFFBQVEsRUFBRSxVQUFVO0lBQ3BCLE9BQU8sRUFBRSxTQUFTO0lBQ2xCLFVBQVUsRUFBRSxZQUFZO0NBQ2xCLENBQUM7QUFPRSxRQUFBLGFBQWEsR0FBRztJQUN6QixTQUFTLEVBQUUsV0FBVztJQUN0QixRQUFRLEVBQUUsVUFBVTtJQUNwQixLQUFLLEVBQUUsT0FBTztDQUNSLENBQUM7QUFPRSxRQUFBLDRCQUE0QixHQUFHO0lBQ3hDLGdDQUFnQyxFQUFFLGtDQUFrQztJQUNwRSw2Q0FBNkMsRUFBRSwrQ0FBK0M7SUFDOUYsa0NBQWtDLEVBQUUsb0NBQW9DO0lBQ3hFLGtDQUFrQyxFQUFFLG9DQUFvQztJQUN4RSxvQ0FBb0MsRUFBRSxzQ0FBc0M7SUFDNUUsbUNBQW1DLEVBQUUscUNBQXFDO0NBQ3BFLENBQUM7QUFPRSxRQUFBLFFBQVEsR0FBRztJQUNwQixJQUFJLEVBQUUsTUFBTTtJQUNaLEtBQUssRUFBRSxPQUFPO0lBQ2QsZ0JBQWdCLEVBQUUsa0JBQWtCO0NBQzlCLENBQUMifQ==