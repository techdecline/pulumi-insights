"use strict";
// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***
Object.defineProperty(exports, "__esModule", { value: true });
exports.UserType = exports.SelectorKind = exports.RoleManagementPolicyRuleType = exports.ResourceIdentityType = exports.RecipientType = exports.PublicNetworkAccessOptions = exports.PrincipalType = exports.PolicyType = exports.ParameterType = exports.PIMOnlyMode = exports.OverrideKind = exports.NotificationLevel = exports.NotificationDeliveryMechanism = exports.LockLevel = exports.ExemptionCategory = exports.ExcludedPrincipalTypes = exports.EnforcementMode = exports.EnablementRules = exports.DefaultDecisionType = exports.AssignmentScopeValidation = exports.ApprovalMode = exports.AccessReviewResult = exports.AccessReviewRecurrenceRangeType = exports.AccessReviewRecurrencePatternType = exports.v20250101 = exports.v20240901preview = exports.v20240501 = exports.v20240401 = exports.v20240201preview = exports.v20230401 = exports.v20220701preview = exports.v20220601 = exports.v20220401 = exports.v20211201preview = exports.v20210601 = exports.v20201001preview = exports.v20201001 = exports.v20200501 = exports.v20200401preview = exports.v20200301preview = exports.v20200301 = exports.v20190601 = exports.v20180501 = void 0;
// Export sub-modules:
const v20180501 = require("./v20180501");
exports.v20180501 = v20180501;
const v20190601 = require("./v20190601");
exports.v20190601 = v20190601;
const v20200301 = require("./v20200301");
exports.v20200301 = v20200301;
const v20200301preview = require("./v20200301preview");
exports.v20200301preview = v20200301preview;
const v20200401preview = require("./v20200401preview");
exports.v20200401preview = v20200401preview;
const v20200501 = require("./v20200501");
exports.v20200501 = v20200501;
const v20201001 = require("./v20201001");
exports.v20201001 = v20201001;
const v20201001preview = require("./v20201001preview");
exports.v20201001preview = v20201001preview;
const v20210601 = require("./v20210601");
exports.v20210601 = v20210601;
const v20211201preview = require("./v20211201preview");
exports.v20211201preview = v20211201preview;
const v20220401 = require("./v20220401");
exports.v20220401 = v20220401;
const v20220601 = require("./v20220601");
exports.v20220601 = v20220601;
const v20220701preview = require("./v20220701preview");
exports.v20220701preview = v20220701preview;
const v20230401 = require("./v20230401");
exports.v20230401 = v20230401;
const v20240201preview = require("./v20240201preview");
exports.v20240201preview = v20240201preview;
const v20240401 = require("./v20240401");
exports.v20240401 = v20240401;
const v20240501 = require("./v20240501");
exports.v20240501 = v20240501;
const v20240901preview = require("./v20240901preview");
exports.v20240901preview = v20240901preview;
const v20250101 = require("./v20250101");
exports.v20250101 = v20250101;
exports.AccessReviewRecurrencePatternType = {
    Weekly: "weekly",
    AbsoluteMonthly: "absoluteMonthly",
};
exports.AccessReviewRecurrenceRangeType = {
    EndDate: "endDate",
    NoEnd: "noEnd",
    Numbered: "numbered",
};
exports.AccessReviewResult = {
    Approve: "Approve",
    Deny: "Deny",
    NotReviewed: "NotReviewed",
    DontKnow: "DontKnow",
    NotNotified: "NotNotified",
};
exports.ApprovalMode = {
    SingleStage: "SingleStage",
    Serial: "Serial",
    Parallel: "Parallel",
    NoApproval: "NoApproval",
};
exports.AssignmentScopeValidation = {
    /**
     * This option will validate the exemption is at or under the assignment scope.
     */
    Default: "Default",
    /**
     * This option will bypass the validation the exemption scope is at or under the policy assignment scope.
     */
    DoNotValidate: "DoNotValidate",
};
exports.DefaultDecisionType = {
    Approve: "Approve",
    Deny: "Deny",
    Recommendation: "Recommendation",
};
exports.EnablementRules = {
    MultiFactorAuthentication: "MultiFactorAuthentication",
    Justification: "Justification",
    Ticketing: "Ticketing",
};
exports.EnforcementMode = {
    /**
     * The policy effect is enforced during resource creation or update.
     */
    Default: "Default",
    /**
     * The policy effect is not enforced during resource creation or update.
     */
    DoNotEnforce: "DoNotEnforce",
};
exports.ExcludedPrincipalTypes = {
    ServicePrincipalsAsTarget: "ServicePrincipalsAsTarget",
    ServicePrincipalsAsRequestor: "ServicePrincipalsAsRequestor",
};
exports.ExemptionCategory = {
    /**
     * This category of exemptions usually means the scope is not applicable for the policy.
     */
    Waiver: "Waiver",
    /**
     * This category of exemptions usually means the mitigation actions have been applied to the scope.
     */
    Mitigated: "Mitigated",
};
exports.LockLevel = {
    NotSpecified: "NotSpecified",
    CanNotDelete: "CanNotDelete",
    ReadOnly: "ReadOnly",
};
exports.NotificationDeliveryMechanism = {
    Email: "Email",
};
exports.NotificationLevel = {
    None: "None",
    Critical: "Critical",
    All: "All",
};
exports.OverrideKind = {
    /**
     * It will override the policy effect type.
     */
    PolicyEffect: "policyEffect",
};
exports.PIMOnlyMode = {
    Disabled: "Disabled",
    Enabled: "Enabled",
    ReportOnly: "ReportOnly",
};
exports.ParameterType = {
    String: "String",
    Array: "Array",
    Object: "Object",
    Boolean: "Boolean",
    Integer: "Integer",
    Float: "Float",
    DateTime: "DateTime",
};
exports.PolicyType = {
    NotSpecified: "NotSpecified",
    BuiltIn: "BuiltIn",
    Custom: "Custom",
    Static: "Static",
};
exports.PrincipalType = {
    User: "User",
    Group: "Group",
    ServicePrincipal: "ServicePrincipal",
    ForeignGroup: "ForeignGroup",
    Device: "Device",
};
exports.PublicNetworkAccessOptions = {
    Enabled: "Enabled",
    Disabled: "Disabled",
};
exports.RecipientType = {
    Requestor: "Requestor",
    Approver: "Approver",
    Admin: "Admin",
};
exports.ResourceIdentityType = {
    /**
     * Indicates that a system assigned identity is associated with the resource.
     */
    SystemAssigned: "SystemAssigned",
    /**
     * Indicates that a system assigned identity is associated with the resource.
     */
    UserAssigned: "UserAssigned",
    /**
     * Indicates that no identity is associated with the resource or that the existing identity should be removed.
     */
    None: "None",
};
exports.RoleManagementPolicyRuleType = {
    RoleManagementPolicyApprovalRule: "RoleManagementPolicyApprovalRule",
    RoleManagementPolicyAuthenticationContextRule: "RoleManagementPolicyAuthenticationContextRule",
    RoleManagementPolicyEnablementRule: "RoleManagementPolicyEnablementRule",
    RoleManagementPolicyExpirationRule: "RoleManagementPolicyExpirationRule",
    RoleManagementPolicyNotificationRule: "RoleManagementPolicyNotificationRule",
    RoleManagementPolicyPimOnlyModeRule: "RoleManagementPolicyPimOnlyModeRule",
};
exports.SelectorKind = {
    /**
     * The selector kind to filter policies by the resource location.
     */
    ResourceLocation: "resourceLocation",
    /**
     * The selector kind to filter policies by the resource type.
     */
    ResourceType: "resourceType",
    /**
     * The selector kind to filter policies by the resource without location.
     */
    ResourceWithoutLocation: "resourceWithoutLocation",
    /**
     * The selector kind to filter policies by the policy definition reference ID.
     */
    PolicyDefinitionReferenceId: "policyDefinitionReferenceId",
};
exports.UserType = {
    User: "User",
    Group: "Group",
    ServicePrincipal: "ServicePrincipal",
};
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaW5kZXguanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi90eXBlcy9lbnVtcy9hdXRob3JpemF0aW9uL2luZGV4LnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7QUFBQSxzRUFBc0U7QUFDdEUsaUZBQWlGOzs7QUFFakYsc0JBQXNCO0FBQ3RCLHlDQUF5QztBQXFCckMsOEJBQVM7QUFwQmIseUNBQXlDO0FBcUJyQyw4QkFBUztBQXBCYix5Q0FBeUM7QUFxQnJDLDhCQUFTO0FBcEJiLHVEQUF1RDtBQXFCbkQsNENBQWdCO0FBcEJwQix1REFBdUQ7QUFxQm5ELDRDQUFnQjtBQXBCcEIseUNBQXlDO0FBcUJyQyw4QkFBUztBQXBCYix5Q0FBeUM7QUFxQnJDLDhCQUFTO0FBcEJiLHVEQUF1RDtBQXFCbkQsNENBQWdCO0FBcEJwQix5Q0FBeUM7QUFxQnJDLDhCQUFTO0FBcEJiLHVEQUF1RDtBQXFCbkQsNENBQWdCO0FBcEJwQix5Q0FBeUM7QUFxQnJDLDhCQUFTO0FBcEJiLHlDQUF5QztBQXFCckMsOEJBQVM7QUFwQmIsdURBQXVEO0FBcUJuRCw0Q0FBZ0I7QUFwQnBCLHlDQUF5QztBQXFCckMsOEJBQVM7QUFwQmIsdURBQXVEO0FBcUJuRCw0Q0FBZ0I7QUFwQnBCLHlDQUF5QztBQXFCckMsOEJBQVM7QUFwQmIseUNBQXlDO0FBcUJyQyw4QkFBUztBQXBCYix1REFBdUQ7QUFxQm5ELDRDQUFnQjtBQXBCcEIseUNBQXlDO0FBcUJyQyw4QkFBUztBQUdBLFFBQUEsaUNBQWlDLEdBQUc7SUFDN0MsTUFBTSxFQUFFLFFBQVE7SUFDaEIsZUFBZSxFQUFFLGlCQUFpQjtDQUM1QixDQUFDO0FBT0UsUUFBQSwrQkFBK0IsR0FBRztJQUMzQyxPQUFPLEVBQUUsU0FBUztJQUNsQixLQUFLLEVBQUUsT0FBTztJQUNkLFFBQVEsRUFBRSxVQUFVO0NBQ2QsQ0FBQztBQU9FLFFBQUEsa0JBQWtCLEdBQUc7SUFDOUIsT0FBTyxFQUFFLFNBQVM7SUFDbEIsSUFBSSxFQUFFLE1BQU07SUFDWixXQUFXLEVBQUUsYUFBYTtJQUMxQixRQUFRLEVBQUUsVUFBVTtJQUNwQixXQUFXLEVBQUUsYUFBYTtDQUNwQixDQUFDO0FBT0UsUUFBQSxZQUFZLEdBQUc7SUFDeEIsV0FBVyxFQUFFLGFBQWE7SUFDMUIsTUFBTSxFQUFFLFFBQVE7SUFDaEIsUUFBUSxFQUFFLFVBQVU7SUFDcEIsVUFBVSxFQUFFLFlBQVk7Q0FDbEIsQ0FBQztBQU9FLFFBQUEseUJBQXlCLEdBQUc7SUFDckM7O09BRUc7SUFDSCxPQUFPLEVBQUUsU0FBUztJQUNsQjs7T0FFRztJQUNILGFBQWEsRUFBRSxlQUFlO0NBQ3hCLENBQUM7QUFPRSxRQUFBLG1CQUFtQixHQUFHO0lBQy9CLE9BQU8sRUFBRSxTQUFTO0lBQ2xCLElBQUksRUFBRSxNQUFNO0lBQ1osY0FBYyxFQUFFLGdCQUFnQjtDQUMxQixDQUFDO0FBT0UsUUFBQSxlQUFlLEdBQUc7SUFDM0IseUJBQXlCLEVBQUUsMkJBQTJCO0lBQ3RELGFBQWEsRUFBRSxlQUFlO0lBQzlCLFNBQVMsRUFBRSxXQUFXO0NBQ2hCLENBQUM7QUFPRSxRQUFBLGVBQWUsR0FBRztJQUMzQjs7T0FFRztJQUNILE9BQU8sRUFBRSxTQUFTO0lBQ2xCOztPQUVHO0lBQ0gsWUFBWSxFQUFFLGNBQWM7Q0FDdEIsQ0FBQztBQU9FLFFBQUEsc0JBQXNCLEdBQUc7SUFDbEMseUJBQXlCLEVBQUUsMkJBQTJCO0lBQ3RELDRCQUE0QixFQUFFLDhCQUE4QjtDQUN0RCxDQUFDO0FBSUUsUUFBQSxpQkFBaUIsR0FBRztJQUM3Qjs7T0FFRztJQUNILE1BQU0sRUFBRSxRQUFRO0lBQ2hCOztPQUVHO0lBQ0gsU0FBUyxFQUFFLFdBQVc7Q0FDaEIsQ0FBQztBQU9FLFFBQUEsU0FBUyxHQUFHO0lBQ3JCLFlBQVksRUFBRSxjQUFjO0lBQzVCLFlBQVksRUFBRSxjQUFjO0lBQzVCLFFBQVEsRUFBRSxVQUFVO0NBQ2QsQ0FBQztBQU9FLFFBQUEsNkJBQTZCLEdBQUc7SUFDekMsS0FBSyxFQUFFLE9BQU87Q0FDUixDQUFDO0FBT0UsUUFBQSxpQkFBaUIsR0FBRztJQUM3QixJQUFJLEVBQUUsTUFBTTtJQUNaLFFBQVEsRUFBRSxVQUFVO0lBQ3BCLEdBQUcsRUFBRSxLQUFLO0NBQ0osQ0FBQztBQU9FLFFBQUEsWUFBWSxHQUFHO0lBQ3hCOztPQUVHO0lBQ0gsWUFBWSxFQUFFLGNBQWM7Q0FDdEIsQ0FBQztBQU9FLFFBQUEsV0FBVyxHQUFHO0lBQ3ZCLFFBQVEsRUFBRSxVQUFVO0lBQ3BCLE9BQU8sRUFBRSxTQUFTO0lBQ2xCLFVBQVUsRUFBRSxZQUFZO0NBQ2xCLENBQUM7QUFPRSxRQUFBLGFBQWEsR0FBRztJQUN6QixNQUFNLEVBQUUsUUFBUTtJQUNoQixLQUFLLEVBQUUsT0FBTztJQUNkLE1BQU0sRUFBRSxRQUFRO0lBQ2hCLE9BQU8sRUFBRSxTQUFTO0lBQ2xCLE9BQU8sRUFBRSxTQUFTO0lBQ2xCLEtBQUssRUFBRSxPQUFPO0lBQ2QsUUFBUSxFQUFFLFVBQVU7Q0FDZCxDQUFDO0FBT0UsUUFBQSxVQUFVLEdBQUc7SUFDdEIsWUFBWSxFQUFFLGNBQWM7SUFDNUIsT0FBTyxFQUFFLFNBQVM7SUFDbEIsTUFBTSxFQUFFLFFBQVE7SUFDaEIsTUFBTSxFQUFFLFFBQVE7Q0FDVixDQUFDO0FBT0UsUUFBQSxhQUFhLEdBQUc7SUFDekIsSUFBSSxFQUFFLE1BQU07SUFDWixLQUFLLEVBQUUsT0FBTztJQUNkLGdCQUFnQixFQUFFLGtCQUFrQjtJQUNwQyxZQUFZLEVBQUUsY0FBYztJQUM1QixNQUFNLEVBQUUsUUFBUTtDQUNWLENBQUM7QUFPRSxRQUFBLDBCQUEwQixHQUFHO0lBQ3RDLE9BQU8sRUFBRSxTQUFTO0lBQ2xCLFFBQVEsRUFBRSxVQUFVO0NBQ2QsQ0FBQztBQUlFLFFBQUEsYUFBYSxHQUFHO0lBQ3pCLFNBQVMsRUFBRSxXQUFXO0lBQ3RCLFFBQVEsRUFBRSxVQUFVO0lBQ3BCLEtBQUssRUFBRSxPQUFPO0NBQ1IsQ0FBQztBQU9FLFFBQUEsb0JBQW9CLEdBQUc7SUFDaEM7O09BRUc7SUFDSCxjQUFjLEVBQUUsZ0JBQWdCO0lBQ2hDOztPQUVHO0lBQ0gsWUFBWSxFQUFFLGNBQWM7SUFDNUI7O09BRUc7SUFDSCxJQUFJLEVBQUUsTUFBTTtDQUNOLENBQUM7QUFPRSxRQUFBLDRCQUE0QixHQUFHO0lBQ3hDLGdDQUFnQyxFQUFFLGtDQUFrQztJQUNwRSw2Q0FBNkMsRUFBRSwrQ0FBK0M7SUFDOUYsa0NBQWtDLEVBQUUsb0NBQW9DO0lBQ3hFLGtDQUFrQyxFQUFFLG9DQUFvQztJQUN4RSxvQ0FBb0MsRUFBRSxzQ0FBc0M7SUFDNUUsbUNBQW1DLEVBQUUscUNBQXFDO0NBQ3BFLENBQUM7QUFPRSxRQUFBLFlBQVksR0FBRztJQUN4Qjs7T0FFRztJQUNILGdCQUFnQixFQUFFLGtCQUFrQjtJQUNwQzs7T0FFRztJQUNILFlBQVksRUFBRSxjQUFjO0lBQzVCOztPQUVHO0lBQ0gsdUJBQXVCLEVBQUUseUJBQXlCO0lBQ2xEOztPQUVHO0lBQ0gsMkJBQTJCLEVBQUUsNkJBQTZCO0NBQ3BELENBQUM7QUFPRSxRQUFBLFFBQVEsR0FBRztJQUNwQixJQUFJLEVBQUUsTUFBTTtJQUNaLEtBQUssRUFBRSxPQUFPO0lBQ2QsZ0JBQWdCLEVBQUUsa0JBQWtCO0NBQzlCLENBQUMifQ==