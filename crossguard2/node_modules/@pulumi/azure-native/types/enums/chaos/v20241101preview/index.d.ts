export declare const ExperimentActionType: {
    readonly Delay: "delay";
    readonly Discrete: "discrete";
    readonly Continuous: "continuous";
};
/**
 * Chaos experiment action discriminator type
 */
export type ExperimentActionType = (typeof ExperimentActionType)[keyof typeof ExperimentActionType];
export declare const FilterType: {
    /**
     * Simple filter type.
     */
    readonly Simple: "Simple";
};
/**
 * Chaos target filter discriminator type
 */
export type FilterType = (typeof FilterType)[keyof typeof FilterType];
export declare const ManagedServiceIdentityType: {
    readonly None: "None";
    readonly SystemAssigned: "SystemAssigned";
    readonly UserAssigned: "UserAssigned";
    readonly SystemAssigned_UserAssigned: "SystemAssigned,UserAssigned";
};
/**
 * Type of managed service identity (where both SystemAssigned and UserAssigned types are allowed).
 */
export type ManagedServiceIdentityType = (typeof ManagedServiceIdentityType)[keyof typeof ManagedServiceIdentityType];
export declare const PublicNetworkAccessOption: {
    /**
     * Enabled access.
     */
    readonly Enabled: "Enabled";
    /**
     * Disabled access.
     */
    readonly Disabled: "Disabled";
};
/**
 * Public Network Access Control for PrivateAccess resource.
 */
export type PublicNetworkAccessOption = (typeof PublicNetworkAccessOption)[keyof typeof PublicNetworkAccessOption];
export declare const SelectorType: {
    /**
     * List selector type.
     */
    readonly List: "List";
    /**
     * Query selector type.
     */
    readonly Query: "Query";
};
/**
 * Chaos target selector discriminator type
 */
export type SelectorType = (typeof SelectorType)[keyof typeof SelectorType];
export declare const TargetReferenceType: {
    /**
     * Chaos target reference type.
     */
    readonly ChaosTarget: "ChaosTarget";
};
/**
 * Enum of the Target reference type.
 */
export type TargetReferenceType = (typeof TargetReferenceType)[keyof typeof TargetReferenceType];
