export declare const AbsoluteMarker: {
    readonly AllBackup: "AllBackup";
    readonly FirstOfDay: "FirstOfDay";
    readonly FirstOfMonth: "FirstOfMonth";
    readonly FirstOfWeek: "FirstOfWeek";
    readonly FirstOfYear: "FirstOfYear";
};
export type AbsoluteMarker = (typeof AbsoluteMarker)[keyof typeof AbsoluteMarker];
export declare const AlertsState: {
    readonly Enabled: "Enabled";
    readonly Disabled: "Disabled";
};
export type AlertsState = (typeof AlertsState)[keyof typeof AlertsState];
export declare const CrossRegionRestoreState: {
    readonly Disabled: "Disabled";
    readonly Enabled: "Enabled";
};
/**
 * CrossRegionRestore state
 */
export type CrossRegionRestoreState = (typeof CrossRegionRestoreState)[keyof typeof CrossRegionRestoreState];
export declare const CrossSubscriptionRestoreState: {
    readonly Disabled: "Disabled";
    readonly PermanentlyDisabled: "PermanentlyDisabled";
    readonly Enabled: "Enabled";
};
/**
 * CrossSubscriptionRestore state
 */
export type CrossSubscriptionRestoreState = (typeof CrossSubscriptionRestoreState)[keyof typeof CrossSubscriptionRestoreState];
export declare const DataStoreTypes: {
    readonly OperationalStore: "OperationalStore";
    readonly VaultStore: "VaultStore";
    readonly ArchiveStore: "ArchiveStore";
};
/**
 * type of datastore; Operational/Vault/Archive
 */
export type DataStoreTypes = (typeof DataStoreTypes)[keyof typeof DataStoreTypes];
export declare const DayOfWeek: {
    readonly Friday: "Friday";
    readonly Monday: "Monday";
    readonly Saturday: "Saturday";
    readonly Sunday: "Sunday";
    readonly Thursday: "Thursday";
    readonly Tuesday: "Tuesday";
    readonly Wednesday: "Wednesday";
};
export type DayOfWeek = (typeof DayOfWeek)[keyof typeof DayOfWeek];
export declare const ImmutabilityState: {
    readonly Disabled: "Disabled";
    readonly Unlocked: "Unlocked";
    readonly Locked: "Locked";
};
/**
 * Immutability state
 */
export type ImmutabilityState = (typeof ImmutabilityState)[keyof typeof ImmutabilityState];
export declare const Month: {
    readonly April: "April";
    readonly August: "August";
    readonly December: "December";
    readonly February: "February";
    readonly January: "January";
    readonly July: "July";
    readonly June: "June";
    readonly March: "March";
    readonly May: "May";
    readonly November: "November";
    readonly October: "October";
    readonly September: "September";
};
export type Month = (typeof Month)[keyof typeof Month];
export declare const SecretStoreType: {
    readonly Invalid: "Invalid";
    readonly AzureKeyVault: "AzureKeyVault";
};
/**
 * Gets or sets the type of secret store
 */
export type SecretStoreType = (typeof SecretStoreType)[keyof typeof SecretStoreType];
export declare const SoftDeleteState: {
    /**
     * Soft Delete is turned off for the BackupVault
     */
    readonly Off: "Off";
    /**
     * Soft Delete is enabled for the BackupVault but can be turned off
     */
    readonly On: "On";
    /**
     * Soft Delete is permanently enabled for the BackupVault and the setting cannot be changed
     */
    readonly AlwaysOn: "AlwaysOn";
};
/**
 * State of soft delete
 */
export type SoftDeleteState = (typeof SoftDeleteState)[keyof typeof SoftDeleteState];
export declare const StorageSettingStoreTypes: {
    readonly ArchiveStore: "ArchiveStore";
    readonly OperationalStore: "OperationalStore";
    readonly VaultStore: "VaultStore";
};
/**
 * Gets or sets the type of the datastore.
 */
export type StorageSettingStoreTypes = (typeof StorageSettingStoreTypes)[keyof typeof StorageSettingStoreTypes];
export declare const StorageSettingTypes: {
    readonly GeoRedundant: "GeoRedundant";
    readonly LocallyRedundant: "LocallyRedundant";
    readonly ZoneRedundant: "ZoneRedundant";
};
/**
 * Gets or sets the type.
 */
export type StorageSettingTypes = (typeof StorageSettingTypes)[keyof typeof StorageSettingTypes];
export declare const ValidationType: {
    readonly ShallowValidation: "ShallowValidation";
    readonly DeepValidation: "DeepValidation";
};
/**
 * Specifies the type of validation. In case of DeepValidation, all validations from /validateForBackup API will run again.
 */
export type ValidationType = (typeof ValidationType)[keyof typeof ValidationType];
export declare const WeekNumber: {
    readonly First: "First";
    readonly Fourth: "Fourth";
    readonly Last: "Last";
    readonly Second: "Second";
    readonly Third: "Third";
};
export type WeekNumber = (typeof WeekNumber)[keyof typeof WeekNumber];
