"use strict";
// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***
Object.defineProperty(exports, "__esModule", { value: true });
exports.WeekNumber = exports.ValidationType = exports.StorageSettingTypes = exports.StorageSettingStoreTypes = exports.SoftDeleteState = exports.SecretStoreType = exports.ResourcePropertiesObjectType = exports.Month = exports.InfrastructureEncryptionState = exports.ImmutabilityState = exports.IdentityType = exports.EncryptionState = exports.DayOfWeek = exports.DataStoreTypes = exports.CrossSubscriptionRestoreState = exports.CrossRegionRestoreState = exports.AlertsState = exports.AbsoluteMarker = exports.AKSVolumeTypes = void 0;
exports.AKSVolumeTypes = {
    AzureDisk: "AzureDisk",
    AzureFileShareSMB: "AzureFileShareSMB",
};
exports.AbsoluteMarker = {
    AllBackup: "AllBackup",
    FirstOfDay: "FirstOfDay",
    FirstOfMonth: "FirstOfMonth",
    FirstOfWeek: "FirstOfWeek",
    FirstOfYear: "FirstOfYear",
};
exports.AlertsState = {
    Enabled: "Enabled",
    Disabled: "Disabled",
};
exports.CrossRegionRestoreState = {
    Disabled: "Disabled",
    Enabled: "Enabled",
};
exports.CrossSubscriptionRestoreState = {
    Disabled: "Disabled",
    PermanentlyDisabled: "PermanentlyDisabled",
    Enabled: "Enabled",
};
exports.DataStoreTypes = {
    OperationalStore: "OperationalStore",
    VaultStore: "VaultStore",
    ArchiveStore: "ArchiveStore",
};
exports.DayOfWeek = {
    Friday: "Friday",
    Monday: "Monday",
    Saturday: "Saturday",
    Sunday: "Sunday",
    Thursday: "Thursday",
    Tuesday: "Tuesday",
    Wednesday: "Wednesday",
};
exports.EncryptionState = {
    /**
     * CMK encryption is enabled on the Backup Vault
     */
    Enabled: "Enabled",
    /**
     * CMK encryption is disabled on the Backup Vault. User can not set this state once Encryption State is 'Enabled'.
     */
    Disabled: "Disabled",
    /**
     * CMK encryption is in inconsistent state on the Backup Vault. This state indicates that user needs to retry the encryption settings operation immediately to correct the state.
     */
    Inconsistent: "Inconsistent",
};
exports.IdentityType = {
    SystemAssigned: "SystemAssigned",
    UserAssigned: "UserAssigned",
};
exports.ImmutabilityState = {
    Disabled: "Disabled",
    Unlocked: "Unlocked",
    Locked: "Locked",
};
exports.InfrastructureEncryptionState = {
    Enabled: "Enabled",
    Disabled: "Disabled",
};
exports.Month = {
    April: "April",
    August: "August",
    December: "December",
    February: "February",
    January: "January",
    July: "July",
    June: "June",
    March: "March",
    May: "May",
    November: "November",
    October: "October",
    September: "September",
};
exports.ResourcePropertiesObjectType = {
    DefaultResourceProperties: "DefaultResourceProperties",
};
exports.SecretStoreType = {
    Invalid: "Invalid",
    AzureKeyVault: "AzureKeyVault",
};
exports.SoftDeleteState = {
    /**
     * Soft Delete is turned off for the BackupVault
     */
    Off: "Off",
    /**
     * Soft Delete is enabled for the BackupVault but can be turned off
     */
    On: "On",
    /**
     * Soft Delete is permanently enabled for the BackupVault and the setting cannot be changed
     */
    AlwaysOn: "AlwaysOn",
};
exports.StorageSettingStoreTypes = {
    ArchiveStore: "ArchiveStore",
    OperationalStore: "OperationalStore",
    VaultStore: "VaultStore",
};
exports.StorageSettingTypes = {
    GeoRedundant: "GeoRedundant",
    LocallyRedundant: "LocallyRedundant",
    ZoneRedundant: "ZoneRedundant",
};
exports.ValidationType = {
    ShallowValidation: "ShallowValidation",
    DeepValidation: "DeepValidation",
};
exports.WeekNumber = {
    First: "First",
    Fourth: "Fourth",
    Last: "Last",
    Second: "Second",
    Third: "Third",
};
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaW5kZXguanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi8uLi90eXBlcy9lbnVtcy9kYXRhcHJvdGVjdGlvbi92MjAyNTAxMDEvaW5kZXgudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IjtBQUFBLHNFQUFzRTtBQUN0RSxpRkFBaUY7OztBQUdwRSxRQUFBLGNBQWMsR0FBRztJQUMxQixTQUFTLEVBQUUsV0FBVztJQUN0QixpQkFBaUIsRUFBRSxtQkFBbUI7Q0FDaEMsQ0FBQztBQUlFLFFBQUEsY0FBYyxHQUFHO0lBQzFCLFNBQVMsRUFBRSxXQUFXO0lBQ3RCLFVBQVUsRUFBRSxZQUFZO0lBQ3hCLFlBQVksRUFBRSxjQUFjO0lBQzVCLFdBQVcsRUFBRSxhQUFhO0lBQzFCLFdBQVcsRUFBRSxhQUFhO0NBQ3BCLENBQUM7QUFJRSxRQUFBLFdBQVcsR0FBRztJQUN2QixPQUFPLEVBQUUsU0FBUztJQUNsQixRQUFRLEVBQUUsVUFBVTtDQUNkLENBQUM7QUFJRSxRQUFBLHVCQUF1QixHQUFHO0lBQ25DLFFBQVEsRUFBRSxVQUFVO0lBQ3BCLE9BQU8sRUFBRSxTQUFTO0NBQ1osQ0FBQztBQU9FLFFBQUEsNkJBQTZCLEdBQUc7SUFDekMsUUFBUSxFQUFFLFVBQVU7SUFDcEIsbUJBQW1CLEVBQUUscUJBQXFCO0lBQzFDLE9BQU8sRUFBRSxTQUFTO0NBQ1osQ0FBQztBQU9FLFFBQUEsY0FBYyxHQUFHO0lBQzFCLGdCQUFnQixFQUFFLGtCQUFrQjtJQUNwQyxVQUFVLEVBQUUsWUFBWTtJQUN4QixZQUFZLEVBQUUsY0FBYztDQUN0QixDQUFDO0FBT0UsUUFBQSxTQUFTLEdBQUc7SUFDckIsTUFBTSxFQUFFLFFBQVE7SUFDaEIsTUFBTSxFQUFFLFFBQVE7SUFDaEIsUUFBUSxFQUFFLFVBQVU7SUFDcEIsTUFBTSxFQUFFLFFBQVE7SUFDaEIsUUFBUSxFQUFFLFVBQVU7SUFDcEIsT0FBTyxFQUFFLFNBQVM7SUFDbEIsU0FBUyxFQUFFLFdBQVc7Q0FDaEIsQ0FBQztBQUlFLFFBQUEsZUFBZSxHQUFHO0lBQzNCOztPQUVHO0lBQ0gsT0FBTyxFQUFFLFNBQVM7SUFDbEI7O09BRUc7SUFDSCxRQUFRLEVBQUUsVUFBVTtJQUNwQjs7T0FFRztJQUNILFlBQVksRUFBRSxjQUFjO0NBQ3RCLENBQUM7QUFPRSxRQUFBLFlBQVksR0FBRztJQUN4QixjQUFjLEVBQUUsZ0JBQWdCO0lBQ2hDLFlBQVksRUFBRSxjQUFjO0NBQ3RCLENBQUM7QUFPRSxRQUFBLGlCQUFpQixHQUFHO0lBQzdCLFFBQVEsRUFBRSxVQUFVO0lBQ3BCLFFBQVEsRUFBRSxVQUFVO0lBQ3BCLE1BQU0sRUFBRSxRQUFRO0NBQ1YsQ0FBQztBQU9FLFFBQUEsNkJBQTZCLEdBQUc7SUFDekMsT0FBTyxFQUFFLFNBQVM7SUFDbEIsUUFBUSxFQUFFLFVBQVU7Q0FDZCxDQUFDO0FBT0UsUUFBQSxLQUFLLEdBQUc7SUFDakIsS0FBSyxFQUFFLE9BQU87SUFDZCxNQUFNLEVBQUUsUUFBUTtJQUNoQixRQUFRLEVBQUUsVUFBVTtJQUNwQixRQUFRLEVBQUUsVUFBVTtJQUNwQixPQUFPLEVBQUUsU0FBUztJQUNsQixJQUFJLEVBQUUsTUFBTTtJQUNaLElBQUksRUFBRSxNQUFNO0lBQ1osS0FBSyxFQUFFLE9BQU87SUFDZCxHQUFHLEVBQUUsS0FBSztJQUNWLFFBQVEsRUFBRSxVQUFVO0lBQ3BCLE9BQU8sRUFBRSxTQUFTO0lBQ2xCLFNBQVMsRUFBRSxXQUFXO0NBQ2hCLENBQUM7QUFJRSxRQUFBLDRCQUE0QixHQUFHO0lBQ3hDLHlCQUF5QixFQUFFLDJCQUEyQjtDQUNoRCxDQUFDO0FBT0UsUUFBQSxlQUFlLEdBQUc7SUFDM0IsT0FBTyxFQUFFLFNBQVM7SUFDbEIsYUFBYSxFQUFFLGVBQWU7Q0FDeEIsQ0FBQztBQU9FLFFBQUEsZUFBZSxHQUFHO0lBQzNCOztPQUVHO0lBQ0gsR0FBRyxFQUFFLEtBQUs7SUFDVjs7T0FFRztJQUNILEVBQUUsRUFBRSxJQUFJO0lBQ1I7O09BRUc7SUFDSCxRQUFRLEVBQUUsVUFBVTtDQUNkLENBQUM7QUFPRSxRQUFBLHdCQUF3QixHQUFHO0lBQ3BDLFlBQVksRUFBRSxjQUFjO0lBQzVCLGdCQUFnQixFQUFFLGtCQUFrQjtJQUNwQyxVQUFVLEVBQUUsWUFBWTtDQUNsQixDQUFDO0FBT0UsUUFBQSxtQkFBbUIsR0FBRztJQUMvQixZQUFZLEVBQUUsY0FBYztJQUM1QixnQkFBZ0IsRUFBRSxrQkFBa0I7SUFDcEMsYUFBYSxFQUFFLGVBQWU7Q0FDeEIsQ0FBQztBQU9FLFFBQUEsY0FBYyxHQUFHO0lBQzFCLGlCQUFpQixFQUFFLG1CQUFtQjtJQUN0QyxjQUFjLEVBQUUsZ0JBQWdCO0NBQzFCLENBQUM7QUFPRSxRQUFBLFVBQVUsR0FBRztJQUN0QixLQUFLLEVBQUUsT0FBTztJQUNkLE1BQU0sRUFBRSxRQUFRO0lBQ2hCLElBQUksRUFBRSxNQUFNO0lBQ1osTUFBTSxFQUFFLFFBQVE7SUFDaEIsS0FBSyxFQUFFLE9BQU87Q0FDUixDQUFDIn0=