export declare const AgreementType: {
    readonly NotSpecified: "NotSpecified";
    readonly AS2: "AS2";
    readonly X12: "X12";
    readonly Edifact: "Edifact";
};
/**
 * The agreement type.
 */
export type AgreementType = (typeof AgreementType)[keyof typeof AgreementType];
export declare const EdifactCharacterSet: {
    readonly NotSpecified: "NotSpecified";
    readonly UNOB: "UNOB";
    readonly UNOA: "UNOA";
    readonly UNOC: "UNOC";
    readonly UNOD: "UNOD";
    readonly UNOE: "UNOE";
    readonly UNOF: "UNOF";
    readonly UNOG: "UNOG";
    readonly UNOH: "UNOH";
    readonly UNOI: "UNOI";
    readonly UNOJ: "UNOJ";
    readonly UNOK: "UNOK";
    readonly UNOX: "UNOX";
    readonly UNOY: "UNOY";
    readonly KECA: "KECA";
};
/**
 * The EDIFACT frame setting characterSet.
 */
export type EdifactCharacterSet = (typeof EdifactCharacterSet)[keyof typeof EdifactCharacterSet];
export declare const EdifactDecimalIndicator: {
    readonly NotSpecified: "NotSpecified";
    readonly Comma: "Comma";
    readonly Decimal: "Decimal";
};
/**
 * The EDIFACT frame setting decimal indicator.
 */
export type EdifactDecimalIndicator = (typeof EdifactDecimalIndicator)[keyof typeof EdifactDecimalIndicator];
export declare const EncryptionAlgorithm: {
    readonly NotSpecified: "NotSpecified";
    readonly None: "None";
    readonly DES3: "DES3";
    readonly RC2: "RC2";
    readonly AES128: "AES128";
    readonly AES192: "AES192";
    readonly AES256: "AES256";
};
/**
 * The encryption algorithm.
 */
export type EncryptionAlgorithm = (typeof EncryptionAlgorithm)[keyof typeof EncryptionAlgorithm];
export declare const HashingAlgorithm: {
    readonly NotSpecified: "NotSpecified";
    readonly None: "None";
    readonly SHA2256: "SHA2256";
    readonly SHA2384: "SHA2384";
    readonly SHA2512: "SHA2512";
};
/**
 * The signing or hashing algorithm.
 */
export type HashingAlgorithm = (typeof HashingAlgorithm)[keyof typeof HashingAlgorithm];
export declare const MapType: {
    readonly NotSpecified: "NotSpecified";
    readonly Xslt: "Xslt";
};
/**
 * The map type.
 */
export type MapType = (typeof MapType)[keyof typeof MapType];
export declare const MessageFilterType: {
    readonly NotSpecified: "NotSpecified";
    readonly Include: "Include";
    readonly Exclude: "Exclude";
};
/**
 * The message filter type.
 */
export type MessageFilterType = (typeof MessageFilterType)[keyof typeof MessageFilterType];
export declare const PartnerType: {
    readonly NotSpecified: "NotSpecified";
    readonly B2B: "B2B";
};
/**
 * The partner type.
 */
export type PartnerType = (typeof PartnerType)[keyof typeof PartnerType];
export declare const SchemaType: {
    readonly NotSpecified: "NotSpecified";
    readonly Xml: "Xml";
};
/**
 * The schema type.
 */
export type SchemaType = (typeof SchemaType)[keyof typeof SchemaType];
export declare const SegmentTerminatorSuffix: {
    readonly NotSpecified: "NotSpecified";
    readonly None: "None";
    readonly CR: "CR";
    readonly LF: "LF";
    readonly CRLF: "CRLF";
};
/**
 * The segment terminator suffix.
 */
export type SegmentTerminatorSuffix = (typeof SegmentTerminatorSuffix)[keyof typeof SegmentTerminatorSuffix];
export declare const SkuName: {
    readonly NotSpecified: "NotSpecified";
    readonly Free: "Free";
    readonly Shared: "Shared";
    readonly Basic: "Basic";
    readonly Standard: "Standard";
    readonly Premium: "Premium";
};
/**
 * The sku name.
 */
export type SkuName = (typeof SkuName)[keyof typeof SkuName];
export declare const TrailingSeparatorPolicy: {
    readonly NotSpecified: "NotSpecified";
    readonly NotAllowed: "NotAllowed";
    readonly Optional: "Optional";
    readonly Mandatory: "Mandatory";
};
/**
 * The trailing separator policy.
 */
export type TrailingSeparatorPolicy = (typeof TrailingSeparatorPolicy)[keyof typeof TrailingSeparatorPolicy];
export declare const UsageIndicator: {
    readonly NotSpecified: "NotSpecified";
    readonly Test: "Test";
    readonly Information: "Information";
    readonly Production: "Production";
};
/**
 * The usage indicator.
 */
export type UsageIndicator = (typeof UsageIndicator)[keyof typeof UsageIndicator];
export declare const X12CharacterSet: {
    readonly NotSpecified: "NotSpecified";
    readonly Basic: "Basic";
    readonly Extended: "Extended";
    readonly UTF8: "UTF8";
};
/**
 * The X12 character set.
 */
export type X12CharacterSet = (typeof X12CharacterSet)[keyof typeof X12CharacterSet];
export declare const X12DateFormat: {
    readonly NotSpecified: "NotSpecified";
    readonly CCYYMMDD: "CCYYMMDD";
    readonly YYMMDD: "YYMMDD";
};
/**
 * The group header date format.
 */
export type X12DateFormat = (typeof X12DateFormat)[keyof typeof X12DateFormat];
export declare const X12TimeFormat: {
    readonly NotSpecified: "NotSpecified";
    readonly HHMM: "HHMM";
    readonly HHMMSS: "HHMMSS";
    readonly HHMMSSdd: "HHMMSSdd";
    readonly HHMMSSd: "HHMMSSd";
};
/**
 * The group header time format.
 */
export type X12TimeFormat = (typeof X12TimeFormat)[keyof typeof X12TimeFormat];
