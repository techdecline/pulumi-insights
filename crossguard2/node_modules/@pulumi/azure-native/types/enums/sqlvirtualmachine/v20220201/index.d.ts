export declare const AssessmentDayOfWeek: {
    readonly Monday: "Monday";
    readonly Tuesday: "Tuesday";
    readonly Wednesday: "Wednesday";
    readonly Thursday: "Thursday";
    readonly Friday: "Friday";
    readonly Saturday: "Saturday";
    readonly Sunday: "Sunday";
};
/**
 * Day of the week to run assessment.
 */
export type AssessmentDayOfWeek = (typeof AssessmentDayOfWeek)[keyof typeof AssessmentDayOfWeek];
export declare const AutoBackupDaysOfWeek: {
    readonly Monday: "Monday";
    readonly Tuesday: "Tuesday";
    readonly Wednesday: "Wednesday";
    readonly Thursday: "Thursday";
    readonly Friday: "Friday";
    readonly Saturday: "Saturday";
    readonly Sunday: "Sunday";
};
export type AutoBackupDaysOfWeek = (typeof AutoBackupDaysOfWeek)[keyof typeof AutoBackupDaysOfWeek];
export declare const BackupScheduleType: {
    readonly Manual: "Manual";
    readonly Automated: "Automated";
};
/**
 * Backup schedule type.
 */
export type BackupScheduleType = (typeof BackupScheduleType)[keyof typeof BackupScheduleType];
export declare const ClusterSubnetType: {
    readonly SingleSubnet: "SingleSubnet";
    readonly MultiSubnet: "MultiSubnet";
};
/**
 * Cluster subnet type.
 */
export type ClusterSubnetType = (typeof ClusterSubnetType)[keyof typeof ClusterSubnetType];
export declare const Commit: {
    readonly Synchronous_Commit: "Synchronous_Commit";
    readonly Asynchronous_Commit: "Asynchronous_Commit";
};
/**
 * Replica commit mode in availability group.
 */
export type Commit = (typeof Commit)[keyof typeof Commit];
export declare const ConnectivityType: {
    readonly LOCAL: "LOCAL";
    readonly PRIVATE: "PRIVATE";
    readonly PUBLIC: "PUBLIC";
};
/**
 * SQL Server connectivity option.
 */
export type ConnectivityType = (typeof ConnectivityType)[keyof typeof ConnectivityType];
export declare const DayOfWeek: {
    readonly Everyday: "Everyday";
    readonly Monday: "Monday";
    readonly Tuesday: "Tuesday";
    readonly Wednesday: "Wednesday";
    readonly Thursday: "Thursday";
    readonly Friday: "Friday";
    readonly Saturday: "Saturday";
    readonly Sunday: "Sunday";
};
/**
 * Day of week to apply the patch on.
 */
export type DayOfWeek = (typeof DayOfWeek)[keyof typeof DayOfWeek];
export declare const DiskConfigurationType: {
    readonly NEW: "NEW";
    readonly EXTEND: "EXTEND";
    readonly ADD: "ADD";
};
/**
 * Disk configuration to apply to SQL Server.
 */
export type DiskConfigurationType = (typeof DiskConfigurationType)[keyof typeof DiskConfigurationType];
export declare const Failover: {
    readonly Automatic: "Automatic";
    readonly Manual: "Manual";
};
/**
 * Replica failover mode in availability group.
 */
export type Failover = (typeof Failover)[keyof typeof Failover];
export declare const FullBackupFrequencyType: {
    readonly Daily: "Daily";
    readonly Weekly: "Weekly";
};
/**
 * Frequency of full backups. In both cases, full backups begin during the next scheduled time window.
 */
export type FullBackupFrequencyType = (typeof FullBackupFrequencyType)[keyof typeof FullBackupFrequencyType];
export declare const IdentityType: {
    readonly None: "None";
    readonly SystemAssigned: "SystemAssigned";
};
/**
 * The identity type. Set this to 'SystemAssigned' in order to automatically create and assign an Azure Active Directory principal for the resource.
 */
export type IdentityType = (typeof IdentityType)[keyof typeof IdentityType];
export declare const ReadableSecondary: {
    readonly No: "No";
    readonly All: "All";
    readonly Read_Only: "Read_Only";
};
/**
 * Replica readable secondary mode in availability group.
 */
export type ReadableSecondary = (typeof ReadableSecondary)[keyof typeof ReadableSecondary];
export declare const Role: {
    readonly Primary: "Primary";
    readonly Secondary: "Secondary";
};
/**
 * Replica Role in availability group.
 */
export type Role = (typeof Role)[keyof typeof Role];
export declare const SqlImageSku: {
    readonly Developer: "Developer";
    readonly Express: "Express";
    readonly Standard: "Standard";
    readonly Enterprise: "Enterprise";
    readonly Web: "Web";
};
/**
 * SQL Server edition type.
 */
export type SqlImageSku = (typeof SqlImageSku)[keyof typeof SqlImageSku];
export declare const SqlManagementMode: {
    readonly Full: "Full";
    readonly LightWeight: "LightWeight";
    readonly NoAgent: "NoAgent";
};
/**
 * SQL Server Management type.
 */
export type SqlManagementMode = (typeof SqlManagementMode)[keyof typeof SqlManagementMode];
export declare const SqlServerLicenseType: {
    readonly PAYG: "PAYG";
    readonly AHUB: "AHUB";
    readonly DR: "DR";
};
/**
 * SQL Server license type.
 */
export type SqlServerLicenseType = (typeof SqlServerLicenseType)[keyof typeof SqlServerLicenseType];
export declare const SqlVmGroupImageSku: {
    readonly Developer: "Developer";
    readonly Enterprise: "Enterprise";
};
/**
 * SQL image sku.
 */
export type SqlVmGroupImageSku = (typeof SqlVmGroupImageSku)[keyof typeof SqlVmGroupImageSku];
export declare const SqlWorkloadType: {
    readonly GENERAL: "GENERAL";
    readonly OLTP: "OLTP";
    readonly DW: "DW";
};
/**
 * SQL Server workload type.
 */
export type SqlWorkloadType = (typeof SqlWorkloadType)[keyof typeof SqlWorkloadType];
export declare const StorageWorkloadType: {
    readonly GENERAL: "GENERAL";
    readonly OLTP: "OLTP";
    readonly DW: "DW";
};
/**
 * Storage workload type.
 */
export type StorageWorkloadType = (typeof StorageWorkloadType)[keyof typeof StorageWorkloadType];
