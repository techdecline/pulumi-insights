export declare const ActionEnum: {
    readonly Allow: "Allow";
    readonly DenySilent: "DenySilent";
    readonly DenyResetServer: "DenyResetServer";
    readonly DenyResetBoth: "DenyResetBoth";
};
/**
 * rule action
 */
export type ActionEnum = (typeof ActionEnum)[keyof typeof ActionEnum];
export declare const BillingCycle: {
    readonly WEEKLY: "WEEKLY";
    readonly MONTHLY: "MONTHLY";
};
/**
 * different billing cycles like MONTHLY/WEEKLY
 */
export type BillingCycle = (typeof BillingCycle)[keyof typeof BillingCycle];
export declare const BooleanEnum: {
    readonly TRUE: "TRUE";
    readonly FALSE: "FALSE";
};
/**
 * cidr should not be 'any'
 */
export type BooleanEnum = (typeof BooleanEnum)[keyof typeof BooleanEnum];
export declare const DNSProxy: {
    readonly DISABLED: "DISABLED";
    readonly ENABLED: "ENABLED";
};
/**
 * Enable DNS proxy, disabled by default
 */
export type DNSProxy = (typeof DNSProxy)[keyof typeof DNSProxy];
export declare const DecryptionRuleTypeEnum: {
    readonly SSLOutboundInspection: "SSLOutboundInspection";
    readonly SSLInboundInspection: "SSLInboundInspection";
    readonly None: "None";
};
/**
 * enable or disable decryption
 */
export type DecryptionRuleTypeEnum = (typeof DecryptionRuleTypeEnum)[keyof typeof DecryptionRuleTypeEnum];
export declare const DefaultMode: {
    readonly IPS: "IPS";
    readonly FIREWALL: "FIREWALL";
    readonly NONE: "NONE";
};
/**
 * Mode for default rules creation
 */
export type DefaultMode = (typeof DefaultMode)[keyof typeof DefaultMode];
export declare const EgressNat: {
    readonly DISABLED: "DISABLED";
    readonly ENABLED: "ENABLED";
};
/**
 * Enable egress NAT, enabled by default
 */
export type EgressNat = (typeof EgressNat)[keyof typeof EgressNat];
export declare const EnabledDNSType: {
    readonly CUSTOM: "CUSTOM";
    readonly AZURE: "AZURE";
};
/**
 * Enabled DNS proxy type, disabled by default
 */
export type EnabledDNSType = (typeof EnabledDNSType)[keyof typeof EnabledDNSType];
export declare const ManagedIdentityType: {
    readonly None: "None";
    readonly SystemAssigned: "SystemAssigned";
    readonly UserAssigned: "UserAssigned";
    readonly SystemAndUserAssigned: "SystemAssigned,UserAssigned";
};
/**
 * The type of managed identity assigned to this resource.
 */
export type ManagedIdentityType = (typeof ManagedIdentityType)[keyof typeof ManagedIdentityType];
export declare const MarketplaceSubscriptionStatus: {
    readonly PendingFulfillmentStart: "PendingFulfillmentStart";
    readonly Subscribed: "Subscribed";
    readonly Suspended: "Suspended";
    readonly Unsubscribed: "Unsubscribed";
    readonly NotStarted: "NotStarted";
    readonly FulfillmentRequested: "FulfillmentRequested";
};
/**
 * Marketplace Subscription Status
 */
export type MarketplaceSubscriptionStatus = (typeof MarketplaceSubscriptionStatus)[keyof typeof MarketplaceSubscriptionStatus];
export declare const NetworkType: {
    readonly VNET: "VNET";
    readonly VWAN: "VWAN";
};
/**
 * vnet or vwan, cannot be updated
 */
export type NetworkType = (typeof NetworkType)[keyof typeof NetworkType];
export declare const ProtocolType: {
    readonly TCP: "TCP";
    readonly UDP: "UDP";
};
/**
 * Protocol Type
 */
export type ProtocolType = (typeof ProtocolType)[keyof typeof ProtocolType];
export declare const ScopeType: {
    readonly LOCAL: "LOCAL";
    readonly GLOBAL: "GLOBAL";
};
/**
 * Rulestack Type
 */
export type ScopeType = (typeof ScopeType)[keyof typeof ScopeType];
export declare const StateEnum: {
    readonly DISABLED: "DISABLED";
    readonly ENABLED: "ENABLED";
};
/**
 * state of this rule
 */
export type StateEnum = (typeof StateEnum)[keyof typeof StateEnum];
export declare const UsageType: {
    readonly PAYG: "PAYG";
    readonly COMMITTED: "COMMITTED";
};
/**
 * different usage type like PAYG/COMMITTED
 */
export type UsageType = (typeof UsageType)[keyof typeof UsageType];
