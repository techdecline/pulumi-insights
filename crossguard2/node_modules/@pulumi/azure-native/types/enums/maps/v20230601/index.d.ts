export declare const IdentityType: {
    readonly SystemAssignedIdentity: "systemAssignedIdentity";
    readonly UserAssignedIdentity: "userAssignedIdentity";
    readonly DelegatedResourceIdentity: "delegatedResourceIdentity";
};
/**
 * Values can be systemAssignedIdentity or userAssignedIdentity
 */
export type IdentityType = (typeof IdentityType)[keyof typeof IdentityType];
export declare const InfrastructureEncryption: {
    readonly Enabled: "enabled";
    readonly Disabled: "disabled";
};
/**
 * Values are enabled and disabled.
 */
export type InfrastructureEncryption = (typeof InfrastructureEncryption)[keyof typeof InfrastructureEncryption];
export declare const Kind: {
    readonly Gen1: "Gen1";
    readonly Gen2: "Gen2";
};
/**
 * Get or Set Kind property.
 */
export type Kind = (typeof Kind)[keyof typeof Kind];
export declare const ManagedServiceIdentityType: {
    readonly None: "None";
    readonly SystemAssigned: "SystemAssigned";
    readonly UserAssigned: "UserAssigned";
    readonly SystemAssigned_UserAssigned: "SystemAssigned, UserAssigned";
};
/**
 * Type of managed service identity (where both SystemAssigned and UserAssigned types are allowed).
 */
export type ManagedServiceIdentityType = (typeof ManagedServiceIdentityType)[keyof typeof ManagedServiceIdentityType];
export declare const Name: {
    readonly S0: "S0";
    readonly S1: "S1";
    readonly G2: "G2";
};
/**
 * The name of the SKU, in standard format (such as S0).
 */
export type Name = (typeof Name)[keyof typeof Name];
export declare const SigningKey: {
    readonly PrimaryKey: "primaryKey";
    readonly SecondaryKey: "secondaryKey";
    readonly ManagedIdentity: "managedIdentity";
};
/**
 * The Map account key to use for signing. Picking `primaryKey` or `secondaryKey` will use the Map account Shared Keys, and using `managedIdentity` will use the auto-renewed private key to sign the SAS.
 */
export type SigningKey = (typeof SigningKey)[keyof typeof SigningKey];
