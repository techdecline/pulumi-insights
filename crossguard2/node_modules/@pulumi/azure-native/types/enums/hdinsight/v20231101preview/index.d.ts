export declare const AutoscaleType: {
    readonly ScheduleBased: "ScheduleBased";
    readonly LoadBased: "LoadBased";
};
/**
 * User to specify which type of Autoscale to be implemented - Scheduled Based or Load Based.
 */
export type AutoscaleType = (typeof AutoscaleType)[keyof typeof AutoscaleType];
export declare const ComparisonOperator: {
    readonly GreaterThan: "greaterThan";
    readonly GreaterThanOrEqual: "greaterThanOrEqual";
    readonly LessThan: "lessThan";
    readonly LessThanOrEqual: "lessThanOrEqual";
};
/**
 * The comparison operator.
 */
export type ComparisonOperator = (typeof ComparisonOperator)[keyof typeof ComparisonOperator];
export declare const ContentEncoding: {
    readonly Base64: "Base64";
    readonly None: "None";
};
/**
 * This property indicates if the content is encoded and is case-insensitive. Please set the value to base64 if the content is base64 encoded. Set it to none or skip it if the content is plain text.
 */
export type ContentEncoding = (typeof ContentEncoding)[keyof typeof ContentEncoding];
export declare const DataDiskType: {
    readonly Standard_HDD_LRS: "Standard_HDD_LRS";
    readonly Standard_SSD_LRS: "Standard_SSD_LRS";
    readonly Standard_SSD_ZRS: "Standard_SSD_ZRS";
    readonly Premium_SSD_LRS: "Premium_SSD_LRS";
    readonly Premium_SSD_ZRS: "Premium_SSD_ZRS";
    readonly Premium_SSD_v2_LRS: "Premium_SSD_v2_LRS";
};
/**
 * Managed Disk Type.
 */
export type DataDiskType = (typeof DataDiskType)[keyof typeof DataDiskType];
export declare const DbConnectionAuthenticationMode: {
    /**
     * The password-based authentication to connect to your Hive metastore database.
     */
    readonly SqlAuth: "SqlAuth";
    /**
     * The managed-identity-based authentication to connect to your Hive metastore database.
     */
    readonly IdentityAuth: "IdentityAuth";
};
/**
 * The authentication mode to connect to your Hive metastore database. More details: https://learn.microsoft.com/en-us/azure/azure-sql/database/logins-create-manage?view=azuresql#authentication-and-authorization
 */
export type DbConnectionAuthenticationMode = (typeof DbConnectionAuthenticationMode)[keyof typeof DbConnectionAuthenticationMode];
export declare const DeploymentMode: {
    readonly Application: "Application";
    readonly Session: "Session";
};
/**
 * A string property that indicates the deployment mode of Flink cluster. It can have one of the following enum values => Application, Session. Default value is Session
 */
export type DeploymentMode = (typeof DeploymentMode)[keyof typeof DeploymentMode];
export declare const KeyVaultObjectType: {
    readonly Key: "Key";
    readonly Secret: "Secret";
    readonly Certificate: "Certificate";
};
/**
 * Type of key vault object: secret, key or certificate.
 */
export type KeyVaultObjectType = (typeof KeyVaultObjectType)[keyof typeof KeyVaultObjectType];
export declare const MetastoreDbConnectionAuthenticationMode: {
    /**
     * The password-based authentication to connect to your Hive metastore database.
     */
    readonly SqlAuth: "SqlAuth";
    /**
     * The managed-identity-based authentication to connect to your Hive metastore database.
     */
    readonly IdentityAuth: "IdentityAuth";
};
/**
 * The authentication mode to connect to your Hive metastore database. More details: https://learn.microsoft.com/en-us/azure/azure-sql/database/logins-create-manage?view=azuresql#authentication-and-authorization
 */
export type MetastoreDbConnectionAuthenticationMode = (typeof MetastoreDbConnectionAuthenticationMode)[keyof typeof MetastoreDbConnectionAuthenticationMode];
export declare const OutboundType: {
    /**
     * The load balancer is used for egress through an AKS assigned public IP. This supports Kubernetes services of type 'loadBalancer'.
     */
    readonly LoadBalancer: "loadBalancer";
    /**
     * Egress paths must be defined by the user. This is an advanced scenario and requires proper network configuration.
     */
    readonly UserDefinedRouting: "userDefinedRouting";
};
/**
 * This can only be set at cluster pool creation time and cannot be changed later.
 */
export type OutboundType = (typeof OutboundType)[keyof typeof OutboundType];
export declare const RangerUsersyncMode: {
    readonly Static: "static";
    readonly Automatic: "automatic";
};
/**
 * User & groups can be synced automatically or via a static list that's refreshed.
 */
export type RangerUsersyncMode = (typeof RangerUsersyncMode)[keyof typeof RangerUsersyncMode];
export declare const ScaleActionType: {
    readonly Scaleup: "scaleup";
    readonly Scaledown: "scaledown";
};
/**
 * The action type.
 */
export type ScaleActionType = (typeof ScaleActionType)[keyof typeof ScaleActionType];
export declare const ScheduleDay: {
    readonly Sunday: "Sunday";
    readonly Monday: "Monday";
    readonly Tuesday: "Tuesday";
    readonly Wednesday: "Wednesday";
    readonly Thursday: "Thursday";
    readonly Friday: "Friday";
    readonly Saturday: "Saturday";
};
export type ScheduleDay = (typeof ScheduleDay)[keyof typeof ScheduleDay];
export declare const UpgradeMode: {
    readonly STATELESS_UPDATE: "STATELESS_UPDATE";
    readonly UPDATE: "UPDATE";
    readonly LAST_STATE_UPDATE: "LAST_STATE_UPDATE";
};
/**
 * A string property that indicates the upgrade mode to be performed on the Flink job. It can have one of the following enum values => STATELESS_UPDATE, UPDATE, LAST_STATE_UPDATE.
 */
export type UpgradeMode = (typeof UpgradeMode)[keyof typeof UpgradeMode];
