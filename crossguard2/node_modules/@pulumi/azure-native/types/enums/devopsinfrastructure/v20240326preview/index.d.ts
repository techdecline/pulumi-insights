export declare const AzureDevOpsPermissionType: {
    /**
     * Pool will inherit permissions from the project or organization.
     */
    readonly Inherit: "Inherit";
    /**
     * Only the pool creator will be an admin of the pool.
     */
    readonly CreatorOnly: "CreatorOnly";
    /**
     * Only the specified accounts will be admins of the pool.
     */
    readonly SpecificAccounts: "SpecificAccounts";
};
/**
 * Determines who has admin permissions to the Azure DevOps pool.
 */
export type AzureDevOpsPermissionType = (typeof AzureDevOpsPermissionType)[keyof typeof AzureDevOpsPermissionType];
export declare const CachingType: {
    /**
     * Don't use host caching.
     */
    readonly None: "None";
    /**
     * For workloads that only do read operations.
     */
    readonly ReadOnly: "ReadOnly";
    /**
     * For workloads that do a balance of read and write operations.
     */
    readonly ReadWrite: "ReadWrite";
};
/**
 * The type of caching to be enabled for the data disks. The default value for caching is readwrite. For information about the caching options see: https://blogs.msdn.microsoft.com/windowsazurestorage/2012/06/27/exploring-windows-azure-drives-disks-and-images/.
 */
export type CachingType = (typeof CachingType)[keyof typeof CachingType];
export declare const LogonType: {
    /**
     * Run as a service.
     */
    readonly Service: "Service";
    /**
     * Run in interactive mode.
     */
    readonly Interactive: "Interactive";
};
/**
 * Determines how the service should be run. By default, this will be set to Service.
 */
export type LogonType = (typeof LogonType)[keyof typeof LogonType];
export declare const ManagedServiceIdentityType: {
    readonly None: "None";
    readonly SystemAssigned: "SystemAssigned";
    readonly UserAssigned: "UserAssigned";
    readonly SystemAssigned_UserAssigned: "SystemAssigned, UserAssigned";
};
/**
 * Type of managed service identity (where both SystemAssigned and UserAssigned types are allowed).
 */
export type ManagedServiceIdentityType = (typeof ManagedServiceIdentityType)[keyof typeof ManagedServiceIdentityType];
export declare const OsDiskStorageAccountType: {
    /**
     * Standard OS disk type.
     */
    readonly Standard: "Standard";
    /**
     * Premium OS disk type.
     */
    readonly Premium: "Premium";
    /**
     * Standard SSD OS disk type.
     */
    readonly StandardSSD: "StandardSSD";
};
/**
 * The Azure SKU name of the machines in the pool.
 */
export type OsDiskStorageAccountType = (typeof OsDiskStorageAccountType)[keyof typeof OsDiskStorageAccountType];
export declare const ProvisioningState: {
    /**
     * Represents a succeeded operation.
     */
    readonly Succeeded: "Succeeded";
    /**
     * Represents a failed operation.
     */
    readonly Failed: "Failed";
    /**
     * Represents a canceled operation.
     */
    readonly Canceled: "Canceled";
    /**
     * Represents a pending operation.
     */
    readonly Provisioning: "Provisioning";
    /**
     * Represents a pending operation.
     */
    readonly Updating: "Updating";
    /**
     * Represents an operation under deletion.
     */
    readonly Deleting: "Deleting";
    /**
     * Represents an accepted operation.
     */
    readonly Accepted: "Accepted";
};
/**
 * The status of the current operation.
 */
export type ProvisioningState = (typeof ProvisioningState)[keyof typeof ProvisioningState];
export declare const StorageAccountType: {
    /**
     * The data disk should use standard locally redundant storage.
     */
    readonly StandardLRS: "standard_lrs";
    /**
     * The data disk should use premium locally redundant storage.
     */
    readonly PremiumLRS: "premium_lrs";
    /**
     * The data disk should use standard SSD locally redundant storage.
     */
    readonly StandardSSDLRS: "standardssd_lrs";
    /**
     * The data disk should use premium SSD zonal redundant storage.
     */
    readonly PremiumZRS: "premium_zrs";
    /**
     * The data disk should use standard SSD zonal redundant storage.
     */
    readonly StandardSSDZRS: "standardssd_zrs";
};
/**
 * The storage Account type to be used for the data disk. If omitted, the default is "standard_lrs".
 */
export type StorageAccountType = (typeof StorageAccountType)[keyof typeof StorageAccountType];
