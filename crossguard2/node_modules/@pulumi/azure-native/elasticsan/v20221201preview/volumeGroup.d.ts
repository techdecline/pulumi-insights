import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../../types/input";
import * as outputs from "../../types/output";
import * as enums from "../../types/enums";
/**
 * Response for Volume Group request.
 */
export declare class VolumeGroup extends pulumi.CustomResource {
    /**
     * Get an existing VolumeGroup resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    static get(name: string, id: pulumi.Input<pulumi.ID>, opts?: pulumi.CustomResourceOptions): VolumeGroup;
    /**
     * Returns true if the given object is an instance of VolumeGroup.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    static isInstance(obj: any): obj is VolumeGroup;
    /**
     * Type of encryption
     */
    readonly encryption: pulumi.Output<string | undefined>;
    /**
     * The name of the resource
     */
    readonly name: pulumi.Output<string>;
    /**
     * A collection of rules governing the accessibility from specific network locations.
     */
    readonly networkAcls: pulumi.Output<outputs.elasticsan.v20221201preview.NetworkRuleSetResponse | undefined>;
    /**
     * The list of Private Endpoint Connections.
     */
    readonly privateEndpointConnections: pulumi.Output<outputs.elasticsan.v20221201preview.PrivateEndpointConnectionResponse[]>;
    /**
     * Type of storage target
     */
    readonly protocolType: pulumi.Output<string | undefined>;
    /**
     * State of the operation on the resource.
     */
    readonly provisioningState: pulumi.Output<string>;
    /**
     * Azure Resource Manager metadata containing createdBy and modifiedBy information.
     */
    readonly systemData: pulumi.Output<outputs.elasticsan.v20221201preview.SystemDataResponse>;
    /**
     * The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
     */
    readonly type: pulumi.Output<string>;
    /**
     * Create a VolumeGroup resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: VolumeGroupArgs, opts?: pulumi.CustomResourceOptions);
}
/**
 * The set of arguments for constructing a VolumeGroup resource.
 */
export interface VolumeGroupArgs {
    /**
     * The name of the ElasticSan.
     */
    elasticSanName: pulumi.Input<string>;
    /**
     * Type of encryption
     */
    encryption?: pulumi.Input<string | enums.elasticsan.v20221201preview.EncryptionType>;
    /**
     * A collection of rules governing the accessibility from specific network locations.
     */
    networkAcls?: pulumi.Input<inputs.elasticsan.v20221201preview.NetworkRuleSetArgs>;
    /**
     * Type of storage target
     */
    protocolType?: pulumi.Input<string | enums.elasticsan.v20221201preview.StorageTargetType>;
    /**
     * The name of the resource group. The name is case insensitive.
     */
    resourceGroupName: pulumi.Input<string>;
    /**
     * The name of the VolumeGroup.
     */
    volumeGroupName?: pulumi.Input<string>;
}
