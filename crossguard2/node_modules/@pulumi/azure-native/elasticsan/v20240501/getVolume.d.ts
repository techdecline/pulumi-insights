import * as pulumi from "@pulumi/pulumi";
import * as outputs from "../../types/output";
/**
 * Get an Volume.
 */
export declare function getVolume(args: GetVolumeArgs, opts?: pulumi.InvokeOptions): Promise<GetVolumeResult>;
export interface GetVolumeArgs {
    /**
     * The name of the ElasticSan.
     */
    elasticSanName: string;
    /**
     * The name of the resource group. The name is case insensitive.
     */
    resourceGroupName: string;
    /**
     * The name of the VolumeGroup.
     */
    volumeGroupName: string;
    /**
     * The name of the Volume.
     */
    volumeName: string;
}
/**
 * Response for Volume request.
 */
export interface GetVolumeResult {
    /**
     * State of the operation on the resource.
     */
    readonly creationData?: outputs.elasticsan.v20240501.SourceCreationDataResponse;
    /**
     * Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
     */
    readonly id: string;
    /**
     * Parent resource information.
     */
    readonly managedBy?: outputs.elasticsan.v20240501.ManagedByInfoResponse;
    /**
     * The name of the resource
     */
    readonly name: string;
    /**
     * State of the operation on the resource.
     */
    readonly provisioningState: string;
    /**
     * Volume size.
     */
    readonly sizeGiB: number;
    /**
     * Storage target information
     */
    readonly storageTarget: outputs.elasticsan.v20240501.IscsiTargetInfoResponse;
    /**
     * Azure Resource Manager metadata containing createdBy and modifiedBy information.
     */
    readonly systemData: outputs.elasticsan.v20240501.SystemDataResponse;
    /**
     * The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
     */
    readonly type: string;
    /**
     * Unique Id of the volume in GUID format
     */
    readonly volumeId: string;
}
/**
 * Get an Volume.
 */
export declare function getVolumeOutput(args: GetVolumeOutputArgs, opts?: pulumi.InvokeOutputOptions): pulumi.Output<GetVolumeResult>;
export interface GetVolumeOutputArgs {
    /**
     * The name of the ElasticSan.
     */
    elasticSanName: pulumi.Input<string>;
    /**
     * The name of the resource group. The name is case insensitive.
     */
    resourceGroupName: pulumi.Input<string>;
    /**
     * The name of the VolumeGroup.
     */
    volumeGroupName: pulumi.Input<string>;
    /**
     * The name of the Volume.
     */
    volumeName: pulumi.Input<string>;
}
