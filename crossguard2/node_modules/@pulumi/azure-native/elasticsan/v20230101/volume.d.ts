import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../../types/input";
import * as outputs from "../../types/output";
/**
 * Response for Volume request.
 */
export declare class Volume extends pulumi.CustomResource {
    /**
     * Get an existing Volume resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    static get(name: string, id: pulumi.Input<pulumi.ID>, opts?: pulumi.CustomResourceOptions): Volume;
    /**
     * Returns true if the given object is an instance of Volume.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    static isInstance(obj: any): obj is Volume;
    /**
     * State of the operation on the resource.
     */
    readonly creationData: pulumi.Output<outputs.elasticsan.v20230101.SourceCreationDataResponse | undefined>;
    /**
     * Parent resource information.
     */
    readonly managedBy: pulumi.Output<outputs.elasticsan.v20230101.ManagedByInfoResponse | undefined>;
    /**
     * The name of the resource
     */
    readonly name: pulumi.Output<string>;
    /**
     * State of the operation on the resource.
     */
    readonly provisioningState: pulumi.Output<string>;
    /**
     * Volume size.
     */
    readonly sizeGiB: pulumi.Output<number>;
    /**
     * Storage target information
     */
    readonly storageTarget: pulumi.Output<outputs.elasticsan.v20230101.IscsiTargetInfoResponse>;
    /**
     * Azure Resource Manager metadata containing createdBy and modifiedBy information.
     */
    readonly systemData: pulumi.Output<outputs.elasticsan.v20230101.SystemDataResponse>;
    /**
     * The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
     */
    readonly type: pulumi.Output<string>;
    /**
     * Unique Id of the volume in GUID format
     */
    readonly volumeId: pulumi.Output<string>;
    /**
     * Create a Volume resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: VolumeArgs, opts?: pulumi.CustomResourceOptions);
}
/**
 * The set of arguments for constructing a Volume resource.
 */
export interface VolumeArgs {
    /**
     * State of the operation on the resource.
     */
    creationData?: pulumi.Input<inputs.elasticsan.v20230101.SourceCreationDataArgs>;
    /**
     * The name of the ElasticSan.
     */
    elasticSanName: pulumi.Input<string>;
    /**
     * Parent resource information.
     */
    managedBy?: pulumi.Input<inputs.elasticsan.v20230101.ManagedByInfoArgs>;
    /**
     * The name of the resource group. The name is case insensitive.
     */
    resourceGroupName: pulumi.Input<string>;
    /**
     * Volume size.
     */
    sizeGiB: pulumi.Input<number>;
    /**
     * The name of the VolumeGroup.
     */
    volumeGroupName: pulumi.Input<string>;
    /**
     * The name of the Volume.
     */
    volumeName?: pulumi.Input<string>;
}
