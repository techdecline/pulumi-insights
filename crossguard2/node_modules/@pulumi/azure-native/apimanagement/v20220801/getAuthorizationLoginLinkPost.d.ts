import * as pulumi from "@pulumi/pulumi";
/**
 * Gets authorization login links.
 */
export declare function getAuthorizationLoginLinkPost(args: GetAuthorizationLoginLinkPostArgs, opts?: pulumi.InvokeOptions): Promise<GetAuthorizationLoginLinkPostResult>;
export interface GetAuthorizationLoginLinkPostArgs {
    /**
     * Identifier of the authorization.
     */
    authorizationId: string;
    /**
     * Identifier of the authorization provider.
     */
    authorizationProviderId: string;
    /**
     * The redirect URL after login has completed.
     */
    postLoginRedirectUrl?: string;
    /**
     * The name of the resource group. The name is case insensitive.
     */
    resourceGroupName: string;
    /**
     * The name of the API Management service.
     */
    serviceName: string;
}
/**
 * Authorization login response contract.
 */
export interface GetAuthorizationLoginLinkPostResult {
    /**
     * The login link
     */
    readonly loginLink?: string;
}
/**
 * Gets authorization login links.
 */
export declare function getAuthorizationLoginLinkPostOutput(args: GetAuthorizationLoginLinkPostOutputArgs, opts?: pulumi.InvokeOutputOptions): pulumi.Output<GetAuthorizationLoginLinkPostResult>;
export interface GetAuthorizationLoginLinkPostOutputArgs {
    /**
     * Identifier of the authorization.
     */
    authorizationId: pulumi.Input<string>;
    /**
     * Identifier of the authorization provider.
     */
    authorizationProviderId: pulumi.Input<string>;
    /**
     * The redirect URL after login has completed.
     */
    postLoginRedirectUrl?: pulumi.Input<string>;
    /**
     * The name of the resource group. The name is case insensitive.
     */
    resourceGroupName: pulumi.Input<string>;
    /**
     * The name of the API Management service.
     */
    serviceName: pulumi.Input<string>;
}
