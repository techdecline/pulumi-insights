import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../../types/input";
import * as outputs from "../../types/output";
import * as enums from "../../types/enums";
/**
 * Authorization contract.
 */
export declare class Authorization extends pulumi.CustomResource {
    /**
     * Get an existing Authorization resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    static get(name: string, id: pulumi.Input<pulumi.ID>, opts?: pulumi.CustomResourceOptions): Authorization;
    /**
     * Returns true if the given object is an instance of Authorization.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    static isInstance(obj: any): obj is Authorization;
    /**
     * Authorization type options
     */
    readonly authorizationType: pulumi.Output<string | undefined>;
    /**
     * Authorization error details.
     */
    readonly error: pulumi.Output<outputs.apimanagement.v20220901preview.AuthorizationErrorResponse | undefined>;
    /**
     * The name of the resource
     */
    readonly name: pulumi.Output<string>;
    /**
     * OAuth2 grant type options
     */
    readonly oAuth2GrantType: pulumi.Output<string | undefined>;
    /**
     * Authorization parameters
     */
    readonly parameters: pulumi.Output<{
        [key: string]: string;
    } | undefined>;
    /**
     * Status of the Authorization
     */
    readonly status: pulumi.Output<string | undefined>;
    /**
     * The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
     */
    readonly type: pulumi.Output<string>;
    /**
     * Create a Authorization resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: AuthorizationArgs, opts?: pulumi.CustomResourceOptions);
}
/**
 * The set of arguments for constructing a Authorization resource.
 */
export interface AuthorizationArgs {
    /**
     * Identifier of the authorization.
     */
    authorizationId?: pulumi.Input<string>;
    /**
     * Identifier of the authorization provider.
     */
    authorizationProviderId: pulumi.Input<string>;
    /**
     * Authorization type options
     */
    authorizationType?: pulumi.Input<string | enums.apimanagement.v20220901preview.AuthorizationType>;
    /**
     * Authorization error details.
     */
    error?: pulumi.Input<inputs.apimanagement.v20220901preview.AuthorizationErrorArgs>;
    /**
     * OAuth2 grant type options
     */
    oAuth2GrantType?: pulumi.Input<string | enums.apimanagement.v20220901preview.OAuth2GrantType>;
    /**
     * Authorization parameters
     */
    parameters?: pulumi.Input<{
        [key: string]: pulumi.Input<string>;
    }>;
    /**
     * The name of the resource group. The name is case insensitive.
     */
    resourceGroupName: pulumi.Input<string>;
    /**
     * The name of the API Management service.
     */
    serviceName: pulumi.Input<string>;
    /**
     * Status of the Authorization
     */
    status?: pulumi.Input<string>;
}
