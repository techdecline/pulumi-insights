import * as pulumi from "@pulumi/pulumi";
/**
 * Returns the developer portal's content item specified by its identifier.
 */
export declare function getContentItem(args: GetContentItemArgs, opts?: pulumi.InvokeOptions): Promise<GetContentItemResult>;
export interface GetContentItemArgs {
    /**
     * Content item identifier.
     */
    contentItemId: string;
    /**
     * Content type identifier.
     */
    contentTypeId: string;
    /**
     * The name of the resource group. The name is case insensitive.
     */
    resourceGroupName: string;
    /**
     * The name of the API Management service.
     */
    serviceName: string;
}
/**
 * Content type contract details.
 */
export interface GetContentItemResult {
    /**
     * Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
     */
    readonly id: string;
    /**
     * The name of the resource
     */
    readonly name: string;
    /**
     * Properties of the content item.
     */
    readonly properties: any;
    /**
     * The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
     */
    readonly type: string;
}
/**
 * Returns the developer portal's content item specified by its identifier.
 */
export declare function getContentItemOutput(args: GetContentItemOutputArgs, opts?: pulumi.InvokeOutputOptions): pulumi.Output<GetContentItemResult>;
export interface GetContentItemOutputArgs {
    /**
     * Content item identifier.
     */
    contentItemId: pulumi.Input<string>;
    /**
     * Content type identifier.
     */
    contentTypeId: pulumi.Input<string>;
    /**
     * The name of the resource group. The name is case insensitive.
     */
    resourceGroupName: pulumi.Input<string>;
    /**
     * The name of the API Management service.
     */
    serviceName: pulumi.Input<string>;
}
