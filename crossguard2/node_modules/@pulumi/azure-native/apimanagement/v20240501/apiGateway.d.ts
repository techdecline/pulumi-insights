import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../../types/input";
import * as outputs from "../../types/output";
import * as enums from "../../types/enums";
/**
 * A single API Management gateway resource in List or Get response.
 */
export declare class ApiGateway extends pulumi.CustomResource {
    /**
     * Get an existing ApiGateway resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    static get(name: string, id: pulumi.Input<pulumi.ID>, opts?: pulumi.CustomResourceOptions): ApiGateway;
    /**
     * Returns true if the given object is an instance of ApiGateway.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    static isInstance(obj: any): obj is ApiGateway;
    /**
     * Information regarding how the gateway should integrate with backend systems.
     */
    readonly backend: pulumi.Output<outputs.apimanagement.v20240501.BackendConfigurationResponse | undefined>;
    /**
     * Information regarding the Configuration API of the API Management gateway. This is only applicable for API gateway with Standard SKU.
     */
    readonly configurationApi: pulumi.Output<outputs.apimanagement.v20240501.GatewayConfigurationApiResponse | undefined>;
    /**
     * Creation UTC date of the API Management gateway.The date conforms to the following format: `yyyy-MM-ddTHH:mm:ssZ` as specified by the ISO 8601 standard.
     */
    readonly createdAtUtc: pulumi.Output<string>;
    /**
     * ETag of the resource.
     */
    readonly etag: pulumi.Output<string>;
    /**
     * Information regarding how the gateway should be exposed.
     */
    readonly frontend: pulumi.Output<outputs.apimanagement.v20240501.FrontendConfigurationResponse | undefined>;
    /**
     * Resource location.
     */
    readonly location: pulumi.Output<string>;
    /**
     * Resource name.
     */
    readonly name: pulumi.Output<string>;
    /**
     * The current provisioning state of the API Management gateway which can be one of the following: Created/Activating/Succeeded/Updating/Failed/Stopped/Terminating/TerminationFailed/Deleted.
     */
    readonly provisioningState: pulumi.Output<string>;
    /**
     * SKU properties of the API Management gateway.
     */
    readonly sku: pulumi.Output<outputs.apimanagement.v20240501.ApiManagementGatewaySkuPropertiesResponse>;
    /**
     * Metadata pertaining to creation and last modification of the resource.
     */
    readonly systemData: pulumi.Output<outputs.apimanagement.v20240501.SystemDataResponse>;
    /**
     * Resource tags.
     */
    readonly tags: pulumi.Output<{
        [key: string]: string;
    } | undefined>;
    /**
     * The provisioning state of the API Management gateway, which is targeted by the long running operation started on the gateway.
     */
    readonly targetProvisioningState: pulumi.Output<string>;
    /**
     * Resource type for API Management resource is set to Microsoft.ApiManagement.
     */
    readonly type: pulumi.Output<string>;
    /**
     * The type of VPN in which API Management gateway needs to be configured in.
     */
    readonly virtualNetworkType: pulumi.Output<string | undefined>;
    /**
     * Create a ApiGateway resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: ApiGatewayArgs, opts?: pulumi.CustomResourceOptions);
}
/**
 * The set of arguments for constructing a ApiGateway resource.
 */
export interface ApiGatewayArgs {
    /**
     * Information regarding how the gateway should integrate with backend systems.
     */
    backend?: pulumi.Input<inputs.apimanagement.v20240501.BackendConfigurationArgs>;
    /**
     * The name of the API Management gateway.
     */
    gatewayName?: pulumi.Input<string>;
    /**
     * Resource location.
     */
    location?: pulumi.Input<string>;
    /**
     * The name of the resource group. The name is case insensitive.
     */
    resourceGroupName: pulumi.Input<string>;
    /**
     * SKU properties of the API Management gateway.
     */
    sku: pulumi.Input<inputs.apimanagement.v20240501.ApiManagementGatewaySkuPropertiesArgs>;
    /**
     * Resource tags.
     */
    tags?: pulumi.Input<{
        [key: string]: pulumi.Input<string>;
    }>;
    /**
     * The type of VPN in which API Management gateway needs to be configured in.
     */
    virtualNetworkType?: pulumi.Input<string | enums.apimanagement.v20240501.VirtualNetworkType>;
}
