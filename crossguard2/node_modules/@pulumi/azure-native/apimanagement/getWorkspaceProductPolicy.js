"use strict";
// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***
Object.defineProperty(exports, "__esModule", { value: true });
exports.getWorkspaceProductPolicyOutput = exports.getWorkspaceProductPolicy = void 0;
const pulumi = require("@pulumi/pulumi");
const utilities = require("../utilities");
/**
 * Get the policy configuration at the Product level.
 * Azure REST API version: 2022-09-01-preview.
 *
 * Other available API versions: 2023-03-01-preview, 2023-05-01-preview, 2023-09-01-preview, 2024-05-01, 2024-06-01-preview.
 */
function getWorkspaceProductPolicy(args, opts) {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("azure-native:apimanagement:getWorkspaceProductPolicy", {
        "format": args.format,
        "policyId": args.policyId,
        "productId": args.productId,
        "resourceGroupName": args.resourceGroupName,
        "serviceName": args.serviceName,
        "workspaceId": args.workspaceId,
    }, opts);
}
exports.getWorkspaceProductPolicy = getWorkspaceProductPolicy;
/**
 * Get the policy configuration at the Product level.
 * Azure REST API version: 2022-09-01-preview.
 *
 * Other available API versions: 2023-03-01-preview, 2023-05-01-preview, 2023-09-01-preview, 2024-05-01, 2024-06-01-preview.
 */
function getWorkspaceProductPolicyOutput(args, opts) {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invokeOutput("azure-native:apimanagement:getWorkspaceProductPolicy", {
        "format": args.format,
        "policyId": args.policyId,
        "productId": args.productId,
        "resourceGroupName": args.resourceGroupName,
        "serviceName": args.serviceName,
        "workspaceId": args.workspaceId,
    }, opts);
}
exports.getWorkspaceProductPolicyOutput = getWorkspaceProductPolicyOutput;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZ2V0V29ya3NwYWNlUHJvZHVjdFBvbGljeS5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uL2FwaW1hbmFnZW1lbnQvZ2V0V29ya3NwYWNlUHJvZHVjdFBvbGljeS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiO0FBQUEsc0VBQXNFO0FBQ3RFLGlGQUFpRjs7O0FBRWpGLHlDQUF5QztBQUN6QywwQ0FBMEM7QUFFMUM7Ozs7O0dBS0c7QUFDSCxTQUFnQix5QkFBeUIsQ0FBQyxJQUFtQyxFQUFFLElBQTJCO0lBQ3RHLElBQUksR0FBRyxNQUFNLENBQUMsWUFBWSxDQUFDLFNBQVMsQ0FBQyxvQkFBb0IsRUFBRSxFQUFFLElBQUksSUFBSSxFQUFFLENBQUMsQ0FBQztJQUN6RSxPQUFPLE1BQU0sQ0FBQyxPQUFPLENBQUMsTUFBTSxDQUFDLHNEQUFzRCxFQUFFO1FBQ2pGLFFBQVEsRUFBRSxJQUFJLENBQUMsTUFBTTtRQUNyQixVQUFVLEVBQUUsSUFBSSxDQUFDLFFBQVE7UUFDekIsV0FBVyxFQUFFLElBQUksQ0FBQyxTQUFTO1FBQzNCLG1CQUFtQixFQUFFLElBQUksQ0FBQyxpQkFBaUI7UUFDM0MsYUFBYSxFQUFFLElBQUksQ0FBQyxXQUFXO1FBQy9CLGFBQWEsRUFBRSxJQUFJLENBQUMsV0FBVztLQUNsQyxFQUFFLElBQUksQ0FBQyxDQUFDO0FBQ2IsQ0FBQztBQVZELDhEQVVDO0FBc0REOzs7OztHQUtHO0FBQ0gsU0FBZ0IsK0JBQStCLENBQUMsSUFBeUMsRUFBRSxJQUFpQztJQUN4SCxJQUFJLEdBQUcsTUFBTSxDQUFDLFlBQVksQ0FBQyxTQUFTLENBQUMsb0JBQW9CLEVBQUUsRUFBRSxJQUFJLElBQUksRUFBRSxDQUFDLENBQUM7SUFDekUsT0FBTyxNQUFNLENBQUMsT0FBTyxDQUFDLFlBQVksQ0FBQyxzREFBc0QsRUFBRTtRQUN2RixRQUFRLEVBQUUsSUFBSSxDQUFDLE1BQU07UUFDckIsVUFBVSxFQUFFLElBQUksQ0FBQyxRQUFRO1FBQ3pCLFdBQVcsRUFBRSxJQUFJLENBQUMsU0FBUztRQUMzQixtQkFBbUIsRUFBRSxJQUFJLENBQUMsaUJBQWlCO1FBQzNDLGFBQWEsRUFBRSxJQUFJLENBQUMsV0FBVztRQUMvQixhQUFhLEVBQUUsSUFBSSxDQUFDLFdBQVc7S0FDbEMsRUFBRSxJQUFJLENBQUMsQ0FBQztBQUNiLENBQUM7QUFWRCwwRUFVQyJ9