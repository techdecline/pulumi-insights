import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as enums from "../types/enums";
/**
 * An event source that receives its data from an Azure IoTHub.
 * Azure REST API version: 2020-05-15. Prior API version in Azure Native 1.x: 2020-05-15.
 */
export declare class IoTHubEventSource extends pulumi.CustomResource {
    /**
     * Get an existing IoTHubEventSource resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    static get(name: string, id: pulumi.Input<pulumi.ID>, opts?: pulumi.CustomResourceOptions): IoTHubEventSource;
    /**
     * Returns true if the given object is an instance of IoTHubEventSource.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    static isInstance(obj: any): obj is IoTHubEventSource;
    /**
     * The name of the iot hub's consumer group that holds the partitions from which events will be read.
     */
    readonly consumerGroupName: pulumi.Output<string>;
    /**
     * The time the resource was created.
     */
    readonly creationTime: pulumi.Output<string>;
    /**
     * The resource id of the event source in Azure Resource Manager.
     */
    readonly eventSourceResourceId: pulumi.Output<string>;
    /**
     * The name of the iot hub.
     */
    readonly iotHubName: pulumi.Output<string>;
    /**
     * The name of the Shared Access Policy key that grants the Time Series Insights service access to the iot hub. This shared access policy key must grant 'service connect' permissions to the iot hub.
     */
    readonly keyName: pulumi.Output<string>;
    /**
     * The kind of the event source.
     * Expected value is 'Microsoft.IoTHub'.
     */
    readonly kind: pulumi.Output<"Microsoft.IoTHub">;
    /**
     * An object that represents the local timestamp property. It contains the format of local timestamp that needs to be used and the corresponding timezone offset information. If a value isn't specified for localTimestamp, or if null, then the local timestamp will not be ingressed with the events.
     */
    readonly localTimestamp: pulumi.Output<outputs.timeseriesinsights.LocalTimestampResponse | undefined>;
    /**
     * Resource location
     */
    readonly location: pulumi.Output<string>;
    /**
     * Resource name
     */
    readonly name: pulumi.Output<string>;
    /**
     * Provisioning state of the resource.
     */
    readonly provisioningState: pulumi.Output<string>;
    /**
     * Resource tags
     */
    readonly tags: pulumi.Output<{
        [key: string]: string;
    } | undefined>;
    /**
     * ISO8601 UTC datetime with seconds precision (milliseconds are optional), specifying the date and time that will be the starting point for Events to be consumed.
     */
    readonly time: pulumi.Output<string | undefined>;
    /**
     * The event property that will be used as the event source's timestamp. If a value isn't specified for timestampPropertyName, or if null or empty-string is specified, the event creation time will be used.
     */
    readonly timestampPropertyName: pulumi.Output<string | undefined>;
    /**
     * Resource type
     */
    readonly type: pulumi.Output<string>;
    /**
     * Create a IoTHubEventSource resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: IoTHubEventSourceArgs, opts?: pulumi.CustomResourceOptions);
}
/**
 * The set of arguments for constructing a IoTHubEventSource resource.
 */
export interface IoTHubEventSourceArgs {
    /**
     * The name of the iot hub's consumer group that holds the partitions from which events will be read.
     */
    consumerGroupName: pulumi.Input<string>;
    /**
     * The name of the Time Series Insights environment associated with the specified resource group.
     */
    environmentName: pulumi.Input<string>;
    /**
     * Name of the event source.
     */
    eventSourceName?: pulumi.Input<string>;
    /**
     * The resource id of the event source in Azure Resource Manager.
     */
    eventSourceResourceId: pulumi.Input<string>;
    /**
     * The name of the iot hub.
     */
    iotHubName: pulumi.Input<string>;
    /**
     * The name of the Shared Access Policy key that grants the Time Series Insights service access to the iot hub. This shared access policy key must grant 'service connect' permissions to the iot hub.
     */
    keyName: pulumi.Input<string>;
    /**
     * The kind of the event source.
     * Expected value is 'Microsoft.IoTHub'.
     */
    kind: pulumi.Input<"Microsoft.IoTHub">;
    /**
     * An object that represents the local timestamp property. It contains the format of local timestamp that needs to be used and the corresponding timezone offset information. If a value isn't specified for localTimestamp, or if null, then the local timestamp will not be ingressed with the events.
     */
    localTimestamp?: pulumi.Input<inputs.timeseriesinsights.LocalTimestampArgs>;
    /**
     * The location of the resource.
     */
    location?: pulumi.Input<string>;
    /**
     * Name of an Azure Resource group.
     */
    resourceGroupName: pulumi.Input<string>;
    /**
     * The value of the Shared Access Policy key that grants the Time Series Insights service read access to the iot hub. This property is not shown in event source responses.
     */
    sharedAccessKey: pulumi.Input<string>;
    /**
     * Key-value pairs of additional properties for the resource.
     */
    tags?: pulumi.Input<{
        [key: string]: pulumi.Input<string>;
    }>;
    /**
     * ISO8601 UTC datetime with seconds precision (milliseconds are optional), specifying the date and time that will be the starting point for Events to be consumed.
     */
    time?: pulumi.Input<string>;
    /**
     * The event property that will be used as the event source's timestamp. If a value isn't specified for timestampPropertyName, or if null or empty-string is specified, the event creation time will be used.
     */
    timestampPropertyName?: pulumi.Input<string>;
    /**
     * The type of the ingressStartAt, It can be "EarliestAvailable", "EventSourceCreationTime", "CustomEnqueuedTime".
     */
    type?: pulumi.Input<string | enums.timeseriesinsights.IngressStartAtType>;
}
