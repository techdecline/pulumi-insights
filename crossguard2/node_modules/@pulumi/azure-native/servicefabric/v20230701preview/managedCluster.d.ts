import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../../types/input";
import * as outputs from "../../types/output";
import * as enums from "../../types/enums";
/**
 * The managed cluster resource
 */
export declare class ManagedCluster extends pulumi.CustomResource {
    /**
     * Get an existing ManagedCluster resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    static get(name: string, id: pulumi.Input<pulumi.ID>, opts?: pulumi.CustomResourceOptions): ManagedCluster;
    /**
     * Returns true if the given object is an instance of ManagedCluster.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    static isInstance(obj: any): obj is ManagedCluster;
    /**
     * List of add-on features to enable on the cluster.
     */
    readonly addonFeatures: pulumi.Output<string[] | undefined>;
    /**
     * VM admin user password.
     */
    readonly adminPassword: pulumi.Output<string | undefined>;
    /**
     * VM admin user name.
     */
    readonly adminUserName: pulumi.Output<string>;
    /**
     * Setting this to true enables RDP access to the VM. The default NSG rule opens RDP port to Internet which can be overridden with custom Network Security Rules. The default value for this setting is false.
     */
    readonly allowRdpAccess: pulumi.Output<boolean | undefined>;
    /**
     * The policy used to clean up unused versions.
     */
    readonly applicationTypeVersionsCleanupPolicy: pulumi.Output<outputs.servicefabric.v20230701preview.ApplicationTypeVersionsCleanupPolicyResponse | undefined>;
    /**
     * Auxiliary subnets for the cluster.
     */
    readonly auxiliarySubnets: pulumi.Output<outputs.servicefabric.v20230701preview.SubnetResponse[] | undefined>;
    /**
     * The AAD authentication settings of the cluster.
     */
    readonly azureActiveDirectory: pulumi.Output<outputs.servicefabric.v20230701preview.AzureActiveDirectoryResponse | undefined>;
    /**
     * The port used for client connections to the cluster.
     */
    readonly clientConnectionPort: pulumi.Output<number | undefined>;
    /**
     * Client certificates that are allowed to manage the cluster.
     */
    readonly clients: pulumi.Output<outputs.servicefabric.v20230701preview.ClientCertificateResponse[] | undefined>;
    /**
     * List of thumbprints of the cluster certificates.
     */
    readonly clusterCertificateThumbprints: pulumi.Output<string[]>;
    /**
     * The Service Fabric runtime version of the cluster. This property is required when **clusterUpgradeMode** is set to 'Manual'. To get list of available Service Fabric versions for new clusters use [ClusterVersion API](./ClusterVersion.md). To get the list of available version for existing clusters use **availableClusterVersions**.
     */
    readonly clusterCodeVersion: pulumi.Output<string | undefined>;
    /**
     * A service generated unique identifier for the cluster resource.
     */
    readonly clusterId: pulumi.Output<string>;
    /**
     * The current state of the cluster.
     */
    readonly clusterState: pulumi.Output<string>;
    /**
     * Indicates when new cluster runtime version upgrades will be applied after they are released. By default is Wave0. Only applies when **clusterUpgradeMode** is set to 'Automatic'.
     */
    readonly clusterUpgradeCadence: pulumi.Output<string | undefined>;
    /**
     * The upgrade mode of the cluster when new Service Fabric runtime version is available.
     */
    readonly clusterUpgradeMode: pulumi.Output<string | undefined>;
    /**
     * Specify the resource id of a DDoS network protection plan that will be associated with the virtual network of the cluster.
     */
    readonly ddosProtectionPlanId: pulumi.Output<string | undefined>;
    /**
     * The cluster dns name.
     */
    readonly dnsName: pulumi.Output<string>;
    /**
     * Setting this to true enables automatic OS upgrade for the node types that are created using any platform OS image with version 'latest'. The default value for this setting is false.
     */
    readonly enableAutoOSUpgrade: pulumi.Output<boolean | undefined>;
    /**
     * Setting this to true creates IPv6 address space for the default VNet used by the cluster. This setting cannot be changed once the cluster is created. The default value for this setting is false.
     */
    readonly enableIpv6: pulumi.Output<boolean | undefined>;
    /**
     * Setting this to true will link the IPv4 address as the ServicePublicIP of the IPv6 address. It can only be set to True if IPv6 is enabled on the cluster.
     */
    readonly enableServicePublicIP: pulumi.Output<boolean | undefined>;
    /**
     * Azure resource etag.
     */
    readonly etag: pulumi.Output<string>;
    /**
     * The list of custom fabric settings to configure the cluster.
     */
    readonly fabricSettings: pulumi.Output<outputs.servicefabric.v20230701preview.SettingsSectionDescriptionResponse[] | undefined>;
    /**
     * The fully qualified domain name associated with the public load balancer of the cluster.
     */
    readonly fqdn: pulumi.Output<string>;
    /**
     * The port used for HTTP connections to the cluster.
     */
    readonly httpGatewayConnectionPort: pulumi.Output<number | undefined>;
    /**
     * The list of IP tags associated with the default public IP address of the cluster.
     */
    readonly ipTags: pulumi.Output<outputs.servicefabric.v20230701preview.IPTagResponse[] | undefined>;
    /**
     * The IPv4 address associated with the public load balancer of the cluster.
     */
    readonly ipv4Address: pulumi.Output<string>;
    /**
     * IPv6 address for the cluster if IPv6 is enabled.
     */
    readonly ipv6Address: pulumi.Output<string>;
    /**
     * Load balancing rules that are applied to the public load balancer of the cluster.
     */
    readonly loadBalancingRules: pulumi.Output<outputs.servicefabric.v20230701preview.LoadBalancingRuleResponse[] | undefined>;
    /**
     * Azure resource location.
     */
    readonly location: pulumi.Output<string>;
    /**
     * Azure resource name.
     */
    readonly name: pulumi.Output<string>;
    /**
     * Custom Network Security Rules that are applied to the Virtual Network of the cluster.
     */
    readonly networkSecurityRules: pulumi.Output<outputs.servicefabric.v20230701preview.NetworkSecurityRuleResponse[] | undefined>;
    /**
     * The provisioning state of the managed cluster resource.
     */
    readonly provisioningState: pulumi.Output<string>;
    /**
     * Specify the resource id of a public IP prefix that the load balancer will allocate a public IP address from. Only supports IPv4.
     */
    readonly publicIPPrefixId: pulumi.Output<string | undefined>;
    /**
     * Service endpoints for subnets in the cluster.
     */
    readonly serviceEndpoints: pulumi.Output<outputs.servicefabric.v20230701preview.ServiceEndpointResponse[] | undefined>;
    /**
     * The sku of the managed cluster
     */
    readonly sku: pulumi.Output<outputs.servicefabric.v20230701preview.SkuResponse>;
    /**
     * If specified, the node types for the cluster are created in this subnet instead of the default VNet. The **networkSecurityRules** specified for the cluster are also applied to this subnet. This setting cannot be changed once the cluster is created.
     */
    readonly subnetId: pulumi.Output<string | undefined>;
    /**
     * Metadata pertaining to creation and last modification of the resource.
     */
    readonly systemData: pulumi.Output<outputs.servicefabric.v20230701preview.SystemDataResponse>;
    /**
     * Azure resource tags.
     */
    readonly tags: pulumi.Output<{
        [key: string]: string;
    } | undefined>;
    /**
     * Azure resource type.
     */
    readonly type: pulumi.Output<string>;
    /**
     * For new clusters, this parameter indicates that it uses Bring your own VNet, but the subnet is specified at node type level; and for such clusters, the subnetId property is required for node types.
     */
    readonly useCustomVnet: pulumi.Output<boolean | undefined>;
    /**
     * Indicates if the cluster has zone resiliency.
     */
    readonly zonalResiliency: pulumi.Output<boolean | undefined>;
    /**
     * Indicates the update mode for Cross Az clusters.
     */
    readonly zonalUpdateMode: pulumi.Output<string | undefined>;
    /**
     * Create a ManagedCluster resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: ManagedClusterArgs, opts?: pulumi.CustomResourceOptions);
}
/**
 * The set of arguments for constructing a ManagedCluster resource.
 */
export interface ManagedClusterArgs {
    /**
     * List of add-on features to enable on the cluster.
     */
    addonFeatures?: pulumi.Input<pulumi.Input<string | enums.servicefabric.v20230701preview.ManagedClusterAddOnFeature>[]>;
    /**
     * VM admin user password.
     */
    adminPassword?: pulumi.Input<string>;
    /**
     * VM admin user name.
     */
    adminUserName: pulumi.Input<string>;
    /**
     * Setting this to true enables RDP access to the VM. The default NSG rule opens RDP port to Internet which can be overridden with custom Network Security Rules. The default value for this setting is false.
     */
    allowRdpAccess?: pulumi.Input<boolean>;
    /**
     * The policy used to clean up unused versions.
     */
    applicationTypeVersionsCleanupPolicy?: pulumi.Input<inputs.servicefabric.v20230701preview.ApplicationTypeVersionsCleanupPolicyArgs>;
    /**
     * Auxiliary subnets for the cluster.
     */
    auxiliarySubnets?: pulumi.Input<pulumi.Input<inputs.servicefabric.v20230701preview.SubnetArgs>[]>;
    /**
     * The AAD authentication settings of the cluster.
     */
    azureActiveDirectory?: pulumi.Input<inputs.servicefabric.v20230701preview.AzureActiveDirectoryArgs>;
    /**
     * The port used for client connections to the cluster.
     */
    clientConnectionPort?: pulumi.Input<number>;
    /**
     * Client certificates that are allowed to manage the cluster.
     */
    clients?: pulumi.Input<pulumi.Input<inputs.servicefabric.v20230701preview.ClientCertificateArgs>[]>;
    /**
     * The Service Fabric runtime version of the cluster. This property is required when **clusterUpgradeMode** is set to 'Manual'. To get list of available Service Fabric versions for new clusters use [ClusterVersion API](./ClusterVersion.md). To get the list of available version for existing clusters use **availableClusterVersions**.
     */
    clusterCodeVersion?: pulumi.Input<string>;
    /**
     * The name of the cluster resource.
     */
    clusterName?: pulumi.Input<string>;
    /**
     * Indicates when new cluster runtime version upgrades will be applied after they are released. By default is Wave0. Only applies when **clusterUpgradeMode** is set to 'Automatic'.
     */
    clusterUpgradeCadence?: pulumi.Input<string | enums.servicefabric.v20230701preview.ClusterUpgradeCadence>;
    /**
     * The upgrade mode of the cluster when new Service Fabric runtime version is available.
     */
    clusterUpgradeMode?: pulumi.Input<string | enums.servicefabric.v20230701preview.ClusterUpgradeMode>;
    /**
     * Specify the resource id of a DDoS network protection plan that will be associated with the virtual network of the cluster.
     */
    ddosProtectionPlanId?: pulumi.Input<string>;
    /**
     * The cluster dns name.
     */
    dnsName: pulumi.Input<string>;
    /**
     * Setting this to true enables automatic OS upgrade for the node types that are created using any platform OS image with version 'latest'. The default value for this setting is false.
     */
    enableAutoOSUpgrade?: pulumi.Input<boolean>;
    /**
     * Setting this to true creates IPv6 address space for the default VNet used by the cluster. This setting cannot be changed once the cluster is created. The default value for this setting is false.
     */
    enableIpv6?: pulumi.Input<boolean>;
    /**
     * Setting this to true will link the IPv4 address as the ServicePublicIP of the IPv6 address. It can only be set to True if IPv6 is enabled on the cluster.
     */
    enableServicePublicIP?: pulumi.Input<boolean>;
    /**
     * The list of custom fabric settings to configure the cluster.
     */
    fabricSettings?: pulumi.Input<pulumi.Input<inputs.servicefabric.v20230701preview.SettingsSectionDescriptionArgs>[]>;
    /**
     * The port used for HTTP connections to the cluster.
     */
    httpGatewayConnectionPort?: pulumi.Input<number>;
    /**
     * The list of IP tags associated with the default public IP address of the cluster.
     */
    ipTags?: pulumi.Input<pulumi.Input<inputs.servicefabric.v20230701preview.IPTagArgs>[]>;
    /**
     * Load balancing rules that are applied to the public load balancer of the cluster.
     */
    loadBalancingRules?: pulumi.Input<pulumi.Input<inputs.servicefabric.v20230701preview.LoadBalancingRuleArgs>[]>;
    /**
     * Azure resource location.
     */
    location?: pulumi.Input<string>;
    /**
     * Custom Network Security Rules that are applied to the Virtual Network of the cluster.
     */
    networkSecurityRules?: pulumi.Input<pulumi.Input<inputs.servicefabric.v20230701preview.NetworkSecurityRuleArgs>[]>;
    /**
     * Specify the resource id of a public IP prefix that the load balancer will allocate a public IP address from. Only supports IPv4.
     */
    publicIPPrefixId?: pulumi.Input<string>;
    /**
     * The name of the resource group.
     */
    resourceGroupName: pulumi.Input<string>;
    /**
     * Service endpoints for subnets in the cluster.
     */
    serviceEndpoints?: pulumi.Input<pulumi.Input<inputs.servicefabric.v20230701preview.ServiceEndpointArgs>[]>;
    /**
     * The sku of the managed cluster
     */
    sku: pulumi.Input<inputs.servicefabric.v20230701preview.SkuArgs>;
    /**
     * If specified, the node types for the cluster are created in this subnet instead of the default VNet. The **networkSecurityRules** specified for the cluster are also applied to this subnet. This setting cannot be changed once the cluster is created.
     */
    subnetId?: pulumi.Input<string>;
    /**
     * Azure resource tags.
     */
    tags?: pulumi.Input<{
        [key: string]: pulumi.Input<string>;
    }>;
    /**
     * For new clusters, this parameter indicates that it uses Bring your own VNet, but the subnet is specified at node type level; and for such clusters, the subnetId property is required for node types.
     */
    useCustomVnet?: pulumi.Input<boolean>;
    /**
     * Indicates if the cluster has zone resiliency.
     */
    zonalResiliency?: pulumi.Input<boolean>;
    /**
     * Indicates the update mode for Cross Az clusters.
     */
    zonalUpdateMode?: pulumi.Input<string | enums.servicefabric.v20230701preview.ZonalUpdateMode>;
}
