"use strict";
// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***
Object.defineProperty(exports, "__esModule", { value: true });
exports.listListUpgradableVersionPostOutput = exports.listListUpgradableVersionPost = void 0;
const pulumi = require("@pulumi/pulumi");
const utilities = require("../../utilities");
/**
 * If a target is not provided, it will get the minimum and maximum versions available from the current cluster version. If a target is given, it will provide the required path to get from the current cluster version to the target version.
 */
function listListUpgradableVersionPost(args, opts) {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("azure-native:servicefabric/v20201201preview:listListUpgradableVersionPost", {
        "clusterName": args.clusterName,
        "resourceGroupName": args.resourceGroupName,
        "targetVersion": args.targetVersion,
    }, opts);
}
exports.listListUpgradableVersionPost = listListUpgradableVersionPost;
/**
 * If a target is not provided, it will get the minimum and maximum versions available from the current cluster version. If a target is given, it will provide the required path to get from the current cluster version to the target version.
 */
function listListUpgradableVersionPostOutput(args, opts) {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invokeOutput("azure-native:servicefabric/v20201201preview:listListUpgradableVersionPost", {
        "clusterName": args.clusterName,
        "resourceGroupName": args.resourceGroupName,
        "targetVersion": args.targetVersion,
    }, opts);
}
exports.listListUpgradableVersionPostOutput = listListUpgradableVersionPostOutput;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibGlzdExpc3RVcGdyYWRhYmxlVmVyc2lvblBvc3QuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi9zZXJ2aWNlZmFicmljL3YyMDIwMTIwMXByZXZpZXcvbGlzdExpc3RVcGdyYWRhYmxlVmVyc2lvblBvc3QudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IjtBQUFBLHNFQUFzRTtBQUN0RSxpRkFBaUY7OztBQUVqRix5Q0FBeUM7QUFDekMsNkNBQTZDO0FBRTdDOztHQUVHO0FBQ0gsU0FBZ0IsNkJBQTZCLENBQUMsSUFBdUMsRUFBRSxJQUEyQjtJQUM5RyxJQUFJLEdBQUcsTUFBTSxDQUFDLFlBQVksQ0FBQyxTQUFTLENBQUMsb0JBQW9CLEVBQUUsRUFBRSxJQUFJLElBQUksRUFBRSxDQUFDLENBQUM7SUFDekUsT0FBTyxNQUFNLENBQUMsT0FBTyxDQUFDLE1BQU0sQ0FBQywyRUFBMkUsRUFBRTtRQUN0RyxhQUFhLEVBQUUsSUFBSSxDQUFDLFdBQVc7UUFDL0IsbUJBQW1CLEVBQUUsSUFBSSxDQUFDLGlCQUFpQjtRQUMzQyxlQUFlLEVBQUUsSUFBSSxDQUFDLGFBQWE7S0FDdEMsRUFBRSxJQUFJLENBQUMsQ0FBQztBQUNiLENBQUM7QUFQRCxzRUFPQztBQXVCRDs7R0FFRztBQUNILFNBQWdCLG1DQUFtQyxDQUFDLElBQTZDLEVBQUUsSUFBaUM7SUFDaEksSUFBSSxHQUFHLE1BQU0sQ0FBQyxZQUFZLENBQUMsU0FBUyxDQUFDLG9CQUFvQixFQUFFLEVBQUUsSUFBSSxJQUFJLEVBQUUsQ0FBQyxDQUFDO0lBQ3pFLE9BQU8sTUFBTSxDQUFDLE9BQU8sQ0FBQyxZQUFZLENBQUMsMkVBQTJFLEVBQUU7UUFDNUcsYUFBYSxFQUFFLElBQUksQ0FBQyxXQUFXO1FBQy9CLG1CQUFtQixFQUFFLElBQUksQ0FBQyxpQkFBaUI7UUFDM0MsZUFBZSxFQUFFLElBQUksQ0FBQyxhQUFhO0tBQ3RDLEVBQUUsSUFBSSxDQUFDLENBQUM7QUFDYixDQUFDO0FBUEQsa0ZBT0MifQ==