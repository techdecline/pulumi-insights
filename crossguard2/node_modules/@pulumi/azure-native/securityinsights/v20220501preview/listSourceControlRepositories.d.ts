import * as pulumi from "@pulumi/pulumi";
import * as outputs from "../../types/output";
/**
 * Gets a list of repositories metadata.
 */
export declare function listSourceControlRepositories(args: ListSourceControlRepositoriesArgs, opts?: pulumi.InvokeOptions): Promise<ListSourceControlRepositoriesResult>;
export interface ListSourceControlRepositoriesArgs {
    /**
     * The name of the resource group. The name is case insensitive.
     */
    resourceGroupName: string;
    /**
     * The name of the workspace.
     */
    workspaceName: string;
}
/**
 * List all the source controls.
 */
export interface ListSourceControlRepositoriesResult {
    /**
     * URL to fetch the next set of repositories.
     */
    readonly nextLink: string;
    /**
     * Array of repositories.
     */
    readonly value: outputs.securityinsights.v20220501preview.RepoResponse[];
}
/**
 * Gets a list of repositories metadata.
 */
export declare function listSourceControlRepositoriesOutput(args: ListSourceControlRepositoriesOutputArgs, opts?: pulumi.InvokeOutputOptions): pulumi.Output<ListSourceControlRepositoriesResult>;
export interface ListSourceControlRepositoriesOutputArgs {
    /**
     * The name of the resource group. The name is case insensitive.
     */
    resourceGroupName: pulumi.Input<string>;
    /**
     * The name of the workspace.
     */
    workspaceName: pulumi.Input<string>;
}
