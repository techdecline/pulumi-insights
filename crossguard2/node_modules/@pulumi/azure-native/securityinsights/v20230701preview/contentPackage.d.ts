import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../../types/input";
import * as outputs from "../../types/output";
import * as enums from "../../types/enums";
/**
 * Represents a Package in Azure Security Insights.
 */
export declare class ContentPackage extends pulumi.CustomResource {
    /**
     * Get an existing ContentPackage resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    static get(name: string, id: pulumi.Input<pulumi.ID>, opts?: pulumi.CustomResourceOptions): ContentPackage;
    /**
     * Returns true if the given object is an instance of ContentPackage.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    static isInstance(obj: any): obj is ContentPackage;
    /**
     * The author of the package
     */
    readonly author: pulumi.Output<outputs.securityinsights.v20230701preview.MetadataAuthorResponse | undefined>;
    /**
     * The categories of the package
     */
    readonly categories: pulumi.Output<outputs.securityinsights.v20230701preview.MetadataCategoriesResponse | undefined>;
    /**
     * The content id of the package
     */
    readonly contentId: pulumi.Output<string>;
    /**
     * The package kind
     */
    readonly contentKind: pulumi.Output<string>;
    /**
     * Unique ID for the content. It should be generated based on the contentId, contentKind and the contentVersion of the package
     */
    readonly contentProductId: pulumi.Output<string>;
    /**
     * The version of the content schema.
     */
    readonly contentSchemaVersion: pulumi.Output<string | undefined>;
    /**
     * The support tier of the package
     */
    readonly dependencies: pulumi.Output<outputs.securityinsights.v20230701preview.MetadataDependenciesResponse | undefined>;
    /**
     * The description of the package
     */
    readonly description: pulumi.Output<string | undefined>;
    /**
     * The display name of the package
     */
    readonly displayName: pulumi.Output<string>;
    /**
     * Etag of the azure resource
     */
    readonly etag: pulumi.Output<string | undefined>;
    /**
     * first publish date package item
     */
    readonly firstPublishDate: pulumi.Output<string | undefined>;
    /**
     * the icon identifier. this id can later be fetched from the content metadata
     */
    readonly icon: pulumi.Output<string | undefined>;
    /**
     * Flag indicates if this package is among the featured list.
     */
    readonly isFeatured: pulumi.Output<string | undefined>;
    /**
     * Flag indicates if this is a newly published package.
     */
    readonly isNew: pulumi.Output<string | undefined>;
    /**
     * Flag indicates if this package is in preview.
     */
    readonly isPreview: pulumi.Output<string | undefined>;
    /**
     * last publish date for the package item
     */
    readonly lastPublishDate: pulumi.Output<string | undefined>;
    /**
     * The name of the resource
     */
    readonly name: pulumi.Output<string>;
    /**
     * Providers for the package item
     */
    readonly providers: pulumi.Output<string[] | undefined>;
    /**
     * The publisher display name of the package
     */
    readonly publisherDisplayName: pulumi.Output<string | undefined>;
    /**
     * The source of the package
     */
    readonly source: pulumi.Output<outputs.securityinsights.v20230701preview.MetadataSourceResponse | undefined>;
    /**
     * The support tier of the package
     */
    readonly support: pulumi.Output<outputs.securityinsights.v20230701preview.MetadataSupportResponse | undefined>;
    /**
     * Azure Resource Manager metadata containing createdBy and modifiedBy information.
     */
    readonly systemData: pulumi.Output<outputs.securityinsights.v20230701preview.SystemDataResponse>;
    /**
     * the tactics the resource covers
     */
    readonly threatAnalysisTactics: pulumi.Output<string[] | undefined>;
    /**
     * the techniques the resource covers, these have to be aligned with the tactics being used
     */
    readonly threatAnalysisTechniques: pulumi.Output<string[] | undefined>;
    /**
     * The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
     */
    readonly type: pulumi.Output<string>;
    /**
     * the latest version number of the package
     */
    readonly version: pulumi.Output<string>;
    /**
     * Create a ContentPackage resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: ContentPackageArgs, opts?: pulumi.CustomResourceOptions);
}
/**
 * The set of arguments for constructing a ContentPackage resource.
 */
export interface ContentPackageArgs {
    /**
     * The author of the package
     */
    author?: pulumi.Input<inputs.securityinsights.v20230701preview.MetadataAuthorArgs>;
    /**
     * The categories of the package
     */
    categories?: pulumi.Input<inputs.securityinsights.v20230701preview.MetadataCategoriesArgs>;
    /**
     * The content id of the package
     */
    contentId: pulumi.Input<string>;
    /**
     * The package kind
     */
    contentKind: pulumi.Input<string | enums.securityinsights.v20230701preview.PackageKind>;
    /**
     * Unique ID for the content. It should be generated based on the contentId, contentKind and the contentVersion of the package
     */
    contentProductId: pulumi.Input<string>;
    /**
     * The version of the content schema.
     */
    contentSchemaVersion?: pulumi.Input<string>;
    /**
     * The support tier of the package
     */
    dependencies?: pulumi.Input<inputs.securityinsights.v20230701preview.MetadataDependenciesArgs>;
    /**
     * The description of the package
     */
    description?: pulumi.Input<string>;
    /**
     * The display name of the package
     */
    displayName: pulumi.Input<string>;
    /**
     * first publish date package item
     */
    firstPublishDate?: pulumi.Input<string>;
    /**
     * the icon identifier. this id can later be fetched from the content metadata
     */
    icon?: pulumi.Input<string>;
    /**
     * Flag indicates if this package is among the featured list.
     */
    isFeatured?: pulumi.Input<string | enums.securityinsights.v20230701preview.Flag>;
    /**
     * Flag indicates if this is a newly published package.
     */
    isNew?: pulumi.Input<string | enums.securityinsights.v20230701preview.Flag>;
    /**
     * Flag indicates if this package is in preview.
     */
    isPreview?: pulumi.Input<string | enums.securityinsights.v20230701preview.Flag>;
    /**
     * last publish date for the package item
     */
    lastPublishDate?: pulumi.Input<string>;
    /**
     * package Id
     */
    packageId?: pulumi.Input<string>;
    /**
     * Providers for the package item
     */
    providers?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The publisher display name of the package
     */
    publisherDisplayName?: pulumi.Input<string>;
    /**
     * The name of the resource group. The name is case insensitive.
     */
    resourceGroupName: pulumi.Input<string>;
    /**
     * The source of the package
     */
    source?: pulumi.Input<inputs.securityinsights.v20230701preview.MetadataSourceArgs>;
    /**
     * The support tier of the package
     */
    support?: pulumi.Input<inputs.securityinsights.v20230701preview.MetadataSupportArgs>;
    /**
     * the tactics the resource covers
     */
    threatAnalysisTactics?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * the techniques the resource covers, these have to be aligned with the tactics being used
     */
    threatAnalysisTechniques?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * the latest version number of the package
     */
    version: pulumi.Input<string>;
    /**
     * The name of the workspace.
     */
    workspaceName: pulumi.Input<string>;
}
