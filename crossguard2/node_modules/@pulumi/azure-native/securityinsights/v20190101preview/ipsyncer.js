"use strict";
// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***
Object.defineProperty(exports, "__esModule", { value: true });
exports.IPSyncer = void 0;
const pulumi = require("@pulumi/pulumi");
const utilities = require("../../utilities");
/**
 * Settings with single toggle.
 */
class IPSyncer extends pulumi.CustomResource {
    /**
     * Get an existing IPSyncer resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    static get(name, id, opts) {
        return new IPSyncer(name, undefined, Object.assign(Object.assign({}, opts), { id: id }));
    }
    /**
     * Returns true if the given object is an instance of IPSyncer.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    static isInstance(obj) {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === IPSyncer.__pulumiType;
    }
    /**
     * Create a IPSyncer resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name, args, opts) {
        let resourceInputs = {};
        opts = opts || {};
        if (!opts.id) {
            if ((!args || args.kind === undefined) && !opts.urn) {
                throw new Error("Missing required property 'kind'");
            }
            if ((!args || args.operationalInsightsResourceProvider === undefined) && !opts.urn) {
                throw new Error("Missing required property 'operationalInsightsResourceProvider'");
            }
            if ((!args || args.resourceGroupName === undefined) && !opts.urn) {
                throw new Error("Missing required property 'resourceGroupName'");
            }
            if ((!args || args.workspaceName === undefined) && !opts.urn) {
                throw new Error("Missing required property 'workspaceName'");
            }
            resourceInputs["kind"] = "IPSyncer";
            resourceInputs["operationalInsightsResourceProvider"] = args ? args.operationalInsightsResourceProvider : undefined;
            resourceInputs["resourceGroupName"] = args ? args.resourceGroupName : undefined;
            resourceInputs["settingsName"] = args ? args.settingsName : undefined;
            resourceInputs["workspaceName"] = args ? args.workspaceName : undefined;
            resourceInputs["etag"] = undefined /*out*/;
            resourceInputs["isEnabled"] = undefined /*out*/;
            resourceInputs["name"] = undefined /*out*/;
            resourceInputs["type"] = undefined /*out*/;
        }
        else {
            resourceInputs["etag"] = undefined /*out*/;
            resourceInputs["isEnabled"] = undefined /*out*/;
            resourceInputs["kind"] = undefined /*out*/;
            resourceInputs["name"] = undefined /*out*/;
            resourceInputs["type"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        const aliasOpts = { aliases: [{ type: "azure-native:securityinsights/v20210301preview:IPSyncer" }, { type: "azure-native:securityinsights/v20210901preview:IPSyncer" }, { type: "azure-native:securityinsights/v20211001preview:IPSyncer" }, { type: "azure-native:securityinsights/v20220101preview:IPSyncer" }, { type: "azure-native:securityinsights/v20220401preview:IPSyncer" }, { type: "azure-native:securityinsights/v20220501preview:IPSyncer" }, { type: "azure-native:securityinsights/v20220601preview:IPSyncer" }, { type: "azure-native:securityinsights/v20220701preview:IPSyncer" }, { type: "azure-native:securityinsights/v20220801preview:IPSyncer" }, { type: "azure-native:securityinsights/v20220901preview:IPSyncer" }, { type: "azure-native:securityinsights/v20221001preview:IPSyncer" }, { type: "azure-native:securityinsights/v20221101preview:IPSyncer" }, { type: "azure-native:securityinsights/v20221201preview:IPSyncer" }, { type: "azure-native:securityinsights/v20230201preview:IPSyncer" }, { type: "azure-native:securityinsights/v20230301preview:IPSyncer" }, { type: "azure-native:securityinsights/v20230401preview:IPSyncer" }, { type: "azure-native:securityinsights/v20230501preview:IPSyncer" }, { type: "azure-native:securityinsights/v20230601preview:IPSyncer" }, { type: "azure-native:securityinsights/v20230701preview:IPSyncer" }, { type: "azure-native:securityinsights/v20230801preview:IPSyncer" }, { type: "azure-native:securityinsights/v20230901preview:IPSyncer" }, { type: "azure-native:securityinsights/v20231001preview:IPSyncer" }, { type: "azure-native:securityinsights/v20231201preview:IPSyncer" }, { type: "azure-native:securityinsights/v20240101preview:IPSyncer" }, { type: "azure-native:securityinsights/v20240401preview:IPSyncer" }, { type: "azure-native:securityinsights/v20241001preview:IPSyncer" }, { type: "azure-native:securityinsights/v20250101preview:IPSyncer" }, { type: "azure-native:securityinsights:IPSyncer" }] };
        opts = pulumi.mergeOptions(opts, aliasOpts);
        super(IPSyncer.__pulumiType, name, resourceInputs, opts);
    }
}
exports.IPSyncer = IPSyncer;
/** @internal */
IPSyncer.__pulumiType = 'azure-native:securityinsights/v20190101preview:IPSyncer';
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaXBzeW5jZXIuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi9zZWN1cml0eWluc2lnaHRzL3YyMDE5MDEwMXByZXZpZXcvaXBzeW5jZXIudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IjtBQUFBLHNFQUFzRTtBQUN0RSxpRkFBaUY7OztBQUVqRix5Q0FBeUM7QUFDekMsNkNBQTZDO0FBRTdDOztHQUVHO0FBQ0gsTUFBYSxRQUFTLFNBQVEsTUFBTSxDQUFDLGNBQWM7SUFDL0M7Ozs7Ozs7T0FPRztJQUNJLE1BQU0sQ0FBQyxHQUFHLENBQUMsSUFBWSxFQUFFLEVBQTJCLEVBQUUsSUFBbUM7UUFDNUYsT0FBTyxJQUFJLFFBQVEsQ0FBQyxJQUFJLEVBQUUsU0FBZ0Isa0NBQU8sSUFBSSxLQUFFLEVBQUUsRUFBRSxFQUFFLElBQUcsQ0FBQztJQUNyRSxDQUFDO0lBS0Q7OztPQUdHO0lBQ0ksTUFBTSxDQUFDLFVBQVUsQ0FBQyxHQUFRO1FBQzdCLElBQUksR0FBRyxLQUFLLFNBQVMsSUFBSSxHQUFHLEtBQUssSUFBSSxFQUFFO1lBQ25DLE9BQU8sS0FBSyxDQUFDO1NBQ2hCO1FBQ0QsT0FBTyxHQUFHLENBQUMsY0FBYyxDQUFDLEtBQUssUUFBUSxDQUFDLFlBQVksQ0FBQztJQUN6RCxDQUFDO0lBd0JEOzs7Ozs7T0FNRztJQUNILFlBQVksSUFBWSxFQUFFLElBQWtCLEVBQUUsSUFBbUM7UUFDN0UsSUFBSSxjQUFjLEdBQWtCLEVBQUUsQ0FBQztRQUN2QyxJQUFJLEdBQUcsSUFBSSxJQUFJLEVBQUUsQ0FBQztRQUNsQixJQUFJLENBQUMsSUFBSSxDQUFDLEVBQUUsRUFBRTtZQUNWLElBQUksQ0FBQyxDQUFDLElBQUksSUFBSSxJQUFJLENBQUMsSUFBSSxLQUFLLFNBQVMsQ0FBQyxJQUFJLENBQUMsSUFBSSxDQUFDLEdBQUcsRUFBRTtnQkFDakQsTUFBTSxJQUFJLEtBQUssQ0FBQyxrQ0FBa0MsQ0FBQyxDQUFDO2FBQ3ZEO1lBQ0QsSUFBSSxDQUFDLENBQUMsSUFBSSxJQUFJLElBQUksQ0FBQyxtQ0FBbUMsS0FBSyxTQUFTLENBQUMsSUFBSSxDQUFDLElBQUksQ0FBQyxHQUFHLEVBQUU7Z0JBQ2hGLE1BQU0sSUFBSSxLQUFLLENBQUMsaUVBQWlFLENBQUMsQ0FBQzthQUN0RjtZQUNELElBQUksQ0FBQyxDQUFDLElBQUksSUFBSSxJQUFJLENBQUMsaUJBQWlCLEtBQUssU0FBUyxDQUFDLElBQUksQ0FBQyxJQUFJLENBQUMsR0FBRyxFQUFFO2dCQUM5RCxNQUFNLElBQUksS0FBSyxDQUFDLCtDQUErQyxDQUFDLENBQUM7YUFDcEU7WUFDRCxJQUFJLENBQUMsQ0FBQyxJQUFJLElBQUksSUFBSSxDQUFDLGFBQWEsS0FBSyxTQUFTLENBQUMsSUFBSSxDQUFDLElBQUksQ0FBQyxHQUFHLEVBQUU7Z0JBQzFELE1BQU0sSUFBSSxLQUFLLENBQUMsMkNBQTJDLENBQUMsQ0FBQzthQUNoRTtZQUNELGNBQWMsQ0FBQyxNQUFNLENBQUMsR0FBRyxVQUFVLENBQUM7WUFDcEMsY0FBYyxDQUFDLHFDQUFxQyxDQUFDLEdBQUcsSUFBSSxDQUFDLENBQUMsQ0FBQyxJQUFJLENBQUMsbUNBQW1DLENBQUMsQ0FBQyxDQUFDLFNBQVMsQ0FBQztZQUNwSCxjQUFjLENBQUMsbUJBQW1CLENBQUMsR0FBRyxJQUFJLENBQUMsQ0FBQyxDQUFDLElBQUksQ0FBQyxpQkFBaUIsQ0FBQyxDQUFDLENBQUMsU0FBUyxDQUFDO1lBQ2hGLGNBQWMsQ0FBQyxjQUFjLENBQUMsR0FBRyxJQUFJLENBQUMsQ0FBQyxDQUFDLElBQUksQ0FBQyxZQUFZLENBQUMsQ0FBQyxDQUFDLFNBQVMsQ0FBQztZQUN0RSxjQUFjLENBQUMsZUFBZSxDQUFDLEdBQUcsSUFBSSxDQUFDLENBQUMsQ0FBQyxJQUFJLENBQUMsYUFBYSxDQUFDLENBQUMsQ0FBQyxTQUFTLENBQUM7WUFDeEUsY0FBYyxDQUFDLE1BQU0sQ0FBQyxHQUFHLFNBQVMsQ0FBQyxPQUFPLENBQUM7WUFDM0MsY0FBYyxDQUFDLFdBQVcsQ0FBQyxHQUFHLFNBQVMsQ0FBQyxPQUFPLENBQUM7WUFDaEQsY0FBYyxDQUFDLE1BQU0sQ0FBQyxHQUFHLFNBQVMsQ0FBQyxPQUFPLENBQUM7WUFDM0MsY0FBYyxDQUFDLE1BQU0sQ0FBQyxHQUFHLFNBQVMsQ0FBQyxPQUFPLENBQUM7U0FDOUM7YUFBTTtZQUNILGNBQWMsQ0FBQyxNQUFNLENBQUMsR0FBRyxTQUFTLENBQUMsT0FBTyxDQUFDO1lBQzNDLGNBQWMsQ0FBQyxXQUFXLENBQUMsR0FBRyxTQUFTLENBQUMsT0FBTyxDQUFDO1lBQ2hELGNBQWMsQ0FBQyxNQUFNLENBQUMsR0FBRyxTQUFTLENBQUMsT0FBTyxDQUFDO1lBQzNDLGNBQWMsQ0FBQyxNQUFNLENBQUMsR0FBRyxTQUFTLENBQUMsT0FBTyxDQUFDO1lBQzNDLGNBQWMsQ0FBQyxNQUFNLENBQUMsR0FBRyxTQUFTLENBQUMsT0FBTyxDQUFDO1NBQzlDO1FBQ0QsSUFBSSxHQUFHLE1BQU0sQ0FBQyxZQUFZLENBQUMsU0FBUyxDQUFDLG9CQUFvQixFQUFFLEVBQUUsSUFBSSxDQUFDLENBQUM7UUFDbkUsTUFBTSxTQUFTLEdBQUcsRUFBRSxPQUFPLEVBQUUsQ0FBQyxFQUFFLElBQUksRUFBRSx5REFBeUQsRUFBRSxFQUFFLEVBQUUsSUFBSSxFQUFFLHlEQUF5RCxFQUFFLEVBQUUsRUFBRSxJQUFJLEVBQUUseURBQXlELEVBQUUsRUFBRSxFQUFFLElBQUksRUFBRSx5REFBeUQsRUFBRSxFQUFFLEVBQUUsSUFBSSxFQUFFLHlEQUF5RCxFQUFFLEVBQUUsRUFBRSxJQUFJLEVBQUUseURBQXlELEVBQUUsRUFBRSxFQUFFLElBQUksRUFBRSx5REFBeUQsRUFBRSxFQUFFLEVBQUUsSUFBSSxFQUFFLHlEQUF5RCxFQUFFLEVBQUUsRUFBRSxJQUFJLEVBQUUseURBQXlELEVBQUUsRUFBRSxFQUFFLElBQUksRUFBRSx5REFBeUQsRUFBRSxFQUFFLEVBQUUsSUFBSSxFQUFFLHlEQUF5RCxFQUFFLEVBQUUsRUFBRSxJQUFJLEVBQUUseURBQXlELEVBQUUsRUFBRSxFQUFFLElBQUksRUFBRSx5REFBeUQsRUFBRSxFQUFFLEVBQUUsSUFBSSxFQUFFLHlEQUF5RCxFQUFFLEVBQUUsRUFBRSxJQUFJLEVBQUUseURBQXlELEVBQUUsRUFBRSxFQUFFLElBQUksRUFBRSx5REFBeUQsRUFBRSxFQUFFLEVBQUUsSUFBSSxFQUFFLHlEQUF5RCxFQUFFLEVBQUUsRUFBRSxJQUFJLEVBQUUseURBQXlELEVBQUUsRUFBRSxFQUFFLElBQUksRUFBRSx5REFBeUQsRUFBRSxFQUFFLEVBQUUsSUFBSSxFQUFFLHlEQUF5RCxFQUFFLEVBQUUsRUFBRSxJQUFJLEVBQUUseURBQXlELEVBQUUsRUFBRSxFQUFFLElBQUksRUFBRSx5REFBeUQsRUFBRSxFQUFFLEVBQUUsSUFBSSxFQUFFLHlEQUF5RCxFQUFFLEVBQUUsRUFBRSxJQUFJLEVBQUUseURBQXlELEVBQUUsRUFBRSxFQUFFLElBQUksRUFBRSx5REFBeUQsRUFBRSxFQUFFLEVBQUUsSUFBSSxFQUFFLHlEQUF5RCxFQUFFLEVBQUUsRUFBRSxJQUFJLEVBQUUseURBQXlELEVBQUUsRUFBRSxFQUFFLElBQUksRUFBRSx3Q0FBd0MsRUFBRSxDQUFDLEVBQUUsQ0FBQztRQUMzNUQsSUFBSSxHQUFHLE1BQU0sQ0FBQyxZQUFZLENBQUMsSUFBSSxFQUFFLFNBQVMsQ0FBQyxDQUFDO1FBQzVDLEtBQUssQ0FBQyxRQUFRLENBQUMsWUFBWSxFQUFFLElBQUksRUFBRSxjQUFjLEVBQUUsSUFBSSxDQUFDLENBQUM7SUFDN0QsQ0FBQzs7QUE1RkwsNEJBNkZDO0FBaEZHLGdCQUFnQjtBQUNPLHFCQUFZLEdBQUcseURBQXlELENBQUMifQ==