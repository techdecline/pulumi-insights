import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../../types/input";
import * as outputs from "../../types/output";
import * as enums from "../../types/enums";
/**
 * Represents a Hunt in Azure Security Insights.
 */
export declare class Hunt extends pulumi.CustomResource {
    /**
     * Get an existing Hunt resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    static get(name: string, id: pulumi.Input<pulumi.ID>, opts?: pulumi.CustomResourceOptions): Hunt;
    /**
     * Returns true if the given object is an instance of Hunt.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    static isInstance(obj: any): obj is Hunt;
    /**
     * A list of mitre attack tactics the hunt is associated with
     */
    readonly attackTactics: pulumi.Output<string[] | undefined>;
    /**
     * A list of a mitre attack techniques the hunt is associated with
     */
    readonly attackTechniques: pulumi.Output<string[] | undefined>;
    /**
     * The description of the hunt
     */
    readonly description: pulumi.Output<string>;
    /**
     * The display name of the hunt
     */
    readonly displayName: pulumi.Output<string>;
    /**
     * Etag of the azure resource
     */
    readonly etag: pulumi.Output<string | undefined>;
    /**
     * The hypothesis status of the hunt.
     */
    readonly hypothesisStatus: pulumi.Output<string | undefined>;
    /**
     * List of labels relevant to this hunt
     */
    readonly labels: pulumi.Output<string[] | undefined>;
    /**
     * The name of the resource
     */
    readonly name: pulumi.Output<string>;
    /**
     * Describes a user that the hunt is assigned to
     */
    readonly owner: pulumi.Output<outputs.securityinsights.v20230601preview.HuntOwnerResponse | undefined>;
    /**
     * The status of the hunt.
     */
    readonly status: pulumi.Output<string | undefined>;
    /**
     * Azure Resource Manager metadata containing createdBy and modifiedBy information.
     */
    readonly systemData: pulumi.Output<outputs.securityinsights.v20230601preview.SystemDataResponse>;
    /**
     * The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
     */
    readonly type: pulumi.Output<string>;
    /**
     * Create a Hunt resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: HuntArgs, opts?: pulumi.CustomResourceOptions);
}
/**
 * The set of arguments for constructing a Hunt resource.
 */
export interface HuntArgs {
    /**
     * A list of mitre attack tactics the hunt is associated with
     */
    attackTactics?: pulumi.Input<pulumi.Input<string | enums.securityinsights.v20230601preview.AttackTactic>[]>;
    /**
     * A list of a mitre attack techniques the hunt is associated with
     */
    attackTechniques?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The description of the hunt
     */
    description: pulumi.Input<string>;
    /**
     * The display name of the hunt
     */
    displayName: pulumi.Input<string>;
    /**
     * The hunt id (GUID)
     */
    huntId?: pulumi.Input<string>;
    /**
     * The hypothesis status of the hunt.
     */
    hypothesisStatus?: pulumi.Input<string | enums.securityinsights.v20230601preview.HypothesisStatus>;
    /**
     * List of labels relevant to this hunt
     */
    labels?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Describes a user that the hunt is assigned to
     */
    owner?: pulumi.Input<inputs.securityinsights.v20230601preview.HuntOwnerArgs>;
    /**
     * The name of the resource group. The name is case insensitive.
     */
    resourceGroupName: pulumi.Input<string>;
    /**
     * The status of the hunt.
     */
    status?: pulumi.Input<string | enums.securityinsights.v20230601preview.Status>;
    /**
     * The name of the workspace.
     */
    workspaceName: pulumi.Input<string>;
}
