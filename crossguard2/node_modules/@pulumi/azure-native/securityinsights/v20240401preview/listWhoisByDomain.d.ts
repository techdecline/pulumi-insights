import * as pulumi from "@pulumi/pulumi";
import * as outputs from "../../types/output";
/**
 * Get whois information for a single domain name
 */
export declare function listWhoisByDomain(args: ListWhoisByDomainArgs, opts?: pulumi.InvokeOptions): Promise<ListWhoisByDomainResult>;
export interface ListWhoisByDomainArgs {
    /**
     * The domain name
     */
    domain?: string;
    /**
     * Enrichment type
     */
    enrichmentType: string;
    /**
     * The name of the resource group. The name is case insensitive.
     */
    resourceGroupName: string;
    /**
     * The name of the workspace.
     */
    workspaceName: string;
}
/**
 * Whois information for a given domain and associated metadata
 */
export interface ListWhoisByDomainResult {
    /**
     * The timestamp at which this record was created
     */
    readonly created?: string;
    /**
     * The domain for this whois record
     */
    readonly domain?: string;
    /**
     * The timestamp at which this record will expire
     */
    readonly expires?: string;
    /**
     * The whois record for a given domain
     */
    readonly parsedWhois?: outputs.securityinsights.v20240401preview.EnrichmentDomainWhoisDetailsResponse;
    /**
     * The hostname of this registrar's whois server
     */
    readonly server?: string;
    /**
     * The timestamp at which this record was last updated
     */
    readonly updated?: string;
}
/**
 * Get whois information for a single domain name
 */
export declare function listWhoisByDomainOutput(args: ListWhoisByDomainOutputArgs, opts?: pulumi.InvokeOutputOptions): pulumi.Output<ListWhoisByDomainResult>;
export interface ListWhoisByDomainOutputArgs {
    /**
     * The domain name
     */
    domain?: pulumi.Input<string>;
    /**
     * Enrichment type
     */
    enrichmentType: pulumi.Input<string>;
    /**
     * The name of the resource group. The name is case insensitive.
     */
    resourceGroupName: pulumi.Input<string>;
    /**
     * The name of the workspace.
     */
    workspaceName: pulumi.Input<string>;
}
