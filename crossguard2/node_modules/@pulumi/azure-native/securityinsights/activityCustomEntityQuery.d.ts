import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as enums from "../types/enums";
/**
 * Represents Activity entity query.
 * Azure REST API version: 2023-06-01-preview. Prior API version in Azure Native 1.x: 2021-03-01-preview.
 */
export declare class ActivityCustomEntityQuery extends pulumi.CustomResource {
    /**
     * Get an existing ActivityCustomEntityQuery resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    static get(name: string, id: pulumi.Input<pulumi.ID>, opts?: pulumi.CustomResourceOptions): ActivityCustomEntityQuery;
    /**
     * Returns true if the given object is an instance of ActivityCustomEntityQuery.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    static isInstance(obj: any): obj is ActivityCustomEntityQuery;
    /**
     * The entity query content to display in timeline
     */
    readonly content: pulumi.Output<string | undefined>;
    /**
     * The time the activity was created
     */
    readonly createdTimeUtc: pulumi.Output<string>;
    /**
     * The entity query description
     */
    readonly description: pulumi.Output<string | undefined>;
    /**
     * Determines whether this activity is enabled or disabled.
     */
    readonly enabled: pulumi.Output<boolean | undefined>;
    /**
     * The query applied only to entities matching to all filters
     */
    readonly entitiesFilter: pulumi.Output<{
        [key: string]: string[];
    } | undefined>;
    /**
     * Etag of the azure resource
     */
    readonly etag: pulumi.Output<string | undefined>;
    /**
     * The type of the query's source entity
     */
    readonly inputEntityType: pulumi.Output<string | undefined>;
    /**
     * The kind of the entity query
     * Expected value is 'Activity'.
     */
    readonly kind: pulumi.Output<"Activity">;
    /**
     * The last time the activity was updated
     */
    readonly lastModifiedTimeUtc: pulumi.Output<string>;
    /**
     * The name of the resource
     */
    readonly name: pulumi.Output<string>;
    /**
     * The Activity query definitions
     */
    readonly queryDefinitions: pulumi.Output<outputs.securityinsights.ActivityEntityQueriesPropertiesResponseQueryDefinitions | undefined>;
    /**
     * List of the fields of the source entity that are required to run the query
     */
    readonly requiredInputFieldsSets: pulumi.Output<string[][] | undefined>;
    /**
     * Azure Resource Manager metadata containing createdBy and modifiedBy information.
     */
    readonly systemData: pulumi.Output<outputs.securityinsights.SystemDataResponse>;
    /**
     * The template id this activity was created from
     */
    readonly templateName: pulumi.Output<string | undefined>;
    /**
     * The entity query title
     */
    readonly title: pulumi.Output<string | undefined>;
    /**
     * The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
     */
    readonly type: pulumi.Output<string>;
    /**
     * Create a ActivityCustomEntityQuery resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: ActivityCustomEntityQueryArgs, opts?: pulumi.CustomResourceOptions);
}
/**
 * The set of arguments for constructing a ActivityCustomEntityQuery resource.
 */
export interface ActivityCustomEntityQueryArgs {
    /**
     * The entity query content to display in timeline
     */
    content?: pulumi.Input<string>;
    /**
     * The entity query description
     */
    description?: pulumi.Input<string>;
    /**
     * Determines whether this activity is enabled or disabled.
     */
    enabled?: pulumi.Input<boolean>;
    /**
     * The query applied only to entities matching to all filters
     */
    entitiesFilter?: pulumi.Input<{
        [key: string]: pulumi.Input<pulumi.Input<string>[]>;
    }>;
    /**
     * entity query ID
     */
    entityQueryId?: pulumi.Input<string>;
    /**
     * The type of the query's source entity
     */
    inputEntityType?: pulumi.Input<string | enums.securityinsights.EntityType>;
    /**
     * The kind of the entity query that supports put request.
     * Expected value is 'Activity'.
     */
    kind: pulumi.Input<"Activity">;
    /**
     * The Activity query definitions
     */
    queryDefinitions?: pulumi.Input<inputs.securityinsights.ActivityEntityQueriesPropertiesQueryDefinitionsArgs>;
    /**
     * List of the fields of the source entity that are required to run the query
     */
    requiredInputFieldsSets?: pulumi.Input<pulumi.Input<pulumi.Input<string>[]>[]>;
    /**
     * The name of the resource group. The name is case insensitive.
     */
    resourceGroupName: pulumi.Input<string>;
    /**
     * The template id this activity was created from
     */
    templateName?: pulumi.Input<string>;
    /**
     * The entity query title
     */
    title?: pulumi.Input<string>;
    /**
     * The name of the workspace.
     */
    workspaceName: pulumi.Input<string>;
}
