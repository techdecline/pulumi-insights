import * as pulumi from "@pulumi/pulumi";
import * as outputs from "../types/output";
import * as enums from "../types/enums";
/**
 * The test base custom image resource.
 * Azure REST API version: 2023-11-01-preview.
 */
export declare class CustomImage extends pulumi.CustomResource {
    /**
     * Get an existing CustomImage resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    static get(name: string, id: pulumi.Input<pulumi.ID>, opts?: pulumi.CustomResourceOptions): CustomImage;
    /**
     * Returns true if the given object is an instance of CustomImage.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    static isInstance(obj: any): obj is CustomImage;
    /**
     * The UTC timestamp when the custom image was published.
     */
    readonly creationTime: pulumi.Output<string>;
    /**
     * Image definition name.
     */
    readonly definitionName: pulumi.Output<string>;
    /**
     * The name of the resource
     */
    readonly name: pulumi.Output<string>;
    /**
     * This property indicates the size of the VHD to be created.
     */
    readonly osDiskImageSizeInGB: pulumi.Output<number>;
    /**
     * Product of the custom image.
     */
    readonly product: pulumi.Output<string>;
    /**
     * The provisioning state of the resource.
     */
    readonly provisioningState: pulumi.Output<string>;
    /**
     * Release of the custom image OS.
     */
    readonly release: pulumi.Output<string>;
    /**
     * The release version date of the release of the custom image OS.
     */
    readonly releaseVersionDate: pulumi.Output<string>;
    /**
     * Custom image source type.
     */
    readonly source: pulumi.Output<string>;
    /**
     * Status of the custom image.
     */
    readonly status: pulumi.Output<string>;
    /**
     * Azure Resource Manager metadata containing createdBy and modifiedBy information.
     */
    readonly systemData: pulumi.Output<outputs.testbase.SystemDataResponse>;
    /**
     * The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
     */
    readonly type: pulumi.Output<string>;
    /**
     * The validation result of the custom image.
     */
    readonly validationResults: pulumi.Output<outputs.testbase.ImageValidationResultsResponse>;
    /**
     * Image version name.
     */
    readonly versionName: pulumi.Output<string>;
    /**
     * The file name of the associated VHD resource.
     */
    readonly vhdFileName: pulumi.Output<string>;
    /**
     * The Id of the associated VHD resource.
     */
    readonly vhdId: pulumi.Output<string | undefined>;
    /**
     * Create a CustomImage resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: CustomImageArgs, opts?: pulumi.CustomResourceOptions);
}
/**
 * The set of arguments for constructing a CustomImage resource.
 */
export interface CustomImageArgs {
    /**
     * The resource name of the test base custom image.
     */
    customImageName?: pulumi.Input<string>;
    /**
     * Image definition name.
     */
    definitionName: pulumi.Input<string>;
    /**
     * The name of the resource group. The name is case insensitive.
     */
    resourceGroupName: pulumi.Input<string>;
    /**
     * Custom image source type.
     */
    source: pulumi.Input<string | enums.testbase.ImageSource>;
    /**
     * The resource name of the Test Base Account.
     */
    testBaseAccountName: pulumi.Input<string>;
    /**
     * Image version name.
     */
    versionName: pulumi.Input<string>;
    /**
     * The Id of the associated VHD resource.
     */
    vhdId?: pulumi.Input<string>;
}
