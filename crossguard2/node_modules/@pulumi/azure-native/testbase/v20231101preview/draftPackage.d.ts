import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../../types/input";
import * as outputs from "../../types/output";
import * as enums from "../../types/enums";
/**
 * The Test Base Draft Package resource.
 */
export declare class DraftPackage extends pulumi.CustomResource {
    /**
     * Get an existing DraftPackage resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    static get(name: string, id: pulumi.Input<pulumi.ID>, opts?: pulumi.CustomResourceOptions): DraftPackage;
    /**
     * Returns true if the given object is an instance of DraftPackage.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    static isInstance(obj: any): obj is DraftPackage;
    /**
     * The name of the app file.
     */
    readonly appFileName: pulumi.Output<string | undefined>;
    /**
     * Application name
     */
    readonly applicationName: pulumi.Output<string | undefined>;
    /**
     * Comments added by user.
     */
    readonly comments: pulumi.Output<string | undefined>;
    /**
     * The relative path of the folder hosting package files.
     */
    readonly draftPackagePath: pulumi.Output<string>;
    /**
     * Specifies whether this draft package is used to edit a package.
     */
    readonly editPackage: pulumi.Output<boolean | undefined>;
    /**
     * The executable launch command for script auto-fill. Will be used to run the application.
     */
    readonly executableLaunchCommand: pulumi.Output<string | undefined>;
    /**
     * The list of first party applications to test along with user application.
     */
    readonly firstPartyApps: pulumi.Output<outputs.testbase.v20231101preview.FirstPartyAppDefinitionResponse[] | undefined>;
    /**
     * The flighting ring for feature update.
     */
    readonly flightingRing: pulumi.Output<string | undefined>;
    /**
     * The list of gallery apps to test along with user application.
     */
    readonly galleryApps: pulumi.Output<outputs.testbase.v20231101preview.GalleryAppDefinitionResponse[] | undefined>;
    /**
     * The highlight files in the package.
     */
    readonly highlightedFiles: pulumi.Output<outputs.testbase.v20231101preview.HighlightedFileResponse[] | undefined>;
    /**
     * Specifies the baseline os and target os for inplace upgrade.
     */
    readonly inplaceUpgradeOSPair: pulumi.Output<outputs.testbase.v20231101preview.InplaceUpgradeOSInfoResponse | undefined>;
    /**
     * The metadata of Intune enrollment.
     */
    readonly intuneEnrollmentMetadata: pulumi.Output<outputs.testbase.v20231101preview.IntuneEnrollmentMetadataResponse | undefined>;
    /**
     * Metadata used to generate draft package folder and scripts.
     */
    readonly intuneMetadata: pulumi.Output<outputs.testbase.v20231101preview.DraftPackageIntuneAppMetadataResponse | undefined>;
    /**
     * The UTC timestamp when the package was last modified.
     */
    readonly lastModifiedTime: pulumi.Output<string>;
    /**
     * The name of the resource
     */
    readonly name: pulumi.Output<string>;
    /**
     * Specifies the package id from which the draft package copied.
     */
    readonly packageId: pulumi.Output<string | undefined>;
    /**
     * Tags of the package to be created.
     */
    readonly packageTags: pulumi.Output<{
        [key: string]: string;
    } | undefined>;
    /**
     * The process name for script auto-fill. Will be used to identify the application process.
     */
    readonly processName: pulumi.Output<string | undefined>;
    /**
     * The provisioning state of the resource.
     */
    readonly provisioningState: pulumi.Output<string>;
    /**
     * The source type.
     */
    readonly sourceType: pulumi.Output<string | undefined>;
    /**
     * Azure Resource Manager metadata containing createdBy and modifiedBy information.
     */
    readonly systemData: pulumi.Output<outputs.testbase.v20231101preview.SystemDataResponse>;
    /**
     * Tab state.
     */
    readonly tabState: pulumi.Output<outputs.testbase.v20231101preview.TabStateResponse | undefined>;
    /**
     * Specifies the target OSs of specific OS Update types.
     */
    readonly targetOSList: pulumi.Output<outputs.testbase.v20231101preview.TargetOSInfoResponse[] | undefined>;
    /**
     * OOB, functional or flow driven. Mapped to the data in 'tests' property.
     */
    readonly testTypes: pulumi.Output<string[] | undefined>;
    /**
     * The detailed test information.
     */
    readonly tests: pulumi.Output<outputs.testbase.v20231101preview.TestResponse[] | undefined>;
    /**
     * The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
     */
    readonly type: pulumi.Output<string>;
    /**
     * Indicates whether user choose to enable script auto-fill.
     */
    readonly useAutofill: pulumi.Output<boolean | undefined>;
    /**
     * Specifies whether a sample package should be used instead of the one uploaded by the user.
     */
    readonly useSample: pulumi.Output<boolean | undefined>;
    /**
     * Application version
     */
    readonly version: pulumi.Output<string | undefined>;
    /**
     * The relative path for a temporarily folder for package creation work.
     */
    readonly workingPath: pulumi.Output<string>;
    /**
     * Create a DraftPackage resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: DraftPackageArgs, opts?: pulumi.CustomResourceOptions);
}
/**
 * The set of arguments for constructing a DraftPackage resource.
 */
export interface DraftPackageArgs {
    /**
     * The name of the app file.
     */
    appFileName?: pulumi.Input<string>;
    /**
     * Application name
     */
    applicationName?: pulumi.Input<string>;
    /**
     * Comments added by user.
     */
    comments?: pulumi.Input<string>;
    /**
     * The resource name of the Test Base Draft Package.
     */
    draftPackageName?: pulumi.Input<string>;
    /**
     * Specifies whether this draft package is used to edit a package.
     */
    editPackage?: pulumi.Input<boolean>;
    /**
     * The executable launch command for script auto-fill. Will be used to run the application.
     */
    executableLaunchCommand?: pulumi.Input<string>;
    /**
     * The list of first party applications to test along with user application.
     */
    firstPartyApps?: pulumi.Input<pulumi.Input<inputs.testbase.v20231101preview.FirstPartyAppDefinitionArgs>[]>;
    /**
     * The flighting ring for feature update.
     */
    flightingRing?: pulumi.Input<string>;
    /**
     * The list of gallery apps to test along with user application.
     */
    galleryApps?: pulumi.Input<pulumi.Input<inputs.testbase.v20231101preview.GalleryAppDefinitionArgs>[]>;
    /**
     * The highlight files in the package.
     */
    highlightedFiles?: pulumi.Input<pulumi.Input<inputs.testbase.v20231101preview.HighlightedFileArgs>[]>;
    /**
     * Specifies the baseline os and target os for inplace upgrade.
     */
    inplaceUpgradeOSPair?: pulumi.Input<inputs.testbase.v20231101preview.InplaceUpgradeOSInfoArgs>;
    /**
     * The metadata of Intune enrollment.
     */
    intuneEnrollmentMetadata?: pulumi.Input<inputs.testbase.v20231101preview.IntuneEnrollmentMetadataArgs>;
    /**
     * Metadata used to generate draft package folder and scripts.
     */
    intuneMetadata?: pulumi.Input<inputs.testbase.v20231101preview.DraftPackageIntuneAppMetadataArgs>;
    /**
     * Specifies the package id from which the draft package copied.
     */
    packageId?: pulumi.Input<string>;
    /**
     * Tags of the package to be created.
     */
    packageTags?: pulumi.Input<{
        [key: string]: pulumi.Input<string>;
    }>;
    /**
     * The process name for script auto-fill. Will be used to identify the application process.
     */
    processName?: pulumi.Input<string>;
    /**
     * The name of the resource group. The name is case insensitive.
     */
    resourceGroupName: pulumi.Input<string>;
    /**
     * The source type.
     */
    sourceType?: pulumi.Input<string | enums.testbase.v20231101preview.DraftPackageSourceType>;
    /**
     * Tab state.
     */
    tabState?: pulumi.Input<inputs.testbase.v20231101preview.TabStateArgs>;
    /**
     * Specifies the target OSs of specific OS Update types.
     */
    targetOSList?: pulumi.Input<pulumi.Input<inputs.testbase.v20231101preview.TargetOSInfoArgs>[]>;
    /**
     * The resource name of the Test Base Account.
     */
    testBaseAccountName: pulumi.Input<string>;
    /**
     * OOB, functional or flow driven. Mapped to the data in 'tests' property.
     */
    testTypes?: pulumi.Input<pulumi.Input<string | enums.testbase.v20231101preview.TestType>[]>;
    /**
     * The detailed test information.
     */
    tests?: pulumi.Input<pulumi.Input<inputs.testbase.v20231101preview.TestArgs>[]>;
    /**
     * Indicates whether user choose to enable script auto-fill.
     */
    useAutofill?: pulumi.Input<boolean>;
    /**
     * Specifies whether a sample package should be used instead of the one uploaded by the user.
     */
    useSample?: pulumi.Input<boolean>;
    /**
     * Application version
     */
    version?: pulumi.Input<string>;
}
