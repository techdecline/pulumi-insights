import * as pulumi from "@pulumi/pulumi";
import * as outputs from "../../types/output";
import * as enums from "../../types/enums";
/**
 * The test base image definition resource.
 */
export declare class ImageDefinition extends pulumi.CustomResource {
    /**
     * Get an existing ImageDefinition resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    static get(name: string, id: pulumi.Input<pulumi.ID>, opts?: pulumi.CustomResourceOptions): ImageDefinition;
    /**
     * Returns true if the given object is an instance of ImageDefinition.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    static isInstance(obj: any): obj is ImageDefinition;
    /**
     * Custom image architecture.
     */
    readonly architecture: pulumi.Output<string>;
    /**
     * The name of the resource
     */
    readonly name: pulumi.Output<string>;
    /**
     * Custom image OS state.
     */
    readonly osState: pulumi.Output<string>;
    readonly provisioningState: pulumi.Output<string>;
    /**
     * Custom image security type.
     */
    readonly securityType: pulumi.Output<string>;
    /**
     * Azure Resource Manager metadata containing createdBy and modifiedBy information.
     */
    readonly systemData: pulumi.Output<outputs.testbase.v20231101preview.SystemDataResponse>;
    /**
     * The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
     */
    readonly type: pulumi.Output<string>;
    /**
     * Create a ImageDefinition resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: ImageDefinitionArgs, opts?: pulumi.CustomResourceOptions);
}
/**
 * The set of arguments for constructing a ImageDefinition resource.
 */
export interface ImageDefinitionArgs {
    /**
     * Custom image architecture.
     */
    architecture: pulumi.Input<string | enums.testbase.v20231101preview.ImageArchitecture>;
    /**
     * The resource name of the test base image definition.
     */
    imageDefinitionName?: pulumi.Input<string>;
    /**
     * Custom image OS state.
     */
    osState: pulumi.Input<string | enums.testbase.v20231101preview.ImageOSState>;
    /**
     * The name of the resource group. The name is case insensitive.
     */
    resourceGroupName: pulumi.Input<string>;
    /**
     * Custom image security type.
     */
    securityType: pulumi.Input<string | enums.testbase.v20231101preview.ImageSecurityType>;
    /**
     * The resource name of the Test Base Account.
     */
    testBaseAccountName: pulumi.Input<string>;
}
