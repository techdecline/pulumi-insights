import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../../types/input";
import * as outputs from "../../types/output";
/**
 * The Test Base Package resource.
 */
export declare class Package extends pulumi.CustomResource {
    /**
     * Get an existing Package resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    static get(name: string, id: pulumi.Input<pulumi.ID>, opts?: pulumi.CustomResourceOptions): Package;
    /**
     * Returns true if the given object is an instance of Package.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    static isInstance(obj: any): obj is Package;
    /**
     * Application name
     */
    readonly applicationName: pulumi.Output<string>;
    /**
     * The file path of the package.
     */
    readonly blobPath: pulumi.Output<string>;
    /**
     * Resource Etag.
     */
    readonly etag: pulumi.Output<string>;
    /**
     * The flighting ring for feature update.
     */
    readonly flightingRing: pulumi.Output<string>;
    /**
     * Flag showing that whether the package is enabled. It doesn't schedule test for package which is not enabled.
     */
    readonly isEnabled: pulumi.Output<boolean>;
    /**
     * The UTC timestamp when the package was last modified.
     */
    readonly lastModifiedTime: pulumi.Output<string>;
    /**
     * The geo-location where the resource lives
     */
    readonly location: pulumi.Output<string>;
    /**
     * Resource name.
     */
    readonly name: pulumi.Output<string>;
    /**
     * The status of the package.
     */
    readonly packageStatus: pulumi.Output<string>;
    /**
     * The provisioning state of the resource.
     */
    readonly provisioningState: pulumi.Output<string>;
    /**
     * The system metadata relating to this resource
     */
    readonly systemData: pulumi.Output<outputs.testbase.v20220401preview.SystemDataResponse>;
    /**
     * The tags of the resource.
     */
    readonly tags: pulumi.Output<{
        [key: string]: string;
    } | undefined>;
    /**
     * Specifies the target OSs of specific OS Update types.
     */
    readonly targetOSList: pulumi.Output<outputs.testbase.v20220401preview.TargetOSInfoResponse[]>;
    /**
     * OOB, functional or both. Mapped to the data in 'tests' property.
     */
    readonly testTypes: pulumi.Output<string[]>;
    /**
     * The detailed test information.
     */
    readonly tests: pulumi.Output<outputs.testbase.v20220401preview.TestResponse[]>;
    /**
     * Resource type.
     */
    readonly type: pulumi.Output<string>;
    /**
     * The validation results. There's validation on package when it's created or updated.
     */
    readonly validationResults: pulumi.Output<outputs.testbase.v20220401preview.PackageValidationResultResponse[]>;
    /**
     * Application version
     */
    readonly version: pulumi.Output<string>;
    /**
     * Create a Package resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: PackageArgs, opts?: pulumi.CustomResourceOptions);
}
/**
 * The set of arguments for constructing a Package resource.
 */
export interface PackageArgs {
    /**
     * Application name
     */
    applicationName: pulumi.Input<string>;
    /**
     * The file path of the package.
     */
    blobPath: pulumi.Input<string>;
    /**
     * The flighting ring for feature update.
     */
    flightingRing: pulumi.Input<string>;
    /**
     * The geo-location where the resource lives
     */
    location?: pulumi.Input<string>;
    /**
     * The resource name of the Test Base Package.
     */
    packageName?: pulumi.Input<string>;
    /**
     * The name of the resource group that contains the resource.
     */
    resourceGroupName: pulumi.Input<string>;
    /**
     * The tags of the resource.
     */
    tags?: pulumi.Input<{
        [key: string]: pulumi.Input<string>;
    }>;
    /**
     * Specifies the target OSs of specific OS Update types.
     */
    targetOSList: pulumi.Input<pulumi.Input<inputs.testbase.v20220401preview.TargetOSInfoArgs>[]>;
    /**
     * The resource name of the Test Base Account.
     */
    testBaseAccountName: pulumi.Input<string>;
    /**
     * The detailed test information.
     */
    tests: pulumi.Input<pulumi.Input<inputs.testbase.v20220401preview.TestArgs>[]>;
    /**
     * Application version
     */
    version: pulumi.Input<string>;
}
