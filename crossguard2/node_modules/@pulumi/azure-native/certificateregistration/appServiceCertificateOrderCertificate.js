"use strict";
// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***
Object.defineProperty(exports, "__esModule", { value: true });
exports.AppServiceCertificateOrderCertificate = void 0;
const pulumi = require("@pulumi/pulumi");
const utilities = require("../utilities");
/**
 * Key Vault container ARM resource for a certificate that is purchased through Azure.
 * Azure REST API version: 2022-09-01. Prior API version in Azure Native 1.x: 2020-10-01.
 *
 * Other available API versions: 2020-10-01, 2023-01-01, 2023-12-01, 2024-04-01.
 */
class AppServiceCertificateOrderCertificate extends pulumi.CustomResource {
    /**
     * Get an existing AppServiceCertificateOrderCertificate resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    static get(name, id, opts) {
        return new AppServiceCertificateOrderCertificate(name, undefined, Object.assign(Object.assign({}, opts), { id: id }));
    }
    /**
     * Returns true if the given object is an instance of AppServiceCertificateOrderCertificate.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    static isInstance(obj) {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === AppServiceCertificateOrderCertificate.__pulumiType;
    }
    /**
     * Create a AppServiceCertificateOrderCertificate resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name, args, opts) {
        let resourceInputs = {};
        opts = opts || {};
        if (!opts.id) {
            if ((!args || args.certificateOrderName === undefined) && !opts.urn) {
                throw new Error("Missing required property 'certificateOrderName'");
            }
            if ((!args || args.resourceGroupName === undefined) && !opts.urn) {
                throw new Error("Missing required property 'resourceGroupName'");
            }
            resourceInputs["certificateOrderName"] = args ? args.certificateOrderName : undefined;
            resourceInputs["keyVaultId"] = args ? args.keyVaultId : undefined;
            resourceInputs["keyVaultSecretName"] = args ? args.keyVaultSecretName : undefined;
            resourceInputs["kind"] = args ? args.kind : undefined;
            resourceInputs["location"] = args ? args.location : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["resourceGroupName"] = args ? args.resourceGroupName : undefined;
            resourceInputs["tags"] = args ? args.tags : undefined;
            resourceInputs["provisioningState"] = undefined /*out*/;
            resourceInputs["type"] = undefined /*out*/;
        }
        else {
            resourceInputs["keyVaultId"] = undefined /*out*/;
            resourceInputs["keyVaultSecretName"] = undefined /*out*/;
            resourceInputs["kind"] = undefined /*out*/;
            resourceInputs["location"] = undefined /*out*/;
            resourceInputs["name"] = undefined /*out*/;
            resourceInputs["provisioningState"] = undefined /*out*/;
            resourceInputs["tags"] = undefined /*out*/;
            resourceInputs["type"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        const aliasOpts = { aliases: [{ type: "azure-native:certificateregistration/v20150801:AppServiceCertificateOrderCertificate" }, { type: "azure-native:certificateregistration/v20180201:AppServiceCertificateOrderCertificate" }, { type: "azure-native:certificateregistration/v20190801:AppServiceCertificateOrderCertificate" }, { type: "azure-native:certificateregistration/v20200601:AppServiceCertificateOrderCertificate" }, { type: "azure-native:certificateregistration/v20200901:AppServiceCertificateOrderCertificate" }, { type: "azure-native:certificateregistration/v20201001:AppServiceCertificateOrderCertificate" }, { type: "azure-native:certificateregistration/v20201201:AppServiceCertificateOrderCertificate" }, { type: "azure-native:certificateregistration/v20210101:AppServiceCertificateOrderCertificate" }, { type: "azure-native:certificateregistration/v20210115:AppServiceCertificateOrderCertificate" }, { type: "azure-native:certificateregistration/v20210201:AppServiceCertificateOrderCertificate" }, { type: "azure-native:certificateregistration/v20210301:AppServiceCertificateOrderCertificate" }, { type: "azure-native:certificateregistration/v20220301:AppServiceCertificateOrderCertificate" }, { type: "azure-native:certificateregistration/v20220901:AppServiceCertificateOrderCertificate" }, { type: "azure-native:certificateregistration/v20230101:AppServiceCertificateOrderCertificate" }, { type: "azure-native:certificateregistration/v20231201:AppServiceCertificateOrderCertificate" }, { type: "azure-native:certificateregistration/v20240401:AppServiceCertificateOrderCertificate" }] };
        opts = pulumi.mergeOptions(opts, aliasOpts);
        super(AppServiceCertificateOrderCertificate.__pulumiType, name, resourceInputs, opts);
    }
}
exports.AppServiceCertificateOrderCertificate = AppServiceCertificateOrderCertificate;
/** @internal */
AppServiceCertificateOrderCertificate.__pulumiType = 'azure-native:certificateregistration:AppServiceCertificateOrderCertificate';
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYXBwU2VydmljZUNlcnRpZmljYXRlT3JkZXJDZXJ0aWZpY2F0ZS5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uL2NlcnRpZmljYXRlcmVnaXN0cmF0aW9uL2FwcFNlcnZpY2VDZXJ0aWZpY2F0ZU9yZGVyQ2VydGlmaWNhdGUudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IjtBQUFBLHNFQUFzRTtBQUN0RSxpRkFBaUY7OztBQUVqRix5Q0FBeUM7QUFDekMsMENBQTBDO0FBRTFDOzs7OztHQUtHO0FBQ0gsTUFBYSxxQ0FBc0MsU0FBUSxNQUFNLENBQUMsY0FBYztJQUM1RTs7Ozs7OztPQU9HO0lBQ0ksTUFBTSxDQUFDLEdBQUcsQ0FBQyxJQUFZLEVBQUUsRUFBMkIsRUFBRSxJQUFtQztRQUM1RixPQUFPLElBQUkscUNBQXFDLENBQUMsSUFBSSxFQUFFLFNBQWdCLGtDQUFPLElBQUksS0FBRSxFQUFFLEVBQUUsRUFBRSxJQUFHLENBQUM7SUFDbEcsQ0FBQztJQUtEOzs7T0FHRztJQUNJLE1BQU0sQ0FBQyxVQUFVLENBQUMsR0FBUTtRQUM3QixJQUFJLEdBQUcsS0FBSyxTQUFTLElBQUksR0FBRyxLQUFLLElBQUksRUFBRTtZQUNuQyxPQUFPLEtBQUssQ0FBQztTQUNoQjtRQUNELE9BQU8sR0FBRyxDQUFDLGNBQWMsQ0FBQyxLQUFLLHFDQUFxQyxDQUFDLFlBQVksQ0FBQztJQUN0RixDQUFDO0lBbUNEOzs7Ozs7T0FNRztJQUNILFlBQVksSUFBWSxFQUFFLElBQStDLEVBQUUsSUFBbUM7UUFDMUcsSUFBSSxjQUFjLEdBQWtCLEVBQUUsQ0FBQztRQUN2QyxJQUFJLEdBQUcsSUFBSSxJQUFJLEVBQUUsQ0FBQztRQUNsQixJQUFJLENBQUMsSUFBSSxDQUFDLEVBQUUsRUFBRTtZQUNWLElBQUksQ0FBQyxDQUFDLElBQUksSUFBSSxJQUFJLENBQUMsb0JBQW9CLEtBQUssU0FBUyxDQUFDLElBQUksQ0FBQyxJQUFJLENBQUMsR0FBRyxFQUFFO2dCQUNq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