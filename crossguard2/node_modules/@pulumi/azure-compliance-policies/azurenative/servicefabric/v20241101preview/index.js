"use strict";
// Copyright 2016-2024, Pulumi Corporation.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//
// ------------------------------- WARNING -------------------------------------
// This file was programmatically generated. Do not edit unless you know what
// you're doing.
// ------------------------------- WARNING -------------------------------------
Object.defineProperty(exports, "__esModule", { value: true });
exports.NodeType = exports.ManagedClusterService = exports.ManagedClusterApplicationTypeVersion = exports.ManagedClusterApplicationType = exports.ManagedClusterApplication = exports.ManagedCluster = void 0;
const policy_1 = require("@pulumi/policy");
const compliance_policy_manager_1 = require("@pulumi/compliance-policy-manager");
const v20241101preview_1 = require("@pulumi/azure-native/servicefabric/v20241101preview");
const v20241101preview_2 = require("@pulumi/azure-native/servicefabric/v20241101preview");
const v20241101preview_3 = require("@pulumi/azure-native/servicefabric/v20241101preview");
const v20241101preview_4 = require("@pulumi/azure-native/servicefabric/v20241101preview");
const v20241101preview_5 = require("@pulumi/azure-native/servicefabric/v20241101preview");
const v20241101preview_6 = require("@pulumi/azure-native/servicefabric/v20241101preview");
var ManagedCluster;
(function (ManagedCluster) {
    /**
     * Disallow the use of non-stable (Preview) Azure resouces (servicefabric.v20241101preview.ManagedCluster).
     *
     * @severity medium
     * @frameworks none
     * @topics api, preview, unstable
     * @link https://learn.microsoft.com/en-us/rest/api/azure/
     */
    ManagedCluster.disallowPreviewResource = compliance_policy_manager_1.policyManager.registerPolicy({
        resourceValidationPolicy: {
            name: "azurenative-servicefabric-v20241101preview-managedcluster-disallow-preview-resource",
            description: "Disallow the use of non-stable (Preview) Azure resouces (servicefabric.v20241101preview.ManagedCluster).",
            configSchema: compliance_policy_manager_1.policyManager.policyConfigSchema,
            enforcementLevel: "advisory",
            validateResource: (0, policy_1.validateResourceOfType)(v20241101preview_1.ManagedCluster, (_, args, reportViolation) => {
                if (!compliance_policy_manager_1.policyManager.shouldEvalPolicy(args)) {
                    return;
                }
                reportViolation("Azure ManagedCluster shouldn't use an unstable API (servicefabric.v20241101preview.ManagedCluster). A compatible replacement can be found at 'servicefabric.ManagedCluster'.");
            }),
        },
        vendors: ["azure"],
        services: ["servicefabric"],
        severity: "medium",
        topics: ["api", "unstable", "preview"],
    });
})(ManagedCluster || (ManagedCluster = {}));
exports.ManagedCluster = ManagedCluster;
var ManagedClusterApplication;
(function (ManagedClusterApplication) {
    /**
     * Disallow the use of non-stable (Preview) Azure resouces (servicefabric.v20241101preview.ManagedClusterApplication).
     *
     * @severity medium
     * @frameworks none
     * @topics api, preview, unstable
     * @link https://learn.microsoft.com/en-us/rest/api/azure/
     */
    ManagedClusterApplication.disallowPreviewResource = compliance_policy_manager_1.policyManager.registerPolicy({
        resourceValidationPolicy: {
            name: "azurenative-servicefabric-v20241101preview-managedclusterapplication-disallow-preview-resource",
            description: "Disallow the use of non-stable (Preview) Azure resouces (servicefabric.v20241101preview.ManagedClusterApplication).",
            configSchema: compliance_policy_manager_1.policyManager.policyConfigSchema,
            enforcementLevel: "advisory",
            validateResource: (0, policy_1.validateResourceOfType)(v20241101preview_2.ManagedClusterApplication, (_, args, reportViolation) => {
                if (!compliance_policy_manager_1.policyManager.shouldEvalPolicy(args)) {
                    return;
                }
                reportViolation("Azure ManagedClusterApplication shouldn't use an unstable API (servicefabric.v20241101preview.ManagedClusterApplication). A compatible replacement can be found at 'servicefabric.ManagedClusterApplication'.");
            }),
        },
        vendors: ["azure"],
        services: ["servicefabric"],
        severity: "medium",
        topics: ["api", "unstable", "preview"],
    });
})(ManagedClusterApplication || (ManagedClusterApplication = {}));
exports.ManagedClusterApplication = ManagedClusterApplication;
var ManagedClusterApplicationType;
(function (ManagedClusterApplicationType) {
    /**
     * Disallow the use of non-stable (Preview) Azure resouces (servicefabric.v20241101preview.ManagedClusterApplicationType).
     *
     * @severity medium
     * @frameworks none
     * @topics api, preview, unstable
     * @link https://learn.microsoft.com/en-us/rest/api/azure/
     */
    ManagedClusterApplicationType.disallowPreviewResource = compliance_policy_manager_1.policyManager.registerPolicy({
        resourceValidationPolicy: {
            name: "azurenative-servicefabric-v20241101preview-managedclusterapplicationtype-disallow-preview-resource",
            description: "Disallow the use of non-stable (Preview) Azure resouces (servicefabric.v20241101preview.ManagedClusterApplicationType).",
            configSchema: compliance_policy_manager_1.policyManager.policyConfigSchema,
            enforcementLevel: "advisory",
            validateResource: (0, policy_1.validateResourceOfType)(v20241101preview_3.ManagedClusterApplicationType, (_, args, reportViolation) => {
                if (!compliance_policy_manager_1.policyManager.shouldEvalPolicy(args)) {
                    return;
                }
                reportViolation("Azure ManagedClusterApplicationType shouldn't use an unstable API (servicefabric.v20241101preview.ManagedClusterApplicationType). A compatible replacement can be found at 'servicefabric.ManagedClusterApplicationType'.");
            }),
        },
        vendors: ["azure"],
        services: ["servicefabric"],
        severity: "medium",
        topics: ["api", "unstable", "preview"],
    });
})(ManagedClusterApplicationType || (ManagedClusterApplicationType = {}));
exports.ManagedClusterApplicationType = ManagedClusterApplicationType;
var ManagedClusterApplicationTypeVersion;
(function (ManagedClusterApplicationTypeVersion) {
    /**
     * Disallow the use of non-stable (Preview) Azure resouces (servicefabric.v20241101preview.ManagedClusterApplicationTypeVersion).
     *
     * @severity medium
     * @frameworks none
     * @topics api, preview, unstable
     * @link https://learn.microsoft.com/en-us/rest/api/azure/
     */
    ManagedClusterApplicationTypeVersion.disallowPreviewResource = compliance_policy_manager_1.policyManager.registerPolicy({
        resourceValidationPolicy: {
            name: "azurenative-servicefabric-v20241101preview-managedclusterapplicationtypeversion-disallow-preview-resource",
            description: "Disallow the use of non-stable (Preview) Azure resouces (servicefabric.v20241101preview.ManagedClusterApplicationTypeVersion).",
            configSchema: compliance_policy_manager_1.policyManager.policyConfigSchema,
            enforcementLevel: "advisory",
            validateResource: (0, policy_1.validateResourceOfType)(v20241101preview_4.ManagedClusterApplicationTypeVersion, (_, args, reportViolation) => {
                if (!compliance_policy_manager_1.policyManager.shouldEvalPolicy(args)) {
                    return;
                }
                reportViolation("Azure ManagedClusterApplicationTypeVersion shouldn't use an unstable API (servicefabric.v20241101preview.ManagedClusterApplicationTypeVersion). A compatible replacement can be found at 'servicefabric.ManagedClusterApplicationTypeVersion'.");
            }),
        },
        vendors: ["azure"],
        services: ["servicefabric"],
        severity: "medium",
        topics: ["api", "unstable", "preview"],
    });
})(ManagedClusterApplicationTypeVersion || (ManagedClusterApplicationTypeVersion = {}));
exports.ManagedClusterApplicationTypeVersion = ManagedClusterApplicationTypeVersion;
var ManagedClusterService;
(function (ManagedClusterService) {
    /**
     * Disallow the use of non-stable (Preview) Azure resouces (servicefabric.v20241101preview.ManagedClusterService).
     *
     * @severity medium
     * @frameworks none
     * @topics api, preview, unstable
     * @link https://learn.microsoft.com/en-us/rest/api/azure/
     */
    ManagedClusterService.disallowPreviewResource = compliance_policy_manager_1.policyManager.registerPolicy({
        resourceValidationPolicy: {
            name: "azurenative-servicefabric-v20241101preview-managedclusterservice-disallow-preview-resource",
            description: "Disallow the use of non-stable (Preview) Azure resouces (servicefabric.v20241101preview.ManagedClusterService).",
            configSchema: compliance_policy_manager_1.policyManager.policyConfigSchema,
            enforcementLevel: "advisory",
            validateResource: (0, policy_1.validateResourceOfType)(v20241101preview_5.ManagedClusterService, (_, args, reportViolation) => {
                if (!compliance_policy_manager_1.policyManager.shouldEvalPolicy(args)) {
                    return;
                }
                reportViolation("Azure ManagedClusterService shouldn't use an unstable API (servicefabric.v20241101preview.ManagedClusterService). A compatible replacement can be found at 'servicefabric.ManagedClusterService'.");
            }),
        },
        vendors: ["azure"],
        services: ["servicefabric"],
        severity: "medium",
        topics: ["api", "unstable", "preview"],
    });
})(ManagedClusterService || (ManagedClusterService = {}));
exports.ManagedClusterService = ManagedClusterService;
var NodeType;
(function (NodeType) {
    /**
     * Disallow the use of non-stable (Preview) Azure resouces (servicefabric.v20241101preview.NodeType).
     *
     * @severity medium
     * @frameworks none
     * @topics api, preview, unstable
     * @link https://learn.microsoft.com/en-us/rest/api/azure/
     */
    NodeType.disallowPreviewResource = compliance_policy_manager_1.policyManager.registerPolicy({
        resourceValidationPolicy: {
            name: "azurenative-servicefabric-v20241101preview-nodetype-disallow-preview-resource",
            description: "Disallow the use of non-stable (Preview) Azure resouces (servicefabric.v20241101preview.NodeType).",
            configSchema: compliance_policy_manager_1.policyManager.policyConfigSchema,
            enforcementLevel: "advisory",
            validateResource: (0, policy_1.validateResourceOfType)(v20241101preview_6.NodeType, (_, args, reportViolation) => {
                if (!compliance_policy_manager_1.policyManager.shouldEvalPolicy(args)) {
                    return;
                }
                reportViolation("Azure NodeType shouldn't use an unstable API (servicefabric.v20241101preview.NodeType). A compatible replacement can be found at 'servicefabric.NodeType'.");
            }),
        },
        vendors: ["azure"],
        services: ["servicefabric"],
        severity: "medium",
        topics: ["api", "unstable", "preview"],
    });
})(NodeType || (NodeType = {}));
exports.NodeType = NodeType;
