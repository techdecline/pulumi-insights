"use strict";
// Copyright 2016-2024, Pulumi Corporation.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//
// ------------------------------- WARNING -------------------------------------
// This file was programmatically generated. Do not edit unless you know what
// you're doing.
// ------------------------------- WARNING -------------------------------------
Object.defineProperty(exports, "__esModule", { value: true });
exports.TopicAuthorizationRule = exports.Topic = exports.Subscription = exports.Rule = exports.QueueAuthorizationRule = exports.Queue = exports.PrivateEndpointConnection = exports.NamespaceNetworkRuleSet = exports.NamespaceAuthorizationRule = exports.Namespace = exports.MigrationConfig = exports.DisasterRecoveryConfig = void 0;
const policy_1 = require("@pulumi/policy");
const compliance_policy_manager_1 = require("@pulumi/compliance-policy-manager");
const v20230101preview_1 = require("@pulumi/azure-native/servicebus/v20230101preview");
const v20230101preview_2 = require("@pulumi/azure-native/servicebus/v20230101preview");
const v20230101preview_3 = require("@pulumi/azure-native/servicebus/v20230101preview");
const v20230101preview_4 = require("@pulumi/azure-native/servicebus/v20230101preview");
const v20230101preview_5 = require("@pulumi/azure-native/servicebus/v20230101preview");
const v20230101preview_6 = require("@pulumi/azure-native/servicebus/v20230101preview");
const v20230101preview_7 = require("@pulumi/azure-native/servicebus/v20230101preview");
const v20230101preview_8 = require("@pulumi/azure-native/servicebus/v20230101preview");
const v20230101preview_9 = require("@pulumi/azure-native/servicebus/v20230101preview");
const v20230101preview_10 = require("@pulumi/azure-native/servicebus/v20230101preview");
const v20230101preview_11 = require("@pulumi/azure-native/servicebus/v20230101preview");
const v20230101preview_12 = require("@pulumi/azure-native/servicebus/v20230101preview");
var DisasterRecoveryConfig;
(function (DisasterRecoveryConfig) {
    /**
     * Disallow the use of non-stable (Preview) Azure resouces (servicebus.v20230101preview.DisasterRecoveryConfig).
     *
     * @severity medium
     * @frameworks none
     * @topics api, preview, unstable
     * @link https://learn.microsoft.com/en-us/rest/api/azure/
     */
    DisasterRecoveryConfig.disallowPreviewResource = compliance_policy_manager_1.policyManager.registerPolicy({
        resourceValidationPolicy: {
            name: "azurenative-servicebus-v20230101preview-disasterrecoveryconfig-disallow-preview-resource",
            description: "Disallow the use of non-stable (Preview) Azure resouces (servicebus.v20230101preview.DisasterRecoveryConfig).",
            configSchema: compliance_policy_manager_1.policyManager.policyConfigSchema,
            enforcementLevel: "advisory",
            validateResource: (0, policy_1.validateResourceOfType)(v20230101preview_1.DisasterRecoveryConfig, (_, args, reportViolation) => {
                if (!compliance_policy_manager_1.policyManager.shouldEvalPolicy(args)) {
                    return;
                }
                reportViolation("Azure DisasterRecoveryConfig shouldn't use an unstable API (servicebus.v20230101preview.DisasterRecoveryConfig). A compatible replacement can be found at 'servicebus.DisasterRecoveryConfig'.");
            }),
        },
        vendors: ["azure"],
        services: ["servicebus"],
        severity: "medium",
        topics: ["api", "unstable", "preview"],
    });
})(DisasterRecoveryConfig || (DisasterRecoveryConfig = {}));
exports.DisasterRecoveryConfig = DisasterRecoveryConfig;
var MigrationConfig;
(function (MigrationConfig) {
    /**
     * Disallow the use of non-stable (Preview) Azure resouces (servicebus.v20230101preview.MigrationConfig).
     *
     * @severity medium
     * @frameworks none
     * @topics api, preview, unstable
     * @link https://learn.microsoft.com/en-us/rest/api/azure/
     */
    MigrationConfig.disallowPreviewResource = compliance_policy_manager_1.policyManager.registerPolicy({
        resourceValidationPolicy: {
            name: "azurenative-servicebus-v20230101preview-migrationconfig-disallow-preview-resource",
            description: "Disallow the use of non-stable (Preview) Azure resouces (servicebus.v20230101preview.MigrationConfig).",
            configSchema: compliance_policy_manager_1.policyManager.policyConfigSchema,
            enforcementLevel: "advisory",
            validateResource: (0, policy_1.validateResourceOfType)(v20230101preview_2.MigrationConfig, (_, args, reportViolation) => {
                if (!compliance_policy_manager_1.policyManager.shouldEvalPolicy(args)) {
                    return;
                }
                reportViolation("Azure MigrationConfig shouldn't use an unstable API (servicebus.v20230101preview.MigrationConfig). A compatible replacement can be found at 'servicebus.MigrationConfig'.");
            }),
        },
        vendors: ["azure"],
        services: ["servicebus"],
        severity: "medium",
        topics: ["api", "unstable", "preview"],
    });
})(MigrationConfig || (MigrationConfig = {}));
exports.MigrationConfig = MigrationConfig;
var Namespace;
(function (Namespace) {
    /**
     * Disallow the use of non-stable (Preview) Azure resouces (servicebus.v20230101preview.Namespace).
     *
     * @severity medium
     * @frameworks none
     * @topics api, preview, unstable
     * @link https://learn.microsoft.com/en-us/rest/api/azure/
     */
    Namespace.disallowPreviewResource = compliance_policy_manager_1.policyManager.registerPolicy({
        resourceValidationPolicy: {
            name: "azurenative-servicebus-v20230101preview-namespace-disallow-preview-resource",
            description: "Disallow the use of non-stable (Preview) Azure resouces (servicebus.v20230101preview.Namespace).",
            configSchema: compliance_policy_manager_1.policyManager.policyConfigSchema,
            enforcementLevel: "advisory",
            validateResource: (0, policy_1.validateResourceOfType)(v20230101preview_3.Namespace, (_, args, reportViolation) => {
                if (!compliance_policy_manager_1.policyManager.shouldEvalPolicy(args)) {
                    return;
                }
                reportViolation("Azure Namespace shouldn't use an unstable API (servicebus.v20230101preview.Namespace). A compatible replacement can be found at 'servicebus.Namespace'.");
            }),
        },
        vendors: ["azure"],
        services: ["servicebus"],
        severity: "medium",
        topics: ["api", "unstable", "preview"],
    });
})(Namespace || (Namespace = {}));
exports.Namespace = Namespace;
var NamespaceAuthorizationRule;
(function (NamespaceAuthorizationRule) {
    /**
     * Disallow the use of non-stable (Preview) Azure resouces (servicebus.v20230101preview.NamespaceAuthorizationRule).
     *
     * @severity medium
     * @frameworks none
     * @topics api, preview, unstable
     * @link https://learn.microsoft.com/en-us/rest/api/azure/
     */
    NamespaceAuthorizationRule.disallowPreviewResource = compliance_policy_manager_1.policyManager.registerPolicy({
        resourceValidationPolicy: {
            name: "azurenative-servicebus-v20230101preview-namespaceauthorizationrule-disallow-preview-resource",
            description: "Disallow the use of non-stable (Preview) Azure resouces (servicebus.v20230101preview.NamespaceAuthorizationRule).",
            configSchema: compliance_policy_manager_1.policyManager.policyConfigSchema,
            enforcementLevel: "advisory",
            validateResource: (0, policy_1.validateResourceOfType)(v20230101preview_4.NamespaceAuthorizationRule, (_, args, reportViolation) => {
                if (!compliance_policy_manager_1.policyManager.shouldEvalPolicy(args)) {
                    return;
                }
                reportViolation("Azure NamespaceAuthorizationRule shouldn't use an unstable API (servicebus.v20230101preview.NamespaceAuthorizationRule). A compatible replacement can be found at 'servicebus.NamespaceAuthorizationRule'.");
            }),
        },
        vendors: ["azure"],
        services: ["servicebus"],
        severity: "medium",
        topics: ["api", "unstable", "preview"],
    });
})(NamespaceAuthorizationRule || (NamespaceAuthorizationRule = {}));
exports.NamespaceAuthorizationRule = NamespaceAuthorizationRule;
var NamespaceNetworkRuleSet;
(function (NamespaceNetworkRuleSet) {
    /**
     * Disallow the use of non-stable (Preview) Azure resouces (servicebus.v20230101preview.NamespaceNetworkRuleSet).
     *
     * @severity medium
     * @frameworks none
     * @topics api, preview, unstable
     * @link https://learn.microsoft.com/en-us/rest/api/azure/
     */
    NamespaceNetworkRuleSet.disallowPreviewResource = compliance_policy_manager_1.policyManager.registerPolicy({
        resourceValidationPolicy: {
            name: "azurenative-servicebus-v20230101preview-namespacenetworkruleset-disallow-preview-resource",
            description: "Disallow the use of non-stable (Preview) Azure resouces (servicebus.v20230101preview.NamespaceNetworkRuleSet).",
            configSchema: compliance_policy_manager_1.policyManager.policyConfigSchema,
            enforcementLevel: "advisory",
            validateResource: (0, policy_1.validateResourceOfType)(v20230101preview_5.NamespaceNetworkRuleSet, (_, args, reportViolation) => {
                if (!compliance_policy_manager_1.policyManager.shouldEvalPolicy(args)) {
                    return;
                }
                reportViolation("Azure NamespaceNetworkRuleSet shouldn't use an unstable API (servicebus.v20230101preview.NamespaceNetworkRuleSet). A compatible replacement can be found at 'servicebus.NamespaceNetworkRuleSet'.");
            }),
        },
        vendors: ["azure"],
        services: ["servicebus"],
        severity: "medium",
        topics: ["api", "unstable", "preview"],
    });
})(NamespaceNetworkRuleSet || (NamespaceNetworkRuleSet = {}));
exports.NamespaceNetworkRuleSet = NamespaceNetworkRuleSet;
var PrivateEndpointConnection;
(function (PrivateEndpointConnection) {
    /**
     * Disallow the use of non-stable (Preview) Azure resouces (servicebus.v20230101preview.PrivateEndpointConnection).
     *
     * @severity medium
     * @frameworks none
     * @topics api, preview, unstable
     * @link https://learn.microsoft.com/en-us/rest/api/azure/
     */
    PrivateEndpointConnection.disallowPreviewResource = compliance_policy_manager_1.policyManager.registerPolicy({
        resourceValidationPolicy: {
            name: "azurenative-servicebus-v20230101preview-privateendpointconnection-disallow-preview-resource",
            description: "Disallow the use of non-stable (Preview) Azure resouces (servicebus.v20230101preview.PrivateEndpointConnection).",
            configSchema: compliance_policy_manager_1.policyManager.policyConfigSchema,
            enforcementLevel: "advisory",
            validateResource: (0, policy_1.validateResourceOfType)(v20230101preview_6.PrivateEndpointConnection, (_, args, reportViolation) => {
                if (!compliance_policy_manager_1.policyManager.shouldEvalPolicy(args)) {
                    return;
                }
                reportViolation("Azure PrivateEndpointConnection shouldn't use an unstable API (servicebus.v20230101preview.PrivateEndpointConnection). A compatible replacement can be found at 'servicebus.PrivateEndpointConnection'.");
            }),
        },
        vendors: ["azure"],
        services: ["servicebus"],
        severity: "medium",
        topics: ["api", "unstable", "preview"],
    });
})(PrivateEndpointConnection || (PrivateEndpointConnection = {}));
exports.PrivateEndpointConnection = PrivateEndpointConnection;
var Queue;
(function (Queue) {
    /**
     * Disallow the use of non-stable (Preview) Azure resouces (servicebus.v20230101preview.Queue).
     *
     * @severity medium
     * @frameworks none
     * @topics api, preview, unstable
     * @link https://learn.microsoft.com/en-us/rest/api/azure/
     */
    Queue.disallowPreviewResource = compliance_policy_manager_1.policyManager.registerPolicy({
        resourceValidationPolicy: {
            name: "azurenative-servicebus-v20230101preview-queue-disallow-preview-resource",
            description: "Disallow the use of non-stable (Preview) Azure resouces (servicebus.v20230101preview.Queue).",
            configSchema: compliance_policy_manager_1.policyManager.policyConfigSchema,
            enforcementLevel: "advisory",
            validateResource: (0, policy_1.validateResourceOfType)(v20230101preview_7.Queue, (_, args, reportViolation) => {
                if (!compliance_policy_manager_1.policyManager.shouldEvalPolicy(args)) {
                    return;
                }
                reportViolation("Azure Queue shouldn't use an unstable API (servicebus.v20230101preview.Queue). A compatible replacement can be found at 'servicebus.Queue'.");
            }),
        },
        vendors: ["azure"],
        services: ["servicebus"],
        severity: "medium",
        topics: ["api", "unstable", "preview"],
    });
})(Queue || (Queue = {}));
exports.Queue = Queue;
var QueueAuthorizationRule;
(function (QueueAuthorizationRule) {
    /**
     * Disallow the use of non-stable (Preview) Azure resouces (servicebus.v20230101preview.QueueAuthorizationRule).
     *
     * @severity medium
     * @frameworks none
     * @topics api, preview, unstable
     * @link https://learn.microsoft.com/en-us/rest/api/azure/
     */
    QueueAuthorizationRule.disallowPreviewResource = compliance_policy_manager_1.policyManager.registerPolicy({
        resourceValidationPolicy: {
            name: "azurenative-servicebus-v20230101preview-queueauthorizationrule-disallow-preview-resource",
            description: "Disallow the use of non-stable (Preview) Azure resouces (servicebus.v20230101preview.QueueAuthorizationRule).",
            configSchema: compliance_policy_manager_1.policyManager.policyConfigSchema,
            enforcementLevel: "advisory",
            validateResource: (0, policy_1.validateResourceOfType)(v20230101preview_8.QueueAuthorizationRule, (_, args, reportViolation) => {
                if (!compliance_policy_manager_1.policyManager.shouldEvalPolicy(args)) {
                    return;
                }
                reportViolation("Azure QueueAuthorizationRule shouldn't use an unstable API (servicebus.v20230101preview.QueueAuthorizationRule). A compatible replacement can be found at 'servicebus.QueueAuthorizationRule'.");
            }),
        },
        vendors: ["azure"],
        services: ["servicebus"],
        severity: "medium",
        topics: ["api", "unstable", "preview"],
    });
})(QueueAuthorizationRule || (QueueAuthorizationRule = {}));
exports.QueueAuthorizationRule = QueueAuthorizationRule;
var Rule;
(function (Rule) {
    /**
     * Disallow the use of non-stable (Preview) Azure resouces (servicebus.v20230101preview.Rule).
     *
     * @severity medium
     * @frameworks none
     * @topics api, preview, unstable
     * @link https://learn.microsoft.com/en-us/rest/api/azure/
     */
    Rule.disallowPreviewResource = compliance_policy_manager_1.policyManager.registerPolicy({
        resourceValidationPolicy: {
            name: "azurenative-servicebus-v20230101preview-rule-disallow-preview-resource",
            description: "Disallow the use of non-stable (Preview) Azure resouces (servicebus.v20230101preview.Rule).",
            configSchema: compliance_policy_manager_1.policyManager.policyConfigSchema,
            enforcementLevel: "advisory",
            validateResource: (0, policy_1.validateResourceOfType)(v20230101preview_9.Rule, (_, args, reportViolation) => {
                if (!compliance_policy_manager_1.policyManager.shouldEvalPolicy(args)) {
                    return;
                }
                reportViolation("Azure Rule shouldn't use an unstable API (servicebus.v20230101preview.Rule). A compatible replacement can be found at 'servicebus.Rule'.");
            }),
        },
        vendors: ["azure"],
        services: ["servicebus"],
        severity: "medium",
        topics: ["api", "unstable", "preview"],
    });
})(Rule || (Rule = {}));
exports.Rule = Rule;
var Subscription;
(function (Subscription) {
    /**
     * Disallow the use of non-stable (Preview) Azure resouces (servicebus.v20230101preview.Subscription).
     *
     * @severity medium
     * @frameworks none
     * @topics api, preview, unstable
     * @link https://learn.microsoft.com/en-us/rest/api/azure/
     */
    Subscription.disallowPreviewResource = compliance_policy_manager_1.policyManager.registerPolicy({
        resourceValidationPolicy: {
            name: "azurenative-servicebus-v20230101preview-subscription-disallow-preview-resource",
            description: "Disallow the use of non-stable (Preview) Azure resouces (servicebus.v20230101preview.Subscription).",
            configSchema: compliance_policy_manager_1.policyManager.policyConfigSchema,
            enforcementLevel: "advisory",
            validateResource: (0, policy_1.validateResourceOfType)(v20230101preview_10.Subscription, (_, args, reportViolation) => {
                if (!compliance_policy_manager_1.policyManager.shouldEvalPolicy(args)) {
                    return;
                }
                reportViolation("Azure Subscription shouldn't use an unstable API (servicebus.v20230101preview.Subscription). A compatible replacement can be found at 'servicebus.Subscription'.");
            }),
        },
        vendors: ["azure"],
        services: ["servicebus"],
        severity: "medium",
        topics: ["api", "unstable", "preview"],
    });
})(Subscription || (Subscription = {}));
exports.Subscription = Subscription;
var Topic;
(function (Topic) {
    /**
     * Disallow the use of non-stable (Preview) Azure resouces (servicebus.v20230101preview.Topic).
     *
     * @severity medium
     * @frameworks none
     * @topics api, preview, unstable
     * @link https://learn.microsoft.com/en-us/rest/api/azure/
     */
    Topic.disallowPreviewResource = compliance_policy_manager_1.policyManager.registerPolicy({
        resourceValidationPolicy: {
            name: "azurenative-servicebus-v20230101preview-topic-disallow-preview-resource",
            description: "Disallow the use of non-stable (Preview) Azure resouces (servicebus.v20230101preview.Topic).",
            configSchema: compliance_policy_manager_1.policyManager.policyConfigSchema,
            enforcementLevel: "advisory",
            validateResource: (0, policy_1.validateResourceOfType)(v20230101preview_11.Topic, (_, args, reportViolation) => {
                if (!compliance_policy_manager_1.policyManager.shouldEvalPolicy(args)) {
                    return;
                }
                reportViolation("Azure Topic shouldn't use an unstable API (servicebus.v20230101preview.Topic). A compatible replacement can be found at 'servicebus.Topic'.");
            }),
        },
        vendors: ["azure"],
        services: ["servicebus"],
        severity: "medium",
        topics: ["api", "unstable", "preview"],
    });
})(Topic || (Topic = {}));
exports.Topic = Topic;
var TopicAuthorizationRule;
(function (TopicAuthorizationRule) {
    /**
     * Disallow the use of non-stable (Preview) Azure resouces (servicebus.v20230101preview.TopicAuthorizationRule).
     *
     * @severity medium
     * @frameworks none
     * @topics api, preview, unstable
     * @link https://learn.microsoft.com/en-us/rest/api/azure/
     */
    TopicAuthorizationRule.disallowPreviewResource = compliance_policy_manager_1.policyManager.registerPolicy({
        resourceValidationPolicy: {
            name: "azurenative-servicebus-v20230101preview-topicauthorizationrule-disallow-preview-resource",
            description: "Disallow the use of non-stable (Preview) Azure resouces (servicebus.v20230101preview.TopicAuthorizationRule).",
            configSchema: compliance_policy_manager_1.policyManager.policyConfigSchema,
            enforcementLevel: "advisory",
            validateResource: (0, policy_1.validateResourceOfType)(v20230101preview_12.TopicAuthorizationRule, (_, args, reportViolation) => {
                if (!compliance_policy_manager_1.policyManager.shouldEvalPolicy(args)) {
                    return;
                }
                reportViolation("Azure TopicAuthorizationRule shouldn't use an unstable API (servicebus.v20230101preview.TopicAuthorizationRule). A compatible replacement can be found at 'servicebus.TopicAuthorizationRule'.");
            }),
        },
        vendors: ["azure"],
        services: ["servicebus"],
        severity: "medium",
        topics: ["api", "unstable", "preview"],
    });
})(TopicAuthorizationRule || (TopicAuthorizationRule = {}));
exports.TopicAuthorizationRule = TopicAuthorizationRule;
