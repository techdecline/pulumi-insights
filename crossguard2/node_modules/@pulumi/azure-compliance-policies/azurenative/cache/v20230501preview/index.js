"use strict";
// Copyright 2016-2024, Pulumi Corporation.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//
// ------------------------------- WARNING -------------------------------------
// This file was programmatically generated. Do not edit unless you know what
// you're doing.
// ------------------------------- WARNING -------------------------------------
Object.defineProperty(exports, "__esModule", { value: true });
exports.Redis = exports.PrivateEndpointConnection = exports.PatchSchedule = exports.LinkedServer = exports.FirewallRule = exports.AccessPolicyAssignment = exports.AccessPolicy = void 0;
const policy_1 = require("@pulumi/policy");
const compliance_policy_manager_1 = require("@pulumi/compliance-policy-manager");
const v20230501preview_1 = require("@pulumi/azure-native/cache/v20230501preview");
const v20230501preview_2 = require("@pulumi/azure-native/cache/v20230501preview");
const v20230501preview_3 = require("@pulumi/azure-native/cache/v20230501preview");
const v20230501preview_4 = require("@pulumi/azure-native/cache/v20230501preview");
const v20230501preview_5 = require("@pulumi/azure-native/cache/v20230501preview");
const v20230501preview_6 = require("@pulumi/azure-native/cache/v20230501preview");
const v20230501preview_7 = require("@pulumi/azure-native/cache/v20230501preview");
var AccessPolicy;
(function (AccessPolicy) {
    /**
     * Disallow the use of non-stable (Preview) Azure resouces (cache.v20230501preview.AccessPolicy).
     *
     * @severity medium
     * @frameworks none
     * @topics api, preview, unstable
     * @link https://learn.microsoft.com/en-us/rest/api/azure/
     */
    AccessPolicy.disallowPreviewResource = compliance_policy_manager_1.policyManager.registerPolicy({
        resourceValidationPolicy: {
            name: "azurenative-cache-v20230501preview-accesspolicy-disallow-preview-resource",
            description: "Disallow the use of non-stable (Preview) Azure resouces (cache.v20230501preview.AccessPolicy).",
            configSchema: compliance_policy_manager_1.policyManager.policyConfigSchema,
            enforcementLevel: "advisory",
            validateResource: (0, policy_1.validateResourceOfType)(v20230501preview_1.AccessPolicy, (_, args, reportViolation) => {
                if (!compliance_policy_manager_1.policyManager.shouldEvalPolicy(args)) {
                    return;
                }
                reportViolation("Azure AccessPolicy shouldn't use an unstable API (cache.v20230501preview.AccessPolicy). A compatible replacement can be found at 'cache.AccessPolicy'.");
            }),
        },
        vendors: ["azure"],
        services: ["cache"],
        severity: "medium",
        topics: ["api", "unstable", "preview"],
    });
})(AccessPolicy || (AccessPolicy = {}));
exports.AccessPolicy = AccessPolicy;
var AccessPolicyAssignment;
(function (AccessPolicyAssignment) {
    /**
     * Disallow the use of non-stable (Preview) Azure resouces (cache.v20230501preview.AccessPolicyAssignment).
     *
     * @severity medium
     * @frameworks none
     * @topics api, preview, unstable
     * @link https://learn.microsoft.com/en-us/rest/api/azure/
     */
    AccessPolicyAssignment.disallowPreviewResource = compliance_policy_manager_1.policyManager.registerPolicy({
        resourceValidationPolicy: {
            name: "azurenative-cache-v20230501preview-accesspolicyassignment-disallow-preview-resource",
            description: "Disallow the use of non-stable (Preview) Azure resouces (cache.v20230501preview.AccessPolicyAssignment).",
            configSchema: compliance_policy_manager_1.policyManager.policyConfigSchema,
            enforcementLevel: "advisory",
            validateResource: (0, policy_1.validateResourceOfType)(v20230501preview_2.AccessPolicyAssignment, (_, args, reportViolation) => {
                if (!compliance_policy_manager_1.policyManager.shouldEvalPolicy(args)) {
                    return;
                }
                reportViolation("Azure AccessPolicyAssignment shouldn't use an unstable API (cache.v20230501preview.AccessPolicyAssignment). A compatible replacement can be found at 'cache.AccessPolicyAssignment'.");
            }),
        },
        vendors: ["azure"],
        services: ["cache"],
        severity: "medium",
        topics: ["api", "unstable", "preview"],
    });
})(AccessPolicyAssignment || (AccessPolicyAssignment = {}));
exports.AccessPolicyAssignment = AccessPolicyAssignment;
var FirewallRule;
(function (FirewallRule) {
    /**
     * Disallow the use of non-stable (Preview) Azure resouces (cache.v20230501preview.FirewallRule).
     *
     * @severity medium
     * @frameworks none
     * @topics api, preview, unstable
     * @link https://learn.microsoft.com/en-us/rest/api/azure/
     */
    FirewallRule.disallowPreviewResource = compliance_policy_manager_1.policyManager.registerPolicy({
        resourceValidationPolicy: {
            name: "azurenative-cache-v20230501preview-firewallrule-disallow-preview-resource",
            description: "Disallow the use of non-stable (Preview) Azure resouces (cache.v20230501preview.FirewallRule).",
            configSchema: compliance_policy_manager_1.policyManager.policyConfigSchema,
            enforcementLevel: "advisory",
            validateResource: (0, policy_1.validateResourceOfType)(v20230501preview_3.FirewallRule, (_, args, reportViolation) => {
                if (!compliance_policy_manager_1.policyManager.shouldEvalPolicy(args)) {
                    return;
                }
                reportViolation("Azure FirewallRule shouldn't use an unstable API (cache.v20230501preview.FirewallRule). A compatible replacement can be found at 'cache.FirewallRule'.");
            }),
        },
        vendors: ["azure"],
        services: ["cache"],
        severity: "medium",
        topics: ["api", "unstable", "preview"],
    });
})(FirewallRule || (FirewallRule = {}));
exports.FirewallRule = FirewallRule;
var LinkedServer;
(function (LinkedServer) {
    /**
     * Disallow the use of non-stable (Preview) Azure resouces (cache.v20230501preview.LinkedServer).
     *
     * @severity medium
     * @frameworks none
     * @topics api, preview, unstable
     * @link https://learn.microsoft.com/en-us/rest/api/azure/
     */
    LinkedServer.disallowPreviewResource = compliance_policy_manager_1.policyManager.registerPolicy({
        resourceValidationPolicy: {
            name: "azurenative-cache-v20230501preview-linkedserver-disallow-preview-resource",
            description: "Disallow the use of non-stable (Preview) Azure resouces (cache.v20230501preview.LinkedServer).",
            configSchema: compliance_policy_manager_1.policyManager.policyConfigSchema,
            enforcementLevel: "advisory",
            validateResource: (0, policy_1.validateResourceOfType)(v20230501preview_4.LinkedServer, (_, args, reportViolation) => {
                if (!compliance_policy_manager_1.policyManager.shouldEvalPolicy(args)) {
                    return;
                }
                reportViolation("Azure LinkedServer shouldn't use an unstable API (cache.v20230501preview.LinkedServer). A compatible replacement can be found at 'cache.LinkedServer'.");
            }),
        },
        vendors: ["azure"],
        services: ["cache"],
        severity: "medium",
        topics: ["api", "unstable", "preview"],
    });
})(LinkedServer || (LinkedServer = {}));
exports.LinkedServer = LinkedServer;
var PatchSchedule;
(function (PatchSchedule) {
    /**
     * Disallow the use of non-stable (Preview) Azure resouces (cache.v20230501preview.PatchSchedule).
     *
     * @severity medium
     * @frameworks none
     * @topics api, preview, unstable
     * @link https://learn.microsoft.com/en-us/rest/api/azure/
     */
    PatchSchedule.disallowPreviewResource = compliance_policy_manager_1.policyManager.registerPolicy({
        resourceValidationPolicy: {
            name: "azurenative-cache-v20230501preview-patchschedule-disallow-preview-resource",
            description: "Disallow the use of non-stable (Preview) Azure resouces (cache.v20230501preview.PatchSchedule).",
            configSchema: compliance_policy_manager_1.policyManager.policyConfigSchema,
            enforcementLevel: "advisory",
            validateResource: (0, policy_1.validateResourceOfType)(v20230501preview_5.PatchSchedule, (_, args, reportViolation) => {
                if (!compliance_policy_manager_1.policyManager.shouldEvalPolicy(args)) {
                    return;
                }
                reportViolation("Azure PatchSchedule shouldn't use an unstable API (cache.v20230501preview.PatchSchedule). A compatible replacement can be found at 'cache.PatchSchedule'.");
            }),
        },
        vendors: ["azure"],
        services: ["cache"],
        severity: "medium",
        topics: ["api", "unstable", "preview"],
    });
})(PatchSchedule || (PatchSchedule = {}));
exports.PatchSchedule = PatchSchedule;
var PrivateEndpointConnection;
(function (PrivateEndpointConnection) {
    /**
     * Disallow the use of non-stable (Preview) Azure resouces (cache.v20230501preview.PrivateEndpointConnection).
     *
     * @severity medium
     * @frameworks none
     * @topics api, preview, unstable
     * @link https://learn.microsoft.com/en-us/rest/api/azure/
     */
    PrivateEndpointConnection.disallowPreviewResource = compliance_policy_manager_1.policyManager.registerPolicy({
        resourceValidationPolicy: {
            name: "azurenative-cache-v20230501preview-privateendpointconnection-disallow-preview-resource",
            description: "Disallow the use of non-stable (Preview) Azure resouces (cache.v20230501preview.PrivateEndpointConnection).",
            configSchema: compliance_policy_manager_1.policyManager.policyConfigSchema,
            enforcementLevel: "advisory",
            validateResource: (0, policy_1.validateResourceOfType)(v20230501preview_6.PrivateEndpointConnection, (_, args, reportViolation) => {
                if (!compliance_policy_manager_1.policyManager.shouldEvalPolicy(args)) {
                    return;
                }
                reportViolation("Azure PrivateEndpointConnection shouldn't use an unstable API (cache.v20230501preview.PrivateEndpointConnection). A compatible replacement can be found at 'cache.PrivateEndpointConnection'.");
            }),
        },
        vendors: ["azure"],
        services: ["cache"],
        severity: "medium",
        topics: ["api", "unstable", "preview"],
    });
})(PrivateEndpointConnection || (PrivateEndpointConnection = {}));
exports.PrivateEndpointConnection = PrivateEndpointConnection;
var Redis;
(function (Redis) {
    /**
     * Disallow the use of non-stable (Preview) Azure resouces (cache.v20230501preview.Redis).
     *
     * @severity medium
     * @frameworks none
     * @topics api, preview, unstable
     * @link https://learn.microsoft.com/en-us/rest/api/azure/
     */
    Redis.disallowPreviewResource = compliance_policy_manager_1.policyManager.registerPolicy({
        resourceValidationPolicy: {
            name: "azurenative-cache-v20230501preview-redis-disallow-preview-resource",
            description: "Disallow the use of non-stable (Preview) Azure resouces (cache.v20230501preview.Redis).",
            configSchema: compliance_policy_manager_1.policyManager.policyConfigSchema,
            enforcementLevel: "advisory",
            validateResource: (0, policy_1.validateResourceOfType)(v20230501preview_7.Redis, (_, args, reportViolation) => {
                if (!compliance_policy_manager_1.policyManager.shouldEvalPolicy(args)) {
                    return;
                }
                reportViolation("Azure Redis shouldn't use an unstable API (cache.v20230501preview.Redis). A compatible replacement can be found at 'cache.Redis'.");
            }),
        },
        vendors: ["azure"],
        services: ["cache"],
        severity: "medium",
        topics: ["api", "unstable", "preview"],
    });
})(Redis || (Redis = {}));
exports.Redis = Redis;
