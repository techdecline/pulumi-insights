"use strict";
// Copyright 2016-2024, Pulumi Corporation.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//
// ------------------------------- WARNING -------------------------------------
// This file was programmatically generated. Do not edit unless you know what
// you're doing.
// ------------------------------- WARNING -------------------------------------
Object.defineProperty(exports, "__esModule", { value: true });
exports.VmmServer = exports.VirtualNetwork = exports.VirtualMachineTemplate = exports.VirtualMachine = exports.MachineExtension = exports.InventoryItem = exports.HybridIdentityMetadata = exports.GuestAgent = exports.Cloud = exports.AvailabilitySet = void 0;
const policy_1 = require("@pulumi/policy");
const compliance_policy_manager_1 = require("@pulumi/compliance-policy-manager");
const v20220521preview_1 = require("@pulumi/azure-native/scvmm/v20220521preview");
const v20220521preview_2 = require("@pulumi/azure-native/scvmm/v20220521preview");
const v20220521preview_3 = require("@pulumi/azure-native/scvmm/v20220521preview");
const v20220521preview_4 = require("@pulumi/azure-native/scvmm/v20220521preview");
const v20220521preview_5 = require("@pulumi/azure-native/scvmm/v20220521preview");
const v20220521preview_6 = require("@pulumi/azure-native/scvmm/v20220521preview");
const v20220521preview_7 = require("@pulumi/azure-native/scvmm/v20220521preview");
const v20220521preview_8 = require("@pulumi/azure-native/scvmm/v20220521preview");
const v20220521preview_9 = require("@pulumi/azure-native/scvmm/v20220521preview");
const v20220521preview_10 = require("@pulumi/azure-native/scvmm/v20220521preview");
var AvailabilitySet;
(function (AvailabilitySet) {
    /**
     * Disallow the use of non-stable (Preview) Azure resouces (scvmm.v20220521preview.AvailabilitySet).
     *
     * @severity medium
     * @frameworks none
     * @topics api, preview, unstable
     * @link https://learn.microsoft.com/en-us/rest/api/azure/
     */
    AvailabilitySet.disallowPreviewResource = compliance_policy_manager_1.policyManager.registerPolicy({
        resourceValidationPolicy: {
            name: "azurenative-scvmm-v20220521preview-availabilityset-disallow-preview-resource",
            description: "Disallow the use of non-stable (Preview) Azure resouces (scvmm.v20220521preview.AvailabilitySet).",
            configSchema: compliance_policy_manager_1.policyManager.policyConfigSchema,
            enforcementLevel: "advisory",
            validateResource: (0, policy_1.validateResourceOfType)(v20220521preview_1.AvailabilitySet, (_, args, reportViolation) => {
                if (!compliance_policy_manager_1.policyManager.shouldEvalPolicy(args)) {
                    return;
                }
                reportViolation("Azure AvailabilitySet shouldn't use an unstable API (scvmm.v20220521preview.AvailabilitySet). A compatible replacement can be found at 'scvmm.AvailabilitySet'.");
            }),
        },
        vendors: ["azure"],
        services: ["scvmm"],
        severity: "medium",
        topics: ["api", "unstable", "preview"],
    });
})(AvailabilitySet || (AvailabilitySet = {}));
exports.AvailabilitySet = AvailabilitySet;
var Cloud;
(function (Cloud) {
    /**
     * Disallow the use of non-stable (Preview) Azure resouces (scvmm.v20220521preview.Cloud).
     *
     * @severity medium
     * @frameworks none
     * @topics api, preview, unstable
     * @link https://learn.microsoft.com/en-us/rest/api/azure/
     */
    Cloud.disallowPreviewResource = compliance_policy_manager_1.policyManager.registerPolicy({
        resourceValidationPolicy: {
            name: "azurenative-scvmm-v20220521preview-cloud-disallow-preview-resource",
            description: "Disallow the use of non-stable (Preview) Azure resouces (scvmm.v20220521preview.Cloud).",
            configSchema: compliance_policy_manager_1.policyManager.policyConfigSchema,
            enforcementLevel: "advisory",
            validateResource: (0, policy_1.validateResourceOfType)(v20220521preview_2.Cloud, (_, args, reportViolation) => {
                if (!compliance_policy_manager_1.policyManager.shouldEvalPolicy(args)) {
                    return;
                }
                reportViolation("Azure Cloud shouldn't use an unstable API (scvmm.v20220521preview.Cloud). A compatible replacement can be found at 'scvmm.Cloud'.");
            }),
        },
        vendors: ["azure"],
        services: ["scvmm"],
        severity: "medium",
        topics: ["api", "unstable", "preview"],
    });
})(Cloud || (Cloud = {}));
exports.Cloud = Cloud;
var GuestAgent;
(function (GuestAgent) {
    /**
     * Disallow the use of non-stable (Preview) Azure resouces (scvmm.v20220521preview.GuestAgent).
     *
     * @severity medium
     * @frameworks none
     * @topics api, preview, unstable
     * @link https://learn.microsoft.com/en-us/rest/api/azure/
     */
    GuestAgent.disallowPreviewResource = compliance_policy_manager_1.policyManager.registerPolicy({
        resourceValidationPolicy: {
            name: "azurenative-scvmm-v20220521preview-guestagent-disallow-preview-resource",
            description: "Disallow the use of non-stable (Preview) Azure resouces (scvmm.v20220521preview.GuestAgent).",
            configSchema: compliance_policy_manager_1.policyManager.policyConfigSchema,
            enforcementLevel: "advisory",
            validateResource: (0, policy_1.validateResourceOfType)(v20220521preview_3.GuestAgent, (_, args, reportViolation) => {
                if (!compliance_policy_manager_1.policyManager.shouldEvalPolicy(args)) {
                    return;
                }
                reportViolation("Azure GuestAgent shouldn't use an unstable API (scvmm.v20220521preview.GuestAgent). A compatible replacement can be found at 'scvmm.GuestAgent'.");
            }),
        },
        vendors: ["azure"],
        services: ["scvmm"],
        severity: "medium",
        topics: ["api", "unstable", "preview"],
    });
})(GuestAgent || (GuestAgent = {}));
exports.GuestAgent = GuestAgent;
var HybridIdentityMetadata;
(function (HybridIdentityMetadata) {
    /**
     * Disallow the use of non-stable (Preview) Azure resouces (scvmm.v20220521preview.HybridIdentityMetadata).
     *
     * @severity medium
     * @frameworks none
     * @topics api, preview, unstable
     * @link https://learn.microsoft.com/en-us/rest/api/azure/
     */
    HybridIdentityMetadata.disallowPreviewResource = compliance_policy_manager_1.policyManager.registerPolicy({
        resourceValidationPolicy: {
            name: "azurenative-scvmm-v20220521preview-hybrididentitymetadata-disallow-preview-resource",
            description: "Disallow the use of non-stable (Preview) Azure resouces (scvmm.v20220521preview.HybridIdentityMetadata).",
            configSchema: compliance_policy_manager_1.policyManager.policyConfigSchema,
            enforcementLevel: "advisory",
            validateResource: (0, policy_1.validateResourceOfType)(v20220521preview_4.HybridIdentityMetadata, (_, args, reportViolation) => {
                if (!compliance_policy_manager_1.policyManager.shouldEvalPolicy(args)) {
                    return;
                }
                reportViolation("Azure HybridIdentityMetadata shouldn't use an unstable API (scvmm.v20220521preview.HybridIdentityMetadata). A compatible replacement can be found at 'scvmm.HybridIdentityMetadata'.");
            }),
        },
        vendors: ["azure"],
        services: ["scvmm"],
        severity: "medium",
        topics: ["api", "unstable", "preview"],
    });
})(HybridIdentityMetadata || (HybridIdentityMetadata = {}));
exports.HybridIdentityMetadata = HybridIdentityMetadata;
var InventoryItem;
(function (InventoryItem) {
    /**
     * Disallow the use of non-stable (Preview) Azure resouces (scvmm.v20220521preview.InventoryItem).
     *
     * @severity medium
     * @frameworks none
     * @topics api, preview, unstable
     * @link https://learn.microsoft.com/en-us/rest/api/azure/
     */
    InventoryItem.disallowPreviewResource = compliance_policy_manager_1.policyManager.registerPolicy({
        resourceValidationPolicy: {
            name: "azurenative-scvmm-v20220521preview-inventoryitem-disallow-preview-resource",
            description: "Disallow the use of non-stable (Preview) Azure resouces (scvmm.v20220521preview.InventoryItem).",
            configSchema: compliance_policy_manager_1.policyManager.policyConfigSchema,
            enforcementLevel: "advisory",
            validateResource: (0, policy_1.validateResourceOfType)(v20220521preview_5.InventoryItem, (_, args, reportViolation) => {
                if (!compliance_policy_manager_1.policyManager.shouldEvalPolicy(args)) {
                    return;
                }
                reportViolation("Azure InventoryItem shouldn't use an unstable API (scvmm.v20220521preview.InventoryItem). A compatible replacement can be found at 'scvmm.InventoryItem'.");
            }),
        },
        vendors: ["azure"],
        services: ["scvmm"],
        severity: "medium",
        topics: ["api", "unstable", "preview"],
    });
})(InventoryItem || (InventoryItem = {}));
exports.InventoryItem = InventoryItem;
var MachineExtension;
(function (MachineExtension) {
    /**
     * Disallow the use of non-stable (Preview) Azure resouces (scvmm.v20220521preview.MachineExtension).
     *
     * @severity medium
     * @frameworks none
     * @topics api, preview, unstable
     * @link https://learn.microsoft.com/en-us/rest/api/azure/
     */
    MachineExtension.disallowPreviewResource = compliance_policy_manager_1.policyManager.registerPolicy({
        resourceValidationPolicy: {
            name: "azurenative-scvmm-v20220521preview-machineextension-disallow-preview-resource",
            description: "Disallow the use of non-stable (Preview) Azure resouces (scvmm.v20220521preview.MachineExtension).",
            configSchema: compliance_policy_manager_1.policyManager.policyConfigSchema,
            enforcementLevel: "advisory",
            validateResource: (0, policy_1.validateResourceOfType)(v20220521preview_6.MachineExtension, (_, args, reportViolation) => {
                if (!compliance_policy_manager_1.policyManager.shouldEvalPolicy(args)) {
                    return;
                }
                reportViolation("Azure MachineExtension shouldn't use an unstable API (scvmm.v20220521preview.MachineExtension). A compatible replacement can be found at 'scvmm.MachineExtension'.");
            }),
        },
        vendors: ["azure"],
        services: ["scvmm"],
        severity: "medium",
        topics: ["api", "unstable", "preview"],
    });
})(MachineExtension || (MachineExtension = {}));
exports.MachineExtension = MachineExtension;
var VirtualMachine;
(function (VirtualMachine) {
    /**
     * Disallow the use of non-stable (Preview) Azure resouces (scvmm.v20220521preview.VirtualMachine).
     *
     * @severity medium
     * @frameworks none
     * @topics api, preview, unstable
     * @link https://learn.microsoft.com/en-us/rest/api/azure/
     */
    VirtualMachine.disallowPreviewResource = compliance_policy_manager_1.policyManager.registerPolicy({
        resourceValidationPolicy: {
            name: "azurenative-scvmm-v20220521preview-virtualmachine-disallow-preview-resource",
            description: "Disallow the use of non-stable (Preview) Azure resouces (scvmm.v20220521preview.VirtualMachine).",
            configSchema: compliance_policy_manager_1.policyManager.policyConfigSchema,
            enforcementLevel: "advisory",
            validateResource: (0, policy_1.validateResourceOfType)(v20220521preview_7.VirtualMachine, (_, args, reportViolation) => {
                if (!compliance_policy_manager_1.policyManager.shouldEvalPolicy(args)) {
                    return;
                }
                reportViolation("Azure VirtualMachine shouldn't use an unstable API (scvmm.v20220521preview.VirtualMachine). A compatible replacement can be found at 'scvmm.VirtualMachine'.");
            }),
        },
        vendors: ["azure"],
        services: ["scvmm"],
        severity: "medium",
        topics: ["api", "unstable", "preview"],
    });
})(VirtualMachine || (VirtualMachine = {}));
exports.VirtualMachine = VirtualMachine;
var VirtualMachineTemplate;
(function (VirtualMachineTemplate) {
    /**
     * Disallow the use of non-stable (Preview) Azure resouces (scvmm.v20220521preview.VirtualMachineTemplate).
     *
     * @severity medium
     * @frameworks none
     * @topics api, preview, unstable
     * @link https://learn.microsoft.com/en-us/rest/api/azure/
     */
    VirtualMachineTemplate.disallowPreviewResource = compliance_policy_manager_1.policyManager.registerPolicy({
        resourceValidationPolicy: {
            name: "azurenative-scvmm-v20220521preview-virtualmachinetemplate-disallow-preview-resource",
            description: "Disallow the use of non-stable (Preview) Azure resouces (scvmm.v20220521preview.VirtualMachineTemplate).",
            configSchema: compliance_policy_manager_1.policyManager.policyConfigSchema,
            enforcementLevel: "advisory",
            validateResource: (0, policy_1.validateResourceOfType)(v20220521preview_8.VirtualMachineTemplate, (_, args, reportViolation) => {
                if (!compliance_policy_manager_1.policyManager.shouldEvalPolicy(args)) {
                    return;
                }
                reportViolation("Azure VirtualMachineTemplate shouldn't use an unstable API (scvmm.v20220521preview.VirtualMachineTemplate). A compatible replacement can be found at 'scvmm.VirtualMachineTemplate'.");
            }),
        },
        vendors: ["azure"],
        services: ["scvmm"],
        severity: "medium",
        topics: ["api", "unstable", "preview"],
    });
})(VirtualMachineTemplate || (VirtualMachineTemplate = {}));
exports.VirtualMachineTemplate = VirtualMachineTemplate;
var VirtualNetwork;
(function (VirtualNetwork) {
    /**
     * Disallow the use of non-stable (Preview) Azure resouces (scvmm.v20220521preview.VirtualNetwork).
     *
     * @severity medium
     * @frameworks none
     * @topics api, preview, unstable
     * @link https://learn.microsoft.com/en-us/rest/api/azure/
     */
    VirtualNetwork.disallowPreviewResource = compliance_policy_manager_1.policyManager.registerPolicy({
        resourceValidationPolicy: {
            name: "azurenative-scvmm-v20220521preview-virtualnetwork-disallow-preview-resource",
            description: "Disallow the use of non-stable (Preview) Azure resouces (scvmm.v20220521preview.VirtualNetwork).",
            configSchema: compliance_policy_manager_1.policyManager.policyConfigSchema,
            enforcementLevel: "advisory",
            validateResource: (0, policy_1.validateResourceOfType)(v20220521preview_9.VirtualNetwork, (_, args, reportViolation) => {
                if (!compliance_policy_manager_1.policyManager.shouldEvalPolicy(args)) {
                    return;
                }
                reportViolation("Azure VirtualNetwork shouldn't use an unstable API (scvmm.v20220521preview.VirtualNetwork). A compatible replacement can be found at 'scvmm.VirtualNetwork'.");
            }),
        },
        vendors: ["azure"],
        services: ["scvmm"],
        severity: "medium",
        topics: ["api", "unstable", "preview"],
    });
})(VirtualNetwork || (VirtualNetwork = {}));
exports.VirtualNetwork = VirtualNetwork;
var VmmServer;
(function (VmmServer) {
    /**
     * Disallow the use of non-stable (Preview) Azure resouces (scvmm.v20220521preview.VmmServer).
     *
     * @severity medium
     * @frameworks none
     * @topics api, preview, unstable
     * @link https://learn.microsoft.com/en-us/rest/api/azure/
     */
    VmmServer.disallowPreviewResource = compliance_policy_manager_1.policyManager.registerPolicy({
        resourceValidationPolicy: {
            name: "azurenative-scvmm-v20220521preview-vmmserver-disallow-preview-resource",
            description: "Disallow the use of non-stable (Preview) Azure resouces (scvmm.v20220521preview.VmmServer).",
            configSchema: compliance_policy_manager_1.policyManager.policyConfigSchema,
            enforcementLevel: "advisory",
            validateResource: (0, policy_1.validateResourceOfType)(v20220521preview_10.VmmServer, (_, args, reportViolation) => {
                if (!compliance_policy_manager_1.policyManager.shouldEvalPolicy(args)) {
                    return;
                }
                reportViolation("Azure VmmServer shouldn't use an unstable API (scvmm.v20220521preview.VmmServer). A compatible replacement can be found at 'scvmm.VmmServer'.");
            }),
        },
        vendors: ["azure"],
        services: ["scvmm"],
        severity: "medium",
        topics: ["api", "unstable", "preview"],
    });
})(VmmServer || (VmmServer = {}));
exports.VmmServer = VmmServer;
