"use strict";
// Copyright 2016-2024, Pulumi Corporation.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//
// ------------------------------- WARNING -------------------------------------
// This file was programmatically generated. Do not edit unless you know what
// you're doing.
// ------------------------------- WARNING -------------------------------------
Object.defineProperty(exports, "__esModule", { value: true });
exports.SyncSet = exports.SyncIdentityProvider = exports.Secret = exports.OpenShiftCluster = exports.MachinePool = void 0;
const policy_1 = require("@pulumi/policy");
const compliance_policy_manager_1 = require("@pulumi/compliance-policy-manager");
const v20230701preview_1 = require("@pulumi/azure-native/redhatopenshift/v20230701preview");
const v20230701preview_2 = require("@pulumi/azure-native/redhatopenshift/v20230701preview");
const v20230701preview_3 = require("@pulumi/azure-native/redhatopenshift/v20230701preview");
const v20230701preview_4 = require("@pulumi/azure-native/redhatopenshift/v20230701preview");
const v20230701preview_5 = require("@pulumi/azure-native/redhatopenshift/v20230701preview");
var MachinePool;
(function (MachinePool) {
    /**
     * Disallow the use of non-stable (Preview) Azure resouces (redhatopenshift.v20230701preview.MachinePool).
     *
     * @severity medium
     * @frameworks none
     * @topics api, preview, unstable
     * @link https://learn.microsoft.com/en-us/rest/api/azure/
     */
    MachinePool.disallowPreviewResource = compliance_policy_manager_1.policyManager.registerPolicy({
        resourceValidationPolicy: {
            name: "azurenative-redhatopenshift-v20230701preview-machinepool-disallow-preview-resource",
            description: "Disallow the use of non-stable (Preview) Azure resouces (redhatopenshift.v20230701preview.MachinePool).",
            configSchema: compliance_policy_manager_1.policyManager.policyConfigSchema,
            enforcementLevel: "advisory",
            validateResource: (0, policy_1.validateResourceOfType)(v20230701preview_1.MachinePool, (_, args, reportViolation) => {
                if (!compliance_policy_manager_1.policyManager.shouldEvalPolicy(args)) {
                    return;
                }
                reportViolation("Azure MachinePool shouldn't use an unstable API (redhatopenshift.v20230701preview.MachinePool). A compatible replacement can be found at 'redhatopenshift.MachinePool'.");
            }),
        },
        vendors: ["azure"],
        services: ["redhatopenshift"],
        severity: "medium",
        topics: ["api", "unstable", "preview"],
    });
})(MachinePool || (MachinePool = {}));
exports.MachinePool = MachinePool;
var OpenShiftCluster;
(function (OpenShiftCluster) {
    /**
     * Disallow the use of non-stable (Preview) Azure resouces (redhatopenshift.v20230701preview.OpenShiftCluster).
     *
     * @severity medium
     * @frameworks none
     * @topics api, preview, unstable
     * @link https://learn.microsoft.com/en-us/rest/api/azure/
     */
    OpenShiftCluster.disallowPreviewResource = compliance_policy_manager_1.policyManager.registerPolicy({
        resourceValidationPolicy: {
            name: "azurenative-redhatopenshift-v20230701preview-openshiftcluster-disallow-preview-resource",
            description: "Disallow the use of non-stable (Preview) Azure resouces (redhatopenshift.v20230701preview.OpenShiftCluster).",
            configSchema: compliance_policy_manager_1.policyManager.policyConfigSchema,
            enforcementLevel: "advisory",
            validateResource: (0, policy_1.validateResourceOfType)(v20230701preview_2.OpenShiftCluster, (_, args, reportViolation) => {
                if (!compliance_policy_manager_1.policyManager.shouldEvalPolicy(args)) {
                    return;
                }
                reportViolation("Azure OpenShiftCluster shouldn't use an unstable API (redhatopenshift.v20230701preview.OpenShiftCluster). A compatible replacement can be found at 'redhatopenshift.OpenShiftCluster'.");
            }),
        },
        vendors: ["azure"],
        services: ["redhatopenshift"],
        severity: "medium",
        topics: ["api", "unstable", "preview"],
    });
})(OpenShiftCluster || (OpenShiftCluster = {}));
exports.OpenShiftCluster = OpenShiftCluster;
var Secret;
(function (Secret) {
    /**
     * Disallow the use of non-stable (Preview) Azure resouces (redhatopenshift.v20230701preview.Secret).
     *
     * @severity medium
     * @frameworks none
     * @topics api, preview, unstable
     * @link https://learn.microsoft.com/en-us/rest/api/azure/
     */
    Secret.disallowPreviewResource = compliance_policy_manager_1.policyManager.registerPolicy({
        resourceValidationPolicy: {
            name: "azurenative-redhatopenshift-v20230701preview-secret-disallow-preview-resource",
            description: "Disallow the use of non-stable (Preview) Azure resouces (redhatopenshift.v20230701preview.Secret).",
            configSchema: compliance_policy_manager_1.policyManager.policyConfigSchema,
            enforcementLevel: "advisory",
            validateResource: (0, policy_1.validateResourceOfType)(v20230701preview_3.Secret, (_, args, reportViolation) => {
                if (!compliance_policy_manager_1.policyManager.shouldEvalPolicy(args)) {
                    return;
                }
                reportViolation("Azure Secret shouldn't use an unstable API (redhatopenshift.v20230701preview.Secret). A compatible replacement can be found at 'redhatopenshift.Secret'.");
            }),
        },
        vendors: ["azure"],
        services: ["redhatopenshift"],
        severity: "medium",
        topics: ["api", "unstable", "preview"],
    });
})(Secret || (Secret = {}));
exports.Secret = Secret;
var SyncIdentityProvider;
(function (SyncIdentityProvider) {
    /**
     * Disallow the use of non-stable (Preview) Azure resouces (redhatopenshift.v20230701preview.SyncIdentityProvider).
     *
     * @severity medium
     * @frameworks none
     * @topics api, preview, unstable
     * @link https://learn.microsoft.com/en-us/rest/api/azure/
     */
    SyncIdentityProvider.disallowPreviewResource = compliance_policy_manager_1.policyManager.registerPolicy({
        resourceValidationPolicy: {
            name: "azurenative-redhatopenshift-v20230701preview-syncidentityprovider-disallow-preview-resource",
            description: "Disallow the use of non-stable (Preview) Azure resouces (redhatopenshift.v20230701preview.SyncIdentityProvider).",
            configSchema: compliance_policy_manager_1.policyManager.policyConfigSchema,
            enforcementLevel: "advisory",
            validateResource: (0, policy_1.validateResourceOfType)(v20230701preview_4.SyncIdentityProvider, (_, args, reportViolation) => {
                if (!compliance_policy_manager_1.policyManager.shouldEvalPolicy(args)) {
                    return;
                }
                reportViolation("Azure SyncIdentityProvider shouldn't use an unstable API (redhatopenshift.v20230701preview.SyncIdentityProvider). A compatible replacement can be found at 'redhatopenshift.SyncIdentityProvider'.");
            }),
        },
        vendors: ["azure"],
        services: ["redhatopenshift"],
        severity: "medium",
        topics: ["api", "unstable", "preview"],
    });
})(SyncIdentityProvider || (SyncIdentityProvider = {}));
exports.SyncIdentityProvider = SyncIdentityProvider;
var SyncSet;
(function (SyncSet) {
    /**
     * Disallow the use of non-stable (Preview) Azure resouces (redhatopenshift.v20230701preview.SyncSet).
     *
     * @severity medium
     * @frameworks none
     * @topics api, preview, unstable
     * @link https://learn.microsoft.com/en-us/rest/api/azure/
     */
    SyncSet.disallowPreviewResource = compliance_policy_manager_1.policyManager.registerPolicy({
        resourceValidationPolicy: {
            name: "azurenative-redhatopenshift-v20230701preview-syncset-disallow-preview-resource",
            description: "Disallow the use of non-stable (Preview) Azure resouces (redhatopenshift.v20230701preview.SyncSet).",
            configSchema: compliance_policy_manager_1.policyManager.policyConfigSchema,
            enforcementLevel: "advisory",
            validateResource: (0, policy_1.validateResourceOfType)(v20230701preview_5.SyncSet, (_, args, reportViolation) => {
                if (!compliance_policy_manager_1.policyManager.shouldEvalPolicy(args)) {
                    return;
                }
                reportViolation("Azure SyncSet shouldn't use an unstable API (redhatopenshift.v20230701preview.SyncSet). A compatible replacement can be found at 'redhatopenshift.SyncSet'.");
            }),
        },
        vendors: ["azure"],
        services: ["redhatopenshift"],
        severity: "medium",
        topics: ["api", "unstable", "preview"],
    });
})(SyncSet || (SyncSet = {}));
exports.SyncSet = SyncSet;
