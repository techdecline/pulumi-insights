"use strict";
// Copyright 2016-2024, Pulumi Corporation.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//
// ------------------------------- WARNING -------------------------------------
// This file was programmatically generated. Do not edit unless you know what
// you're doing.
// ------------------------------- WARNING -------------------------------------
Object.defineProperty(exports, "__esModule", { value: true });
exports.Volume = exports.VirtualMachine = exports.TrunkedNetwork = exports.StorageAppliance = exports.Rack = exports.MetricsConfiguration = exports.L3Network = exports.L2Network = exports.KubernetesCluster = exports.Console = exports.ClusterManager = exports.Cluster = exports.CloudServicesNetwork = exports.BmcKeySet = exports.BareMetalMachineKeySet = exports.BareMetalMachine = exports.AgentPool = void 0;
const policy_1 = require("@pulumi/policy");
const compliance_policy_manager_1 = require("@pulumi/compliance-policy-manager");
const v20231001preview_1 = require("@pulumi/azure-native/networkcloud/v20231001preview");
const v20231001preview_2 = require("@pulumi/azure-native/networkcloud/v20231001preview");
const v20231001preview_3 = require("@pulumi/azure-native/networkcloud/v20231001preview");
const v20231001preview_4 = require("@pulumi/azure-native/networkcloud/v20231001preview");
const v20231001preview_5 = require("@pulumi/azure-native/networkcloud/v20231001preview");
const v20231001preview_6 = require("@pulumi/azure-native/networkcloud/v20231001preview");
const v20231001preview_7 = require("@pulumi/azure-native/networkcloud/v20231001preview");
const v20231001preview_8 = require("@pulumi/azure-native/networkcloud/v20231001preview");
const v20231001preview_9 = require("@pulumi/azure-native/networkcloud/v20231001preview");
const v20231001preview_10 = require("@pulumi/azure-native/networkcloud/v20231001preview");
const v20231001preview_11 = require("@pulumi/azure-native/networkcloud/v20231001preview");
const v20231001preview_12 = require("@pulumi/azure-native/networkcloud/v20231001preview");
const v20231001preview_13 = require("@pulumi/azure-native/networkcloud/v20231001preview");
const v20231001preview_14 = require("@pulumi/azure-native/networkcloud/v20231001preview");
const v20231001preview_15 = require("@pulumi/azure-native/networkcloud/v20231001preview");
const v20231001preview_16 = require("@pulumi/azure-native/networkcloud/v20231001preview");
const v20231001preview_17 = require("@pulumi/azure-native/networkcloud/v20231001preview");
var AgentPool;
(function (AgentPool) {
    /**
     * Disallow the use of non-stable (Preview) Azure resouces (networkcloud.v20231001preview.AgentPool).
     *
     * @severity medium
     * @frameworks none
     * @topics api, preview, unstable
     * @link https://learn.microsoft.com/en-us/rest/api/azure/
     */
    AgentPool.disallowPreviewResource = compliance_policy_manager_1.policyManager.registerPolicy({
        resourceValidationPolicy: {
            name: "azurenative-networkcloud-v20231001preview-agentpool-disallow-preview-resource",
            description: "Disallow the use of non-stable (Preview) Azure resouces (networkcloud.v20231001preview.AgentPool).",
            configSchema: compliance_policy_manager_1.policyManager.policyConfigSchema,
            enforcementLevel: "advisory",
            validateResource: (0, policy_1.validateResourceOfType)(v20231001preview_1.AgentPool, (_, args, reportViolation) => {
                if (!compliance_policy_manager_1.policyManager.shouldEvalPolicy(args)) {
                    return;
                }
                reportViolation("Azure AgentPool shouldn't use an unstable API (networkcloud.v20231001preview.AgentPool). A compatible replacement can be found at 'networkcloud.AgentPool'.");
            }),
        },
        vendors: ["azure"],
        services: ["networkcloud"],
        severity: "medium",
        topics: ["api", "unstable", "preview"],
    });
})(AgentPool || (AgentPool = {}));
exports.AgentPool = AgentPool;
var BareMetalMachine;
(function (BareMetalMachine) {
    /**
     * Disallow the use of non-stable (Preview) Azure resouces (networkcloud.v20231001preview.BareMetalMachine).
     *
     * @severity medium
     * @frameworks none
     * @topics api, preview, unstable
     * @link https://learn.microsoft.com/en-us/rest/api/azure/
     */
    BareMetalMachine.disallowPreviewResource = compliance_policy_manager_1.policyManager.registerPolicy({
        resourceValidationPolicy: {
            name: "azurenative-networkcloud-v20231001preview-baremetalmachine-disallow-preview-resource",
            description: "Disallow the use of non-stable (Preview) Azure resouces (networkcloud.v20231001preview.BareMetalMachine).",
            configSchema: compliance_policy_manager_1.policyManager.policyConfigSchema,
            enforcementLevel: "advisory",
            validateResource: (0, policy_1.validateResourceOfType)(v20231001preview_2.BareMetalMachine, (_, args, reportViolation) => {
                if (!compliance_policy_manager_1.policyManager.shouldEvalPolicy(args)) {
                    return;
                }
                reportViolation("Azure BareMetalMachine shouldn't use an unstable API (networkcloud.v20231001preview.BareMetalMachine). A compatible replacement can be found at 'networkcloud.BareMetalMachine'.");
            }),
        },
        vendors: ["azure"],
        services: ["networkcloud"],
        severity: "medium",
        topics: ["api", "unstable", "preview"],
    });
})(BareMetalMachine || (BareMetalMachine = {}));
exports.BareMetalMachine = BareMetalMachine;
var BareMetalMachineKeySet;
(function (BareMetalMachineKeySet) {
    /**
     * Disallow the use of non-stable (Preview) Azure resouces (networkcloud.v20231001preview.BareMetalMachineKeySet).
     *
     * @severity medium
     * @frameworks none
     * @topics api, preview, unstable
     * @link https://learn.microsoft.com/en-us/rest/api/azure/
     */
    BareMetalMachineKeySet.disallowPreviewResource = compliance_policy_manager_1.policyManager.registerPolicy({
        resourceValidationPolicy: {
            name: "azurenative-networkcloud-v20231001preview-baremetalmachinekeyset-disallow-preview-resource",
            description: "Disallow the use of non-stable (Preview) Azure resouces (networkcloud.v20231001preview.BareMetalMachineKeySet).",
            configSchema: compliance_policy_manager_1.policyManager.policyConfigSchema,
            enforcementLevel: "advisory",
            validateResource: (0, policy_1.validateResourceOfType)(v20231001preview_3.BareMetalMachineKeySet, (_, args, reportViolation) => {
                if (!compliance_policy_manager_1.policyManager.shouldEvalPolicy(args)) {
                    return;
                }
                reportViolation("Azure BareMetalMachineKeySet shouldn't use an unstable API (networkcloud.v20231001preview.BareMetalMachineKeySet). A compatible replacement can be found at 'networkcloud.BareMetalMachineKeySet'.");
            }),
        },
        vendors: ["azure"],
        services: ["networkcloud"],
        severity: "medium",
        topics: ["api", "unstable", "preview"],
    });
})(BareMetalMachineKeySet || (BareMetalMachineKeySet = {}));
exports.BareMetalMachineKeySet = BareMetalMachineKeySet;
var BmcKeySet;
(function (BmcKeySet) {
    /**
     * Disallow the use of non-stable (Preview) Azure resouces (networkcloud.v20231001preview.BmcKeySet).
     *
     * @severity medium
     * @frameworks none
     * @topics api, preview, unstable
     * @link https://learn.microsoft.com/en-us/rest/api/azure/
     */
    BmcKeySet.disallowPreviewResource = compliance_policy_manager_1.policyManager.registerPolicy({
        resourceValidationPolicy: {
            name: "azurenative-networkcloud-v20231001preview-bmckeyset-disallow-preview-resource",
            description: "Disallow the use of non-stable (Preview) Azure resouces (networkcloud.v20231001preview.BmcKeySet).",
            configSchema: compliance_policy_manager_1.policyManager.policyConfigSchema,
            enforcementLevel: "advisory",
            validateResource: (0, policy_1.validateResourceOfType)(v20231001preview_4.BmcKeySet, (_, args, reportViolation) => {
                if (!compliance_policy_manager_1.policyManager.shouldEvalPolicy(args)) {
                    return;
                }
                reportViolation("Azure BmcKeySet shouldn't use an unstable API (networkcloud.v20231001preview.BmcKeySet). A compatible replacement can be found at 'networkcloud.BmcKeySet'.");
            }),
        },
        vendors: ["azure"],
        services: ["networkcloud"],
        severity: "medium",
        topics: ["api", "unstable", "preview"],
    });
})(BmcKeySet || (BmcKeySet = {}));
exports.BmcKeySet = BmcKeySet;
var CloudServicesNetwork;
(function (CloudServicesNetwork) {
    /**
     * Disallow the use of non-stable (Preview) Azure resouces (networkcloud.v20231001preview.CloudServicesNetwork).
     *
     * @severity medium
     * @frameworks none
     * @topics api, preview, unstable
     * @link https://learn.microsoft.com/en-us/rest/api/azure/
     */
    CloudServicesNetwork.disallowPreviewResource = compliance_policy_manager_1.policyManager.registerPolicy({
        resourceValidationPolicy: {
            name: "azurenative-networkcloud-v20231001preview-cloudservicesnetwork-disallow-preview-resource",
            description: "Disallow the use of non-stable (Preview) Azure resouces (networkcloud.v20231001preview.CloudServicesNetwork).",
            configSchema: compliance_policy_manager_1.policyManager.policyConfigSchema,
            enforcementLevel: "advisory",
            validateResource: (0, policy_1.validateResourceOfType)(v20231001preview_5.CloudServicesNetwork, (_, args, reportViolation) => {
                if (!compliance_policy_manager_1.policyManager.shouldEvalPolicy(args)) {
                    return;
                }
                reportViolation("Azure CloudServicesNetwork shouldn't use an unstable API (networkcloud.v20231001preview.CloudServicesNetwork). A compatible replacement can be found at 'networkcloud.CloudServicesNetwork'.");
            }),
        },
        vendors: ["azure"],
        services: ["networkcloud"],
        severity: "medium",
        topics: ["api", "unstable", "preview"],
    });
})(CloudServicesNetwork || (CloudServicesNetwork = {}));
exports.CloudServicesNetwork = CloudServicesNetwork;
var Cluster;
(function (Cluster) {
    /**
     * Disallow the use of non-stable (Preview) Azure resouces (networkcloud.v20231001preview.Cluster).
     *
     * @severity medium
     * @frameworks none
     * @topics api, preview, unstable
     * @link https://learn.microsoft.com/en-us/rest/api/azure/
     */
    Cluster.disallowPreviewResource = compliance_policy_manager_1.policyManager.registerPolicy({
        resourceValidationPolicy: {
            name: "azurenative-networkcloud-v20231001preview-cluster-disallow-preview-resource",
            description: "Disallow the use of non-stable (Preview) Azure resouces (networkcloud.v20231001preview.Cluster).",
            configSchema: compliance_policy_manager_1.policyManager.policyConfigSchema,
            enforcementLevel: "advisory",
            validateResource: (0, policy_1.validateResourceOfType)(v20231001preview_6.Cluster, (_, args, reportViolation) => {
                if (!compliance_policy_manager_1.policyManager.shouldEvalPolicy(args)) {
                    return;
                }
                reportViolation("Azure Cluster shouldn't use an unstable API (networkcloud.v20231001preview.Cluster). A compatible replacement can be found at 'networkcloud.Cluster'.");
            }),
        },
        vendors: ["azure"],
        services: ["networkcloud"],
        severity: "medium",
        topics: ["api", "unstable", "preview"],
    });
})(Cluster || (Cluster = {}));
exports.Cluster = Cluster;
var ClusterManager;
(function (ClusterManager) {
    /**
     * Disallow the use of non-stable (Preview) Azure resouces (networkcloud.v20231001preview.ClusterManager).
     *
     * @severity medium
     * @frameworks none
     * @topics api, preview, unstable
     * @link https://learn.microsoft.com/en-us/rest/api/azure/
     */
    ClusterManager.disallowPreviewResource = compliance_policy_manager_1.policyManager.registerPolicy({
        resourceValidationPolicy: {
            name: "azurenative-networkcloud-v20231001preview-clustermanager-disallow-preview-resource",
            description: "Disallow the use of non-stable (Preview) Azure resouces (networkcloud.v20231001preview.ClusterManager).",
            configSchema: compliance_policy_manager_1.policyManager.policyConfigSchema,
            enforcementLevel: "advisory",
            validateResource: (0, policy_1.validateResourceOfType)(v20231001preview_7.ClusterManager, (_, args, reportViolation) => {
                if (!compliance_policy_manager_1.policyManager.shouldEvalPolicy(args)) {
                    return;
                }
                reportViolation("Azure ClusterManager shouldn't use an unstable API (networkcloud.v20231001preview.ClusterManager). A compatible replacement can be found at 'networkcloud.ClusterManager'.");
            }),
        },
        vendors: ["azure"],
        services: ["networkcloud"],
        severity: "medium",
        topics: ["api", "unstable", "preview"],
    });
})(ClusterManager || (ClusterManager = {}));
exports.ClusterManager = ClusterManager;
var Console;
(function (Console) {
    /**
     * Disallow the use of non-stable (Preview) Azure resouces (networkcloud.v20231001preview.Console).
     *
     * @severity medium
     * @frameworks none
     * @topics api, preview, unstable
     * @link https://learn.microsoft.com/en-us/rest/api/azure/
     */
    Console.disallowPreviewResource = compliance_policy_manager_1.policyManager.registerPolicy({
        resourceValidationPolicy: {
            name: "azurenative-networkcloud-v20231001preview-console-disallow-preview-resource",
            description: "Disallow the use of non-stable (Preview) Azure resouces (networkcloud.v20231001preview.Console).",
            configSchema: compliance_policy_manager_1.policyManager.policyConfigSchema,
            enforcementLevel: "advisory",
            validateResource: (0, policy_1.validateResourceOfType)(v20231001preview_8.Console, (_, args, reportViolation) => {
                if (!compliance_policy_manager_1.policyManager.shouldEvalPolicy(args)) {
                    return;
                }
                reportViolation("Azure Console shouldn't use an unstable API (networkcloud.v20231001preview.Console). A compatible replacement can be found at 'networkcloud.Console'.");
            }),
        },
        vendors: ["azure"],
        services: ["networkcloud"],
        severity: "medium",
        topics: ["api", "unstable", "preview"],
    });
})(Console || (Console = {}));
exports.Console = Console;
var KubernetesCluster;
(function (KubernetesCluster) {
    /**
     * Disallow the use of non-stable (Preview) Azure resouces (networkcloud.v20231001preview.KubernetesCluster).
     *
     * @severity medium
     * @frameworks none
     * @topics api, preview, unstable
     * @link https://learn.microsoft.com/en-us/rest/api/azure/
     */
    KubernetesCluster.disallowPreviewResource = compliance_policy_manager_1.policyManager.registerPolicy({
        resourceValidationPolicy: {
            name: "azurenative-networkcloud-v20231001preview-kubernetescluster-disallow-preview-resource",
            description: "Disallow the use of non-stable (Preview) Azure resouces (networkcloud.v20231001preview.KubernetesCluster).",
            configSchema: compliance_policy_manager_1.policyManager.policyConfigSchema,
            enforcementLevel: "advisory",
            validateResource: (0, policy_1.validateResourceOfType)(v20231001preview_9.KubernetesCluster, (_, args, reportViolation) => {
                if (!compliance_policy_manager_1.policyManager.shouldEvalPolicy(args)) {
                    return;
                }
                reportViolation("Azure KubernetesCluster shouldn't use an unstable API (networkcloud.v20231001preview.KubernetesCluster). A compatible replacement can be found at 'networkcloud.KubernetesCluster'.");
            }),
        },
        vendors: ["azure"],
        services: ["networkcloud"],
        severity: "medium",
        topics: ["api", "unstable", "preview"],
    });
})(KubernetesCluster || (KubernetesCluster = {}));
exports.KubernetesCluster = KubernetesCluster;
var L2Network;
(function (L2Network) {
    /**
     * Disallow the use of non-stable (Preview) Azure resouces (networkcloud.v20231001preview.L2Network).
     *
     * @severity medium
     * @frameworks none
     * @topics api, preview, unstable
     * @link https://learn.microsoft.com/en-us/rest/api/azure/
     */
    L2Network.disallowPreviewResource = compliance_policy_manager_1.policyManager.registerPolicy({
        resourceValidationPolicy: {
            name: "azurenative-networkcloud-v20231001preview-l2network-disallow-preview-resource",
            description: "Disallow the use of non-stable (Preview) Azure resouces (networkcloud.v20231001preview.L2Network).",
            configSchema: compliance_policy_manager_1.policyManager.policyConfigSchema,
            enforcementLevel: "advisory",
            validateResource: (0, policy_1.validateResourceOfType)(v20231001preview_10.L2Network, (_, args, reportViolation) => {
                if (!compliance_policy_manager_1.policyManager.shouldEvalPolicy(args)) {
                    return;
                }
                reportViolation("Azure L2Network shouldn't use an unstable API (networkcloud.v20231001preview.L2Network). A compatible replacement can be found at 'networkcloud.L2Network'.");
            }),
        },
        vendors: ["azure"],
        services: ["networkcloud"],
        severity: "medium",
        topics: ["api", "unstable", "preview"],
    });
})(L2Network || (L2Network = {}));
exports.L2Network = L2Network;
var L3Network;
(function (L3Network) {
    /**
     * Disallow the use of non-stable (Preview) Azure resouces (networkcloud.v20231001preview.L3Network).
     *
     * @severity medium
     * @frameworks none
     * @topics api, preview, unstable
     * @link https://learn.microsoft.com/en-us/rest/api/azure/
     */
    L3Network.disallowPreviewResource = compliance_policy_manager_1.policyManager.registerPolicy({
        resourceValidationPolicy: {
            name: "azurenative-networkcloud-v20231001preview-l3network-disallow-preview-resource",
            description: "Disallow the use of non-stable (Preview) Azure resouces (networkcloud.v20231001preview.L3Network).",
            configSchema: compliance_policy_manager_1.policyManager.policyConfigSchema,
            enforcementLevel: "advisory",
            validateResource: (0, policy_1.validateResourceOfType)(v20231001preview_11.L3Network, (_, args, reportViolation) => {
                if (!compliance_policy_manager_1.policyManager.shouldEvalPolicy(args)) {
                    return;
                }
                reportViolation("Azure L3Network shouldn't use an unstable API (networkcloud.v20231001preview.L3Network). A compatible replacement can be found at 'networkcloud.L3Network'.");
            }),
        },
        vendors: ["azure"],
        services: ["networkcloud"],
        severity: "medium",
        topics: ["api", "unstable", "preview"],
    });
})(L3Network || (L3Network = {}));
exports.L3Network = L3Network;
var MetricsConfiguration;
(function (MetricsConfiguration) {
    /**
     * Disallow the use of non-stable (Preview) Azure resouces (networkcloud.v20231001preview.MetricsConfiguration).
     *
     * @severity medium
     * @frameworks none
     * @topics api, preview, unstable
     * @link https://learn.microsoft.com/en-us/rest/api/azure/
     */
    MetricsConfiguration.disallowPreviewResource = compliance_policy_manager_1.policyManager.registerPolicy({
        resourceValidationPolicy: {
            name: "azurenative-networkcloud-v20231001preview-metricsconfiguration-disallow-preview-resource",
            description: "Disallow the use of non-stable (Preview) Azure resouces (networkcloud.v20231001preview.MetricsConfiguration).",
            configSchema: compliance_policy_manager_1.policyManager.policyConfigSchema,
            enforcementLevel: "advisory",
            validateResource: (0, policy_1.validateResourceOfType)(v20231001preview_12.MetricsConfiguration, (_, args, reportViolation) => {
                if (!compliance_policy_manager_1.policyManager.shouldEvalPolicy(args)) {
                    return;
                }
                reportViolation("Azure MetricsConfiguration shouldn't use an unstable API (networkcloud.v20231001preview.MetricsConfiguration). A compatible replacement can be found at 'networkcloud.MetricsConfiguration'.");
            }),
        },
        vendors: ["azure"],
        services: ["networkcloud"],
        severity: "medium",
        topics: ["api", "unstable", "preview"],
    });
})(MetricsConfiguration || (MetricsConfiguration = {}));
exports.MetricsConfiguration = MetricsConfiguration;
var Rack;
(function (Rack) {
    /**
     * Disallow the use of non-stable (Preview) Azure resouces (networkcloud.v20231001preview.Rack).
     *
     * @severity medium
     * @frameworks none
     * @topics api, preview, unstable
     * @link https://learn.microsoft.com/en-us/rest/api/azure/
     */
    Rack.disallowPreviewResource = compliance_policy_manager_1.policyManager.registerPolicy({
        resourceValidationPolicy: {
            name: "azurenative-networkcloud-v20231001preview-rack-disallow-preview-resource",
            description: "Disallow the use of non-stable (Preview) Azure resouces (networkcloud.v20231001preview.Rack).",
            configSchema: compliance_policy_manager_1.policyManager.policyConfigSchema,
            enforcementLevel: "advisory",
            validateResource: (0, policy_1.validateResourceOfType)(v20231001preview_13.Rack, (_, args, reportViolation) => {
                if (!compliance_policy_manager_1.policyManager.shouldEvalPolicy(args)) {
                    return;
                }
                reportViolation("Azure Rack shouldn't use an unstable API (networkcloud.v20231001preview.Rack). A compatible replacement can be found at 'networkcloud.Rack'.");
            }),
        },
        vendors: ["azure"],
        services: ["networkcloud"],
        severity: "medium",
        topics: ["api", "unstable", "preview"],
    });
})(Rack || (Rack = {}));
exports.Rack = Rack;
var StorageAppliance;
(function (StorageAppliance) {
    /**
     * Disallow the use of non-stable (Preview) Azure resouces (networkcloud.v20231001preview.StorageAppliance).
     *
     * @severity medium
     * @frameworks none
     * @topics api, preview, unstable
     * @link https://learn.microsoft.com/en-us/rest/api/azure/
     */
    StorageAppliance.disallowPreviewResource = compliance_policy_manager_1.policyManager.registerPolicy({
        resourceValidationPolicy: {
            name: "azurenative-networkcloud-v20231001preview-storageappliance-disallow-preview-resource",
            description: "Disallow the use of non-stable (Preview) Azure resouces (networkcloud.v20231001preview.StorageAppliance).",
            configSchema: compliance_policy_manager_1.policyManager.policyConfigSchema,
            enforcementLevel: "advisory",
            validateResource: (0, policy_1.validateResourceOfType)(v20231001preview_14.StorageAppliance, (_, args, reportViolation) => {
                if (!compliance_policy_manager_1.policyManager.shouldEvalPolicy(args)) {
                    return;
                }
                reportViolation("Azure StorageAppliance shouldn't use an unstable API (networkcloud.v20231001preview.StorageAppliance). A compatible replacement can be found at 'networkcloud.StorageAppliance'.");
            }),
        },
        vendors: ["azure"],
        services: ["networkcloud"],
        severity: "medium",
        topics: ["api", "unstable", "preview"],
    });
})(StorageAppliance || (StorageAppliance = {}));
exports.StorageAppliance = StorageAppliance;
var TrunkedNetwork;
(function (TrunkedNetwork) {
    /**
     * Disallow the use of non-stable (Preview) Azure resouces (networkcloud.v20231001preview.TrunkedNetwork).
     *
     * @severity medium
     * @frameworks none
     * @topics api, preview, unstable
     * @link https://learn.microsoft.com/en-us/rest/api/azure/
     */
    TrunkedNetwork.disallowPreviewResource = compliance_policy_manager_1.policyManager.registerPolicy({
        resourceValidationPolicy: {
            name: "azurenative-networkcloud-v20231001preview-trunkednetwork-disallow-preview-resource",
            description: "Disallow the use of non-stable (Preview) Azure resouces (networkcloud.v20231001preview.TrunkedNetwork).",
            configSchema: compliance_policy_manager_1.policyManager.policyConfigSchema,
            enforcementLevel: "advisory",
            validateResource: (0, policy_1.validateResourceOfType)(v20231001preview_15.TrunkedNetwork, (_, args, reportViolation) => {
                if (!compliance_policy_manager_1.policyManager.shouldEvalPolicy(args)) {
                    return;
                }
                reportViolation("Azure TrunkedNetwork shouldn't use an unstable API (networkcloud.v20231001preview.TrunkedNetwork). A compatible replacement can be found at 'networkcloud.TrunkedNetwork'.");
            }),
        },
        vendors: ["azure"],
        services: ["networkcloud"],
        severity: "medium",
        topics: ["api", "unstable", "preview"],
    });
})(TrunkedNetwork || (TrunkedNetwork = {}));
exports.TrunkedNetwork = TrunkedNetwork;
var VirtualMachine;
(function (VirtualMachine) {
    /**
     * Disallow the use of non-stable (Preview) Azure resouces (networkcloud.v20231001preview.VirtualMachine).
     *
     * @severity medium
     * @frameworks none
     * @topics api, preview, unstable
     * @link https://learn.microsoft.com/en-us/rest/api/azure/
     */
    VirtualMachine.disallowPreviewResource = compliance_policy_manager_1.policyManager.registerPolicy({
        resourceValidationPolicy: {
            name: "azurenative-networkcloud-v20231001preview-virtualmachine-disallow-preview-resource",
            description: "Disallow the use of non-stable (Preview) Azure resouces (networkcloud.v20231001preview.VirtualMachine).",
            configSchema: compliance_policy_manager_1.policyManager.policyConfigSchema,
            enforcementLevel: "advisory",
            validateResource: (0, policy_1.validateResourceOfType)(v20231001preview_16.VirtualMachine, (_, args, reportViolation) => {
                if (!compliance_policy_manager_1.policyManager.shouldEvalPolicy(args)) {
                    return;
                }
                reportViolation("Azure VirtualMachine shouldn't use an unstable API (networkcloud.v20231001preview.VirtualMachine). A compatible replacement can be found at 'networkcloud.VirtualMachine'.");
            }),
        },
        vendors: ["azure"],
        services: ["networkcloud"],
        severity: "medium",
        topics: ["api", "unstable", "preview"],
    });
})(VirtualMachine || (VirtualMachine = {}));
exports.VirtualMachine = VirtualMachine;
var Volume;
(function (Volume) {
    /**
     * Disallow the use of non-stable (Preview) Azure resouces (networkcloud.v20231001preview.Volume).
     *
     * @severity medium
     * @frameworks none
     * @topics api, preview, unstable
     * @link https://learn.microsoft.com/en-us/rest/api/azure/
     */
    Volume.disallowPreviewResource = compliance_policy_manager_1.policyManager.registerPolicy({
        resourceValidationPolicy: {
            name: "azurenative-networkcloud-v20231001preview-volume-disallow-preview-resource",
            description: "Disallow the use of non-stable (Preview) Azure resouces (networkcloud.v20231001preview.Volume).",
            configSchema: compliance_policy_manager_1.policyManager.policyConfigSchema,
            enforcementLevel: "advisory",
            validateResource: (0, policy_1.validateResourceOfType)(v20231001preview_17.Volume, (_, args, reportViolation) => {
                if (!compliance_policy_manager_1.policyManager.shouldEvalPolicy(args)) {
                    return;
                }
                reportViolation("Azure Volume shouldn't use an unstable API (networkcloud.v20231001preview.Volume). A compatible replacement can be found at 'networkcloud.Volume'.");
            }),
        },
        vendors: ["azure"],
        services: ["networkcloud"],
        severity: "medium",
        topics: ["api", "unstable", "preview"],
    });
})(Volume || (Volume = {}));
exports.Volume = Volume;
