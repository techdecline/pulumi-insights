"use strict";
// Copyright 2016-2024, Pulumi Corporation.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//
// ------------------------------- WARNING -------------------------------------
// This file was programmatically generated. Do not edit unless you know what
// you're doing.
// ------------------------------- WARNING -------------------------------------
Object.defineProperty(exports, "__esModule", { value: true });
exports.VirtualNetworkRetrieve = exports.StorageSpaceRetrieve = exports.ProvisionedCluster = exports.HybridIdentityMetadatum = exports.AgentPool = void 0;
const policy_1 = require("@pulumi/policy");
const compliance_policy_manager_1 = require("@pulumi/compliance-policy-manager");
const v20220901preview_1 = require("@pulumi/azure-native/hybridcontainerservice/v20220901preview");
const v20220901preview_2 = require("@pulumi/azure-native/hybridcontainerservice/v20220901preview");
const v20220901preview_3 = require("@pulumi/azure-native/hybridcontainerservice/v20220901preview");
const v20220901preview_4 = require("@pulumi/azure-native/hybridcontainerservice/v20220901preview");
const v20220901preview_5 = require("@pulumi/azure-native/hybridcontainerservice/v20220901preview");
var AgentPool;
(function (AgentPool) {
    /**
     * Disallow the use of non-stable (Preview) Azure resouces (hybridcontainerservice.v20220901preview.AgentPool).
     *
     * @severity medium
     * @frameworks none
     * @topics api, preview, unstable
     * @link https://learn.microsoft.com/en-us/rest/api/azure/
     */
    AgentPool.disallowPreviewResource = compliance_policy_manager_1.policyManager.registerPolicy({
        resourceValidationPolicy: {
            name: "azurenative-hybridcontainerservice-v20220901preview-agentpool-disallow-preview-resource",
            description: "Disallow the use of non-stable (Preview) Azure resouces (hybridcontainerservice.v20220901preview.AgentPool).",
            configSchema: compliance_policy_manager_1.policyManager.policyConfigSchema,
            enforcementLevel: "advisory",
            validateResource: (0, policy_1.validateResourceOfType)(v20220901preview_1.AgentPool, (_, args, reportViolation) => {
                if (!compliance_policy_manager_1.policyManager.shouldEvalPolicy(args)) {
                    return;
                }
                reportViolation("Azure AgentPool shouldn't use an unstable API (hybridcontainerservice.v20220901preview.AgentPool). A compatible replacement can be found at 'hybridcontainerservice.AgentPool'.");
            }),
        },
        vendors: ["azure"],
        services: ["hybridcontainerservice"],
        severity: "medium",
        topics: ["api", "unstable", "preview"],
    });
})(AgentPool || (AgentPool = {}));
exports.AgentPool = AgentPool;
var HybridIdentityMetadatum;
(function (HybridIdentityMetadatum) {
    /**
     * Disallow the use of non-stable (Preview) Azure resouces (hybridcontainerservice.v20220901preview.HybridIdentityMetadatum).
     *
     * @severity medium
     * @frameworks none
     * @topics api, preview, unstable
     * @link https://learn.microsoft.com/en-us/rest/api/azure/
     */
    HybridIdentityMetadatum.disallowPreviewResource = compliance_policy_manager_1.policyManager.registerPolicy({
        resourceValidationPolicy: {
            name: "azurenative-hybridcontainerservice-v20220901preview-hybrididentitymetadatum-disallow-preview-resource",
            description: "Disallow the use of non-stable (Preview) Azure resouces (hybridcontainerservice.v20220901preview.HybridIdentityMetadatum).",
            configSchema: compliance_policy_manager_1.policyManager.policyConfigSchema,
            enforcementLevel: "advisory",
            validateResource: (0, policy_1.validateResourceOfType)(v20220901preview_2.HybridIdentityMetadatum, (_, args, reportViolation) => {
                if (!compliance_policy_manager_1.policyManager.shouldEvalPolicy(args)) {
                    return;
                }
                reportViolation("Azure HybridIdentityMetadatum shouldn't use an unstable API (hybridcontainerservice.v20220901preview.HybridIdentityMetadatum). A compatible replacement can be found at 'hybridcontainerservice.HybridIdentityMetadatum'.");
            }),
        },
        vendors: ["azure"],
        services: ["hybridcontainerservice"],
        severity: "medium",
        topics: ["api", "unstable", "preview"],
    });
})(HybridIdentityMetadatum || (HybridIdentityMetadatum = {}));
exports.HybridIdentityMetadatum = HybridIdentityMetadatum;
var ProvisionedCluster;
(function (ProvisionedCluster) {
    /**
     * Disallow the use of non-stable (Preview) Azure resouces (hybridcontainerservice.v20220901preview.ProvisionedCluster).
     *
     * @severity medium
     * @frameworks none
     * @topics api, preview, unstable
     * @link https://learn.microsoft.com/en-us/rest/api/azure/
     */
    ProvisionedCluster.disallowPreviewResource = compliance_policy_manager_1.policyManager.registerPolicy({
        resourceValidationPolicy: {
            name: "azurenative-hybridcontainerservice-v20220901preview-provisionedcluster-disallow-preview-resource",
            description: "Disallow the use of non-stable (Preview) Azure resouces (hybridcontainerservice.v20220901preview.ProvisionedCluster).",
            configSchema: compliance_policy_manager_1.policyManager.policyConfigSchema,
            enforcementLevel: "advisory",
            validateResource: (0, policy_1.validateResourceOfType)(v20220901preview_3.ProvisionedCluster, (_, args, reportViolation) => {
                if (!compliance_policy_manager_1.policyManager.shouldEvalPolicy(args)) {
                    return;
                }
                reportViolation("Azure ProvisionedCluster shouldn't use an unstable API (hybridcontainerservice.v20220901preview.ProvisionedCluster). A compatible replacement can be found at 'hybridcontainerservice.ProvisionedCluster'.");
            }),
        },
        vendors: ["azure"],
        services: ["hybridcontainerservice"],
        severity: "medium",
        topics: ["api", "unstable", "preview"],
    });
})(ProvisionedCluster || (ProvisionedCluster = {}));
exports.ProvisionedCluster = ProvisionedCluster;
var StorageSpaceRetrieve;
(function (StorageSpaceRetrieve) {
    /**
     * Disallow the use of non-stable (Preview) Azure resouces (hybridcontainerservice.v20220901preview.StorageSpaceRetrieve).
     *
     * @severity medium
     * @frameworks none
     * @topics api, preview, unstable
     * @link https://learn.microsoft.com/en-us/rest/api/azure/
     */
    StorageSpaceRetrieve.disallowPreviewResource = compliance_policy_manager_1.policyManager.registerPolicy({
        resourceValidationPolicy: {
            name: "azurenative-hybridcontainerservice-v20220901preview-storagespaceretrieve-disallow-preview-resource",
            description: "Disallow the use of non-stable (Preview) Azure resouces (hybridcontainerservice.v20220901preview.StorageSpaceRetrieve).",
            configSchema: compliance_policy_manager_1.policyManager.policyConfigSchema,
            enforcementLevel: "advisory",
            validateResource: (0, policy_1.validateResourceOfType)(v20220901preview_4.StorageSpaceRetrieve, (_, args, reportViolation) => {
                if (!compliance_policy_manager_1.policyManager.shouldEvalPolicy(args)) {
                    return;
                }
                reportViolation("Azure StorageSpaceRetrieve shouldn't use an unstable API (hybridcontainerservice.v20220901preview.StorageSpaceRetrieve). A compatible replacement can be found at 'hybridcontainerservice.StorageSpaceRetrieve'.");
            }),
        },
        vendors: ["azure"],
        services: ["hybridcontainerservice"],
        severity: "medium",
        topics: ["api", "unstable", "preview"],
    });
})(StorageSpaceRetrieve || (StorageSpaceRetrieve = {}));
exports.StorageSpaceRetrieve = StorageSpaceRetrieve;
var VirtualNetworkRetrieve;
(function (VirtualNetworkRetrieve) {
    /**
     * Disallow the use of non-stable (Preview) Azure resouces (hybridcontainerservice.v20220901preview.VirtualNetworkRetrieve).
     *
     * @severity medium
     * @frameworks none
     * @topics api, preview, unstable
     * @link https://learn.microsoft.com/en-us/rest/api/azure/
     */
    VirtualNetworkRetrieve.disallowPreviewResource = compliance_policy_manager_1.policyManager.registerPolicy({
        resourceValidationPolicy: {
            name: "azurenative-hybridcontainerservice-v20220901preview-virtualnetworkretrieve-disallow-preview-resource",
            description: "Disallow the use of non-stable (Preview) Azure resouces (hybridcontainerservice.v20220901preview.VirtualNetworkRetrieve).",
            configSchema: compliance_policy_manager_1.policyManager.policyConfigSchema,
            enforcementLevel: "advisory",
            validateResource: (0, policy_1.validateResourceOfType)(v20220901preview_5.VirtualNetworkRetrieve, (_, args, reportViolation) => {
                if (!compliance_policy_manager_1.policyManager.shouldEvalPolicy(args)) {
                    return;
                }
                reportViolation("Azure VirtualNetworkRetrieve shouldn't use an unstable API (hybridcontainerservice.v20220901preview.VirtualNetworkRetrieve). A compatible replacement can be found at 'hybridcontainerservice.VirtualNetworkRetrieve'.");
            }),
        },
        vendors: ["azure"],
        services: ["hybridcontainerservice"],
        severity: "medium",
        topics: ["api", "unstable", "preview"],
    });
})(VirtualNetworkRetrieve || (VirtualNetworkRetrieve = {}));
exports.VirtualNetworkRetrieve = VirtualNetworkRetrieve;
