"use strict";
// Copyright 2016-2024, Pulumi Corporation.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//
// ------------------------------- WARNING -------------------------------------
// This file was programmatically generated. Do not edit unless you know what
// you're doing.
// ------------------------------- WARNING -------------------------------------
Object.defineProperty(exports, "__esModule", { value: true });
exports.VirtualNetworkRetrieve = exports.VMSkus = exports.ProvisionedClusterInstance = exports.KubernetesVersions = exports.HybridIdentityMetadatum = exports.AgentPool = void 0;
const policy_1 = require("@pulumi/policy");
const compliance_policy_manager_1 = require("@pulumi/compliance-policy-manager");
const v20231115preview_1 = require("@pulumi/azure-native/hybridcontainerservice/v20231115preview");
const v20231115preview_2 = require("@pulumi/azure-native/hybridcontainerservice/v20231115preview");
const v20231115preview_3 = require("@pulumi/azure-native/hybridcontainerservice/v20231115preview");
const v20231115preview_4 = require("@pulumi/azure-native/hybridcontainerservice/v20231115preview");
const v20231115preview_5 = require("@pulumi/azure-native/hybridcontainerservice/v20231115preview");
const v20231115preview_6 = require("@pulumi/azure-native/hybridcontainerservice/v20231115preview");
var AgentPool;
(function (AgentPool) {
    /**
     * Disallow the use of non-stable (Preview) Azure resouces (hybridcontainerservice.v20231115preview.AgentPool).
     *
     * @severity medium
     * @frameworks none
     * @topics api, preview, unstable
     * @link https://learn.microsoft.com/en-us/rest/api/azure/
     */
    AgentPool.disallowPreviewResource = compliance_policy_manager_1.policyManager.registerPolicy({
        resourceValidationPolicy: {
            name: "azurenative-hybridcontainerservice-v20231115preview-agentpool-disallow-preview-resource",
            description: "Disallow the use of non-stable (Preview) Azure resouces (hybridcontainerservice.v20231115preview.AgentPool).",
            configSchema: compliance_policy_manager_1.policyManager.policyConfigSchema,
            enforcementLevel: "advisory",
            validateResource: (0, policy_1.validateResourceOfType)(v20231115preview_1.AgentPool, (_, args, reportViolation) => {
                if (!compliance_policy_manager_1.policyManager.shouldEvalPolicy(args)) {
                    return;
                }
                reportViolation("Azure AgentPool shouldn't use an unstable API (hybridcontainerservice.v20231115preview.AgentPool).");
            }),
        },
        vendors: ["azure"],
        services: ["hybridcontainerservice"],
        severity: "medium",
        topics: ["api", "unstable", "preview"],
    });
})(AgentPool || (AgentPool = {}));
exports.AgentPool = AgentPool;
var HybridIdentityMetadatum;
(function (HybridIdentityMetadatum) {
    /**
     * Disallow the use of non-stable (Preview) Azure resouces (hybridcontainerservice.v20231115preview.HybridIdentityMetadatum).
     *
     * @severity medium
     * @frameworks none
     * @topics api, preview, unstable
     * @link https://learn.microsoft.com/en-us/rest/api/azure/
     */
    HybridIdentityMetadatum.disallowPreviewResource = compliance_policy_manager_1.policyManager.registerPolicy({
        resourceValidationPolicy: {
            name: "azurenative-hybridcontainerservice-v20231115preview-hybrididentitymetadatum-disallow-preview-resource",
            description: "Disallow the use of non-stable (Preview) Azure resouces (hybridcontainerservice.v20231115preview.HybridIdentityMetadatum).",
            configSchema: compliance_policy_manager_1.policyManager.policyConfigSchema,
            enforcementLevel: "advisory",
            validateResource: (0, policy_1.validateResourceOfType)(v20231115preview_2.HybridIdentityMetadatum, (_, args, reportViolation) => {
                if (!compliance_policy_manager_1.policyManager.shouldEvalPolicy(args)) {
                    return;
                }
                reportViolation("Azure HybridIdentityMetadatum shouldn't use an unstable API (hybridcontainerservice.v20231115preview.HybridIdentityMetadatum).");
            }),
        },
        vendors: ["azure"],
        services: ["hybridcontainerservice"],
        severity: "medium",
        topics: ["api", "unstable", "preview"],
    });
})(HybridIdentityMetadatum || (HybridIdentityMetadatum = {}));
exports.HybridIdentityMetadatum = HybridIdentityMetadatum;
var KubernetesVersions;
(function (KubernetesVersions) {
    /**
     * Disallow the use of non-stable (Preview) Azure resouces (hybridcontainerservice.v20231115preview.KubernetesVersions).
     *
     * @severity medium
     * @frameworks none
     * @topics api, preview, unstable
     * @link https://learn.microsoft.com/en-us/rest/api/azure/
     */
    KubernetesVersions.disallowPreviewResource = compliance_policy_manager_1.policyManager.registerPolicy({
        resourceValidationPolicy: {
            name: "azurenative-hybridcontainerservice-v20231115preview-kubernetesversions-disallow-preview-resource",
            description: "Disallow the use of non-stable (Preview) Azure resouces (hybridcontainerservice.v20231115preview.KubernetesVersions).",
            configSchema: compliance_policy_manager_1.policyManager.policyConfigSchema,
            enforcementLevel: "advisory",
            validateResource: (0, policy_1.validateResourceOfType)(v20231115preview_3.KubernetesVersions, (_, args, reportViolation) => {
                if (!compliance_policy_manager_1.policyManager.shouldEvalPolicy(args)) {
                    return;
                }
                reportViolation("Azure KubernetesVersions shouldn't use an unstable API (hybridcontainerservice.v20231115preview.KubernetesVersions).");
            }),
        },
        vendors: ["azure"],
        services: ["hybridcontainerservice"],
        severity: "medium",
        topics: ["api", "unstable", "preview"],
    });
})(KubernetesVersions || (KubernetesVersions = {}));
exports.KubernetesVersions = KubernetesVersions;
var ProvisionedClusterInstance;
(function (ProvisionedClusterInstance) {
    /**
     * Disallow the use of non-stable (Preview) Azure resouces (hybridcontainerservice.v20231115preview.ProvisionedClusterInstance).
     *
     * @severity medium
     * @frameworks none
     * @topics api, preview, unstable
     * @link https://learn.microsoft.com/en-us/rest/api/azure/
     */
    ProvisionedClusterInstance.disallowPreviewResource = compliance_policy_manager_1.policyManager.registerPolicy({
        resourceValidationPolicy: {
            name: "azurenative-hybridcontainerservice-v20231115preview-provisionedclusterinstance-disallow-preview-resource",
            description: "Disallow the use of non-stable (Preview) Azure resouces (hybridcontainerservice.v20231115preview.ProvisionedClusterInstance).",
            configSchema: compliance_policy_manager_1.policyManager.policyConfigSchema,
            enforcementLevel: "advisory",
            validateResource: (0, policy_1.validateResourceOfType)(v20231115preview_4.ProvisionedClusterInstance, (_, args, reportViolation) => {
                if (!compliance_policy_manager_1.policyManager.shouldEvalPolicy(args)) {
                    return;
                }
                reportViolation("Azure ProvisionedClusterInstance shouldn't use an unstable API (hybridcontainerservice.v20231115preview.ProvisionedClusterInstance).");
            }),
        },
        vendors: ["azure"],
        services: ["hybridcontainerservice"],
        severity: "medium",
        topics: ["api", "unstable", "preview"],
    });
})(ProvisionedClusterInstance || (ProvisionedClusterInstance = {}));
exports.ProvisionedClusterInstance = ProvisionedClusterInstance;
var VMSkus;
(function (VMSkus) {
    /**
     * Disallow the use of non-stable (Preview) Azure resouces (hybridcontainerservice.v20231115preview.VMSkus).
     *
     * @severity medium
     * @frameworks none
     * @topics api, preview, unstable
     * @link https://learn.microsoft.com/en-us/rest/api/azure/
     */
    VMSkus.disallowPreviewResource = compliance_policy_manager_1.policyManager.registerPolicy({
        resourceValidationPolicy: {
            name: "azurenative-hybridcontainerservice-v20231115preview-vmskus-disallow-preview-resource",
            description: "Disallow the use of non-stable (Preview) Azure resouces (hybridcontainerservice.v20231115preview.VMSkus).",
            configSchema: compliance_policy_manager_1.policyManager.policyConfigSchema,
            enforcementLevel: "advisory",
            validateResource: (0, policy_1.validateResourceOfType)(v20231115preview_5.VMSkus, (_, args, reportViolation) => {
                if (!compliance_policy_manager_1.policyManager.shouldEvalPolicy(args)) {
                    return;
                }
                reportViolation("Azure VMSkus shouldn't use an unstable API (hybridcontainerservice.v20231115preview.VMSkus).");
            }),
        },
        vendors: ["azure"],
        services: ["hybridcontainerservice"],
        severity: "medium",
        topics: ["api", "unstable", "preview"],
    });
})(VMSkus || (VMSkus = {}));
exports.VMSkus = VMSkus;
var VirtualNetworkRetrieve;
(function (VirtualNetworkRetrieve) {
    /**
     * Disallow the use of non-stable (Preview) Azure resouces (hybridcontainerservice.v20231115preview.VirtualNetworkRetrieve).
     *
     * @severity medium
     * @frameworks none
     * @topics api, preview, unstable
     * @link https://learn.microsoft.com/en-us/rest/api/azure/
     */
    VirtualNetworkRetrieve.disallowPreviewResource = compliance_policy_manager_1.policyManager.registerPolicy({
        resourceValidationPolicy: {
            name: "azurenative-hybridcontainerservice-v20231115preview-virtualnetworkretrieve-disallow-preview-resource",
            description: "Disallow the use of non-stable (Preview) Azure resouces (hybridcontainerservice.v20231115preview.VirtualNetworkRetrieve).",
            configSchema: compliance_policy_manager_1.policyManager.policyConfigSchema,
            enforcementLevel: "advisory",
            validateResource: (0, policy_1.validateResourceOfType)(v20231115preview_6.VirtualNetworkRetrieve, (_, args, reportViolation) => {
                if (!compliance_policy_manager_1.policyManager.shouldEvalPolicy(args)) {
                    return;
                }
                reportViolation("Azure VirtualNetworkRetrieve shouldn't use an unstable API (hybridcontainerservice.v20231115preview.VirtualNetworkRetrieve). A compatible replacement can be found at 'hybridcontainerservice.VirtualNetworkRetrieve'.");
            }),
        },
        vendors: ["azure"],
        services: ["hybridcontainerservice"],
        severity: "medium",
        topics: ["api", "unstable", "preview"],
    });
})(VirtualNetworkRetrieve || (VirtualNetworkRetrieve = {}));
exports.VirtualNetworkRetrieve = VirtualNetworkRetrieve;
