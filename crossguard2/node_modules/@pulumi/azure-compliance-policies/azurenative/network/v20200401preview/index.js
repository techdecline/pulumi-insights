"use strict";
// Copyright 2016-2024, Pulumi Corporation.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//
// ------------------------------- WARNING -------------------------------------
// This file was programmatically generated. Do not edit unless you know what
// you're doing.
// ------------------------------- WARNING -------------------------------------
Object.defineProperty(exports, "__esModule", { value: true });
exports.PrivateResolverVirtualNetworkLink = exports.OutboundEndpoint = exports.InboundEndpoint = exports.DnsForwardingRuleset = void 0;
const policy_1 = require("@pulumi/policy");
const compliance_policy_manager_1 = require("@pulumi/compliance-policy-manager");
const v20200401preview_1 = require("@pulumi/azure-native/network/v20200401preview");
const v20200401preview_2 = require("@pulumi/azure-native/network/v20200401preview");
const v20200401preview_3 = require("@pulumi/azure-native/network/v20200401preview");
const v20200401preview_4 = require("@pulumi/azure-native/network/v20200401preview");
var DnsForwardingRuleset;
(function (DnsForwardingRuleset) {
    /**
     * Disallow the use of non-stable (Preview) Azure resouces (network.v20200401preview.DnsForwardingRuleset).
     *
     * @severity medium
     * @frameworks none
     * @topics api, preview, unstable
     * @link https://learn.microsoft.com/en-us/rest/api/azure/
     */
    DnsForwardingRuleset.disallowPreviewResource = compliance_policy_manager_1.policyManager.registerPolicy({
        resourceValidationPolicy: {
            name: "azurenative-network-v20200401preview-dnsforwardingruleset-disallow-preview-resource",
            description: "Disallow the use of non-stable (Preview) Azure resouces (network.v20200401preview.DnsForwardingRuleset).",
            configSchema: compliance_policy_manager_1.policyManager.policyConfigSchema,
            enforcementLevel: "advisory",
            validateResource: (0, policy_1.validateResourceOfType)(v20200401preview_1.DnsForwardingRuleset, (_, args, reportViolation) => {
                if (!compliance_policy_manager_1.policyManager.shouldEvalPolicy(args)) {
                    return;
                }
                reportViolation("Azure DnsForwardingRuleset shouldn't use an unstable API (network.v20200401preview.DnsForwardingRuleset). A compatible replacement can be found at 'network.DnsForwardingRuleset'.");
            }),
        },
        vendors: ["azure"],
        services: ["network"],
        severity: "medium",
        topics: ["api", "unstable", "preview"],
    });
})(DnsForwardingRuleset || (DnsForwardingRuleset = {}));
exports.DnsForwardingRuleset = DnsForwardingRuleset;
var InboundEndpoint;
(function (InboundEndpoint) {
    /**
     * Disallow the use of non-stable (Preview) Azure resouces (network.v20200401preview.InboundEndpoint).
     *
     * @severity medium
     * @frameworks none
     * @topics api, preview, unstable
     * @link https://learn.microsoft.com/en-us/rest/api/azure/
     */
    InboundEndpoint.disallowPreviewResource = compliance_policy_manager_1.policyManager.registerPolicy({
        resourceValidationPolicy: {
            name: "azurenative-network-v20200401preview-inboundendpoint-disallow-preview-resource",
            description: "Disallow the use of non-stable (Preview) Azure resouces (network.v20200401preview.InboundEndpoint).",
            configSchema: compliance_policy_manager_1.policyManager.policyConfigSchema,
            enforcementLevel: "advisory",
            validateResource: (0, policy_1.validateResourceOfType)(v20200401preview_2.InboundEndpoint, (_, args, reportViolation) => {
                if (!compliance_policy_manager_1.policyManager.shouldEvalPolicy(args)) {
                    return;
                }
                reportViolation("Azure InboundEndpoint shouldn't use an unstable API (network.v20200401preview.InboundEndpoint). A compatible replacement can be found at 'network.InboundEndpoint'.");
            }),
        },
        vendors: ["azure"],
        services: ["network"],
        severity: "medium",
        topics: ["api", "unstable", "preview"],
    });
})(InboundEndpoint || (InboundEndpoint = {}));
exports.InboundEndpoint = InboundEndpoint;
var OutboundEndpoint;
(function (OutboundEndpoint) {
    /**
     * Disallow the use of non-stable (Preview) Azure resouces (network.v20200401preview.OutboundEndpoint).
     *
     * @severity medium
     * @frameworks none
     * @topics api, preview, unstable
     * @link https://learn.microsoft.com/en-us/rest/api/azure/
     */
    OutboundEndpoint.disallowPreviewResource = compliance_policy_manager_1.policyManager.registerPolicy({
        resourceValidationPolicy: {
            name: "azurenative-network-v20200401preview-outboundendpoint-disallow-preview-resource",
            description: "Disallow the use of non-stable (Preview) Azure resouces (network.v20200401preview.OutboundEndpoint).",
            configSchema: compliance_policy_manager_1.policyManager.policyConfigSchema,
            enforcementLevel: "advisory",
            validateResource: (0, policy_1.validateResourceOfType)(v20200401preview_3.OutboundEndpoint, (_, args, reportViolation) => {
                if (!compliance_policy_manager_1.policyManager.shouldEvalPolicy(args)) {
                    return;
                }
                reportViolation("Azure OutboundEndpoint shouldn't use an unstable API (network.v20200401preview.OutboundEndpoint). A compatible replacement can be found at 'network.OutboundEndpoint'.");
            }),
        },
        vendors: ["azure"],
        services: ["network"],
        severity: "medium",
        topics: ["api", "unstable", "preview"],
    });
})(OutboundEndpoint || (OutboundEndpoint = {}));
exports.OutboundEndpoint = OutboundEndpoint;
var PrivateResolverVirtualNetworkLink;
(function (PrivateResolverVirtualNetworkLink) {
    /**
     * Disallow the use of non-stable (Preview) Azure resouces (network.v20200401preview.PrivateResolverVirtualNetworkLink).
     *
     * @severity medium
     * @frameworks none
     * @topics api, preview, unstable
     * @link https://learn.microsoft.com/en-us/rest/api/azure/
     */
    PrivateResolverVirtualNetworkLink.disallowPreviewResource = compliance_policy_manager_1.policyManager.registerPolicy({
        resourceValidationPolicy: {
            name: "azurenative-network-v20200401preview-privateresolvervirtualnetworklink-disallow-preview-resource",
            description: "Disallow the use of non-stable (Preview) Azure resouces (network.v20200401preview.PrivateResolverVirtualNetworkLink).",
            configSchema: compliance_policy_manager_1.policyManager.policyConfigSchema,
            enforcementLevel: "advisory",
            validateResource: (0, policy_1.validateResourceOfType)(v20200401preview_4.PrivateResolverVirtualNetworkLink, (_, args, reportViolation) => {
                if (!compliance_policy_manager_1.policyManager.shouldEvalPolicy(args)) {
                    return;
                }
                reportViolation("Azure PrivateResolverVirtualNetworkLink shouldn't use an unstable API (network.v20200401preview.PrivateResolverVirtualNetworkLink). A compatible replacement can be found at 'network.PrivateResolverVirtualNetworkLink'.");
            }),
        },
        vendors: ["azure"],
        services: ["network"],
        severity: "medium",
        topics: ["api", "unstable", "preview"],
    });
})(PrivateResolverVirtualNetworkLink || (PrivateResolverVirtualNetworkLink = {}));
exports.PrivateResolverVirtualNetworkLink = PrivateResolverVirtualNetworkLink;
