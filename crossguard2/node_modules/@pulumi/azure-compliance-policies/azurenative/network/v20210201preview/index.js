"use strict";
// Copyright 2016-2024, Pulumi Corporation.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//
// ------------------------------- WARNING -------------------------------------
// This file was programmatically generated. Do not edit unless you know what
// you're doing.
// ------------------------------- WARNING -------------------------------------
Object.defineProperty(exports, "__esModule", { value: true });
exports.UserRuleCollection = exports.NspProfile = exports.NspLink = exports.NspAssociation = exports.NspAccessRule = exports.NetworkSecurityPerimeter = exports.NetworkManager = exports.NetworkGroup = exports.ConnectivityConfiguration = exports.AdminRuleCollection = exports.AdminRule = void 0;
const policy_1 = require("@pulumi/policy");
const compliance_policy_manager_1 = require("@pulumi/compliance-policy-manager");
const v20210201preview_1 = require("@pulumi/azure-native/network/v20210201preview");
const v20210201preview_2 = require("@pulumi/azure-native/network/v20210201preview");
const v20210201preview_3 = require("@pulumi/azure-native/network/v20210201preview");
const v20210201preview_4 = require("@pulumi/azure-native/network/v20210201preview");
const v20210201preview_5 = require("@pulumi/azure-native/network/v20210201preview");
const v20210201preview_6 = require("@pulumi/azure-native/network/v20210201preview");
const v20210201preview_7 = require("@pulumi/azure-native/network/v20210201preview");
const v20210201preview_8 = require("@pulumi/azure-native/network/v20210201preview");
const v20210201preview_9 = require("@pulumi/azure-native/network/v20210201preview");
const v20210201preview_10 = require("@pulumi/azure-native/network/v20210201preview");
const v20210201preview_11 = require("@pulumi/azure-native/network/v20210201preview");
var AdminRule;
(function (AdminRule) {
    /**
     * Disallow the use of non-stable (Preview) Azure resouces (network.v20210201preview.AdminRule).
     *
     * @severity medium
     * @frameworks none
     * @topics api, preview, unstable
     * @link https://learn.microsoft.com/en-us/rest/api/azure/
     */
    AdminRule.disallowPreviewResource = compliance_policy_manager_1.policyManager.registerPolicy({
        resourceValidationPolicy: {
            name: "azurenative-network-v20210201preview-adminrule-disallow-preview-resource",
            description: "Disallow the use of non-stable (Preview) Azure resouces (network.v20210201preview.AdminRule).",
            configSchema: compliance_policy_manager_1.policyManager.policyConfigSchema,
            enforcementLevel: "advisory",
            validateResource: (0, policy_1.validateResourceOfType)(v20210201preview_1.AdminRule, (_, args, reportViolation) => {
                if (!compliance_policy_manager_1.policyManager.shouldEvalPolicy(args)) {
                    return;
                }
                reportViolation("Azure AdminRule shouldn't use an unstable API (network.v20210201preview.AdminRule). A compatible replacement can be found at 'network.AdminRule'.");
            }),
        },
        vendors: ["azure"],
        services: ["network"],
        severity: "medium",
        topics: ["api", "unstable", "preview"],
    });
})(AdminRule || (AdminRule = {}));
exports.AdminRule = AdminRule;
var AdminRuleCollection;
(function (AdminRuleCollection) {
    /**
     * Disallow the use of non-stable (Preview) Azure resouces (network.v20210201preview.AdminRuleCollection).
     *
     * @severity medium
     * @frameworks none
     * @topics api, preview, unstable
     * @link https://learn.microsoft.com/en-us/rest/api/azure/
     */
    AdminRuleCollection.disallowPreviewResource = compliance_policy_manager_1.policyManager.registerPolicy({
        resourceValidationPolicy: {
            name: "azurenative-network-v20210201preview-adminrulecollection-disallow-preview-resource",
            description: "Disallow the use of non-stable (Preview) Azure resouces (network.v20210201preview.AdminRuleCollection).",
            configSchema: compliance_policy_manager_1.policyManager.policyConfigSchema,
            enforcementLevel: "advisory",
            validateResource: (0, policy_1.validateResourceOfType)(v20210201preview_2.AdminRuleCollection, (_, args, reportViolation) => {
                if (!compliance_policy_manager_1.policyManager.shouldEvalPolicy(args)) {
                    return;
                }
                reportViolation("Azure AdminRuleCollection shouldn't use an unstable API (network.v20210201preview.AdminRuleCollection). A compatible replacement can be found at 'network.AdminRuleCollection'.");
            }),
        },
        vendors: ["azure"],
        services: ["network"],
        severity: "medium",
        topics: ["api", "unstable", "preview"],
    });
})(AdminRuleCollection || (AdminRuleCollection = {}));
exports.AdminRuleCollection = AdminRuleCollection;
var ConnectivityConfiguration;
(function (ConnectivityConfiguration) {
    /**
     * Disallow the use of non-stable (Preview) Azure resouces (network.v20210201preview.ConnectivityConfiguration).
     *
     * @severity medium
     * @frameworks none
     * @topics api, preview, unstable
     * @link https://learn.microsoft.com/en-us/rest/api/azure/
     */
    ConnectivityConfiguration.disallowPreviewResource = compliance_policy_manager_1.policyManager.registerPolicy({
        resourceValidationPolicy: {
            name: "azurenative-network-v20210201preview-connectivityconfiguration-disallow-preview-resource",
            description: "Disallow the use of non-stable (Preview) Azure resouces (network.v20210201preview.ConnectivityConfiguration).",
            configSchema: compliance_policy_manager_1.policyManager.policyConfigSchema,
            enforcementLevel: "advisory",
            validateResource: (0, policy_1.validateResourceOfType)(v20210201preview_3.ConnectivityConfiguration, (_, args, reportViolation) => {
                if (!compliance_policy_manager_1.policyManager.shouldEvalPolicy(args)) {
                    return;
                }
                reportViolation("Azure ConnectivityConfiguration shouldn't use an unstable API (network.v20210201preview.ConnectivityConfiguration). A compatible replacement can be found at 'network.ConnectivityConfiguration'.");
            }),
        },
        vendors: ["azure"],
        services: ["network"],
        severity: "medium",
        topics: ["api", "unstable", "preview"],
    });
})(ConnectivityConfiguration || (ConnectivityConfiguration = {}));
exports.ConnectivityConfiguration = ConnectivityConfiguration;
var NetworkGroup;
(function (NetworkGroup) {
    /**
     * Disallow the use of non-stable (Preview) Azure resouces (network.v20210201preview.NetworkGroup).
     *
     * @severity medium
     * @frameworks none
     * @topics api, preview, unstable
     * @link https://learn.microsoft.com/en-us/rest/api/azure/
     */
    NetworkGroup.disallowPreviewResource = compliance_policy_manager_1.policyManager.registerPolicy({
        resourceValidationPolicy: {
            name: "azurenative-network-v20210201preview-networkgroup-disallow-preview-resource",
            description: "Disallow the use of non-stable (Preview) Azure resouces (network.v20210201preview.NetworkGroup).",
            configSchema: compliance_policy_manager_1.policyManager.policyConfigSchema,
            enforcementLevel: "advisory",
            validateResource: (0, policy_1.validateResourceOfType)(v20210201preview_4.NetworkGroup, (_, args, reportViolation) => {
                if (!compliance_policy_manager_1.policyManager.shouldEvalPolicy(args)) {
                    return;
                }
                reportViolation("Azure NetworkGroup shouldn't use an unstable API (network.v20210201preview.NetworkGroup). A compatible replacement can be found at 'network.NetworkGroup'.");
            }),
        },
        vendors: ["azure"],
        services: ["network"],
        severity: "medium",
        topics: ["api", "unstable", "preview"],
    });
})(NetworkGroup || (NetworkGroup = {}));
exports.NetworkGroup = NetworkGroup;
var NetworkManager;
(function (NetworkManager) {
    /**
     * Disallow the use of non-stable (Preview) Azure resouces (network.v20210201preview.NetworkManager).
     *
     * @severity medium
     * @frameworks none
     * @topics api, preview, unstable
     * @link https://learn.microsoft.com/en-us/rest/api/azure/
     */
    NetworkManager.disallowPreviewResource = compliance_policy_manager_1.policyManager.registerPolicy({
        resourceValidationPolicy: {
            name: "azurenative-network-v20210201preview-networkmanager-disallow-preview-resource",
            description: "Disallow the use of non-stable (Preview) Azure resouces (network.v20210201preview.NetworkManager).",
            configSchema: compliance_policy_manager_1.policyManager.policyConfigSchema,
            enforcementLevel: "advisory",
            validateResource: (0, policy_1.validateResourceOfType)(v20210201preview_5.NetworkManager, (_, args, reportViolation) => {
                if (!compliance_policy_manager_1.policyManager.shouldEvalPolicy(args)) {
                    return;
                }
                reportViolation("Azure NetworkManager shouldn't use an unstable API (network.v20210201preview.NetworkManager). A compatible replacement can be found at 'network.NetworkManager'.");
            }),
        },
        vendors: ["azure"],
        services: ["network"],
        severity: "medium",
        topics: ["api", "unstable", "preview"],
    });
})(NetworkManager || (NetworkManager = {}));
exports.NetworkManager = NetworkManager;
var NetworkSecurityPerimeter;
(function (NetworkSecurityPerimeter) {
    /**
     * Disallow the use of non-stable (Preview) Azure resouces (network.v20210201preview.NetworkSecurityPerimeter).
     *
     * @severity medium
     * @frameworks none
     * @topics api, preview, unstable
     * @link https://learn.microsoft.com/en-us/rest/api/azure/
     */
    NetworkSecurityPerimeter.disallowPreviewResource = compliance_policy_manager_1.policyManager.registerPolicy({
        resourceValidationPolicy: {
            name: "azurenative-network-v20210201preview-networksecurityperimeter-disallow-preview-resource",
            description: "Disallow the use of non-stable (Preview) Azure resouces (network.v20210201preview.NetworkSecurityPerimeter).",
            configSchema: compliance_policy_manager_1.policyManager.policyConfigSchema,
            enforcementLevel: "advisory",
            validateResource: (0, policy_1.validateResourceOfType)(v20210201preview_6.NetworkSecurityPerimeter, (_, args, reportViolation) => {
                if (!compliance_policy_manager_1.policyManager.shouldEvalPolicy(args)) {
                    return;
                }
                reportViolation("Azure NetworkSecurityPerimeter shouldn't use an unstable API (network.v20210201preview.NetworkSecurityPerimeter). A compatible replacement can be found at 'network.NetworkSecurityPerimeter'.");
            }),
        },
        vendors: ["azure"],
        services: ["network"],
        severity: "medium",
        topics: ["api", "unstable", "preview"],
    });
})(NetworkSecurityPerimeter || (NetworkSecurityPerimeter = {}));
exports.NetworkSecurityPerimeter = NetworkSecurityPerimeter;
var NspAccessRule;
(function (NspAccessRule) {
    /**
     * Disallow the use of non-stable (Preview) Azure resouces (network.v20210201preview.NspAccessRule).
     *
     * @severity medium
     * @frameworks none
     * @topics api, preview, unstable
     * @link https://learn.microsoft.com/en-us/rest/api/azure/
     */
    NspAccessRule.disallowPreviewResource = compliance_policy_manager_1.policyManager.registerPolicy({
        resourceValidationPolicy: {
            name: "azurenative-network-v20210201preview-nspaccessrule-disallow-preview-resource",
            description: "Disallow the use of non-stable (Preview) Azure resouces (network.v20210201preview.NspAccessRule).",
            configSchema: compliance_policy_manager_1.policyManager.policyConfigSchema,
            enforcementLevel: "advisory",
            validateResource: (0, policy_1.validateResourceOfType)(v20210201preview_7.NspAccessRule, (_, args, reportViolation) => {
                if (!compliance_policy_manager_1.policyManager.shouldEvalPolicy(args)) {
                    return;
                }
                reportViolation("Azure NspAccessRule shouldn't use an unstable API (network.v20210201preview.NspAccessRule). A compatible replacement can be found at 'network.NspAccessRule'.");
            }),
        },
        vendors: ["azure"],
        services: ["network"],
        severity: "medium",
        topics: ["api", "unstable", "preview"],
    });
})(NspAccessRule || (NspAccessRule = {}));
exports.NspAccessRule = NspAccessRule;
var NspAssociation;
(function (NspAssociation) {
    /**
     * Disallow the use of non-stable (Preview) Azure resouces (network.v20210201preview.NspAssociation).
     *
     * @severity medium
     * @frameworks none
     * @topics api, preview, unstable
     * @link https://learn.microsoft.com/en-us/rest/api/azure/
     */
    NspAssociation.disallowPreviewResource = compliance_policy_manager_1.policyManager.registerPolicy({
        resourceValidationPolicy: {
            name: "azurenative-network-v20210201preview-nspassociation-disallow-preview-resource",
            description: "Disallow the use of non-stable (Preview) Azure resouces (network.v20210201preview.NspAssociation).",
            configSchema: compliance_policy_manager_1.policyManager.policyConfigSchema,
            enforcementLevel: "advisory",
            validateResource: (0, policy_1.validateResourceOfType)(v20210201preview_8.NspAssociation, (_, args, reportViolation) => {
                if (!compliance_policy_manager_1.policyManager.shouldEvalPolicy(args)) {
                    return;
                }
                reportViolation("Azure NspAssociation shouldn't use an unstable API (network.v20210201preview.NspAssociation). A compatible replacement can be found at 'network.NspAssociation'.");
            }),
        },
        vendors: ["azure"],
        services: ["network"],
        severity: "medium",
        topics: ["api", "unstable", "preview"],
    });
})(NspAssociation || (NspAssociation = {}));
exports.NspAssociation = NspAssociation;
var NspLink;
(function (NspLink) {
    /**
     * Disallow the use of non-stable (Preview) Azure resouces (network.v20210201preview.NspLink).
     *
     * @severity medium
     * @frameworks none
     * @topics api, preview, unstable
     * @link https://learn.microsoft.com/en-us/rest/api/azure/
     */
    NspLink.disallowPreviewResource = compliance_policy_manager_1.policyManager.registerPolicy({
        resourceValidationPolicy: {
            name: "azurenative-network-v20210201preview-nsplink-disallow-preview-resource",
            description: "Disallow the use of non-stable (Preview) Azure resouces (network.v20210201preview.NspLink).",
            configSchema: compliance_policy_manager_1.policyManager.policyConfigSchema,
            enforcementLevel: "advisory",
            validateResource: (0, policy_1.validateResourceOfType)(v20210201preview_9.NspLink, (_, args, reportViolation) => {
                if (!compliance_policy_manager_1.policyManager.shouldEvalPolicy(args)) {
                    return;
                }
                reportViolation("Azure NspLink shouldn't use an unstable API (network.v20210201preview.NspLink).");
            }),
        },
        vendors: ["azure"],
        services: ["network"],
        severity: "medium",
        topics: ["api", "unstable", "preview"],
    });
})(NspLink || (NspLink = {}));
exports.NspLink = NspLink;
var NspProfile;
(function (NspProfile) {
    /**
     * Disallow the use of non-stable (Preview) Azure resouces (network.v20210201preview.NspProfile).
     *
     * @severity medium
     * @frameworks none
     * @topics api, preview, unstable
     * @link https://learn.microsoft.com/en-us/rest/api/azure/
     */
    NspProfile.disallowPreviewResource = compliance_policy_manager_1.policyManager.registerPolicy({
        resourceValidationPolicy: {
            name: "azurenative-network-v20210201preview-nspprofile-disallow-preview-resource",
            description: "Disallow the use of non-stable (Preview) Azure resouces (network.v20210201preview.NspProfile).",
            configSchema: compliance_policy_manager_1.policyManager.policyConfigSchema,
            enforcementLevel: "advisory",
            validateResource: (0, policy_1.validateResourceOfType)(v20210201preview_10.NspProfile, (_, args, reportViolation) => {
                if (!compliance_policy_manager_1.policyManager.shouldEvalPolicy(args)) {
                    return;
                }
                reportViolation("Azure NspProfile shouldn't use an unstable API (network.v20210201preview.NspProfile). A compatible replacement can be found at 'network.NspProfile'.");
            }),
        },
        vendors: ["azure"],
        services: ["network"],
        severity: "medium",
        topics: ["api", "unstable", "preview"],
    });
})(NspProfile || (NspProfile = {}));
exports.NspProfile = NspProfile;
var UserRuleCollection;
(function (UserRuleCollection) {
    /**
     * Disallow the use of non-stable (Preview) Azure resouces (network.v20210201preview.UserRuleCollection).
     *
     * @severity medium
     * @frameworks none
     * @topics api, preview, unstable
     * @link https://learn.microsoft.com/en-us/rest/api/azure/
     */
    UserRuleCollection.disallowPreviewResource = compliance_policy_manager_1.policyManager.registerPolicy({
        resourceValidationPolicy: {
            name: "azurenative-network-v20210201preview-userrulecollection-disallow-preview-resource",
            description: "Disallow the use of non-stable (Preview) Azure resouces (network.v20210201preview.UserRuleCollection).",
            configSchema: compliance_policy_manager_1.policyManager.policyConfigSchema,
            enforcementLevel: "advisory",
            validateResource: (0, policy_1.validateResourceOfType)(v20210201preview_11.UserRuleCollection, (_, args, reportViolation) => {
                if (!compliance_policy_manager_1.policyManager.shouldEvalPolicy(args)) {
                    return;
                }
                reportViolation("Azure UserRuleCollection shouldn't use an unstable API (network.v20210201preview.UserRuleCollection). A compatible replacement can be found at 'network.UserRuleCollection'.");
            }),
        },
        vendors: ["azure"],
        services: ["network"],
        severity: "medium",
        topics: ["api", "unstable", "preview"],
    });
})(UserRuleCollection || (UserRuleCollection = {}));
exports.UserRuleCollection = UserRuleCollection;
