"use strict";
// Copyright 2016-2024, Pulumi Corporation.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//
// ------------------------------- WARNING -------------------------------------
// This file was programmatically generated. Do not edit unless you know what
// you're doing.
// ------------------------------- WARNING -------------------------------------
Object.defineProperty(exports, "__esModule", { value: true });
exports.UserRuleCollection = exports.UserRule = exports.SecurityUserConfiguration = exports.SecurityAdminConfiguration = exports.NetworkManager = exports.NetworkGroup = exports.DefaultUserRule = exports.DefaultAdminRule = exports.ConnectivityConfiguration = exports.AdminRuleCollection = exports.AdminRule = void 0;
const policy_1 = require("@pulumi/policy");
const compliance_policy_manager_1 = require("@pulumi/compliance-policy-manager");
const v20210501preview_1 = require("@pulumi/azure-native/network/v20210501preview");
const v20210501preview_2 = require("@pulumi/azure-native/network/v20210501preview");
const v20210501preview_3 = require("@pulumi/azure-native/network/v20210501preview");
const v20210501preview_4 = require("@pulumi/azure-native/network/v20210501preview");
const v20210501preview_5 = require("@pulumi/azure-native/network/v20210501preview");
const v20210501preview_6 = require("@pulumi/azure-native/network/v20210501preview");
const v20210501preview_7 = require("@pulumi/azure-native/network/v20210501preview");
const v20210501preview_8 = require("@pulumi/azure-native/network/v20210501preview");
const v20210501preview_9 = require("@pulumi/azure-native/network/v20210501preview");
const v20210501preview_10 = require("@pulumi/azure-native/network/v20210501preview");
const v20210501preview_11 = require("@pulumi/azure-native/network/v20210501preview");
var AdminRule;
(function (AdminRule) {
    /**
     * Disallow the use of non-stable (Preview) Azure resouces (network.v20210501preview.AdminRule).
     *
     * @severity medium
     * @frameworks none
     * @topics api, preview, unstable
     * @link https://learn.microsoft.com/en-us/rest/api/azure/
     */
    AdminRule.disallowPreviewResource = compliance_policy_manager_1.policyManager.registerPolicy({
        resourceValidationPolicy: {
            name: "azurenative-network-v20210501preview-adminrule-disallow-preview-resource",
            description: "Disallow the use of non-stable (Preview) Azure resouces (network.v20210501preview.AdminRule).",
            configSchema: compliance_policy_manager_1.policyManager.policyConfigSchema,
            enforcementLevel: "advisory",
            validateResource: (0, policy_1.validateResourceOfType)(v20210501preview_1.AdminRule, (_, args, reportViolation) => {
                if (!compliance_policy_manager_1.policyManager.shouldEvalPolicy(args)) {
                    return;
                }
                reportViolation("Azure AdminRule shouldn't use an unstable API (network.v20210501preview.AdminRule). A compatible replacement can be found at 'network.AdminRule'.");
            }),
        },
        vendors: ["azure"],
        services: ["network"],
        severity: "medium",
        topics: ["api", "unstable", "preview"],
    });
})(AdminRule || (AdminRule = {}));
exports.AdminRule = AdminRule;
var AdminRuleCollection;
(function (AdminRuleCollection) {
    /**
     * Disallow the use of non-stable (Preview) Azure resouces (network.v20210501preview.AdminRuleCollection).
     *
     * @severity medium
     * @frameworks none
     * @topics api, preview, unstable
     * @link https://learn.microsoft.com/en-us/rest/api/azure/
     */
    AdminRuleCollection.disallowPreviewResource = compliance_policy_manager_1.policyManager.registerPolicy({
        resourceValidationPolicy: {
            name: "azurenative-network-v20210501preview-adminrulecollection-disallow-preview-resource",
            description: "Disallow the use of non-stable (Preview) Azure resouces (network.v20210501preview.AdminRuleCollection).",
            configSchema: compliance_policy_manager_1.policyManager.policyConfigSchema,
            enforcementLevel: "advisory",
            validateResource: (0, policy_1.validateResourceOfType)(v20210501preview_2.AdminRuleCollection, (_, args, reportViolation) => {
                if (!compliance_policy_manager_1.policyManager.shouldEvalPolicy(args)) {
                    return;
                }
                reportViolation("Azure AdminRuleCollection shouldn't use an unstable API (network.v20210501preview.AdminRuleCollection). A compatible replacement can be found at 'network.AdminRuleCollection'.");
            }),
        },
        vendors: ["azure"],
        services: ["network"],
        severity: "medium",
        topics: ["api", "unstable", "preview"],
    });
})(AdminRuleCollection || (AdminRuleCollection = {}));
exports.AdminRuleCollection = AdminRuleCollection;
var ConnectivityConfiguration;
(function (ConnectivityConfiguration) {
    /**
     * Disallow the use of non-stable (Preview) Azure resouces (network.v20210501preview.ConnectivityConfiguration).
     *
     * @severity medium
     * @frameworks none
     * @topics api, preview, unstable
     * @link https://learn.microsoft.com/en-us/rest/api/azure/
     */
    ConnectivityConfiguration.disallowPreviewResource = compliance_policy_manager_1.policyManager.registerPolicy({
        resourceValidationPolicy: {
            name: "azurenative-network-v20210501preview-connectivityconfiguration-disallow-preview-resource",
            description: "Disallow the use of non-stable (Preview) Azure resouces (network.v20210501preview.ConnectivityConfiguration).",
            configSchema: compliance_policy_manager_1.policyManager.policyConfigSchema,
            enforcementLevel: "advisory",
            validateResource: (0, policy_1.validateResourceOfType)(v20210501preview_3.ConnectivityConfiguration, (_, args, reportViolation) => {
                if (!compliance_policy_manager_1.policyManager.shouldEvalPolicy(args)) {
                    return;
                }
                reportViolation("Azure ConnectivityConfiguration shouldn't use an unstable API (network.v20210501preview.ConnectivityConfiguration). A compatible replacement can be found at 'network.ConnectivityConfiguration'.");
            }),
        },
        vendors: ["azure"],
        services: ["network"],
        severity: "medium",
        topics: ["api", "unstable", "preview"],
    });
})(ConnectivityConfiguration || (ConnectivityConfiguration = {}));
exports.ConnectivityConfiguration = ConnectivityConfiguration;
var DefaultAdminRule;
(function (DefaultAdminRule) {
    /**
     * Disallow the use of non-stable (Preview) Azure resouces (network.v20210501preview.DefaultAdminRule).
     *
     * @severity medium
     * @frameworks none
     * @topics api, preview, unstable
     * @link https://learn.microsoft.com/en-us/rest/api/azure/
     */
    DefaultAdminRule.disallowPreviewResource = compliance_policy_manager_1.policyManager.registerPolicy({
        resourceValidationPolicy: {
            name: "azurenative-network-v20210501preview-defaultadminrule-disallow-preview-resource",
            description: "Disallow the use of non-stable (Preview) Azure resouces (network.v20210501preview.DefaultAdminRule).",
            configSchema: compliance_policy_manager_1.policyManager.policyConfigSchema,
            enforcementLevel: "advisory",
            validateResource: (0, policy_1.validateResourceOfType)(v20210501preview_4.DefaultAdminRule, (_, args, reportViolation) => {
                if (!compliance_policy_manager_1.policyManager.shouldEvalPolicy(args)) {
                    return;
                }
                reportViolation("Azure DefaultAdminRule shouldn't use an unstable API (network.v20210501preview.DefaultAdminRule). A compatible replacement can be found at 'network.DefaultAdminRule'.");
            }),
        },
        vendors: ["azure"],
        services: ["network"],
        severity: "medium",
        topics: ["api", "unstable", "preview"],
    });
})(DefaultAdminRule || (DefaultAdminRule = {}));
exports.DefaultAdminRule = DefaultAdminRule;
var DefaultUserRule;
(function (DefaultUserRule) {
    /**
     * Disallow the use of non-stable (Preview) Azure resouces (network.v20210501preview.DefaultUserRule).
     *
     * @severity medium
     * @frameworks none
     * @topics api, preview, unstable
     * @link https://learn.microsoft.com/en-us/rest/api/azure/
     */
    DefaultUserRule.disallowPreviewResource = compliance_policy_manager_1.policyManager.registerPolicy({
        resourceValidationPolicy: {
            name: "azurenative-network-v20210501preview-defaultuserrule-disallow-preview-resource",
            description: "Disallow the use of non-stable (Preview) Azure resouces (network.v20210501preview.DefaultUserRule).",
            configSchema: compliance_policy_manager_1.policyManager.policyConfigSchema,
            enforcementLevel: "advisory",
            validateResource: (0, policy_1.validateResourceOfType)(v20210501preview_5.DefaultUserRule, (_, args, reportViolation) => {
                if (!compliance_policy_manager_1.policyManager.shouldEvalPolicy(args)) {
                    return;
                }
                reportViolation("Azure DefaultUserRule shouldn't use an unstable API (network.v20210501preview.DefaultUserRule). A compatible replacement can be found at 'network.DefaultUserRule'.");
            }),
        },
        vendors: ["azure"],
        services: ["network"],
        severity: "medium",
        topics: ["api", "unstable", "preview"],
    });
})(DefaultUserRule || (DefaultUserRule = {}));
exports.DefaultUserRule = DefaultUserRule;
var NetworkGroup;
(function (NetworkGroup) {
    /**
     * Disallow the use of non-stable (Preview) Azure resouces (network.v20210501preview.NetworkGroup).
     *
     * @severity medium
     * @frameworks none
     * @topics api, preview, unstable
     * @link https://learn.microsoft.com/en-us/rest/api/azure/
     */
    NetworkGroup.disallowPreviewResource = compliance_policy_manager_1.policyManager.registerPolicy({
        resourceValidationPolicy: {
            name: "azurenative-network-v20210501preview-networkgroup-disallow-preview-resource",
            description: "Disallow the use of non-stable (Preview) Azure resouces (network.v20210501preview.NetworkGroup).",
            configSchema: compliance_policy_manager_1.policyManager.policyConfigSchema,
            enforcementLevel: "advisory",
            validateResource: (0, policy_1.validateResourceOfType)(v20210501preview_6.NetworkGroup, (_, args, reportViolation) => {
                if (!compliance_policy_manager_1.policyManager.shouldEvalPolicy(args)) {
                    return;
                }
                reportViolation("Azure NetworkGroup shouldn't use an unstable API (network.v20210501preview.NetworkGroup). A compatible replacement can be found at 'network.NetworkGroup'.");
            }),
        },
        vendors: ["azure"],
        services: ["network"],
        severity: "medium",
        topics: ["api", "unstable", "preview"],
    });
})(NetworkGroup || (NetworkGroup = {}));
exports.NetworkGroup = NetworkGroup;
var NetworkManager;
(function (NetworkManager) {
    /**
     * Disallow the use of non-stable (Preview) Azure resouces (network.v20210501preview.NetworkManager).
     *
     * @severity medium
     * @frameworks none
     * @topics api, preview, unstable
     * @link https://learn.microsoft.com/en-us/rest/api/azure/
     */
    NetworkManager.disallowPreviewResource = compliance_policy_manager_1.policyManager.registerPolicy({
        resourceValidationPolicy: {
            name: "azurenative-network-v20210501preview-networkmanager-disallow-preview-resource",
            description: "Disallow the use of non-stable (Preview) Azure resouces (network.v20210501preview.NetworkManager).",
            configSchema: compliance_policy_manager_1.policyManager.policyConfigSchema,
            enforcementLevel: "advisory",
            validateResource: (0, policy_1.validateResourceOfType)(v20210501preview_7.NetworkManager, (_, args, reportViolation) => {
                if (!compliance_policy_manager_1.policyManager.shouldEvalPolicy(args)) {
                    return;
                }
                reportViolation("Azure NetworkManager shouldn't use an unstable API (network.v20210501preview.NetworkManager). A compatible replacement can be found at 'network.NetworkManager'.");
            }),
        },
        vendors: ["azure"],
        services: ["network"],
        severity: "medium",
        topics: ["api", "unstable", "preview"],
    });
})(NetworkManager || (NetworkManager = {}));
exports.NetworkManager = NetworkManager;
var SecurityAdminConfiguration;
(function (SecurityAdminConfiguration) {
    /**
     * Disallow the use of non-stable (Preview) Azure resouces (network.v20210501preview.SecurityAdminConfiguration).
     *
     * @severity medium
     * @frameworks none
     * @topics api, preview, unstable
     * @link https://learn.microsoft.com/en-us/rest/api/azure/
     */
    SecurityAdminConfiguration.disallowPreviewResource = compliance_policy_manager_1.policyManager.registerPolicy({
        resourceValidationPolicy: {
            name: "azurenative-network-v20210501preview-securityadminconfiguration-disallow-preview-resource",
            description: "Disallow the use of non-stable (Preview) Azure resouces (network.v20210501preview.SecurityAdminConfiguration).",
            configSchema: compliance_policy_manager_1.policyManager.policyConfigSchema,
            enforcementLevel: "advisory",
            validateResource: (0, policy_1.validateResourceOfType)(v20210501preview_8.SecurityAdminConfiguration, (_, args, reportViolation) => {
                if (!compliance_policy_manager_1.policyManager.shouldEvalPolicy(args)) {
                    return;
                }
                reportViolation("Azure SecurityAdminConfiguration shouldn't use an unstable API (network.v20210501preview.SecurityAdminConfiguration). A compatible replacement can be found at 'network.SecurityAdminConfiguration'.");
            }),
        },
        vendors: ["azure"],
        services: ["network"],
        severity: "medium",
        topics: ["api", "unstable", "preview"],
    });
})(SecurityAdminConfiguration || (SecurityAdminConfiguration = {}));
exports.SecurityAdminConfiguration = SecurityAdminConfiguration;
var SecurityUserConfiguration;
(function (SecurityUserConfiguration) {
    /**
     * Disallow the use of non-stable (Preview) Azure resouces (network.v20210501preview.SecurityUserConfiguration).
     *
     * @severity medium
     * @frameworks none
     * @topics api, preview, unstable
     * @link https://learn.microsoft.com/en-us/rest/api/azure/
     */
    SecurityUserConfiguration.disallowPreviewResource = compliance_policy_manager_1.policyManager.registerPolicy({
        resourceValidationPolicy: {
            name: "azurenative-network-v20210501preview-securityuserconfiguration-disallow-preview-resource",
            description: "Disallow the use of non-stable (Preview) Azure resouces (network.v20210501preview.SecurityUserConfiguration).",
            configSchema: compliance_policy_manager_1.policyManager.policyConfigSchema,
            enforcementLevel: "advisory",
            validateResource: (0, policy_1.validateResourceOfType)(v20210501preview_9.SecurityUserConfiguration, (_, args, reportViolation) => {
                if (!compliance_policy_manager_1.policyManager.shouldEvalPolicy(args)) {
                    return;
                }
                reportViolation("Azure SecurityUserConfiguration shouldn't use an unstable API (network.v20210501preview.SecurityUserConfiguration). A compatible replacement can be found at 'network.SecurityUserConfiguration'.");
            }),
        },
        vendors: ["azure"],
        services: ["network"],
        severity: "medium",
        topics: ["api", "unstable", "preview"],
    });
})(SecurityUserConfiguration || (SecurityUserConfiguration = {}));
exports.SecurityUserConfiguration = SecurityUserConfiguration;
var UserRule;
(function (UserRule) {
    /**
     * Disallow the use of non-stable (Preview) Azure resouces (network.v20210501preview.UserRule).
     *
     * @severity medium
     * @frameworks none
     * @topics api, preview, unstable
     * @link https://learn.microsoft.com/en-us/rest/api/azure/
     */
    UserRule.disallowPreviewResource = compliance_policy_manager_1.policyManager.registerPolicy({
        resourceValidationPolicy: {
            name: "azurenative-network-v20210501preview-userrule-disallow-preview-resource",
            description: "Disallow the use of non-stable (Preview) Azure resouces (network.v20210501preview.UserRule).",
            configSchema: compliance_policy_manager_1.policyManager.policyConfigSchema,
            enforcementLevel: "advisory",
            validateResource: (0, policy_1.validateResourceOfType)(v20210501preview_10.UserRule, (_, args, reportViolation) => {
                if (!compliance_policy_manager_1.policyManager.shouldEvalPolicy(args)) {
                    return;
                }
                reportViolation("Azure UserRule shouldn't use an unstable API (network.v20210501preview.UserRule). A compatible replacement can be found at 'network.UserRule'.");
            }),
        },
        vendors: ["azure"],
        services: ["network"],
        severity: "medium",
        topics: ["api", "unstable", "preview"],
    });
})(UserRule || (UserRule = {}));
exports.UserRule = UserRule;
var UserRuleCollection;
(function (UserRuleCollection) {
    /**
     * Disallow the use of non-stable (Preview) Azure resouces (network.v20210501preview.UserRuleCollection).
     *
     * @severity medium
     * @frameworks none
     * @topics api, preview, unstable
     * @link https://learn.microsoft.com/en-us/rest/api/azure/
     */
    UserRuleCollection.disallowPreviewResource = compliance_policy_manager_1.policyManager.registerPolicy({
        resourceValidationPolicy: {
            name: "azurenative-network-v20210501preview-userrulecollection-disallow-preview-resource",
            description: "Disallow the use of non-stable (Preview) Azure resouces (network.v20210501preview.UserRuleCollection).",
            configSchema: compliance_policy_manager_1.policyManager.policyConfigSchema,
            enforcementLevel: "advisory",
            validateResource: (0, policy_1.validateResourceOfType)(v20210501preview_11.UserRuleCollection, (_, args, reportViolation) => {
                if (!compliance_policy_manager_1.policyManager.shouldEvalPolicy(args)) {
                    return;
                }
                reportViolation("Azure UserRuleCollection shouldn't use an unstable API (network.v20210501preview.UserRuleCollection). A compatible replacement can be found at 'network.UserRuleCollection'.");
            }),
        },
        vendors: ["azure"],
        services: ["network"],
        severity: "medium",
        topics: ["api", "unstable", "preview"],
    });
})(UserRuleCollection || (UserRuleCollection = {}));
exports.UserRuleCollection = UserRuleCollection;
