"use strict";
// Copyright 2016-2024, Pulumi Corporation.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//
// ------------------------------- WARNING -------------------------------------
// This file was programmatically generated. Do not edit unless you know what
// you're doing.
// ------------------------------- WARNING -------------------------------------
Object.defineProperty(exports, "__esModule", { value: true });
exports.VerifierWorkspace = exports.StaticCidr = exports.SecurityAdminConfiguration = exports.ReachabilityAnalysisRun = exports.ReachabilityAnalysisIntent = exports.NetworkManager = exports.IpamPool = exports.DefaultAdminRule = exports.AdminRuleCollection = exports.AdminRule = void 0;
const policy_1 = require("@pulumi/policy");
const compliance_policy_manager_1 = require("@pulumi/compliance-policy-manager");
const v20240101preview_1 = require("@pulumi/azure-native/network/v20240101preview");
const v20240101preview_2 = require("@pulumi/azure-native/network/v20240101preview");
const v20240101preview_3 = require("@pulumi/azure-native/network/v20240101preview");
const v20240101preview_4 = require("@pulumi/azure-native/network/v20240101preview");
const v20240101preview_5 = require("@pulumi/azure-native/network/v20240101preview");
const v20240101preview_6 = require("@pulumi/azure-native/network/v20240101preview");
const v20240101preview_7 = require("@pulumi/azure-native/network/v20240101preview");
const v20240101preview_8 = require("@pulumi/azure-native/network/v20240101preview");
const v20240101preview_9 = require("@pulumi/azure-native/network/v20240101preview");
const v20240101preview_10 = require("@pulumi/azure-native/network/v20240101preview");
var AdminRule;
(function (AdminRule) {
    /**
     * Disallow the use of non-stable (Preview) Azure resouces (network.v20240101preview.AdminRule).
     *
     * @severity medium
     * @frameworks none
     * @topics api, preview, unstable
     * @link https://learn.microsoft.com/en-us/rest/api/azure/
     */
    AdminRule.disallowPreviewResource = compliance_policy_manager_1.policyManager.registerPolicy({
        resourceValidationPolicy: {
            name: "azurenative-network-v20240101preview-adminrule-disallow-preview-resource",
            description: "Disallow the use of non-stable (Preview) Azure resouces (network.v20240101preview.AdminRule).",
            configSchema: compliance_policy_manager_1.policyManager.policyConfigSchema,
            enforcementLevel: "advisory",
            validateResource: (0, policy_1.validateResourceOfType)(v20240101preview_1.AdminRule, (_, args, reportViolation) => {
                if (!compliance_policy_manager_1.policyManager.shouldEvalPolicy(args)) {
                    return;
                }
                reportViolation("Azure AdminRule shouldn't use an unstable API (network.v20240101preview.AdminRule). A compatible replacement can be found at 'network.AdminRule'.");
            }),
        },
        vendors: ["azure"],
        services: ["network"],
        severity: "medium",
        topics: ["api", "unstable", "preview"],
    });
})(AdminRule || (AdminRule = {}));
exports.AdminRule = AdminRule;
var AdminRuleCollection;
(function (AdminRuleCollection) {
    /**
     * Disallow the use of non-stable (Preview) Azure resouces (network.v20240101preview.AdminRuleCollection).
     *
     * @severity medium
     * @frameworks none
     * @topics api, preview, unstable
     * @link https://learn.microsoft.com/en-us/rest/api/azure/
     */
    AdminRuleCollection.disallowPreviewResource = compliance_policy_manager_1.policyManager.registerPolicy({
        resourceValidationPolicy: {
            name: "azurenative-network-v20240101preview-adminrulecollection-disallow-preview-resource",
            description: "Disallow the use of non-stable (Preview) Azure resouces (network.v20240101preview.AdminRuleCollection).",
            configSchema: compliance_policy_manager_1.policyManager.policyConfigSchema,
            enforcementLevel: "advisory",
            validateResource: (0, policy_1.validateResourceOfType)(v20240101preview_2.AdminRuleCollection, (_, args, reportViolation) => {
                if (!compliance_policy_manager_1.policyManager.shouldEvalPolicy(args)) {
                    return;
                }
                reportViolation("Azure AdminRuleCollection shouldn't use an unstable API (network.v20240101preview.AdminRuleCollection). A compatible replacement can be found at 'network.AdminRuleCollection'.");
            }),
        },
        vendors: ["azure"],
        services: ["network"],
        severity: "medium",
        topics: ["api", "unstable", "preview"],
    });
})(AdminRuleCollection || (AdminRuleCollection = {}));
exports.AdminRuleCollection = AdminRuleCollection;
var DefaultAdminRule;
(function (DefaultAdminRule) {
    /**
     * Disallow the use of non-stable (Preview) Azure resouces (network.v20240101preview.DefaultAdminRule).
     *
     * @severity medium
     * @frameworks none
     * @topics api, preview, unstable
     * @link https://learn.microsoft.com/en-us/rest/api/azure/
     */
    DefaultAdminRule.disallowPreviewResource = compliance_policy_manager_1.policyManager.registerPolicy({
        resourceValidationPolicy: {
            name: "azurenative-network-v20240101preview-defaultadminrule-disallow-preview-resource",
            description: "Disallow the use of non-stable (Preview) Azure resouces (network.v20240101preview.DefaultAdminRule).",
            configSchema: compliance_policy_manager_1.policyManager.policyConfigSchema,
            enforcementLevel: "advisory",
            validateResource: (0, policy_1.validateResourceOfType)(v20240101preview_3.DefaultAdminRule, (_, args, reportViolation) => {
                if (!compliance_policy_manager_1.policyManager.shouldEvalPolicy(args)) {
                    return;
                }
                reportViolation("Azure DefaultAdminRule shouldn't use an unstable API (network.v20240101preview.DefaultAdminRule). A compatible replacement can be found at 'network.DefaultAdminRule'.");
            }),
        },
        vendors: ["azure"],
        services: ["network"],
        severity: "medium",
        topics: ["api", "unstable", "preview"],
    });
})(DefaultAdminRule || (DefaultAdminRule = {}));
exports.DefaultAdminRule = DefaultAdminRule;
var IpamPool;
(function (IpamPool) {
    /**
     * Disallow the use of non-stable (Preview) Azure resouces (network.v20240101preview.IpamPool).
     *
     * @severity medium
     * @frameworks none
     * @topics api, preview, unstable
     * @link https://learn.microsoft.com/en-us/rest/api/azure/
     */
    IpamPool.disallowPreviewResource = compliance_policy_manager_1.policyManager.registerPolicy({
        resourceValidationPolicy: {
            name: "azurenative-network-v20240101preview-ipampool-disallow-preview-resource",
            description: "Disallow the use of non-stable (Preview) Azure resouces (network.v20240101preview.IpamPool).",
            configSchema: compliance_policy_manager_1.policyManager.policyConfigSchema,
            enforcementLevel: "advisory",
            validateResource: (0, policy_1.validateResourceOfType)(v20240101preview_4.IpamPool, (_, args, reportViolation) => {
                if (!compliance_policy_manager_1.policyManager.shouldEvalPolicy(args)) {
                    return;
                }
                reportViolation("Azure IpamPool shouldn't use an unstable API (network.v20240101preview.IpamPool). A compatible replacement can be found at 'network.IpamPool'.");
            }),
        },
        vendors: ["azure"],
        services: ["network"],
        severity: "medium",
        topics: ["api", "unstable", "preview"],
    });
})(IpamPool || (IpamPool = {}));
exports.IpamPool = IpamPool;
var NetworkManager;
(function (NetworkManager) {
    /**
     * Disallow the use of non-stable (Preview) Azure resouces (network.v20240101preview.NetworkManager).
     *
     * @severity medium
     * @frameworks none
     * @topics api, preview, unstable
     * @link https://learn.microsoft.com/en-us/rest/api/azure/
     */
    NetworkManager.disallowPreviewResource = compliance_policy_manager_1.policyManager.registerPolicy({
        resourceValidationPolicy: {
            name: "azurenative-network-v20240101preview-networkmanager-disallow-preview-resource",
            description: "Disallow the use of non-stable (Preview) Azure resouces (network.v20240101preview.NetworkManager).",
            configSchema: compliance_policy_manager_1.policyManager.policyConfigSchema,
            enforcementLevel: "advisory",
            validateResource: (0, policy_1.validateResourceOfType)(v20240101preview_5.NetworkManager, (_, args, reportViolation) => {
                if (!compliance_policy_manager_1.policyManager.shouldEvalPolicy(args)) {
                    return;
                }
                reportViolation("Azure NetworkManager shouldn't use an unstable API (network.v20240101preview.NetworkManager). A compatible replacement can be found at 'network.NetworkManager'.");
            }),
        },
        vendors: ["azure"],
        services: ["network"],
        severity: "medium",
        topics: ["api", "unstable", "preview"],
    });
})(NetworkManager || (NetworkManager = {}));
exports.NetworkManager = NetworkManager;
var ReachabilityAnalysisIntent;
(function (ReachabilityAnalysisIntent) {
    /**
     * Disallow the use of non-stable (Preview) Azure resouces (network.v20240101preview.ReachabilityAnalysisIntent).
     *
     * @severity medium
     * @frameworks none
     * @topics api, preview, unstable
     * @link https://learn.microsoft.com/en-us/rest/api/azure/
     */
    ReachabilityAnalysisIntent.disallowPreviewResource = compliance_policy_manager_1.policyManager.registerPolicy({
        resourceValidationPolicy: {
            name: "azurenative-network-v20240101preview-reachabilityanalysisintent-disallow-preview-resource",
            description: "Disallow the use of non-stable (Preview) Azure resouces (network.v20240101preview.ReachabilityAnalysisIntent).",
            configSchema: compliance_policy_manager_1.policyManager.policyConfigSchema,
            enforcementLevel: "advisory",
            validateResource: (0, policy_1.validateResourceOfType)(v20240101preview_6.ReachabilityAnalysisIntent, (_, args, reportViolation) => {
                if (!compliance_policy_manager_1.policyManager.shouldEvalPolicy(args)) {
                    return;
                }
                reportViolation("Azure ReachabilityAnalysisIntent shouldn't use an unstable API (network.v20240101preview.ReachabilityAnalysisIntent). A compatible replacement can be found at 'network.ReachabilityAnalysisIntent'.");
            }),
        },
        vendors: ["azure"],
        services: ["network"],
        severity: "medium",
        topics: ["api", "unstable", "preview"],
    });
})(ReachabilityAnalysisIntent || (ReachabilityAnalysisIntent = {}));
exports.ReachabilityAnalysisIntent = ReachabilityAnalysisIntent;
var ReachabilityAnalysisRun;
(function (ReachabilityAnalysisRun) {
    /**
     * Disallow the use of non-stable (Preview) Azure resouces (network.v20240101preview.ReachabilityAnalysisRun).
     *
     * @severity medium
     * @frameworks none
     * @topics api, preview, unstable
     * @link https://learn.microsoft.com/en-us/rest/api/azure/
     */
    ReachabilityAnalysisRun.disallowPreviewResource = compliance_policy_manager_1.policyManager.registerPolicy({
        resourceValidationPolicy: {
            name: "azurenative-network-v20240101preview-reachabilityanalysisrun-disallow-preview-resource",
            description: "Disallow the use of non-stable (Preview) Azure resouces (network.v20240101preview.ReachabilityAnalysisRun).",
            configSchema: compliance_policy_manager_1.policyManager.policyConfigSchema,
            enforcementLevel: "advisory",
            validateResource: (0, policy_1.validateResourceOfType)(v20240101preview_7.ReachabilityAnalysisRun, (_, args, reportViolation) => {
                if (!compliance_policy_manager_1.policyManager.shouldEvalPolicy(args)) {
                    return;
                }
                reportViolation("Azure ReachabilityAnalysisRun shouldn't use an unstable API (network.v20240101preview.ReachabilityAnalysisRun). A compatible replacement can be found at 'network.ReachabilityAnalysisRun'.");
            }),
        },
        vendors: ["azure"],
        services: ["network"],
        severity: "medium",
        topics: ["api", "unstable", "preview"],
    });
})(ReachabilityAnalysisRun || (ReachabilityAnalysisRun = {}));
exports.ReachabilityAnalysisRun = ReachabilityAnalysisRun;
var SecurityAdminConfiguration;
(function (SecurityAdminConfiguration) {
    /**
     * Disallow the use of non-stable (Preview) Azure resouces (network.v20240101preview.SecurityAdminConfiguration).
     *
     * @severity medium
     * @frameworks none
     * @topics api, preview, unstable
     * @link https://learn.microsoft.com/en-us/rest/api/azure/
     */
    SecurityAdminConfiguration.disallowPreviewResource = compliance_policy_manager_1.policyManager.registerPolicy({
        resourceValidationPolicy: {
            name: "azurenative-network-v20240101preview-securityadminconfiguration-disallow-preview-resource",
            description: "Disallow the use of non-stable (Preview) Azure resouces (network.v20240101preview.SecurityAdminConfiguration).",
            configSchema: compliance_policy_manager_1.policyManager.policyConfigSchema,
            enforcementLevel: "advisory",
            validateResource: (0, policy_1.validateResourceOfType)(v20240101preview_8.SecurityAdminConfiguration, (_, args, reportViolation) => {
                if (!compliance_policy_manager_1.policyManager.shouldEvalPolicy(args)) {
                    return;
                }
                reportViolation("Azure SecurityAdminConfiguration shouldn't use an unstable API (network.v20240101preview.SecurityAdminConfiguration). A compatible replacement can be found at 'network.SecurityAdminConfiguration'.");
            }),
        },
        vendors: ["azure"],
        services: ["network"],
        severity: "medium",
        topics: ["api", "unstable", "preview"],
    });
})(SecurityAdminConfiguration || (SecurityAdminConfiguration = {}));
exports.SecurityAdminConfiguration = SecurityAdminConfiguration;
var StaticCidr;
(function (StaticCidr) {
    /**
     * Disallow the use of non-stable (Preview) Azure resouces (network.v20240101preview.StaticCidr).
     *
     * @severity medium
     * @frameworks none
     * @topics api, preview, unstable
     * @link https://learn.microsoft.com/en-us/rest/api/azure/
     */
    StaticCidr.disallowPreviewResource = compliance_policy_manager_1.policyManager.registerPolicy({
        resourceValidationPolicy: {
            name: "azurenative-network-v20240101preview-staticcidr-disallow-preview-resource",
            description: "Disallow the use of non-stable (Preview) Azure resouces (network.v20240101preview.StaticCidr).",
            configSchema: compliance_policy_manager_1.policyManager.policyConfigSchema,
            enforcementLevel: "advisory",
            validateResource: (0, policy_1.validateResourceOfType)(v20240101preview_9.StaticCidr, (_, args, reportViolation) => {
                if (!compliance_policy_manager_1.policyManager.shouldEvalPolicy(args)) {
                    return;
                }
                reportViolation("Azure StaticCidr shouldn't use an unstable API (network.v20240101preview.StaticCidr). A compatible replacement can be found at 'network.StaticCidr'.");
            }),
        },
        vendors: ["azure"],
        services: ["network"],
        severity: "medium",
        topics: ["api", "unstable", "preview"],
    });
})(StaticCidr || (StaticCidr = {}));
exports.StaticCidr = StaticCidr;
var VerifierWorkspace;
(function (VerifierWorkspace) {
    /**
     * Disallow the use of non-stable (Preview) Azure resouces (network.v20240101preview.VerifierWorkspace).
     *
     * @severity medium
     * @frameworks none
     * @topics api, preview, unstable
     * @link https://learn.microsoft.com/en-us/rest/api/azure/
     */
    VerifierWorkspace.disallowPreviewResource = compliance_policy_manager_1.policyManager.registerPolicy({
        resourceValidationPolicy: {
            name: "azurenative-network-v20240101preview-verifierworkspace-disallow-preview-resource",
            description: "Disallow the use of non-stable (Preview) Azure resouces (network.v20240101preview.VerifierWorkspace).",
            configSchema: compliance_policy_manager_1.policyManager.policyConfigSchema,
            enforcementLevel: "advisory",
            validateResource: (0, policy_1.validateResourceOfType)(v20240101preview_10.VerifierWorkspace, (_, args, reportViolation) => {
                if (!compliance_policy_manager_1.policyManager.shouldEvalPolicy(args)) {
                    return;
                }
                reportViolation("Azure VerifierWorkspace shouldn't use an unstable API (network.v20240101preview.VerifierWorkspace). A compatible replacement can be found at 'network.VerifierWorkspace'.");
            }),
        },
        vendors: ["azure"],
        services: ["network"],
        severity: "medium",
        topics: ["api", "unstable", "preview"],
    });
})(VerifierWorkspace || (VerifierWorkspace = {}));
exports.VerifierWorkspace = VerifierWorkspace;
