"use strict";
// Copyright 2016-2024, Pulumi Corporation.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//
// ------------------------------- WARNING -------------------------------------
// This file was programmatically generated. Do not edit unless you know what
// you're doing.
// ------------------------------- WARNING -------------------------------------
Object.defineProperty(exports, "__esModule", { value: true });
exports.Vault = exports.Secret = exports.PrivateEndpointConnection = exports.ManagedHsm = exports.MHSMPrivateEndpointConnection = exports.Key = void 0;
const policy_1 = require("@pulumi/policy");
const compliance_policy_manager_1 = require("@pulumi/compliance-policy-manager");
const v20240401preview_1 = require("@pulumi/azure-native/keyvault/v20240401preview");
const v20240401preview_2 = require("@pulumi/azure-native/keyvault/v20240401preview");
const v20240401preview_3 = require("@pulumi/azure-native/keyvault/v20240401preview");
const v20240401preview_4 = require("@pulumi/azure-native/keyvault/v20240401preview");
const v20240401preview_5 = require("@pulumi/azure-native/keyvault/v20240401preview");
const v20240401preview_6 = require("@pulumi/azure-native/keyvault/v20240401preview");
var Key;
(function (Key) {
    /**
     * Disallow the use of non-stable (Preview) Azure resouces (keyvault.v20240401preview.Key).
     *
     * @severity medium
     * @frameworks none
     * @topics api, preview, unstable
     * @link https://learn.microsoft.com/en-us/rest/api/azure/
     */
    Key.disallowPreviewResource = compliance_policy_manager_1.policyManager.registerPolicy({
        resourceValidationPolicy: {
            name: "azurenative-keyvault-v20240401preview-key-disallow-preview-resource",
            description: "Disallow the use of non-stable (Preview) Azure resouces (keyvault.v20240401preview.Key).",
            configSchema: compliance_policy_manager_1.policyManager.policyConfigSchema,
            enforcementLevel: "advisory",
            validateResource: (0, policy_1.validateResourceOfType)(v20240401preview_1.Key, (_, args, reportViolation) => {
                if (!compliance_policy_manager_1.policyManager.shouldEvalPolicy(args)) {
                    return;
                }
                reportViolation("Azure Key shouldn't use an unstable API (keyvault.v20240401preview.Key). A compatible replacement can be found at 'keyvault.Key'.");
            }),
        },
        vendors: ["azure"],
        services: ["keyvault"],
        severity: "medium",
        topics: ["api", "unstable", "preview"],
    });
})(Key || (Key = {}));
exports.Key = Key;
var MHSMPrivateEndpointConnection;
(function (MHSMPrivateEndpointConnection) {
    /**
     * Disallow the use of non-stable (Preview) Azure resouces (keyvault.v20240401preview.MHSMPrivateEndpointConnection).
     *
     * @severity medium
     * @frameworks none
     * @topics api, preview, unstable
     * @link https://learn.microsoft.com/en-us/rest/api/azure/
     */
    MHSMPrivateEndpointConnection.disallowPreviewResource = compliance_policy_manager_1.policyManager.registerPolicy({
        resourceValidationPolicy: {
            name: "azurenative-keyvault-v20240401preview-mhsmprivateendpointconnection-disallow-preview-resource",
            description: "Disallow the use of non-stable (Preview) Azure resouces (keyvault.v20240401preview.MHSMPrivateEndpointConnection).",
            configSchema: compliance_policy_manager_1.policyManager.policyConfigSchema,
            enforcementLevel: "advisory",
            validateResource: (0, policy_1.validateResourceOfType)(v20240401preview_2.MHSMPrivateEndpointConnection, (_, args, reportViolation) => {
                if (!compliance_policy_manager_1.policyManager.shouldEvalPolicy(args)) {
                    return;
                }
                reportViolation("Azure MHSMPrivateEndpointConnection shouldn't use an unstable API (keyvault.v20240401preview.MHSMPrivateEndpointConnection). A compatible replacement can be found at 'keyvault.MHSMPrivateEndpointConnection'.");
            }),
        },
        vendors: ["azure"],
        services: ["keyvault"],
        severity: "medium",
        topics: ["api", "unstable", "preview"],
    });
})(MHSMPrivateEndpointConnection || (MHSMPrivateEndpointConnection = {}));
exports.MHSMPrivateEndpointConnection = MHSMPrivateEndpointConnection;
var ManagedHsm;
(function (ManagedHsm) {
    /**
     * Disallow the use of non-stable (Preview) Azure resouces (keyvault.v20240401preview.ManagedHsm).
     *
     * @severity medium
     * @frameworks none
     * @topics api, preview, unstable
     * @link https://learn.microsoft.com/en-us/rest/api/azure/
     */
    ManagedHsm.disallowPreviewResource = compliance_policy_manager_1.policyManager.registerPolicy({
        resourceValidationPolicy: {
            name: "azurenative-keyvault-v20240401preview-managedhsm-disallow-preview-resource",
            description: "Disallow the use of non-stable (Preview) Azure resouces (keyvault.v20240401preview.ManagedHsm).",
            configSchema: compliance_policy_manager_1.policyManager.policyConfigSchema,
            enforcementLevel: "advisory",
            validateResource: (0, policy_1.validateResourceOfType)(v20240401preview_3.ManagedHsm, (_, args, reportViolation) => {
                if (!compliance_policy_manager_1.policyManager.shouldEvalPolicy(args)) {
                    return;
                }
                reportViolation("Azure ManagedHsm shouldn't use an unstable API (keyvault.v20240401preview.ManagedHsm). A compatible replacement can be found at 'keyvault.ManagedHsm'.");
            }),
        },
        vendors: ["azure"],
        services: ["keyvault"],
        severity: "medium",
        topics: ["api", "unstable", "preview"],
    });
})(ManagedHsm || (ManagedHsm = {}));
exports.ManagedHsm = ManagedHsm;
var PrivateEndpointConnection;
(function (PrivateEndpointConnection) {
    /**
     * Disallow the use of non-stable (Preview) Azure resouces (keyvault.v20240401preview.PrivateEndpointConnection).
     *
     * @severity medium
     * @frameworks none
     * @topics api, preview, unstable
     * @link https://learn.microsoft.com/en-us/rest/api/azure/
     */
    PrivateEndpointConnection.disallowPreviewResource = compliance_policy_manager_1.policyManager.registerPolicy({
        resourceValidationPolicy: {
            name: "azurenative-keyvault-v20240401preview-privateendpointconnection-disallow-preview-resource",
            description: "Disallow the use of non-stable (Preview) Azure resouces (keyvault.v20240401preview.PrivateEndpointConnection).",
            configSchema: compliance_policy_manager_1.policyManager.policyConfigSchema,
            enforcementLevel: "advisory",
            validateResource: (0, policy_1.validateResourceOfType)(v20240401preview_4.PrivateEndpointConnection, (_, args, reportViolation) => {
                if (!compliance_policy_manager_1.policyManager.shouldEvalPolicy(args)) {
                    return;
                }
                reportViolation("Azure PrivateEndpointConnection shouldn't use an unstable API (keyvault.v20240401preview.PrivateEndpointConnection). A compatible replacement can be found at 'keyvault.PrivateEndpointConnection'.");
            }),
        },
        vendors: ["azure"],
        services: ["keyvault"],
        severity: "medium",
        topics: ["api", "unstable", "preview"],
    });
})(PrivateEndpointConnection || (PrivateEndpointConnection = {}));
exports.PrivateEndpointConnection = PrivateEndpointConnection;
var Secret;
(function (Secret) {
    /**
     * Disallow the use of non-stable (Preview) Azure resouces (keyvault.v20240401preview.Secret).
     *
     * @severity medium
     * @frameworks none
     * @topics api, preview, unstable
     * @link https://learn.microsoft.com/en-us/rest/api/azure/
     */
    Secret.disallowPreviewResource = compliance_policy_manager_1.policyManager.registerPolicy({
        resourceValidationPolicy: {
            name: "azurenative-keyvault-v20240401preview-secret-disallow-preview-resource",
            description: "Disallow the use of non-stable (Preview) Azure resouces (keyvault.v20240401preview.Secret).",
            configSchema: compliance_policy_manager_1.policyManager.policyConfigSchema,
            enforcementLevel: "advisory",
            validateResource: (0, policy_1.validateResourceOfType)(v20240401preview_5.Secret, (_, args, reportViolation) => {
                if (!compliance_policy_manager_1.policyManager.shouldEvalPolicy(args)) {
                    return;
                }
                reportViolation("Azure Secret shouldn't use an unstable API (keyvault.v20240401preview.Secret). A compatible replacement can be found at 'keyvault.Secret'.");
            }),
        },
        vendors: ["azure"],
        services: ["keyvault"],
        severity: "medium",
        topics: ["api", "unstable", "preview"],
    });
})(Secret || (Secret = {}));
exports.Secret = Secret;
var Vault;
(function (Vault) {
    /**
     * Disallow the use of non-stable (Preview) Azure resouces (keyvault.v20240401preview.Vault).
     *
     * @severity medium
     * @frameworks none
     * @topics api, preview, unstable
     * @link https://learn.microsoft.com/en-us/rest/api/azure/
     */
    Vault.disallowPreviewResource = compliance_policy_manager_1.policyManager.registerPolicy({
        resourceValidationPolicy: {
            name: "azurenative-keyvault-v20240401preview-vault-disallow-preview-resource",
            description: "Disallow the use of non-stable (Preview) Azure resouces (keyvault.v20240401preview.Vault).",
            configSchema: compliance_policy_manager_1.policyManager.policyConfigSchema,
            enforcementLevel: "advisory",
            validateResource: (0, policy_1.validateResourceOfType)(v20240401preview_6.Vault, (_, args, reportViolation) => {
                if (!compliance_policy_manager_1.policyManager.shouldEvalPolicy(args)) {
                    return;
                }
                reportViolation("Azure Vault shouldn't use an unstable API (keyvault.v20240401preview.Vault). A compatible replacement can be found at 'keyvault.Vault'.");
            }),
        },
        vendors: ["azure"],
        services: ["keyvault"],
        severity: "medium",
        topics: ["api", "unstable", "preview"],
    });
})(Vault || (Vault = {}));
exports.Vault = Vault;
