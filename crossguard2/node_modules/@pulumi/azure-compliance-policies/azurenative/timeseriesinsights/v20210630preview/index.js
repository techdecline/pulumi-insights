"use strict";
// Copyright 2016-2024, Pulumi Corporation.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//
// ------------------------------- WARNING -------------------------------------
// This file was programmatically generated. Do not edit unless you know what
// you're doing.
// ------------------------------- WARNING -------------------------------------
Object.defineProperty(exports, "__esModule", { value: true });
exports.ReferenceDataSet = exports.IoTHubEventSource = exports.Gen2Environment = exports.Gen1Environment = exports.EventHubEventSource = exports.AccessPolicy = void 0;
const policy_1 = require("@pulumi/policy");
const compliance_policy_manager_1 = require("@pulumi/compliance-policy-manager");
const v20210630preview_1 = require("@pulumi/azure-native/timeseriesinsights/v20210630preview");
const v20210630preview_2 = require("@pulumi/azure-native/timeseriesinsights/v20210630preview");
const v20210630preview_3 = require("@pulumi/azure-native/timeseriesinsights/v20210630preview");
const v20210630preview_4 = require("@pulumi/azure-native/timeseriesinsights/v20210630preview");
const v20210630preview_5 = require("@pulumi/azure-native/timeseriesinsights/v20210630preview");
const v20210630preview_6 = require("@pulumi/azure-native/timeseriesinsights/v20210630preview");
var AccessPolicy;
(function (AccessPolicy) {
    /**
     * Disallow the use of non-stable (Preview) Azure resouces (timeseriesinsights.v20210630preview.AccessPolicy).
     *
     * @severity medium
     * @frameworks none
     * @topics api, preview, unstable
     * @link https://learn.microsoft.com/en-us/rest/api/azure/
     */
    AccessPolicy.disallowPreviewResource = compliance_policy_manager_1.policyManager.registerPolicy({
        resourceValidationPolicy: {
            name: "azurenative-timeseriesinsights-v20210630preview-accesspolicy-disallow-preview-resource",
            description: "Disallow the use of non-stable (Preview) Azure resouces (timeseriesinsights.v20210630preview.AccessPolicy).",
            configSchema: compliance_policy_manager_1.policyManager.policyConfigSchema,
            enforcementLevel: "advisory",
            validateResource: (0, policy_1.validateResourceOfType)(v20210630preview_1.AccessPolicy, (_, args, reportViolation) => {
                if (!compliance_policy_manager_1.policyManager.shouldEvalPolicy(args)) {
                    return;
                }
                reportViolation("Azure AccessPolicy shouldn't use an unstable API (timeseriesinsights.v20210630preview.AccessPolicy). A compatible replacement can be found at 'timeseriesinsights.AccessPolicy'.");
            }),
        },
        vendors: ["azure"],
        services: ["timeseriesinsights"],
        severity: "medium",
        topics: ["api", "unstable", "preview"],
    });
})(AccessPolicy || (AccessPolicy = {}));
exports.AccessPolicy = AccessPolicy;
var EventHubEventSource;
(function (EventHubEventSource) {
    /**
     * Disallow the use of non-stable (Preview) Azure resouces (timeseriesinsights.v20210630preview.EventHubEventSource).
     *
     * @severity medium
     * @frameworks none
     * @topics api, preview, unstable
     * @link https://learn.microsoft.com/en-us/rest/api/azure/
     */
    EventHubEventSource.disallowPreviewResource = compliance_policy_manager_1.policyManager.registerPolicy({
        resourceValidationPolicy: {
            name: "azurenative-timeseriesinsights-v20210630preview-eventhubeventsource-disallow-preview-resource",
            description: "Disallow the use of non-stable (Preview) Azure resouces (timeseriesinsights.v20210630preview.EventHubEventSource).",
            configSchema: compliance_policy_manager_1.policyManager.policyConfigSchema,
            enforcementLevel: "advisory",
            validateResource: (0, policy_1.validateResourceOfType)(v20210630preview_2.EventHubEventSource, (_, args, reportViolation) => {
                if (!compliance_policy_manager_1.policyManager.shouldEvalPolicy(args)) {
                    return;
                }
                reportViolation("Azure EventHubEventSource shouldn't use an unstable API (timeseriesinsights.v20210630preview.EventHubEventSource). A compatible replacement can be found at 'timeseriesinsights.EventHubEventSource'.");
            }),
        },
        vendors: ["azure"],
        services: ["timeseriesinsights"],
        severity: "medium",
        topics: ["api", "unstable", "preview"],
    });
})(EventHubEventSource || (EventHubEventSource = {}));
exports.EventHubEventSource = EventHubEventSource;
var Gen1Environment;
(function (Gen1Environment) {
    /**
     * Disallow the use of non-stable (Preview) Azure resouces (timeseriesinsights.v20210630preview.Gen1Environment).
     *
     * @severity medium
     * @frameworks none
     * @topics api, preview, unstable
     * @link https://learn.microsoft.com/en-us/rest/api/azure/
     */
    Gen1Environment.disallowPreviewResource = compliance_policy_manager_1.policyManager.registerPolicy({
        resourceValidationPolicy: {
            name: "azurenative-timeseriesinsights-v20210630preview-gen1environment-disallow-preview-resource",
            description: "Disallow the use of non-stable (Preview) Azure resouces (timeseriesinsights.v20210630preview.Gen1Environment).",
            configSchema: compliance_policy_manager_1.policyManager.policyConfigSchema,
            enforcementLevel: "advisory",
            validateResource: (0, policy_1.validateResourceOfType)(v20210630preview_3.Gen1Environment, (_, args, reportViolation) => {
                if (!compliance_policy_manager_1.policyManager.shouldEvalPolicy(args)) {
                    return;
                }
                reportViolation("Azure Gen1Environment shouldn't use an unstable API (timeseriesinsights.v20210630preview.Gen1Environment). A compatible replacement can be found at 'timeseriesinsights.Gen1Environment'.");
            }),
        },
        vendors: ["azure"],
        services: ["timeseriesinsights"],
        severity: "medium",
        topics: ["api", "unstable", "preview"],
    });
})(Gen1Environment || (Gen1Environment = {}));
exports.Gen1Environment = Gen1Environment;
var Gen2Environment;
(function (Gen2Environment) {
    /**
     * Disallow the use of non-stable (Preview) Azure resouces (timeseriesinsights.v20210630preview.Gen2Environment).
     *
     * @severity medium
     * @frameworks none
     * @topics api, preview, unstable
     * @link https://learn.microsoft.com/en-us/rest/api/azure/
     */
    Gen2Environment.disallowPreviewResource = compliance_policy_manager_1.policyManager.registerPolicy({
        resourceValidationPolicy: {
            name: "azurenative-timeseriesinsights-v20210630preview-gen2environment-disallow-preview-resource",
            description: "Disallow the use of non-stable (Preview) Azure resouces (timeseriesinsights.v20210630preview.Gen2Environment).",
            configSchema: compliance_policy_manager_1.policyManager.policyConfigSchema,
            enforcementLevel: "advisory",
            validateResource: (0, policy_1.validateResourceOfType)(v20210630preview_4.Gen2Environment, (_, args, reportViolation) => {
                if (!compliance_policy_manager_1.policyManager.shouldEvalPolicy(args)) {
                    return;
                }
                reportViolation("Azure Gen2Environment shouldn't use an unstable API (timeseriesinsights.v20210630preview.Gen2Environment). A compatible replacement can be found at 'timeseriesinsights.Gen2Environment'.");
            }),
        },
        vendors: ["azure"],
        services: ["timeseriesinsights"],
        severity: "medium",
        topics: ["api", "unstable", "preview"],
    });
})(Gen2Environment || (Gen2Environment = {}));
exports.Gen2Environment = Gen2Environment;
var IoTHubEventSource;
(function (IoTHubEventSource) {
    /**
     * Disallow the use of non-stable (Preview) Azure resouces (timeseriesinsights.v20210630preview.IoTHubEventSource).
     *
     * @severity medium
     * @frameworks none
     * @topics api, preview, unstable
     * @link https://learn.microsoft.com/en-us/rest/api/azure/
     */
    IoTHubEventSource.disallowPreviewResource = compliance_policy_manager_1.policyManager.registerPolicy({
        resourceValidationPolicy: {
            name: "azurenative-timeseriesinsights-v20210630preview-iothubeventsource-disallow-preview-resource",
            description: "Disallow the use of non-stable (Preview) Azure resouces (timeseriesinsights.v20210630preview.IoTHubEventSource).",
            configSchema: compliance_policy_manager_1.policyManager.policyConfigSchema,
            enforcementLevel: "advisory",
            validateResource: (0, policy_1.validateResourceOfType)(v20210630preview_5.IoTHubEventSource, (_, args, reportViolation) => {
                if (!compliance_policy_manager_1.policyManager.shouldEvalPolicy(args)) {
                    return;
                }
                reportViolation("Azure IoTHubEventSource shouldn't use an unstable API (timeseriesinsights.v20210630preview.IoTHubEventSource). A compatible replacement can be found at 'timeseriesinsights.IoTHubEventSource'.");
            }),
        },
        vendors: ["azure"],
        services: ["timeseriesinsights"],
        severity: "medium",
        topics: ["api", "unstable", "preview"],
    });
})(IoTHubEventSource || (IoTHubEventSource = {}));
exports.IoTHubEventSource = IoTHubEventSource;
var ReferenceDataSet;
(function (ReferenceDataSet) {
    /**
     * Disallow the use of non-stable (Preview) Azure resouces (timeseriesinsights.v20210630preview.ReferenceDataSet).
     *
     * @severity medium
     * @frameworks none
     * @topics api, preview, unstable
     * @link https://learn.microsoft.com/en-us/rest/api/azure/
     */
    ReferenceDataSet.disallowPreviewResource = compliance_policy_manager_1.policyManager.registerPolicy({
        resourceValidationPolicy: {
            name: "azurenative-timeseriesinsights-v20210630preview-referencedataset-disallow-preview-resource",
            description: "Disallow the use of non-stable (Preview) Azure resouces (timeseriesinsights.v20210630preview.ReferenceDataSet).",
            configSchema: compliance_policy_manager_1.policyManager.policyConfigSchema,
            enforcementLevel: "advisory",
            validateResource: (0, policy_1.validateResourceOfType)(v20210630preview_6.ReferenceDataSet, (_, args, reportViolation) => {
                if (!compliance_policy_manager_1.policyManager.shouldEvalPolicy(args)) {
                    return;
                }
                reportViolation("Azure ReferenceDataSet shouldn't use an unstable API (timeseriesinsights.v20210630preview.ReferenceDataSet). A compatible replacement can be found at 'timeseriesinsights.ReferenceDataSet'.");
            }),
        },
        vendors: ["azure"],
        services: ["timeseriesinsights"],
        severity: "medium",
        topics: ["api", "unstable", "preview"],
    });
})(ReferenceDataSet || (ReferenceDataSet = {}));
exports.ReferenceDataSet = ReferenceDataSet;
