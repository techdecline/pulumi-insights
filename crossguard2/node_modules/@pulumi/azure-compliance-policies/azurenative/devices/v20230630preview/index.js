"use strict";
// Copyright 2016-2024, Pulumi Corporation.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//
// ------------------------------- WARNING -------------------------------------
// This file was programmatically generated. Do not edit unless you know what
// you're doing.
// ------------------------------- WARNING -------------------------------------
Object.defineProperty(exports, "__esModule", { value: true });
exports.PrivateEndpointConnection = exports.IotHubResourceEventHubConsumerGroup = exports.IotHubResource = exports.Certificate = void 0;
const policy_1 = require("@pulumi/policy");
const compliance_policy_manager_1 = require("@pulumi/compliance-policy-manager");
const v20230630preview_1 = require("@pulumi/azure-native/devices/v20230630preview");
const v20230630preview_2 = require("@pulumi/azure-native/devices/v20230630preview");
const v20230630preview_3 = require("@pulumi/azure-native/devices/v20230630preview");
const v20230630preview_4 = require("@pulumi/azure-native/devices/v20230630preview");
var Certificate;
(function (Certificate) {
    /**
     * Disallow the use of non-stable (Preview) Azure resouces (devices.v20230630preview.Certificate).
     *
     * @severity medium
     * @frameworks none
     * @topics api, preview, unstable
     * @link https://learn.microsoft.com/en-us/rest/api/azure/
     */
    Certificate.disallowPreviewResource = compliance_policy_manager_1.policyManager.registerPolicy({
        resourceValidationPolicy: {
            name: "azurenative-devices-v20230630preview-certificate-disallow-preview-resource",
            description: "Disallow the use of non-stable (Preview) Azure resouces (devices.v20230630preview.Certificate).",
            configSchema: compliance_policy_manager_1.policyManager.policyConfigSchema,
            enforcementLevel: "advisory",
            validateResource: (0, policy_1.validateResourceOfType)(v20230630preview_1.Certificate, (_, args, reportViolation) => {
                if (!compliance_policy_manager_1.policyManager.shouldEvalPolicy(args)) {
                    return;
                }
                reportViolation("Azure Certificate shouldn't use an unstable API (devices.v20230630preview.Certificate). A compatible replacement can be found at 'devices.Certificate'.");
            }),
        },
        vendors: ["azure"],
        services: ["devices"],
        severity: "medium",
        topics: ["api", "unstable", "preview"],
    });
})(Certificate || (Certificate = {}));
exports.Certificate = Certificate;
var IotHubResource;
(function (IotHubResource) {
    /**
     * Disallow the use of non-stable (Preview) Azure resouces (devices.v20230630preview.IotHubResource).
     *
     * @severity medium
     * @frameworks none
     * @topics api, preview, unstable
     * @link https://learn.microsoft.com/en-us/rest/api/azure/
     */
    IotHubResource.disallowPreviewResource = compliance_policy_manager_1.policyManager.registerPolicy({
        resourceValidationPolicy: {
            name: "azurenative-devices-v20230630preview-iothubresource-disallow-preview-resource",
            description: "Disallow the use of non-stable (Preview) Azure resouces (devices.v20230630preview.IotHubResource).",
            configSchema: compliance_policy_manager_1.policyManager.policyConfigSchema,
            enforcementLevel: "advisory",
            validateResource: (0, policy_1.validateResourceOfType)(v20230630preview_2.IotHubResource, (_, args, reportViolation) => {
                if (!compliance_policy_manager_1.policyManager.shouldEvalPolicy(args)) {
                    return;
                }
                reportViolation("Azure IotHubResource shouldn't use an unstable API (devices.v20230630preview.IotHubResource). A compatible replacement can be found at 'devices.IotHubResource'.");
            }),
        },
        vendors: ["azure"],
        services: ["devices"],
        severity: "medium",
        topics: ["api", "unstable", "preview"],
    });
})(IotHubResource || (IotHubResource = {}));
exports.IotHubResource = IotHubResource;
var IotHubResourceEventHubConsumerGroup;
(function (IotHubResourceEventHubConsumerGroup) {
    /**
     * Disallow the use of non-stable (Preview) Azure resouces (devices.v20230630preview.IotHubResourceEventHubConsumerGroup).
     *
     * @severity medium
     * @frameworks none
     * @topics api, preview, unstable
     * @link https://learn.microsoft.com/en-us/rest/api/azure/
     */
    IotHubResourceEventHubConsumerGroup.disallowPreviewResource = compliance_policy_manager_1.policyManager.registerPolicy({
        resourceValidationPolicy: {
            name: "azurenative-devices-v20230630preview-iothubresourceeventhubconsumergroup-disallow-preview-resource",
            description: "Disallow the use of non-stable (Preview) Azure resouces (devices.v20230630preview.IotHubResourceEventHubConsumerGroup).",
            configSchema: compliance_policy_manager_1.policyManager.policyConfigSchema,
            enforcementLevel: "advisory",
            validateResource: (0, policy_1.validateResourceOfType)(v20230630preview_3.IotHubResourceEventHubConsumerGroup, (_, args, reportViolation) => {
                if (!compliance_policy_manager_1.policyManager.shouldEvalPolicy(args)) {
                    return;
                }
                reportViolation("Azure IotHubResourceEventHubConsumerGroup shouldn't use an unstable API (devices.v20230630preview.IotHubResourceEventHubConsumerGroup). A compatible replacement can be found at 'devices.IotHubResourceEventHubConsumerGroup'.");
            }),
        },
        vendors: ["azure"],
        services: ["devices"],
        severity: "medium",
        topics: ["api", "unstable", "preview"],
    });
})(IotHubResourceEventHubConsumerGroup || (IotHubResourceEventHubConsumerGroup = {}));
exports.IotHubResourceEventHubConsumerGroup = IotHubResourceEventHubConsumerGroup;
var PrivateEndpointConnection;
(function (PrivateEndpointConnection) {
    /**
     * Disallow the use of non-stable (Preview) Azure resouces (devices.v20230630preview.PrivateEndpointConnection).
     *
     * @severity medium
     * @frameworks none
     * @topics api, preview, unstable
     * @link https://learn.microsoft.com/en-us/rest/api/azure/
     */
    PrivateEndpointConnection.disallowPreviewResource = compliance_policy_manager_1.policyManager.registerPolicy({
        resourceValidationPolicy: {
            name: "azurenative-devices-v20230630preview-privateendpointconnection-disallow-preview-resource",
            description: "Disallow the use of non-stable (Preview) Azure resouces (devices.v20230630preview.PrivateEndpointConnection).",
            configSchema: compliance_policy_manager_1.policyManager.policyConfigSchema,
            enforcementLevel: "advisory",
            validateResource: (0, policy_1.validateResourceOfType)(v20230630preview_4.PrivateEndpointConnection, (_, args, reportViolation) => {
                if (!compliance_policy_manager_1.policyManager.shouldEvalPolicy(args)) {
                    return;
                }
                reportViolation("Azure PrivateEndpointConnection shouldn't use an unstable API (devices.v20230630preview.PrivateEndpointConnection). A compatible replacement can be found at 'devices.PrivateEndpointConnection'.");
            }),
        },
        vendors: ["azure"],
        services: ["devices"],
        severity: "medium",
        topics: ["api", "unstable", "preview"],
    });
})(PrivateEndpointConnection || (PrivateEndpointConnection = {}));
exports.PrivateEndpointConnection = PrivateEndpointConnection;
