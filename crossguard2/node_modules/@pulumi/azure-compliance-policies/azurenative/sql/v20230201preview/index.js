"use strict";
// Copyright 2016-2024, Pulumi Corporation.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//
// ------------------------------- WARNING -------------------------------------
// This file was programmatically generated. Do not edit unless you know what
// you're doing.
// ------------------------------- WARNING -------------------------------------
Object.defineProperty(exports, "__esModule", { value: true });
exports.ServerTrustGroup = exports.ServerTrustCertificate = exports.ServerSecurityAlertPolicy = exports.ServerKey = exports.ServerDnsAlias = exports.ServerBlobAuditingPolicy = exports.ServerAzureADOnlyAuthentication = exports.ServerAzureADAdministrator = exports.ServerAdvisor = exports.Server = exports.SensitivityLabel = exports.PrivateEndpointConnection = exports.OutboundFirewallRule = exports.ManagedServerDnsAlias = exports.ManagedInstanceVulnerabilityAssessment = exports.ManagedInstancePrivateEndpointConnection = exports.ManagedInstanceLongTermRetentionPolicy = exports.ManagedInstanceKey = exports.ManagedInstanceAzureADOnlyAuthentication = exports.ManagedInstanceAdministrator = exports.ManagedInstance = exports.ManagedDatabaseVulnerabilityAssessmentRuleBaseline = exports.ManagedDatabaseVulnerabilityAssessment = exports.ManagedDatabaseSensitivityLabel = exports.ManagedDatabase = exports.LongTermRetentionPolicy = exports.JobTargetGroup = exports.JobStep = exports.JobCredential = exports.JobAgent = exports.Job = exports.InstancePool = exports.InstanceFailoverGroup = exports.GeoBackupPolicy = exports.FirewallRule = exports.FailoverGroup = exports.ExtendedServerBlobAuditingPolicy = exports.ExtendedDatabaseBlobAuditingPolicy = exports.EncryptionProtector = exports.ElasticPool = exports.DistributedAvailabilityGroup = exports.DatabaseVulnerabilityAssessmentRuleBaseline = exports.DatabaseVulnerabilityAssessment = exports.DatabaseSqlVulnerabilityAssessmentRuleBaseline = exports.DatabaseSecurityAlertPolicy = exports.DatabaseBlobAuditingPolicy = exports.DatabaseAdvisor = exports.Database = exports.DataMaskingPolicy = exports.BackupShortTermRetentionPolicy = void 0;
exports.WorkloadGroup = exports.WorkloadClassifier = exports.VirtualNetworkRule = exports.TransparentDataEncryption = exports.SyncMember = exports.SyncGroup = exports.SyncAgent = exports.StartStopManagedInstanceSchedule = exports.SqlVulnerabilityAssessmentsSetting = exports.SqlVulnerabilityAssessmentRuleBaseline = exports.ServerVulnerabilityAssessment = void 0;
const policy_1 = require("@pulumi/policy");
const compliance_policy_manager_1 = require("@pulumi/compliance-policy-manager");
const v20230201preview_1 = require("@pulumi/azure-native/sql/v20230201preview");
const v20230201preview_2 = require("@pulumi/azure-native/sql/v20230201preview");
const v20230201preview_3 = require("@pulumi/azure-native/sql/v20230201preview");
const v20230201preview_4 = require("@pulumi/azure-native/sql/v20230201preview");
const v20230201preview_5 = require("@pulumi/azure-native/sql/v20230201preview");
const v20230201preview_6 = require("@pulumi/azure-native/sql/v20230201preview");
const v20230201preview_7 = require("@pulumi/azure-native/sql/v20230201preview");
const v20230201preview_8 = require("@pulumi/azure-native/sql/v20230201preview");
const v20230201preview_9 = require("@pulumi/azure-native/sql/v20230201preview");
const v20230201preview_10 = require("@pulumi/azure-native/sql/v20230201preview");
const v20230201preview_11 = require("@pulumi/azure-native/sql/v20230201preview");
const v20230201preview_12 = require("@pulumi/azure-native/sql/v20230201preview");
const v20230201preview_13 = require("@pulumi/azure-native/sql/v20230201preview");
const v20230201preview_14 = require("@pulumi/azure-native/sql/v20230201preview");
const v20230201preview_15 = require("@pulumi/azure-native/sql/v20230201preview");
const v20230201preview_16 = require("@pulumi/azure-native/sql/v20230201preview");
const v20230201preview_17 = require("@pulumi/azure-native/sql/v20230201preview");
const v20230201preview_18 = require("@pulumi/azure-native/sql/v20230201preview");
const v20230201preview_19 = require("@pulumi/azure-native/sql/v20230201preview");
const v20230201preview_20 = require("@pulumi/azure-native/sql/v20230201preview");
const v20230201preview_21 = require("@pulumi/azure-native/sql/v20230201preview");
const v20230201preview_22 = require("@pulumi/azure-native/sql/v20230201preview");
const v20230201preview_23 = require("@pulumi/azure-native/sql/v20230201preview");
const v20230201preview_24 = require("@pulumi/azure-native/sql/v20230201preview");
const v20230201preview_25 = require("@pulumi/azure-native/sql/v20230201preview");
const v20230201preview_26 = require("@pulumi/azure-native/sql/v20230201preview");
const v20230201preview_27 = require("@pulumi/azure-native/sql/v20230201preview");
const v20230201preview_28 = require("@pulumi/azure-native/sql/v20230201preview");
const v20230201preview_29 = require("@pulumi/azure-native/sql/v20230201preview");
const v20230201preview_30 = require("@pulumi/azure-native/sql/v20230201preview");
const v20230201preview_31 = require("@pulumi/azure-native/sql/v20230201preview");
const v20230201preview_32 = require("@pulumi/azure-native/sql/v20230201preview");
const v20230201preview_33 = require("@pulumi/azure-native/sql/v20230201preview");
const v20230201preview_34 = require("@pulumi/azure-native/sql/v20230201preview");
const v20230201preview_35 = require("@pulumi/azure-native/sql/v20230201preview");
const v20230201preview_36 = require("@pulumi/azure-native/sql/v20230201preview");
const v20230201preview_37 = require("@pulumi/azure-native/sql/v20230201preview");
const v20230201preview_38 = require("@pulumi/azure-native/sql/v20230201preview");
const v20230201preview_39 = require("@pulumi/azure-native/sql/v20230201preview");
const v20230201preview_40 = require("@pulumi/azure-native/sql/v20230201preview");
const v20230201preview_41 = require("@pulumi/azure-native/sql/v20230201preview");
const v20230201preview_42 = require("@pulumi/azure-native/sql/v20230201preview");
const v20230201preview_43 = require("@pulumi/azure-native/sql/v20230201preview");
const v20230201preview_44 = require("@pulumi/azure-native/sql/v20230201preview");
const v20230201preview_45 = require("@pulumi/azure-native/sql/v20230201preview");
const v20230201preview_46 = require("@pulumi/azure-native/sql/v20230201preview");
const v20230201preview_47 = require("@pulumi/azure-native/sql/v20230201preview");
const v20230201preview_48 = require("@pulumi/azure-native/sql/v20230201preview");
const v20230201preview_49 = require("@pulumi/azure-native/sql/v20230201preview");
const v20230201preview_50 = require("@pulumi/azure-native/sql/v20230201preview");
const v20230201preview_51 = require("@pulumi/azure-native/sql/v20230201preview");
const v20230201preview_52 = require("@pulumi/azure-native/sql/v20230201preview");
const v20230201preview_53 = require("@pulumi/azure-native/sql/v20230201preview");
const v20230201preview_54 = require("@pulumi/azure-native/sql/v20230201preview");
const v20230201preview_55 = require("@pulumi/azure-native/sql/v20230201preview");
const v20230201preview_56 = require("@pulumi/azure-native/sql/v20230201preview");
const v20230201preview_57 = require("@pulumi/azure-native/sql/v20230201preview");
const v20230201preview_58 = require("@pulumi/azure-native/sql/v20230201preview");
const v20230201preview_59 = require("@pulumi/azure-native/sql/v20230201preview");
const v20230201preview_60 = require("@pulumi/azure-native/sql/v20230201preview");
const v20230201preview_61 = require("@pulumi/azure-native/sql/v20230201preview");
var BackupShortTermRetentionPolicy;
(function (BackupShortTermRetentionPolicy) {
    /**
     * Disallow the use of non-stable (Preview) Azure resouces (sql.v20230201preview.BackupShortTermRetentionPolicy).
     *
     * @severity medium
     * @frameworks none
     * @topics api, preview, unstable
     * @link https://learn.microsoft.com/en-us/rest/api/azure/
     */
    BackupShortTermRetentionPolicy.disallowPreviewResource = compliance_policy_manager_1.policyManager.registerPolicy({
        resourceValidationPolicy: {
            name: "azurenative-sql-v20230201preview-backupshorttermretentionpolicy-disallow-preview-resource",
            description: "Disallow the use of non-stable (Preview) Azure resouces (sql.v20230201preview.BackupShortTermRetentionPolicy).",
            configSchema: compliance_policy_manager_1.policyManager.policyConfigSchema,
            enforcementLevel: "advisory",
            validateResource: (0, policy_1.validateResourceOfType)(v20230201preview_1.BackupShortTermRetentionPolicy, (_, args, reportViolation) => {
                if (!compliance_policy_manager_1.policyManager.shouldEvalPolicy(args)) {
                    return;
                }
                reportViolation("Azure BackupShortTermRetentionPolicy shouldn't use an unstable API (sql.v20230201preview.BackupShortTermRetentionPolicy). A compatible replacement can be found at 'sql.BackupShortTermRetentionPolicy'.");
            }),
        },
        vendors: ["azure"],
        services: ["sql"],
        severity: "medium",
        topics: ["api", "unstable", "preview"],
    });
})(BackupShortTermRetentionPolicy || (BackupShortTermRetentionPolicy = {}));
exports.BackupShortTermRetentionPolicy = BackupShortTermRetentionPolicy;
var DataMaskingPolicy;
(function (DataMaskingPolicy) {
    /**
     * Disallow the use of non-stable (Preview) Azure resouces (sql.v20230201preview.DataMaskingPolicy).
     *
     * @severity medium
     * @frameworks none
     * @topics api, preview, unstable
     * @link https://learn.microsoft.com/en-us/rest/api/azure/
     */
    DataMaskingPolicy.disallowPreviewResource = compliance_policy_manager_1.policyManager.registerPolicy({
        resourceValidationPolicy: {
            name: "azurenative-sql-v20230201preview-datamaskingpolicy-disallow-preview-resource",
            description: "Disallow the use of non-stable (Preview) Azure resouces (sql.v20230201preview.DataMaskingPolicy).",
            configSchema: compliance_policy_manager_1.policyManager.policyConfigSchema,
            enforcementLevel: "advisory",
            validateResource: (0, policy_1.validateResourceOfType)(v20230201preview_2.DataMaskingPolicy, (_, args, reportViolation) => {
                if (!compliance_policy_manager_1.policyManager.shouldEvalPolicy(args)) {
                    return;
                }
                reportViolation("Azure DataMaskingPolicy shouldn't use an unstable API (sql.v20230201preview.DataMaskingPolicy). A compatible replacement can be found at 'sql.DataMaskingPolicy'.");
            }),
        },
        vendors: ["azure"],
        services: ["sql"],
        severity: "medium",
        topics: ["api", "unstable", "preview"],
    });
})(DataMaskingPolicy || (DataMaskingPolicy = {}));
exports.DataMaskingPolicy = DataMaskingPolicy;
var Database;
(function (Database) {
    /**
     * Disallow the use of non-stable (Preview) Azure resouces (sql.v20230201preview.Database).
     *
     * @severity medium
     * @frameworks none
     * @topics api, preview, unstable
     * @link https://learn.microsoft.com/en-us/rest/api/azure/
     */
    Database.disallowPreviewResource = compliance_policy_manager_1.policyManager.registerPolicy({
        resourceValidationPolicy: {
            name: "azurenative-sql-v20230201preview-database-disallow-preview-resource",
            description: "Disallow the use of non-stable (Preview) Azure resouces (sql.v20230201preview.Database).",
            configSchema: compliance_policy_manager_1.policyManager.policyConfigSchema,
            enforcementLevel: "advisory",
            validateResource: (0, policy_1.validateResourceOfType)(v20230201preview_3.Database, (_, args, reportViolation) => {
                if (!compliance_policy_manager_1.policyManager.shouldEvalPolicy(args)) {
                    return;
                }
                reportViolation("Azure Database shouldn't use an unstable API (sql.v20230201preview.Database). A compatible replacement can be found at 'sql.Database'.");
            }),
        },
        vendors: ["azure"],
        services: ["sql"],
        severity: "medium",
        topics: ["api", "unstable", "preview"],
    });
})(Database || (Database = {}));
exports.Database = Database;
var DatabaseAdvisor;
(function (DatabaseAdvisor) {
    /**
     * Disallow the use of non-stable (Preview) Azure resouces (sql.v20230201preview.DatabaseAdvisor).
     *
     * @severity medium
     * @frameworks none
     * @topics api, preview, unstable
     * @link https://learn.microsoft.com/en-us/rest/api/azure/
     */
    DatabaseAdvisor.disallowPreviewResource = compliance_policy_manager_1.policyManager.registerPolicy({
        resourceValidationPolicy: {
            name: "azurenative-sql-v20230201preview-databaseadvisor-disallow-preview-resource",
            description: "Disallow the use of non-stable (Preview) Azure resouces (sql.v20230201preview.DatabaseAdvisor).",
            configSchema: compliance_policy_manager_1.policyManager.policyConfigSchema,
            enforcementLevel: "advisory",
            validateResource: (0, policy_1.validateResourceOfType)(v20230201preview_4.DatabaseAdvisor, (_, args, reportViolation) => {
                if (!compliance_policy_manager_1.policyManager.shouldEvalPolicy(args)) {
                    return;
                }
                reportViolation("Azure DatabaseAdvisor shouldn't use an unstable API (sql.v20230201preview.DatabaseAdvisor). A compatible replacement can be found at 'sql.DatabaseAdvisor'.");
            }),
        },
        vendors: ["azure"],
        services: ["sql"],
        severity: "medium",
        topics: ["api", "unstable", "preview"],
    });
})(DatabaseAdvisor || (DatabaseAdvisor = {}));
exports.DatabaseAdvisor = DatabaseAdvisor;
var DatabaseBlobAuditingPolicy;
(function (DatabaseBlobAuditingPolicy) {
    /**
     * Disallow the use of non-stable (Preview) Azure resouces (sql.v20230201preview.DatabaseBlobAuditingPolicy).
     *
     * @severity medium
     * @frameworks none
     * @topics api, preview, unstable
     * @link https://learn.microsoft.com/en-us/rest/api/azure/
     */
    DatabaseBlobAuditingPolicy.disallowPreviewResource = compliance_policy_manager_1.policyManager.registerPolicy({
        resourceValidationPolicy: {
            name: "azurenative-sql-v20230201preview-databaseblobauditingpolicy-disallow-preview-resource",
            description: "Disallow the use of non-stable (Preview) Azure resouces (sql.v20230201preview.DatabaseBlobAuditingPolicy).",
            configSchema: compliance_policy_manager_1.policyManager.policyConfigSchema,
            enforcementLevel: "advisory",
            validateResource: (0, policy_1.validateResourceOfType)(v20230201preview_5.DatabaseBlobAuditingPolicy, (_, args, reportViolation) => {
                if (!compliance_policy_manager_1.policyManager.shouldEvalPolicy(args)) {
                    return;
                }
                reportViolation("Azure DatabaseBlobAuditingPolicy shouldn't use an unstable API (sql.v20230201preview.DatabaseBlobAuditingPolicy). A compatible replacement can be found at 'sql.DatabaseBlobAuditingPolicy'.");
            }),
        },
        vendors: ["azure"],
        services: ["sql"],
        severity: "medium",
        topics: ["api", "unstable", "preview"],
    });
})(DatabaseBlobAuditingPolicy || (DatabaseBlobAuditingPolicy = {}));
exports.DatabaseBlobAuditingPolicy = DatabaseBlobAuditingPolicy;
var DatabaseSecurityAlertPolicy;
(function (DatabaseSecurityAlertPolicy) {
    /**
     * Disallow the use of non-stable (Preview) Azure resouces (sql.v20230201preview.DatabaseSecurityAlertPolicy).
     *
     * @severity medium
     * @frameworks none
     * @topics api, preview, unstable
     * @link https://learn.microsoft.com/en-us/rest/api/azure/
     */
    DatabaseSecurityAlertPolicy.disallowPreviewResource = compliance_policy_manager_1.policyManager.registerPolicy({
        resourceValidationPolicy: {
            name: "azurenative-sql-v20230201preview-databasesecurityalertpolicy-disallow-preview-resource",
            description: "Disallow the use of non-stable (Preview) Azure resouces (sql.v20230201preview.DatabaseSecurityAlertPolicy).",
            configSchema: compliance_policy_manager_1.policyManager.policyConfigSchema,
            enforcementLevel: "advisory",
            validateResource: (0, policy_1.validateResourceOfType)(v20230201preview_6.DatabaseSecurityAlertPolicy, (_, args, reportViolation) => {
                if (!compliance_policy_manager_1.policyManager.shouldEvalPolicy(args)) {
                    return;
                }
                reportViolation("Azure DatabaseSecurityAlertPolicy shouldn't use an unstable API (sql.v20230201preview.DatabaseSecurityAlertPolicy). A compatible replacement can be found at 'sql.DatabaseSecurityAlertPolicy'.");
            }),
        },
        vendors: ["azure"],
        services: ["sql"],
        severity: "medium",
        topics: ["api", "unstable", "preview"],
    });
})(DatabaseSecurityAlertPolicy || (DatabaseSecurityAlertPolicy = {}));
exports.DatabaseSecurityAlertPolicy = DatabaseSecurityAlertPolicy;
var DatabaseSqlVulnerabilityAssessmentRuleBaseline;
(function (DatabaseSqlVulnerabilityAssessmentRuleBaseline) {
    /**
     * Disallow the use of non-stable (Preview) Azure resouces (sql.v20230201preview.DatabaseSqlVulnerabilityAssessmentRuleBaseline).
     *
     * @severity medium
     * @frameworks none
     * @topics api, preview, unstable
     * @link https://learn.microsoft.com/en-us/rest/api/azure/
     */
    DatabaseSqlVulnerabilityAssessmentRuleBaseline.disallowPreviewResource = compliance_policy_manager_1.policyManager.registerPolicy({
        resourceValidationPolicy: {
            name: "azurenative-sql-v20230201preview-databasesqlvulnerabilityassessmentrulebaseline-disallow-preview-resource",
            description: "Disallow the use of non-stable (Preview) Azure resouces (sql.v20230201preview.DatabaseSqlVulnerabilityAssessmentRuleBaseline).",
            configSchema: compliance_policy_manager_1.policyManager.policyConfigSchema,
            enforcementLevel: "advisory",
            validateResource: (0, policy_1.validateResourceOfType)(v20230201preview_7.DatabaseSqlVulnerabilityAssessmentRuleBaseline, (_, args, reportViolation) => {
                if (!compliance_policy_manager_1.policyManager.shouldEvalPolicy(args)) {
                    return;
                }
                reportViolation("Azure DatabaseSqlVulnerabilityAssessmentRuleBaseline shouldn't use an unstable API (sql.v20230201preview.DatabaseSqlVulnerabilityAssessmentRuleBaseline). A compatible replacement can be found at 'sql.DatabaseSqlVulnerabilityAssessmentRuleBaseline'.");
            }),
        },
        vendors: ["azure"],
        services: ["sql"],
        severity: "medium",
        topics: ["api", "unstable", "preview"],
    });
})(DatabaseSqlVulnerabilityAssessmentRuleBaseline || (DatabaseSqlVulnerabilityAssessmentRuleBaseline = {}));
exports.DatabaseSqlVulnerabilityAssessmentRuleBaseline = DatabaseSqlVulnerabilityAssessmentRuleBaseline;
var DatabaseVulnerabilityAssessment;
(function (DatabaseVulnerabilityAssessment) {
    /**
     * Disallow the use of non-stable (Preview) Azure resouces (sql.v20230201preview.DatabaseVulnerabilityAssessment).
     *
     * @severity medium
     * @frameworks none
     * @topics api, preview, unstable
     * @link https://learn.microsoft.com/en-us/rest/api/azure/
     */
    DatabaseVulnerabilityAssessment.disallowPreviewResource = compliance_policy_manager_1.policyManager.registerPolicy({
        resourceValidationPolicy: {
            name: "azurenative-sql-v20230201preview-databasevulnerabilityassessment-disallow-preview-resource",
            description: "Disallow the use of non-stable (Preview) Azure resouces (sql.v20230201preview.DatabaseVulnerabilityAssessment).",
            configSchema: compliance_policy_manager_1.policyManager.policyConfigSchema,
            enforcementLevel: "advisory",
            validateResource: (0, policy_1.validateResourceOfType)(v20230201preview_8.DatabaseVulnerabilityAssessment, (_, args, reportViolation) => {
                if (!compliance_policy_manager_1.policyManager.shouldEvalPolicy(args)) {
                    return;
                }
                reportViolation("Azure DatabaseVulnerabilityAssessment shouldn't use an unstable API (sql.v20230201preview.DatabaseVulnerabilityAssessment). A compatible replacement can be found at 'sql.DatabaseVulnerabilityAssessment'.");
            }),
        },
        vendors: ["azure"],
        services: ["sql"],
        severity: "medium",
        topics: ["api", "unstable", "preview"],
    });
})(DatabaseVulnerabilityAssessment || (DatabaseVulnerabilityAssessment = {}));
exports.DatabaseVulnerabilityAssessment = DatabaseVulnerabilityAssessment;
var DatabaseVulnerabilityAssessmentRuleBaseline;
(function (DatabaseVulnerabilityAssessmentRuleBaseline) {
    /**
     * Disallow the use of non-stable (Preview) Azure resouces (sql.v20230201preview.DatabaseVulnerabilityAssessmentRuleBaseline).
     *
     * @severity medium
     * @frameworks none
     * @topics api, preview, unstable
     * @link https://learn.microsoft.com/en-us/rest/api/azure/
     */
    DatabaseVulnerabilityAssessmentRuleBaseline.disallowPreviewResource = compliance_policy_manager_1.policyManager.registerPolicy({
        resourceValidationPolicy: {
            name: "azurenative-sql-v20230201preview-databasevulnerabilityassessmentrulebaseline-disallow-preview-resource",
            description: "Disallow the use of non-stable (Preview) Azure resouces (sql.v20230201preview.DatabaseVulnerabilityAssessmentRuleBaseline).",
            configSchema: compliance_policy_manager_1.policyManager.policyConfigSchema,
            enforcementLevel: "advisory",
            validateResource: (0, policy_1.validateResourceOfType)(v20230201preview_9.DatabaseVulnerabilityAssessmentRuleBaseline, (_, args, reportViolation) => {
                if (!compliance_policy_manager_1.policyManager.shouldEvalPolicy(args)) {
                    return;
                }
                reportViolation("Azure DatabaseVulnerabilityAssessmentRuleBaseline shouldn't use an unstable API (sql.v20230201preview.DatabaseVulnerabilityAssessmentRuleBaseline). A compatible replacement can be found at 'sql.DatabaseVulnerabilityAssessmentRuleBaseline'.");
            }),
        },
        vendors: ["azure"],
        services: ["sql"],
        severity: "medium",
        topics: ["api", "unstable", "preview"],
    });
})(DatabaseVulnerabilityAssessmentRuleBaseline || (DatabaseVulnerabilityAssessmentRuleBaseline = {}));
exports.DatabaseVulnerabilityAssessmentRuleBaseline = DatabaseVulnerabilityAssessmentRuleBaseline;
var DistributedAvailabilityGroup;
(function (DistributedAvailabilityGroup) {
    /**
     * Disallow the use of non-stable (Preview) Azure resouces (sql.v20230201preview.DistributedAvailabilityGroup).
     *
     * @severity medium
     * @frameworks none
     * @topics api, preview, unstable
     * @link https://learn.microsoft.com/en-us/rest/api/azure/
     */
    DistributedAvailabilityGroup.disallowPreviewResource = compliance_policy_manager_1.policyManager.registerPolicy({
        resourceValidationPolicy: {
            name: "azurenative-sql-v20230201preview-distributedavailabilitygroup-disallow-preview-resource",
            description: "Disallow the use of non-stable (Preview) Azure resouces (sql.v20230201preview.DistributedAvailabilityGroup).",
            configSchema: compliance_policy_manager_1.policyManager.policyConfigSchema,
            enforcementLevel: "advisory",
            validateResource: (0, policy_1.validateResourceOfType)(v20230201preview_10.DistributedAvailabilityGroup, (_, args, reportViolation) => {
                if (!compliance_policy_manager_1.policyManager.shouldEvalPolicy(args)) {
                    return;
                }
                reportViolation("Azure DistributedAvailabilityGroup shouldn't use an unstable API (sql.v20230201preview.DistributedAvailabilityGroup). A compatible replacement can be found at 'sql.DistributedAvailabilityGroup'.");
            }),
        },
        vendors: ["azure"],
        services: ["sql"],
        severity: "medium",
        topics: ["api", "unstable", "preview"],
    });
})(DistributedAvailabilityGroup || (DistributedAvailabilityGroup = {}));
exports.DistributedAvailabilityGroup = DistributedAvailabilityGroup;
var ElasticPool;
(function (ElasticPool) {
    /**
     * Disallow the use of non-stable (Preview) Azure resouces (sql.v20230201preview.ElasticPool).
     *
     * @severity medium
     * @frameworks none
     * @topics api, preview, unstable
     * @link https://learn.microsoft.com/en-us/rest/api/azure/
     */
    ElasticPool.disallowPreviewResource = compliance_policy_manager_1.policyManager.registerPolicy({
        resourceValidationPolicy: {
            name: "azurenative-sql-v20230201preview-elasticpool-disallow-preview-resource",
            description: "Disallow the use of non-stable (Preview) Azure resouces (sql.v20230201preview.ElasticPool).",
            configSchema: compliance_policy_manager_1.policyManager.policyConfigSchema,
            enforcementLevel: "advisory",
            validateResource: (0, policy_1.validateResourceOfType)(v20230201preview_11.ElasticPool, (_, args, reportViolation) => {
                if (!compliance_policy_manager_1.policyManager.shouldEvalPolicy(args)) {
                    return;
                }
                reportViolation("Azure ElasticPool shouldn't use an unstable API (sql.v20230201preview.ElasticPool). A compatible replacement can be found at 'sql.ElasticPool'.");
            }),
        },
        vendors: ["azure"],
        services: ["sql"],
        severity: "medium",
        topics: ["api", "unstable", "preview"],
    });
})(ElasticPool || (ElasticPool = {}));
exports.ElasticPool = ElasticPool;
var EncryptionProtector;
(function (EncryptionProtector) {
    /**
     * Disallow the use of non-stable (Preview) Azure resouces (sql.v20230201preview.EncryptionProtector).
     *
     * @severity medium
     * @frameworks none
     * @topics api, preview, unstable
     * @link https://learn.microsoft.com/en-us/rest/api/azure/
     */
    EncryptionProtector.disallowPreviewResource = compliance_policy_manager_1.policyManager.registerPolicy({
        resourceValidationPolicy: {
            name: "azurenative-sql-v20230201preview-encryptionprotector-disallow-preview-resource",
            description: "Disallow the use of non-stable (Preview) Azure resouces (sql.v20230201preview.EncryptionProtector).",
            configSchema: compliance_policy_manager_1.policyManager.policyConfigSchema,
            enforcementLevel: "advisory",
            validateResource: (0, policy_1.validateResourceOfType)(v20230201preview_12.EncryptionProtector, (_, args, reportViolation) => {
                if (!compliance_policy_manager_1.policyManager.shouldEvalPolicy(args)) {
                    return;
                }
                reportViolation("Azure EncryptionProtector shouldn't use an unstable API (sql.v20230201preview.EncryptionProtector). A compatible replacement can be found at 'sql.EncryptionProtector'.");
            }),
        },
        vendors: ["azure"],
        services: ["sql"],
        severity: "medium",
        topics: ["api", "unstable", "preview"],
    });
})(EncryptionProtector || (EncryptionProtector = {}));
exports.EncryptionProtector = EncryptionProtector;
var ExtendedDatabaseBlobAuditingPolicy;
(function (ExtendedDatabaseBlobAuditingPolicy) {
    /**
     * Disallow the use of non-stable (Preview) Azure resouces (sql.v20230201preview.ExtendedDatabaseBlobAuditingPolicy).
     *
     * @severity medium
     * @frameworks none
     * @topics api, preview, unstable
     * @link https://learn.microsoft.com/en-us/rest/api/azure/
     */
    ExtendedDatabaseBlobAuditingPolicy.disallowPreviewResource = compliance_policy_manager_1.policyManager.registerPolicy({
        resourceValidationPolicy: {
            name: "azurenative-sql-v20230201preview-extendeddatabaseblobauditingpolicy-disallow-preview-resource",
            description: "Disallow the use of non-stable (Preview) Azure resouces (sql.v20230201preview.ExtendedDatabaseBlobAuditingPolicy).",
            configSchema: compliance_policy_manager_1.policyManager.policyConfigSchema,
            enforcementLevel: "advisory",
            validateResource: (0, policy_1.validateResourceOfType)(v20230201preview_13.ExtendedDatabaseBlobAuditingPolicy, (_, args, reportViolation) => {
                if (!compliance_policy_manager_1.policyManager.shouldEvalPolicy(args)) {
                    return;
                }
                reportViolation("Azure ExtendedDatabaseBlobAuditingPolicy shouldn't use an unstable API (sql.v20230201preview.ExtendedDatabaseBlobAuditingPolicy). A compatible replacement can be found at 'sql.ExtendedDatabaseBlobAuditingPolicy'.");
            }),
        },
        vendors: ["azure"],
        services: ["sql"],
        severity: "medium",
        topics: ["api", "unstable", "preview"],
    });
})(ExtendedDatabaseBlobAuditingPolicy || (ExtendedDatabaseBlobAuditingPolicy = {}));
exports.ExtendedDatabaseBlobAuditingPolicy = ExtendedDatabaseBlobAuditingPolicy;
var ExtendedServerBlobAuditingPolicy;
(function (ExtendedServerBlobAuditingPolicy) {
    /**
     * Disallow the use of non-stable (Preview) Azure resouces (sql.v20230201preview.ExtendedServerBlobAuditingPolicy).
     *
     * @severity medium
     * @frameworks none
     * @topics api, preview, unstable
     * @link https://learn.microsoft.com/en-us/rest/api/azure/
     */
    ExtendedServerBlobAuditingPolicy.disallowPreviewResource = compliance_policy_manager_1.policyManager.registerPolicy({
        resourceValidationPolicy: {
            name: "azurenative-sql-v20230201preview-extendedserverblobauditingpolicy-disallow-preview-resource",
            description: "Disallow the use of non-stable (Preview) Azure resouces (sql.v20230201preview.ExtendedServerBlobAuditingPolicy).",
            configSchema: compliance_policy_manager_1.policyManager.policyConfigSchema,
            enforcementLevel: "advisory",
            validateResource: (0, policy_1.validateResourceOfType)(v20230201preview_14.ExtendedServerBlobAuditingPolicy, (_, args, reportViolation) => {
                if (!compliance_policy_manager_1.policyManager.shouldEvalPolicy(args)) {
                    return;
                }
                reportViolation("Azure ExtendedServerBlobAuditingPolicy shouldn't use an unstable API (sql.v20230201preview.ExtendedServerBlobAuditingPolicy). A compatible replacement can be found at 'sql.ExtendedServerBlobAuditingPolicy'.");
            }),
        },
        vendors: ["azure"],
        services: ["sql"],
        severity: "medium",
        topics: ["api", "unstable", "preview"],
    });
})(ExtendedServerBlobAuditingPolicy || (ExtendedServerBlobAuditingPolicy = {}));
exports.ExtendedServerBlobAuditingPolicy = ExtendedServerBlobAuditingPolicy;
var FailoverGroup;
(function (FailoverGroup) {
    /**
     * Disallow the use of non-stable (Preview) Azure resouces (sql.v20230201preview.FailoverGroup).
     *
     * @severity medium
     * @frameworks none
     * @topics api, preview, unstable
     * @link https://learn.microsoft.com/en-us/rest/api/azure/
     */
    FailoverGroup.disallowPreviewResource = compliance_policy_manager_1.policyManager.registerPolicy({
        resourceValidationPolicy: {
            name: "azurenative-sql-v20230201preview-failovergroup-disallow-preview-resource",
            description: "Disallow the use of non-stable (Preview) Azure resouces (sql.v20230201preview.FailoverGroup).",
            configSchema: compliance_policy_manager_1.policyManager.policyConfigSchema,
            enforcementLevel: "advisory",
            validateResource: (0, policy_1.validateResourceOfType)(v20230201preview_15.FailoverGroup, (_, args, reportViolation) => {
                if (!compliance_policy_manager_1.policyManager.shouldEvalPolicy(args)) {
                    return;
                }
                reportViolation("Azure FailoverGroup shouldn't use an unstable API (sql.v20230201preview.FailoverGroup). A compatible replacement can be found at 'sql.FailoverGroup'.");
            }),
        },
        vendors: ["azure"],
        services: ["sql"],
        severity: "medium",
        topics: ["api", "unstable", "preview"],
    });
})(FailoverGroup || (FailoverGroup = {}));
exports.FailoverGroup = FailoverGroup;
var FirewallRule;
(function (FirewallRule) {
    /**
     * Disallow the use of non-stable (Preview) Azure resouces (sql.v20230201preview.FirewallRule).
     *
     * @severity medium
     * @frameworks none
     * @topics api, preview, unstable
     * @link https://learn.microsoft.com/en-us/rest/api/azure/
     */
    FirewallRule.disallowPreviewResource = compliance_policy_manager_1.policyManager.registerPolicy({
        resourceValidationPolicy: {
            name: "azurenative-sql-v20230201preview-firewallrule-disallow-preview-resource",
            description: "Disallow the use of non-stable (Preview) Azure resouces (sql.v20230201preview.FirewallRule).",
            configSchema: compliance_policy_manager_1.policyManager.policyConfigSchema,
            enforcementLevel: "advisory",
            validateResource: (0, policy_1.validateResourceOfType)(v20230201preview_16.FirewallRule, (_, args, reportViolation) => {
                if (!compliance_policy_manager_1.policyManager.shouldEvalPolicy(args)) {
                    return;
                }
                reportViolation("Azure FirewallRule shouldn't use an unstable API (sql.v20230201preview.FirewallRule). A compatible replacement can be found at 'sql.FirewallRule'.");
            }),
        },
        vendors: ["azure"],
        services: ["sql"],
        severity: "medium",
        topics: ["api", "unstable", "preview"],
    });
})(FirewallRule || (FirewallRule = {}));
exports.FirewallRule = FirewallRule;
var GeoBackupPolicy;
(function (GeoBackupPolicy) {
    /**
     * Disallow the use of non-stable (Preview) Azure resouces (sql.v20230201preview.GeoBackupPolicy).
     *
     * @severity medium
     * @frameworks none
     * @topics api, preview, unstable
     * @link https://learn.microsoft.com/en-us/rest/api/azure/
     */
    GeoBackupPolicy.disallowPreviewResource = compliance_policy_manager_1.policyManager.registerPolicy({
        resourceValidationPolicy: {
            name: "azurenative-sql-v20230201preview-geobackuppolicy-disallow-preview-resource",
            description: "Disallow the use of non-stable (Preview) Azure resouces (sql.v20230201preview.GeoBackupPolicy).",
            configSchema: compliance_policy_manager_1.policyManager.policyConfigSchema,
            enforcementLevel: "advisory",
            validateResource: (0, policy_1.validateResourceOfType)(v20230201preview_17.GeoBackupPolicy, (_, args, reportViolation) => {
                if (!compliance_policy_manager_1.policyManager.shouldEvalPolicy(args)) {
                    return;
                }
                reportViolation("Azure GeoBackupPolicy shouldn't use an unstable API (sql.v20230201preview.GeoBackupPolicy). A compatible replacement can be found at 'sql.GeoBackupPolicy'.");
            }),
        },
        vendors: ["azure"],
        services: ["sql"],
        severity: "medium",
        topics: ["api", "unstable", "preview"],
    });
})(GeoBackupPolicy || (GeoBackupPolicy = {}));
exports.GeoBackupPolicy = GeoBackupPolicy;
var InstanceFailoverGroup;
(function (InstanceFailoverGroup) {
    /**
     * Disallow the use of non-stable (Preview) Azure resouces (sql.v20230201preview.InstanceFailoverGroup).
     *
     * @severity medium
     * @frameworks none
     * @topics api, preview, unstable
     * @link https://learn.microsoft.com/en-us/rest/api/azure/
     */
    InstanceFailoverGroup.disallowPreviewResource = compliance_policy_manager_1.policyManager.registerPolicy({
        resourceValidationPolicy: {
            name: "azurenative-sql-v20230201preview-instancefailovergroup-disallow-preview-resource",
            description: "Disallow the use of non-stable (Preview) Azure resouces (sql.v20230201preview.InstanceFailoverGroup).",
            configSchema: compliance_policy_manager_1.policyManager.policyConfigSchema,
            enforcementLevel: "advisory",
            validateResource: (0, policy_1.validateResourceOfType)(v20230201preview_18.InstanceFailoverGroup, (_, args, reportViolation) => {
                if (!compliance_policy_manager_1.policyManager.shouldEvalPolicy(args)) {
                    return;
                }
                reportViolation("Azure InstanceFailoverGroup shouldn't use an unstable API (sql.v20230201preview.InstanceFailoverGroup). A compatible replacement can be found at 'sql.InstanceFailoverGroup'.");
            }),
        },
        vendors: ["azure"],
        services: ["sql"],
        severity: "medium",
        topics: ["api", "unstable", "preview"],
    });
})(InstanceFailoverGroup || (InstanceFailoverGroup = {}));
exports.InstanceFailoverGroup = InstanceFailoverGroup;
var InstancePool;
(function (InstancePool) {
    /**
     * Disallow the use of non-stable (Preview) Azure resouces (sql.v20230201preview.InstancePool).
     *
     * @severity medium
     * @frameworks none
     * @topics api, preview, unstable
     * @link https://learn.microsoft.com/en-us/rest/api/azure/
     */
    InstancePool.disallowPreviewResource = compliance_policy_manager_1.policyManager.registerPolicy({
        resourceValidationPolicy: {
            name: "azurenative-sql-v20230201preview-instancepool-disallow-preview-resource",
            description: "Disallow the use of non-stable (Preview) Azure resouces (sql.v20230201preview.InstancePool).",
            configSchema: compliance_policy_manager_1.policyManager.policyConfigSchema,
            enforcementLevel: "advisory",
            validateResource: (0, policy_1.validateResourceOfType)(v20230201preview_19.InstancePool, (_, args, reportViolation) => {
                if (!compliance_policy_manager_1.policyManager.shouldEvalPolicy(args)) {
                    return;
                }
                reportViolation("Azure InstancePool shouldn't use an unstable API (sql.v20230201preview.InstancePool). A compatible replacement can be found at 'sql.InstancePool'.");
            }),
        },
        vendors: ["azure"],
        services: ["sql"],
        severity: "medium",
        topics: ["api", "unstable", "preview"],
    });
})(InstancePool || (InstancePool = {}));
exports.InstancePool = InstancePool;
var Job;
(function (Job) {
    /**
     * Disallow the use of non-stable (Preview) Azure resouces (sql.v20230201preview.Job).
     *
     * @severity medium
     * @frameworks none
     * @topics api, preview, unstable
     * @link https://learn.microsoft.com/en-us/rest/api/azure/
     */
    Job.disallowPreviewResource = compliance_policy_manager_1.policyManager.registerPolicy({
        resourceValidationPolicy: {
            name: "azurenative-sql-v20230201preview-job-disallow-preview-resource",
            description: "Disallow the use of non-stable (Preview) Azure resouces (sql.v20230201preview.Job).",
            configSchema: compliance_policy_manager_1.policyManager.policyConfigSchema,
            enforcementLevel: "advisory",
            validateResource: (0, policy_1.validateResourceOfType)(v20230201preview_20.Job, (_, args, reportViolation) => {
                if (!compliance_policy_manager_1.policyManager.shouldEvalPolicy(args)) {
                    return;
                }
                reportViolation("Azure Job shouldn't use an unstable API (sql.v20230201preview.Job). A compatible replacement can be found at 'sql.Job'.");
            }),
        },
        vendors: ["azure"],
        services: ["sql"],
        severity: "medium",
        topics: ["api", "unstable", "preview"],
    });
})(Job || (Job = {}));
exports.Job = Job;
var JobAgent;
(function (JobAgent) {
    /**
     * Disallow the use of non-stable (Preview) Azure resouces (sql.v20230201preview.JobAgent).
     *
     * @severity medium
     * @frameworks none
     * @topics api, preview, unstable
     * @link https://learn.microsoft.com/en-us/rest/api/azure/
     */
    JobAgent.disallowPreviewResource = compliance_policy_manager_1.policyManager.registerPolicy({
        resourceValidationPolicy: {
            name: "azurenative-sql-v20230201preview-jobagent-disallow-preview-resource",
            description: "Disallow the use of non-stable (Preview) Azure resouces (sql.v20230201preview.JobAgent).",
            configSchema: compliance_policy_manager_1.policyManager.policyConfigSchema,
            enforcementLevel: "advisory",
            validateResource: (0, policy_1.validateResourceOfType)(v20230201preview_21.JobAgent, (_, args, reportViolation) => {
                if (!compliance_policy_manager_1.policyManager.shouldEvalPolicy(args)) {
                    return;
                }
                reportViolation("Azure JobAgent shouldn't use an unstable API (sql.v20230201preview.JobAgent). A compatible replacement can be found at 'sql.JobAgent'.");
            }),
        },
        vendors: ["azure"],
        services: ["sql"],
        severity: "medium",
        topics: ["api", "unstable", "preview"],
    });
})(JobAgent || (JobAgent = {}));
exports.JobAgent = JobAgent;
var JobCredential;
(function (JobCredential) {
    /**
     * Disallow the use of non-stable (Preview) Azure resouces (sql.v20230201preview.JobCredential).
     *
     * @severity medium
     * @frameworks none
     * @topics api, preview, unstable
     * @link https://learn.microsoft.com/en-us/rest/api/azure/
     */
    JobCredential.disallowPreviewResource = compliance_policy_manager_1.policyManager.registerPolicy({
        resourceValidationPolicy: {
            name: "azurenative-sql-v20230201preview-jobcredential-disallow-preview-resource",
            description: "Disallow the use of non-stable (Preview) Azure resouces (sql.v20230201preview.JobCredential).",
            configSchema: compliance_policy_manager_1.policyManager.policyConfigSchema,
            enforcementLevel: "advisory",
            validateResource: (0, policy_1.validateResourceOfType)(v20230201preview_22.JobCredential, (_, args, reportViolation) => {
                if (!compliance_policy_manager_1.policyManager.shouldEvalPolicy(args)) {
                    return;
                }
                reportViolation("Azure JobCredential shouldn't use an unstable API (sql.v20230201preview.JobCredential). A compatible replacement can be found at 'sql.JobCredential'.");
            }),
        },
        vendors: ["azure"],
        services: ["sql"],
        severity: "medium",
        topics: ["api", "unstable", "preview"],
    });
})(JobCredential || (JobCredential = {}));
exports.JobCredential = JobCredential;
var JobStep;
(function (JobStep) {
    /**
     * Disallow the use of non-stable (Preview) Azure resouces (sql.v20230201preview.JobStep).
     *
     * @severity medium
     * @frameworks none
     * @topics api, preview, unstable
     * @link https://learn.microsoft.com/en-us/rest/api/azure/
     */
    JobStep.disallowPreviewResource = compliance_policy_manager_1.policyManager.registerPolicy({
        resourceValidationPolicy: {
            name: "azurenative-sql-v20230201preview-jobstep-disallow-preview-resource",
            description: "Disallow the use of non-stable (Preview) Azure resouces (sql.v20230201preview.JobStep).",
            configSchema: compliance_policy_manager_1.policyManager.policyConfigSchema,
            enforcementLevel: "advisory",
            validateResource: (0, policy_1.validateResourceOfType)(v20230201preview_23.JobStep, (_, args, reportViolation) => {
                if (!compliance_policy_manager_1.policyManager.shouldEvalPolicy(args)) {
                    return;
                }
                reportViolation("Azure JobStep shouldn't use an unstable API (sql.v20230201preview.JobStep). A compatible replacement can be found at 'sql.JobStep'.");
            }),
        },
        vendors: ["azure"],
        services: ["sql"],
        severity: "medium",
        topics: ["api", "unstable", "preview"],
    });
})(JobStep || (JobStep = {}));
exports.JobStep = JobStep;
var JobTargetGroup;
(function (JobTargetGroup) {
    /**
     * Disallow the use of non-stable (Preview) Azure resouces (sql.v20230201preview.JobTargetGroup).
     *
     * @severity medium
     * @frameworks none
     * @topics api, preview, unstable
     * @link https://learn.microsoft.com/en-us/rest/api/azure/
     */
    JobTargetGroup.disallowPreviewResource = compliance_policy_manager_1.policyManager.registerPolicy({
        resourceValidationPolicy: {
            name: "azurenative-sql-v20230201preview-jobtargetgroup-disallow-preview-resource",
            description: "Disallow the use of non-stable (Preview) Azure resouces (sql.v20230201preview.JobTargetGroup).",
            configSchema: compliance_policy_manager_1.policyManager.policyConfigSchema,
            enforcementLevel: "advisory",
            validateResource: (0, policy_1.validateResourceOfType)(v20230201preview_24.JobTargetGroup, (_, args, reportViolation) => {
                if (!compliance_policy_manager_1.policyManager.shouldEvalPolicy(args)) {
                    return;
                }
                reportViolation("Azure JobTargetGroup shouldn't use an unstable API (sql.v20230201preview.JobTargetGroup). A compatible replacement can be found at 'sql.JobTargetGroup'.");
            }),
        },
        vendors: ["azure"],
        services: ["sql"],
        severity: "medium",
        topics: ["api", "unstable", "preview"],
    });
})(JobTargetGroup || (JobTargetGroup = {}));
exports.JobTargetGroup = JobTargetGroup;
var LongTermRetentionPolicy;
(function (LongTermRetentionPolicy) {
    /**
     * Disallow the use of non-stable (Preview) Azure resouces (sql.v20230201preview.LongTermRetentionPolicy).
     *
     * @severity medium
     * @frameworks none
     * @topics api, preview, unstable
     * @link https://learn.microsoft.com/en-us/rest/api/azure/
     */
    LongTermRetentionPolicy.disallowPreviewResource = compliance_policy_manager_1.policyManager.registerPolicy({
        resourceValidationPolicy: {
            name: "azurenative-sql-v20230201preview-longtermretentionpolicy-disallow-preview-resource",
            description: "Disallow the use of non-stable (Preview) Azure resouces (sql.v20230201preview.LongTermRetentionPolicy).",
            configSchema: compliance_policy_manager_1.policyManager.policyConfigSchema,
            enforcementLevel: "advisory",
            validateResource: (0, policy_1.validateResourceOfType)(v20230201preview_25.LongTermRetentionPolicy, (_, args, reportViolation) => {
                if (!compliance_policy_manager_1.policyManager.shouldEvalPolicy(args)) {
                    return;
                }
                reportViolation("Azure LongTermRetentionPolicy shouldn't use an unstable API (sql.v20230201preview.LongTermRetentionPolicy). A compatible replacement can be found at 'sql.LongTermRetentionPolicy'.");
            }),
        },
        vendors: ["azure"],
        services: ["sql"],
        severity: "medium",
        topics: ["api", "unstable", "preview"],
    });
})(LongTermRetentionPolicy || (LongTermRetentionPolicy = {}));
exports.LongTermRetentionPolicy = LongTermRetentionPolicy;
var ManagedDatabase;
(function (ManagedDatabase) {
    /**
     * Disallow the use of non-stable (Preview) Azure resouces (sql.v20230201preview.ManagedDatabase).
     *
     * @severity medium
     * @frameworks none
     * @topics api, preview, unstable
     * @link https://learn.microsoft.com/en-us/rest/api/azure/
     */
    ManagedDatabase.disallowPreviewResource = compliance_policy_manager_1.policyManager.registerPolicy({
        resourceValidationPolicy: {
            name: "azurenative-sql-v20230201preview-manageddatabase-disallow-preview-resource",
            description: "Disallow the use of non-stable (Preview) Azure resouces (sql.v20230201preview.ManagedDatabase).",
            configSchema: compliance_policy_manager_1.policyManager.policyConfigSchema,
            enforcementLevel: "advisory",
            validateResource: (0, policy_1.validateResourceOfType)(v20230201preview_26.ManagedDatabase, (_, args, reportViolation) => {
                if (!compliance_policy_manager_1.policyManager.shouldEvalPolicy(args)) {
                    return;
                }
                reportViolation("Azure ManagedDatabase shouldn't use an unstable API (sql.v20230201preview.ManagedDatabase). A compatible replacement can be found at 'sql.ManagedDatabase'.");
            }),
        },
        vendors: ["azure"],
        services: ["sql"],
        severity: "medium",
        topics: ["api", "unstable", "preview"],
    });
})(ManagedDatabase || (ManagedDatabase = {}));
exports.ManagedDatabase = ManagedDatabase;
var ManagedDatabaseSensitivityLabel;
(function (ManagedDatabaseSensitivityLabel) {
    /**
     * Disallow the use of non-stable (Preview) Azure resouces (sql.v20230201preview.ManagedDatabaseSensitivityLabel).
     *
     * @severity medium
     * @frameworks none
     * @topics api, preview, unstable
     * @link https://learn.microsoft.com/en-us/rest/api/azure/
     */
    ManagedDatabaseSensitivityLabel.disallowPreviewResource = compliance_policy_manager_1.policyManager.registerPolicy({
        resourceValidationPolicy: {
            name: "azurenative-sql-v20230201preview-manageddatabasesensitivitylabel-disallow-preview-resource",
            description: "Disallow the use of non-stable (Preview) Azure resouces (sql.v20230201preview.ManagedDatabaseSensitivityLabel).",
            configSchema: compliance_policy_manager_1.policyManager.policyConfigSchema,
            enforcementLevel: "advisory",
            validateResource: (0, policy_1.validateResourceOfType)(v20230201preview_27.ManagedDatabaseSensitivityLabel, (_, args, reportViolation) => {
                if (!compliance_policy_manager_1.policyManager.shouldEvalPolicy(args)) {
                    return;
                }
                reportViolation("Azure ManagedDatabaseSensitivityLabel shouldn't use an unstable API (sql.v20230201preview.ManagedDatabaseSensitivityLabel). A compatible replacement can be found at 'sql.ManagedDatabaseSensitivityLabel'.");
            }),
        },
        vendors: ["azure"],
        services: ["sql"],
        severity: "medium",
        topics: ["api", "unstable", "preview"],
    });
})(ManagedDatabaseSensitivityLabel || (ManagedDatabaseSensitivityLabel = {}));
exports.ManagedDatabaseSensitivityLabel = ManagedDatabaseSensitivityLabel;
var ManagedDatabaseVulnerabilityAssessment;
(function (ManagedDatabaseVulnerabilityAssessment) {
    /**
     * Disallow the use of non-stable (Preview) Azure resouces (sql.v20230201preview.ManagedDatabaseVulnerabilityAssessment).
     *
     * @severity medium
     * @frameworks none
     * @topics api, preview, unstable
     * @link https://learn.microsoft.com/en-us/rest/api/azure/
     */
    ManagedDatabaseVulnerabilityAssessment.disallowPreviewResource = compliance_policy_manager_1.policyManager.registerPolicy({
        resourceValidationPolicy: {
            name: "azurenative-sql-v20230201preview-manageddatabasevulnerabilityassessment-disallow-preview-resource",
            description: "Disallow the use of non-stable (Preview) Azure resouces (sql.v20230201preview.ManagedDatabaseVulnerabilityAssessment).",
            configSchema: compliance_policy_manager_1.policyManager.policyConfigSchema,
            enforcementLevel: "advisory",
            validateResource: (0, policy_1.validateResourceOfType)(v20230201preview_28.ManagedDatabaseVulnerabilityAssessment, (_, args, reportViolation) => {
                if (!compliance_policy_manager_1.policyManager.shouldEvalPolicy(args)) {
                    return;
                }
                reportViolation("Azure ManagedDatabaseVulnerabilityAssessment shouldn't use an unstable API (sql.v20230201preview.ManagedDatabaseVulnerabilityAssessment). A compatible replacement can be found at 'sql.ManagedDatabaseVulnerabilityAssessment'.");
            }),
        },
        vendors: ["azure"],
        services: ["sql"],
        severity: "medium",
        topics: ["api", "unstable", "preview"],
    });
})(ManagedDatabaseVulnerabilityAssessment || (ManagedDatabaseVulnerabilityAssessment = {}));
exports.ManagedDatabaseVulnerabilityAssessment = ManagedDatabaseVulnerabilityAssessment;
var ManagedDatabaseVulnerabilityAssessmentRuleBaseline;
(function (ManagedDatabaseVulnerabilityAssessmentRuleBaseline) {
    /**
     * Disallow the use of non-stable (Preview) Azure resouces (sql.v20230201preview.ManagedDatabaseVulnerabilityAssessmentRuleBaseline).
     *
     * @severity medium
     * @frameworks none
     * @topics api, preview, unstable
     * @link https://learn.microsoft.com/en-us/rest/api/azure/
     */
    ManagedDatabaseVulnerabilityAssessmentRuleBaseline.disallowPreviewResource = compliance_policy_manager_1.policyManager.registerPolicy({
        resourceValidationPolicy: {
            name: "azurenative-sql-v20230201preview-manageddatabasevulnerabilityassessmentrulebaseline-disallow-preview-resource",
            description: "Disallow the use of non-stable (Preview) Azure resouces (sql.v20230201preview.ManagedDatabaseVulnerabilityAssessmentRuleBaseline).",
            configSchema: compliance_policy_manager_1.policyManager.policyConfigSchema,
            enforcementLevel: "advisory",
            validateResource: (0, policy_1.validateResourceOfType)(v20230201preview_29.ManagedDatabaseVulnerabilityAssessmentRuleBaseline, (_, args, reportViolation) => {
                if (!compliance_policy_manager_1.policyManager.shouldEvalPolicy(args)) {
                    return;
                }
                reportViolation("Azure ManagedDatabaseVulnerabilityAssessmentRuleBaseline shouldn't use an unstable API (sql.v20230201preview.ManagedDatabaseVulnerabilityAssessmentRuleBaseline). A compatible replacement can be found at 'sql.ManagedDatabaseVulnerabilityAssessmentRuleBaseline'.");
            }),
        },
        vendors: ["azure"],
        services: ["sql"],
        severity: "medium",
        topics: ["api", "unstable", "preview"],
    });
})(ManagedDatabaseVulnerabilityAssessmentRuleBaseline || (ManagedDatabaseVulnerabilityAssessmentRuleBaseline = {}));
exports.ManagedDatabaseVulnerabilityAssessmentRuleBaseline = ManagedDatabaseVulnerabilityAssessmentRuleBaseline;
var ManagedInstance;
(function (ManagedInstance) {
    /**
     * Disallow the use of non-stable (Preview) Azure resouces (sql.v20230201preview.ManagedInstance).
     *
     * @severity medium
     * @frameworks none
     * @topics api, preview, unstable
     * @link https://learn.microsoft.com/en-us/rest/api/azure/
     */
    ManagedInstance.disallowPreviewResource = compliance_policy_manager_1.policyManager.registerPolicy({
        resourceValidationPolicy: {
            name: "azurenative-sql-v20230201preview-managedinstance-disallow-preview-resource",
            description: "Disallow the use of non-stable (Preview) Azure resouces (sql.v20230201preview.ManagedInstance).",
            configSchema: compliance_policy_manager_1.policyManager.policyConfigSchema,
            enforcementLevel: "advisory",
            validateResource: (0, policy_1.validateResourceOfType)(v20230201preview_30.ManagedInstance, (_, args, reportViolation) => {
                if (!compliance_policy_manager_1.policyManager.shouldEvalPolicy(args)) {
                    return;
                }
                reportViolation("Azure ManagedInstance shouldn't use an unstable API (sql.v20230201preview.ManagedInstance). A compatible replacement can be found at 'sql.ManagedInstance'.");
            }),
        },
        vendors: ["azure"],
        services: ["sql"],
        severity: "medium",
        topics: ["api", "unstable", "preview"],
    });
})(ManagedInstance || (ManagedInstance = {}));
exports.ManagedInstance = ManagedInstance;
var ManagedInstanceAdministrator;
(function (ManagedInstanceAdministrator) {
    /**
     * Disallow the use of non-stable (Preview) Azure resouces (sql.v20230201preview.ManagedInstanceAdministrator).
     *
     * @severity medium
     * @frameworks none
     * @topics api, preview, unstable
     * @link https://learn.microsoft.com/en-us/rest/api/azure/
     */
    ManagedInstanceAdministrator.disallowPreviewResource = compliance_policy_manager_1.policyManager.registerPolicy({
        resourceValidationPolicy: {
            name: "azurenative-sql-v20230201preview-managedinstanceadministrator-disallow-preview-resource",
            description: "Disallow the use of non-stable (Preview) Azure resouces (sql.v20230201preview.ManagedInstanceAdministrator).",
            configSchema: compliance_policy_manager_1.policyManager.policyConfigSchema,
            enforcementLevel: "advisory",
            validateResource: (0, policy_1.validateResourceOfType)(v20230201preview_31.ManagedInstanceAdministrator, (_, args, reportViolation) => {
                if (!compliance_policy_manager_1.policyManager.shouldEvalPolicy(args)) {
                    return;
                }
                reportViolation("Azure ManagedInstanceAdministrator shouldn't use an unstable API (sql.v20230201preview.ManagedInstanceAdministrator). A compatible replacement can be found at 'sql.ManagedInstanceAdministrator'.");
            }),
        },
        vendors: ["azure"],
        services: ["sql"],
        severity: "medium",
        topics: ["api", "unstable", "preview"],
    });
})(ManagedInstanceAdministrator || (ManagedInstanceAdministrator = {}));
exports.ManagedInstanceAdministrator = ManagedInstanceAdministrator;
var ManagedInstanceAzureADOnlyAuthentication;
(function (ManagedInstanceAzureADOnlyAuthentication) {
    /**
     * Disallow the use of non-stable (Preview) Azure resouces (sql.v20230201preview.ManagedInstanceAzureADOnlyAuthentication).
     *
     * @severity medium
     * @frameworks none
     * @topics api, preview, unstable
     * @link https://learn.microsoft.com/en-us/rest/api/azure/
     */
    ManagedInstanceAzureADOnlyAuthentication.disallowPreviewResource = compliance_policy_manager_1.policyManager.registerPolicy({
        resourceValidationPolicy: {
            name: "azurenative-sql-v20230201preview-managedinstanceazureadonlyauthentication-disallow-preview-resource",
            description: "Disallow the use of non-stable (Preview) Azure resouces (sql.v20230201preview.ManagedInstanceAzureADOnlyAuthentication).",
            configSchema: compliance_policy_manager_1.policyManager.policyConfigSchema,
            enforcementLevel: "advisory",
            validateResource: (0, policy_1.validateResourceOfType)(v20230201preview_32.ManagedInstanceAzureADOnlyAuthentication, (_, args, reportViolation) => {
                if (!compliance_policy_manager_1.policyManager.shouldEvalPolicy(args)) {
                    return;
                }
                reportViolation("Azure ManagedInstanceAzureADOnlyAuthentication shouldn't use an unstable API (sql.v20230201preview.ManagedInstanceAzureADOnlyAuthentication). A compatible replacement can be found at 'sql.ManagedInstanceAzureADOnlyAuthentication'.");
            }),
        },
        vendors: ["azure"],
        services: ["sql"],
        severity: "medium",
        topics: ["api", "unstable", "preview"],
    });
})(ManagedInstanceAzureADOnlyAuthentication || (ManagedInstanceAzureADOnlyAuthentication = {}));
exports.ManagedInstanceAzureADOnlyAuthentication = ManagedInstanceAzureADOnlyAuthentication;
var ManagedInstanceKey;
(function (ManagedInstanceKey) {
    /**
     * Disallow the use of non-stable (Preview) Azure resouces (sql.v20230201preview.ManagedInstanceKey).
     *
     * @severity medium
     * @frameworks none
     * @topics api, preview, unstable
     * @link https://learn.microsoft.com/en-us/rest/api/azure/
     */
    ManagedInstanceKey.disallowPreviewResource = compliance_policy_manager_1.policyManager.registerPolicy({
        resourceValidationPolicy: {
            name: "azurenative-sql-v20230201preview-managedinstancekey-disallow-preview-resource",
            description: "Disallow the use of non-stable (Preview) Azure resouces (sql.v20230201preview.ManagedInstanceKey).",
            configSchema: compliance_policy_manager_1.policyManager.policyConfigSchema,
            enforcementLevel: "advisory",
            validateResource: (0, policy_1.validateResourceOfType)(v20230201preview_33.ManagedInstanceKey, (_, args, reportViolation) => {
                if (!compliance_policy_manager_1.policyManager.shouldEvalPolicy(args)) {
                    return;
                }
                reportViolation("Azure ManagedInstanceKey shouldn't use an unstable API (sql.v20230201preview.ManagedInstanceKey). A compatible replacement can be found at 'sql.ManagedInstanceKey'.");
            }),
        },
        vendors: ["azure"],
        services: ["sql"],
        severity: "medium",
        topics: ["api", "unstable", "preview"],
    });
})(ManagedInstanceKey || (ManagedInstanceKey = {}));
exports.ManagedInstanceKey = ManagedInstanceKey;
var ManagedInstanceLongTermRetentionPolicy;
(function (ManagedInstanceLongTermRetentionPolicy) {
    /**
     * Disallow the use of non-stable (Preview) Azure resouces (sql.v20230201preview.ManagedInstanceLongTermRetentionPolicy).
     *
     * @severity medium
     * @frameworks none
     * @topics api, preview, unstable
     * @link https://learn.microsoft.com/en-us/rest/api/azure/
     */
    ManagedInstanceLongTermRetentionPolicy.disallowPreviewResource = compliance_policy_manager_1.policyManager.registerPolicy({
        resourceValidationPolicy: {
            name: "azurenative-sql-v20230201preview-managedinstancelongtermretentionpolicy-disallow-preview-resource",
            description: "Disallow the use of non-stable (Preview) Azure resouces (sql.v20230201preview.ManagedInstanceLongTermRetentionPolicy).",
            configSchema: compliance_policy_manager_1.policyManager.policyConfigSchema,
            enforcementLevel: "advisory",
            validateResource: (0, policy_1.validateResourceOfType)(v20230201preview_34.ManagedInstanceLongTermRetentionPolicy, (_, args, reportViolation) => {
                if (!compliance_policy_manager_1.policyManager.shouldEvalPolicy(args)) {
                    return;
                }
                reportViolation("Azure ManagedInstanceLongTermRetentionPolicy shouldn't use an unstable API (sql.v20230201preview.ManagedInstanceLongTermRetentionPolicy). A compatible replacement can be found at 'sql.ManagedInstanceLongTermRetentionPolicy'.");
            }),
        },
        vendors: ["azure"],
        services: ["sql"],
        severity: "medium",
        topics: ["api", "unstable", "preview"],
    });
})(ManagedInstanceLongTermRetentionPolicy || (ManagedInstanceLongTermRetentionPolicy = {}));
exports.ManagedInstanceLongTermRetentionPolicy = ManagedInstanceLongTermRetentionPolicy;
var ManagedInstancePrivateEndpointConnection;
(function (ManagedInstancePrivateEndpointConnection) {
    /**
     * Disallow the use of non-stable (Preview) Azure resouces (sql.v20230201preview.ManagedInstancePrivateEndpointConnection).
     *
     * @severity medium
     * @frameworks none
     * @topics api, preview, unstable
     * @link https://learn.microsoft.com/en-us/rest/api/azure/
     */
    ManagedInstancePrivateEndpointConnection.disallowPreviewResource = compliance_policy_manager_1.policyManager.registerPolicy({
        resourceValidationPolicy: {
            name: "azurenative-sql-v20230201preview-managedinstanceprivateendpointconnection-disallow-preview-resource",
            description: "Disallow the use of non-stable (Preview) Azure resouces (sql.v20230201preview.ManagedInstancePrivateEndpointConnection).",
            configSchema: compliance_policy_manager_1.policyManager.policyConfigSchema,
            enforcementLevel: "advisory",
            validateResource: (0, policy_1.validateResourceOfType)(v20230201preview_35.ManagedInstancePrivateEndpointConnection, (_, args, reportViolation) => {
                if (!compliance_policy_manager_1.policyManager.shouldEvalPolicy(args)) {
                    return;
                }
                reportViolation("Azure ManagedInstancePrivateEndpointConnection shouldn't use an unstable API (sql.v20230201preview.ManagedInstancePrivateEndpointConnection). A compatible replacement can be found at 'sql.ManagedInstancePrivateEndpointConnection'.");
            }),
        },
        vendors: ["azure"],
        services: ["sql"],
        severity: "medium",
        topics: ["api", "unstable", "preview"],
    });
})(ManagedInstancePrivateEndpointConnection || (ManagedInstancePrivateEndpointConnection = {}));
exports.ManagedInstancePrivateEndpointConnection = ManagedInstancePrivateEndpointConnection;
var ManagedInstanceVulnerabilityAssessment;
(function (ManagedInstanceVulnerabilityAssessment) {
    /**
     * Disallow the use of non-stable (Preview) Azure resouces (sql.v20230201preview.ManagedInstanceVulnerabilityAssessment).
     *
     * @severity medium
     * @frameworks none
     * @topics api, preview, unstable
     * @link https://learn.microsoft.com/en-us/rest/api/azure/
     */
    ManagedInstanceVulnerabilityAssessment.disallowPreviewResource = compliance_policy_manager_1.policyManager.registerPolicy({
        resourceValidationPolicy: {
            name: "azurenative-sql-v20230201preview-managedinstancevulnerabilityassessment-disallow-preview-resource",
            description: "Disallow the use of non-stable (Preview) Azure resouces (sql.v20230201preview.ManagedInstanceVulnerabilityAssessment).",
            configSchema: compliance_policy_manager_1.policyManager.policyConfigSchema,
            enforcementLevel: "advisory",
            validateResource: (0, policy_1.validateResourceOfType)(v20230201preview_36.ManagedInstanceVulnerabilityAssessment, (_, args, reportViolation) => {
                if (!compliance_policy_manager_1.policyManager.shouldEvalPolicy(args)) {
                    return;
                }
                reportViolation("Azure ManagedInstanceVulnerabilityAssessment shouldn't use an unstable API (sql.v20230201preview.ManagedInstanceVulnerabilityAssessment). A compatible replacement can be found at 'sql.ManagedInstanceVulnerabilityAssessment'.");
            }),
        },
        vendors: ["azure"],
        services: ["sql"],
        severity: "medium",
        topics: ["api", "unstable", "preview"],
    });
})(ManagedInstanceVulnerabilityAssessment || (ManagedInstanceVulnerabilityAssessment = {}));
exports.ManagedInstanceVulnerabilityAssessment = ManagedInstanceVulnerabilityAssessment;
var ManagedServerDnsAlias;
(function (ManagedServerDnsAlias) {
    /**
     * Disallow the use of non-stable (Preview) Azure resouces (sql.v20230201preview.ManagedServerDnsAlias).
     *
     * @severity medium
     * @frameworks none
     * @topics api, preview, unstable
     * @link https://learn.microsoft.com/en-us/rest/api/azure/
     */
    ManagedServerDnsAlias.disallowPreviewResource = compliance_policy_manager_1.policyManager.registerPolicy({
        resourceValidationPolicy: {
            name: "azurenative-sql-v20230201preview-managedserverdnsalias-disallow-preview-resource",
            description: "Disallow the use of non-stable (Preview) Azure resouces (sql.v20230201preview.ManagedServerDnsAlias).",
            configSchema: compliance_policy_manager_1.policyManager.policyConfigSchema,
            enforcementLevel: "advisory",
            validateResource: (0, policy_1.validateResourceOfType)(v20230201preview_37.ManagedServerDnsAlias, (_, args, reportViolation) => {
                if (!compliance_policy_manager_1.policyManager.shouldEvalPolicy(args)) {
                    return;
                }
                reportViolation("Azure ManagedServerDnsAlias shouldn't use an unstable API (sql.v20230201preview.ManagedServerDnsAlias). A compatible replacement can be found at 'sql.ManagedServerDnsAlias'.");
            }),
        },
        vendors: ["azure"],
        services: ["sql"],
        severity: "medium",
        topics: ["api", "unstable", "preview"],
    });
})(ManagedServerDnsAlias || (ManagedServerDnsAlias = {}));
exports.ManagedServerDnsAlias = ManagedServerDnsAlias;
var OutboundFirewallRule;
(function (OutboundFirewallRule) {
    /**
     * Disallow the use of non-stable (Preview) Azure resouces (sql.v20230201preview.OutboundFirewallRule).
     *
     * @severity medium
     * @frameworks none
     * @topics api, preview, unstable
     * @link https://learn.microsoft.com/en-us/rest/api/azure/
     */
    OutboundFirewallRule.disallowPreviewResource = compliance_policy_manager_1.policyManager.registerPolicy({
        resourceValidationPolicy: {
            name: "azurenative-sql-v20230201preview-outboundfirewallrule-disallow-preview-resource",
            description: "Disallow the use of non-stable (Preview) Azure resouces (sql.v20230201preview.OutboundFirewallRule).",
            configSchema: compliance_policy_manager_1.policyManager.policyConfigSchema,
            enforcementLevel: "advisory",
            validateResource: (0, policy_1.validateResourceOfType)(v20230201preview_38.OutboundFirewallRule, (_, args, reportViolation) => {
                if (!compliance_policy_manager_1.policyManager.shouldEvalPolicy(args)) {
                    return;
                }
                reportViolation("Azure OutboundFirewallRule shouldn't use an unstable API (sql.v20230201preview.OutboundFirewallRule). A compatible replacement can be found at 'sql.OutboundFirewallRule'.");
            }),
        },
        vendors: ["azure"],
        services: ["sql"],
        severity: "medium",
        topics: ["api", "unstable", "preview"],
    });
})(OutboundFirewallRule || (OutboundFirewallRule = {}));
exports.OutboundFirewallRule = OutboundFirewallRule;
var PrivateEndpointConnection;
(function (PrivateEndpointConnection) {
    /**
     * Disallow the use of non-stable (Preview) Azure resouces (sql.v20230201preview.PrivateEndpointConnection).
     *
     * @severity medium
     * @frameworks none
     * @topics api, preview, unstable
     * @link https://learn.microsoft.com/en-us/rest/api/azure/
     */
    PrivateEndpointConnection.disallowPreviewResource = compliance_policy_manager_1.policyManager.registerPolicy({
        resourceValidationPolicy: {
            name: "azurenative-sql-v20230201preview-privateendpointconnection-disallow-preview-resource",
            description: "Disallow the use of non-stable (Preview) Azure resouces (sql.v20230201preview.PrivateEndpointConnection).",
            configSchema: compliance_policy_manager_1.policyManager.policyConfigSchema,
            enforcementLevel: "advisory",
            validateResource: (0, policy_1.validateResourceOfType)(v20230201preview_39.PrivateEndpointConnection, (_, args, reportViolation) => {
                if (!compliance_policy_manager_1.policyManager.shouldEvalPolicy(args)) {
                    return;
                }
                reportViolation("Azure PrivateEndpointConnection shouldn't use an unstable API (sql.v20230201preview.PrivateEndpointConnection). A compatible replacement can be found at 'sql.PrivateEndpointConnection'.");
            }),
        },
        vendors: ["azure"],
        services: ["sql"],
        severity: "medium",
        topics: ["api", "unstable", "preview"],
    });
})(PrivateEndpointConnection || (PrivateEndpointConnection = {}));
exports.PrivateEndpointConnection = PrivateEndpointConnection;
var SensitivityLabel;
(function (SensitivityLabel) {
    /**
     * Disallow the use of non-stable (Preview) Azure resouces (sql.v20230201preview.SensitivityLabel).
     *
     * @severity medium
     * @frameworks none
     * @topics api, preview, unstable
     * @link https://learn.microsoft.com/en-us/rest/api/azure/
     */
    SensitivityLabel.disallowPreviewResource = compliance_policy_manager_1.policyManager.registerPolicy({
        resourceValidationPolicy: {
            name: "azurenative-sql-v20230201preview-sensitivitylabel-disallow-preview-resource",
            description: "Disallow the use of non-stable (Preview) Azure resouces (sql.v20230201preview.SensitivityLabel).",
            configSchema: compliance_policy_manager_1.policyManager.policyConfigSchema,
            enforcementLevel: "advisory",
            validateResource: (0, policy_1.validateResourceOfType)(v20230201preview_40.SensitivityLabel, (_, args, reportViolation) => {
                if (!compliance_policy_manager_1.policyManager.shouldEvalPolicy(args)) {
                    return;
                }
                reportViolation("Azure SensitivityLabel shouldn't use an unstable API (sql.v20230201preview.SensitivityLabel). A compatible replacement can be found at 'sql.SensitivityLabel'.");
            }),
        },
        vendors: ["azure"],
        services: ["sql"],
        severity: "medium",
        topics: ["api", "unstable", "preview"],
    });
})(SensitivityLabel || (SensitivityLabel = {}));
exports.SensitivityLabel = SensitivityLabel;
var Server;
(function (Server) {
    /**
     * Disallow the use of non-stable (Preview) Azure resouces (sql.v20230201preview.Server).
     *
     * @severity medium
     * @frameworks none
     * @topics api, preview, unstable
     * @link https://learn.microsoft.com/en-us/rest/api/azure/
     */
    Server.disallowPreviewResource = compliance_policy_manager_1.policyManager.registerPolicy({
        resourceValidationPolicy: {
            name: "azurenative-sql-v20230201preview-server-disallow-preview-resource",
            description: "Disallow the use of non-stable (Preview) Azure resouces (sql.v20230201preview.Server).",
            configSchema: compliance_policy_manager_1.policyManager.policyConfigSchema,
            enforcementLevel: "advisory",
            validateResource: (0, policy_1.validateResourceOfType)(v20230201preview_41.Server, (_, args, reportViolation) => {
                if (!compliance_policy_manager_1.policyManager.shouldEvalPolicy(args)) {
                    return;
                }
                reportViolation("Azure Server shouldn't use an unstable API (sql.v20230201preview.Server). A compatible replacement can be found at 'sql.Server'.");
            }),
        },
        vendors: ["azure"],
        services: ["sql"],
        severity: "medium",
        topics: ["api", "unstable", "preview"],
    });
})(Server || (Server = {}));
exports.Server = Server;
var ServerAdvisor;
(function (ServerAdvisor) {
    /**
     * Disallow the use of non-stable (Preview) Azure resouces (sql.v20230201preview.ServerAdvisor).
     *
     * @severity medium
     * @frameworks none
     * @topics api, preview, unstable
     * @link https://learn.microsoft.com/en-us/rest/api/azure/
     */
    ServerAdvisor.disallowPreviewResource = compliance_policy_manager_1.policyManager.registerPolicy({
        resourceValidationPolicy: {
            name: "azurenative-sql-v20230201preview-serveradvisor-disallow-preview-resource",
            description: "Disallow the use of non-stable (Preview) Azure resouces (sql.v20230201preview.ServerAdvisor).",
            configSchema: compliance_policy_manager_1.policyManager.policyConfigSchema,
            enforcementLevel: "advisory",
            validateResource: (0, policy_1.validateResourceOfType)(v20230201preview_42.ServerAdvisor, (_, args, reportViolation) => {
                if (!compliance_policy_manager_1.policyManager.shouldEvalPolicy(args)) {
                    return;
                }
                reportViolation("Azure ServerAdvisor shouldn't use an unstable API (sql.v20230201preview.ServerAdvisor). A compatible replacement can be found at 'sql.ServerAdvisor'.");
            }),
        },
        vendors: ["azure"],
        services: ["sql"],
        severity: "medium",
        topics: ["api", "unstable", "preview"],
    });
})(ServerAdvisor || (ServerAdvisor = {}));
exports.ServerAdvisor = ServerAdvisor;
var ServerAzureADAdministrator;
(function (ServerAzureADAdministrator) {
    /**
     * Disallow the use of non-stable (Preview) Azure resouces (sql.v20230201preview.ServerAzureADAdministrator).
     *
     * @severity medium
     * @frameworks none
     * @topics api, preview, unstable
     * @link https://learn.microsoft.com/en-us/rest/api/azure/
     */
    ServerAzureADAdministrator.disallowPreviewResource = compliance_policy_manager_1.policyManager.registerPolicy({
        resourceValidationPolicy: {
            name: "azurenative-sql-v20230201preview-serverazureadadministrator-disallow-preview-resource",
            description: "Disallow the use of non-stable (Preview) Azure resouces (sql.v20230201preview.ServerAzureADAdministrator).",
            configSchema: compliance_policy_manager_1.policyManager.policyConfigSchema,
            enforcementLevel: "advisory",
            validateResource: (0, policy_1.validateResourceOfType)(v20230201preview_43.ServerAzureADAdministrator, (_, args, reportViolation) => {
                if (!compliance_policy_manager_1.policyManager.shouldEvalPolicy(args)) {
                    return;
                }
                reportViolation("Azure ServerAzureADAdministrator shouldn't use an unstable API (sql.v20230201preview.ServerAzureADAdministrator). A compatible replacement can be found at 'sql.ServerAzureADAdministrator'.");
            }),
        },
        vendors: ["azure"],
        services: ["sql"],
        severity: "medium",
        topics: ["api", "unstable", "preview"],
    });
})(ServerAzureADAdministrator || (ServerAzureADAdministrator = {}));
exports.ServerAzureADAdministrator = ServerAzureADAdministrator;
var ServerAzureADOnlyAuthentication;
(function (ServerAzureADOnlyAuthentication) {
    /**
     * Disallow the use of non-stable (Preview) Azure resouces (sql.v20230201preview.ServerAzureADOnlyAuthentication).
     *
     * @severity medium
     * @frameworks none
     * @topics api, preview, unstable
     * @link https://learn.microsoft.com/en-us/rest/api/azure/
     */
    ServerAzureADOnlyAuthentication.disallowPreviewResource = compliance_policy_manager_1.policyManager.registerPolicy({
        resourceValidationPolicy: {
            name: "azurenative-sql-v20230201preview-serverazureadonlyauthentication-disallow-preview-resource",
            description: "Disallow the use of non-stable (Preview) Azure resouces (sql.v20230201preview.ServerAzureADOnlyAuthentication).",
            configSchema: compliance_policy_manager_1.policyManager.policyConfigSchema,
            enforcementLevel: "advisory",
            validateResource: (0, policy_1.validateResourceOfType)(v20230201preview_44.ServerAzureADOnlyAuthentication, (_, args, reportViolation) => {
                if (!compliance_policy_manager_1.policyManager.shouldEvalPolicy(args)) {
                    return;
                }
                reportViolation("Azure ServerAzureADOnlyAuthentication shouldn't use an unstable API (sql.v20230201preview.ServerAzureADOnlyAuthentication). A compatible replacement can be found at 'sql.ServerAzureADOnlyAuthentication'.");
            }),
        },
        vendors: ["azure"],
        services: ["sql"],
        severity: "medium",
        topics: ["api", "unstable", "preview"],
    });
})(ServerAzureADOnlyAuthentication || (ServerAzureADOnlyAuthentication = {}));
exports.ServerAzureADOnlyAuthentication = ServerAzureADOnlyAuthentication;
var ServerBlobAuditingPolicy;
(function (ServerBlobAuditingPolicy) {
    /**
     * Disallow the use of non-stable (Preview) Azure resouces (sql.v20230201preview.ServerBlobAuditingPolicy).
     *
     * @severity medium
     * @frameworks none
     * @topics api, preview, unstable
     * @link https://learn.microsoft.com/en-us/rest/api/azure/
     */
    ServerBlobAuditingPolicy.disallowPreviewResource = compliance_policy_manager_1.policyManager.registerPolicy({
        resourceValidationPolicy: {
            name: "azurenative-sql-v20230201preview-serverblobauditingpolicy-disallow-preview-resource",
            description: "Disallow the use of non-stable (Preview) Azure resouces (sql.v20230201preview.ServerBlobAuditingPolicy).",
            configSchema: compliance_policy_manager_1.policyManager.policyConfigSchema,
            enforcementLevel: "advisory",
            validateResource: (0, policy_1.validateResourceOfType)(v20230201preview_45.ServerBlobAuditingPolicy, (_, args, reportViolation) => {
                if (!compliance_policy_manager_1.policyManager.shouldEvalPolicy(args)) {
                    return;
                }
                reportViolation("Azure ServerBlobAuditingPolicy shouldn't use an unstable API (sql.v20230201preview.ServerBlobAuditingPolicy). A compatible replacement can be found at 'sql.ServerBlobAuditingPolicy'.");
            }),
        },
        vendors: ["azure"],
        services: ["sql"],
        severity: "medium",
        topics: ["api", "unstable", "preview"],
    });
})(ServerBlobAuditingPolicy || (ServerBlobAuditingPolicy = {}));
exports.ServerBlobAuditingPolicy = ServerBlobAuditingPolicy;
var ServerDnsAlias;
(function (ServerDnsAlias) {
    /**
     * Disallow the use of non-stable (Preview) Azure resouces (sql.v20230201preview.ServerDnsAlias).
     *
     * @severity medium
     * @frameworks none
     * @topics api, preview, unstable
     * @link https://learn.microsoft.com/en-us/rest/api/azure/
     */
    ServerDnsAlias.disallowPreviewResource = compliance_policy_manager_1.policyManager.registerPolicy({
        resourceValidationPolicy: {
            name: "azurenative-sql-v20230201preview-serverdnsalias-disallow-preview-resource",
            description: "Disallow the use of non-stable (Preview) Azure resouces (sql.v20230201preview.ServerDnsAlias).",
            configSchema: compliance_policy_manager_1.policyManager.policyConfigSchema,
            enforcementLevel: "advisory",
            validateResource: (0, policy_1.validateResourceOfType)(v20230201preview_46.ServerDnsAlias, (_, args, reportViolation) => {
                if (!compliance_policy_manager_1.policyManager.shouldEvalPolicy(args)) {
                    return;
                }
                reportViolation("Azure ServerDnsAlias shouldn't use an unstable API (sql.v20230201preview.ServerDnsAlias). A compatible replacement can be found at 'sql.ServerDnsAlias'.");
            }),
        },
        vendors: ["azure"],
        services: ["sql"],
        severity: "medium",
        topics: ["api", "unstable", "preview"],
    });
})(ServerDnsAlias || (ServerDnsAlias = {}));
exports.ServerDnsAlias = ServerDnsAlias;
var ServerKey;
(function (ServerKey) {
    /**
     * Disallow the use of non-stable (Preview) Azure resouces (sql.v20230201preview.ServerKey).
     *
     * @severity medium
     * @frameworks none
     * @topics api, preview, unstable
     * @link https://learn.microsoft.com/en-us/rest/api/azure/
     */
    ServerKey.disallowPreviewResource = compliance_policy_manager_1.policyManager.registerPolicy({
        resourceValidationPolicy: {
            name: "azurenative-sql-v20230201preview-serverkey-disallow-preview-resource",
            description: "Disallow the use of non-stable (Preview) Azure resouces (sql.v20230201preview.ServerKey).",
            configSchema: compliance_policy_manager_1.policyManager.policyConfigSchema,
            enforcementLevel: "advisory",
            validateResource: (0, policy_1.validateResourceOfType)(v20230201preview_47.ServerKey, (_, args, reportViolation) => {
                if (!compliance_policy_manager_1.policyManager.shouldEvalPolicy(args)) {
                    return;
                }
                reportViolation("Azure ServerKey shouldn't use an unstable API (sql.v20230201preview.ServerKey). A compatible replacement can be found at 'sql.ServerKey'.");
            }),
        },
        vendors: ["azure"],
        services: ["sql"],
        severity: "medium",
        topics: ["api", "unstable", "preview"],
    });
})(ServerKey || (ServerKey = {}));
exports.ServerKey = ServerKey;
var ServerSecurityAlertPolicy;
(function (ServerSecurityAlertPolicy) {
    /**
     * Disallow the use of non-stable (Preview) Azure resouces (sql.v20230201preview.ServerSecurityAlertPolicy).
     *
     * @severity medium
     * @frameworks none
     * @topics api, preview, unstable
     * @link https://learn.microsoft.com/en-us/rest/api/azure/
     */
    ServerSecurityAlertPolicy.disallowPreviewResource = compliance_policy_manager_1.policyManager.registerPolicy({
        resourceValidationPolicy: {
            name: "azurenative-sql-v20230201preview-serversecurityalertpolicy-disallow-preview-resource",
            description: "Disallow the use of non-stable (Preview) Azure resouces (sql.v20230201preview.ServerSecurityAlertPolicy).",
            configSchema: compliance_policy_manager_1.policyManager.policyConfigSchema,
            enforcementLevel: "advisory",
            validateResource: (0, policy_1.validateResourceOfType)(v20230201preview_48.ServerSecurityAlertPolicy, (_, args, reportViolation) => {
                if (!compliance_policy_manager_1.policyManager.shouldEvalPolicy(args)) {
                    return;
                }
                reportViolation("Azure ServerSecurityAlertPolicy shouldn't use an unstable API (sql.v20230201preview.ServerSecurityAlertPolicy). A compatible replacement can be found at 'sql.ServerSecurityAlertPolicy'.");
            }),
        },
        vendors: ["azure"],
        services: ["sql"],
        severity: "medium",
        topics: ["api", "unstable", "preview"],
    });
})(ServerSecurityAlertPolicy || (ServerSecurityAlertPolicy = {}));
exports.ServerSecurityAlertPolicy = ServerSecurityAlertPolicy;
var ServerTrustCertificate;
(function (ServerTrustCertificate) {
    /**
     * Disallow the use of non-stable (Preview) Azure resouces (sql.v20230201preview.ServerTrustCertificate).
     *
     * @severity medium
     * @frameworks none
     * @topics api, preview, unstable
     * @link https://learn.microsoft.com/en-us/rest/api/azure/
     */
    ServerTrustCertificate.disallowPreviewResource = compliance_policy_manager_1.policyManager.registerPolicy({
        resourceValidationPolicy: {
            name: "azurenative-sql-v20230201preview-servertrustcertificate-disallow-preview-resource",
            description: "Disallow the use of non-stable (Preview) Azure resouces (sql.v20230201preview.ServerTrustCertificate).",
            configSchema: compliance_policy_manager_1.policyManager.policyConfigSchema,
            enforcementLevel: "advisory",
            validateResource: (0, policy_1.validateResourceOfType)(v20230201preview_49.ServerTrustCertificate, (_, args, reportViolation) => {
                if (!compliance_policy_manager_1.policyManager.shouldEvalPolicy(args)) {
                    return;
                }
                reportViolation("Azure ServerTrustCertificate shouldn't use an unstable API (sql.v20230201preview.ServerTrustCertificate). A compatible replacement can be found at 'sql.ServerTrustCertificate'.");
            }),
        },
        vendors: ["azure"],
        services: ["sql"],
        severity: "medium",
        topics: ["api", "unstable", "preview"],
    });
})(ServerTrustCertificate || (ServerTrustCertificate = {}));
exports.ServerTrustCertificate = ServerTrustCertificate;
var ServerTrustGroup;
(function (ServerTrustGroup) {
    /**
     * Disallow the use of non-stable (Preview) Azure resouces (sql.v20230201preview.ServerTrustGroup).
     *
     * @severity medium
     * @frameworks none
     * @topics api, preview, unstable
     * @link https://learn.microsoft.com/en-us/rest/api/azure/
     */
    ServerTrustGroup.disallowPreviewResource = compliance_policy_manager_1.policyManager.registerPolicy({
        resourceValidationPolicy: {
            name: "azurenative-sql-v20230201preview-servertrustgroup-disallow-preview-resource",
            description: "Disallow the use of non-stable (Preview) Azure resouces (sql.v20230201preview.ServerTrustGroup).",
            configSchema: compliance_policy_manager_1.policyManager.policyConfigSchema,
            enforcementLevel: "advisory",
            validateResource: (0, policy_1.validateResourceOfType)(v20230201preview_50.ServerTrustGroup, (_, args, reportViolation) => {
                if (!compliance_policy_manager_1.policyManager.shouldEvalPolicy(args)) {
                    return;
                }
                reportViolation("Azure ServerTrustGroup shouldn't use an unstable API (sql.v20230201preview.ServerTrustGroup). A compatible replacement can be found at 'sql.ServerTrustGroup'.");
            }),
        },
        vendors: ["azure"],
        services: ["sql"],
        severity: "medium",
        topics: ["api", "unstable", "preview"],
    });
})(ServerTrustGroup || (ServerTrustGroup = {}));
exports.ServerTrustGroup = ServerTrustGroup;
var ServerVulnerabilityAssessment;
(function (ServerVulnerabilityAssessment) {
    /**
     * Disallow the use of non-stable (Preview) Azure resouces (sql.v20230201preview.ServerVulnerabilityAssessment).
     *
     * @severity medium
     * @frameworks none
     * @topics api, preview, unstable
     * @link https://learn.microsoft.com/en-us/rest/api/azure/
     */
    ServerVulnerabilityAssessment.disallowPreviewResource = compliance_policy_manager_1.policyManager.registerPolicy({
        resourceValidationPolicy: {
            name: "azurenative-sql-v20230201preview-servervulnerabilityassessment-disallow-preview-resource",
            description: "Disallow the use of non-stable (Preview) Azure resouces (sql.v20230201preview.ServerVulnerabilityAssessment).",
            configSchema: compliance_policy_manager_1.policyManager.policyConfigSchema,
            enforcementLevel: "advisory",
            validateResource: (0, policy_1.validateResourceOfType)(v20230201preview_51.ServerVulnerabilityAssessment, (_, args, reportViolation) => {
                if (!compliance_policy_manager_1.policyManager.shouldEvalPolicy(args)) {
                    return;
                }
                reportViolation("Azure ServerVulnerabilityAssessment shouldn't use an unstable API (sql.v20230201preview.ServerVulnerabilityAssessment). A compatible replacement can be found at 'sql.ServerVulnerabilityAssessment'.");
            }),
        },
        vendors: ["azure"],
        services: ["sql"],
        severity: "medium",
        topics: ["api", "unstable", "preview"],
    });
})(ServerVulnerabilityAssessment || (ServerVulnerabilityAssessment = {}));
exports.ServerVulnerabilityAssessment = ServerVulnerabilityAssessment;
var SqlVulnerabilityAssessmentRuleBaseline;
(function (SqlVulnerabilityAssessmentRuleBaseline) {
    /**
     * Disallow the use of non-stable (Preview) Azure resouces (sql.v20230201preview.SqlVulnerabilityAssessmentRuleBaseline).
     *
     * @severity medium
     * @frameworks none
     * @topics api, preview, unstable
     * @link https://learn.microsoft.com/en-us/rest/api/azure/
     */
    SqlVulnerabilityAssessmentRuleBaseline.disallowPreviewResource = compliance_policy_manager_1.policyManager.registerPolicy({
        resourceValidationPolicy: {
            name: "azurenative-sql-v20230201preview-sqlvulnerabilityassessmentrulebaseline-disallow-preview-resource",
            description: "Disallow the use of non-stable (Preview) Azure resouces (sql.v20230201preview.SqlVulnerabilityAssessmentRuleBaseline).",
            configSchema: compliance_policy_manager_1.policyManager.policyConfigSchema,
            enforcementLevel: "advisory",
            validateResource: (0, policy_1.validateResourceOfType)(v20230201preview_52.SqlVulnerabilityAssessmentRuleBaseline, (_, args, reportViolation) => {
                if (!compliance_policy_manager_1.policyManager.shouldEvalPolicy(args)) {
                    return;
                }
                reportViolation("Azure SqlVulnerabilityAssessmentRuleBaseline shouldn't use an unstable API (sql.v20230201preview.SqlVulnerabilityAssessmentRuleBaseline). A compatible replacement can be found at 'sql.SqlVulnerabilityAssessmentRuleBaseline'.");
            }),
        },
        vendors: ["azure"],
        services: ["sql"],
        severity: "medium",
        topics: ["api", "unstable", "preview"],
    });
})(SqlVulnerabilityAssessmentRuleBaseline || (SqlVulnerabilityAssessmentRuleBaseline = {}));
exports.SqlVulnerabilityAssessmentRuleBaseline = SqlVulnerabilityAssessmentRuleBaseline;
var SqlVulnerabilityAssessmentsSetting;
(function (SqlVulnerabilityAssessmentsSetting) {
    /**
     * Disallow the use of non-stable (Preview) Azure resouces (sql.v20230201preview.SqlVulnerabilityAssessmentsSetting).
     *
     * @severity medium
     * @frameworks none
     * @topics api, preview, unstable
     * @link https://learn.microsoft.com/en-us/rest/api/azure/
     */
    SqlVulnerabilityAssessmentsSetting.disallowPreviewResource = compliance_policy_manager_1.policyManager.registerPolicy({
        resourceValidationPolicy: {
            name: "azurenative-sql-v20230201preview-sqlvulnerabilityassessmentssetting-disallow-preview-resource",
            description: "Disallow the use of non-stable (Preview) Azure resouces (sql.v20230201preview.SqlVulnerabilityAssessmentsSetting).",
            configSchema: compliance_policy_manager_1.policyManager.policyConfigSchema,
            enforcementLevel: "advisory",
            validateResource: (0, policy_1.validateResourceOfType)(v20230201preview_53.SqlVulnerabilityAssessmentsSetting, (_, args, reportViolation) => {
                if (!compliance_policy_manager_1.policyManager.shouldEvalPolicy(args)) {
                    return;
                }
                reportViolation("Azure SqlVulnerabilityAssessmentsSetting shouldn't use an unstable API (sql.v20230201preview.SqlVulnerabilityAssessmentsSetting). A compatible replacement can be found at 'sql.SqlVulnerabilityAssessmentsSetting'.");
            }),
        },
        vendors: ["azure"],
        services: ["sql"],
        severity: "medium",
        topics: ["api", "unstable", "preview"],
    });
})(SqlVulnerabilityAssessmentsSetting || (SqlVulnerabilityAssessmentsSetting = {}));
exports.SqlVulnerabilityAssessmentsSetting = SqlVulnerabilityAssessmentsSetting;
var StartStopManagedInstanceSchedule;
(function (StartStopManagedInstanceSchedule) {
    /**
     * Disallow the use of non-stable (Preview) Azure resouces (sql.v20230201preview.StartStopManagedInstanceSchedule).
     *
     * @severity medium
     * @frameworks none
     * @topics api, preview, unstable
     * @link https://learn.microsoft.com/en-us/rest/api/azure/
     */
    StartStopManagedInstanceSchedule.disallowPreviewResource = compliance_policy_manager_1.policyManager.registerPolicy({
        resourceValidationPolicy: {
            name: "azurenative-sql-v20230201preview-startstopmanagedinstanceschedule-disallow-preview-resource",
            description: "Disallow the use of non-stable (Preview) Azure resouces (sql.v20230201preview.StartStopManagedInstanceSchedule).",
            configSchema: compliance_policy_manager_1.policyManager.policyConfigSchema,
            enforcementLevel: "advisory",
            validateResource: (0, policy_1.validateResourceOfType)(v20230201preview_54.StartStopManagedInstanceSchedule, (_, args, reportViolation) => {
                if (!compliance_policy_manager_1.policyManager.shouldEvalPolicy(args)) {
                    return;
                }
                reportViolation("Azure StartStopManagedInstanceSchedule shouldn't use an unstable API (sql.v20230201preview.StartStopManagedInstanceSchedule). A compatible replacement can be found at 'sql.StartStopManagedInstanceSchedule'.");
            }),
        },
        vendors: ["azure"],
        services: ["sql"],
        severity: "medium",
        topics: ["api", "unstable", "preview"],
    });
})(StartStopManagedInstanceSchedule || (StartStopManagedInstanceSchedule = {}));
exports.StartStopManagedInstanceSchedule = StartStopManagedInstanceSchedule;
var SyncAgent;
(function (SyncAgent) {
    /**
     * Disallow the use of non-stable (Preview) Azure resouces (sql.v20230201preview.SyncAgent).
     *
     * @severity medium
     * @frameworks none
     * @topics api, preview, unstable
     * @link https://learn.microsoft.com/en-us/rest/api/azure/
     */
    SyncAgent.disallowPreviewResource = compliance_policy_manager_1.policyManager.registerPolicy({
        resourceValidationPolicy: {
            name: "azurenative-sql-v20230201preview-syncagent-disallow-preview-resource",
            description: "Disallow the use of non-stable (Preview) Azure resouces (sql.v20230201preview.SyncAgent).",
            configSchema: compliance_policy_manager_1.policyManager.policyConfigSchema,
            enforcementLevel: "advisory",
            validateResource: (0, policy_1.validateResourceOfType)(v20230201preview_55.SyncAgent, (_, args, reportViolation) => {
                if (!compliance_policy_manager_1.policyManager.shouldEvalPolicy(args)) {
                    return;
                }
                reportViolation("Azure SyncAgent shouldn't use an unstable API (sql.v20230201preview.SyncAgent). A compatible replacement can be found at 'sql.SyncAgent'.");
            }),
        },
        vendors: ["azure"],
        services: ["sql"],
        severity: "medium",
        topics: ["api", "unstable", "preview"],
    });
})(SyncAgent || (SyncAgent = {}));
exports.SyncAgent = SyncAgent;
var SyncGroup;
(function (SyncGroup) {
    /**
     * Disallow the use of non-stable (Preview) Azure resouces (sql.v20230201preview.SyncGroup).
     *
     * @severity medium
     * @frameworks none
     * @topics api, preview, unstable
     * @link https://learn.microsoft.com/en-us/rest/api/azure/
     */
    SyncGroup.disallowPreviewResource = compliance_policy_manager_1.policyManager.registerPolicy({
        resourceValidationPolicy: {
            name: "azurenative-sql-v20230201preview-syncgroup-disallow-preview-resource",
            description: "Disallow the use of non-stable (Preview) Azure resouces (sql.v20230201preview.SyncGroup).",
            configSchema: compliance_policy_manager_1.policyManager.policyConfigSchema,
            enforcementLevel: "advisory",
            validateResource: (0, policy_1.validateResourceOfType)(v20230201preview_56.SyncGroup, (_, args, reportViolation) => {
                if (!compliance_policy_manager_1.policyManager.shouldEvalPolicy(args)) {
                    return;
                }
                reportViolation("Azure SyncGroup shouldn't use an unstable API (sql.v20230201preview.SyncGroup). A compatible replacement can be found at 'sql.SyncGroup'.");
            }),
        },
        vendors: ["azure"],
        services: ["sql"],
        severity: "medium",
        topics: ["api", "unstable", "preview"],
    });
})(SyncGroup || (SyncGroup = {}));
exports.SyncGroup = SyncGroup;
var SyncMember;
(function (SyncMember) {
    /**
     * Disallow the use of non-stable (Preview) Azure resouces (sql.v20230201preview.SyncMember).
     *
     * @severity medium
     * @frameworks none
     * @topics api, preview, unstable
     * @link https://learn.microsoft.com/en-us/rest/api/azure/
     */
    SyncMember.disallowPreviewResource = compliance_policy_manager_1.policyManager.registerPolicy({
        resourceValidationPolicy: {
            name: "azurenative-sql-v20230201preview-syncmember-disallow-preview-resource",
            description: "Disallow the use of non-stable (Preview) Azure resouces (sql.v20230201preview.SyncMember).",
            configSchema: compliance_policy_manager_1.policyManager.policyConfigSchema,
            enforcementLevel: "advisory",
            validateResource: (0, policy_1.validateResourceOfType)(v20230201preview_57.SyncMember, (_, args, reportViolation) => {
                if (!compliance_policy_manager_1.policyManager.shouldEvalPolicy(args)) {
                    return;
                }
                reportViolation("Azure SyncMember shouldn't use an unstable API (sql.v20230201preview.SyncMember). A compatible replacement can be found at 'sql.SyncMember'.");
            }),
        },
        vendors: ["azure"],
        services: ["sql"],
        severity: "medium",
        topics: ["api", "unstable", "preview"],
    });
})(SyncMember || (SyncMember = {}));
exports.SyncMember = SyncMember;
var TransparentDataEncryption;
(function (TransparentDataEncryption) {
    /**
     * Disallow the use of non-stable (Preview) Azure resouces (sql.v20230201preview.TransparentDataEncryption).
     *
     * @severity medium
     * @frameworks none
     * @topics api, preview, unstable
     * @link https://learn.microsoft.com/en-us/rest/api/azure/
     */
    TransparentDataEncryption.disallowPreviewResource = compliance_policy_manager_1.policyManager.registerPolicy({
        resourceValidationPolicy: {
            name: "azurenative-sql-v20230201preview-transparentdataencryption-disallow-preview-resource",
            description: "Disallow the use of non-stable (Preview) Azure resouces (sql.v20230201preview.TransparentDataEncryption).",
            configSchema: compliance_policy_manager_1.policyManager.policyConfigSchema,
            enforcementLevel: "advisory",
            validateResource: (0, policy_1.validateResourceOfType)(v20230201preview_58.TransparentDataEncryption, (_, args, reportViolation) => {
                if (!compliance_policy_manager_1.policyManager.shouldEvalPolicy(args)) {
                    return;
                }
                reportViolation("Azure TransparentDataEncryption shouldn't use an unstable API (sql.v20230201preview.TransparentDataEncryption). A compatible replacement can be found at 'sql.TransparentDataEncryption'.");
            }),
        },
        vendors: ["azure"],
        services: ["sql"],
        severity: "medium",
        topics: ["api", "unstable", "preview"],
    });
})(TransparentDataEncryption || (TransparentDataEncryption = {}));
exports.TransparentDataEncryption = TransparentDataEncryption;
var VirtualNetworkRule;
(function (VirtualNetworkRule) {
    /**
     * Disallow the use of non-stable (Preview) Azure resouces (sql.v20230201preview.VirtualNetworkRule).
     *
     * @severity medium
     * @frameworks none
     * @topics api, preview, unstable
     * @link https://learn.microsoft.com/en-us/rest/api/azure/
     */
    VirtualNetworkRule.disallowPreviewResource = compliance_policy_manager_1.policyManager.registerPolicy({
        resourceValidationPolicy: {
            name: "azurenative-sql-v20230201preview-virtualnetworkrule-disallow-preview-resource",
            description: "Disallow the use of non-stable (Preview) Azure resouces (sql.v20230201preview.VirtualNetworkRule).",
            configSchema: compliance_policy_manager_1.policyManager.policyConfigSchema,
            enforcementLevel: "advisory",
            validateResource: (0, policy_1.validateResourceOfType)(v20230201preview_59.VirtualNetworkRule, (_, args, reportViolation) => {
                if (!compliance_policy_manager_1.policyManager.shouldEvalPolicy(args)) {
                    return;
                }
                reportViolation("Azure VirtualNetworkRule shouldn't use an unstable API (sql.v20230201preview.VirtualNetworkRule). A compatible replacement can be found at 'sql.VirtualNetworkRule'.");
            }),
        },
        vendors: ["azure"],
        services: ["sql"],
        severity: "medium",
        topics: ["api", "unstable", "preview"],
    });
})(VirtualNetworkRule || (VirtualNetworkRule = {}));
exports.VirtualNetworkRule = VirtualNetworkRule;
var WorkloadClassifier;
(function (WorkloadClassifier) {
    /**
     * Disallow the use of non-stable (Preview) Azure resouces (sql.v20230201preview.WorkloadClassifier).
     *
     * @severity medium
     * @frameworks none
     * @topics api, preview, unstable
     * @link https://learn.microsoft.com/en-us/rest/api/azure/
     */
    WorkloadClassifier.disallowPreviewResource = compliance_policy_manager_1.policyManager.registerPolicy({
        resourceValidationPolicy: {
            name: "azurenative-sql-v20230201preview-workloadclassifier-disallow-preview-resource",
            description: "Disallow the use of non-stable (Preview) Azure resouces (sql.v20230201preview.WorkloadClassifier).",
            configSchema: compliance_policy_manager_1.policyManager.policyConfigSchema,
            enforcementLevel: "advisory",
            validateResource: (0, policy_1.validateResourceOfType)(v20230201preview_60.WorkloadClassifier, (_, args, reportViolation) => {
                if (!compliance_policy_manager_1.policyManager.shouldEvalPolicy(args)) {
                    return;
                }
                reportViolation("Azure WorkloadClassifier shouldn't use an unstable API (sql.v20230201preview.WorkloadClassifier). A compatible replacement can be found at 'sql.WorkloadClassifier'.");
            }),
        },
        vendors: ["azure"],
        services: ["sql"],
        severity: "medium",
        topics: ["api", "unstable", "preview"],
    });
})(WorkloadClassifier || (WorkloadClassifier = {}));
exports.WorkloadClassifier = WorkloadClassifier;
var WorkloadGroup;
(function (WorkloadGroup) {
    /**
     * Disallow the use of non-stable (Preview) Azure resouces (sql.v20230201preview.WorkloadGroup).
     *
     * @severity medium
     * @frameworks none
     * @topics api, preview, unstable
     * @link https://learn.microsoft.com/en-us/rest/api/azure/
     */
    WorkloadGroup.disallowPreviewResource = compliance_policy_manager_1.policyManager.registerPolicy({
        resourceValidationPolicy: {
            name: "azurenative-sql-v20230201preview-workloadgroup-disallow-preview-resource",
            description: "Disallow the use of non-stable (Preview) Azure resouces (sql.v20230201preview.WorkloadGroup).",
            configSchema: compliance_policy_manager_1.policyManager.policyConfigSchema,
            enforcementLevel: "advisory",
            validateResource: (0, policy_1.validateResourceOfType)(v20230201preview_61.WorkloadGroup, (_, args, reportViolation) => {
                if (!compliance_policy_manager_1.policyManager.shouldEvalPolicy(args)) {
                    return;
                }
                reportViolation("Azure WorkloadGroup shouldn't use an unstable API (sql.v20230201preview.WorkloadGroup). A compatible replacement can be found at 'sql.WorkloadGroup'.");
            }),
        },
        vendors: ["azure"],
        services: ["sql"],
        severity: "medium",
        topics: ["api", "unstable", "preview"],
    });
})(WorkloadGroup || (WorkloadGroup = {}));
exports.WorkloadGroup = WorkloadGroup;
