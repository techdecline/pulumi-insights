"use strict";
// Copyright 2016-2024, Pulumi Corporation.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//
// ------------------------------- WARNING -------------------------------------
// This file was programmatically generated. Do not edit unless you know what
// you're doing.
// ------------------------------- WARNING -------------------------------------
Object.defineProperty(exports, "__esModule", { value: true });
exports.Webhook = exports.Token = exports.ScopeMap = exports.Replication = exports.Registry = exports.PrivateEndpointConnection = exports.PipelineRun = exports.ImportPipeline = exports.ExportPipeline = exports.CredentialSet = exports.ConnectedRegistry = exports.CacheRule = exports.ArchiveVersion = exports.Archife = void 0;
const policy_1 = require("@pulumi/policy");
const compliance_policy_manager_1 = require("@pulumi/compliance-policy-manager");
const v20241101preview_1 = require("@pulumi/azure-native/containerregistry/v20241101preview");
const v20241101preview_2 = require("@pulumi/azure-native/containerregistry/v20241101preview");
const v20241101preview_3 = require("@pulumi/azure-native/containerregistry/v20241101preview");
const v20241101preview_4 = require("@pulumi/azure-native/containerregistry/v20241101preview");
const v20241101preview_5 = require("@pulumi/azure-native/containerregistry/v20241101preview");
const v20241101preview_6 = require("@pulumi/azure-native/containerregistry/v20241101preview");
const v20241101preview_7 = require("@pulumi/azure-native/containerregistry/v20241101preview");
const v20241101preview_8 = require("@pulumi/azure-native/containerregistry/v20241101preview");
const v20241101preview_9 = require("@pulumi/azure-native/containerregistry/v20241101preview");
const v20241101preview_10 = require("@pulumi/azure-native/containerregistry/v20241101preview");
const v20241101preview_11 = require("@pulumi/azure-native/containerregistry/v20241101preview");
const v20241101preview_12 = require("@pulumi/azure-native/containerregistry/v20241101preview");
const v20241101preview_13 = require("@pulumi/azure-native/containerregistry/v20241101preview");
const v20241101preview_14 = require("@pulumi/azure-native/containerregistry/v20241101preview");
var Archife;
(function (Archife) {
    /**
     * Disallow the use of non-stable (Preview) Azure resouces (containerregistry.v20241101preview.Archife).
     *
     * @severity medium
     * @frameworks none
     * @topics api, preview, unstable
     * @link https://learn.microsoft.com/en-us/rest/api/azure/
     */
    Archife.disallowPreviewResource = compliance_policy_manager_1.policyManager.registerPolicy({
        resourceValidationPolicy: {
            name: "azurenative-containerregistry-v20241101preview-archife-disallow-preview-resource",
            description: "Disallow the use of non-stable (Preview) Azure resouces (containerregistry.v20241101preview.Archife).",
            configSchema: compliance_policy_manager_1.policyManager.policyConfigSchema,
            enforcementLevel: "advisory",
            validateResource: (0, policy_1.validateResourceOfType)(v20241101preview_1.Archife, (_, args, reportViolation) => {
                if (!compliance_policy_manager_1.policyManager.shouldEvalPolicy(args)) {
                    return;
                }
                reportViolation("Azure Archife shouldn't use an unstable API (containerregistry.v20241101preview.Archife). A compatible replacement can be found at 'containerregistry.Archife'.");
            }),
        },
        vendors: ["azure"],
        services: ["containerregistry"],
        severity: "medium",
        topics: ["api", "unstable", "preview"],
    });
})(Archife || (Archife = {}));
exports.Archife = Archife;
var ArchiveVersion;
(function (ArchiveVersion) {
    /**
     * Disallow the use of non-stable (Preview) Azure resouces (containerregistry.v20241101preview.ArchiveVersion).
     *
     * @severity medium
     * @frameworks none
     * @topics api, preview, unstable
     * @link https://learn.microsoft.com/en-us/rest/api/azure/
     */
    ArchiveVersion.disallowPreviewResource = compliance_policy_manager_1.policyManager.registerPolicy({
        resourceValidationPolicy: {
            name: "azurenative-containerregistry-v20241101preview-archiveversion-disallow-preview-resource",
            description: "Disallow the use of non-stable (Preview) Azure resouces (containerregistry.v20241101preview.ArchiveVersion).",
            configSchema: compliance_policy_manager_1.policyManager.policyConfigSchema,
            enforcementLevel: "advisory",
            validateResource: (0, policy_1.validateResourceOfType)(v20241101preview_2.ArchiveVersion, (_, args, reportViolation) => {
                if (!compliance_policy_manager_1.policyManager.shouldEvalPolicy(args)) {
                    return;
                }
                reportViolation("Azure ArchiveVersion shouldn't use an unstable API (containerregistry.v20241101preview.ArchiveVersion). A compatible replacement can be found at 'containerregistry.ArchiveVersion'.");
            }),
        },
        vendors: ["azure"],
        services: ["containerregistry"],
        severity: "medium",
        topics: ["api", "unstable", "preview"],
    });
})(ArchiveVersion || (ArchiveVersion = {}));
exports.ArchiveVersion = ArchiveVersion;
var CacheRule;
(function (CacheRule) {
    /**
     * Disallow the use of non-stable (Preview) Azure resouces (containerregistry.v20241101preview.CacheRule).
     *
     * @severity medium
     * @frameworks none
     * @topics api, preview, unstable
     * @link https://learn.microsoft.com/en-us/rest/api/azure/
     */
    CacheRule.disallowPreviewResource = compliance_policy_manager_1.policyManager.registerPolicy({
        resourceValidationPolicy: {
            name: "azurenative-containerregistry-v20241101preview-cacherule-disallow-preview-resource",
            description: "Disallow the use of non-stable (Preview) Azure resouces (containerregistry.v20241101preview.CacheRule).",
            configSchema: compliance_policy_manager_1.policyManager.policyConfigSchema,
            enforcementLevel: "advisory",
            validateResource: (0, policy_1.validateResourceOfType)(v20241101preview_3.CacheRule, (_, args, reportViolation) => {
                if (!compliance_policy_manager_1.policyManager.shouldEvalPolicy(args)) {
                    return;
                }
                reportViolation("Azure CacheRule shouldn't use an unstable API (containerregistry.v20241101preview.CacheRule). A compatible replacement can be found at 'containerregistry.CacheRule'.");
            }),
        },
        vendors: ["azure"],
        services: ["containerregistry"],
        severity: "medium",
        topics: ["api", "unstable", "preview"],
    });
})(CacheRule || (CacheRule = {}));
exports.CacheRule = CacheRule;
var ConnectedRegistry;
(function (ConnectedRegistry) {
    /**
     * Disallow the use of non-stable (Preview) Azure resouces (containerregistry.v20241101preview.ConnectedRegistry).
     *
     * @severity medium
     * @frameworks none
     * @topics api, preview, unstable
     * @link https://learn.microsoft.com/en-us/rest/api/azure/
     */
    ConnectedRegistry.disallowPreviewResource = compliance_policy_manager_1.policyManager.registerPolicy({
        resourceValidationPolicy: {
            name: "azurenative-containerregistry-v20241101preview-connectedregistry-disallow-preview-resource",
            description: "Disallow the use of non-stable (Preview) Azure resouces (containerregistry.v20241101preview.ConnectedRegistry).",
            configSchema: compliance_policy_manager_1.policyManager.policyConfigSchema,
            enforcementLevel: "advisory",
            validateResource: (0, policy_1.validateResourceOfType)(v20241101preview_4.ConnectedRegistry, (_, args, reportViolation) => {
                if (!compliance_policy_manager_1.policyManager.shouldEvalPolicy(args)) {
                    return;
                }
                reportViolation("Azure ConnectedRegistry shouldn't use an unstable API (containerregistry.v20241101preview.ConnectedRegistry). A compatible replacement can be found at 'containerregistry.ConnectedRegistry'.");
            }),
        },
        vendors: ["azure"],
        services: ["containerregistry"],
        severity: "medium",
        topics: ["api", "unstable", "preview"],
    });
})(ConnectedRegistry || (ConnectedRegistry = {}));
exports.ConnectedRegistry = ConnectedRegistry;
var CredentialSet;
(function (CredentialSet) {
    /**
     * Disallow the use of non-stable (Preview) Azure resouces (containerregistry.v20241101preview.CredentialSet).
     *
     * @severity medium
     * @frameworks none
     * @topics api, preview, unstable
     * @link https://learn.microsoft.com/en-us/rest/api/azure/
     */
    CredentialSet.disallowPreviewResource = compliance_policy_manager_1.policyManager.registerPolicy({
        resourceValidationPolicy: {
            name: "azurenative-containerregistry-v20241101preview-credentialset-disallow-preview-resource",
            description: "Disallow the use of non-stable (Preview) Azure resouces (containerregistry.v20241101preview.CredentialSet).",
            configSchema: compliance_policy_manager_1.policyManager.policyConfigSchema,
            enforcementLevel: "advisory",
            validateResource: (0, policy_1.validateResourceOfType)(v20241101preview_5.CredentialSet, (_, args, reportViolation) => {
                if (!compliance_policy_manager_1.policyManager.shouldEvalPolicy(args)) {
                    return;
                }
                reportViolation("Azure CredentialSet shouldn't use an unstable API (containerregistry.v20241101preview.CredentialSet). A compatible replacement can be found at 'containerregistry.CredentialSet'.");
            }),
        },
        vendors: ["azure"],
        services: ["containerregistry"],
        severity: "medium",
        topics: ["api", "unstable", "preview"],
    });
})(CredentialSet || (CredentialSet = {}));
exports.CredentialSet = CredentialSet;
var ExportPipeline;
(function (ExportPipeline) {
    /**
     * Disallow the use of non-stable (Preview) Azure resouces (containerregistry.v20241101preview.ExportPipeline).
     *
     * @severity medium
     * @frameworks none
     * @topics api, preview, unstable
     * @link https://learn.microsoft.com/en-us/rest/api/azure/
     */
    ExportPipeline.disallowPreviewResource = compliance_policy_manager_1.policyManager.registerPolicy({
        resourceValidationPolicy: {
            name: "azurenative-containerregistry-v20241101preview-exportpipeline-disallow-preview-resource",
            description: "Disallow the use of non-stable (Preview) Azure resouces (containerregistry.v20241101preview.ExportPipeline).",
            configSchema: compliance_policy_manager_1.policyManager.policyConfigSchema,
            enforcementLevel: "advisory",
            validateResource: (0, policy_1.validateResourceOfType)(v20241101preview_6.ExportPipeline, (_, args, reportViolation) => {
                if (!compliance_policy_manager_1.policyManager.shouldEvalPolicy(args)) {
                    return;
                }
                reportViolation("Azure ExportPipeline shouldn't use an unstable API (containerregistry.v20241101preview.ExportPipeline). A compatible replacement can be found at 'containerregistry.ExportPipeline'.");
            }),
        },
        vendors: ["azure"],
        services: ["containerregistry"],
        severity: "medium",
        topics: ["api", "unstable", "preview"],
    });
})(ExportPipeline || (ExportPipeline = {}));
exports.ExportPipeline = ExportPipeline;
var ImportPipeline;
(function (ImportPipeline) {
    /**
     * Disallow the use of non-stable (Preview) Azure resouces (containerregistry.v20241101preview.ImportPipeline).
     *
     * @severity medium
     * @frameworks none
     * @topics api, preview, unstable
     * @link https://learn.microsoft.com/en-us/rest/api/azure/
     */
    ImportPipeline.disallowPreviewResource = compliance_policy_manager_1.policyManager.registerPolicy({
        resourceValidationPolicy: {
            name: "azurenative-containerregistry-v20241101preview-importpipeline-disallow-preview-resource",
            description: "Disallow the use of non-stable (Preview) Azure resouces (containerregistry.v20241101preview.ImportPipeline).",
            configSchema: compliance_policy_manager_1.policyManager.policyConfigSchema,
            enforcementLevel: "advisory",
            validateResource: (0, policy_1.validateResourceOfType)(v20241101preview_7.ImportPipeline, (_, args, reportViolation) => {
                if (!compliance_policy_manager_1.policyManager.shouldEvalPolicy(args)) {
                    return;
                }
                reportViolation("Azure ImportPipeline shouldn't use an unstable API (containerregistry.v20241101preview.ImportPipeline). A compatible replacement can be found at 'containerregistry.ImportPipeline'.");
            }),
        },
        vendors: ["azure"],
        services: ["containerregistry"],
        severity: "medium",
        topics: ["api", "unstable", "preview"],
    });
})(ImportPipeline || (ImportPipeline = {}));
exports.ImportPipeline = ImportPipeline;
var PipelineRun;
(function (PipelineRun) {
    /**
     * Disallow the use of non-stable (Preview) Azure resouces (containerregistry.v20241101preview.PipelineRun).
     *
     * @severity medium
     * @frameworks none
     * @topics api, preview, unstable
     * @link https://learn.microsoft.com/en-us/rest/api/azure/
     */
    PipelineRun.disallowPreviewResource = compliance_policy_manager_1.policyManager.registerPolicy({
        resourceValidationPolicy: {
            name: "azurenative-containerregistry-v20241101preview-pipelinerun-disallow-preview-resource",
            description: "Disallow the use of non-stable (Preview) Azure resouces (containerregistry.v20241101preview.PipelineRun).",
            configSchema: compliance_policy_manager_1.policyManager.policyConfigSchema,
            enforcementLevel: "advisory",
            validateResource: (0, policy_1.validateResourceOfType)(v20241101preview_8.PipelineRun, (_, args, reportViolation) => {
                if (!compliance_policy_manager_1.policyManager.shouldEvalPolicy(args)) {
                    return;
                }
                reportViolation("Azure PipelineRun shouldn't use an unstable API (containerregistry.v20241101preview.PipelineRun). A compatible replacement can be found at 'containerregistry.PipelineRun'.");
            }),
        },
        vendors: ["azure"],
        services: ["containerregistry"],
        severity: "medium",
        topics: ["api", "unstable", "preview"],
    });
})(PipelineRun || (PipelineRun = {}));
exports.PipelineRun = PipelineRun;
var PrivateEndpointConnection;
(function (PrivateEndpointConnection) {
    /**
     * Disallow the use of non-stable (Preview) Azure resouces (containerregistry.v20241101preview.PrivateEndpointConnection).
     *
     * @severity medium
     * @frameworks none
     * @topics api, preview, unstable
     * @link https://learn.microsoft.com/en-us/rest/api/azure/
     */
    PrivateEndpointConnection.disallowPreviewResource = compliance_policy_manager_1.policyManager.registerPolicy({
        resourceValidationPolicy: {
            name: "azurenative-containerregistry-v20241101preview-privateendpointconnection-disallow-preview-resource",
            description: "Disallow the use of non-stable (Preview) Azure resouces (containerregistry.v20241101preview.PrivateEndpointConnection).",
            configSchema: compliance_policy_manager_1.policyManager.policyConfigSchema,
            enforcementLevel: "advisory",
            validateResource: (0, policy_1.validateResourceOfType)(v20241101preview_9.PrivateEndpointConnection, (_, args, reportViolation) => {
                if (!compliance_policy_manager_1.policyManager.shouldEvalPolicy(args)) {
                    return;
                }
                reportViolation("Azure PrivateEndpointConnection shouldn't use an unstable API (containerregistry.v20241101preview.PrivateEndpointConnection). A compatible replacement can be found at 'containerregistry.PrivateEndpointConnection'.");
            }),
        },
        vendors: ["azure"],
        services: ["containerregistry"],
        severity: "medium",
        topics: ["api", "unstable", "preview"],
    });
})(PrivateEndpointConnection || (PrivateEndpointConnection = {}));
exports.PrivateEndpointConnection = PrivateEndpointConnection;
var Registry;
(function (Registry) {
    /**
     * Disallow the use of non-stable (Preview) Azure resouces (containerregistry.v20241101preview.Registry).
     *
     * @severity medium
     * @frameworks none
     * @topics api, preview, unstable
     * @link https://learn.microsoft.com/en-us/rest/api/azure/
     */
    Registry.disallowPreviewResource = compliance_policy_manager_1.policyManager.registerPolicy({
        resourceValidationPolicy: {
            name: "azurenative-containerregistry-v20241101preview-registry-disallow-preview-resource",
            description: "Disallow the use of non-stable (Preview) Azure resouces (containerregistry.v20241101preview.Registry).",
            configSchema: compliance_policy_manager_1.policyManager.policyConfigSchema,
            enforcementLevel: "advisory",
            validateResource: (0, policy_1.validateResourceOfType)(v20241101preview_10.Registry, (_, args, reportViolation) => {
                if (!compliance_policy_manager_1.policyManager.shouldEvalPolicy(args)) {
                    return;
                }
                reportViolation("Azure Registry shouldn't use an unstable API (containerregistry.v20241101preview.Registry). A compatible replacement can be found at 'containerregistry.Registry'.");
            }),
        },
        vendors: ["azure"],
        services: ["containerregistry"],
        severity: "medium",
        topics: ["api", "unstable", "preview"],
    });
})(Registry || (Registry = {}));
exports.Registry = Registry;
var Replication;
(function (Replication) {
    /**
     * Disallow the use of non-stable (Preview) Azure resouces (containerregistry.v20241101preview.Replication).
     *
     * @severity medium
     * @frameworks none
     * @topics api, preview, unstable
     * @link https://learn.microsoft.com/en-us/rest/api/azure/
     */
    Replication.disallowPreviewResource = compliance_policy_manager_1.policyManager.registerPolicy({
        resourceValidationPolicy: {
            name: "azurenative-containerregistry-v20241101preview-replication-disallow-preview-resource",
            description: "Disallow the use of non-stable (Preview) Azure resouces (containerregistry.v20241101preview.Replication).",
            configSchema: compliance_policy_manager_1.policyManager.policyConfigSchema,
            enforcementLevel: "advisory",
            validateResource: (0, policy_1.validateResourceOfType)(v20241101preview_11.Replication, (_, args, reportViolation) => {
                if (!compliance_policy_manager_1.policyManager.shouldEvalPolicy(args)) {
                    return;
                }
                reportViolation("Azure Replication shouldn't use an unstable API (containerregistry.v20241101preview.Replication). A compatible replacement can be found at 'containerregistry.Replication'.");
            }),
        },
        vendors: ["azure"],
        services: ["containerregistry"],
        severity: "medium",
        topics: ["api", "unstable", "preview"],
    });
})(Replication || (Replication = {}));
exports.Replication = Replication;
var ScopeMap;
(function (ScopeMap) {
    /**
     * Disallow the use of non-stable (Preview) Azure resouces (containerregistry.v20241101preview.ScopeMap).
     *
     * @severity medium
     * @frameworks none
     * @topics api, preview, unstable
     * @link https://learn.microsoft.com/en-us/rest/api/azure/
     */
    ScopeMap.disallowPreviewResource = compliance_policy_manager_1.policyManager.registerPolicy({
        resourceValidationPolicy: {
            name: "azurenative-containerregistry-v20241101preview-scopemap-disallow-preview-resource",
            description: "Disallow the use of non-stable (Preview) Azure resouces (containerregistry.v20241101preview.ScopeMap).",
            configSchema: compliance_policy_manager_1.policyManager.policyConfigSchema,
            enforcementLevel: "advisory",
            validateResource: (0, policy_1.validateResourceOfType)(v20241101preview_12.ScopeMap, (_, args, reportViolation) => {
                if (!compliance_policy_manager_1.policyManager.shouldEvalPolicy(args)) {
                    return;
                }
                reportViolation("Azure ScopeMap shouldn't use an unstable API (containerregistry.v20241101preview.ScopeMap). A compatible replacement can be found at 'containerregistry.ScopeMap'.");
            }),
        },
        vendors: ["azure"],
        services: ["containerregistry"],
        severity: "medium",
        topics: ["api", "unstable", "preview"],
    });
})(ScopeMap || (ScopeMap = {}));
exports.ScopeMap = ScopeMap;
var Token;
(function (Token) {
    /**
     * Disallow the use of non-stable (Preview) Azure resouces (containerregistry.v20241101preview.Token).
     *
     * @severity medium
     * @frameworks none
     * @topics api, preview, unstable
     * @link https://learn.microsoft.com/en-us/rest/api/azure/
     */
    Token.disallowPreviewResource = compliance_policy_manager_1.policyManager.registerPolicy({
        resourceValidationPolicy: {
            name: "azurenative-containerregistry-v20241101preview-token-disallow-preview-resource",
            description: "Disallow the use of non-stable (Preview) Azure resouces (containerregistry.v20241101preview.Token).",
            configSchema: compliance_policy_manager_1.policyManager.policyConfigSchema,
            enforcementLevel: "advisory",
            validateResource: (0, policy_1.validateResourceOfType)(v20241101preview_13.Token, (_, args, reportViolation) => {
                if (!compliance_policy_manager_1.policyManager.shouldEvalPolicy(args)) {
                    return;
                }
                reportViolation("Azure Token shouldn't use an unstable API (containerregistry.v20241101preview.Token). A compatible replacement can be found at 'containerregistry.Token'.");
            }),
        },
        vendors: ["azure"],
        services: ["containerregistry"],
        severity: "medium",
        topics: ["api", "unstable", "preview"],
    });
})(Token || (Token = {}));
exports.Token = Token;
var Webhook;
(function (Webhook) {
    /**
     * Disallow the use of non-stable (Preview) Azure resouces (containerregistry.v20241101preview.Webhook).
     *
     * @severity medium
     * @frameworks none
     * @topics api, preview, unstable
     * @link https://learn.microsoft.com/en-us/rest/api/azure/
     */
    Webhook.disallowPreviewResource = compliance_policy_manager_1.policyManager.registerPolicy({
        resourceValidationPolicy: {
            name: "azurenative-containerregistry-v20241101preview-webhook-disallow-preview-resource",
            description: "Disallow the use of non-stable (Preview) Azure resouces (containerregistry.v20241101preview.Webhook).",
            configSchema: compliance_policy_manager_1.policyManager.policyConfigSchema,
            enforcementLevel: "advisory",
            validateResource: (0, policy_1.validateResourceOfType)(v20241101preview_14.Webhook, (_, args, reportViolation) => {
                if (!compliance_policy_manager_1.policyManager.shouldEvalPolicy(args)) {
                    return;
                }
                reportViolation("Azure Webhook shouldn't use an unstable API (containerregistry.v20241101preview.Webhook). A compatible replacement can be found at 'containerregistry.Webhook'.");
            }),
        },
        vendors: ["azure"],
        services: ["containerregistry"],
        severity: "medium",
        topics: ["api", "unstable", "preview"],
    });
})(Webhook || (Webhook = {}));
exports.Webhook = Webhook;
