"use strict";
// Copyright 2016-2024, Pulumi Corporation.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//
// ------------------------------- WARNING -------------------------------------
// This file was programmatically generated. Do not edit unless you know what
// you're doing.
// ------------------------------- WARNING -------------------------------------
Object.defineProperty(exports, "__esModule", { value: true });
exports.Springbootsite = exports.Springbootserver = exports.Springbootapp = void 0;
const policy_1 = require("@pulumi/policy");
const compliance_policy_manager_1 = require("@pulumi/compliance-policy-manager");
const v20240401preview_1 = require("@pulumi/azure-native/offazurespringboot/v20240401preview");
const v20240401preview_2 = require("@pulumi/azure-native/offazurespringboot/v20240401preview");
const v20240401preview_3 = require("@pulumi/azure-native/offazurespringboot/v20240401preview");
var Springbootapp;
(function (Springbootapp) {
    /**
     * Disallow the use of non-stable (Preview) Azure resouces (offazurespringboot.v20240401preview.Springbootapp).
     *
     * @severity medium
     * @frameworks none
     * @topics api, preview, unstable
     * @link https://learn.microsoft.com/en-us/rest/api/azure/
     */
    Springbootapp.disallowPreviewResource = compliance_policy_manager_1.policyManager.registerPolicy({
        resourceValidationPolicy: {
            name: "azurenative-offazurespringboot-v20240401preview-springbootapp-disallow-preview-resource",
            description: "Disallow the use of non-stable (Preview) Azure resouces (offazurespringboot.v20240401preview.Springbootapp).",
            configSchema: compliance_policy_manager_1.policyManager.policyConfigSchema,
            enforcementLevel: "advisory",
            validateResource: (0, policy_1.validateResourceOfType)(v20240401preview_1.Springbootapp, (_, args, reportViolation) => {
                if (!compliance_policy_manager_1.policyManager.shouldEvalPolicy(args)) {
                    return;
                }
                reportViolation("Azure Springbootapp shouldn't use an unstable API (offazurespringboot.v20240401preview.Springbootapp). A compatible replacement can be found at 'offazurespringboot.Springbootapp'.");
            }),
        },
        vendors: ["azure"],
        services: ["offazurespringboot"],
        severity: "medium",
        topics: ["api", "unstable", "preview"],
    });
})(Springbootapp || (Springbootapp = {}));
exports.Springbootapp = Springbootapp;
var Springbootserver;
(function (Springbootserver) {
    /**
     * Disallow the use of non-stable (Preview) Azure resouces (offazurespringboot.v20240401preview.Springbootserver).
     *
     * @severity medium
     * @frameworks none
     * @topics api, preview, unstable
     * @link https://learn.microsoft.com/en-us/rest/api/azure/
     */
    Springbootserver.disallowPreviewResource = compliance_policy_manager_1.policyManager.registerPolicy({
        resourceValidationPolicy: {
            name: "azurenative-offazurespringboot-v20240401preview-springbootserver-disallow-preview-resource",
            description: "Disallow the use of non-stable (Preview) Azure resouces (offazurespringboot.v20240401preview.Springbootserver).",
            configSchema: compliance_policy_manager_1.policyManager.policyConfigSchema,
            enforcementLevel: "advisory",
            validateResource: (0, policy_1.validateResourceOfType)(v20240401preview_2.Springbootserver, (_, args, reportViolation) => {
                if (!compliance_policy_manager_1.policyManager.shouldEvalPolicy(args)) {
                    return;
                }
                reportViolation("Azure Springbootserver shouldn't use an unstable API (offazurespringboot.v20240401preview.Springbootserver). A compatible replacement can be found at 'offazurespringboot.Springbootserver'.");
            }),
        },
        vendors: ["azure"],
        services: ["offazurespringboot"],
        severity: "medium",
        topics: ["api", "unstable", "preview"],
    });
})(Springbootserver || (Springbootserver = {}));
exports.Springbootserver = Springbootserver;
var Springbootsite;
(function (Springbootsite) {
    /**
     * Disallow the use of non-stable (Preview) Azure resouces (offazurespringboot.v20240401preview.Springbootsite).
     *
     * @severity medium
     * @frameworks none
     * @topics api, preview, unstable
     * @link https://learn.microsoft.com/en-us/rest/api/azure/
     */
    Springbootsite.disallowPreviewResource = compliance_policy_manager_1.policyManager.registerPolicy({
        resourceValidationPolicy: {
            name: "azurenative-offazurespringboot-v20240401preview-springbootsite-disallow-preview-resource",
            description: "Disallow the use of non-stable (Preview) Azure resouces (offazurespringboot.v20240401preview.Springbootsite).",
            configSchema: compliance_policy_manager_1.policyManager.policyConfigSchema,
            enforcementLevel: "advisory",
            validateResource: (0, policy_1.validateResourceOfType)(v20240401preview_3.Springbootsite, (_, args, reportViolation) => {
                if (!compliance_policy_manager_1.policyManager.shouldEvalPolicy(args)) {
                    return;
                }
                reportViolation("Azure Springbootsite shouldn't use an unstable API (offazurespringboot.v20240401preview.Springbootsite). A compatible replacement can be found at 'offazurespringboot.Springbootsite'.");
            }),
        },
        vendors: ["azure"],
        services: ["offazurespringboot"],
        severity: "medium",
        topics: ["api", "unstable", "preview"],
    });
})(Springbootsite || (Springbootsite = {}));
exports.Springbootsite = Springbootsite;
