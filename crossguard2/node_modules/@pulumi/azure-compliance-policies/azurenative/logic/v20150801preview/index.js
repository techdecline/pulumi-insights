"use strict";
// Copyright 2016-2024, Pulumi Corporation.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//
// ------------------------------- WARNING -------------------------------------
// This file was programmatically generated. Do not edit unless you know what
// you're doing.
// ------------------------------- WARNING -------------------------------------
Object.defineProperty(exports, "__esModule", { value: true });
exports.IntegrationAccountSchema = exports.IntegrationAccountPartner = exports.IntegrationAccountMap = exports.IntegrationAccountCertificate = exports.IntegrationAccountAgreement = exports.IntegrationAccount = void 0;
const policy_1 = require("@pulumi/policy");
const compliance_policy_manager_1 = require("@pulumi/compliance-policy-manager");
const v20150801preview_1 = require("@pulumi/azure-native/logic/v20150801preview");
const v20150801preview_2 = require("@pulumi/azure-native/logic/v20150801preview");
const v20150801preview_3 = require("@pulumi/azure-native/logic/v20150801preview");
const v20150801preview_4 = require("@pulumi/azure-native/logic/v20150801preview");
const v20150801preview_5 = require("@pulumi/azure-native/logic/v20150801preview");
const v20150801preview_6 = require("@pulumi/azure-native/logic/v20150801preview");
var IntegrationAccount;
(function (IntegrationAccount) {
    /**
     * Disallow the use of non-stable (Preview) Azure resouces (logic.v20150801preview.IntegrationAccount).
     *
     * @severity medium
     * @frameworks none
     * @topics api, preview, unstable
     * @link https://learn.microsoft.com/en-us/rest/api/azure/
     */
    IntegrationAccount.disallowPreviewResource = compliance_policy_manager_1.policyManager.registerPolicy({
        resourceValidationPolicy: {
            name: "azurenative-logic-v20150801preview-integrationaccount-disallow-preview-resource",
            description: "Disallow the use of non-stable (Preview) Azure resouces (logic.v20150801preview.IntegrationAccount).",
            configSchema: compliance_policy_manager_1.policyManager.policyConfigSchema,
            enforcementLevel: "advisory",
            validateResource: (0, policy_1.validateResourceOfType)(v20150801preview_1.IntegrationAccount, (_, args, reportViolation) => {
                if (!compliance_policy_manager_1.policyManager.shouldEvalPolicy(args)) {
                    return;
                }
                reportViolation("Azure IntegrationAccount shouldn't use an unstable API (logic.v20150801preview.IntegrationAccount). A compatible replacement can be found at 'logic.IntegrationAccount'.");
            }),
        },
        vendors: ["azure"],
        services: ["logic"],
        severity: "medium",
        topics: ["api", "unstable", "preview"],
    });
})(IntegrationAccount || (IntegrationAccount = {}));
exports.IntegrationAccount = IntegrationAccount;
var IntegrationAccountAgreement;
(function (IntegrationAccountAgreement) {
    /**
     * Disallow the use of non-stable (Preview) Azure resouces (logic.v20150801preview.IntegrationAccountAgreement).
     *
     * @severity medium
     * @frameworks none
     * @topics api, preview, unstable
     * @link https://learn.microsoft.com/en-us/rest/api/azure/
     */
    IntegrationAccountAgreement.disallowPreviewResource = compliance_policy_manager_1.policyManager.registerPolicy({
        resourceValidationPolicy: {
            name: "azurenative-logic-v20150801preview-integrationaccountagreement-disallow-preview-resource",
            description: "Disallow the use of non-stable (Preview) Azure resouces (logic.v20150801preview.IntegrationAccountAgreement).",
            configSchema: compliance_policy_manager_1.policyManager.policyConfigSchema,
            enforcementLevel: "advisory",
            validateResource: (0, policy_1.validateResourceOfType)(v20150801preview_2.IntegrationAccountAgreement, (_, args, reportViolation) => {
                if (!compliance_policy_manager_1.policyManager.shouldEvalPolicy(args)) {
                    return;
                }
                reportViolation("Azure IntegrationAccountAgreement shouldn't use an unstable API (logic.v20150801preview.IntegrationAccountAgreement). A compatible replacement can be found at 'logic.IntegrationAccountAgreement'.");
            }),
        },
        vendors: ["azure"],
        services: ["logic"],
        severity: "medium",
        topics: ["api", "unstable", "preview"],
    });
})(IntegrationAccountAgreement || (IntegrationAccountAgreement = {}));
exports.IntegrationAccountAgreement = IntegrationAccountAgreement;
var IntegrationAccountCertificate;
(function (IntegrationAccountCertificate) {
    /**
     * Disallow the use of non-stable (Preview) Azure resouces (logic.v20150801preview.IntegrationAccountCertificate).
     *
     * @severity medium
     * @frameworks none
     * @topics api, preview, unstable
     * @link https://learn.microsoft.com/en-us/rest/api/azure/
     */
    IntegrationAccountCertificate.disallowPreviewResource = compliance_policy_manager_1.policyManager.registerPolicy({
        resourceValidationPolicy: {
            name: "azurenative-logic-v20150801preview-integrationaccountcertificate-disallow-preview-resource",
            description: "Disallow the use of non-stable (Preview) Azure resouces (logic.v20150801preview.IntegrationAccountCertificate).",
            configSchema: compliance_policy_manager_1.policyManager.policyConfigSchema,
            enforcementLevel: "advisory",
            validateResource: (0, policy_1.validateResourceOfType)(v20150801preview_3.IntegrationAccountCertificate, (_, args, reportViolation) => {
                if (!compliance_policy_manager_1.policyManager.shouldEvalPolicy(args)) {
                    return;
                }
                reportViolation("Azure IntegrationAccountCertificate shouldn't use an unstable API (logic.v20150801preview.IntegrationAccountCertificate). A compatible replacement can be found at 'logic.IntegrationAccountCertificate'.");
            }),
        },
        vendors: ["azure"],
        services: ["logic"],
        severity: "medium",
        topics: ["api", "unstable", "preview"],
    });
})(IntegrationAccountCertificate || (IntegrationAccountCertificate = {}));
exports.IntegrationAccountCertificate = IntegrationAccountCertificate;
var IntegrationAccountMap;
(function (IntegrationAccountMap) {
    /**
     * Disallow the use of non-stable (Preview) Azure resouces (logic.v20150801preview.IntegrationAccountMap).
     *
     * @severity medium
     * @frameworks none
     * @topics api, preview, unstable
     * @link https://learn.microsoft.com/en-us/rest/api/azure/
     */
    IntegrationAccountMap.disallowPreviewResource = compliance_policy_manager_1.policyManager.registerPolicy({
        resourceValidationPolicy: {
            name: "azurenative-logic-v20150801preview-integrationaccountmap-disallow-preview-resource",
            description: "Disallow the use of non-stable (Preview) Azure resouces (logic.v20150801preview.IntegrationAccountMap).",
            configSchema: compliance_policy_manager_1.policyManager.policyConfigSchema,
            enforcementLevel: "advisory",
            validateResource: (0, policy_1.validateResourceOfType)(v20150801preview_4.IntegrationAccountMap, (_, args, reportViolation) => {
                if (!compliance_policy_manager_1.policyManager.shouldEvalPolicy(args)) {
                    return;
                }
                reportViolation("Azure IntegrationAccountMap shouldn't use an unstable API (logic.v20150801preview.IntegrationAccountMap). A compatible replacement can be found at 'logic.IntegrationAccountMap'.");
            }),
        },
        vendors: ["azure"],
        services: ["logic"],
        severity: "medium",
        topics: ["api", "unstable", "preview"],
    });
})(IntegrationAccountMap || (IntegrationAccountMap = {}));
exports.IntegrationAccountMap = IntegrationAccountMap;
var IntegrationAccountPartner;
(function (IntegrationAccountPartner) {
    /**
     * Disallow the use of non-stable (Preview) Azure resouces (logic.v20150801preview.IntegrationAccountPartner).
     *
     * @severity medium
     * @frameworks none
     * @topics api, preview, unstable
     * @link https://learn.microsoft.com/en-us/rest/api/azure/
     */
    IntegrationAccountPartner.disallowPreviewResource = compliance_policy_manager_1.policyManager.registerPolicy({
        resourceValidationPolicy: {
            name: "azurenative-logic-v20150801preview-integrationaccountpartner-disallow-preview-resource",
            description: "Disallow the use of non-stable (Preview) Azure resouces (logic.v20150801preview.IntegrationAccountPartner).",
            configSchema: compliance_policy_manager_1.policyManager.policyConfigSchema,
            enforcementLevel: "advisory",
            validateResource: (0, policy_1.validateResourceOfType)(v20150801preview_5.IntegrationAccountPartner, (_, args, reportViolation) => {
                if (!compliance_policy_manager_1.policyManager.shouldEvalPolicy(args)) {
                    return;
                }
                reportViolation("Azure IntegrationAccountPartner shouldn't use an unstable API (logic.v20150801preview.IntegrationAccountPartner). A compatible replacement can be found at 'logic.IntegrationAccountPartner'.");
            }),
        },
        vendors: ["azure"],
        services: ["logic"],
        severity: "medium",
        topics: ["api", "unstable", "preview"],
    });
})(IntegrationAccountPartner || (IntegrationAccountPartner = {}));
exports.IntegrationAccountPartner = IntegrationAccountPartner;
var IntegrationAccountSchema;
(function (IntegrationAccountSchema) {
    /**
     * Disallow the use of non-stable (Preview) Azure resouces (logic.v20150801preview.IntegrationAccountSchema).
     *
     * @severity medium
     * @frameworks none
     * @topics api, preview, unstable
     * @link https://learn.microsoft.com/en-us/rest/api/azure/
     */
    IntegrationAccountSchema.disallowPreviewResource = compliance_policy_manager_1.policyManager.registerPolicy({
        resourceValidationPolicy: {
            name: "azurenative-logic-v20150801preview-integrationaccountschema-disallow-preview-resource",
            description: "Disallow the use of non-stable (Preview) Azure resouces (logic.v20150801preview.IntegrationAccountSchema).",
            configSchema: compliance_policy_manager_1.policyManager.policyConfigSchema,
            enforcementLevel: "advisory",
            validateResource: (0, policy_1.validateResourceOfType)(v20150801preview_6.IntegrationAccountSchema, (_, args, reportViolation) => {
                if (!compliance_policy_manager_1.policyManager.shouldEvalPolicy(args)) {
                    return;
                }
                reportViolation("Azure IntegrationAccountSchema shouldn't use an unstable API (logic.v20150801preview.IntegrationAccountSchema). A compatible replacement can be found at 'logic.IntegrationAccountSchema'.");
            }),
        },
        vendors: ["azure"],
        services: ["logic"],
        severity: "medium",
        topics: ["api", "unstable", "preview"],
    });
})(IntegrationAccountSchema || (IntegrationAccountSchema = {}));
exports.IntegrationAccountSchema = IntegrationAccountSchema;
