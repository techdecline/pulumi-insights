"use strict";
// Copyright 2016-2024, Pulumi Corporation.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//
// ------------------------------- WARNING -------------------------------------
// This file was programmatically generated. Do not edit unless you know what
// you're doing.
// ------------------------------- WARNING -------------------------------------
Object.defineProperty(exports, "__esModule", { value: true });
exports.TagRule = exports.SubAccountTagRule = exports.SubAccount = exports.Monitor = exports.MetricsSourceTagRule = exports.MetricsSource = void 0;
const policy_1 = require("@pulumi/policy");
const compliance_policy_manager_1 = require("@pulumi/compliance-policy-manager");
const v20220101preview_1 = require("@pulumi/azure-native/logz/v20220101preview");
const v20220101preview_2 = require("@pulumi/azure-native/logz/v20220101preview");
const v20220101preview_3 = require("@pulumi/azure-native/logz/v20220101preview");
const v20220101preview_4 = require("@pulumi/azure-native/logz/v20220101preview");
const v20220101preview_5 = require("@pulumi/azure-native/logz/v20220101preview");
const v20220101preview_6 = require("@pulumi/azure-native/logz/v20220101preview");
var MetricsSource;
(function (MetricsSource) {
    /**
     * Disallow the use of non-stable (Preview) Azure resouces (logz.v20220101preview.MetricsSource).
     *
     * @severity medium
     * @frameworks none
     * @topics api, preview, unstable
     * @link https://learn.microsoft.com/en-us/rest/api/azure/
     */
    MetricsSource.disallowPreviewResource = compliance_policy_manager_1.policyManager.registerPolicy({
        resourceValidationPolicy: {
            name: "azurenative-logz-v20220101preview-metricssource-disallow-preview-resource",
            description: "Disallow the use of non-stable (Preview) Azure resouces (logz.v20220101preview.MetricsSource).",
            configSchema: compliance_policy_manager_1.policyManager.policyConfigSchema,
            enforcementLevel: "advisory",
            validateResource: (0, policy_1.validateResourceOfType)(v20220101preview_1.MetricsSource, (_, args, reportViolation) => {
                if (!compliance_policy_manager_1.policyManager.shouldEvalPolicy(args)) {
                    return;
                }
                reportViolation("Azure MetricsSource shouldn't use an unstable API (logz.v20220101preview.MetricsSource). A compatible replacement can be found at 'logz.MetricsSource'.");
            }),
        },
        vendors: ["azure"],
        services: ["logz"],
        severity: "medium",
        topics: ["api", "unstable", "preview"],
    });
})(MetricsSource || (MetricsSource = {}));
exports.MetricsSource = MetricsSource;
var MetricsSourceTagRule;
(function (MetricsSourceTagRule) {
    /**
     * Disallow the use of non-stable (Preview) Azure resouces (logz.v20220101preview.MetricsSourceTagRule).
     *
     * @severity medium
     * @frameworks none
     * @topics api, preview, unstable
     * @link https://learn.microsoft.com/en-us/rest/api/azure/
     */
    MetricsSourceTagRule.disallowPreviewResource = compliance_policy_manager_1.policyManager.registerPolicy({
        resourceValidationPolicy: {
            name: "azurenative-logz-v20220101preview-metricssourcetagrule-disallow-preview-resource",
            description: "Disallow the use of non-stable (Preview) Azure resouces (logz.v20220101preview.MetricsSourceTagRule).",
            configSchema: compliance_policy_manager_1.policyManager.policyConfigSchema,
            enforcementLevel: "advisory",
            validateResource: (0, policy_1.validateResourceOfType)(v20220101preview_2.MetricsSourceTagRule, (_, args, reportViolation) => {
                if (!compliance_policy_manager_1.policyManager.shouldEvalPolicy(args)) {
                    return;
                }
                reportViolation("Azure MetricsSourceTagRule shouldn't use an unstable API (logz.v20220101preview.MetricsSourceTagRule). A compatible replacement can be found at 'logz.MetricsSourceTagRule'.");
            }),
        },
        vendors: ["azure"],
        services: ["logz"],
        severity: "medium",
        topics: ["api", "unstable", "preview"],
    });
})(MetricsSourceTagRule || (MetricsSourceTagRule = {}));
exports.MetricsSourceTagRule = MetricsSourceTagRule;
var Monitor;
(function (Monitor) {
    /**
     * Disallow the use of non-stable (Preview) Azure resouces (logz.v20220101preview.Monitor).
     *
     * @severity medium
     * @frameworks none
     * @topics api, preview, unstable
     * @link https://learn.microsoft.com/en-us/rest/api/azure/
     */
    Monitor.disallowPreviewResource = compliance_policy_manager_1.policyManager.registerPolicy({
        resourceValidationPolicy: {
            name: "azurenative-logz-v20220101preview-monitor-disallow-preview-resource",
            description: "Disallow the use of non-stable (Preview) Azure resouces (logz.v20220101preview.Monitor).",
            configSchema: compliance_policy_manager_1.policyManager.policyConfigSchema,
            enforcementLevel: "advisory",
            validateResource: (0, policy_1.validateResourceOfType)(v20220101preview_3.Monitor, (_, args, reportViolation) => {
                if (!compliance_policy_manager_1.policyManager.shouldEvalPolicy(args)) {
                    return;
                }
                reportViolation("Azure Monitor shouldn't use an unstable API (logz.v20220101preview.Monitor). A compatible replacement can be found at 'logz.Monitor'.");
            }),
        },
        vendors: ["azure"],
        services: ["logz"],
        severity: "medium",
        topics: ["api", "unstable", "preview"],
    });
})(Monitor || (Monitor = {}));
exports.Monitor = Monitor;
var SubAccount;
(function (SubAccount) {
    /**
     * Disallow the use of non-stable (Preview) Azure resouces (logz.v20220101preview.SubAccount).
     *
     * @severity medium
     * @frameworks none
     * @topics api, preview, unstable
     * @link https://learn.microsoft.com/en-us/rest/api/azure/
     */
    SubAccount.disallowPreviewResource = compliance_policy_manager_1.policyManager.registerPolicy({
        resourceValidationPolicy: {
            name: "azurenative-logz-v20220101preview-subaccount-disallow-preview-resource",
            description: "Disallow the use of non-stable (Preview) Azure resouces (logz.v20220101preview.SubAccount).",
            configSchema: compliance_policy_manager_1.policyManager.policyConfigSchema,
            enforcementLevel: "advisory",
            validateResource: (0, policy_1.validateResourceOfType)(v20220101preview_4.SubAccount, (_, args, reportViolation) => {
                if (!compliance_policy_manager_1.policyManager.shouldEvalPolicy(args)) {
                    return;
                }
                reportViolation("Azure SubAccount shouldn't use an unstable API (logz.v20220101preview.SubAccount). A compatible replacement can be found at 'logz.SubAccount'.");
            }),
        },
        vendors: ["azure"],
        services: ["logz"],
        severity: "medium",
        topics: ["api", "unstable", "preview"],
    });
})(SubAccount || (SubAccount = {}));
exports.SubAccount = SubAccount;
var SubAccountTagRule;
(function (SubAccountTagRule) {
    /**
     * Disallow the use of non-stable (Preview) Azure resouces (logz.v20220101preview.SubAccountTagRule).
     *
     * @severity medium
     * @frameworks none
     * @topics api, preview, unstable
     * @link https://learn.microsoft.com/en-us/rest/api/azure/
     */
    SubAccountTagRule.disallowPreviewResource = compliance_policy_manager_1.policyManager.registerPolicy({
        resourceValidationPolicy: {
            name: "azurenative-logz-v20220101preview-subaccounttagrule-disallow-preview-resource",
            description: "Disallow the use of non-stable (Preview) Azure resouces (logz.v20220101preview.SubAccountTagRule).",
            configSchema: compliance_policy_manager_1.policyManager.policyConfigSchema,
            enforcementLevel: "advisory",
            validateResource: (0, policy_1.validateResourceOfType)(v20220101preview_5.SubAccountTagRule, (_, args, reportViolation) => {
                if (!compliance_policy_manager_1.policyManager.shouldEvalPolicy(args)) {
                    return;
                }
                reportViolation("Azure SubAccountTagRule shouldn't use an unstable API (logz.v20220101preview.SubAccountTagRule). A compatible replacement can be found at 'logz.SubAccountTagRule'.");
            }),
        },
        vendors: ["azure"],
        services: ["logz"],
        severity: "medium",
        topics: ["api", "unstable", "preview"],
    });
})(SubAccountTagRule || (SubAccountTagRule = {}));
exports.SubAccountTagRule = SubAccountTagRule;
var TagRule;
(function (TagRule) {
    /**
     * Disallow the use of non-stable (Preview) Azure resouces (logz.v20220101preview.TagRule).
     *
     * @severity medium
     * @frameworks none
     * @topics api, preview, unstable
     * @link https://learn.microsoft.com/en-us/rest/api/azure/
     */
    TagRule.disallowPreviewResource = compliance_policy_manager_1.policyManager.registerPolicy({
        resourceValidationPolicy: {
            name: "azurenative-logz-v20220101preview-tagrule-disallow-preview-resource",
            description: "Disallow the use of non-stable (Preview) Azure resouces (logz.v20220101preview.TagRule).",
            configSchema: compliance_policy_manager_1.policyManager.policyConfigSchema,
            enforcementLevel: "advisory",
            validateResource: (0, policy_1.validateResourceOfType)(v20220101preview_6.TagRule, (_, args, reportViolation) => {
                if (!compliance_policy_manager_1.policyManager.shouldEvalPolicy(args)) {
                    return;
                }
                reportViolation("Azure TagRule shouldn't use an unstable API (logz.v20220101preview.TagRule). A compatible replacement can be found at 'logz.TagRule'.");
            }),
        },
        vendors: ["azure"],
        services: ["logz"],
        severity: "medium",
        topics: ["api", "unstable", "preview"],
    });
})(TagRule || (TagRule = {}));
exports.TagRule = TagRule;
