"use strict";
// Copyright 2016-2024, Pulumi Corporation.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//
// ------------------------------- WARNING -------------------------------------
// This file was programmatically generated. Do not edit unless you know what
// you're doing.
// ------------------------------- WARNING -------------------------------------
Object.defineProperty(exports, "__esModule", { value: true });
exports.VendorSkus = exports.VendorSkuPreview = exports.Vendor = exports.NetworkFunction = exports.Device = void 0;
const policy_1 = require("@pulumi/policy");
const compliance_policy_manager_1 = require("@pulumi/compliance-policy-manager");
const v20220101preview_1 = require("@pulumi/azure-native/hybridnetwork/v20220101preview");
const v20220101preview_2 = require("@pulumi/azure-native/hybridnetwork/v20220101preview");
const v20220101preview_3 = require("@pulumi/azure-native/hybridnetwork/v20220101preview");
const v20220101preview_4 = require("@pulumi/azure-native/hybridnetwork/v20220101preview");
const v20220101preview_5 = require("@pulumi/azure-native/hybridnetwork/v20220101preview");
var Device;
(function (Device) {
    /**
     * Disallow the use of non-stable (Preview) Azure resouces (hybridnetwork.v20220101preview.Device).
     *
     * @severity medium
     * @frameworks none
     * @topics api, preview, unstable
     * @link https://learn.microsoft.com/en-us/rest/api/azure/
     */
    Device.disallowPreviewResource = compliance_policy_manager_1.policyManager.registerPolicy({
        resourceValidationPolicy: {
            name: "azurenative-hybridnetwork-v20220101preview-device-disallow-preview-resource",
            description: "Disallow the use of non-stable (Preview) Azure resouces (hybridnetwork.v20220101preview.Device).",
            configSchema: compliance_policy_manager_1.policyManager.policyConfigSchema,
            enforcementLevel: "advisory",
            validateResource: (0, policy_1.validateResourceOfType)(v20220101preview_1.Device, (_, args, reportViolation) => {
                if (!compliance_policy_manager_1.policyManager.shouldEvalPolicy(args)) {
                    return;
                }
                reportViolation("Azure Device shouldn't use an unstable API (hybridnetwork.v20220101preview.Device). A compatible replacement can be found at 'hybridnetwork.Device'.");
            }),
        },
        vendors: ["azure"],
        services: ["hybridnetwork"],
        severity: "medium",
        topics: ["api", "unstable", "preview"],
    });
})(Device || (Device = {}));
exports.Device = Device;
var NetworkFunction;
(function (NetworkFunction) {
    /**
     * Disallow the use of non-stable (Preview) Azure resouces (hybridnetwork.v20220101preview.NetworkFunction).
     *
     * @severity medium
     * @frameworks none
     * @topics api, preview, unstable
     * @link https://learn.microsoft.com/en-us/rest/api/azure/
     */
    NetworkFunction.disallowPreviewResource = compliance_policy_manager_1.policyManager.registerPolicy({
        resourceValidationPolicy: {
            name: "azurenative-hybridnetwork-v20220101preview-networkfunction-disallow-preview-resource",
            description: "Disallow the use of non-stable (Preview) Azure resouces (hybridnetwork.v20220101preview.NetworkFunction).",
            configSchema: compliance_policy_manager_1.policyManager.policyConfigSchema,
            enforcementLevel: "advisory",
            validateResource: (0, policy_1.validateResourceOfType)(v20220101preview_2.NetworkFunction, (_, args, reportViolation) => {
                if (!compliance_policy_manager_1.policyManager.shouldEvalPolicy(args)) {
                    return;
                }
                reportViolation("Azure NetworkFunction shouldn't use an unstable API (hybridnetwork.v20220101preview.NetworkFunction). A compatible replacement can be found at 'hybridnetwork.NetworkFunction'.");
            }),
        },
        vendors: ["azure"],
        services: ["hybridnetwork"],
        severity: "medium",
        topics: ["api", "unstable", "preview"],
    });
})(NetworkFunction || (NetworkFunction = {}));
exports.NetworkFunction = NetworkFunction;
var Vendor;
(function (Vendor) {
    /**
     * Disallow the use of non-stable (Preview) Azure resouces (hybridnetwork.v20220101preview.Vendor).
     *
     * @severity medium
     * @frameworks none
     * @topics api, preview, unstable
     * @link https://learn.microsoft.com/en-us/rest/api/azure/
     */
    Vendor.disallowPreviewResource = compliance_policy_manager_1.policyManager.registerPolicy({
        resourceValidationPolicy: {
            name: "azurenative-hybridnetwork-v20220101preview-vendor-disallow-preview-resource",
            description: "Disallow the use of non-stable (Preview) Azure resouces (hybridnetwork.v20220101preview.Vendor).",
            configSchema: compliance_policy_manager_1.policyManager.policyConfigSchema,
            enforcementLevel: "advisory",
            validateResource: (0, policy_1.validateResourceOfType)(v20220101preview_3.Vendor, (_, args, reportViolation) => {
                if (!compliance_policy_manager_1.policyManager.shouldEvalPolicy(args)) {
                    return;
                }
                reportViolation("Azure Vendor shouldn't use an unstable API (hybridnetwork.v20220101preview.Vendor). A compatible replacement can be found at 'hybridnetwork.Vendor'.");
            }),
        },
        vendors: ["azure"],
        services: ["hybridnetwork"],
        severity: "medium",
        topics: ["api", "unstable", "preview"],
    });
})(Vendor || (Vendor = {}));
exports.Vendor = Vendor;
var VendorSkuPreview;
(function (VendorSkuPreview) {
    /**
     * Disallow the use of non-stable (Preview) Azure resouces (hybridnetwork.v20220101preview.VendorSkuPreview).
     *
     * @severity medium
     * @frameworks none
     * @topics api, preview, unstable
     * @link https://learn.microsoft.com/en-us/rest/api/azure/
     */
    VendorSkuPreview.disallowPreviewResource = compliance_policy_manager_1.policyManager.registerPolicy({
        resourceValidationPolicy: {
            name: "azurenative-hybridnetwork-v20220101preview-vendorskupreview-disallow-preview-resource",
            description: "Disallow the use of non-stable (Preview) Azure resouces (hybridnetwork.v20220101preview.VendorSkuPreview).",
            configSchema: compliance_policy_manager_1.policyManager.policyConfigSchema,
            enforcementLevel: "advisory",
            validateResource: (0, policy_1.validateResourceOfType)(v20220101preview_4.VendorSkuPreview, (_, args, reportViolation) => {
                if (!compliance_policy_manager_1.policyManager.shouldEvalPolicy(args)) {
                    return;
                }
                reportViolation("Azure VendorSkuPreview shouldn't use an unstable API (hybridnetwork.v20220101preview.VendorSkuPreview). A compatible replacement can be found at 'hybridnetwork.VendorSkuPreview'.");
            }),
        },
        vendors: ["azure"],
        services: ["hybridnetwork"],
        severity: "medium",
        topics: ["api", "unstable", "preview"],
    });
})(VendorSkuPreview || (VendorSkuPreview = {}));
exports.VendorSkuPreview = VendorSkuPreview;
var VendorSkus;
(function (VendorSkus) {
    /**
     * Disallow the use of non-stable (Preview) Azure resouces (hybridnetwork.v20220101preview.VendorSkus).
     *
     * @severity medium
     * @frameworks none
     * @topics api, preview, unstable
     * @link https://learn.microsoft.com/en-us/rest/api/azure/
     */
    VendorSkus.disallowPreviewResource = compliance_policy_manager_1.policyManager.registerPolicy({
        resourceValidationPolicy: {
            name: "azurenative-hybridnetwork-v20220101preview-vendorskus-disallow-preview-resource",
            description: "Disallow the use of non-stable (Preview) Azure resouces (hybridnetwork.v20220101preview.VendorSkus).",
            configSchema: compliance_policy_manager_1.policyManager.policyConfigSchema,
            enforcementLevel: "advisory",
            validateResource: (0, policy_1.validateResourceOfType)(v20220101preview_5.VendorSkus, (_, args, reportViolation) => {
                if (!compliance_policy_manager_1.policyManager.shouldEvalPolicy(args)) {
                    return;
                }
                reportViolation("Azure VendorSkus shouldn't use an unstable API (hybridnetwork.v20220101preview.VendorSkus). A compatible replacement can be found at 'hybridnetwork.VendorSkus'.");
            }),
        },
        vendors: ["azure"],
        services: ["hybridnetwork"],
        severity: "medium",
        topics: ["api", "unstable", "preview"],
    });
})(VendorSkus || (VendorSkus = {}));
exports.VendorSkus = VendorSkus;
