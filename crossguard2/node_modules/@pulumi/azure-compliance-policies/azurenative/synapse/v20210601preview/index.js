"use strict";
// Copyright 2016-2024, Pulumi Corporation.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//
// ------------------------------- WARNING -------------------------------------
// This file was programmatically generated. Do not edit unless you know what
// you're doing.
// ------------------------------- WARNING -------------------------------------
Object.defineProperty(exports, "__esModule", { value: true });
exports.WorkspaceSqlAadAdmin = exports.WorkspaceManagedSqlServerVulnerabilityAssessment = exports.WorkspaceAadAdmin = exports.Workspace = exports.SqlPoolWorkloadGroup = exports.SqlPoolWorkloadClassifier = exports.SqlPoolVulnerabilityAssessmentRuleBaseline = exports.SqlPoolVulnerabilityAssessment = exports.SqlPoolTransparentDataEncryption = exports.SqlPoolSensitivityLabel = exports.SqlPool = exports.ReadWriteDatabase = exports.ReadOnlyFollowingDatabase = exports.PrivateLinkHub = exports.PrivateEndpointConnection = exports.KustoPoolPrincipalAssignment = exports.KustoPoolDatabasePrincipalAssignment = exports.KustoPoolAttachedDatabaseConfiguration = exports.KustoPool = exports.Key = exports.IpFirewallRule = exports.IotHubDataConnection = exports.IntegrationRuntime = exports.EventHubDataConnection = exports.EventGridDataConnection = exports.BigDataPool = void 0;
const policy_1 = require("@pulumi/policy");
const compliance_policy_manager_1 = require("@pulumi/compliance-policy-manager");
const v20210601preview_1 = require("@pulumi/azure-native/synapse/v20210601preview");
const v20210601preview_2 = require("@pulumi/azure-native/synapse/v20210601preview");
const v20210601preview_3 = require("@pulumi/azure-native/synapse/v20210601preview");
const v20210601preview_4 = require("@pulumi/azure-native/synapse/v20210601preview");
const v20210601preview_5 = require("@pulumi/azure-native/synapse/v20210601preview");
const v20210601preview_6 = require("@pulumi/azure-native/synapse/v20210601preview");
const v20210601preview_7 = require("@pulumi/azure-native/synapse/v20210601preview");
const v20210601preview_8 = require("@pulumi/azure-native/synapse/v20210601preview");
const v20210601preview_9 = require("@pulumi/azure-native/synapse/v20210601preview");
const v20210601preview_10 = require("@pulumi/azure-native/synapse/v20210601preview");
const v20210601preview_11 = require("@pulumi/azure-native/synapse/v20210601preview");
const v20210601preview_12 = require("@pulumi/azure-native/synapse/v20210601preview");
const v20210601preview_13 = require("@pulumi/azure-native/synapse/v20210601preview");
const v20210601preview_14 = require("@pulumi/azure-native/synapse/v20210601preview");
const v20210601preview_15 = require("@pulumi/azure-native/synapse/v20210601preview");
const v20210601preview_16 = require("@pulumi/azure-native/synapse/v20210601preview");
const v20210601preview_17 = require("@pulumi/azure-native/synapse/v20210601preview");
const v20210601preview_18 = require("@pulumi/azure-native/synapse/v20210601preview");
const v20210601preview_19 = require("@pulumi/azure-native/synapse/v20210601preview");
const v20210601preview_20 = require("@pulumi/azure-native/synapse/v20210601preview");
const v20210601preview_21 = require("@pulumi/azure-native/synapse/v20210601preview");
const v20210601preview_22 = require("@pulumi/azure-native/synapse/v20210601preview");
const v20210601preview_23 = require("@pulumi/azure-native/synapse/v20210601preview");
const v20210601preview_24 = require("@pulumi/azure-native/synapse/v20210601preview");
const v20210601preview_25 = require("@pulumi/azure-native/synapse/v20210601preview");
const v20210601preview_26 = require("@pulumi/azure-native/synapse/v20210601preview");
var BigDataPool;
(function (BigDataPool) {
    /**
     * Disallow the use of non-stable (Preview) Azure resouces (synapse.v20210601preview.BigDataPool).
     *
     * @severity medium
     * @frameworks none
     * @topics api, preview, unstable
     * @link https://learn.microsoft.com/en-us/rest/api/azure/
     */
    BigDataPool.disallowPreviewResource = compliance_policy_manager_1.policyManager.registerPolicy({
        resourceValidationPolicy: {
            name: "azurenative-synapse-v20210601preview-bigdatapool-disallow-preview-resource",
            description: "Disallow the use of non-stable (Preview) Azure resouces (synapse.v20210601preview.BigDataPool).",
            configSchema: compliance_policy_manager_1.policyManager.policyConfigSchema,
            enforcementLevel: "advisory",
            validateResource: (0, policy_1.validateResourceOfType)(v20210601preview_1.BigDataPool, (_, args, reportViolation) => {
                if (!compliance_policy_manager_1.policyManager.shouldEvalPolicy(args)) {
                    return;
                }
                reportViolation("Azure BigDataPool shouldn't use an unstable API (synapse.v20210601preview.BigDataPool). A compatible replacement can be found at 'synapse.BigDataPool'.");
            }),
        },
        vendors: ["azure"],
        services: ["synapse"],
        severity: "medium",
        topics: ["api", "unstable", "preview"],
    });
})(BigDataPool || (BigDataPool = {}));
exports.BigDataPool = BigDataPool;
var EventGridDataConnection;
(function (EventGridDataConnection) {
    /**
     * Disallow the use of non-stable (Preview) Azure resouces (synapse.v20210601preview.EventGridDataConnection).
     *
     * @severity medium
     * @frameworks none
     * @topics api, preview, unstable
     * @link https://learn.microsoft.com/en-us/rest/api/azure/
     */
    EventGridDataConnection.disallowPreviewResource = compliance_policy_manager_1.policyManager.registerPolicy({
        resourceValidationPolicy: {
            name: "azurenative-synapse-v20210601preview-eventgriddataconnection-disallow-preview-resource",
            description: "Disallow the use of non-stable (Preview) Azure resouces (synapse.v20210601preview.EventGridDataConnection).",
            configSchema: compliance_policy_manager_1.policyManager.policyConfigSchema,
            enforcementLevel: "advisory",
            validateResource: (0, policy_1.validateResourceOfType)(v20210601preview_2.EventGridDataConnection, (_, args, reportViolation) => {
                if (!compliance_policy_manager_1.policyManager.shouldEvalPolicy(args)) {
                    return;
                }
                reportViolation("Azure EventGridDataConnection shouldn't use an unstable API (synapse.v20210601preview.EventGridDataConnection). A compatible replacement can be found at 'synapse.EventGridDataConnection'.");
            }),
        },
        vendors: ["azure"],
        services: ["synapse"],
        severity: "medium",
        topics: ["api", "unstable", "preview"],
    });
})(EventGridDataConnection || (EventGridDataConnection = {}));
exports.EventGridDataConnection = EventGridDataConnection;
var EventHubDataConnection;
(function (EventHubDataConnection) {
    /**
     * Disallow the use of non-stable (Preview) Azure resouces (synapse.v20210601preview.EventHubDataConnection).
     *
     * @severity medium
     * @frameworks none
     * @topics api, preview, unstable
     * @link https://learn.microsoft.com/en-us/rest/api/azure/
     */
    EventHubDataConnection.disallowPreviewResource = compliance_policy_manager_1.policyManager.registerPolicy({
        resourceValidationPolicy: {
            name: "azurenative-synapse-v20210601preview-eventhubdataconnection-disallow-preview-resource",
            description: "Disallow the use of non-stable (Preview) Azure resouces (synapse.v20210601preview.EventHubDataConnection).",
            configSchema: compliance_policy_manager_1.policyManager.policyConfigSchema,
            enforcementLevel: "advisory",
            validateResource: (0, policy_1.validateResourceOfType)(v20210601preview_3.EventHubDataConnection, (_, args, reportViolation) => {
                if (!compliance_policy_manager_1.policyManager.shouldEvalPolicy(args)) {
                    return;
                }
                reportViolation("Azure EventHubDataConnection shouldn't use an unstable API (synapse.v20210601preview.EventHubDataConnection). A compatible replacement can be found at 'synapse.EventHubDataConnection'.");
            }),
        },
        vendors: ["azure"],
        services: ["synapse"],
        severity: "medium",
        topics: ["api", "unstable", "preview"],
    });
})(EventHubDataConnection || (EventHubDataConnection = {}));
exports.EventHubDataConnection = EventHubDataConnection;
var IntegrationRuntime;
(function (IntegrationRuntime) {
    /**
     * Disallow the use of non-stable (Preview) Azure resouces (synapse.v20210601preview.IntegrationRuntime).
     *
     * @severity medium
     * @frameworks none
     * @topics api, preview, unstable
     * @link https://learn.microsoft.com/en-us/rest/api/azure/
     */
    IntegrationRuntime.disallowPreviewResource = compliance_policy_manager_1.policyManager.registerPolicy({
        resourceValidationPolicy: {
            name: "azurenative-synapse-v20210601preview-integrationruntime-disallow-preview-resource",
            description: "Disallow the use of non-stable (Preview) Azure resouces (synapse.v20210601preview.IntegrationRuntime).",
            configSchema: compliance_policy_manager_1.policyManager.policyConfigSchema,
            enforcementLevel: "advisory",
            validateResource: (0, policy_1.validateResourceOfType)(v20210601preview_4.IntegrationRuntime, (_, args, reportViolation) => {
                if (!compliance_policy_manager_1.policyManager.shouldEvalPolicy(args)) {
                    return;
                }
                reportViolation("Azure IntegrationRuntime shouldn't use an unstable API (synapse.v20210601preview.IntegrationRuntime). A compatible replacement can be found at 'synapse.IntegrationRuntime'.");
            }),
        },
        vendors: ["azure"],
        services: ["synapse"],
        severity: "medium",
        topics: ["api", "unstable", "preview"],
    });
})(IntegrationRuntime || (IntegrationRuntime = {}));
exports.IntegrationRuntime = IntegrationRuntime;
var IotHubDataConnection;
(function (IotHubDataConnection) {
    /**
     * Disallow the use of non-stable (Preview) Azure resouces (synapse.v20210601preview.IotHubDataConnection).
     *
     * @severity medium
     * @frameworks none
     * @topics api, preview, unstable
     * @link https://learn.microsoft.com/en-us/rest/api/azure/
     */
    IotHubDataConnection.disallowPreviewResource = compliance_policy_manager_1.policyManager.registerPolicy({
        resourceValidationPolicy: {
            name: "azurenative-synapse-v20210601preview-iothubdataconnection-disallow-preview-resource",
            description: "Disallow the use of non-stable (Preview) Azure resouces (synapse.v20210601preview.IotHubDataConnection).",
            configSchema: compliance_policy_manager_1.policyManager.policyConfigSchema,
            enforcementLevel: "advisory",
            validateResource: (0, policy_1.validateResourceOfType)(v20210601preview_5.IotHubDataConnection, (_, args, reportViolation) => {
                if (!compliance_policy_manager_1.policyManager.shouldEvalPolicy(args)) {
                    return;
                }
                reportViolation("Azure IotHubDataConnection shouldn't use an unstable API (synapse.v20210601preview.IotHubDataConnection). A compatible replacement can be found at 'synapse.IotHubDataConnection'.");
            }),
        },
        vendors: ["azure"],
        services: ["synapse"],
        severity: "medium",
        topics: ["api", "unstable", "preview"],
    });
})(IotHubDataConnection || (IotHubDataConnection = {}));
exports.IotHubDataConnection = IotHubDataConnection;
var IpFirewallRule;
(function (IpFirewallRule) {
    /**
     * Disallow the use of non-stable (Preview) Azure resouces (synapse.v20210601preview.IpFirewallRule).
     *
     * @severity medium
     * @frameworks none
     * @topics api, preview, unstable
     * @link https://learn.microsoft.com/en-us/rest/api/azure/
     */
    IpFirewallRule.disallowPreviewResource = compliance_policy_manager_1.policyManager.registerPolicy({
        resourceValidationPolicy: {
            name: "azurenative-synapse-v20210601preview-ipfirewallrule-disallow-preview-resource",
            description: "Disallow the use of non-stable (Preview) Azure resouces (synapse.v20210601preview.IpFirewallRule).",
            configSchema: compliance_policy_manager_1.policyManager.policyConfigSchema,
            enforcementLevel: "advisory",
            validateResource: (0, policy_1.validateResourceOfType)(v20210601preview_6.IpFirewallRule, (_, args, reportViolation) => {
                if (!compliance_policy_manager_1.policyManager.shouldEvalPolicy(args)) {
                    return;
                }
                reportViolation("Azure IpFirewallRule shouldn't use an unstable API (synapse.v20210601preview.IpFirewallRule). A compatible replacement can be found at 'synapse.IpFirewallRule'.");
            }),
        },
        vendors: ["azure"],
        services: ["synapse"],
        severity: "medium",
        topics: ["api", "unstable", "preview"],
    });
})(IpFirewallRule || (IpFirewallRule = {}));
exports.IpFirewallRule = IpFirewallRule;
var Key;
(function (Key) {
    /**
     * Disallow the use of non-stable (Preview) Azure resouces (synapse.v20210601preview.Key).
     *
     * @severity medium
     * @frameworks none
     * @topics api, preview, unstable
     * @link https://learn.microsoft.com/en-us/rest/api/azure/
     */
    Key.disallowPreviewResource = compliance_policy_manager_1.policyManager.registerPolicy({
        resourceValidationPolicy: {
            name: "azurenative-synapse-v20210601preview-key-disallow-preview-resource",
            description: "Disallow the use of non-stable (Preview) Azure resouces (synapse.v20210601preview.Key).",
            configSchema: compliance_policy_manager_1.policyManager.policyConfigSchema,
            enforcementLevel: "advisory",
            validateResource: (0, policy_1.validateResourceOfType)(v20210601preview_7.Key, (_, args, reportViolation) => {
                if (!compliance_policy_manager_1.policyManager.shouldEvalPolicy(args)) {
                    return;
                }
                reportViolation("Azure Key shouldn't use an unstable API (synapse.v20210601preview.Key). A compatible replacement can be found at 'synapse.Key'.");
            }),
        },
        vendors: ["azure"],
        services: ["synapse"],
        severity: "medium",
        topics: ["api", "unstable", "preview"],
    });
})(Key || (Key = {}));
exports.Key = Key;
var KustoPool;
(function (KustoPool) {
    /**
     * Disallow the use of non-stable (Preview) Azure resouces (synapse.v20210601preview.KustoPool).
     *
     * @severity medium
     * @frameworks none
     * @topics api, preview, unstable
     * @link https://learn.microsoft.com/en-us/rest/api/azure/
     */
    KustoPool.disallowPreviewResource = compliance_policy_manager_1.policyManager.registerPolicy({
        resourceValidationPolicy: {
            name: "azurenative-synapse-v20210601preview-kustopool-disallow-preview-resource",
            description: "Disallow the use of non-stable (Preview) Azure resouces (synapse.v20210601preview.KustoPool).",
            configSchema: compliance_policy_manager_1.policyManager.policyConfigSchema,
            enforcementLevel: "advisory",
            validateResource: (0, policy_1.validateResourceOfType)(v20210601preview_8.KustoPool, (_, args, reportViolation) => {
                if (!compliance_policy_manager_1.policyManager.shouldEvalPolicy(args)) {
                    return;
                }
                reportViolation("Azure KustoPool shouldn't use an unstable API (synapse.v20210601preview.KustoPool). A compatible replacement can be found at 'synapse.KustoPool'.");
            }),
        },
        vendors: ["azure"],
        services: ["synapse"],
        severity: "medium",
        topics: ["api", "unstable", "preview"],
    });
})(KustoPool || (KustoPool = {}));
exports.KustoPool = KustoPool;
var KustoPoolAttachedDatabaseConfiguration;
(function (KustoPoolAttachedDatabaseConfiguration) {
    /**
     * Disallow the use of non-stable (Preview) Azure resouces (synapse.v20210601preview.KustoPoolAttachedDatabaseConfiguration).
     *
     * @severity medium
     * @frameworks none
     * @topics api, preview, unstable
     * @link https://learn.microsoft.com/en-us/rest/api/azure/
     */
    KustoPoolAttachedDatabaseConfiguration.disallowPreviewResource = compliance_policy_manager_1.policyManager.registerPolicy({
        resourceValidationPolicy: {
            name: "azurenative-synapse-v20210601preview-kustopoolattacheddatabaseconfiguration-disallow-preview-resource",
            description: "Disallow the use of non-stable (Preview) Azure resouces (synapse.v20210601preview.KustoPoolAttachedDatabaseConfiguration).",
            configSchema: compliance_policy_manager_1.policyManager.policyConfigSchema,
            enforcementLevel: "advisory",
            validateResource: (0, policy_1.validateResourceOfType)(v20210601preview_9.KustoPoolAttachedDatabaseConfiguration, (_, args, reportViolation) => {
                if (!compliance_policy_manager_1.policyManager.shouldEvalPolicy(args)) {
                    return;
                }
                reportViolation("Azure KustoPoolAttachedDatabaseConfiguration shouldn't use an unstable API (synapse.v20210601preview.KustoPoolAttachedDatabaseConfiguration). A compatible replacement can be found at 'synapse.KustoPoolAttachedDatabaseConfiguration'.");
            }),
        },
        vendors: ["azure"],
        services: ["synapse"],
        severity: "medium",
        topics: ["api", "unstable", "preview"],
    });
})(KustoPoolAttachedDatabaseConfiguration || (KustoPoolAttachedDatabaseConfiguration = {}));
exports.KustoPoolAttachedDatabaseConfiguration = KustoPoolAttachedDatabaseConfiguration;
var KustoPoolDatabasePrincipalAssignment;
(function (KustoPoolDatabasePrincipalAssignment) {
    /**
     * Disallow the use of non-stable (Preview) Azure resouces (synapse.v20210601preview.KustoPoolDatabasePrincipalAssignment).
     *
     * @severity medium
     * @frameworks none
     * @topics api, preview, unstable
     * @link https://learn.microsoft.com/en-us/rest/api/azure/
     */
    KustoPoolDatabasePrincipalAssignment.disallowPreviewResource = compliance_policy_manager_1.policyManager.registerPolicy({
        resourceValidationPolicy: {
            name: "azurenative-synapse-v20210601preview-kustopooldatabaseprincipalassignment-disallow-preview-resource",
            description: "Disallow the use of non-stable (Preview) Azure resouces (synapse.v20210601preview.KustoPoolDatabasePrincipalAssignment).",
            configSchema: compliance_policy_manager_1.policyManager.policyConfigSchema,
            enforcementLevel: "advisory",
            validateResource: (0, policy_1.validateResourceOfType)(v20210601preview_10.KustoPoolDatabasePrincipalAssignment, (_, args, reportViolation) => {
                if (!compliance_policy_manager_1.policyManager.shouldEvalPolicy(args)) {
                    return;
                }
                reportViolation("Azure KustoPoolDatabasePrincipalAssignment shouldn't use an unstable API (synapse.v20210601preview.KustoPoolDatabasePrincipalAssignment). A compatible replacement can be found at 'synapse.KustoPoolDatabasePrincipalAssignment'.");
            }),
        },
        vendors: ["azure"],
        services: ["synapse"],
        severity: "medium",
        topics: ["api", "unstable", "preview"],
    });
})(KustoPoolDatabasePrincipalAssignment || (KustoPoolDatabasePrincipalAssignment = {}));
exports.KustoPoolDatabasePrincipalAssignment = KustoPoolDatabasePrincipalAssignment;
var KustoPoolPrincipalAssignment;
(function (KustoPoolPrincipalAssignment) {
    /**
     * Disallow the use of non-stable (Preview) Azure resouces (synapse.v20210601preview.KustoPoolPrincipalAssignment).
     *
     * @severity medium
     * @frameworks none
     * @topics api, preview, unstable
     * @link https://learn.microsoft.com/en-us/rest/api/azure/
     */
    KustoPoolPrincipalAssignment.disallowPreviewResource = compliance_policy_manager_1.policyManager.registerPolicy({
        resourceValidationPolicy: {
            name: "azurenative-synapse-v20210601preview-kustopoolprincipalassignment-disallow-preview-resource",
            description: "Disallow the use of non-stable (Preview) Azure resouces (synapse.v20210601preview.KustoPoolPrincipalAssignment).",
            configSchema: compliance_policy_manager_1.policyManager.policyConfigSchema,
            enforcementLevel: "advisory",
            validateResource: (0, policy_1.validateResourceOfType)(v20210601preview_11.KustoPoolPrincipalAssignment, (_, args, reportViolation) => {
                if (!compliance_policy_manager_1.policyManager.shouldEvalPolicy(args)) {
                    return;
                }
                reportViolation("Azure KustoPoolPrincipalAssignment shouldn't use an unstable API (synapse.v20210601preview.KustoPoolPrincipalAssignment). A compatible replacement can be found at 'synapse.KustoPoolPrincipalAssignment'.");
            }),
        },
        vendors: ["azure"],
        services: ["synapse"],
        severity: "medium",
        topics: ["api", "unstable", "preview"],
    });
})(KustoPoolPrincipalAssignment || (KustoPoolPrincipalAssignment = {}));
exports.KustoPoolPrincipalAssignment = KustoPoolPrincipalAssignment;
var PrivateEndpointConnection;
(function (PrivateEndpointConnection) {
    /**
     * Disallow the use of non-stable (Preview) Azure resouces (synapse.v20210601preview.PrivateEndpointConnection).
     *
     * @severity medium
     * @frameworks none
     * @topics api, preview, unstable
     * @link https://learn.microsoft.com/en-us/rest/api/azure/
     */
    PrivateEndpointConnection.disallowPreviewResource = compliance_policy_manager_1.policyManager.registerPolicy({
        resourceValidationPolicy: {
            name: "azurenative-synapse-v20210601preview-privateendpointconnection-disallow-preview-resource",
            description: "Disallow the use of non-stable (Preview) Azure resouces (synapse.v20210601preview.PrivateEndpointConnection).",
            configSchema: compliance_policy_manager_1.policyManager.policyConfigSchema,
            enforcementLevel: "advisory",
            validateResource: (0, policy_1.validateResourceOfType)(v20210601preview_12.PrivateEndpointConnection, (_, args, reportViolation) => {
                if (!compliance_policy_manager_1.policyManager.shouldEvalPolicy(args)) {
                    return;
                }
                reportViolation("Azure PrivateEndpointConnection shouldn't use an unstable API (synapse.v20210601preview.PrivateEndpointConnection). A compatible replacement can be found at 'synapse.PrivateEndpointConnection'.");
            }),
        },
        vendors: ["azure"],
        services: ["synapse"],
        severity: "medium",
        topics: ["api", "unstable", "preview"],
    });
})(PrivateEndpointConnection || (PrivateEndpointConnection = {}));
exports.PrivateEndpointConnection = PrivateEndpointConnection;
var PrivateLinkHub;
(function (PrivateLinkHub) {
    /**
     * Disallow the use of non-stable (Preview) Azure resouces (synapse.v20210601preview.PrivateLinkHub).
     *
     * @severity medium
     * @frameworks none
     * @topics api, preview, unstable
     * @link https://learn.microsoft.com/en-us/rest/api/azure/
     */
    PrivateLinkHub.disallowPreviewResource = compliance_policy_manager_1.policyManager.registerPolicy({
        resourceValidationPolicy: {
            name: "azurenative-synapse-v20210601preview-privatelinkhub-disallow-preview-resource",
            description: "Disallow the use of non-stable (Preview) Azure resouces (synapse.v20210601preview.PrivateLinkHub).",
            configSchema: compliance_policy_manager_1.policyManager.policyConfigSchema,
            enforcementLevel: "advisory",
            validateResource: (0, policy_1.validateResourceOfType)(v20210601preview_13.PrivateLinkHub, (_, args, reportViolation) => {
                if (!compliance_policy_manager_1.policyManager.shouldEvalPolicy(args)) {
                    return;
                }
                reportViolation("Azure PrivateLinkHub shouldn't use an unstable API (synapse.v20210601preview.PrivateLinkHub). A compatible replacement can be found at 'synapse.PrivateLinkHub'.");
            }),
        },
        vendors: ["azure"],
        services: ["synapse"],
        severity: "medium",
        topics: ["api", "unstable", "preview"],
    });
})(PrivateLinkHub || (PrivateLinkHub = {}));
exports.PrivateLinkHub = PrivateLinkHub;
var ReadOnlyFollowingDatabase;
(function (ReadOnlyFollowingDatabase) {
    /**
     * Disallow the use of non-stable (Preview) Azure resouces (synapse.v20210601preview.ReadOnlyFollowingDatabase).
     *
     * @severity medium
     * @frameworks none
     * @topics api, preview, unstable
     * @link https://learn.microsoft.com/en-us/rest/api/azure/
     */
    ReadOnlyFollowingDatabase.disallowPreviewResource = compliance_policy_manager_1.policyManager.registerPolicy({
        resourceValidationPolicy: {
            name: "azurenative-synapse-v20210601preview-readonlyfollowingdatabase-disallow-preview-resource",
            description: "Disallow the use of non-stable (Preview) Azure resouces (synapse.v20210601preview.ReadOnlyFollowingDatabase).",
            configSchema: compliance_policy_manager_1.policyManager.policyConfigSchema,
            enforcementLevel: "advisory",
            validateResource: (0, policy_1.validateResourceOfType)(v20210601preview_14.ReadOnlyFollowingDatabase, (_, args, reportViolation) => {
                if (!compliance_policy_manager_1.policyManager.shouldEvalPolicy(args)) {
                    return;
                }
                reportViolation("Azure ReadOnlyFollowingDatabase shouldn't use an unstable API (synapse.v20210601preview.ReadOnlyFollowingDatabase). A compatible replacement can be found at 'synapse.ReadOnlyFollowingDatabase'.");
            }),
        },
        vendors: ["azure"],
        services: ["synapse"],
        severity: "medium",
        topics: ["api", "unstable", "preview"],
    });
})(ReadOnlyFollowingDatabase || (ReadOnlyFollowingDatabase = {}));
exports.ReadOnlyFollowingDatabase = ReadOnlyFollowingDatabase;
var ReadWriteDatabase;
(function (ReadWriteDatabase) {
    /**
     * Disallow the use of non-stable (Preview) Azure resouces (synapse.v20210601preview.ReadWriteDatabase).
     *
     * @severity medium
     * @frameworks none
     * @topics api, preview, unstable
     * @link https://learn.microsoft.com/en-us/rest/api/azure/
     */
    ReadWriteDatabase.disallowPreviewResource = compliance_policy_manager_1.policyManager.registerPolicy({
        resourceValidationPolicy: {
            name: "azurenative-synapse-v20210601preview-readwritedatabase-disallow-preview-resource",
            description: "Disallow the use of non-stable (Preview) Azure resouces (synapse.v20210601preview.ReadWriteDatabase).",
            configSchema: compliance_policy_manager_1.policyManager.policyConfigSchema,
            enforcementLevel: "advisory",
            validateResource: (0, policy_1.validateResourceOfType)(v20210601preview_15.ReadWriteDatabase, (_, args, reportViolation) => {
                if (!compliance_policy_manager_1.policyManager.shouldEvalPolicy(args)) {
                    return;
                }
                reportViolation("Azure ReadWriteDatabase shouldn't use an unstable API (synapse.v20210601preview.ReadWriteDatabase). A compatible replacement can be found at 'synapse.ReadWriteDatabase'.");
            }),
        },
        vendors: ["azure"],
        services: ["synapse"],
        severity: "medium",
        topics: ["api", "unstable", "preview"],
    });
})(ReadWriteDatabase || (ReadWriteDatabase = {}));
exports.ReadWriteDatabase = ReadWriteDatabase;
var SqlPool;
(function (SqlPool) {
    /**
     * Disallow the use of non-stable (Preview) Azure resouces (synapse.v20210601preview.SqlPool).
     *
     * @severity medium
     * @frameworks none
     * @topics api, preview, unstable
     * @link https://learn.microsoft.com/en-us/rest/api/azure/
     */
    SqlPool.disallowPreviewResource = compliance_policy_manager_1.policyManager.registerPolicy({
        resourceValidationPolicy: {
            name: "azurenative-synapse-v20210601preview-sqlpool-disallow-preview-resource",
            description: "Disallow the use of non-stable (Preview) Azure resouces (synapse.v20210601preview.SqlPool).",
            configSchema: compliance_policy_manager_1.policyManager.policyConfigSchema,
            enforcementLevel: "advisory",
            validateResource: (0, policy_1.validateResourceOfType)(v20210601preview_16.SqlPool, (_, args, reportViolation) => {
                if (!compliance_policy_manager_1.policyManager.shouldEvalPolicy(args)) {
                    return;
                }
                reportViolation("Azure SqlPool shouldn't use an unstable API (synapse.v20210601preview.SqlPool). A compatible replacement can be found at 'synapse.SqlPool'.");
            }),
        },
        vendors: ["azure"],
        services: ["synapse"],
        severity: "medium",
        topics: ["api", "unstable", "preview"],
    });
})(SqlPool || (SqlPool = {}));
exports.SqlPool = SqlPool;
var SqlPoolSensitivityLabel;
(function (SqlPoolSensitivityLabel) {
    /**
     * Disallow the use of non-stable (Preview) Azure resouces (synapse.v20210601preview.SqlPoolSensitivityLabel).
     *
     * @severity medium
     * @frameworks none
     * @topics api, preview, unstable
     * @link https://learn.microsoft.com/en-us/rest/api/azure/
     */
    SqlPoolSensitivityLabel.disallowPreviewResource = compliance_policy_manager_1.policyManager.registerPolicy({
        resourceValidationPolicy: {
            name: "azurenative-synapse-v20210601preview-sqlpoolsensitivitylabel-disallow-preview-resource",
            description: "Disallow the use of non-stable (Preview) Azure resouces (synapse.v20210601preview.SqlPoolSensitivityLabel).",
            configSchema: compliance_policy_manager_1.policyManager.policyConfigSchema,
            enforcementLevel: "advisory",
            validateResource: (0, policy_1.validateResourceOfType)(v20210601preview_17.SqlPoolSensitivityLabel, (_, args, reportViolation) => {
                if (!compliance_policy_manager_1.policyManager.shouldEvalPolicy(args)) {
                    return;
                }
                reportViolation("Azure SqlPoolSensitivityLabel shouldn't use an unstable API (synapse.v20210601preview.SqlPoolSensitivityLabel). A compatible replacement can be found at 'synapse.SqlPoolSensitivityLabel'.");
            }),
        },
        vendors: ["azure"],
        services: ["synapse"],
        severity: "medium",
        topics: ["api", "unstable", "preview"],
    });
})(SqlPoolSensitivityLabel || (SqlPoolSensitivityLabel = {}));
exports.SqlPoolSensitivityLabel = SqlPoolSensitivityLabel;
var SqlPoolTransparentDataEncryption;
(function (SqlPoolTransparentDataEncryption) {
    /**
     * Disallow the use of non-stable (Preview) Azure resouces (synapse.v20210601preview.SqlPoolTransparentDataEncryption).
     *
     * @severity medium
     * @frameworks none
     * @topics api, preview, unstable
     * @link https://learn.microsoft.com/en-us/rest/api/azure/
     */
    SqlPoolTransparentDataEncryption.disallowPreviewResource = compliance_policy_manager_1.policyManager.registerPolicy({
        resourceValidationPolicy: {
            name: "azurenative-synapse-v20210601preview-sqlpooltransparentdataencryption-disallow-preview-resource",
            description: "Disallow the use of non-stable (Preview) Azure resouces (synapse.v20210601preview.SqlPoolTransparentDataEncryption).",
            configSchema: compliance_policy_manager_1.policyManager.policyConfigSchema,
            enforcementLevel: "advisory",
            validateResource: (0, policy_1.validateResourceOfType)(v20210601preview_18.SqlPoolTransparentDataEncryption, (_, args, reportViolation) => {
                if (!compliance_policy_manager_1.policyManager.shouldEvalPolicy(args)) {
                    return;
                }
                reportViolation("Azure SqlPoolTransparentDataEncryption shouldn't use an unstable API (synapse.v20210601preview.SqlPoolTransparentDataEncryption). A compatible replacement can be found at 'synapse.SqlPoolTransparentDataEncryption'.");
            }),
        },
        vendors: ["azure"],
        services: ["synapse"],
        severity: "medium",
        topics: ["api", "unstable", "preview"],
    });
})(SqlPoolTransparentDataEncryption || (SqlPoolTransparentDataEncryption = {}));
exports.SqlPoolTransparentDataEncryption = SqlPoolTransparentDataEncryption;
var SqlPoolVulnerabilityAssessment;
(function (SqlPoolVulnerabilityAssessment) {
    /**
     * Disallow the use of non-stable (Preview) Azure resouces (synapse.v20210601preview.SqlPoolVulnerabilityAssessment).
     *
     * @severity medium
     * @frameworks none
     * @topics api, preview, unstable
     * @link https://learn.microsoft.com/en-us/rest/api/azure/
     */
    SqlPoolVulnerabilityAssessment.disallowPreviewResource = compliance_policy_manager_1.policyManager.registerPolicy({
        resourceValidationPolicy: {
            name: "azurenative-synapse-v20210601preview-sqlpoolvulnerabilityassessment-disallow-preview-resource",
            description: "Disallow the use of non-stable (Preview) Azure resouces (synapse.v20210601preview.SqlPoolVulnerabilityAssessment).",
            configSchema: compliance_policy_manager_1.policyManager.policyConfigSchema,
            enforcementLevel: "advisory",
            validateResource: (0, policy_1.validateResourceOfType)(v20210601preview_19.SqlPoolVulnerabilityAssessment, (_, args, reportViolation) => {
                if (!compliance_policy_manager_1.policyManager.shouldEvalPolicy(args)) {
                    return;
                }
                reportViolation("Azure SqlPoolVulnerabilityAssessment shouldn't use an unstable API (synapse.v20210601preview.SqlPoolVulnerabilityAssessment). A compatible replacement can be found at 'synapse.SqlPoolVulnerabilityAssessment'.");
            }),
        },
        vendors: ["azure"],
        services: ["synapse"],
        severity: "medium",
        topics: ["api", "unstable", "preview"],
    });
})(SqlPoolVulnerabilityAssessment || (SqlPoolVulnerabilityAssessment = {}));
exports.SqlPoolVulnerabilityAssessment = SqlPoolVulnerabilityAssessment;
var SqlPoolVulnerabilityAssessmentRuleBaseline;
(function (SqlPoolVulnerabilityAssessmentRuleBaseline) {
    /**
     * Disallow the use of non-stable (Preview) Azure resouces (synapse.v20210601preview.SqlPoolVulnerabilityAssessmentRuleBaseline).
     *
     * @severity medium
     * @frameworks none
     * @topics api, preview, unstable
     * @link https://learn.microsoft.com/en-us/rest/api/azure/
     */
    SqlPoolVulnerabilityAssessmentRuleBaseline.disallowPreviewResource = compliance_policy_manager_1.policyManager.registerPolicy({
        resourceValidationPolicy: {
            name: "azurenative-synapse-v20210601preview-sqlpoolvulnerabilityassessmentrulebaseline-disallow-preview-resource",
            description: "Disallow the use of non-stable (Preview) Azure resouces (synapse.v20210601preview.SqlPoolVulnerabilityAssessmentRuleBaseline).",
            configSchema: compliance_policy_manager_1.policyManager.policyConfigSchema,
            enforcementLevel: "advisory",
            validateResource: (0, policy_1.validateResourceOfType)(v20210601preview_20.SqlPoolVulnerabilityAssessmentRuleBaseline, (_, args, reportViolation) => {
                if (!compliance_policy_manager_1.policyManager.shouldEvalPolicy(args)) {
                    return;
                }
                reportViolation("Azure SqlPoolVulnerabilityAssessmentRuleBaseline shouldn't use an unstable API (synapse.v20210601preview.SqlPoolVulnerabilityAssessmentRuleBaseline). A compatible replacement can be found at 'synapse.SqlPoolVulnerabilityAssessmentRuleBaseline'.");
            }),
        },
        vendors: ["azure"],
        services: ["synapse"],
        severity: "medium",
        topics: ["api", "unstable", "preview"],
    });
})(SqlPoolVulnerabilityAssessmentRuleBaseline || (SqlPoolVulnerabilityAssessmentRuleBaseline = {}));
exports.SqlPoolVulnerabilityAssessmentRuleBaseline = SqlPoolVulnerabilityAssessmentRuleBaseline;
var SqlPoolWorkloadClassifier;
(function (SqlPoolWorkloadClassifier) {
    /**
     * Disallow the use of non-stable (Preview) Azure resouces (synapse.v20210601preview.SqlPoolWorkloadClassifier).
     *
     * @severity medium
     * @frameworks none
     * @topics api, preview, unstable
     * @link https://learn.microsoft.com/en-us/rest/api/azure/
     */
    SqlPoolWorkloadClassifier.disallowPreviewResource = compliance_policy_manager_1.policyManager.registerPolicy({
        resourceValidationPolicy: {
            name: "azurenative-synapse-v20210601preview-sqlpoolworkloadclassifier-disallow-preview-resource",
            description: "Disallow the use of non-stable (Preview) Azure resouces (synapse.v20210601preview.SqlPoolWorkloadClassifier).",
            configSchema: compliance_policy_manager_1.policyManager.policyConfigSchema,
            enforcementLevel: "advisory",
            validateResource: (0, policy_1.validateResourceOfType)(v20210601preview_21.SqlPoolWorkloadClassifier, (_, args, reportViolation) => {
                if (!compliance_policy_manager_1.policyManager.shouldEvalPolicy(args)) {
                    return;
                }
                reportViolation("Azure SqlPoolWorkloadClassifier shouldn't use an unstable API (synapse.v20210601preview.SqlPoolWorkloadClassifier). A compatible replacement can be found at 'synapse.SqlPoolWorkloadClassifier'.");
            }),
        },
        vendors: ["azure"],
        services: ["synapse"],
        severity: "medium",
        topics: ["api", "unstable", "preview"],
    });
})(SqlPoolWorkloadClassifier || (SqlPoolWorkloadClassifier = {}));
exports.SqlPoolWorkloadClassifier = SqlPoolWorkloadClassifier;
var SqlPoolWorkloadGroup;
(function (SqlPoolWorkloadGroup) {
    /**
     * Disallow the use of non-stable (Preview) Azure resouces (synapse.v20210601preview.SqlPoolWorkloadGroup).
     *
     * @severity medium
     * @frameworks none
     * @topics api, preview, unstable
     * @link https://learn.microsoft.com/en-us/rest/api/azure/
     */
    SqlPoolWorkloadGroup.disallowPreviewResource = compliance_policy_manager_1.policyManager.registerPolicy({
        resourceValidationPolicy: {
            name: "azurenative-synapse-v20210601preview-sqlpoolworkloadgroup-disallow-preview-resource",
            description: "Disallow the use of non-stable (Preview) Azure resouces (synapse.v20210601preview.SqlPoolWorkloadGroup).",
            configSchema: compliance_policy_manager_1.policyManager.policyConfigSchema,
            enforcementLevel: "advisory",
            validateResource: (0, policy_1.validateResourceOfType)(v20210601preview_22.SqlPoolWorkloadGroup, (_, args, reportViolation) => {
                if (!compliance_policy_manager_1.policyManager.shouldEvalPolicy(args)) {
                    return;
                }
                reportViolation("Azure SqlPoolWorkloadGroup shouldn't use an unstable API (synapse.v20210601preview.SqlPoolWorkloadGroup). A compatible replacement can be found at 'synapse.SqlPoolWorkloadGroup'.");
            }),
        },
        vendors: ["azure"],
        services: ["synapse"],
        severity: "medium",
        topics: ["api", "unstable", "preview"],
    });
})(SqlPoolWorkloadGroup || (SqlPoolWorkloadGroup = {}));
exports.SqlPoolWorkloadGroup = SqlPoolWorkloadGroup;
var Workspace;
(function (Workspace) {
    /**
     * Disallow the use of non-stable (Preview) Azure resouces (synapse.v20210601preview.Workspace).
     *
     * @severity medium
     * @frameworks none
     * @topics api, preview, unstable
     * @link https://learn.microsoft.com/en-us/rest/api/azure/
     */
    Workspace.disallowPreviewResource = compliance_policy_manager_1.policyManager.registerPolicy({
        resourceValidationPolicy: {
            name: "azurenative-synapse-v20210601preview-workspace-disallow-preview-resource",
            description: "Disallow the use of non-stable (Preview) Azure resouces (synapse.v20210601preview.Workspace).",
            configSchema: compliance_policy_manager_1.policyManager.policyConfigSchema,
            enforcementLevel: "advisory",
            validateResource: (0, policy_1.validateResourceOfType)(v20210601preview_23.Workspace, (_, args, reportViolation) => {
                if (!compliance_policy_manager_1.policyManager.shouldEvalPolicy(args)) {
                    return;
                }
                reportViolation("Azure Workspace shouldn't use an unstable API (synapse.v20210601preview.Workspace). A compatible replacement can be found at 'synapse.Workspace'.");
            }),
        },
        vendors: ["azure"],
        services: ["synapse"],
        severity: "medium",
        topics: ["api", "unstable", "preview"],
    });
})(Workspace || (Workspace = {}));
exports.Workspace = Workspace;
var WorkspaceAadAdmin;
(function (WorkspaceAadAdmin) {
    /**
     * Disallow the use of non-stable (Preview) Azure resouces (synapse.v20210601preview.WorkspaceAadAdmin).
     *
     * @severity medium
     * @frameworks none
     * @topics api, preview, unstable
     * @link https://learn.microsoft.com/en-us/rest/api/azure/
     */
    WorkspaceAadAdmin.disallowPreviewResource = compliance_policy_manager_1.policyManager.registerPolicy({
        resourceValidationPolicy: {
            name: "azurenative-synapse-v20210601preview-workspaceaadadmin-disallow-preview-resource",
            description: "Disallow the use of non-stable (Preview) Azure resouces (synapse.v20210601preview.WorkspaceAadAdmin).",
            configSchema: compliance_policy_manager_1.policyManager.policyConfigSchema,
            enforcementLevel: "advisory",
            validateResource: (0, policy_1.validateResourceOfType)(v20210601preview_24.WorkspaceAadAdmin, (_, args, reportViolation) => {
                if (!compliance_policy_manager_1.policyManager.shouldEvalPolicy(args)) {
                    return;
                }
                reportViolation("Azure WorkspaceAadAdmin shouldn't use an unstable API (synapse.v20210601preview.WorkspaceAadAdmin). A compatible replacement can be found at 'synapse.WorkspaceAadAdmin'.");
            }),
        },
        vendors: ["azure"],
        services: ["synapse"],
        severity: "medium",
        topics: ["api", "unstable", "preview"],
    });
})(WorkspaceAadAdmin || (WorkspaceAadAdmin = {}));
exports.WorkspaceAadAdmin = WorkspaceAadAdmin;
var WorkspaceManagedSqlServerVulnerabilityAssessment;
(function (WorkspaceManagedSqlServerVulnerabilityAssessment) {
    /**
     * Disallow the use of non-stable (Preview) Azure resouces (synapse.v20210601preview.WorkspaceManagedSqlServerVulnerabilityAssessment).
     *
     * @severity medium
     * @frameworks none
     * @topics api, preview, unstable
     * @link https://learn.microsoft.com/en-us/rest/api/azure/
     */
    WorkspaceManagedSqlServerVulnerabilityAssessment.disallowPreviewResource = compliance_policy_manager_1.policyManager.registerPolicy({
        resourceValidationPolicy: {
            name: "azurenative-synapse-v20210601preview-workspacemanagedsqlservervulnerabilityassessment-disallow-preview-resource",
            description: "Disallow the use of non-stable (Preview) Azure resouces (synapse.v20210601preview.WorkspaceManagedSqlServerVulnerabilityAssessment).",
            configSchema: compliance_policy_manager_1.policyManager.policyConfigSchema,
            enforcementLevel: "advisory",
            validateResource: (0, policy_1.validateResourceOfType)(v20210601preview_25.WorkspaceManagedSqlServerVulnerabilityAssessment, (_, args, reportViolation) => {
                if (!compliance_policy_manager_1.policyManager.shouldEvalPolicy(args)) {
                    return;
                }
                reportViolation("Azure WorkspaceManagedSqlServerVulnerabilityAssessment shouldn't use an unstable API (synapse.v20210601preview.WorkspaceManagedSqlServerVulnerabilityAssessment). A compatible replacement can be found at 'synapse.WorkspaceManagedSqlServerVulnerabilityAssessment'.");
            }),
        },
        vendors: ["azure"],
        services: ["synapse"],
        severity: "medium",
        topics: ["api", "unstable", "preview"],
    });
})(WorkspaceManagedSqlServerVulnerabilityAssessment || (WorkspaceManagedSqlServerVulnerabilityAssessment = {}));
exports.WorkspaceManagedSqlServerVulnerabilityAssessment = WorkspaceManagedSqlServerVulnerabilityAssessment;
var WorkspaceSqlAadAdmin;
(function (WorkspaceSqlAadAdmin) {
    /**
     * Disallow the use of non-stable (Preview) Azure resouces (synapse.v20210601preview.WorkspaceSqlAadAdmin).
     *
     * @severity medium
     * @frameworks none
     * @topics api, preview, unstable
     * @link https://learn.microsoft.com/en-us/rest/api/azure/
     */
    WorkspaceSqlAadAdmin.disallowPreviewResource = compliance_policy_manager_1.policyManager.registerPolicy({
        resourceValidationPolicy: {
            name: "azurenative-synapse-v20210601preview-workspacesqlaadadmin-disallow-preview-resource",
            description: "Disallow the use of non-stable (Preview) Azure resouces (synapse.v20210601preview.WorkspaceSqlAadAdmin).",
            configSchema: compliance_policy_manager_1.policyManager.policyConfigSchema,
            enforcementLevel: "advisory",
            validateResource: (0, policy_1.validateResourceOfType)(v20210601preview_26.WorkspaceSqlAadAdmin, (_, args, reportViolation) => {
                if (!compliance_policy_manager_1.policyManager.shouldEvalPolicy(args)) {
                    return;
                }
                reportViolation("Azure WorkspaceSqlAadAdmin shouldn't use an unstable API (synapse.v20210601preview.WorkspaceSqlAadAdmin). A compatible replacement can be found at 'synapse.WorkspaceSqlAadAdmin'.");
            }),
        },
        vendors: ["azure"],
        services: ["synapse"],
        severity: "medium",
        topics: ["api", "unstable", "preview"],
    });
})(WorkspaceSqlAadAdmin || (WorkspaceSqlAadAdmin = {}));
exports.WorkspaceSqlAadAdmin = WorkspaceSqlAadAdmin;
