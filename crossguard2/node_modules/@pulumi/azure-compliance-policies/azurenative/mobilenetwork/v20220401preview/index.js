"use strict";
// Copyright 2016-2024, Pulumi Corporation.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//
// ------------------------------- WARNING -------------------------------------
// This file was programmatically generated. Do not edit unless you know what
// you're doing.
// ------------------------------- WARNING -------------------------------------
Object.defineProperty(exports, "__esModule", { value: true });
exports.Slice = exports.Site = exports.SimPolicy = exports.SimGroup = exports.Sim = exports.Service = exports.PacketCoreDataPlane = exports.PacketCoreControlPlane = exports.MobileNetwork = exports.DataNetwork = exports.AttachedDataNetwork = void 0;
const policy_1 = require("@pulumi/policy");
const compliance_policy_manager_1 = require("@pulumi/compliance-policy-manager");
const v20220401preview_1 = require("@pulumi/azure-native/mobilenetwork/v20220401preview");
const v20220401preview_2 = require("@pulumi/azure-native/mobilenetwork/v20220401preview");
const v20220401preview_3 = require("@pulumi/azure-native/mobilenetwork/v20220401preview");
const v20220401preview_4 = require("@pulumi/azure-native/mobilenetwork/v20220401preview");
const v20220401preview_5 = require("@pulumi/azure-native/mobilenetwork/v20220401preview");
const v20220401preview_6 = require("@pulumi/azure-native/mobilenetwork/v20220401preview");
const v20220401preview_7 = require("@pulumi/azure-native/mobilenetwork/v20220401preview");
const v20220401preview_8 = require("@pulumi/azure-native/mobilenetwork/v20220401preview");
const v20220401preview_9 = require("@pulumi/azure-native/mobilenetwork/v20220401preview");
const v20220401preview_10 = require("@pulumi/azure-native/mobilenetwork/v20220401preview");
const v20220401preview_11 = require("@pulumi/azure-native/mobilenetwork/v20220401preview");
var AttachedDataNetwork;
(function (AttachedDataNetwork) {
    /**
     * Disallow the use of non-stable (Preview) Azure resouces (mobilenetwork.v20220401preview.AttachedDataNetwork).
     *
     * @severity medium
     * @frameworks none
     * @topics api, preview, unstable
     * @link https://learn.microsoft.com/en-us/rest/api/azure/
     */
    AttachedDataNetwork.disallowPreviewResource = compliance_policy_manager_1.policyManager.registerPolicy({
        resourceValidationPolicy: {
            name: "azurenative-mobilenetwork-v20220401preview-attacheddatanetwork-disallow-preview-resource",
            description: "Disallow the use of non-stable (Preview) Azure resouces (mobilenetwork.v20220401preview.AttachedDataNetwork).",
            configSchema: compliance_policy_manager_1.policyManager.policyConfigSchema,
            enforcementLevel: "advisory",
            validateResource: (0, policy_1.validateResourceOfType)(v20220401preview_1.AttachedDataNetwork, (_, args, reportViolation) => {
                if (!compliance_policy_manager_1.policyManager.shouldEvalPolicy(args)) {
                    return;
                }
                reportViolation("Azure AttachedDataNetwork shouldn't use an unstable API (mobilenetwork.v20220401preview.AttachedDataNetwork). A compatible replacement can be found at 'mobilenetwork.AttachedDataNetwork'.");
            }),
        },
        vendors: ["azure"],
        services: ["mobilenetwork"],
        severity: "medium",
        topics: ["api", "unstable", "preview"],
    });
})(AttachedDataNetwork || (AttachedDataNetwork = {}));
exports.AttachedDataNetwork = AttachedDataNetwork;
var DataNetwork;
(function (DataNetwork) {
    /**
     * Disallow the use of non-stable (Preview) Azure resouces (mobilenetwork.v20220401preview.DataNetwork).
     *
     * @severity medium
     * @frameworks none
     * @topics api, preview, unstable
     * @link https://learn.microsoft.com/en-us/rest/api/azure/
     */
    DataNetwork.disallowPreviewResource = compliance_policy_manager_1.policyManager.registerPolicy({
        resourceValidationPolicy: {
            name: "azurenative-mobilenetwork-v20220401preview-datanetwork-disallow-preview-resource",
            description: "Disallow the use of non-stable (Preview) Azure resouces (mobilenetwork.v20220401preview.DataNetwork).",
            configSchema: compliance_policy_manager_1.policyManager.policyConfigSchema,
            enforcementLevel: "advisory",
            validateResource: (0, policy_1.validateResourceOfType)(v20220401preview_2.DataNetwork, (_, args, reportViolation) => {
                if (!compliance_policy_manager_1.policyManager.shouldEvalPolicy(args)) {
                    return;
                }
                reportViolation("Azure DataNetwork shouldn't use an unstable API (mobilenetwork.v20220401preview.DataNetwork). A compatible replacement can be found at 'mobilenetwork.DataNetwork'.");
            }),
        },
        vendors: ["azure"],
        services: ["mobilenetwork"],
        severity: "medium",
        topics: ["api", "unstable", "preview"],
    });
})(DataNetwork || (DataNetwork = {}));
exports.DataNetwork = DataNetwork;
var MobileNetwork;
(function (MobileNetwork) {
    /**
     * Disallow the use of non-stable (Preview) Azure resouces (mobilenetwork.v20220401preview.MobileNetwork).
     *
     * @severity medium
     * @frameworks none
     * @topics api, preview, unstable
     * @link https://learn.microsoft.com/en-us/rest/api/azure/
     */
    MobileNetwork.disallowPreviewResource = compliance_policy_manager_1.policyManager.registerPolicy({
        resourceValidationPolicy: {
            name: "azurenative-mobilenetwork-v20220401preview-mobilenetwork-disallow-preview-resource",
            description: "Disallow the use of non-stable (Preview) Azure resouces (mobilenetwork.v20220401preview.MobileNetwork).",
            configSchema: compliance_policy_manager_1.policyManager.policyConfigSchema,
            enforcementLevel: "advisory",
            validateResource: (0, policy_1.validateResourceOfType)(v20220401preview_3.MobileNetwork, (_, args, reportViolation) => {
                if (!compliance_policy_manager_1.policyManager.shouldEvalPolicy(args)) {
                    return;
                }
                reportViolation("Azure MobileNetwork shouldn't use an unstable API (mobilenetwork.v20220401preview.MobileNetwork). A compatible replacement can be found at 'mobilenetwork.MobileNetwork'.");
            }),
        },
        vendors: ["azure"],
        services: ["mobilenetwork"],
        severity: "medium",
        topics: ["api", "unstable", "preview"],
    });
})(MobileNetwork || (MobileNetwork = {}));
exports.MobileNetwork = MobileNetwork;
var PacketCoreControlPlane;
(function (PacketCoreControlPlane) {
    /**
     * Disallow the use of non-stable (Preview) Azure resouces (mobilenetwork.v20220401preview.PacketCoreControlPlane).
     *
     * @severity medium
     * @frameworks none
     * @topics api, preview, unstable
     * @link https://learn.microsoft.com/en-us/rest/api/azure/
     */
    PacketCoreControlPlane.disallowPreviewResource = compliance_policy_manager_1.policyManager.registerPolicy({
        resourceValidationPolicy: {
            name: "azurenative-mobilenetwork-v20220401preview-packetcorecontrolplane-disallow-preview-resource",
            description: "Disallow the use of non-stable (Preview) Azure resouces (mobilenetwork.v20220401preview.PacketCoreControlPlane).",
            configSchema: compliance_policy_manager_1.policyManager.policyConfigSchema,
            enforcementLevel: "advisory",
            validateResource: (0, policy_1.validateResourceOfType)(v20220401preview_4.PacketCoreControlPlane, (_, args, reportViolation) => {
                if (!compliance_policy_manager_1.policyManager.shouldEvalPolicy(args)) {
                    return;
                }
                reportViolation("Azure PacketCoreControlPlane shouldn't use an unstable API (mobilenetwork.v20220401preview.PacketCoreControlPlane). A compatible replacement can be found at 'mobilenetwork.PacketCoreControlPlane'.");
            }),
        },
        vendors: ["azure"],
        services: ["mobilenetwork"],
        severity: "medium",
        topics: ["api", "unstable", "preview"],
    });
})(PacketCoreControlPlane || (PacketCoreControlPlane = {}));
exports.PacketCoreControlPlane = PacketCoreControlPlane;
var PacketCoreDataPlane;
(function (PacketCoreDataPlane) {
    /**
     * Disallow the use of non-stable (Preview) Azure resouces (mobilenetwork.v20220401preview.PacketCoreDataPlane).
     *
     * @severity medium
     * @frameworks none
     * @topics api, preview, unstable
     * @link https://learn.microsoft.com/en-us/rest/api/azure/
     */
    PacketCoreDataPlane.disallowPreviewResource = compliance_policy_manager_1.policyManager.registerPolicy({
        resourceValidationPolicy: {
            name: "azurenative-mobilenetwork-v20220401preview-packetcoredataplane-disallow-preview-resource",
            description: "Disallow the use of non-stable (Preview) Azure resouces (mobilenetwork.v20220401preview.PacketCoreDataPlane).",
            configSchema: compliance_policy_manager_1.policyManager.policyConfigSchema,
            enforcementLevel: "advisory",
            validateResource: (0, policy_1.validateResourceOfType)(v20220401preview_5.PacketCoreDataPlane, (_, args, reportViolation) => {
                if (!compliance_policy_manager_1.policyManager.shouldEvalPolicy(args)) {
                    return;
                }
                reportViolation("Azure PacketCoreDataPlane shouldn't use an unstable API (mobilenetwork.v20220401preview.PacketCoreDataPlane). A compatible replacement can be found at 'mobilenetwork.PacketCoreDataPlane'.");
            }),
        },
        vendors: ["azure"],
        services: ["mobilenetwork"],
        severity: "medium",
        topics: ["api", "unstable", "preview"],
    });
})(PacketCoreDataPlane || (PacketCoreDataPlane = {}));
exports.PacketCoreDataPlane = PacketCoreDataPlane;
var Service;
(function (Service) {
    /**
     * Disallow the use of non-stable (Preview) Azure resouces (mobilenetwork.v20220401preview.Service).
     *
     * @severity medium
     * @frameworks none
     * @topics api, preview, unstable
     * @link https://learn.microsoft.com/en-us/rest/api/azure/
     */
    Service.disallowPreviewResource = compliance_policy_manager_1.policyManager.registerPolicy({
        resourceValidationPolicy: {
            name: "azurenative-mobilenetwork-v20220401preview-service-disallow-preview-resource",
            description: "Disallow the use of non-stable (Preview) Azure resouces (mobilenetwork.v20220401preview.Service).",
            configSchema: compliance_policy_manager_1.policyManager.policyConfigSchema,
            enforcementLevel: "advisory",
            validateResource: (0, policy_1.validateResourceOfType)(v20220401preview_6.Service, (_, args, reportViolation) => {
                if (!compliance_policy_manager_1.policyManager.shouldEvalPolicy(args)) {
                    return;
                }
                reportViolation("Azure Service shouldn't use an unstable API (mobilenetwork.v20220401preview.Service). A compatible replacement can be found at 'mobilenetwork.Service'.");
            }),
        },
        vendors: ["azure"],
        services: ["mobilenetwork"],
        severity: "medium",
        topics: ["api", "unstable", "preview"],
    });
})(Service || (Service = {}));
exports.Service = Service;
var Sim;
(function (Sim) {
    /**
     * Disallow the use of non-stable (Preview) Azure resouces (mobilenetwork.v20220401preview.Sim).
     *
     * @severity medium
     * @frameworks none
     * @topics api, preview, unstable
     * @link https://learn.microsoft.com/en-us/rest/api/azure/
     */
    Sim.disallowPreviewResource = compliance_policy_manager_1.policyManager.registerPolicy({
        resourceValidationPolicy: {
            name: "azurenative-mobilenetwork-v20220401preview-sim-disallow-preview-resource",
            description: "Disallow the use of non-stable (Preview) Azure resouces (mobilenetwork.v20220401preview.Sim).",
            configSchema: compliance_policy_manager_1.policyManager.policyConfigSchema,
            enforcementLevel: "advisory",
            validateResource: (0, policy_1.validateResourceOfType)(v20220401preview_7.Sim, (_, args, reportViolation) => {
                if (!compliance_policy_manager_1.policyManager.shouldEvalPolicy(args)) {
                    return;
                }
                reportViolation("Azure Sim shouldn't use an unstable API (mobilenetwork.v20220401preview.Sim). A compatible replacement can be found at 'mobilenetwork.Sim'.");
            }),
        },
        vendors: ["azure"],
        services: ["mobilenetwork"],
        severity: "medium",
        topics: ["api", "unstable", "preview"],
    });
})(Sim || (Sim = {}));
exports.Sim = Sim;
var SimGroup;
(function (SimGroup) {
    /**
     * Disallow the use of non-stable (Preview) Azure resouces (mobilenetwork.v20220401preview.SimGroup).
     *
     * @severity medium
     * @frameworks none
     * @topics api, preview, unstable
     * @link https://learn.microsoft.com/en-us/rest/api/azure/
     */
    SimGroup.disallowPreviewResource = compliance_policy_manager_1.policyManager.registerPolicy({
        resourceValidationPolicy: {
            name: "azurenative-mobilenetwork-v20220401preview-simgroup-disallow-preview-resource",
            description: "Disallow the use of non-stable (Preview) Azure resouces (mobilenetwork.v20220401preview.SimGroup).",
            configSchema: compliance_policy_manager_1.policyManager.policyConfigSchema,
            enforcementLevel: "advisory",
            validateResource: (0, policy_1.validateResourceOfType)(v20220401preview_8.SimGroup, (_, args, reportViolation) => {
                if (!compliance_policy_manager_1.policyManager.shouldEvalPolicy(args)) {
                    return;
                }
                reportViolation("Azure SimGroup shouldn't use an unstable API (mobilenetwork.v20220401preview.SimGroup). A compatible replacement can be found at 'mobilenetwork.SimGroup'.");
            }),
        },
        vendors: ["azure"],
        services: ["mobilenetwork"],
        severity: "medium",
        topics: ["api", "unstable", "preview"],
    });
})(SimGroup || (SimGroup = {}));
exports.SimGroup = SimGroup;
var SimPolicy;
(function (SimPolicy) {
    /**
     * Disallow the use of non-stable (Preview) Azure resouces (mobilenetwork.v20220401preview.SimPolicy).
     *
     * @severity medium
     * @frameworks none
     * @topics api, preview, unstable
     * @link https://learn.microsoft.com/en-us/rest/api/azure/
     */
    SimPolicy.disallowPreviewResource = compliance_policy_manager_1.policyManager.registerPolicy({
        resourceValidationPolicy: {
            name: "azurenative-mobilenetwork-v20220401preview-simpolicy-disallow-preview-resource",
            description: "Disallow the use of non-stable (Preview) Azure resouces (mobilenetwork.v20220401preview.SimPolicy).",
            configSchema: compliance_policy_manager_1.policyManager.policyConfigSchema,
            enforcementLevel: "advisory",
            validateResource: (0, policy_1.validateResourceOfType)(v20220401preview_9.SimPolicy, (_, args, reportViolation) => {
                if (!compliance_policy_manager_1.policyManager.shouldEvalPolicy(args)) {
                    return;
                }
                reportViolation("Azure SimPolicy shouldn't use an unstable API (mobilenetwork.v20220401preview.SimPolicy). A compatible replacement can be found at 'mobilenetwork.SimPolicy'.");
            }),
        },
        vendors: ["azure"],
        services: ["mobilenetwork"],
        severity: "medium",
        topics: ["api", "unstable", "preview"],
    });
})(SimPolicy || (SimPolicy = {}));
exports.SimPolicy = SimPolicy;
var Site;
(function (Site) {
    /**
     * Disallow the use of non-stable (Preview) Azure resouces (mobilenetwork.v20220401preview.Site).
     *
     * @severity medium
     * @frameworks none
     * @topics api, preview, unstable
     * @link https://learn.microsoft.com/en-us/rest/api/azure/
     */
    Site.disallowPreviewResource = compliance_policy_manager_1.policyManager.registerPolicy({
        resourceValidationPolicy: {
            name: "azurenative-mobilenetwork-v20220401preview-site-disallow-preview-resource",
            description: "Disallow the use of non-stable (Preview) Azure resouces (mobilenetwork.v20220401preview.Site).",
            configSchema: compliance_policy_manager_1.policyManager.policyConfigSchema,
            enforcementLevel: "advisory",
            validateResource: (0, policy_1.validateResourceOfType)(v20220401preview_10.Site, (_, args, reportViolation) => {
                if (!compliance_policy_manager_1.policyManager.shouldEvalPolicy(args)) {
                    return;
                }
                reportViolation("Azure Site shouldn't use an unstable API (mobilenetwork.v20220401preview.Site). A compatible replacement can be found at 'mobilenetwork.Site'.");
            }),
        },
        vendors: ["azure"],
        services: ["mobilenetwork"],
        severity: "medium",
        topics: ["api", "unstable", "preview"],
    });
})(Site || (Site = {}));
exports.Site = Site;
var Slice;
(function (Slice) {
    /**
     * Disallow the use of non-stable (Preview) Azure resouces (mobilenetwork.v20220401preview.Slice).
     *
     * @severity medium
     * @frameworks none
     * @topics api, preview, unstable
     * @link https://learn.microsoft.com/en-us/rest/api/azure/
     */
    Slice.disallowPreviewResource = compliance_policy_manager_1.policyManager.registerPolicy({
        resourceValidationPolicy: {
            name: "azurenative-mobilenetwork-v20220401preview-slice-disallow-preview-resource",
            description: "Disallow the use of non-stable (Preview) Azure resouces (mobilenetwork.v20220401preview.Slice).",
            configSchema: compliance_policy_manager_1.policyManager.policyConfigSchema,
            enforcementLevel: "advisory",
            validateResource: (0, policy_1.validateResourceOfType)(v20220401preview_11.Slice, (_, args, reportViolation) => {
                if (!compliance_policy_manager_1.policyManager.shouldEvalPolicy(args)) {
                    return;
                }
                reportViolation("Azure Slice shouldn't use an unstable API (mobilenetwork.v20220401preview.Slice). A compatible replacement can be found at 'mobilenetwork.Slice'.");
            }),
        },
        vendors: ["azure"],
        services: ["mobilenetwork"],
        severity: "medium",
        topics: ["api", "unstable", "preview"],
    });
})(Slice || (Slice = {}));
exports.Slice = Slice;
