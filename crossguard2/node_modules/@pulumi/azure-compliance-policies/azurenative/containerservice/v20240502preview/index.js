"use strict";
// Copyright 2016-2024, Pulumi Corporation.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//
// ------------------------------- WARNING -------------------------------------
// This file was programmatically generated. Do not edit unless you know what
// you're doing.
// ------------------------------- WARNING -------------------------------------
Object.defineProperty(exports, "__esModule", { value: true });
exports.UpdateRun = exports.TrustedAccessRoleBinding = exports.Snapshot = exports.PrivateEndpointConnection = exports.ManagedClusterSnapshot = exports.ManagedCluster = exports.MaintenanceConfiguration = exports.LoadBalancer = exports.FleetUpdateStrategy = exports.FleetMember = exports.Fleet = exports.AutoUpgradeProfile = exports.AgentPool = void 0;
const policy_1 = require("@pulumi/policy");
const compliance_policy_manager_1 = require("@pulumi/compliance-policy-manager");
const v20240502preview_1 = require("@pulumi/azure-native/containerservice/v20240502preview");
const v20240502preview_2 = require("@pulumi/azure-native/containerservice/v20240502preview");
const v20240502preview_3 = require("@pulumi/azure-native/containerservice/v20240502preview");
const v20240502preview_4 = require("@pulumi/azure-native/containerservice/v20240502preview");
const v20240502preview_5 = require("@pulumi/azure-native/containerservice/v20240502preview");
const v20240502preview_6 = require("@pulumi/azure-native/containerservice/v20240502preview");
const v20240502preview_7 = require("@pulumi/azure-native/containerservice/v20240502preview");
const v20240502preview_8 = require("@pulumi/azure-native/containerservice/v20240502preview");
const v20240502preview_9 = require("@pulumi/azure-native/containerservice/v20240502preview");
const v20240502preview_10 = require("@pulumi/azure-native/containerservice/v20240502preview");
const v20240502preview_11 = require("@pulumi/azure-native/containerservice/v20240502preview");
const v20240502preview_12 = require("@pulumi/azure-native/containerservice/v20240502preview");
const v20240502preview_13 = require("@pulumi/azure-native/containerservice/v20240502preview");
var AgentPool;
(function (AgentPool) {
    /**
     * Disallow the use of non-stable (Preview) Azure resouces (containerservice.v20240502preview.AgentPool).
     *
     * @severity medium
     * @frameworks none
     * @topics api, preview, unstable
     * @link https://learn.microsoft.com/en-us/rest/api/azure/
     */
    AgentPool.disallowPreviewResource = compliance_policy_manager_1.policyManager.registerPolicy({
        resourceValidationPolicy: {
            name: "azurenative-containerservice-v20240502preview-agentpool-disallow-preview-resource",
            description: "Disallow the use of non-stable (Preview) Azure resouces (containerservice.v20240502preview.AgentPool).",
            configSchema: compliance_policy_manager_1.policyManager.policyConfigSchema,
            enforcementLevel: "advisory",
            validateResource: (0, policy_1.validateResourceOfType)(v20240502preview_1.AgentPool, (_, args, reportViolation) => {
                if (!compliance_policy_manager_1.policyManager.shouldEvalPolicy(args)) {
                    return;
                }
                reportViolation("Azure AgentPool shouldn't use an unstable API (containerservice.v20240502preview.AgentPool). A compatible replacement can be found at 'containerservice.AgentPool'.");
            }),
        },
        vendors: ["azure"],
        services: ["containerservice"],
        severity: "medium",
        topics: ["api", "unstable", "preview"],
    });
})(AgentPool || (AgentPool = {}));
exports.AgentPool = AgentPool;
var AutoUpgradeProfile;
(function (AutoUpgradeProfile) {
    /**
     * Disallow the use of non-stable (Preview) Azure resouces (containerservice.v20240502preview.AutoUpgradeProfile).
     *
     * @severity medium
     * @frameworks none
     * @topics api, preview, unstable
     * @link https://learn.microsoft.com/en-us/rest/api/azure/
     */
    AutoUpgradeProfile.disallowPreviewResource = compliance_policy_manager_1.policyManager.registerPolicy({
        resourceValidationPolicy: {
            name: "azurenative-containerservice-v20240502preview-autoupgradeprofile-disallow-preview-resource",
            description: "Disallow the use of non-stable (Preview) Azure resouces (containerservice.v20240502preview.AutoUpgradeProfile).",
            configSchema: compliance_policy_manager_1.policyManager.policyConfigSchema,
            enforcementLevel: "advisory",
            validateResource: (0, policy_1.validateResourceOfType)(v20240502preview_2.AutoUpgradeProfile, (_, args, reportViolation) => {
                if (!compliance_policy_manager_1.policyManager.shouldEvalPolicy(args)) {
                    return;
                }
                reportViolation("Azure AutoUpgradeProfile shouldn't use an unstable API (containerservice.v20240502preview.AutoUpgradeProfile). A compatible replacement can be found at 'containerservice.AutoUpgradeProfile'.");
            }),
        },
        vendors: ["azure"],
        services: ["containerservice"],
        severity: "medium",
        topics: ["api", "unstable", "preview"],
    });
})(AutoUpgradeProfile || (AutoUpgradeProfile = {}));
exports.AutoUpgradeProfile = AutoUpgradeProfile;
var Fleet;
(function (Fleet) {
    /**
     * Disallow the use of non-stable (Preview) Azure resouces (containerservice.v20240502preview.Fleet).
     *
     * @severity medium
     * @frameworks none
     * @topics api, preview, unstable
     * @link https://learn.microsoft.com/en-us/rest/api/azure/
     */
    Fleet.disallowPreviewResource = compliance_policy_manager_1.policyManager.registerPolicy({
        resourceValidationPolicy: {
            name: "azurenative-containerservice-v20240502preview-fleet-disallow-preview-resource",
            description: "Disallow the use of non-stable (Preview) Azure resouces (containerservice.v20240502preview.Fleet).",
            configSchema: compliance_policy_manager_1.policyManager.policyConfigSchema,
            enforcementLevel: "advisory",
            validateResource: (0, policy_1.validateResourceOfType)(v20240502preview_3.Fleet, (_, args, reportViolation) => {
                if (!compliance_policy_manager_1.policyManager.shouldEvalPolicy(args)) {
                    return;
                }
                reportViolation("Azure Fleet shouldn't use an unstable API (containerservice.v20240502preview.Fleet). A compatible replacement can be found at 'containerservice.Fleet'.");
            }),
        },
        vendors: ["azure"],
        services: ["containerservice"],
        severity: "medium",
        topics: ["api", "unstable", "preview"],
    });
})(Fleet || (Fleet = {}));
exports.Fleet = Fleet;
var FleetMember;
(function (FleetMember) {
    /**
     * Disallow the use of non-stable (Preview) Azure resouces (containerservice.v20240502preview.FleetMember).
     *
     * @severity medium
     * @frameworks none
     * @topics api, preview, unstable
     * @link https://learn.microsoft.com/en-us/rest/api/azure/
     */
    FleetMember.disallowPreviewResource = compliance_policy_manager_1.policyManager.registerPolicy({
        resourceValidationPolicy: {
            name: "azurenative-containerservice-v20240502preview-fleetmember-disallow-preview-resource",
            description: "Disallow the use of non-stable (Preview) Azure resouces (containerservice.v20240502preview.FleetMember).",
            configSchema: compliance_policy_manager_1.policyManager.policyConfigSchema,
            enforcementLevel: "advisory",
            validateResource: (0, policy_1.validateResourceOfType)(v20240502preview_4.FleetMember, (_, args, reportViolation) => {
                if (!compliance_policy_manager_1.policyManager.shouldEvalPolicy(args)) {
                    return;
                }
                reportViolation("Azure FleetMember shouldn't use an unstable API (containerservice.v20240502preview.FleetMember). A compatible replacement can be found at 'containerservice.FleetMember'.");
            }),
        },
        vendors: ["azure"],
        services: ["containerservice"],
        severity: "medium",
        topics: ["api", "unstable", "preview"],
    });
})(FleetMember || (FleetMember = {}));
exports.FleetMember = FleetMember;
var FleetUpdateStrategy;
(function (FleetUpdateStrategy) {
    /**
     * Disallow the use of non-stable (Preview) Azure resouces (containerservice.v20240502preview.FleetUpdateStrategy).
     *
     * @severity medium
     * @frameworks none
     * @topics api, preview, unstable
     * @link https://learn.microsoft.com/en-us/rest/api/azure/
     */
    FleetUpdateStrategy.disallowPreviewResource = compliance_policy_manager_1.policyManager.registerPolicy({
        resourceValidationPolicy: {
            name: "azurenative-containerservice-v20240502preview-fleetupdatestrategy-disallow-preview-resource",
            description: "Disallow the use of non-stable (Preview) Azure resouces (containerservice.v20240502preview.FleetUpdateStrategy).",
            configSchema: compliance_policy_manager_1.policyManager.policyConfigSchema,
            enforcementLevel: "advisory",
            validateResource: (0, policy_1.validateResourceOfType)(v20240502preview_5.FleetUpdateStrategy, (_, args, reportViolation) => {
                if (!compliance_policy_manager_1.policyManager.shouldEvalPolicy(args)) {
                    return;
                }
                reportViolation("Azure FleetUpdateStrategy shouldn't use an unstable API (containerservice.v20240502preview.FleetUpdateStrategy). A compatible replacement can be found at 'containerservice.FleetUpdateStrategy'.");
            }),
        },
        vendors: ["azure"],
        services: ["containerservice"],
        severity: "medium",
        topics: ["api", "unstable", "preview"],
    });
})(FleetUpdateStrategy || (FleetUpdateStrategy = {}));
exports.FleetUpdateStrategy = FleetUpdateStrategy;
var LoadBalancer;
(function (LoadBalancer) {
    /**
     * Disallow the use of non-stable (Preview) Azure resouces (containerservice.v20240502preview.LoadBalancer).
     *
     * @severity medium
     * @frameworks none
     * @topics api, preview, unstable
     * @link https://learn.microsoft.com/en-us/rest/api/azure/
     */
    LoadBalancer.disallowPreviewResource = compliance_policy_manager_1.policyManager.registerPolicy({
        resourceValidationPolicy: {
            name: "azurenative-containerservice-v20240502preview-loadbalancer-disallow-preview-resource",
            description: "Disallow the use of non-stable (Preview) Azure resouces (containerservice.v20240502preview.LoadBalancer).",
            configSchema: compliance_policy_manager_1.policyManager.policyConfigSchema,
            enforcementLevel: "advisory",
            validateResource: (0, policy_1.validateResourceOfType)(v20240502preview_6.LoadBalancer, (_, args, reportViolation) => {
                if (!compliance_policy_manager_1.policyManager.shouldEvalPolicy(args)) {
                    return;
                }
                reportViolation("Azure LoadBalancer shouldn't use an unstable API (containerservice.v20240502preview.LoadBalancer). A compatible replacement can be found at 'containerservice.LoadBalancer'.");
            }),
        },
        vendors: ["azure"],
        services: ["containerservice"],
        severity: "medium",
        topics: ["api", "unstable", "preview"],
    });
})(LoadBalancer || (LoadBalancer = {}));
exports.LoadBalancer = LoadBalancer;
var MaintenanceConfiguration;
(function (MaintenanceConfiguration) {
    /**
     * Disallow the use of non-stable (Preview) Azure resouces (containerservice.v20240502preview.MaintenanceConfiguration).
     *
     * @severity medium
     * @frameworks none
     * @topics api, preview, unstable
     * @link https://learn.microsoft.com/en-us/rest/api/azure/
     */
    MaintenanceConfiguration.disallowPreviewResource = compliance_policy_manager_1.policyManager.registerPolicy({
        resourceValidationPolicy: {
            name: "azurenative-containerservice-v20240502preview-maintenanceconfiguration-disallow-preview-resource",
            description: "Disallow the use of non-stable (Preview) Azure resouces (containerservice.v20240502preview.MaintenanceConfiguration).",
            configSchema: compliance_policy_manager_1.policyManager.policyConfigSchema,
            enforcementLevel: "advisory",
            validateResource: (0, policy_1.validateResourceOfType)(v20240502preview_7.MaintenanceConfiguration, (_, args, reportViolation) => {
                if (!compliance_policy_manager_1.policyManager.shouldEvalPolicy(args)) {
                    return;
                }
                reportViolation("Azure MaintenanceConfiguration shouldn't use an unstable API (containerservice.v20240502preview.MaintenanceConfiguration). A compatible replacement can be found at 'containerservice.MaintenanceConfiguration'.");
            }),
        },
        vendors: ["azure"],
        services: ["containerservice"],
        severity: "medium",
        topics: ["api", "unstable", "preview"],
    });
})(MaintenanceConfiguration || (MaintenanceConfiguration = {}));
exports.MaintenanceConfiguration = MaintenanceConfiguration;
var ManagedCluster;
(function (ManagedCluster) {
    /**
     * Disallow the use of non-stable (Preview) Azure resouces (containerservice.v20240502preview.ManagedCluster).
     *
     * @severity medium
     * @frameworks none
     * @topics api, preview, unstable
     * @link https://learn.microsoft.com/en-us/rest/api/azure/
     */
    ManagedCluster.disallowPreviewResource = compliance_policy_manager_1.policyManager.registerPolicy({
        resourceValidationPolicy: {
            name: "azurenative-containerservice-v20240502preview-managedcluster-disallow-preview-resource",
            description: "Disallow the use of non-stable (Preview) Azure resouces (containerservice.v20240502preview.ManagedCluster).",
            configSchema: compliance_policy_manager_1.policyManager.policyConfigSchema,
            enforcementLevel: "advisory",
            validateResource: (0, policy_1.validateResourceOfType)(v20240502preview_8.ManagedCluster, (_, args, reportViolation) => {
                if (!compliance_policy_manager_1.policyManager.shouldEvalPolicy(args)) {
                    return;
                }
                reportViolation("Azure ManagedCluster shouldn't use an unstable API (containerservice.v20240502preview.ManagedCluster). A compatible replacement can be found at 'containerservice.ManagedCluster'.");
            }),
        },
        vendors: ["azure"],
        services: ["containerservice"],
        severity: "medium",
        topics: ["api", "unstable", "preview"],
    });
})(ManagedCluster || (ManagedCluster = {}));
exports.ManagedCluster = ManagedCluster;
var ManagedClusterSnapshot;
(function (ManagedClusterSnapshot) {
    /**
     * Disallow the use of non-stable (Preview) Azure resouces (containerservice.v20240502preview.ManagedClusterSnapshot).
     *
     * @severity medium
     * @frameworks none
     * @topics api, preview, unstable
     * @link https://learn.microsoft.com/en-us/rest/api/azure/
     */
    ManagedClusterSnapshot.disallowPreviewResource = compliance_policy_manager_1.policyManager.registerPolicy({
        resourceValidationPolicy: {
            name: "azurenative-containerservice-v20240502preview-managedclustersnapshot-disallow-preview-resource",
            description: "Disallow the use of non-stable (Preview) Azure resouces (containerservice.v20240502preview.ManagedClusterSnapshot).",
            configSchema: compliance_policy_manager_1.policyManager.policyConfigSchema,
            enforcementLevel: "advisory",
            validateResource: (0, policy_1.validateResourceOfType)(v20240502preview_9.ManagedClusterSnapshot, (_, args, reportViolation) => {
                if (!compliance_policy_manager_1.policyManager.shouldEvalPolicy(args)) {
                    return;
                }
                reportViolation("Azure ManagedClusterSnapshot shouldn't use an unstable API (containerservice.v20240502preview.ManagedClusterSnapshot). A compatible replacement can be found at 'containerservice.ManagedClusterSnapshot'.");
            }),
        },
        vendors: ["azure"],
        services: ["containerservice"],
        severity: "medium",
        topics: ["api", "unstable", "preview"],
    });
})(ManagedClusterSnapshot || (ManagedClusterSnapshot = {}));
exports.ManagedClusterSnapshot = ManagedClusterSnapshot;
var PrivateEndpointConnection;
(function (PrivateEndpointConnection) {
    /**
     * Disallow the use of non-stable (Preview) Azure resouces (containerservice.v20240502preview.PrivateEndpointConnection).
     *
     * @severity medium
     * @frameworks none
     * @topics api, preview, unstable
     * @link https://learn.microsoft.com/en-us/rest/api/azure/
     */
    PrivateEndpointConnection.disallowPreviewResource = compliance_policy_manager_1.policyManager.registerPolicy({
        resourceValidationPolicy: {
            name: "azurenative-containerservice-v20240502preview-privateendpointconnection-disallow-preview-resource",
            description: "Disallow the use of non-stable (Preview) Azure resouces (containerservice.v20240502preview.PrivateEndpointConnection).",
            configSchema: compliance_policy_manager_1.policyManager.policyConfigSchema,
            enforcementLevel: "advisory",
            validateResource: (0, policy_1.validateResourceOfType)(v20240502preview_10.PrivateEndpointConnection, (_, args, reportViolation) => {
                if (!compliance_policy_manager_1.policyManager.shouldEvalPolicy(args)) {
                    return;
                }
                reportViolation("Azure PrivateEndpointConnection shouldn't use an unstable API (containerservice.v20240502preview.PrivateEndpointConnection). A compatible replacement can be found at 'containerservice.PrivateEndpointConnection'.");
            }),
        },
        vendors: ["azure"],
        services: ["containerservice"],
        severity: "medium",
        topics: ["api", "unstable", "preview"],
    });
})(PrivateEndpointConnection || (PrivateEndpointConnection = {}));
exports.PrivateEndpointConnection = PrivateEndpointConnection;
var Snapshot;
(function (Snapshot) {
    /**
     * Disallow the use of non-stable (Preview) Azure resouces (containerservice.v20240502preview.Snapshot).
     *
     * @severity medium
     * @frameworks none
     * @topics api, preview, unstable
     * @link https://learn.microsoft.com/en-us/rest/api/azure/
     */
    Snapshot.disallowPreviewResource = compliance_policy_manager_1.policyManager.registerPolicy({
        resourceValidationPolicy: {
            name: "azurenative-containerservice-v20240502preview-snapshot-disallow-preview-resource",
            description: "Disallow the use of non-stable (Preview) Azure resouces (containerservice.v20240502preview.Snapshot).",
            configSchema: compliance_policy_manager_1.policyManager.policyConfigSchema,
            enforcementLevel: "advisory",
            validateResource: (0, policy_1.validateResourceOfType)(v20240502preview_11.Snapshot, (_, args, reportViolation) => {
                if (!compliance_policy_manager_1.policyManager.shouldEvalPolicy(args)) {
                    return;
                }
                reportViolation("Azure Snapshot shouldn't use an unstable API (containerservice.v20240502preview.Snapshot). A compatible replacement can be found at 'containerservice.Snapshot'.");
            }),
        },
        vendors: ["azure"],
        services: ["containerservice"],
        severity: "medium",
        topics: ["api", "unstable", "preview"],
    });
})(Snapshot || (Snapshot = {}));
exports.Snapshot = Snapshot;
var TrustedAccessRoleBinding;
(function (TrustedAccessRoleBinding) {
    /**
     * Disallow the use of non-stable (Preview) Azure resouces (containerservice.v20240502preview.TrustedAccessRoleBinding).
     *
     * @severity medium
     * @frameworks none
     * @topics api, preview, unstable
     * @link https://learn.microsoft.com/en-us/rest/api/azure/
     */
    TrustedAccessRoleBinding.disallowPreviewResource = compliance_policy_manager_1.policyManager.registerPolicy({
        resourceValidationPolicy: {
            name: "azurenative-containerservice-v20240502preview-trustedaccessrolebinding-disallow-preview-resource",
            description: "Disallow the use of non-stable (Preview) Azure resouces (containerservice.v20240502preview.TrustedAccessRoleBinding).",
            configSchema: compliance_policy_manager_1.policyManager.policyConfigSchema,
            enforcementLevel: "advisory",
            validateResource: (0, policy_1.validateResourceOfType)(v20240502preview_12.TrustedAccessRoleBinding, (_, args, reportViolation) => {
                if (!compliance_policy_manager_1.policyManager.shouldEvalPolicy(args)) {
                    return;
                }
                reportViolation("Azure TrustedAccessRoleBinding shouldn't use an unstable API (containerservice.v20240502preview.TrustedAccessRoleBinding). A compatible replacement can be found at 'containerservice.TrustedAccessRoleBinding'.");
            }),
        },
        vendors: ["azure"],
        services: ["containerservice"],
        severity: "medium",
        topics: ["api", "unstable", "preview"],
    });
})(TrustedAccessRoleBinding || (TrustedAccessRoleBinding = {}));
exports.TrustedAccessRoleBinding = TrustedAccessRoleBinding;
var UpdateRun;
(function (UpdateRun) {
    /**
     * Disallow the use of non-stable (Preview) Azure resouces (containerservice.v20240502preview.UpdateRun).
     *
     * @severity medium
     * @frameworks none
     * @topics api, preview, unstable
     * @link https://learn.microsoft.com/en-us/rest/api/azure/
     */
    UpdateRun.disallowPreviewResource = compliance_policy_manager_1.policyManager.registerPolicy({
        resourceValidationPolicy: {
            name: "azurenative-containerservice-v20240502preview-updaterun-disallow-preview-resource",
            description: "Disallow the use of non-stable (Preview) Azure resouces (containerservice.v20240502preview.UpdateRun).",
            configSchema: compliance_policy_manager_1.policyManager.policyConfigSchema,
            enforcementLevel: "advisory",
            validateResource: (0, policy_1.validateResourceOfType)(v20240502preview_13.UpdateRun, (_, args, reportViolation) => {
                if (!compliance_policy_manager_1.policyManager.shouldEvalPolicy(args)) {
                    return;
                }
                reportViolation("Azure UpdateRun shouldn't use an unstable API (containerservice.v20240502preview.UpdateRun). A compatible replacement can be found at 'containerservice.UpdateRun'.");
            }),
        },
        vendors: ["azure"],
        services: ["containerservice"],
        severity: "medium",
        topics: ["api", "unstable", "preview"],
    });
})(UpdateRun || (UpdateRun = {}));
exports.UpdateRun = UpdateRun;
