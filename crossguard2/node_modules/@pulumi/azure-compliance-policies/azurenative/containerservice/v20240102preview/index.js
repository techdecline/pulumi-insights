"use strict";
// Copyright 2016-2024, Pulumi Corporation.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//
// ------------------------------- WARNING -------------------------------------
// This file was programmatically generated. Do not edit unless you know what
// you're doing.
// ------------------------------- WARNING -------------------------------------
Object.defineProperty(exports, "__esModule", { value: true });
exports.TrustedAccessRoleBinding = exports.Snapshot = exports.PrivateEndpointConnection = exports.ManagedClusterSnapshot = exports.ManagedCluster = exports.MaintenanceConfiguration = exports.AgentPool = void 0;
const policy_1 = require("@pulumi/policy");
const compliance_policy_manager_1 = require("@pulumi/compliance-policy-manager");
const v20240102preview_1 = require("@pulumi/azure-native/containerservice/v20240102preview");
const v20240102preview_2 = require("@pulumi/azure-native/containerservice/v20240102preview");
const v20240102preview_3 = require("@pulumi/azure-native/containerservice/v20240102preview");
const v20240102preview_4 = require("@pulumi/azure-native/containerservice/v20240102preview");
const v20240102preview_5 = require("@pulumi/azure-native/containerservice/v20240102preview");
const v20240102preview_6 = require("@pulumi/azure-native/containerservice/v20240102preview");
const v20240102preview_7 = require("@pulumi/azure-native/containerservice/v20240102preview");
var AgentPool;
(function (AgentPool) {
    /**
     * Disallow the use of non-stable (Preview) Azure resouces (containerservice.v20240102preview.AgentPool).
     *
     * @severity medium
     * @frameworks none
     * @topics api, preview, unstable
     * @link https://learn.microsoft.com/en-us/rest/api/azure/
     */
    AgentPool.disallowPreviewResource = compliance_policy_manager_1.policyManager.registerPolicy({
        resourceValidationPolicy: {
            name: "azurenative-containerservice-v20240102preview-agentpool-disallow-preview-resource",
            description: "Disallow the use of non-stable (Preview) Azure resouces (containerservice.v20240102preview.AgentPool).",
            configSchema: compliance_policy_manager_1.policyManager.policyConfigSchema,
            enforcementLevel: "advisory",
            validateResource: (0, policy_1.validateResourceOfType)(v20240102preview_1.AgentPool, (_, args, reportViolation) => {
                if (!compliance_policy_manager_1.policyManager.shouldEvalPolicy(args)) {
                    return;
                }
                reportViolation("Azure AgentPool shouldn't use an unstable API (containerservice.v20240102preview.AgentPool). A compatible replacement can be found at 'containerservice.AgentPool'.");
            }),
        },
        vendors: ["azure"],
        services: ["containerservice"],
        severity: "medium",
        topics: ["api", "unstable", "preview"],
    });
})(AgentPool || (AgentPool = {}));
exports.AgentPool = AgentPool;
var MaintenanceConfiguration;
(function (MaintenanceConfiguration) {
    /**
     * Disallow the use of non-stable (Preview) Azure resouces (containerservice.v20240102preview.MaintenanceConfiguration).
     *
     * @severity medium
     * @frameworks none
     * @topics api, preview, unstable
     * @link https://learn.microsoft.com/en-us/rest/api/azure/
     */
    MaintenanceConfiguration.disallowPreviewResource = compliance_policy_manager_1.policyManager.registerPolicy({
        resourceValidationPolicy: {
            name: "azurenative-containerservice-v20240102preview-maintenanceconfiguration-disallow-preview-resource",
            description: "Disallow the use of non-stable (Preview) Azure resouces (containerservice.v20240102preview.MaintenanceConfiguration).",
            configSchema: compliance_policy_manager_1.policyManager.policyConfigSchema,
            enforcementLevel: "advisory",
            validateResource: (0, policy_1.validateResourceOfType)(v20240102preview_2.MaintenanceConfiguration, (_, args, reportViolation) => {
                if (!compliance_policy_manager_1.policyManager.shouldEvalPolicy(args)) {
                    return;
                }
                reportViolation("Azure MaintenanceConfiguration shouldn't use an unstable API (containerservice.v20240102preview.MaintenanceConfiguration). A compatible replacement can be found at 'containerservice.MaintenanceConfiguration'.");
            }),
        },
        vendors: ["azure"],
        services: ["containerservice"],
        severity: "medium",
        topics: ["api", "unstable", "preview"],
    });
})(MaintenanceConfiguration || (MaintenanceConfiguration = {}));
exports.MaintenanceConfiguration = MaintenanceConfiguration;
var ManagedCluster;
(function (ManagedCluster) {
    /**
     * Disallow the use of non-stable (Preview) Azure resouces (containerservice.v20240102preview.ManagedCluster).
     *
     * @severity medium
     * @frameworks none
     * @topics api, preview, unstable
     * @link https://learn.microsoft.com/en-us/rest/api/azure/
     */
    ManagedCluster.disallowPreviewResource = compliance_policy_manager_1.policyManager.registerPolicy({
        resourceValidationPolicy: {
            name: "azurenative-containerservice-v20240102preview-managedcluster-disallow-preview-resource",
            description: "Disallow the use of non-stable (Preview) Azure resouces (containerservice.v20240102preview.ManagedCluster).",
            configSchema: compliance_policy_manager_1.policyManager.policyConfigSchema,
            enforcementLevel: "advisory",
            validateResource: (0, policy_1.validateResourceOfType)(v20240102preview_3.ManagedCluster, (_, args, reportViolation) => {
                if (!compliance_policy_manager_1.policyManager.shouldEvalPolicy(args)) {
                    return;
                }
                reportViolation("Azure ManagedCluster shouldn't use an unstable API (containerservice.v20240102preview.ManagedCluster). A compatible replacement can be found at 'containerservice.ManagedCluster'.");
            }),
        },
        vendors: ["azure"],
        services: ["containerservice"],
        severity: "medium",
        topics: ["api", "unstable", "preview"],
    });
})(ManagedCluster || (ManagedCluster = {}));
exports.ManagedCluster = ManagedCluster;
var ManagedClusterSnapshot;
(function (ManagedClusterSnapshot) {
    /**
     * Disallow the use of non-stable (Preview) Azure resouces (containerservice.v20240102preview.ManagedClusterSnapshot).
     *
     * @severity medium
     * @frameworks none
     * @topics api, preview, unstable
     * @link https://learn.microsoft.com/en-us/rest/api/azure/
     */
    ManagedClusterSnapshot.disallowPreviewResource = compliance_policy_manager_1.policyManager.registerPolicy({
        resourceValidationPolicy: {
            name: "azurenative-containerservice-v20240102preview-managedclustersnapshot-disallow-preview-resource",
            description: "Disallow the use of non-stable (Preview) Azure resouces (containerservice.v20240102preview.ManagedClusterSnapshot).",
            configSchema: compliance_policy_manager_1.policyManager.policyConfigSchema,
            enforcementLevel: "advisory",
            validateResource: (0, policy_1.validateResourceOfType)(v20240102preview_4.ManagedClusterSnapshot, (_, args, reportViolation) => {
                if (!compliance_policy_manager_1.policyManager.shouldEvalPolicy(args)) {
                    return;
                }
                reportViolation("Azure ManagedClusterSnapshot shouldn't use an unstable API (containerservice.v20240102preview.ManagedClusterSnapshot). A compatible replacement can be found at 'containerservice.ManagedClusterSnapshot'.");
            }),
        },
        vendors: ["azure"],
        services: ["containerservice"],
        severity: "medium",
        topics: ["api", "unstable", "preview"],
    });
})(ManagedClusterSnapshot || (ManagedClusterSnapshot = {}));
exports.ManagedClusterSnapshot = ManagedClusterSnapshot;
var PrivateEndpointConnection;
(function (PrivateEndpointConnection) {
    /**
     * Disallow the use of non-stable (Preview) Azure resouces (containerservice.v20240102preview.PrivateEndpointConnection).
     *
     * @severity medium
     * @frameworks none
     * @topics api, preview, unstable
     * @link https://learn.microsoft.com/en-us/rest/api/azure/
     */
    PrivateEndpointConnection.disallowPreviewResource = compliance_policy_manager_1.policyManager.registerPolicy({
        resourceValidationPolicy: {
            name: "azurenative-containerservice-v20240102preview-privateendpointconnection-disallow-preview-resource",
            description: "Disallow the use of non-stable (Preview) Azure resouces (containerservice.v20240102preview.PrivateEndpointConnection).",
            configSchema: compliance_policy_manager_1.policyManager.policyConfigSchema,
            enforcementLevel: "advisory",
            validateResource: (0, policy_1.validateResourceOfType)(v20240102preview_5.PrivateEndpointConnection, (_, args, reportViolation) => {
                if (!compliance_policy_manager_1.policyManager.shouldEvalPolicy(args)) {
                    return;
                }
                reportViolation("Azure PrivateEndpointConnection shouldn't use an unstable API (containerservice.v20240102preview.PrivateEndpointConnection). A compatible replacement can be found at 'containerservice.PrivateEndpointConnection'.");
            }),
        },
        vendors: ["azure"],
        services: ["containerservice"],
        severity: "medium",
        topics: ["api", "unstable", "preview"],
    });
})(PrivateEndpointConnection || (PrivateEndpointConnection = {}));
exports.PrivateEndpointConnection = PrivateEndpointConnection;
var Snapshot;
(function (Snapshot) {
    /**
     * Disallow the use of non-stable (Preview) Azure resouces (containerservice.v20240102preview.Snapshot).
     *
     * @severity medium
     * @frameworks none
     * @topics api, preview, unstable
     * @link https://learn.microsoft.com/en-us/rest/api/azure/
     */
    Snapshot.disallowPreviewResource = compliance_policy_manager_1.policyManager.registerPolicy({
        resourceValidationPolicy: {
            name: "azurenative-containerservice-v20240102preview-snapshot-disallow-preview-resource",
            description: "Disallow the use of non-stable (Preview) Azure resouces (containerservice.v20240102preview.Snapshot).",
            configSchema: compliance_policy_manager_1.policyManager.policyConfigSchema,
            enforcementLevel: "advisory",
            validateResource: (0, policy_1.validateResourceOfType)(v20240102preview_6.Snapshot, (_, args, reportViolation) => {
                if (!compliance_policy_manager_1.policyManager.shouldEvalPolicy(args)) {
                    return;
                }
                reportViolation("Azure Snapshot shouldn't use an unstable API (containerservice.v20240102preview.Snapshot). A compatible replacement can be found at 'containerservice.Snapshot'.");
            }),
        },
        vendors: ["azure"],
        services: ["containerservice"],
        severity: "medium",
        topics: ["api", "unstable", "preview"],
    });
})(Snapshot || (Snapshot = {}));
exports.Snapshot = Snapshot;
var TrustedAccessRoleBinding;
(function (TrustedAccessRoleBinding) {
    /**
     * Disallow the use of non-stable (Preview) Azure resouces (containerservice.v20240102preview.TrustedAccessRoleBinding).
     *
     * @severity medium
     * @frameworks none
     * @topics api, preview, unstable
     * @link https://learn.microsoft.com/en-us/rest/api/azure/
     */
    TrustedAccessRoleBinding.disallowPreviewResource = compliance_policy_manager_1.policyManager.registerPolicy({
        resourceValidationPolicy: {
            name: "azurenative-containerservice-v20240102preview-trustedaccessrolebinding-disallow-preview-resource",
            description: "Disallow the use of non-stable (Preview) Azure resouces (containerservice.v20240102preview.TrustedAccessRoleBinding).",
            configSchema: compliance_policy_manager_1.policyManager.policyConfigSchema,
            enforcementLevel: "advisory",
            validateResource: (0, policy_1.validateResourceOfType)(v20240102preview_7.TrustedAccessRoleBinding, (_, args, reportViolation) => {
                if (!compliance_policy_manager_1.policyManager.shouldEvalPolicy(args)) {
                    return;
                }
                reportViolation("Azure TrustedAccessRoleBinding shouldn't use an unstable API (containerservice.v20240102preview.TrustedAccessRoleBinding). A compatible replacement can be found at 'containerservice.TrustedAccessRoleBinding'.");
            }),
        },
        vendors: ["azure"],
        services: ["containerservice"],
        severity: "medium",
        topics: ["api", "unstable", "preview"],
    });
})(TrustedAccessRoleBinding || (TrustedAccessRoleBinding = {}));
exports.TrustedAccessRoleBinding = TrustedAccessRoleBinding;
