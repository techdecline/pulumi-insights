"use strict";
// Copyright 2016-2024, Pulumi Corporation.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//
// ------------------------------- WARNING -------------------------------------
// This file was programmatically generated. Do not edit unless you know what
// you're doing.
// ------------------------------- WARNING -------------------------------------
Object.defineProperty(exports, "__esModule", { value: true });
exports.SapLandscapeMonitor = exports.ProviderInstance = exports.Monitor = exports.Alert = void 0;
const policy_1 = require("@pulumi/policy");
const compliance_policy_manager_1 = require("@pulumi/compliance-policy-manager");
const v20240201preview_1 = require("@pulumi/azure-native/workloads/v20240201preview");
const v20240201preview_2 = require("@pulumi/azure-native/workloads/v20240201preview");
const v20240201preview_3 = require("@pulumi/azure-native/workloads/v20240201preview");
const v20240201preview_4 = require("@pulumi/azure-native/workloads/v20240201preview");
var Alert;
(function (Alert) {
    /**
     * Disallow the use of non-stable (Preview) Azure resouces (workloads.v20240201preview.Alert).
     *
     * @severity medium
     * @frameworks none
     * @topics api, preview, unstable
     * @link https://learn.microsoft.com/en-us/rest/api/azure/
     */
    Alert.disallowPreviewResource = compliance_policy_manager_1.policyManager.registerPolicy({
        resourceValidationPolicy: {
            name: "azurenative-workloads-v20240201preview-alert-disallow-preview-resource",
            description: "Disallow the use of non-stable (Preview) Azure resouces (workloads.v20240201preview.Alert).",
            configSchema: compliance_policy_manager_1.policyManager.policyConfigSchema,
            enforcementLevel: "advisory",
            validateResource: (0, policy_1.validateResourceOfType)(v20240201preview_1.Alert, (_, args, reportViolation) => {
                if (!compliance_policy_manager_1.policyManager.shouldEvalPolicy(args)) {
                    return;
                }
                reportViolation("Azure Alert shouldn't use an unstable API (workloads.v20240201preview.Alert). A compatible replacement can be found at 'workloads.Alert'.");
            }),
        },
        vendors: ["azure"],
        services: ["workloads"],
        severity: "medium",
        topics: ["api", "unstable", "preview"],
    });
})(Alert || (Alert = {}));
exports.Alert = Alert;
var Monitor;
(function (Monitor) {
    /**
     * Disallow the use of non-stable (Preview) Azure resouces (workloads.v20240201preview.Monitor).
     *
     * @severity medium
     * @frameworks none
     * @topics api, preview, unstable
     * @link https://learn.microsoft.com/en-us/rest/api/azure/
     */
    Monitor.disallowPreviewResource = compliance_policy_manager_1.policyManager.registerPolicy({
        resourceValidationPolicy: {
            name: "azurenative-workloads-v20240201preview-monitor-disallow-preview-resource",
            description: "Disallow the use of non-stable (Preview) Azure resouces (workloads.v20240201preview.Monitor).",
            configSchema: compliance_policy_manager_1.policyManager.policyConfigSchema,
            enforcementLevel: "advisory",
            validateResource: (0, policy_1.validateResourceOfType)(v20240201preview_2.Monitor, (_, args, reportViolation) => {
                if (!compliance_policy_manager_1.policyManager.shouldEvalPolicy(args)) {
                    return;
                }
                reportViolation("Azure Monitor shouldn't use an unstable API (workloads.v20240201preview.Monitor). A compatible replacement can be found at 'workloads.Monitor'.");
            }),
        },
        vendors: ["azure"],
        services: ["workloads"],
        severity: "medium",
        topics: ["api", "unstable", "preview"],
    });
})(Monitor || (Monitor = {}));
exports.Monitor = Monitor;
var ProviderInstance;
(function (ProviderInstance) {
    /**
     * Disallow the use of non-stable (Preview) Azure resouces (workloads.v20240201preview.ProviderInstance).
     *
     * @severity medium
     * @frameworks none
     * @topics api, preview, unstable
     * @link https://learn.microsoft.com/en-us/rest/api/azure/
     */
    ProviderInstance.disallowPreviewResource = compliance_policy_manager_1.policyManager.registerPolicy({
        resourceValidationPolicy: {
            name: "azurenative-workloads-v20240201preview-providerinstance-disallow-preview-resource",
            description: "Disallow the use of non-stable (Preview) Azure resouces (workloads.v20240201preview.ProviderInstance).",
            configSchema: compliance_policy_manager_1.policyManager.policyConfigSchema,
            enforcementLevel: "advisory",
            validateResource: (0, policy_1.validateResourceOfType)(v20240201preview_3.ProviderInstance, (_, args, reportViolation) => {
                if (!compliance_policy_manager_1.policyManager.shouldEvalPolicy(args)) {
                    return;
                }
                reportViolation("Azure ProviderInstance shouldn't use an unstable API (workloads.v20240201preview.ProviderInstance). A compatible replacement can be found at 'workloads.ProviderInstance'.");
            }),
        },
        vendors: ["azure"],
        services: ["workloads"],
        severity: "medium",
        topics: ["api", "unstable", "preview"],
    });
})(ProviderInstance || (ProviderInstance = {}));
exports.ProviderInstance = ProviderInstance;
var SapLandscapeMonitor;
(function (SapLandscapeMonitor) {
    /**
     * Disallow the use of non-stable (Preview) Azure resouces (workloads.v20240201preview.SapLandscapeMonitor).
     *
     * @severity medium
     * @frameworks none
     * @topics api, preview, unstable
     * @link https://learn.microsoft.com/en-us/rest/api/azure/
     */
    SapLandscapeMonitor.disallowPreviewResource = compliance_policy_manager_1.policyManager.registerPolicy({
        resourceValidationPolicy: {
            name: "azurenative-workloads-v20240201preview-saplandscapemonitor-disallow-preview-resource",
            description: "Disallow the use of non-stable (Preview) Azure resouces (workloads.v20240201preview.SapLandscapeMonitor).",
            configSchema: compliance_policy_manager_1.policyManager.policyConfigSchema,
            enforcementLevel: "advisory",
            validateResource: (0, policy_1.validateResourceOfType)(v20240201preview_4.SapLandscapeMonitor, (_, args, reportViolation) => {
                if (!compliance_policy_manager_1.policyManager.shouldEvalPolicy(args)) {
                    return;
                }
                reportViolation("Azure SapLandscapeMonitor shouldn't use an unstable API (workloads.v20240201preview.SapLandscapeMonitor). A compatible replacement can be found at 'workloads.SapLandscapeMonitor'.");
            }),
        },
        vendors: ["azure"],
        services: ["workloads"],
        severity: "medium",
        topics: ["api", "unstable", "preview"],
    });
})(SapLandscapeMonitor || (SapLandscapeMonitor = {}));
exports.SapLandscapeMonitor = SapLandscapeMonitor;
