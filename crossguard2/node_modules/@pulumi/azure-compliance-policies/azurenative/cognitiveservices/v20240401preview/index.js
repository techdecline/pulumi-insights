"use strict";
// Copyright 2016-2024, Pulumi Corporation.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//
// ------------------------------- WARNING -------------------------------------
// This file was programmatically generated. Do not edit unless you know what
// you're doing.
// ------------------------------- WARNING -------------------------------------
Object.defineProperty(exports, "__esModule", { value: true });
exports.SharedCommitmentPlan = exports.RaiPolicy = exports.RaiBlocklistItem = exports.RaiBlocklist = exports.PrivateEndpointConnection = exports.EncryptionScope = exports.Deployment = exports.CommitmentPlanAssociation = exports.CommitmentPlan = exports.Account = void 0;
const policy_1 = require("@pulumi/policy");
const compliance_policy_manager_1 = require("@pulumi/compliance-policy-manager");
const v20240401preview_1 = require("@pulumi/azure-native/cognitiveservices/v20240401preview");
const v20240401preview_2 = require("@pulumi/azure-native/cognitiveservices/v20240401preview");
const v20240401preview_3 = require("@pulumi/azure-native/cognitiveservices/v20240401preview");
const v20240401preview_4 = require("@pulumi/azure-native/cognitiveservices/v20240401preview");
const v20240401preview_5 = require("@pulumi/azure-native/cognitiveservices/v20240401preview");
const v20240401preview_6 = require("@pulumi/azure-native/cognitiveservices/v20240401preview");
const v20240401preview_7 = require("@pulumi/azure-native/cognitiveservices/v20240401preview");
const v20240401preview_8 = require("@pulumi/azure-native/cognitiveservices/v20240401preview");
const v20240401preview_9 = require("@pulumi/azure-native/cognitiveservices/v20240401preview");
const v20240401preview_10 = require("@pulumi/azure-native/cognitiveservices/v20240401preview");
var Account;
(function (Account) {
    /**
     * Disallow the use of non-stable (Preview) Azure resouces (cognitiveservices.v20240401preview.Account).
     *
     * @severity medium
     * @frameworks none
     * @topics api, preview, unstable
     * @link https://learn.microsoft.com/en-us/rest/api/azure/
     */
    Account.disallowPreviewResource = compliance_policy_manager_1.policyManager.registerPolicy({
        resourceValidationPolicy: {
            name: "azurenative-cognitiveservices-v20240401preview-account-disallow-preview-resource",
            description: "Disallow the use of non-stable (Preview) Azure resouces (cognitiveservices.v20240401preview.Account).",
            configSchema: compliance_policy_manager_1.policyManager.policyConfigSchema,
            enforcementLevel: "advisory",
            validateResource: (0, policy_1.validateResourceOfType)(v20240401preview_1.Account, (_, args, reportViolation) => {
                if (!compliance_policy_manager_1.policyManager.shouldEvalPolicy(args)) {
                    return;
                }
                reportViolation("Azure Account shouldn't use an unstable API (cognitiveservices.v20240401preview.Account). A compatible replacement can be found at 'cognitiveservices.Account'.");
            }),
        },
        vendors: ["azure"],
        services: ["cognitiveservices"],
        severity: "medium",
        topics: ["api", "unstable", "preview"],
    });
})(Account || (Account = {}));
exports.Account = Account;
var CommitmentPlan;
(function (CommitmentPlan) {
    /**
     * Disallow the use of non-stable (Preview) Azure resouces (cognitiveservices.v20240401preview.CommitmentPlan).
     *
     * @severity medium
     * @frameworks none
     * @topics api, preview, unstable
     * @link https://learn.microsoft.com/en-us/rest/api/azure/
     */
    CommitmentPlan.disallowPreviewResource = compliance_policy_manager_1.policyManager.registerPolicy({
        resourceValidationPolicy: {
            name: "azurenative-cognitiveservices-v20240401preview-commitmentplan-disallow-preview-resource",
            description: "Disallow the use of non-stable (Preview) Azure resouces (cognitiveservices.v20240401preview.CommitmentPlan).",
            configSchema: compliance_policy_manager_1.policyManager.policyConfigSchema,
            enforcementLevel: "advisory",
            validateResource: (0, policy_1.validateResourceOfType)(v20240401preview_2.CommitmentPlan, (_, args, reportViolation) => {
                if (!compliance_policy_manager_1.policyManager.shouldEvalPolicy(args)) {
                    return;
                }
                reportViolation("Azure CommitmentPlan shouldn't use an unstable API (cognitiveservices.v20240401preview.CommitmentPlan). A compatible replacement can be found at 'cognitiveservices.CommitmentPlan'.");
            }),
        },
        vendors: ["azure"],
        services: ["cognitiveservices"],
        severity: "medium",
        topics: ["api", "unstable", "preview"],
    });
})(CommitmentPlan || (CommitmentPlan = {}));
exports.CommitmentPlan = CommitmentPlan;
var CommitmentPlanAssociation;
(function (CommitmentPlanAssociation) {
    /**
     * Disallow the use of non-stable (Preview) Azure resouces (cognitiveservices.v20240401preview.CommitmentPlanAssociation).
     *
     * @severity medium
     * @frameworks none
     * @topics api, preview, unstable
     * @link https://learn.microsoft.com/en-us/rest/api/azure/
     */
    CommitmentPlanAssociation.disallowPreviewResource = compliance_policy_manager_1.policyManager.registerPolicy({
        resourceValidationPolicy: {
            name: "azurenative-cognitiveservices-v20240401preview-commitmentplanassociation-disallow-preview-resource",
            description: "Disallow the use of non-stable (Preview) Azure resouces (cognitiveservices.v20240401preview.CommitmentPlanAssociation).",
            configSchema: compliance_policy_manager_1.policyManager.policyConfigSchema,
            enforcementLevel: "advisory",
            validateResource: (0, policy_1.validateResourceOfType)(v20240401preview_3.CommitmentPlanAssociation, (_, args, reportViolation) => {
                if (!compliance_policy_manager_1.policyManager.shouldEvalPolicy(args)) {
                    return;
                }
                reportViolation("Azure CommitmentPlanAssociation shouldn't use an unstable API (cognitiveservices.v20240401preview.CommitmentPlanAssociation). A compatible replacement can be found at 'cognitiveservices.CommitmentPlanAssociation'.");
            }),
        },
        vendors: ["azure"],
        services: ["cognitiveservices"],
        severity: "medium",
        topics: ["api", "unstable", "preview"],
    });
})(CommitmentPlanAssociation || (CommitmentPlanAssociation = {}));
exports.CommitmentPlanAssociation = CommitmentPlanAssociation;
var Deployment;
(function (Deployment) {
    /**
     * Disallow the use of non-stable (Preview) Azure resouces (cognitiveservices.v20240401preview.Deployment).
     *
     * @severity medium
     * @frameworks none
     * @topics api, preview, unstable
     * @link https://learn.microsoft.com/en-us/rest/api/azure/
     */
    Deployment.disallowPreviewResource = compliance_policy_manager_1.policyManager.registerPolicy({
        resourceValidationPolicy: {
            name: "azurenative-cognitiveservices-v20240401preview-deployment-disallow-preview-resource",
            description: "Disallow the use of non-stable (Preview) Azure resouces (cognitiveservices.v20240401preview.Deployment).",
            configSchema: compliance_policy_manager_1.policyManager.policyConfigSchema,
            enforcementLevel: "advisory",
            validateResource: (0, policy_1.validateResourceOfType)(v20240401preview_4.Deployment, (_, args, reportViolation) => {
                if (!compliance_policy_manager_1.policyManager.shouldEvalPolicy(args)) {
                    return;
                }
                reportViolation("Azure Deployment shouldn't use an unstable API (cognitiveservices.v20240401preview.Deployment). A compatible replacement can be found at 'cognitiveservices.Deployment'.");
            }),
        },
        vendors: ["azure"],
        services: ["cognitiveservices"],
        severity: "medium",
        topics: ["api", "unstable", "preview"],
    });
})(Deployment || (Deployment = {}));
exports.Deployment = Deployment;
var EncryptionScope;
(function (EncryptionScope) {
    /**
     * Disallow the use of non-stable (Preview) Azure resouces (cognitiveservices.v20240401preview.EncryptionScope).
     *
     * @severity medium
     * @frameworks none
     * @topics api, preview, unstable
     * @link https://learn.microsoft.com/en-us/rest/api/azure/
     */
    EncryptionScope.disallowPreviewResource = compliance_policy_manager_1.policyManager.registerPolicy({
        resourceValidationPolicy: {
            name: "azurenative-cognitiveservices-v20240401preview-encryptionscope-disallow-preview-resource",
            description: "Disallow the use of non-stable (Preview) Azure resouces (cognitiveservices.v20240401preview.EncryptionScope).",
            configSchema: compliance_policy_manager_1.policyManager.policyConfigSchema,
            enforcementLevel: "advisory",
            validateResource: (0, policy_1.validateResourceOfType)(v20240401preview_5.EncryptionScope, (_, args, reportViolation) => {
                if (!compliance_policy_manager_1.policyManager.shouldEvalPolicy(args)) {
                    return;
                }
                reportViolation("Azure EncryptionScope shouldn't use an unstable API (cognitiveservices.v20240401preview.EncryptionScope). A compatible replacement can be found at 'cognitiveservices.EncryptionScope'.");
            }),
        },
        vendors: ["azure"],
        services: ["cognitiveservices"],
        severity: "medium",
        topics: ["api", "unstable", "preview"],
    });
})(EncryptionScope || (EncryptionScope = {}));
exports.EncryptionScope = EncryptionScope;
var PrivateEndpointConnection;
(function (PrivateEndpointConnection) {
    /**
     * Disallow the use of non-stable (Preview) Azure resouces (cognitiveservices.v20240401preview.PrivateEndpointConnection).
     *
     * @severity medium
     * @frameworks none
     * @topics api, preview, unstable
     * @link https://learn.microsoft.com/en-us/rest/api/azure/
     */
    PrivateEndpointConnection.disallowPreviewResource = compliance_policy_manager_1.policyManager.registerPolicy({
        resourceValidationPolicy: {
            name: "azurenative-cognitiveservices-v20240401preview-privateendpointconnection-disallow-preview-resource",
            description: "Disallow the use of non-stable (Preview) Azure resouces (cognitiveservices.v20240401preview.PrivateEndpointConnection).",
            configSchema: compliance_policy_manager_1.policyManager.policyConfigSchema,
            enforcementLevel: "advisory",
            validateResource: (0, policy_1.validateResourceOfType)(v20240401preview_6.PrivateEndpointConnection, (_, args, reportViolation) => {
                if (!compliance_policy_manager_1.policyManager.shouldEvalPolicy(args)) {
                    return;
                }
                reportViolation("Azure PrivateEndpointConnection shouldn't use an unstable API (cognitiveservices.v20240401preview.PrivateEndpointConnection). A compatible replacement can be found at 'cognitiveservices.PrivateEndpointConnection'.");
            }),
        },
        vendors: ["azure"],
        services: ["cognitiveservices"],
        severity: "medium",
        topics: ["api", "unstable", "preview"],
    });
})(PrivateEndpointConnection || (PrivateEndpointConnection = {}));
exports.PrivateEndpointConnection = PrivateEndpointConnection;
var RaiBlocklist;
(function (RaiBlocklist) {
    /**
     * Disallow the use of non-stable (Preview) Azure resouces (cognitiveservices.v20240401preview.RaiBlocklist).
     *
     * @severity medium
     * @frameworks none
     * @topics api, preview, unstable
     * @link https://learn.microsoft.com/en-us/rest/api/azure/
     */
    RaiBlocklist.disallowPreviewResource = compliance_policy_manager_1.policyManager.registerPolicy({
        resourceValidationPolicy: {
            name: "azurenative-cognitiveservices-v20240401preview-raiblocklist-disallow-preview-resource",
            description: "Disallow the use of non-stable (Preview) Azure resouces (cognitiveservices.v20240401preview.RaiBlocklist).",
            configSchema: compliance_policy_manager_1.policyManager.policyConfigSchema,
            enforcementLevel: "advisory",
            validateResource: (0, policy_1.validateResourceOfType)(v20240401preview_7.RaiBlocklist, (_, args, reportViolation) => {
                if (!compliance_policy_manager_1.policyManager.shouldEvalPolicy(args)) {
                    return;
                }
                reportViolation("Azure RaiBlocklist shouldn't use an unstable API (cognitiveservices.v20240401preview.RaiBlocklist). A compatible replacement can be found at 'cognitiveservices.RaiBlocklist'.");
            }),
        },
        vendors: ["azure"],
        services: ["cognitiveservices"],
        severity: "medium",
        topics: ["api", "unstable", "preview"],
    });
})(RaiBlocklist || (RaiBlocklist = {}));
exports.RaiBlocklist = RaiBlocklist;
var RaiBlocklistItem;
(function (RaiBlocklistItem) {
    /**
     * Disallow the use of non-stable (Preview) Azure resouces (cognitiveservices.v20240401preview.RaiBlocklistItem).
     *
     * @severity medium
     * @frameworks none
     * @topics api, preview, unstable
     * @link https://learn.microsoft.com/en-us/rest/api/azure/
     */
    RaiBlocklistItem.disallowPreviewResource = compliance_policy_manager_1.policyManager.registerPolicy({
        resourceValidationPolicy: {
            name: "azurenative-cognitiveservices-v20240401preview-raiblocklistitem-disallow-preview-resource",
            description: "Disallow the use of non-stable (Preview) Azure resouces (cognitiveservices.v20240401preview.RaiBlocklistItem).",
            configSchema: compliance_policy_manager_1.policyManager.policyConfigSchema,
            enforcementLevel: "advisory",
            validateResource: (0, policy_1.validateResourceOfType)(v20240401preview_8.RaiBlocklistItem, (_, args, reportViolation) => {
                if (!compliance_policy_manager_1.policyManager.shouldEvalPolicy(args)) {
                    return;
                }
                reportViolation("Azure RaiBlocklistItem shouldn't use an unstable API (cognitiveservices.v20240401preview.RaiBlocklistItem). A compatible replacement can be found at 'cognitiveservices.RaiBlocklistItem'.");
            }),
        },
        vendors: ["azure"],
        services: ["cognitiveservices"],
        severity: "medium",
        topics: ["api", "unstable", "preview"],
    });
})(RaiBlocklistItem || (RaiBlocklistItem = {}));
exports.RaiBlocklistItem = RaiBlocklistItem;
var RaiPolicy;
(function (RaiPolicy) {
    /**
     * Disallow the use of non-stable (Preview) Azure resouces (cognitiveservices.v20240401preview.RaiPolicy).
     *
     * @severity medium
     * @frameworks none
     * @topics api, preview, unstable
     * @link https://learn.microsoft.com/en-us/rest/api/azure/
     */
    RaiPolicy.disallowPreviewResource = compliance_policy_manager_1.policyManager.registerPolicy({
        resourceValidationPolicy: {
            name: "azurenative-cognitiveservices-v20240401preview-raipolicy-disallow-preview-resource",
            description: "Disallow the use of non-stable (Preview) Azure resouces (cognitiveservices.v20240401preview.RaiPolicy).",
            configSchema: compliance_policy_manager_1.policyManager.policyConfigSchema,
            enforcementLevel: "advisory",
            validateResource: (0, policy_1.validateResourceOfType)(v20240401preview_9.RaiPolicy, (_, args, reportViolation) => {
                if (!compliance_policy_manager_1.policyManager.shouldEvalPolicy(args)) {
                    return;
                }
                reportViolation("Azure RaiPolicy shouldn't use an unstable API (cognitiveservices.v20240401preview.RaiPolicy). A compatible replacement can be found at 'cognitiveservices.RaiPolicy'.");
            }),
        },
        vendors: ["azure"],
        services: ["cognitiveservices"],
        severity: "medium",
        topics: ["api", "unstable", "preview"],
    });
})(RaiPolicy || (RaiPolicy = {}));
exports.RaiPolicy = RaiPolicy;
var SharedCommitmentPlan;
(function (SharedCommitmentPlan) {
    /**
     * Disallow the use of non-stable (Preview) Azure resouces (cognitiveservices.v20240401preview.SharedCommitmentPlan).
     *
     * @severity medium
     * @frameworks none
     * @topics api, preview, unstable
     * @link https://learn.microsoft.com/en-us/rest/api/azure/
     */
    SharedCommitmentPlan.disallowPreviewResource = compliance_policy_manager_1.policyManager.registerPolicy({
        resourceValidationPolicy: {
            name: "azurenative-cognitiveservices-v20240401preview-sharedcommitmentplan-disallow-preview-resource",
            description: "Disallow the use of non-stable (Preview) Azure resouces (cognitiveservices.v20240401preview.SharedCommitmentPlan).",
            configSchema: compliance_policy_manager_1.policyManager.policyConfigSchema,
            enforcementLevel: "advisory",
            validateResource: (0, policy_1.validateResourceOfType)(v20240401preview_10.SharedCommitmentPlan, (_, args, reportViolation) => {
                if (!compliance_policy_manager_1.policyManager.shouldEvalPolicy(args)) {
                    return;
                }
                reportViolation("Azure SharedCommitmentPlan shouldn't use an unstable API (cognitiveservices.v20240401preview.SharedCommitmentPlan). A compatible replacement can be found at 'cognitiveservices.SharedCommitmentPlan'.");
            }),
        },
        vendors: ["azure"],
        services: ["cognitiveservices"],
        severity: "medium",
        topics: ["api", "unstable", "preview"],
    });
})(SharedCommitmentPlan || (SharedCommitmentPlan = {}));
exports.SharedCommitmentPlan = SharedCommitmentPlan;
