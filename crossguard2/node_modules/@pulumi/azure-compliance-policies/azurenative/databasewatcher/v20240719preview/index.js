"use strict";
// Copyright 2016-2024, Pulumi Corporation.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//
// ------------------------------- WARNING -------------------------------------
// This file was programmatically generated. Do not edit unless you know what
// you're doing.
// ------------------------------- WARNING -------------------------------------
Object.defineProperty(exports, "__esModule", { value: true });
exports.Watcher = exports.Target = exports.SharedPrivateLinkResource = exports.AlertRuleResource = void 0;
const policy_1 = require("@pulumi/policy");
const compliance_policy_manager_1 = require("@pulumi/compliance-policy-manager");
const v20240719preview_1 = require("@pulumi/azure-native/databasewatcher/v20240719preview");
const v20240719preview_2 = require("@pulumi/azure-native/databasewatcher/v20240719preview");
const v20240719preview_3 = require("@pulumi/azure-native/databasewatcher/v20240719preview");
const v20240719preview_4 = require("@pulumi/azure-native/databasewatcher/v20240719preview");
var AlertRuleResource;
(function (AlertRuleResource) {
    /**
     * Disallow the use of non-stable (Preview) Azure resouces (databasewatcher.v20240719preview.AlertRuleResource).
     *
     * @severity medium
     * @frameworks none
     * @topics api, preview, unstable
     * @link https://learn.microsoft.com/en-us/rest/api/azure/
     */
    AlertRuleResource.disallowPreviewResource = compliance_policy_manager_1.policyManager.registerPolicy({
        resourceValidationPolicy: {
            name: "azurenative-databasewatcher-v20240719preview-alertruleresource-disallow-preview-resource",
            description: "Disallow the use of non-stable (Preview) Azure resouces (databasewatcher.v20240719preview.AlertRuleResource).",
            configSchema: compliance_policy_manager_1.policyManager.policyConfigSchema,
            enforcementLevel: "advisory",
            validateResource: (0, policy_1.validateResourceOfType)(v20240719preview_1.AlertRuleResource, (_, args, reportViolation) => {
                if (!compliance_policy_manager_1.policyManager.shouldEvalPolicy(args)) {
                    return;
                }
                reportViolation("Azure AlertRuleResource shouldn't use an unstable API (databasewatcher.v20240719preview.AlertRuleResource). A compatible replacement can be found at 'databasewatcher.AlertRuleResource'.");
            }),
        },
        vendors: ["azure"],
        services: ["databasewatcher"],
        severity: "medium",
        topics: ["api", "unstable", "preview"],
    });
})(AlertRuleResource || (AlertRuleResource = {}));
exports.AlertRuleResource = AlertRuleResource;
var SharedPrivateLinkResource;
(function (SharedPrivateLinkResource) {
    /**
     * Disallow the use of non-stable (Preview) Azure resouces (databasewatcher.v20240719preview.SharedPrivateLinkResource).
     *
     * @severity medium
     * @frameworks none
     * @topics api, preview, unstable
     * @link https://learn.microsoft.com/en-us/rest/api/azure/
     */
    SharedPrivateLinkResource.disallowPreviewResource = compliance_policy_manager_1.policyManager.registerPolicy({
        resourceValidationPolicy: {
            name: "azurenative-databasewatcher-v20240719preview-sharedprivatelinkresource-disallow-preview-resource",
            description: "Disallow the use of non-stable (Preview) Azure resouces (databasewatcher.v20240719preview.SharedPrivateLinkResource).",
            configSchema: compliance_policy_manager_1.policyManager.policyConfigSchema,
            enforcementLevel: "advisory",
            validateResource: (0, policy_1.validateResourceOfType)(v20240719preview_2.SharedPrivateLinkResource, (_, args, reportViolation) => {
                if (!compliance_policy_manager_1.policyManager.shouldEvalPolicy(args)) {
                    return;
                }
                reportViolation("Azure SharedPrivateLinkResource shouldn't use an unstable API (databasewatcher.v20240719preview.SharedPrivateLinkResource). A compatible replacement can be found at 'databasewatcher.SharedPrivateLinkResource'.");
            }),
        },
        vendors: ["azure"],
        services: ["databasewatcher"],
        severity: "medium",
        topics: ["api", "unstable", "preview"],
    });
})(SharedPrivateLinkResource || (SharedPrivateLinkResource = {}));
exports.SharedPrivateLinkResource = SharedPrivateLinkResource;
var Target;
(function (Target) {
    /**
     * Disallow the use of non-stable (Preview) Azure resouces (databasewatcher.v20240719preview.Target).
     *
     * @severity medium
     * @frameworks none
     * @topics api, preview, unstable
     * @link https://learn.microsoft.com/en-us/rest/api/azure/
     */
    Target.disallowPreviewResource = compliance_policy_manager_1.policyManager.registerPolicy({
        resourceValidationPolicy: {
            name: "azurenative-databasewatcher-v20240719preview-target-disallow-preview-resource",
            description: "Disallow the use of non-stable (Preview) Azure resouces (databasewatcher.v20240719preview.Target).",
            configSchema: compliance_policy_manager_1.policyManager.policyConfigSchema,
            enforcementLevel: "advisory",
            validateResource: (0, policy_1.validateResourceOfType)(v20240719preview_3.Target, (_, args, reportViolation) => {
                if (!compliance_policy_manager_1.policyManager.shouldEvalPolicy(args)) {
                    return;
                }
                reportViolation("Azure Target shouldn't use an unstable API (databasewatcher.v20240719preview.Target). A compatible replacement can be found at 'databasewatcher.Target'.");
            }),
        },
        vendors: ["azure"],
        services: ["databasewatcher"],
        severity: "medium",
        topics: ["api", "unstable", "preview"],
    });
})(Target || (Target = {}));
exports.Target = Target;
var Watcher;
(function (Watcher) {
    /**
     * Disallow the use of non-stable (Preview) Azure resouces (databasewatcher.v20240719preview.Watcher).
     *
     * @severity medium
     * @frameworks none
     * @topics api, preview, unstable
     * @link https://learn.microsoft.com/en-us/rest/api/azure/
     */
    Watcher.disallowPreviewResource = compliance_policy_manager_1.policyManager.registerPolicy({
        resourceValidationPolicy: {
            name: "azurenative-databasewatcher-v20240719preview-watcher-disallow-preview-resource",
            description: "Disallow the use of non-stable (Preview) Azure resouces (databasewatcher.v20240719preview.Watcher).",
            configSchema: compliance_policy_manager_1.policyManager.policyConfigSchema,
            enforcementLevel: "advisory",
            validateResource: (0, policy_1.validateResourceOfType)(v20240719preview_4.Watcher, (_, args, reportViolation) => {
                if (!compliance_policy_manager_1.policyManager.shouldEvalPolicy(args)) {
                    return;
                }
                reportViolation("Azure Watcher shouldn't use an unstable API (databasewatcher.v20240719preview.Watcher). A compatible replacement can be found at 'databasewatcher.Watcher'.");
            }),
        },
        vendors: ["azure"],
        services: ["databasewatcher"],
        severity: "medium",
        topics: ["api", "unstable", "preview"],
    });
})(Watcher || (Watcher = {}));
exports.Watcher = Watcher;
