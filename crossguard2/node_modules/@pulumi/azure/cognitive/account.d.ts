import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
/**
 * Manages a Cognitive Services Account.
 *
 * > **Note:** Version v2.65.0 of the Azure Provider and later will attempt to Purge the Cognitive Account during deletion. This feature can be disabled using the `features` block within the `provider` block, see the provider documentation on the features block for more information.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as azure from "@pulumi/azure";
 *
 * const example = new azure.core.ResourceGroup("example", {
 *     name: "example-resources",
 *     location: "West Europe",
 * });
 * const exampleAccount = new azure.cognitive.Account("example", {
 *     name: "example-account",
 *     location: example.location,
 *     resourceGroupName: example.name,
 *     kind: "Face",
 *     skuName: "S0",
 *     tags: {
 *         Acceptance: "Test",
 *     },
 * });
 * ```
 *
 * ## Import
 *
 * Cognitive Service Accounts can be imported using the `resource id`, e.g.
 *
 * ```sh
 * $ pulumi import azure:cognitive/account:Account account1 /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/group1/providers/Microsoft.CognitiveServices/accounts/account1
 * ```
 */
export declare class Account extends pulumi.CustomResource {
    /**
     * Get an existing Account resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    static get(name: string, id: pulumi.Input<pulumi.ID>, state?: AccountState, opts?: pulumi.CustomResourceOptions): Account;
    /**
     * Returns true if the given object is an instance of Account.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    static isInstance(obj: any): obj is Account;
    /**
     * If `kind` is `TextAnalytics` this specifies the ID of the Search service.
     */
    readonly customQuestionAnsweringSearchServiceId: pulumi.Output<string | undefined>;
    /**
     * If `kind` is `TextAnalytics` this specifies the key of the Search service.
     *
     * > **NOTE:** `customQuestionAnsweringSearchServiceId` and `customQuestionAnsweringSearchServiceKey` are used for [Custom Question Answering, the renamed version of QnA Maker](https://docs.microsoft.com/azure/cognitive-services/qnamaker/custom-question-answering), while `qnaRuntimeEndpoint` is used for [the old version of QnA Maker](https://docs.microsoft.com/azure/cognitive-services/qnamaker/overview/overview)
     */
    readonly customQuestionAnsweringSearchServiceKey: pulumi.Output<string | undefined>;
    /**
     * The subdomain name used for token-based authentication. This property is required when `networkAcls` is specified. This property is also required when using the OpenAI service with libraries which assume the Azure OpenAI endpoint is a subdomain on `https://openai.azure.com/`, eg. `https://<custom_subdomain_name>.openai.azure.com/`.  Changing this forces a new resource to be created.
     */
    readonly customSubdomainName: pulumi.Output<string | undefined>;
    /**
     * A `customerManagedKey` block as documented below.
     */
    readonly customerManagedKey: pulumi.Output<outputs.cognitive.AccountCustomerManagedKey | undefined>;
    /**
     * Whether to enable the dynamic throttling for this Cognitive Service Account.
     */
    readonly dynamicThrottlingEnabled: pulumi.Output<boolean | undefined>;
    /**
     * The endpoint used to connect to the Cognitive Service Account.
     */
    readonly endpoint: pulumi.Output<string>;
    /**
     * List of FQDNs allowed for the Cognitive Account.
     */
    readonly fqdns: pulumi.Output<string[] | undefined>;
    /**
     * An `identity` block as defined below.
     */
    readonly identity: pulumi.Output<outputs.cognitive.AccountIdentity | undefined>;
    /**
     * Specifies the type of Cognitive Service Account that should be created. Possible values are `Academic`, `AnomalyDetector`, `Bing.Autosuggest`, `Bing.Autosuggest.v7`, `Bing.CustomSearch`, `Bing.Search`, `Bing.Search.v7`, `Bing.Speech`, `Bing.SpellCheck`, `Bing.SpellCheck.v7`, `CognitiveServices`, `ComputerVision`, `ContentModerator`, `ContentSafety`, `CustomSpeech`, `CustomVision.Prediction`, `CustomVision.Training`, `Emotion`, `Face`, `FormRecognizer`, `ImmersiveReader`, `LUIS`, `LUIS.Authoring`, `MetricsAdvisor`, `OpenAI`, `Personalizer`, `QnAMaker`, `Recommendations`, `SpeakerRecognition`, `Speech`, `SpeechServices`, `SpeechTranslation`, `TextAnalytics`, `TextTranslation` and `WebLM`. Changing this forces a new resource to be created.
     *
     * > **NOTE:** New Bing Search resources cannot be created as their APIs are moving from Cognitive Services Platform to new surface area under Microsoft.com. Starting from October 30, 2020, existing instances of Bing Search APIs provisioned via Cognitive Services will be continuously supported for next 3 years or till the end of respective Enterprise Agreement, whichever happens first.
     *
     * > **NOTE:** You must create your first Face, Text Analytics, or Computer Vision resources from the Azure portal to review and acknowledge the terms and conditions. In Azure Portal, the checkbox to accept terms and conditions is only displayed when a US region is selected. More information on [Prerequisites](https://docs.microsoft.com/azure/cognitive-services/cognitive-services-apis-create-account-cli?tabs=windows#prerequisites).
     */
    readonly kind: pulumi.Output<string>;
    /**
     * Whether local authentication methods is enabled for the Cognitive Account. Defaults to `true`.
     */
    readonly localAuthEnabled: pulumi.Output<boolean | undefined>;
    /**
     * Specifies the supported Azure location where the resource exists. Changing this forces a new resource to be created.
     */
    readonly location: pulumi.Output<string>;
    /**
     * The Azure AD Client ID (Application ID). This attribute is only set when kind is `MetricsAdvisor`. Changing this forces a new resource to be created.
     */
    readonly metricsAdvisorAadClientId: pulumi.Output<string | undefined>;
    /**
     * The Azure AD Tenant ID. This attribute is only set when kind is `MetricsAdvisor`. Changing this forces a new resource to be created.
     */
    readonly metricsAdvisorAadTenantId: pulumi.Output<string | undefined>;
    /**
     * The super user of Metrics Advisor. This attribute is only set when kind is `MetricsAdvisor`. Changing this forces a new resource to be created.
     */
    readonly metricsAdvisorSuperUserName: pulumi.Output<string | undefined>;
    /**
     * The website name of Metrics Advisor. This attribute is only set when kind is `MetricsAdvisor`. Changing this forces a new resource to be created.
     *
     * > **NOTE:** This URL is mandatory if the `kind` is set to `QnAMaker`.
     */
    readonly metricsAdvisorWebsiteName: pulumi.Output<string | undefined>;
    /**
     * Specifies the name of the Cognitive Service Account. Changing this forces a new resource to be created.
     */
    readonly name: pulumi.Output<string>;
    /**
     * A `networkAcls` block as defined below. When this property is specified, `customSubdomainName` is also required to be set.
     */
    readonly networkAcls: pulumi.Output<outputs.cognitive.AccountNetworkAcls | undefined>;
    /**
     * Whether outbound network access is restricted for the Cognitive Account. Defaults to `false`.
     */
    readonly outboundNetworkAccessRestricted: pulumi.Output<boolean | undefined>;
    /**
     * A primary access key which can be used to connect to the Cognitive Service Account.
     */
    readonly primaryAccessKey: pulumi.Output<string>;
    /**
     * Whether public network access is allowed for the Cognitive Account. Defaults to `true`.
     */
    readonly publicNetworkAccessEnabled: pulumi.Output<boolean | undefined>;
    /**
     * A URL to link a QnAMaker cognitive account to a QnA runtime.
     */
    readonly qnaRuntimeEndpoint: pulumi.Output<string | undefined>;
    /**
     * The name of the resource group in which the Cognitive Service Account is created. Changing this forces a new resource to be created.
     */
    readonly resourceGroupName: pulumi.Output<string>;
    /**
     * The secondary access key which can be used to connect to the Cognitive Service Account.
     */
    readonly secondaryAccessKey: pulumi.Output<string>;
    /**
     * Specifies the SKU Name for this Cognitive Service Account. Possible values are `F0`, `F1`, `S0`, `S`, `S1`, `S2`, `S3`, `S4`, `S5`, `S6`, `P0`, `P1`, `P2`, `E0` and `DC0`.
     *
     * > **NOTE:** SKU `DC0` is the commitment tier for Cognitive Services containers running in disconnected environments. You must obtain approval from Microsoft by submitting the [request form](https://aka.ms/csdisconnectedcontainers) first, before you can use this SKU. More information on [Purchase a commitment plan to use containers in disconnected environments](https://learn.microsoft.com/en-us/azure/cognitive-services/containers/disconnected-containers?tabs=stt#purchase-a-commitment-plan-to-use-containers-in-disconnected-environments).
     */
    readonly skuName: pulumi.Output<string>;
    /**
     * A `storage` block as defined below.
     */
    readonly storages: pulumi.Output<outputs.cognitive.AccountStorage[] | undefined>;
    /**
     * A mapping of tags to assign to the resource.
     */
    readonly tags: pulumi.Output<{
        [key: string]: string;
    } | undefined>;
    /**
     * Create a Account resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: AccountArgs, opts?: pulumi.CustomResourceOptions);
}
/**
 * Input properties used for looking up and filtering Account resources.
 */
export interface AccountState {
    /**
     * If `kind` is `TextAnalytics` this specifies the ID of the Search service.
     */
    customQuestionAnsweringSearchServiceId?: pulumi.Input<string>;
    /**
     * If `kind` is `TextAnalytics` this specifies the key of the Search service.
     *
     * > **NOTE:** `customQuestionAnsweringSearchServiceId` and `customQuestionAnsweringSearchServiceKey` are used for [Custom Question Answering, the renamed version of QnA Maker](https://docs.microsoft.com/azure/cognitive-services/qnamaker/custom-question-answering), while `qnaRuntimeEndpoint` is used for [the old version of QnA Maker](https://docs.microsoft.com/azure/cognitive-services/qnamaker/overview/overview)
     */
    customQuestionAnsweringSearchServiceKey?: pulumi.Input<string>;
    /**
     * The subdomain name used for token-based authentication. This property is required when `networkAcls` is specified. This property is also required when using the OpenAI service with libraries which assume the Azure OpenAI endpoint is a subdomain on `https://openai.azure.com/`, eg. `https://<custom_subdomain_name>.openai.azure.com/`.  Changing this forces a new resource to be created.
     */
    customSubdomainName?: pulumi.Input<string>;
    /**
     * A `customerManagedKey` block as documented below.
     */
    customerManagedKey?: pulumi.Input<inputs.cognitive.AccountCustomerManagedKey>;
    /**
     * Whether to enable the dynamic throttling for this Cognitive Service Account.
     */
    dynamicThrottlingEnabled?: pulumi.Input<boolean>;
    /**
     * The endpoint used to connect to the Cognitive Service Account.
     */
    endpoint?: pulumi.Input<string>;
    /**
     * List of FQDNs allowed for the Cognitive Account.
     */
    fqdns?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * An `identity` block as defined below.
     */
    identity?: pulumi.Input<inputs.cognitive.AccountIdentity>;
    /**
     * Specifies the type of Cognitive Service Account that should be created. Possible values are `Academic`, `AnomalyDetector`, `Bing.Autosuggest`, `Bing.Autosuggest.v7`, `Bing.CustomSearch`, `Bing.Search`, `Bing.Search.v7`, `Bing.Speech`, `Bing.SpellCheck`, `Bing.SpellCheck.v7`, `CognitiveServices`, `ComputerVision`, `ContentModerator`, `ContentSafety`, `CustomSpeech`, `CustomVision.Prediction`, `CustomVision.Training`, `Emotion`, `Face`, `FormRecognizer`, `ImmersiveReader`, `LUIS`, `LUIS.Authoring`, `MetricsAdvisor`, `OpenAI`, `Personalizer`, `QnAMaker`, `Recommendations`, `SpeakerRecognition`, `Speech`, `SpeechServices`, `SpeechTranslation`, `TextAnalytics`, `TextTranslation` and `WebLM`. Changing this forces a new resource to be created.
     *
     * > **NOTE:** New Bing Search resources cannot be created as their APIs are moving from Cognitive Services Platform to new surface area under Microsoft.com. Starting from October 30, 2020, existing instances of Bing Search APIs provisioned via Cognitive Services will be continuously supported for next 3 years or till the end of respective Enterprise Agreement, whichever happens first.
     *
     * > **NOTE:** You must create your first Face, Text Analytics, or Computer Vision resources from the Azure portal to review and acknowledge the terms and conditions. In Azure Portal, the checkbox to accept terms and conditions is only displayed when a US region is selected. More information on [Prerequisites](https://docs.microsoft.com/azure/cognitive-services/cognitive-services-apis-create-account-cli?tabs=windows#prerequisites).
     */
    kind?: pulumi.Input<string>;
    /**
     * Whether local authentication methods is enabled for the Cognitive Account. Defaults to `true`.
     */
    localAuthEnabled?: pulumi.Input<boolean>;
    /**
     * Specifies the supported Azure location where the resource exists. Changing this forces a new resource to be created.
     */
    location?: pulumi.Input<string>;
    /**
     * The Azure AD Client ID (Application ID). This attribute is only set when kind is `MetricsAdvisor`. Changing this forces a new resource to be created.
     */
    metricsAdvisorAadClientId?: pulumi.Input<string>;
    /**
     * The Azure AD Tenant ID. This attribute is only set when kind is `MetricsAdvisor`. Changing this forces a new resource to be created.
     */
    metricsAdvisorAadTenantId?: pulumi.Input<string>;
    /**
     * The super user of Metrics Advisor. This attribute is only set when kind is `MetricsAdvisor`. Changing this forces a new resource to be created.
     */
    metricsAdvisorSuperUserName?: pulumi.Input<string>;
    /**
     * The website name of Metrics Advisor. This attribute is only set when kind is `MetricsAdvisor`. Changing this forces a new resource to be created.
     *
     * > **NOTE:** This URL is mandatory if the `kind` is set to `QnAMaker`.
     */
    metricsAdvisorWebsiteName?: pulumi.Input<string>;
    /**
     * Specifies the name of the Cognitive Service Account. Changing this forces a new resource to be created.
     */
    name?: pulumi.Input<string>;
    /**
     * A `networkAcls` block as defined below. When this property is specified, `customSubdomainName` is also required to be set.
     */
    networkAcls?: pulumi.Input<inputs.cognitive.AccountNetworkAcls>;
    /**
     * Whether outbound network access is restricted for the Cognitive Account. Defaults to `false`.
     */
    outboundNetworkAccessRestricted?: pulumi.Input<boolean>;
    /**
     * A primary access key which can be used to connect to the Cognitive Service Account.
     */
    primaryAccessKey?: pulumi.Input<string>;
    /**
     * Whether public network access is allowed for the Cognitive Account. Defaults to `true`.
     */
    publicNetworkAccessEnabled?: pulumi.Input<boolean>;
    /**
     * A URL to link a QnAMaker cognitive account to a QnA runtime.
     */
    qnaRuntimeEndpoint?: pulumi.Input<string>;
    /**
     * The name of the resource group in which the Cognitive Service Account is created. Changing this forces a new resource to be created.
     */
    resourceGroupName?: pulumi.Input<string>;
    /**
     * The secondary access key which can be used to connect to the Cognitive Service Account.
     */
    secondaryAccessKey?: pulumi.Input<string>;
    /**
     * Specifies the SKU Name for this Cognitive Service Account. Possible values are `F0`, `F1`, `S0`, `S`, `S1`, `S2`, `S3`, `S4`, `S5`, `S6`, `P0`, `P1`, `P2`, `E0` and `DC0`.
     *
     * > **NOTE:** SKU `DC0` is the commitment tier for Cognitive Services containers running in disconnected environments. You must obtain approval from Microsoft by submitting the [request form](https://aka.ms/csdisconnectedcontainers) first, before you can use this SKU. More information on [Purchase a commitment plan to use containers in disconnected environments](https://learn.microsoft.com/en-us/azure/cognitive-services/containers/disconnected-containers?tabs=stt#purchase-a-commitment-plan-to-use-containers-in-disconnected-environments).
     */
    skuName?: pulumi.Input<string>;
    /**
     * A `storage` block as defined below.
     */
    storages?: pulumi.Input<pulumi.Input<inputs.cognitive.AccountStorage>[]>;
    /**
     * A mapping of tags to assign to the resource.
     */
    tags?: pulumi.Input<{
        [key: string]: pulumi.Input<string>;
    }>;
}
/**
 * The set of arguments for constructing a Account resource.
 */
export interface AccountArgs {
    /**
     * If `kind` is `TextAnalytics` this specifies the ID of the Search service.
     */
    customQuestionAnsweringSearchServiceId?: pulumi.Input<string>;
    /**
     * If `kind` is `TextAnalytics` this specifies the key of the Search service.
     *
     * > **NOTE:** `customQuestionAnsweringSearchServiceId` and `customQuestionAnsweringSearchServiceKey` are used for [Custom Question Answering, the renamed version of QnA Maker](https://docs.microsoft.com/azure/cognitive-services/qnamaker/custom-question-answering), while `qnaRuntimeEndpoint` is used for [the old version of QnA Maker](https://docs.microsoft.com/azure/cognitive-services/qnamaker/overview/overview)
     */
    customQuestionAnsweringSearchServiceKey?: pulumi.Input<string>;
    /**
     * The subdomain name used for token-based authentication. This property is required when `networkAcls` is specified. This property is also required when using the OpenAI service with libraries which assume the Azure OpenAI endpoint is a subdomain on `https://openai.azure.com/`, eg. `https://<custom_subdomain_name>.openai.azure.com/`.  Changing this forces a new resource to be created.
     */
    customSubdomainName?: pulumi.Input<string>;
    /**
     * A `customerManagedKey` block as documented below.
     */
    customerManagedKey?: pulumi.Input<inputs.cognitive.AccountCustomerManagedKey>;
    /**
     * Whether to enable the dynamic throttling for this Cognitive Service Account.
     */
    dynamicThrottlingEnabled?: pulumi.Input<boolean>;
    /**
     * List of FQDNs allowed for the Cognitive Account.
     */
    fqdns?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * An `identity` block as defined below.
     */
    identity?: pulumi.Input<inputs.cognitive.AccountIdentity>;
    /**
     * Specifies the type of Cognitive Service Account that should be created. Possible values are `Academic`, `AnomalyDetector`, `Bing.Autosuggest`, `Bing.Autosuggest.v7`, `Bing.CustomSearch`, `Bing.Search`, `Bing.Search.v7`, `Bing.Speech`, `Bing.SpellCheck`, `Bing.SpellCheck.v7`, `CognitiveServices`, `ComputerVision`, `ContentModerator`, `ContentSafety`, `CustomSpeech`, `CustomVision.Prediction`, `CustomVision.Training`, `Emotion`, `Face`, `FormRecognizer`, `ImmersiveReader`, `LUIS`, `LUIS.Authoring`, `MetricsAdvisor`, `OpenAI`, `Personalizer`, `QnAMaker`, `Recommendations`, `SpeakerRecognition`, `Speech`, `SpeechServices`, `SpeechTranslation`, `TextAnalytics`, `TextTranslation` and `WebLM`. Changing this forces a new resource to be created.
     *
     * > **NOTE:** New Bing Search resources cannot be created as their APIs are moving from Cognitive Services Platform to new surface area under Microsoft.com. Starting from October 30, 2020, existing instances of Bing Search APIs provisioned via Cognitive Services will be continuously supported for next 3 years or till the end of respective Enterprise Agreement, whichever happens first.
     *
     * > **NOTE:** You must create your first Face, Text Analytics, or Computer Vision resources from the Azure portal to review and acknowledge the terms and conditions. In Azure Portal, the checkbox to accept terms and conditions is only displayed when a US region is selected. More information on [Prerequisites](https://docs.microsoft.com/azure/cognitive-services/cognitive-services-apis-create-account-cli?tabs=windows#prerequisites).
     */
    kind: pulumi.Input<string>;
    /**
     * Whether local authentication methods is enabled for the Cognitive Account. Defaults to `true`.
     */
    localAuthEnabled?: pulumi.Input<boolean>;
    /**
     * Specifies the supported Azure location where the resource exists. Changing this forces a new resource to be created.
     */
    location?: pulumi.Input<string>;
    /**
     * The Azure AD Client ID (Application ID). This attribute is only set when kind is `MetricsAdvisor`. Changing this forces a new resource to be created.
     */
    metricsAdvisorAadClientId?: pulumi.Input<string>;
    /**
     * The Azure AD Tenant ID. This attribute is only set when kind is `MetricsAdvisor`. Changing this forces a new resource to be created.
     */
    metricsAdvisorAadTenantId?: pulumi.Input<string>;
    /**
     * The super user of Metrics Advisor. This attribute is only set when kind is `MetricsAdvisor`. Changing this forces a new resource to be created.
     */
    metricsAdvisorSuperUserName?: pulumi.Input<string>;
    /**
     * The website name of Metrics Advisor. This attribute is only set when kind is `MetricsAdvisor`. Changing this forces a new resource to be created.
     *
     * > **NOTE:** This URL is mandatory if the `kind` is set to `QnAMaker`.
     */
    metricsAdvisorWebsiteName?: pulumi.Input<string>;
    /**
     * Specifies the name of the Cognitive Service Account. Changing this forces a new resource to be created.
     */
    name?: pulumi.Input<string>;
    /**
     * A `networkAcls` block as defined below. When this property is specified, `customSubdomainName` is also required to be set.
     */
    networkAcls?: pulumi.Input<inputs.cognitive.AccountNetworkAcls>;
    /**
     * Whether outbound network access is restricted for the Cognitive Account. Defaults to `false`.
     */
    outboundNetworkAccessRestricted?: pulumi.Input<boolean>;
    /**
     * Whether public network access is allowed for the Cognitive Account. Defaults to `true`.
     */
    publicNetworkAccessEnabled?: pulumi.Input<boolean>;
    /**
     * A URL to link a QnAMaker cognitive account to a QnA runtime.
     */
    qnaRuntimeEndpoint?: pulumi.Input<string>;
    /**
     * The name of the resource group in which the Cognitive Service Account is created. Changing this forces a new resource to be created.
     */
    resourceGroupName: pulumi.Input<string>;
    /**
     * Specifies the SKU Name for this Cognitive Service Account. Possible values are `F0`, `F1`, `S0`, `S`, `S1`, `S2`, `S3`, `S4`, `S5`, `S6`, `P0`, `P1`, `P2`, `E0` and `DC0`.
     *
     * > **NOTE:** SKU `DC0` is the commitment tier for Cognitive Services containers running in disconnected environments. You must obtain approval from Microsoft by submitting the [request form](https://aka.ms/csdisconnectedcontainers) first, before you can use this SKU. More information on [Purchase a commitment plan to use containers in disconnected environments](https://learn.microsoft.com/en-us/azure/cognitive-services/containers/disconnected-containers?tabs=stt#purchase-a-commitment-plan-to-use-containers-in-disconnected-environments).
     */
    skuName: pulumi.Input<string>;
    /**
     * A `storage` block as defined below.
     */
    storages?: pulumi.Input<pulumi.Input<inputs.cognitive.AccountStorage>[]>;
    /**
     * A mapping of tags to assign to the resource.
     */
    tags?: pulumi.Input<{
        [key: string]: pulumi.Input<string>;
    }>;
}
