import * as pulumi from "@pulumi/pulumi";
/**
 * Manages a Dev Center Environment Type.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as azure from "@pulumi/azure";
 *
 * const example = new azure.core.ResourceGroup("example", {
 *     name: "example-resources",
 *     location: "West Europe",
 * });
 * const exampleDevCenter = new azure.devcenter.DevCenter("example", {
 *     name: "example-dc",
 *     resourceGroupName: example.name,
 *     location: example.location,
 *     identity: {
 *         type: "SystemAssigned",
 *     },
 * });
 * const exampleEnvironmentType = new azure.devcenter.EnvironmentType("example", {
 *     name: "example-dcet",
 *     devCenterId: exampleDevCenter.id,
 *     tags: {
 *         Env: "Test",
 *     },
 * });
 * ```
 *
 * ## Import
 *
 * An existing Dev Center Environment Type can be imported into Pulumi using the `resource id`, e.g.
 *
 * ```sh
 * $ pulumi import azure:devcenter/environmentType:EnvironmentType example /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/group1/providers/Microsoft.DevCenter/devCenters/dc1/environmentTypes/et1
 * ```
 */
export declare class EnvironmentType extends pulumi.CustomResource {
    /**
     * Get an existing EnvironmentType resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    static get(name: string, id: pulumi.Input<pulumi.ID>, state?: EnvironmentTypeState, opts?: pulumi.CustomResourceOptions): EnvironmentType;
    /**
     * Returns true if the given object is an instance of EnvironmentType.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    static isInstance(obj: any): obj is EnvironmentType;
    /**
     * The ID of the associated Dev Center. Changing this forces a new resource to be created.
     */
    readonly devCenterId: pulumi.Output<string>;
    /**
     * Specifies the name of this Dev Center Environment Type. Changing this forces a new resource to be created.
     */
    readonly name: pulumi.Output<string>;
    /**
     * A mapping of tags which should be assigned to the Dev Center Environment Type.
     */
    readonly tags: pulumi.Output<{
        [key: string]: string;
    } | undefined>;
    /**
     * Create a EnvironmentType resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: EnvironmentTypeArgs, opts?: pulumi.CustomResourceOptions);
}
/**
 * Input properties used for looking up and filtering EnvironmentType resources.
 */
export interface EnvironmentTypeState {
    /**
     * The ID of the associated Dev Center. Changing this forces a new resource to be created.
     */
    devCenterId?: pulumi.Input<string>;
    /**
     * Specifies the name of this Dev Center Environment Type. Changing this forces a new resource to be created.
     */
    name?: pulumi.Input<string>;
    /**
     * A mapping of tags which should be assigned to the Dev Center Environment Type.
     */
    tags?: pulumi.Input<{
        [key: string]: pulumi.Input<string>;
    }>;
}
/**
 * The set of arguments for constructing a EnvironmentType resource.
 */
export interface EnvironmentTypeArgs {
    /**
     * The ID of the associated Dev Center. Changing this forces a new resource to be created.
     */
    devCenterId: pulumi.Input<string>;
    /**
     * Specifies the name of this Dev Center Environment Type. Changing this forces a new resource to be created.
     */
    name?: pulumi.Input<string>;
    /**
     * A mapping of tags which should be assigned to the Dev Center Environment Type.
     */
    tags?: pulumi.Input<{
        [key: string]: pulumi.Input<string>;
    }>;
}
