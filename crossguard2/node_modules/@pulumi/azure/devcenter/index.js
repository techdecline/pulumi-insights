"use strict";
// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***
Object.defineProperty(exports, "__esModule", { value: true });
exports.ProjectPool = exports.ProjectEnvironmentType = exports.Project = exports.NetworkConnection = exports.Gallery = exports.EnvironmentType = exports.DevCenter = exports.DevBoxDefinition = exports.Catalog = exports.AttachedNetwork = void 0;
const pulumi = require("@pulumi/pulumi");
const utilities = require("../utilities");
exports.AttachedNetwork = null;
utilities.lazyLoad(exports, ["AttachedNetwork"], () => require("./attachedNetwork"));
exports.Catalog = null;
utilities.lazyLoad(exports, ["Catalog"], () => require("./catalog"));
exports.DevBoxDefinition = null;
utilities.lazyLoad(exports, ["DevBoxDefinition"], () => require("./devBoxDefinition"));
exports.DevCenter = null;
utilities.lazyLoad(exports, ["DevCenter"], () => require("./devCenter"));
exports.EnvironmentType = null;
utilities.lazyLoad(exports, ["EnvironmentType"], () => require("./environmentType"));
exports.Gallery = null;
utilities.lazyLoad(exports, ["Gallery"], () => require("./gallery"));
exports.NetworkConnection = null;
utilities.lazyLoad(exports, ["NetworkConnection"], () => require("./networkConnection"));
exports.Project = null;
utilities.lazyLoad(exports, ["Project"], () => require("./project"));
exports.ProjectEnvironmentType = null;
utilities.lazyLoad(exports, ["ProjectEnvironmentType"], () => require("./projectEnvironmentType"));
exports.ProjectPool = null;
utilities.lazyLoad(exports, ["ProjectPool"], () => require("./projectPool"));
const _module = {
    version: utilities.getVersion(),
    construct: (name, type, urn) => {
        switch (type) {
            case "azure:devcenter/attachedNetwork:AttachedNetwork":
                return new exports.AttachedNetwork(name, undefined, { urn });
            case "azure:devcenter/catalog:Catalog":
                return new exports.Catalog(name, undefined, { urn });
            case "azure:devcenter/devBoxDefinition:DevBoxDefinition":
                return new exports.DevBoxDefinition(name, undefined, { urn });
            case "azure:devcenter/devCenter:DevCenter":
                return new exports.DevCenter(name, undefined, { urn });
            case "azure:devcenter/environmentType:EnvironmentType":
                return new exports.EnvironmentType(name, undefined, { urn });
            case "azure:devcenter/gallery:Gallery":
                return new exports.Gallery(name, undefined, { urn });
            case "azure:devcenter/networkConnection:NetworkConnection":
                return new exports.NetworkConnection(name, undefined, { urn });
            case "azure:devcenter/project:Project":
                return new exports.Project(name, undefined, { urn });
            case "azure:devcenter/projectEnvironmentType:ProjectEnvironmentType":
                return new exports.ProjectEnvironmentType(name, undefined, { urn });
            case "azure:devcenter/projectPool:ProjectPool":
                return new exports.ProjectPool(name, undefined, { urn });
            default:
                throw new Error(`unknown resource type ${type}`);
        }
    },
};
pulumi.runtime.registerResourceModule("azure", "devcenter/attachedNetwork", _module);
pulumi.runtime.registerResourceModule("azure", "devcenter/catalog", _module);
pulumi.runtime.registerResourceModule("azure", "devcenter/devBoxDefinition", _module);
pulumi.runtime.registerResourceModule("azure", "devcenter/devCenter", _module);
pulumi.runtime.registerResourceModule("azure", "devcenter/environmentType", _module);
pulumi.runtime.registerResourceModule("azure", "devcenter/gallery", _module);
pulumi.runtime.registerResourceModule("azure", "devcenter/networkConnection", _module);
pulumi.runtime.registerResourceModule("azure", "devcenter/project", _module);
pulumi.runtime.registerResourceModule("azure", "devcenter/projectEnvironmentType", _module);
pulumi.runtime.registerResourceModule("azure", "devcenter/projectPool", _module);
//# sourceMappingURL=index.js.map