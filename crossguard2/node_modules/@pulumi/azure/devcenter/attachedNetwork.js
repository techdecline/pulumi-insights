"use strict";
// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***
Object.defineProperty(exports, "__esModule", { value: true });
exports.AttachedNetwork = void 0;
const pulumi = require("@pulumi/pulumi");
const utilities = require("../utilities");
/**
 * Manages a Dev Center Attached Network.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as azure from "@pulumi/azure";
 *
 * const example = new azure.core.ResourceGroup("example", {
 *     name: "example-dcan",
 *     location: "West Europe",
 * });
 * const exampleVirtualNetwork = new azure.network.VirtualNetwork("example", {
 *     name: "example-vnet",
 *     addressSpaces: ["10.0.0.0/16"],
 *     location: example.location,
 *     resourceGroupName: example.name,
 * });
 * const exampleSubnet = new azure.network.Subnet("example", {
 *     name: "internal",
 *     resourceGroupName: example.name,
 *     virtualNetworkName: exampleVirtualNetwork.name,
 *     addressPrefixes: ["10.0.2.0/24"],
 * });
 * const exampleDevCenter = new azure.devcenter.DevCenter("example", {
 *     name: "example-dc",
 *     resourceGroupName: example.name,
 *     location: example.location,
 *     identity: {
 *         type: "SystemAssigned",
 *     },
 * });
 * const exampleNetworkConnection = new azure.devcenter.NetworkConnection("example", {
 *     name: "example-dcnc",
 *     resourceGroupName: example.name,
 *     location: example.location,
 *     domainJoinType: "AzureADJoin",
 *     subnetId: exampleSubnet.id,
 * });
 * const exampleAttachedNetwork = new azure.devcenter.AttachedNetwork("example", {
 *     name: "example-dcet",
 *     devCenterId: exampleDevCenter.id,
 *     networkConnectionId: exampleNetworkConnection.id,
 * });
 * ```
 *
 * ## Import
 *
 * An existing Dev Center Attached Network can be imported into Pulumi using the `resource id`, e.g.
 *
 * ```sh
 * $ pulumi import azure:devcenter/attachedNetwork:AttachedNetwork example /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/group1/providers/Microsoft.DevCenter/devCenters/dc1/attachedNetworks/et1
 * ```
 */
class AttachedNetwork extends pulumi.CustomResource {
    constructor(name, argsOrState, opts) {
        let resourceInputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState;
            resourceInputs["devCenterId"] = state ? state.devCenterId : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["networkConnectionId"] = state ? state.networkConnectionId : undefined;
        }
        else {
            const args = argsOrState;
            if ((!args || args.devCenterId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'devCenterId'");
            }
            if ((!args || args.networkConnectionId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'networkConnectionId'");
            }
            resourceInputs["devCenterId"] = args ? args.devCenterId : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["networkConnectionId"] = args ? args.networkConnectionId : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(AttachedNetwork.__pulumiType, name, resourceInputs, opts);
    }
    /**
     * Get an existing AttachedNetwork resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    static get(name, id, state, opts) {
        return new AttachedNetwork(name, state, Object.assign(Object.assign({}, opts), { id: id }));
    }
    /**
     * Returns true if the given object is an instance of AttachedNetwork.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    static isInstance(obj) {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === AttachedNetwork.__pulumiType;
    }
}
exports.AttachedNetwork = AttachedNetwork;
/** @internal */
AttachedNetwork.__pulumiType = 'azure:devcenter/attachedNetwork:AttachedNetwork';
//# sourceMappingURL=attachedNetwork.js.map