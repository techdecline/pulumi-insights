"use strict";
// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***
Object.defineProperty(exports, "__esModule", { value: true });
exports.getSasOutput = exports.getSas = void 0;
const pulumi = require("@pulumi/pulumi");
const utilities = require("../utilities");
/**
 * Use this data source to obtain a Shared Access Signature (SAS Token) for an existing Event Hub.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as azure from "@pulumi/azure";
 *
 * const exampleResourceGroup = new azure.core.ResourceGroup("example", {
 *     name: "example-resources",
 *     location: "West Europe",
 * });
 * const exampleEventHubNamespace = new azure.eventhub.EventHubNamespace("example", {
 *     name: "example-ehn",
 *     location: exampleResourceGroup.location,
 *     resourceGroupName: exampleResourceGroup.name,
 *     sku: "Basic",
 * });
 * const exampleEventHub = new azure.eventhub.EventHub("example", {
 *     name: "example-eh",
 *     namespaceName: exampleEventHubNamespace.name,
 *     resourceGroupName: exampleResourceGroup.name,
 *     partitionCount: 1,
 *     messageRetention: 1,
 * });
 * const exampleAuthorizationRule = new azure.eventhub.AuthorizationRule("example", {
 *     name: "example-ehar",
 *     namespaceName: exampleEventHubNamespace.name,
 *     eventhubName: exampleEventHub.name,
 *     resourceGroupName: exampleResourceGroup.name,
 *     listen: true,
 *     send: true,
 *     manage: true,
 * });
 * const example = azure.eventhub.getAuthorizationRuleOutput({
 *     name: exampleAuthorizationRule.name,
 *     namespaceName: exampleEventHubNamespace.name,
 *     eventhubName: exampleEventHub.name,
 *     resourceGroupName: exampleResourceGroup.name,
 * });
 * const exampleGetSas = example.apply(example => azure.eventhub.getSasOutput({
 *     connectionString: example.primaryConnectionString,
 *     expiry: "2023-06-23T00:00:00Z",
 * }));
 * ```
 */
function getSas(args, opts) {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("azure:eventhub/getSas:getSas", {
        "connectionString": args.connectionString,
        "expiry": args.expiry,
    }, opts);
}
exports.getSas = getSas;
/**
 * Use this data source to obtain a Shared Access Signature (SAS Token) for an existing Event Hub.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as azure from "@pulumi/azure";
 *
 * const exampleResourceGroup = new azure.core.ResourceGroup("example", {
 *     name: "example-resources",
 *     location: "West Europe",
 * });
 * const exampleEventHubNamespace = new azure.eventhub.EventHubNamespace("example", {
 *     name: "example-ehn",
 *     location: exampleResourceGroup.location,
 *     resourceGroupName: exampleResourceGroup.name,
 *     sku: "Basic",
 * });
 * const exampleEventHub = new azure.eventhub.EventHub("example", {
 *     name: "example-eh",
 *     namespaceName: exampleEventHubNamespace.name,
 *     resourceGroupName: exampleResourceGroup.name,
 *     partitionCount: 1,
 *     messageRetention: 1,
 * });
 * const exampleAuthorizationRule = new azure.eventhub.AuthorizationRule("example", {
 *     name: "example-ehar",
 *     namespaceName: exampleEventHubNamespace.name,
 *     eventhubName: exampleEventHub.name,
 *     resourceGroupName: exampleResourceGroup.name,
 *     listen: true,
 *     send: true,
 *     manage: true,
 * });
 * const example = azure.eventhub.getAuthorizationRuleOutput({
 *     name: exampleAuthorizationRule.name,
 *     namespaceName: exampleEventHubNamespace.name,
 *     eventhubName: exampleEventHub.name,
 *     resourceGroupName: exampleResourceGroup.name,
 * });
 * const exampleGetSas = example.apply(example => azure.eventhub.getSasOutput({
 *     connectionString: example.primaryConnectionString,
 *     expiry: "2023-06-23T00:00:00Z",
 * }));
 * ```
 */
function getSasOutput(args, opts) {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invokeOutput("azure:eventhub/getSas:getSas", {
        "connectionString": args.connectionString,
        "expiry": args.expiry,
    }, opts);
}
exports.getSasOutput = getSasOutput;
//# sourceMappingURL=getSas.js.map