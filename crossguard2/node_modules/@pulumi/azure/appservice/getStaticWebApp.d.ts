import * as pulumi from "@pulumi/pulumi";
import * as outputs from "../types/output";
/**
 * Use this data source to access information about an existing Static Web App.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as azure from "@pulumi/azure";
 *
 * const example = azure.appservice.getStaticWebApp({
 *     name: "existing",
 *     resourceGroupName: "existing",
 * });
 * ```
 */
export declare function getStaticWebApp(args: GetStaticWebAppArgs, opts?: pulumi.InvokeOptions): Promise<GetStaticWebAppResult>;
/**
 * A collection of arguments for invoking getStaticWebApp.
 */
export interface GetStaticWebAppArgs {
    /**
     * The name of this Static Web App.
     */
    name: string;
    /**
     * The name of the Resource Group where the Static Web App exists.
     */
    resourceGroupName: string;
}
/**
 * A collection of values returned by getStaticWebApp.
 */
export interface GetStaticWebAppResult {
    readonly apiKey: string;
    readonly appSettings: {
        [key: string]: string;
    };
    readonly basicAuths: outputs.appservice.GetStaticWebAppBasicAuth[];
    readonly configurationFileChangesEnabled: boolean;
    readonly defaultHostName: string;
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    readonly identities: outputs.appservice.GetStaticWebAppIdentity[];
    readonly location: string;
    readonly name: string;
    readonly previewEnvironmentsEnabled: boolean;
    readonly publicNetworkAccessEnabled: boolean;
    readonly repositoryBranch: string;
    readonly repositoryUrl: string;
    readonly resourceGroupName: string;
    readonly skuSize: string;
    readonly skuTier: string;
    readonly tags: {
        [key: string]: string;
    };
}
/**
 * Use this data source to access information about an existing Static Web App.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as azure from "@pulumi/azure";
 *
 * const example = azure.appservice.getStaticWebApp({
 *     name: "existing",
 *     resourceGroupName: "existing",
 * });
 * ```
 */
export declare function getStaticWebAppOutput(args: GetStaticWebAppOutputArgs, opts?: pulumi.InvokeOutputOptions): pulumi.Output<GetStaticWebAppResult>;
/**
 * A collection of arguments for invoking getStaticWebApp.
 */
export interface GetStaticWebAppOutputArgs {
    /**
     * The name of this Static Web App.
     */
    name: pulumi.Input<string>;
    /**
     * The name of the Resource Group where the Static Web App exists.
     */
    resourceGroupName: pulumi.Input<string>;
}
