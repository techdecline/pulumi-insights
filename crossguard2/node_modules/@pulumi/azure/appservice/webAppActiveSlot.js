"use strict";
// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***
Object.defineProperty(exports, "__esModule", { value: true });
exports.WebAppActiveSlot = void 0;
const pulumi = require("@pulumi/pulumi");
const utilities = require("../utilities");
/**
 * Manages a Web App Active Slot.
 *
 * ## Example Usage
 *
 * ### Windows Web App
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as azure from "@pulumi/azure";
 *
 * const example = new azure.core.ResourceGroup("example", {
 *     name: "example-resources",
 *     location: "West Europe",
 * });
 * const exampleServicePlan = new azure.appservice.ServicePlan("example", {
 *     name: "example-plan",
 *     resourceGroupName: example.name,
 *     location: example.location,
 *     osType: "Windows",
 *     skuName: "P1v2",
 * });
 * const exampleWindowsWebApp = new azure.appservice.WindowsWebApp("example", {
 *     name: "example-windows-web-app",
 *     resourceGroupName: example.name,
 *     location: exampleServicePlan.location,
 *     servicePlanId: exampleServicePlan.id,
 *     siteConfig: {},
 * });
 * const exampleWindowsWebAppSlot = new azure.appservice.WindowsWebAppSlot("example", {
 *     name: "example-windows-web-app-slot",
 *     appServiceId: exampleWindowsWebApp.name,
 *     siteConfig: {},
 * });
 * const exampleWebAppActiveSlot = new azure.appservice.WebAppActiveSlot("example", {slotId: exampleWindowsWebAppSlot.id});
 * ```
 *
 * ## Import
 *
 * a Web App Active Slot can be imported using the `resource id`, e.g.
 *
 * ```sh
 * $ pulumi import azure:appservice/webAppActiveSlot:WebAppActiveSlot example "/subscriptions/12345678-1234-9876-4563-123456789012/resourceGroups/resGroup1/providers/Microsoft.Web/sites/site1"
 * ```
 */
class WebAppActiveSlot extends pulumi.CustomResource {
    constructor(name, argsOrState, opts) {
        let resourceInputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState;
            resourceInputs["lastSuccessfulSwap"] = state ? state.lastSuccessfulSwap : undefined;
            resourceInputs["overwriteNetworkConfig"] = state ? state.overwriteNetworkConfig : undefined;
            resourceInputs["slotId"] = state ? state.slotId : undefined;
        }
        else {
            const args = argsOrState;
            if ((!args || args.slotId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'slotId'");
            }
            resourceInputs["overwriteNetworkConfig"] = args ? args.overwriteNetworkConfig : undefined;
            resourceInputs["slotId"] = args ? args.slotId : undefined;
            resourceInputs["lastSuccessfulSwap"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(WebAppActiveSlot.__pulumiType, name, resourceInputs, opts);
    }
    /**
     * Get an existing WebAppActiveSlot resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    static get(name, id, state, opts) {
        return new WebAppActiveSlot(name, state, Object.assign(Object.assign({}, opts), { id: id }));
    }
    /**
     * Returns true if the given object is an instance of WebAppActiveSlot.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    static isInstance(obj) {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === WebAppActiveSlot.__pulumiType;
    }
}
exports.WebAppActiveSlot = WebAppActiveSlot;
/** @internal */
WebAppActiveSlot.__pulumiType = 'azure:appservice/webAppActiveSlot:WebAppActiveSlot';
//# sourceMappingURL=webAppActiveSlot.js.map