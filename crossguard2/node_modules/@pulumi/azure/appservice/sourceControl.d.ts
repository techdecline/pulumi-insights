import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
/**
 * Manages an App Service Web App or Function App Source Control Configuration.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as azure from "@pulumi/azure";
 *
 * const example = new azure.core.ResourceGroup("example", {
 *     name: "example-resources",
 *     location: "West Europe",
 * });
 * const exampleServicePlan = new azure.appservice.ServicePlan("example", {
 *     name: "example",
 *     resourceGroupName: example.name,
 *     location: example.location,
 *     osType: "Linux",
 *     skuName: "P1v2",
 * });
 * const exampleLinuxWebApp = new azure.appservice.LinuxWebApp("example", {
 *     name: "example",
 *     resourceGroupName: example.name,
 *     location: exampleServicePlan.location,
 *     servicePlanId: exampleServicePlan.id,
 *     siteConfig: {},
 * });
 * const exampleSourceControl = new azure.appservice.SourceControl("example", {
 *     appId: exampleLinuxWebApp.id,
 *     repoUrl: "https://github.com/Azure-Samples/python-docs-hello-world",
 *     branch: "master",
 * });
 * ```
 *
 * ## Import
 *
 * App Service Source Controls can be imported using the `resource id`, e.g.
 *
 * ```sh
 * $ pulumi import azure:appservice/sourceControl:SourceControl example /subscriptions/12345678-1234-9876-4563-123456789012/resourceGroups/resGroup1/providers/Microsoft.Web/sites/site1
 * ```
 */
export declare class SourceControl extends pulumi.CustomResource {
    /**
     * Get an existing SourceControl resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    static get(name: string, id: pulumi.Input<pulumi.ID>, state?: SourceControlState, opts?: pulumi.CustomResourceOptions): SourceControl;
    /**
     * Returns true if the given object is an instance of SourceControl.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    static isInstance(obj: any): obj is SourceControl;
    /**
     * The ID of the Windows or Linux Web App. Changing this forces a new resource to be created.
     *
     * > **NOTE:** Function apps are not supported at this time.
     */
    readonly appId: pulumi.Output<string>;
    /**
     * The branch name to use for deployments. Changing this forces a new resource to be created.
     */
    readonly branch: pulumi.Output<string>;
    /**
     * A `githubActionConfiguration` block as defined below. Changing this forces a new resource to be created.
     */
    readonly githubActionConfiguration: pulumi.Output<outputs.appservice.SourceControlGithubActionConfiguration | undefined>;
    /**
     * The URL for the repository. Changing this forces a new resource to be created.
     */
    readonly repoUrl: pulumi.Output<string>;
    /**
     * Should the Deployment Rollback be enabled? Defaults to `false`. Changing this forces a new resource to be created.
     *
     * > **NOTE:** Azure can typically set this value automatically based on the `repoUrl` value.
     */
    readonly rollbackEnabled: pulumi.Output<boolean | undefined>;
    /**
     * The SCM Type in use. This value is decoded by the service from the repository information supplied.
     */
    readonly scmType: pulumi.Output<string>;
    /**
     * Should the App use local Git configuration. Changing this forces a new resource to be created.
     */
    readonly useLocalGit: pulumi.Output<boolean | undefined>;
    /**
     * Should code be deployed manually. Set to `false` to enable continuous integration, such as webhooks into online repos such as GitHub. Defaults to `false`. Changing this forces a new resource to be created.
     */
    readonly useManualIntegration: pulumi.Output<boolean | undefined>;
    /**
     * The repository specified is Mercurial. Defaults to `false`. Changing this forces a new resource to be created.
     */
    readonly useMercurial: pulumi.Output<boolean | undefined>;
    /**
     * Indicates if the Slot uses a GitHub action for deployment. This value is decoded by the service from the repository information supplied.
     */
    readonly usesGithubAction: pulumi.Output<boolean>;
    /**
     * Create a SourceControl resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: SourceControlArgs, opts?: pulumi.CustomResourceOptions);
}
/**
 * Input properties used for looking up and filtering SourceControl resources.
 */
export interface SourceControlState {
    /**
     * The ID of the Windows or Linux Web App. Changing this forces a new resource to be created.
     *
     * > **NOTE:** Function apps are not supported at this time.
     */
    appId?: pulumi.Input<string>;
    /**
     * The branch name to use for deployments. Changing this forces a new resource to be created.
     */
    branch?: pulumi.Input<string>;
    /**
     * A `githubActionConfiguration` block as defined below. Changing this forces a new resource to be created.
     */
    githubActionConfiguration?: pulumi.Input<inputs.appservice.SourceControlGithubActionConfiguration>;
    /**
     * The URL for the repository. Changing this forces a new resource to be created.
     */
    repoUrl?: pulumi.Input<string>;
    /**
     * Should the Deployment Rollback be enabled? Defaults to `false`. Changing this forces a new resource to be created.
     *
     * > **NOTE:** Azure can typically set this value automatically based on the `repoUrl` value.
     */
    rollbackEnabled?: pulumi.Input<boolean>;
    /**
     * The SCM Type in use. This value is decoded by the service from the repository information supplied.
     */
    scmType?: pulumi.Input<string>;
    /**
     * Should the App use local Git configuration. Changing this forces a new resource to be created.
     */
    useLocalGit?: pulumi.Input<boolean>;
    /**
     * Should code be deployed manually. Set to `false` to enable continuous integration, such as webhooks into online repos such as GitHub. Defaults to `false`. Changing this forces a new resource to be created.
     */
    useManualIntegration?: pulumi.Input<boolean>;
    /**
     * The repository specified is Mercurial. Defaults to `false`. Changing this forces a new resource to be created.
     */
    useMercurial?: pulumi.Input<boolean>;
    /**
     * Indicates if the Slot uses a GitHub action for deployment. This value is decoded by the service from the repository information supplied.
     */
    usesGithubAction?: pulumi.Input<boolean>;
}
/**
 * The set of arguments for constructing a SourceControl resource.
 */
export interface SourceControlArgs {
    /**
     * The ID of the Windows or Linux Web App. Changing this forces a new resource to be created.
     *
     * > **NOTE:** Function apps are not supported at this time.
     */
    appId: pulumi.Input<string>;
    /**
     * The branch name to use for deployments. Changing this forces a new resource to be created.
     */
    branch?: pulumi.Input<string>;
    /**
     * A `githubActionConfiguration` block as defined below. Changing this forces a new resource to be created.
     */
    githubActionConfiguration?: pulumi.Input<inputs.appservice.SourceControlGithubActionConfiguration>;
    /**
     * The URL for the repository. Changing this forces a new resource to be created.
     */
    repoUrl?: pulumi.Input<string>;
    /**
     * Should the Deployment Rollback be enabled? Defaults to `false`. Changing this forces a new resource to be created.
     *
     * > **NOTE:** Azure can typically set this value automatically based on the `repoUrl` value.
     */
    rollbackEnabled?: pulumi.Input<boolean>;
    /**
     * Should the App use local Git configuration. Changing this forces a new resource to be created.
     */
    useLocalGit?: pulumi.Input<boolean>;
    /**
     * Should code be deployed manually. Set to `false` to enable continuous integration, such as webhooks into online repos such as GitHub. Defaults to `false`. Changing this forces a new resource to be created.
     */
    useManualIntegration?: pulumi.Input<boolean>;
    /**
     * The repository specified is Mercurial. Defaults to `false`. Changing this forces a new resource to be created.
     */
    useMercurial?: pulumi.Input<boolean>;
}
