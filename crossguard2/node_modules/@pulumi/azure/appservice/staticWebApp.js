"use strict";
// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***
Object.defineProperty(exports, "__esModule", { value: true });
exports.StaticWebApp = void 0;
const pulumi = require("@pulumi/pulumi");
const utilities = require("../utilities");
/**
 * Manages an App Service Static Web App.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as azure from "@pulumi/azure";
 *
 * const example = new azure.core.ResourceGroup("example", {
 *     name: "example-resources",
 *     location: "West Europe",
 * });
 * const exampleStaticWebApp = new azure.appservice.StaticWebApp("example", {
 *     name: "example",
 *     resourceGroupName: example.name,
 *     location: example.location,
 * });
 * ```
 *
 * ## Import
 *
 * Static Web Apps can be imported using the `resource id`, e.g.
 *
 * ```sh
 * $ pulumi import azure:appservice/staticWebApp:StaticWebApp example /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/group1/providers/Microsoft.Web/staticSites/my-static-site1
 * ```
 */
class StaticWebApp extends pulumi.CustomResource {
    constructor(name, argsOrState, opts) {
        let resourceInputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState;
            resourceInputs["apiKey"] = state ? state.apiKey : undefined;
            resourceInputs["appSettings"] = state ? state.appSettings : undefined;
            resourceInputs["basicAuth"] = state ? state.basicAuth : undefined;
            resourceInputs["configurationFileChangesEnabled"] = state ? state.configurationFileChangesEnabled : undefined;
            resourceInputs["defaultHostName"] = state ? state.defaultHostName : undefined;
            resourceInputs["identity"] = state ? state.identity : undefined;
            resourceInputs["location"] = state ? state.location : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["previewEnvironmentsEnabled"] = state ? state.previewEnvironmentsEnabled : undefined;
            resourceInputs["publicNetworkAccessEnabled"] = state ? state.publicNetworkAccessEnabled : undefined;
            resourceInputs["repositoryBranch"] = state ? state.repositoryBranch : undefined;
            resourceInputs["repositoryToken"] = state ? state.repositoryToken : undefined;
            resourceInputs["repositoryUrl"] = state ? state.repositoryUrl : undefined;
            resourceInputs["resourceGroupName"] = state ? state.resourceGroupName : undefined;
            resourceInputs["skuSize"] = state ? state.skuSize : undefined;
            resourceInputs["skuTier"] = state ? state.skuTier : undefined;
            resourceInputs["tags"] = state ? state.tags : undefined;
        }
        else {
            const args = argsOrState;
            if ((!args || args.resourceGroupName === undefined) && !opts.urn) {
                throw new Error("Missing required property 'resourceGroupName'");
            }
            resourceInputs["appSettings"] = args ? args.appSettings : undefined;
            resourceInputs["basicAuth"] = (args === null || args === void 0 ? void 0 : args.basicAuth) ? pulumi.secret(args.basicAuth) : undefined;
            resourceInputs["configurationFileChangesEnabled"] = args ? args.configurationFileChangesEnabled : undefined;
            resourceInputs["identity"] = args ? args.identity : undefined;
            resourceInputs["location"] = args ? args.location : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["previewEnvironmentsEnabled"] = args ? args.previewEnvironmentsEnabled : undefined;
            resourceInputs["publicNetworkAccessEnabled"] = args ? args.publicNetworkAccessEnabled : undefined;
            resourceInputs["repositoryBranch"] = args ? args.repositoryBranch : undefined;
            resourceInputs["repositoryToken"] = (args === null || args === void 0 ? void 0 : args.repositoryToken) ? pulumi.secret(args.repositoryToken) : undefined;
            resourceInputs["repositoryUrl"] = args ? args.repositoryUrl : undefined;
            resourceInputs["resourceGroupName"] = args ? args.resourceGroupName : undefined;
            resourceInputs["skuSize"] = args ? args.skuSize : undefined;
            resourceInputs["skuTier"] = args ? args.skuTier : undefined;
            resourceInputs["tags"] = args ? args.tags : undefined;
            resourceInputs["apiKey"] = undefined /*out*/;
            resourceInputs["defaultHostName"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        const secretOpts = { additionalSecretOutputs: ["apiKey", "basicAuth", "repositoryToken"] };
        opts = pulumi.mergeOptions(opts, secretOpts);
        super(StaticWebApp.__pulumiType, name, resourceInputs, opts);
    }
    /**
     * Get an existing StaticWebApp resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    static get(name, id, state, opts) {
        return new StaticWebApp(name, state, Object.assign(Object.assign({}, opts), { id: id }));
    }
    /**
     * Returns true if the given object is an instance of StaticWebApp.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    static isInstance(obj) {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === StaticWebApp.__pulumiType;
    }
}
exports.StaticWebApp = StaticWebApp;
/** @internal */
StaticWebApp.__pulumiType = 'azure:appservice/staticWebApp:StaticWebApp';
//# sourceMappingURL=staticWebApp.js.map