"use strict";
// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***
Object.defineProperty(exports, "__esModule", { value: true });
exports.getFlexibleServerOutput = exports.getFlexibleServer = exports.FlexibleServerFirewallRule = exports.FlexibleServerConfiguration = exports.FlexibleServerActiveDirectoryAdministratory = exports.FlexibleServer = exports.FlexibleDatabase = void 0;
const pulumi = require("@pulumi/pulumi");
const utilities = require("../utilities");
exports.FlexibleDatabase = null;
utilities.lazyLoad(exports, ["FlexibleDatabase"], () => require("./flexibleDatabase"));
exports.FlexibleServer = null;
utilities.lazyLoad(exports, ["FlexibleServer"], () => require("./flexibleServer"));
exports.FlexibleServerActiveDirectoryAdministratory = null;
utilities.lazyLoad(exports, ["FlexibleServerActiveDirectoryAdministratory"], () => require("./flexibleServerActiveDirectoryAdministratory"));
exports.FlexibleServerConfiguration = null;
utilities.lazyLoad(exports, ["FlexibleServerConfiguration"], () => require("./flexibleServerConfiguration"));
exports.FlexibleServerFirewallRule = null;
utilities.lazyLoad(exports, ["FlexibleServerFirewallRule"], () => require("./flexibleServerFirewallRule"));
exports.getFlexibleServer = null;
exports.getFlexibleServerOutput = null;
utilities.lazyLoad(exports, ["getFlexibleServer", "getFlexibleServerOutput"], () => require("./getFlexibleServer"));
const _module = {
    version: utilities.getVersion(),
    construct: (name, type, urn) => {
        switch (type) {
            case "azure:mysql/flexibleDatabase:FlexibleDatabase":
                return new exports.FlexibleDatabase(name, undefined, { urn });
            case "azure:mysql/flexibleServer:FlexibleServer":
                return new exports.FlexibleServer(name, undefined, { urn });
            case "azure:mysql/flexibleServerActiveDirectoryAdministratory:FlexibleServerActiveDirectoryAdministratory":
                return new exports.FlexibleServerActiveDirectoryAdministratory(name, undefined, { urn });
            case "azure:mysql/flexibleServerConfiguration:FlexibleServerConfiguration":
                return new exports.FlexibleServerConfiguration(name, undefined, { urn });
            case "azure:mysql/flexibleServerFirewallRule:FlexibleServerFirewallRule":
                return new exports.FlexibleServerFirewallRule(name, undefined, { urn });
            default:
                throw new Error(`unknown resource type ${type}`);
        }
    },
};
pulumi.runtime.registerResourceModule("azure", "mysql/flexibleDatabase", _module);
pulumi.runtime.registerResourceModule("azure", "mysql/flexibleServer", _module);
pulumi.runtime.registerResourceModule("azure", "mysql/flexibleServerActiveDirectoryAdministratory", _module);
pulumi.runtime.registerResourceModule("azure", "mysql/flexibleServerConfiguration", _module);
pulumi.runtime.registerResourceModule("azure", "mysql/flexibleServerFirewallRule", _module);
//# sourceMappingURL=index.js.map