import * as pulumi from "@pulumi/pulumi";
/**
 * Manages a Backup Instance to back up PostgreSQL Flexible Server.
 *
 * > **Note:** Before using this resource, there are some prerequisite permissions for configure backup and restore. See more details from <https://learn.microsoft.com/azure/backup/backup-azure-database-postgresql-flex-overview>.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as azure from "@pulumi/azure";
 *
 * const example = new azure.core.ResourceGroup("example", {
 *     name: "example-resources",
 *     location: "West Europe",
 * });
 * const exampleFlexibleServer = new azure.postgresql.FlexibleServer("example", {
 *     name: "example-postgresqlfs",
 *     resourceGroupName: example.name,
 *     location: example.location,
 *     administratorLogin: "adminTerraform",
 *     administratorPassword: "QAZwsx123",
 *     storageMb: 32768,
 *     version: "12",
 *     skuName: "GP_Standard_D4s_v3",
 *     zone: "2",
 * });
 * const exampleBackupVault = new azure.dataprotection.BackupVault("example", {
 *     name: "example-backupvault",
 *     resourceGroupName: example.name,
 *     location: example.location,
 *     datastoreType: "VaultStore",
 *     redundancy: "LocallyRedundant",
 *     softDelete: "Off",
 *     identity: {
 *         type: "SystemAssigned",
 *     },
 * });
 * const exampleAssignment = new azure.authorization.Assignment("example", {
 *     scope: example.id,
 *     roleDefinitionName: "Reader",
 *     principalId: exampleBackupVault.identity.apply(identity => identity?.principalId),
 * });
 * const example2 = new azure.authorization.Assignment("example2", {
 *     scope: exampleFlexibleServer.id,
 *     roleDefinitionName: "PostgreSQL Flexible Server Long Term Retention Backup Role",
 *     principalId: exampleBackupVault.identity.apply(identity => identity?.principalId),
 * });
 * const exampleBackupPolicyPostgresqlFlexibleServer = new azure.dataprotection.BackupPolicyPostgresqlFlexibleServer("example", {
 *     name: "example-dp",
 *     vaultId: exampleBackupVault.id,
 *     backupRepeatingTimeIntervals: ["R/2021-05-23T02:30:00+00:00/P1W"],
 *     defaultRetentionRule: {
 *         lifeCycles: [{
 *             duration: "P4M",
 *             dataStoreType: "VaultStore",
 *         }],
 *     },
 * }, {
 *     dependsOn: [
 *         exampleAssignment,
 *         example2,
 *     ],
 * });
 * const exampleBackupInstancePostgresqlFlexibleServer = new azure.dataprotection.BackupInstancePostgresqlFlexibleServer("example", {
 *     name: "example-dbi",
 *     location: example.location,
 *     vaultId: exampleBackupVault.id,
 *     serverId: exampleFlexibleServer.id,
 *     backupPolicyId: exampleBackupPolicyPostgresqlFlexibleServer.id,
 * });
 * ```
 *
 * ## Import
 *
 * Backup Instance PostgreSQL Flexible Servers can be imported using the `resource id`, e.g.
 *
 * ```sh
 * $ pulumi import azure:dataprotection/backupInstancePostgresqlFlexibleServer:BackupInstancePostgresqlFlexibleServer example /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/group1/providers/Microsoft.DataProtection/backupVaults/vault1/backupInstances/backupInstance1
 * ```
 */
export declare class BackupInstancePostgresqlFlexibleServer extends pulumi.CustomResource {
    /**
     * Get an existing BackupInstancePostgresqlFlexibleServer resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    static get(name: string, id: pulumi.Input<pulumi.ID>, state?: BackupInstancePostgresqlFlexibleServerState, opts?: pulumi.CustomResourceOptions): BackupInstancePostgresqlFlexibleServer;
    /**
     * Returns true if the given object is an instance of BackupInstancePostgresqlFlexibleServer.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    static isInstance(obj: any): obj is BackupInstancePostgresqlFlexibleServer;
    /**
     * The ID of the Backup Policy.
     */
    readonly backupPolicyId: pulumi.Output<string>;
    /**
     * The location of the source database. Changing this forces a new resource to be created.
     */
    readonly location: pulumi.Output<string>;
    /**
     * Specifies the name of the Backup Instance for the PostgreSQL Flexible Server. Changing this forces a new resource to be created.
     */
    readonly name: pulumi.Output<string>;
    /**
     * The ID of the source server. Changing this forces a new resource to be created.
     */
    readonly serverId: pulumi.Output<string>;
    /**
     * The ID of the Backup Vault within which the PostgreSQL Flexible Server Backup Instance should exist. Changing this forces a new resource to be created.
     */
    readonly vaultId: pulumi.Output<string>;
    /**
     * Create a BackupInstancePostgresqlFlexibleServer resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: BackupInstancePostgresqlFlexibleServerArgs, opts?: pulumi.CustomResourceOptions);
}
/**
 * Input properties used for looking up and filtering BackupInstancePostgresqlFlexibleServer resources.
 */
export interface BackupInstancePostgresqlFlexibleServerState {
    /**
     * The ID of the Backup Policy.
     */
    backupPolicyId?: pulumi.Input<string>;
    /**
     * The location of the source database. Changing this forces a new resource to be created.
     */
    location?: pulumi.Input<string>;
    /**
     * Specifies the name of the Backup Instance for the PostgreSQL Flexible Server. Changing this forces a new resource to be created.
     */
    name?: pulumi.Input<string>;
    /**
     * The ID of the source server. Changing this forces a new resource to be created.
     */
    serverId?: pulumi.Input<string>;
    /**
     * The ID of the Backup Vault within which the PostgreSQL Flexible Server Backup Instance should exist. Changing this forces a new resource to be created.
     */
    vaultId?: pulumi.Input<string>;
}
/**
 * The set of arguments for constructing a BackupInstancePostgresqlFlexibleServer resource.
 */
export interface BackupInstancePostgresqlFlexibleServerArgs {
    /**
     * The ID of the Backup Policy.
     */
    backupPolicyId: pulumi.Input<string>;
    /**
     * The location of the source database. Changing this forces a new resource to be created.
     */
    location?: pulumi.Input<string>;
    /**
     * Specifies the name of the Backup Instance for the PostgreSQL Flexible Server. Changing this forces a new resource to be created.
     */
    name?: pulumi.Input<string>;
    /**
     * The ID of the source server. Changing this forces a new resource to be created.
     */
    serverId: pulumi.Input<string>;
    /**
     * The ID of the Backup Vault within which the PostgreSQL Flexible Server Backup Instance should exist. Changing this forces a new resource to be created.
     */
    vaultId: pulumi.Input<string>;
}
