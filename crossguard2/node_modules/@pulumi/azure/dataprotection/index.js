"use strict";
// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***
Object.defineProperty(exports, "__esModule", { value: true });
exports.ResourceGuard = exports.getBackupVaultOutput = exports.getBackupVault = exports.BackupVault = exports.BackupPolicyPostgresqlFlexibleServer = exports.BackupPolicyPostgresql = exports.BackupPolicyMysqlFlexibleServer = exports.BackupPolicyKubernetesCluster = exports.BackupPolicyDisk = exports.BackupPolicyBlobStorage = exports.BackupInstancePostgresqlFlexibleServer = exports.BackupInstancePostgresql = exports.BackupInstanceMysqlFlexibleServer = exports.BackupInstanceKubernetesCluster = exports.BackupInstanceDisk = exports.BackupInstanceBlogStorage = void 0;
const pulumi = require("@pulumi/pulumi");
const utilities = require("../utilities");
exports.BackupInstanceBlogStorage = null;
utilities.lazyLoad(exports, ["BackupInstanceBlogStorage"], () => require("./backupInstanceBlogStorage"));
exports.BackupInstanceDisk = null;
utilities.lazyLoad(exports, ["BackupInstanceDisk"], () => require("./backupInstanceDisk"));
exports.BackupInstanceKubernetesCluster = null;
utilities.lazyLoad(exports, ["BackupInstanceKubernetesCluster"], () => require("./backupInstanceKubernetesCluster"));
exports.BackupInstanceMysqlFlexibleServer = null;
utilities.lazyLoad(exports, ["BackupInstanceMysqlFlexibleServer"], () => require("./backupInstanceMysqlFlexibleServer"));
exports.BackupInstancePostgresql = null;
utilities.lazyLoad(exports, ["BackupInstancePostgresql"], () => require("./backupInstancePostgresql"));
exports.BackupInstancePostgresqlFlexibleServer = null;
utilities.lazyLoad(exports, ["BackupInstancePostgresqlFlexibleServer"], () => require("./backupInstancePostgresqlFlexibleServer"));
exports.BackupPolicyBlobStorage = null;
utilities.lazyLoad(exports, ["BackupPolicyBlobStorage"], () => require("./backupPolicyBlobStorage"));
exports.BackupPolicyDisk = null;
utilities.lazyLoad(exports, ["BackupPolicyDisk"], () => require("./backupPolicyDisk"));
exports.BackupPolicyKubernetesCluster = null;
utilities.lazyLoad(exports, ["BackupPolicyKubernetesCluster"], () => require("./backupPolicyKubernetesCluster"));
exports.BackupPolicyMysqlFlexibleServer = null;
utilities.lazyLoad(exports, ["BackupPolicyMysqlFlexibleServer"], () => require("./backupPolicyMysqlFlexibleServer"));
exports.BackupPolicyPostgresql = null;
utilities.lazyLoad(exports, ["BackupPolicyPostgresql"], () => require("./backupPolicyPostgresql"));
exports.BackupPolicyPostgresqlFlexibleServer = null;
utilities.lazyLoad(exports, ["BackupPolicyPostgresqlFlexibleServer"], () => require("./backupPolicyPostgresqlFlexibleServer"));
exports.BackupVault = null;
utilities.lazyLoad(exports, ["BackupVault"], () => require("./backupVault"));
exports.getBackupVault = null;
exports.getBackupVaultOutput = null;
utilities.lazyLoad(exports, ["getBackupVault", "getBackupVaultOutput"], () => require("./getBackupVault"));
exports.ResourceGuard = null;
utilities.lazyLoad(exports, ["ResourceGuard"], () => require("./resourceGuard"));
const _module = {
    version: utilities.getVersion(),
    construct: (name, type, urn) => {
        switch (type) {
            case "azure:dataprotection/backupInstanceBlogStorage:BackupInstanceBlogStorage":
                return new exports.BackupInstanceBlogStorage(name, undefined, { urn });
            case "azure:dataprotection/backupInstanceDisk:BackupInstanceDisk":
                return new exports.BackupInstanceDisk(name, undefined, { urn });
            case "azure:dataprotection/backupInstanceKubernetesCluster:BackupInstanceKubernetesCluster":
                return new exports.BackupInstanceKubernetesCluster(name, undefined, { urn });
            case "azure:dataprotection/backupInstanceMysqlFlexibleServer:BackupInstanceMysqlFlexibleServer":
                return new exports.BackupInstanceMysqlFlexibleServer(name, undefined, { urn });
            case "azure:dataprotection/backupInstancePostgresql:BackupInstancePostgresql":
                return new exports.BackupInstancePostgresql(name, undefined, { urn });
            case "azure:dataprotection/backupInstancePostgresqlFlexibleServer:BackupInstancePostgresqlFlexibleServer":
                return new exports.BackupInstancePostgresqlFlexibleServer(name, undefined, { urn });
            case "azure:dataprotection/backupPolicyBlobStorage:BackupPolicyBlobStorage":
                return new exports.BackupPolicyBlobStorage(name, undefined, { urn });
            case "azure:dataprotection/backupPolicyDisk:BackupPolicyDisk":
                return new exports.BackupPolicyDisk(name, undefined, { urn });
            case "azure:dataprotection/backupPolicyKubernetesCluster:BackupPolicyKubernetesCluster":
                return new exports.BackupPolicyKubernetesCluster(name, undefined, { urn });
            case "azure:dataprotection/backupPolicyMysqlFlexibleServer:BackupPolicyMysqlFlexibleServer":
                return new exports.BackupPolicyMysqlFlexibleServer(name, undefined, { urn });
            case "azure:dataprotection/backupPolicyPostgresql:BackupPolicyPostgresql":
                return new exports.BackupPolicyPostgresql(name, undefined, { urn });
            case "azure:dataprotection/backupPolicyPostgresqlFlexibleServer:BackupPolicyPostgresqlFlexibleServer":
                return new exports.BackupPolicyPostgresqlFlexibleServer(name, undefined, { urn });
            case "azure:dataprotection/backupVault:BackupVault":
                return new exports.BackupVault(name, undefined, { urn });
            case "azure:dataprotection/resourceGuard:ResourceGuard":
                return new exports.ResourceGuard(name, undefined, { urn });
            default:
                throw new Error(`unknown resource type ${type}`);
        }
    },
};
pulumi.runtime.registerResourceModule("azure", "dataprotection/backupInstanceBlogStorage", _module);
pulumi.runtime.registerResourceModule("azure", "dataprotection/backupInstanceDisk", _module);
pulumi.runtime.registerResourceModule("azure", "dataprotection/backupInstanceKubernetesCluster", _module);
pulumi.runtime.registerResourceModule("azure", "dataprotection/backupInstanceMysqlFlexibleServer", _module);
pulumi.runtime.registerResourceModule("azure", "dataprotection/backupInstancePostgresql", _module);
pulumi.runtime.registerResourceModule("azure", "dataprotection/backupInstancePostgresqlFlexibleServer", _module);
pulumi.runtime.registerResourceModule("azure", "dataprotection/backupPolicyBlobStorage", _module);
pulumi.runtime.registerResourceModule("azure", "dataprotection/backupPolicyDisk", _module);
pulumi.runtime.registerResourceModule("azure", "dataprotection/backupPolicyKubernetesCluster", _module);
pulumi.runtime.registerResourceModule("azure", "dataprotection/backupPolicyMysqlFlexibleServer", _module);
pulumi.runtime.registerResourceModule("azure", "dataprotection/backupPolicyPostgresql", _module);
pulumi.runtime.registerResourceModule("azure", "dataprotection/backupPolicyPostgresqlFlexibleServer", _module);
pulumi.runtime.registerResourceModule("azure", "dataprotection/backupVault", _module);
pulumi.runtime.registerResourceModule("azure", "dataprotection/resourceGuard", _module);
//# sourceMappingURL=index.js.map