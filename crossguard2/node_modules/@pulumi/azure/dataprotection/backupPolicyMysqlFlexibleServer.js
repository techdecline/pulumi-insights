"use strict";
// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***
Object.defineProperty(exports, "__esModule", { value: true });
exports.BackupPolicyMysqlFlexibleServer = void 0;
const pulumi = require("@pulumi/pulumi");
const utilities = require("../utilities");
/**
 * Manages a Backup Policy to back up MySQL Flexible Server.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as azure from "@pulumi/azure";
 *
 * const example = new azure.core.ResourceGroup("example", {
 *     name: "example-resources",
 *     location: "West Europe",
 * });
 * const exampleBackupVault = new azure.dataprotection.BackupVault("example", {
 *     name: "example-backup-vault",
 *     resourceGroupName: example.name,
 *     location: example.location,
 *     datastoreType: "VaultStore",
 *     redundancy: "LocallyRedundant",
 *     identity: {
 *         type: "SystemAssigned",
 *     },
 * });
 * const exampleBackupPolicyMysqlFlexibleServer = new azure.dataprotection.BackupPolicyMysqlFlexibleServer("example", {
 *     name: "example-backup-policy",
 *     vaultId: exampleBackupVault.id,
 *     backupRepeatingTimeIntervals: ["R/2021-05-23T02:30:00+00:00/P1W"],
 *     timeZone: "India Standard Time",
 *     defaultRetentionRule: {
 *         lifeCycles: [{
 *             duration: "P4M",
 *             dataStoreType: "VaultStore",
 *         }],
 *     },
 *     retentionRules: [
 *         {
 *             name: "weekly",
 *             lifeCycles: [{
 *                 duration: "P6M",
 *                 dataStoreType: "VaultStore",
 *             }],
 *             priority: 20,
 *             criteria: {
 *                 absoluteCriteria: "FirstOfWeek",
 *             },
 *         },
 *         {
 *             name: "thursday",
 *             lifeCycles: [{
 *                 duration: "P1W",
 *                 dataStoreType: "VaultStore",
 *             }],
 *             priority: 25,
 *             criteria: {
 *                 daysOfWeeks: ["Thursday"],
 *                 scheduledBackupTimes: ["2021-05-23T02:30:00Z"],
 *             },
 *         },
 *         {
 *             name: "monthly",
 *             lifeCycles: [{
 *                 duration: "P1D",
 *                 dataStoreType: "VaultStore",
 *             }],
 *             priority: 15,
 *             criteria: {
 *                 weeksOfMonths: [
 *                     "First",
 *                     "Last",
 *                 ],
 *                 daysOfWeeks: ["Tuesday"],
 *                 scheduledBackupTimes: ["2021-05-23T02:30:00Z"],
 *             },
 *         },
 *     ],
 * });
 * ```
 *
 * ## Import
 *
 * Backup Policy MySQL Flexible Server's can be imported using the `resource id`, e.g.
 *
 * ```sh
 * $ pulumi import azure:dataprotection/backupPolicyMysqlFlexibleServer:BackupPolicyMysqlFlexibleServer example /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/group1/providers/Microsoft.DataProtection/backupVaults/vault1/backupPolicies/backupPolicy1
 * ```
 */
class BackupPolicyMysqlFlexibleServer extends pulumi.CustomResource {
    constructor(name, argsOrState, opts) {
        let resourceInputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState;
            resourceInputs["backupRepeatingTimeIntervals"] = state ? state.backupRepeatingTimeIntervals : undefined;
            resourceInputs["defaultRetentionRule"] = state ? state.defaultRetentionRule : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["retentionRules"] = state ? state.retentionRules : undefined;
            resourceInputs["timeZone"] = state ? state.timeZone : undefined;
            resourceInputs["vaultId"] = state ? state.vaultId : undefined;
        }
        else {
            const args = argsOrState;
            if ((!args || args.backupRepeatingTimeIntervals === undefined) && !opts.urn) {
                throw new Error("Missing required property 'backupRepeatingTimeIntervals'");
            }
            if ((!args || args.defaultRetentionRule === undefined) && !opts.urn) {
                throw new Error("Missing required property 'defaultRetentionRule'");
            }
            if ((!args || args.vaultId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'vaultId'");
            }
            resourceInputs["backupRepeatingTimeIntervals"] = args ? args.backupRepeatingTimeIntervals : undefined;
            resourceInputs["defaultRetentionRule"] = args ? args.defaultRetentionRule : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["retentionRules"] = args ? args.retentionRules : undefined;
            resourceInputs["timeZone"] = args ? args.timeZone : undefined;
            resourceInputs["vaultId"] = args ? args.vaultId : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(BackupPolicyMysqlFlexibleServer.__pulumiType, name, resourceInputs, opts);
    }
    /**
     * Get an existing BackupPolicyMysqlFlexibleServer resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    static get(name, id, state, opts) {
        return new BackupPolicyMysqlFlexibleServer(name, state, Object.assign(Object.assign({}, opts), { id: id }));
    }
    /**
     * Returns true if the given object is an instance of BackupPolicyMysqlFlexibleServer.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    static isInstance(obj) {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === BackupPolicyMysqlFlexibleServer.__pulumiType;
    }
}
exports.BackupPolicyMysqlFlexibleServer = BackupPolicyMysqlFlexibleServer;
/** @internal */
BackupPolicyMysqlFlexibleServer.__pulumiType = 'azure:dataprotection/backupPolicyMysqlFlexibleServer:BackupPolicyMysqlFlexibleServer';
//# sourceMappingURL=backupPolicyMysqlFlexibleServer.js.map