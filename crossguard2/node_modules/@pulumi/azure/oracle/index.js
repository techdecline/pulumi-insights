"use strict";
// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***
Object.defineProperty(exports, "__esModule", { value: true });
exports.getGiVersionsOutput = exports.getGiVersions = exports.getExadataInfrastructureOutput = exports.getExadataInfrastructure = exports.getDbSystemShapesOutput = exports.getDbSystemShapes = exports.getDbServersOutput = exports.getDbServers = exports.getDbNodesOutput = exports.getDbNodes = exports.getCloudVmClusterOutput = exports.getCloudVmCluster = exports.getAutonomousDatabaseOutput = exports.getAutonomousDatabase = exports.getAdbsNationalCharacterSetsOutput = exports.getAdbsNationalCharacterSets = exports.getAdbsCharacterSetsOutput = exports.getAdbsCharacterSets = exports.ExadataInfrastructure = exports.CloudVmCluster = exports.AutonomousDatabase = void 0;
const pulumi = require("@pulumi/pulumi");
const utilities = require("../utilities");
exports.AutonomousDatabase = null;
utilities.lazyLoad(exports, ["AutonomousDatabase"], () => require("./autonomousDatabase"));
exports.CloudVmCluster = null;
utilities.lazyLoad(exports, ["CloudVmCluster"], () => require("./cloudVmCluster"));
exports.ExadataInfrastructure = null;
utilities.lazyLoad(exports, ["ExadataInfrastructure"], () => require("./exadataInfrastructure"));
exports.getAdbsCharacterSets = null;
exports.getAdbsCharacterSetsOutput = null;
utilities.lazyLoad(exports, ["getAdbsCharacterSets", "getAdbsCharacterSetsOutput"], () => require("./getAdbsCharacterSets"));
exports.getAdbsNationalCharacterSets = null;
exports.getAdbsNationalCharacterSetsOutput = null;
utilities.lazyLoad(exports, ["getAdbsNationalCharacterSets", "getAdbsNationalCharacterSetsOutput"], () => require("./getAdbsNationalCharacterSets"));
exports.getAutonomousDatabase = null;
exports.getAutonomousDatabaseOutput = null;
utilities.lazyLoad(exports, ["getAutonomousDatabase", "getAutonomousDatabaseOutput"], () => require("./getAutonomousDatabase"));
exports.getCloudVmCluster = null;
exports.getCloudVmClusterOutput = null;
utilities.lazyLoad(exports, ["getCloudVmCluster", "getCloudVmClusterOutput"], () => require("./getCloudVmCluster"));
exports.getDbNodes = null;
exports.getDbNodesOutput = null;
utilities.lazyLoad(exports, ["getDbNodes", "getDbNodesOutput"], () => require("./getDbNodes"));
exports.getDbServers = null;
exports.getDbServersOutput = null;
utilities.lazyLoad(exports, ["getDbServers", "getDbServersOutput"], () => require("./getDbServers"));
exports.getDbSystemShapes = null;
exports.getDbSystemShapesOutput = null;
utilities.lazyLoad(exports, ["getDbSystemShapes", "getDbSystemShapesOutput"], () => require("./getDbSystemShapes"));
exports.getExadataInfrastructure = null;
exports.getExadataInfrastructureOutput = null;
utilities.lazyLoad(exports, ["getExadataInfrastructure", "getExadataInfrastructureOutput"], () => require("./getExadataInfrastructure"));
exports.getGiVersions = null;
exports.getGiVersionsOutput = null;
utilities.lazyLoad(exports, ["getGiVersions", "getGiVersionsOutput"], () => require("./getGiVersions"));
const _module = {
    version: utilities.getVersion(),
    construct: (name, type, urn) => {
        switch (type) {
            case "azure:oracle/autonomousDatabase:AutonomousDatabase":
                return new exports.AutonomousDatabase(name, undefined, { urn });
            case "azure:oracle/cloudVmCluster:CloudVmCluster":
                return new exports.CloudVmCluster(name, undefined, { urn });
            case "azure:oracle/exadataInfrastructure:ExadataInfrastructure":
                return new exports.ExadataInfrastructure(name, undefined, { urn });
            default:
                throw new Error(`unknown resource type ${type}`);
        }
    },
};
pulumi.runtime.registerResourceModule("azure", "oracle/autonomousDatabase", _module);
pulumi.runtime.registerResourceModule("azure", "oracle/cloudVmCluster", _module);
pulumi.runtime.registerResourceModule("azure", "oracle/exadataInfrastructure", _module);
//# sourceMappingURL=index.js.map