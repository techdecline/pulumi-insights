import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
/**
 * Manages a Cloud Exadata Infrastructure.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as azure from "@pulumi/azure";
 *
 * const example = new azure.core.ResourceGroup("example", {
 *     name: "example-resources",
 *     location: "West Europe",
 * });
 * const exampleExadataInfrastructure = new azure.oracle.ExadataInfrastructure("example", {
 *     name: "example-exadata-infra",
 *     resourceGroupName: example.name,
 *     location: example.location,
 *     zones: ["1"],
 *     displayName: "example-exadata-infra",
 *     storageCount: 3,
 *     computeCount: 2,
 *     shape: "Exadata.X9M",
 * });
 * ```
 *
 * ## Import
 *
 * Cloud Exadata Infrastructures can be imported using the `resource id`, e.g.
 *
 * ```sh
 * $ pulumi import azure:oracle/exadataInfrastructure:ExadataInfrastructure example /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/resourceGroup/providers/Oracle.Database/cloudExadataInfrastructures/cloudExadataInfrastructures1
 * ```
 */
export declare class ExadataInfrastructure extends pulumi.CustomResource {
    /**
     * Get an existing ExadataInfrastructure resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    static get(name: string, id: pulumi.Input<pulumi.ID>, state?: ExadataInfrastructureState, opts?: pulumi.CustomResourceOptions): ExadataInfrastructure;
    /**
     * Returns true if the given object is an instance of ExadataInfrastructure.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    static isInstance(obj: any): obj is ExadataInfrastructure;
    /**
     * The number of compute servers for the Cloud Exadata Infrastructure. Changing this forces a new Cloud Exadata Infrastructure to be created.
     */
    readonly computeCount: pulumi.Output<number>;
    /**
     * The email address used by Oracle to send notifications regarding databases and infrastructure. Changing this forces a new Cloud Exadata Infrastructure to be created.
     */
    readonly customerContacts: pulumi.Output<string[]>;
    /**
     * The user-friendly name for the Cloud Exadata Infrastructure resource. The name does not need to be unique. Changing this forces a new Cloud Exadata Infrastructure to be created.
     */
    readonly displayName: pulumi.Output<string>;
    /**
     * The Azure Region where the Cloud Exadata Infrastructure should exist. Changing this forces a new Cloud Exadata Infrastructure to be created.
     */
    readonly location: pulumi.Output<string>;
    /**
     * One or more `maintenanceWindow` blocks as defined below. Changing this forces a new Cloud Exadata Infrastructure to be created.
     */
    readonly maintenanceWindows: pulumi.Output<outputs.oracle.ExadataInfrastructureMaintenanceWindow[]>;
    /**
     * The name which should be used for this Cloud Exadata Infrastructure. Changing this forces a new Cloud Exadata Infrastructure to be created.
     */
    readonly name: pulumi.Output<string>;
    /**
     * The name of the Resource Group where the ODB@A Infrastructure should exist. Changing this forces a new Cloud Exadata Infrastructure to be created.
     */
    readonly resourceGroupName: pulumi.Output<string>;
    /**
     * The shape of the ODB@A infrastructure resource. Changing this forces a new Cloud Exadata Infrastructure to be created.
     */
    readonly shape: pulumi.Output<string>;
    /**
     * The number of storage servers for the Cloud Exadata Infrastructure. Changing this forces a new Cloud Exadata Infrastructure to be created.
     */
    readonly storageCount: pulumi.Output<number>;
    /**
     * A mapping of tags which should be assigned to the Cloud Exadata Infrastructure.
     */
    readonly tags: pulumi.Output<{
        [key: string]: string;
    } | undefined>;
    /**
     * Cloud Exadata Infrastructure zones. Changing this forces a new Cloud Exadata Infrastructure to be created.
     */
    readonly zones: pulumi.Output<string[]>;
    /**
     * Create a ExadataInfrastructure resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: ExadataInfrastructureArgs, opts?: pulumi.CustomResourceOptions);
}
/**
 * Input properties used for looking up and filtering ExadataInfrastructure resources.
 */
export interface ExadataInfrastructureState {
    /**
     * The number of compute servers for the Cloud Exadata Infrastructure. Changing this forces a new Cloud Exadata Infrastructure to be created.
     */
    computeCount?: pulumi.Input<number>;
    /**
     * The email address used by Oracle to send notifications regarding databases and infrastructure. Changing this forces a new Cloud Exadata Infrastructure to be created.
     */
    customerContacts?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The user-friendly name for the Cloud Exadata Infrastructure resource. The name does not need to be unique. Changing this forces a new Cloud Exadata Infrastructure to be created.
     */
    displayName?: pulumi.Input<string>;
    /**
     * The Azure Region where the Cloud Exadata Infrastructure should exist. Changing this forces a new Cloud Exadata Infrastructure to be created.
     */
    location?: pulumi.Input<string>;
    /**
     * One or more `maintenanceWindow` blocks as defined below. Changing this forces a new Cloud Exadata Infrastructure to be created.
     */
    maintenanceWindows?: pulumi.Input<pulumi.Input<inputs.oracle.ExadataInfrastructureMaintenanceWindow>[]>;
    /**
     * The name which should be used for this Cloud Exadata Infrastructure. Changing this forces a new Cloud Exadata Infrastructure to be created.
     */
    name?: pulumi.Input<string>;
    /**
     * The name of the Resource Group where the ODB@A Infrastructure should exist. Changing this forces a new Cloud Exadata Infrastructure to be created.
     */
    resourceGroupName?: pulumi.Input<string>;
    /**
     * The shape of the ODB@A infrastructure resource. Changing this forces a new Cloud Exadata Infrastructure to be created.
     */
    shape?: pulumi.Input<string>;
    /**
     * The number of storage servers for the Cloud Exadata Infrastructure. Changing this forces a new Cloud Exadata Infrastructure to be created.
     */
    storageCount?: pulumi.Input<number>;
    /**
     * A mapping of tags which should be assigned to the Cloud Exadata Infrastructure.
     */
    tags?: pulumi.Input<{
        [key: string]: pulumi.Input<string>;
    }>;
    /**
     * Cloud Exadata Infrastructure zones. Changing this forces a new Cloud Exadata Infrastructure to be created.
     */
    zones?: pulumi.Input<pulumi.Input<string>[]>;
}
/**
 * The set of arguments for constructing a ExadataInfrastructure resource.
 */
export interface ExadataInfrastructureArgs {
    /**
     * The number of compute servers for the Cloud Exadata Infrastructure. Changing this forces a new Cloud Exadata Infrastructure to be created.
     */
    computeCount: pulumi.Input<number>;
    /**
     * The email address used by Oracle to send notifications regarding databases and infrastructure. Changing this forces a new Cloud Exadata Infrastructure to be created.
     */
    customerContacts?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The user-friendly name for the Cloud Exadata Infrastructure resource. The name does not need to be unique. Changing this forces a new Cloud Exadata Infrastructure to be created.
     */
    displayName: pulumi.Input<string>;
    /**
     * The Azure Region where the Cloud Exadata Infrastructure should exist. Changing this forces a new Cloud Exadata Infrastructure to be created.
     */
    location?: pulumi.Input<string>;
    /**
     * One or more `maintenanceWindow` blocks as defined below. Changing this forces a new Cloud Exadata Infrastructure to be created.
     */
    maintenanceWindows?: pulumi.Input<pulumi.Input<inputs.oracle.ExadataInfrastructureMaintenanceWindow>[]>;
    /**
     * The name which should be used for this Cloud Exadata Infrastructure. Changing this forces a new Cloud Exadata Infrastructure to be created.
     */
    name?: pulumi.Input<string>;
    /**
     * The name of the Resource Group where the ODB@A Infrastructure should exist. Changing this forces a new Cloud Exadata Infrastructure to be created.
     */
    resourceGroupName: pulumi.Input<string>;
    /**
     * The shape of the ODB@A infrastructure resource. Changing this forces a new Cloud Exadata Infrastructure to be created.
     */
    shape: pulumi.Input<string>;
    /**
     * The number of storage servers for the Cloud Exadata Infrastructure. Changing this forces a new Cloud Exadata Infrastructure to be created.
     */
    storageCount: pulumi.Input<number>;
    /**
     * A mapping of tags which should be assigned to the Cloud Exadata Infrastructure.
     */
    tags?: pulumi.Input<{
        [key: string]: pulumi.Input<string>;
    }>;
    /**
     * Cloud Exadata Infrastructure zones. Changing this forces a new Cloud Exadata Infrastructure to be created.
     */
    zones: pulumi.Input<pulumi.Input<string>[]>;
}
