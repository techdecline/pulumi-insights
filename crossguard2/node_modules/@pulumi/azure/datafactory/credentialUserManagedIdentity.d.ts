import * as pulumi from "@pulumi/pulumi";
export declare class CredentialUserManagedIdentity extends pulumi.CustomResource {
    /**
     * Get an existing CredentialUserManagedIdentity resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    static get(name: string, id: pulumi.Input<pulumi.ID>, state?: CredentialUserManagedIdentityState, opts?: pulumi.CustomResourceOptions): CredentialUserManagedIdentity;
    /**
     * Returns true if the given object is an instance of CredentialUserManagedIdentity.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    static isInstance(obj: any): obj is CredentialUserManagedIdentity;
    /**
     * (Optional) List of string annotations.
     */
    readonly annotations: pulumi.Output<string[] | undefined>;
    /**
     * The resource ID of the parent Data Factory
     */
    readonly dataFactoryId: pulumi.Output<string>;
    /**
     * (Optional) Short text description
     */
    readonly description: pulumi.Output<string | undefined>;
    /**
     * The resource ID of the User Assigned Managed Identity
     */
    readonly identityId: pulumi.Output<string>;
    /**
     * The desired name of the credential resource
     */
    readonly name: pulumi.Output<string>;
    /**
     * Create a CredentialUserManagedIdentity resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: CredentialUserManagedIdentityArgs, opts?: pulumi.CustomResourceOptions);
}
/**
 * Input properties used for looking up and filtering CredentialUserManagedIdentity resources.
 */
export interface CredentialUserManagedIdentityState {
    /**
     * (Optional) List of string annotations.
     */
    annotations?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The resource ID of the parent Data Factory
     */
    dataFactoryId?: pulumi.Input<string>;
    /**
     * (Optional) Short text description
     */
    description?: pulumi.Input<string>;
    /**
     * The resource ID of the User Assigned Managed Identity
     */
    identityId?: pulumi.Input<string>;
    /**
     * The desired name of the credential resource
     */
    name?: pulumi.Input<string>;
}
/**
 * The set of arguments for constructing a CredentialUserManagedIdentity resource.
 */
export interface CredentialUserManagedIdentityArgs {
    /**
     * (Optional) List of string annotations.
     */
    annotations?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The resource ID of the parent Data Factory
     */
    dataFactoryId: pulumi.Input<string>;
    /**
     * (Optional) Short text description
     */
    description?: pulumi.Input<string>;
    /**
     * The resource ID of the User Assigned Managed Identity
     */
    identityId: pulumi.Input<string>;
    /**
     * The desired name of the credential resource
     */
    name?: pulumi.Input<string>;
}
