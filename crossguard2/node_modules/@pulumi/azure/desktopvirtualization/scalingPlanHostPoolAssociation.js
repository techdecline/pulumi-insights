"use strict";
// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***
Object.defineProperty(exports, "__esModule", { value: true });
exports.ScalingPlanHostPoolAssociation = void 0;
const pulumi = require("@pulumi/pulumi");
const utilities = require("../utilities");
/**
 * Manages a Virtual Desktop Scaling Plan Host Pool Association.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as azure from "@pulumi/azure";
 * import * as azuread from "@pulumi/azuread";
 *
 * const exampleResourceGroup = new azure.core.ResourceGroup("example", {
 *     name: "rg-example-virtualdesktop",
 *     location: "West Europe",
 * });
 * const example = azuread.getServicePrincipal({
 *     displayName: "Windows Virtual Desktop",
 * });
 * const exampleAssignment = new azure.authorization.Assignment("example", {
 *     scope: exampleResourceGroup.id,
 *     roleDefinitionName: "Desktop Virtualization Power On Off Contributor",
 *     principalId: example.then(example => example.objectId),
 * });
 * const exampleHostPool = new azure.desktopvirtualization.HostPool("example", {
 *     name: "example-hostpool",
 *     location: exampleResourceGroup.location,
 *     resourceGroupName: exampleResourceGroup.name,
 *     type: "Pooled",
 *     validateEnvironment: true,
 *     loadBalancerType: "BreadthFirst",
 * });
 * const exampleScalingPlan = new azure.desktopvirtualization.ScalingPlan("example", {
 *     name: "example-scaling-plan",
 *     location: exampleResourceGroup.location,
 *     resourceGroupName: exampleResourceGroup.name,
 *     friendlyName: "Scaling Plan Test",
 *     description: "Test Scaling Plan",
 *     timeZone: "GMT Standard Time",
 *     schedules: [{
 *         name: "Weekdays",
 *         daysOfWeeks: [
 *             "Monday",
 *             "Tuesday",
 *             "Wednesday",
 *             "Thursday",
 *             "Friday",
 *         ],
 *         rampUpStartTime: "06:00",
 *         rampUpLoadBalancingAlgorithm: "BreadthFirst",
 *         rampUpMinimumHostsPercent: 20,
 *         rampUpCapacityThresholdPercent: 10,
 *         peakStartTime: "09:00",
 *         peakLoadBalancingAlgorithm: "BreadthFirst",
 *         rampDownStartTime: "18:00",
 *         rampDownLoadBalancingAlgorithm: "BreadthFirst",
 *         rampDownMinimumHostsPercent: 10,
 *         rampDownForceLogoffUsers: false,
 *         rampDownWaitTimeMinutes: 45,
 *         rampDownNotificationMessage: "Please log of in the next 45 minutes...",
 *         rampDownCapacityThresholdPercent: 5,
 *         rampDownStopHostsWhen: "ZeroSessions",
 *         offPeakStartTime: "22:00",
 *         offPeakLoadBalancingAlgorithm: "BreadthFirst",
 *     }],
 * }, {
 *     dependsOn: [exampleAssignment],
 * });
 * const exampleScalingPlanHostPoolAssociation = new azure.desktopvirtualization.ScalingPlanHostPoolAssociation("example", {
 *     hostPoolId: exampleHostPool.id,
 *     scalingPlanId: exampleScalingPlan.id,
 *     enabled: true,
 * }, {
 *     dependsOn: [exampleAssignment],
 * });
 * ```
 *
 * ## Import
 *
 * Associations between Virtual Desktop Scaling Plans and Virtual Desktop Host Pools can be imported using the `resource id`, e.g.
 *
 * ```sh
 * $ pulumi import azure:desktopvirtualization/scalingPlanHostPoolAssociation:ScalingPlanHostPoolAssociation example "/subscriptions/12345678-1234-9876-4563-123456789012/resourceGroups/resGroup1/providers/Microsoft.DesktopVirtualization/scalingPlans/plan1|/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/myGroup1/providers/Microsoft.DesktopVirtualization/hostPools/myhostpool"
 * ```
 */
class ScalingPlanHostPoolAssociation extends pulumi.CustomResource {
    constructor(name, argsOrState, opts) {
        let resourceInputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState;
            resourceInputs["enabled"] = state ? state.enabled : undefined;
            resourceInputs["hostPoolId"] = state ? state.hostPoolId : undefined;
            resourceInputs["scalingPlanId"] = state ? state.scalingPlanId : undefined;
        }
        else {
            const args = argsOrState;
            if ((!args || args.enabled === undefined) && !opts.urn) {
                throw new Error("Missing required property 'enabled'");
            }
            if ((!args || args.hostPoolId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'hostPoolId'");
            }
            if ((!args || args.scalingPlanId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'scalingPlanId'");
            }
            resourceInputs["enabled"] = args ? args.enabled : undefined;
            resourceInputs["hostPoolId"] = args ? args.hostPoolId : undefined;
            resourceInputs["scalingPlanId"] = args ? args.scalingPlanId : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(ScalingPlanHostPoolAssociation.__pulumiType, name, resourceInputs, opts);
    }
    /**
     * Get an existing ScalingPlanHostPoolAssociation resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    static get(name, id, state, opts) {
        return new ScalingPlanHostPoolAssociation(name, state, Object.assign(Object.assign({}, opts), { id: id }));
    }
    /**
     * Returns true if the given object is an instance of ScalingPlanHostPoolAssociation.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    static isInstance(obj) {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === ScalingPlanHostPoolAssociation.__pulumiType;
    }
}
exports.ScalingPlanHostPoolAssociation = ScalingPlanHostPoolAssociation;
/** @internal */
ScalingPlanHostPoolAssociation.__pulumiType = 'azure:desktopvirtualization/scalingPlanHostPoolAssociation:ScalingPlanHostPoolAssociation';
//# sourceMappingURL=scalingPlanHostPoolAssociation.js.map