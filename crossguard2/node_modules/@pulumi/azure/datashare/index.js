"use strict";
// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***
Object.defineProperty(exports, "__esModule", { value: true });
exports.Share = exports.getShareOutput = exports.getShare = exports.getDatasetKustoDatabaseOutput = exports.getDatasetKustoDatabase = exports.getDatasetKustoClusterOutput = exports.getDatasetKustoCluster = exports.getDatasetDataLakeGen2Output = exports.getDatasetDataLakeGen2 = exports.getDatasetBlobStorageOutput = exports.getDatasetBlobStorage = exports.getAccountOutput = exports.getAccount = exports.DatasetKustoDatabase = exports.DatasetKustoCluster = exports.DatasetDataLakeGen2 = exports.DatasetBlobStorage = exports.Account = void 0;
const pulumi = require("@pulumi/pulumi");
const utilities = require("../utilities");
exports.Account = null;
utilities.lazyLoad(exports, ["Account"], () => require("./account"));
exports.DatasetBlobStorage = null;
utilities.lazyLoad(exports, ["DatasetBlobStorage"], () => require("./datasetBlobStorage"));
exports.DatasetDataLakeGen2 = null;
utilities.lazyLoad(exports, ["DatasetDataLakeGen2"], () => require("./datasetDataLakeGen2"));
exports.DatasetKustoCluster = null;
utilities.lazyLoad(exports, ["DatasetKustoCluster"], () => require("./datasetKustoCluster"));
exports.DatasetKustoDatabase = null;
utilities.lazyLoad(exports, ["DatasetKustoDatabase"], () => require("./datasetKustoDatabase"));
exports.getAccount = null;
exports.getAccountOutput = null;
utilities.lazyLoad(exports, ["getAccount", "getAccountOutput"], () => require("./getAccount"));
exports.getDatasetBlobStorage = null;
exports.getDatasetBlobStorageOutput = null;
utilities.lazyLoad(exports, ["getDatasetBlobStorage", "getDatasetBlobStorageOutput"], () => require("./getDatasetBlobStorage"));
exports.getDatasetDataLakeGen2 = null;
exports.getDatasetDataLakeGen2Output = null;
utilities.lazyLoad(exports, ["getDatasetDataLakeGen2", "getDatasetDataLakeGen2Output"], () => require("./getDatasetDataLakeGen2"));
exports.getDatasetKustoCluster = null;
exports.getDatasetKustoClusterOutput = null;
utilities.lazyLoad(exports, ["getDatasetKustoCluster", "getDatasetKustoClusterOutput"], () => require("./getDatasetKustoCluster"));
exports.getDatasetKustoDatabase = null;
exports.getDatasetKustoDatabaseOutput = null;
utilities.lazyLoad(exports, ["getDatasetKustoDatabase", "getDatasetKustoDatabaseOutput"], () => require("./getDatasetKustoDatabase"));
exports.getShare = null;
exports.getShareOutput = null;
utilities.lazyLoad(exports, ["getShare", "getShareOutput"], () => require("./getShare"));
exports.Share = null;
utilities.lazyLoad(exports, ["Share"], () => require("./share"));
const _module = {
    version: utilities.getVersion(),
    construct: (name, type, urn) => {
        switch (type) {
            case "azure:datashare/account:Account":
                return new exports.Account(name, undefined, { urn });
            case "azure:datashare/datasetBlobStorage:DatasetBlobStorage":
                return new exports.DatasetBlobStorage(name, undefined, { urn });
            case "azure:datashare/datasetDataLakeGen2:DatasetDataLakeGen2":
                return new exports.DatasetDataLakeGen2(name, undefined, { urn });
            case "azure:datashare/datasetKustoCluster:DatasetKustoCluster":
                return new exports.DatasetKustoCluster(name, undefined, { urn });
            case "azure:datashare/datasetKustoDatabase:DatasetKustoDatabase":
                return new exports.DatasetKustoDatabase(name, undefined, { urn });
            case "azure:datashare/share:Share":
                return new exports.Share(name, undefined, { urn });
            default:
                throw new Error(`unknown resource type ${type}`);
        }
    },
};
pulumi.runtime.registerResourceModule("azure", "datashare/account", _module);
pulumi.runtime.registerResourceModule("azure", "datashare/datasetBlobStorage", _module);
pulumi.runtime.registerResourceModule("azure", "datashare/datasetDataLakeGen2", _module);
pulumi.runtime.registerResourceModule("azure", "datashare/datasetKustoCluster", _module);
pulumi.runtime.registerResourceModule("azure", "datashare/datasetKustoDatabase", _module);
pulumi.runtime.registerResourceModule("azure", "datashare/share", _module);
//# sourceMappingURL=index.js.map