"use strict";
// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __exportStar = (this && this.__exportStar) || function(m, exports) {
    for (var p in m) if (p !== "default" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.TopicAuthorizationRule = exports.Topic = exports.SubscriptionRule = exports.Subscription = exports.QueueAuthorizationRule = exports.Queue = exports.NamespaceDisasterRecoveryConfig = exports.NamespaceAuthorizationRule = exports.Namespace = exports.getTopicAuthorizationRuleOutput = exports.getTopicAuthorizationRule = exports.getTopicOutput = exports.getTopic = exports.getSubscriptionOutput = exports.getSubscription = exports.getQueueAuthorizationRuleOutput = exports.getQueueAuthorizationRule = exports.getQueueOutput = exports.getQueue = exports.getNamespaceDisasterRecoveryConfigOutput = exports.getNamespaceDisasterRecoveryConfig = exports.getNamespaceAuthorizationRuleOutput = exports.getNamespaceAuthorizationRule = exports.getNamespaceOutput = exports.getNamespace = void 0;
const pulumi = require("@pulumi/pulumi");
const utilities = require("../utilities");
exports.getNamespace = null;
exports.getNamespaceOutput = null;
utilities.lazyLoad(exports, ["getNamespace", "getNamespaceOutput"], () => require("./getNamespace"));
exports.getNamespaceAuthorizationRule = null;
exports.getNamespaceAuthorizationRuleOutput = null;
utilities.lazyLoad(exports, ["getNamespaceAuthorizationRule", "getNamespaceAuthorizationRuleOutput"], () => require("./getNamespaceAuthorizationRule"));
exports.getNamespaceDisasterRecoveryConfig = null;
exports.getNamespaceDisasterRecoveryConfigOutput = null;
utilities.lazyLoad(exports, ["getNamespaceDisasterRecoveryConfig", "getNamespaceDisasterRecoveryConfigOutput"], () => require("./getNamespaceDisasterRecoveryConfig"));
exports.getQueue = null;
exports.getQueueOutput = null;
utilities.lazyLoad(exports, ["getQueue", "getQueueOutput"], () => require("./getQueue"));
exports.getQueueAuthorizationRule = null;
exports.getQueueAuthorizationRuleOutput = null;
utilities.lazyLoad(exports, ["getQueueAuthorizationRule", "getQueueAuthorizationRuleOutput"], () => require("./getQueueAuthorizationRule"));
exports.getSubscription = null;
exports.getSubscriptionOutput = null;
utilities.lazyLoad(exports, ["getSubscription", "getSubscriptionOutput"], () => require("./getSubscription"));
exports.getTopic = null;
exports.getTopicOutput = null;
utilities.lazyLoad(exports, ["getTopic", "getTopicOutput"], () => require("./getTopic"));
exports.getTopicAuthorizationRule = null;
exports.getTopicAuthorizationRuleOutput = null;
utilities.lazyLoad(exports, ["getTopicAuthorizationRule", "getTopicAuthorizationRuleOutput"], () => require("./getTopicAuthorizationRule"));
exports.Namespace = null;
utilities.lazyLoad(exports, ["Namespace"], () => require("./namespace"));
exports.NamespaceAuthorizationRule = null;
utilities.lazyLoad(exports, ["NamespaceAuthorizationRule"], () => require("./namespaceAuthorizationRule"));
exports.NamespaceDisasterRecoveryConfig = null;
utilities.lazyLoad(exports, ["NamespaceDisasterRecoveryConfig"], () => require("./namespaceDisasterRecoveryConfig"));
exports.Queue = null;
utilities.lazyLoad(exports, ["Queue"], () => require("./queue"));
exports.QueueAuthorizationRule = null;
utilities.lazyLoad(exports, ["QueueAuthorizationRule"], () => require("./queueAuthorizationRule"));
exports.Subscription = null;
utilities.lazyLoad(exports, ["Subscription"], () => require("./subscription"));
exports.SubscriptionRule = null;
utilities.lazyLoad(exports, ["SubscriptionRule"], () => require("./subscriptionRule"));
exports.Topic = null;
utilities.lazyLoad(exports, ["Topic"], () => require("./topic"));
exports.TopicAuthorizationRule = null;
utilities.lazyLoad(exports, ["TopicAuthorizationRule"], () => require("./topicAuthorizationRule"));
__exportStar(require("./zMixins"), exports);
const _module = {
    version: utilities.getVersion(),
    construct: (name, type, urn) => {
        switch (type) {
            case "azure:servicebus/namespace:Namespace":
                return new exports.Namespace(name, undefined, { urn });
            case "azure:servicebus/namespaceAuthorizationRule:NamespaceAuthorizationRule":
                return new exports.NamespaceAuthorizationRule(name, undefined, { urn });
            case "azure:servicebus/namespaceDisasterRecoveryConfig:NamespaceDisasterRecoveryConfig":
                return new exports.NamespaceDisasterRecoveryConfig(name, undefined, { urn });
            case "azure:servicebus/queue:Queue":
                return new exports.Queue(name, undefined, { urn });
            case "azure:servicebus/queueAuthorizationRule:QueueAuthorizationRule":
                return new exports.QueueAuthorizationRule(name, undefined, { urn });
            case "azure:servicebus/subscription:Subscription":
                return new exports.Subscription(name, undefined, { urn });
            case "azure:servicebus/subscriptionRule:SubscriptionRule":
                return new exports.SubscriptionRule(name, undefined, { urn });
            case "azure:servicebus/topic:Topic":
                return new exports.Topic(name, undefined, { urn });
            case "azure:servicebus/topicAuthorizationRule:TopicAuthorizationRule":
                return new exports.TopicAuthorizationRule(name, undefined, { urn });
            default:
                throw new Error(`unknown resource type ${type}`);
        }
    },
};
pulumi.runtime.registerResourceModule("azure", "servicebus/namespace", _module);
pulumi.runtime.registerResourceModule("azure", "servicebus/namespaceAuthorizationRule", _module);
pulumi.runtime.registerResourceModule("azure", "servicebus/namespaceDisasterRecoveryConfig", _module);
pulumi.runtime.registerResourceModule("azure", "servicebus/queue", _module);
pulumi.runtime.registerResourceModule("azure", "servicebus/queueAuthorizationRule", _module);
pulumi.runtime.registerResourceModule("azure", "servicebus/subscription", _module);
pulumi.runtime.registerResourceModule("azure", "servicebus/subscriptionRule", _module);
pulumi.runtime.registerResourceModule("azure", "servicebus/topic", _module);
pulumi.runtime.registerResourceModule("azure", "servicebus/topicAuthorizationRule", _module);
//# sourceMappingURL=index.js.map