import * as pulumi from "@pulumi/pulumi";
/**
 * Manages a Redis Cache Access Policy
 *
 * ## Import
 *
 * Redis Cache Access Policy can be imported using the `resource id`, e.g.
 *
 * ```sh
 * $ pulumi import azure:redis/cacheAccessPolicy:CacheAccessPolicy example /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/group1/providers/Microsoft.Cache/redis/cache1/accessPolicies/policy1
 * ```
 */
export declare class CacheAccessPolicy extends pulumi.CustomResource {
    /**
     * Get an existing CacheAccessPolicy resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    static get(name: string, id: pulumi.Input<pulumi.ID>, state?: CacheAccessPolicyState, opts?: pulumi.CustomResourceOptions): CacheAccessPolicy;
    /**
     * Returns true if the given object is an instance of CacheAccessPolicy.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    static isInstance(obj: any): obj is CacheAccessPolicy;
    /**
     * The name of the Redis Cache Access Policy. Changing this forces a new Redis Cache Access Policy to be created.
     */
    readonly name: pulumi.Output<string>;
    /**
     * Permissions that are going to be assigned to this Redis Cache Access Policy.
     */
    readonly permissions: pulumi.Output<string>;
    /**
     * The ID of the Redis Cache. Changing this forces a new Redis Cache Access Policy to be created.
     */
    readonly redisCacheId: pulumi.Output<string>;
    /**
     * Create a CacheAccessPolicy resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: CacheAccessPolicyArgs, opts?: pulumi.CustomResourceOptions);
}
/**
 * Input properties used for looking up and filtering CacheAccessPolicy resources.
 */
export interface CacheAccessPolicyState {
    /**
     * The name of the Redis Cache Access Policy. Changing this forces a new Redis Cache Access Policy to be created.
     */
    name?: pulumi.Input<string>;
    /**
     * Permissions that are going to be assigned to this Redis Cache Access Policy.
     */
    permissions?: pulumi.Input<string>;
    /**
     * The ID of the Redis Cache. Changing this forces a new Redis Cache Access Policy to be created.
     */
    redisCacheId?: pulumi.Input<string>;
}
/**
 * The set of arguments for constructing a CacheAccessPolicy resource.
 */
export interface CacheAccessPolicyArgs {
    /**
     * The name of the Redis Cache Access Policy. Changing this forces a new Redis Cache Access Policy to be created.
     */
    name?: pulumi.Input<string>;
    /**
     * Permissions that are going to be assigned to this Redis Cache Access Policy.
     */
    permissions: pulumi.Input<string>;
    /**
     * The ID of the Redis Cache. Changing this forces a new Redis Cache Access Policy to be created.
     */
    redisCacheId: pulumi.Input<string>;
}
