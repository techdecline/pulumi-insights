"use strict";
// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***
Object.defineProperty(exports, "__esModule", { value: true });
exports.NetworkSlice = exports.NetworkSite = exports.NetworkSimPolicy = exports.NetworkSimGroup = exports.NetworkSim = exports.NetworkService = exports.NetworkPacketCoreDataPlane = exports.NetworkPacketCoreControlPlane = exports.NetworkDataNetwork = exports.NetworkAttachedDataNetwork = exports.Network = exports.getNetworkSliceOutput = exports.getNetworkSlice = exports.getNetworkSiteOutput = exports.getNetworkSite = exports.getNetworkSimPolicyOutput = exports.getNetworkSimPolicy = exports.getNetworkSimGroupOutput = exports.getNetworkSimGroup = exports.getNetworkSimOutput = exports.getNetworkSim = exports.getNetworkServiceOutput = exports.getNetworkService = exports.getNetworkPacketCoreDataPlaneOutput = exports.getNetworkPacketCoreDataPlane = exports.getNetworkPacketCoreControlPlaneOutput = exports.getNetworkPacketCoreControlPlane = exports.getNetworkDataNetworkOutput = exports.getNetworkDataNetwork = exports.getNetworkAttachedDataNetworkOutput = exports.getNetworkAttachedDataNetwork = exports.getNetworkOutput = exports.getNetwork = void 0;
const pulumi = require("@pulumi/pulumi");
const utilities = require("../utilities");
exports.getNetwork = null;
exports.getNetworkOutput = null;
utilities.lazyLoad(exports, ["getNetwork", "getNetworkOutput"], () => require("./getNetwork"));
exports.getNetworkAttachedDataNetwork = null;
exports.getNetworkAttachedDataNetworkOutput = null;
utilities.lazyLoad(exports, ["getNetworkAttachedDataNetwork", "getNetworkAttachedDataNetworkOutput"], () => require("./getNetworkAttachedDataNetwork"));
exports.getNetworkDataNetwork = null;
exports.getNetworkDataNetworkOutput = null;
utilities.lazyLoad(exports, ["getNetworkDataNetwork", "getNetworkDataNetworkOutput"], () => require("./getNetworkDataNetwork"));
exports.getNetworkPacketCoreControlPlane = null;
exports.getNetworkPacketCoreControlPlaneOutput = null;
utilities.lazyLoad(exports, ["getNetworkPacketCoreControlPlane", "getNetworkPacketCoreControlPlaneOutput"], () => require("./getNetworkPacketCoreControlPlane"));
exports.getNetworkPacketCoreDataPlane = null;
exports.getNetworkPacketCoreDataPlaneOutput = null;
utilities.lazyLoad(exports, ["getNetworkPacketCoreDataPlane", "getNetworkPacketCoreDataPlaneOutput"], () => require("./getNetworkPacketCoreDataPlane"));
exports.getNetworkService = null;
exports.getNetworkServiceOutput = null;
utilities.lazyLoad(exports, ["getNetworkService", "getNetworkServiceOutput"], () => require("./getNetworkService"));
exports.getNetworkSim = null;
exports.getNetworkSimOutput = null;
utilities.lazyLoad(exports, ["getNetworkSim", "getNetworkSimOutput"], () => require("./getNetworkSim"));
exports.getNetworkSimGroup = null;
exports.getNetworkSimGroupOutput = null;
utilities.lazyLoad(exports, ["getNetworkSimGroup", "getNetworkSimGroupOutput"], () => require("./getNetworkSimGroup"));
exports.getNetworkSimPolicy = null;
exports.getNetworkSimPolicyOutput = null;
utilities.lazyLoad(exports, ["getNetworkSimPolicy", "getNetworkSimPolicyOutput"], () => require("./getNetworkSimPolicy"));
exports.getNetworkSite = null;
exports.getNetworkSiteOutput = null;
utilities.lazyLoad(exports, ["getNetworkSite", "getNetworkSiteOutput"], () => require("./getNetworkSite"));
exports.getNetworkSlice = null;
exports.getNetworkSliceOutput = null;
utilities.lazyLoad(exports, ["getNetworkSlice", "getNetworkSliceOutput"], () => require("./getNetworkSlice"));
exports.Network = null;
utilities.lazyLoad(exports, ["Network"], () => require("./network"));
exports.NetworkAttachedDataNetwork = null;
utilities.lazyLoad(exports, ["NetworkAttachedDataNetwork"], () => require("./networkAttachedDataNetwork"));
exports.NetworkDataNetwork = null;
utilities.lazyLoad(exports, ["NetworkDataNetwork"], () => require("./networkDataNetwork"));
exports.NetworkPacketCoreControlPlane = null;
utilities.lazyLoad(exports, ["NetworkPacketCoreControlPlane"], () => require("./networkPacketCoreControlPlane"));
exports.NetworkPacketCoreDataPlane = null;
utilities.lazyLoad(exports, ["NetworkPacketCoreDataPlane"], () => require("./networkPacketCoreDataPlane"));
exports.NetworkService = null;
utilities.lazyLoad(exports, ["NetworkService"], () => require("./networkService"));
exports.NetworkSim = null;
utilities.lazyLoad(exports, ["NetworkSim"], () => require("./networkSim"));
exports.NetworkSimGroup = null;
utilities.lazyLoad(exports, ["NetworkSimGroup"], () => require("./networkSimGroup"));
exports.NetworkSimPolicy = null;
utilities.lazyLoad(exports, ["NetworkSimPolicy"], () => require("./networkSimPolicy"));
exports.NetworkSite = null;
utilities.lazyLoad(exports, ["NetworkSite"], () => require("./networkSite"));
exports.NetworkSlice = null;
utilities.lazyLoad(exports, ["NetworkSlice"], () => require("./networkSlice"));
const _module = {
    version: utilities.getVersion(),
    construct: (name, type, urn) => {
        switch (type) {
            case "azure:mobile/network:Network":
                return new exports.Network(name, undefined, { urn });
            case "azure:mobile/networkAttachedDataNetwork:NetworkAttachedDataNetwork":
                return new exports.NetworkAttachedDataNetwork(name, undefined, { urn });
            case "azure:mobile/networkDataNetwork:NetworkDataNetwork":
                return new exports.NetworkDataNetwork(name, undefined, { urn });
            case "azure:mobile/networkPacketCoreControlPlane:NetworkPacketCoreControlPlane":
                return new exports.NetworkPacketCoreControlPlane(name, undefined, { urn });
            case "azure:mobile/networkPacketCoreDataPlane:NetworkPacketCoreDataPlane":
                return new exports.NetworkPacketCoreDataPlane(name, undefined, { urn });
            case "azure:mobile/networkService:NetworkService":
                return new exports.NetworkService(name, undefined, { urn });
            case "azure:mobile/networkSim:NetworkSim":
                return new exports.NetworkSim(name, undefined, { urn });
            case "azure:mobile/networkSimGroup:NetworkSimGroup":
                return new exports.NetworkSimGroup(name, undefined, { urn });
            case "azure:mobile/networkSimPolicy:NetworkSimPolicy":
                return new exports.NetworkSimPolicy(name, undefined, { urn });
            case "azure:mobile/networkSite:NetworkSite":
                return new exports.NetworkSite(name, undefined, { urn });
            case "azure:mobile/networkSlice:NetworkSlice":
                return new exports.NetworkSlice(name, undefined, { urn });
            default:
                throw new Error(`unknown resource type ${type}`);
        }
    },
};
pulumi.runtime.registerResourceModule("azure", "mobile/network", _module);
pulumi.runtime.registerResourceModule("azure", "mobile/networkAttachedDataNetwork", _module);
pulumi.runtime.registerResourceModule("azure", "mobile/networkDataNetwork", _module);
pulumi.runtime.registerResourceModule("azure", "mobile/networkPacketCoreControlPlane", _module);
pulumi.runtime.registerResourceModule("azure", "mobile/networkPacketCoreDataPlane", _module);
pulumi.runtime.registerResourceModule("azure", "mobile/networkService", _module);
pulumi.runtime.registerResourceModule("azure", "mobile/networkSim", _module);
pulumi.runtime.registerResourceModule("azure", "mobile/networkSimGroup", _module);
pulumi.runtime.registerResourceModule("azure", "mobile/networkSimPolicy", _module);
pulumi.runtime.registerResourceModule("azure", "mobile/networkSite", _module);
pulumi.runtime.registerResourceModule("azure", "mobile/networkSlice", _module);
//# sourceMappingURL=index.js.map