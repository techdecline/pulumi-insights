import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
/**
 * Manages a Mobile Network Sim.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as azure from "@pulumi/azure";
 *
 * const example = new azure.core.ResourceGroup("example", {
 *     name: "example-resources",
 *     location: "West Europe",
 * });
 * const exampleNetwork = new azure.mobile.Network("example", {
 *     name: "example-mn",
 *     location: example.location,
 *     resourceGroupName: example.name,
 *     mobileCountryCode: "001",
 *     mobileNetworkCode: "01",
 * });
 * const exampleNetworkSimGroup = new azure.mobile.NetworkSimGroup("example", {
 *     name: "example-mnsg",
 *     location: example.location,
 *     mobileNetworkId: exampleNetwork.id,
 * });
 * const exampleNetworkSlice = new azure.mobile.NetworkSlice("example", {
 *     name: "example-slice",
 *     mobileNetworkId: exampleNetwork.id,
 *     location: example.location,
 *     singleNetworkSliceSelectionAssistanceInformation: {
 *         sliceServiceType: 1,
 *     },
 * });
 * const exampleNetworkAttachedDataNetwork = new azure.mobile.NetworkAttachedDataNetwork("example", {
 *     mobileNetworkDataNetworkName: exampleAzurermMobileNetworkDataNetwork.name,
 *     mobileNetworkPacketCoreDataPlaneId: exampleAzurermMobileNetworkPacketCoreDataPlane.id,
 *     location: example.location,
 *     dnsAddresses: ["1.1.1.1"],
 *     userEquipmentAddressPoolPrefixes: ["2.4.0.0/24"],
 *     userEquipmentStaticAddressPoolPrefixes: ["2.4.1.0/24"],
 *     userPlaneAccessName: "test",
 *     userPlaneAccessIpv4Address: "10.204.141.4",
 *     userPlaneAccessIpv4Gateway: "10.204.141.1",
 *     userPlaneAccessIpv4Subnet: "10.204.141.0/24",
 * });
 * const exampleNetworkSim = new azure.mobile.NetworkSim("example", {
 *     name: "example-sim",
 *     mobileNetworkSimGroupId: exampleNetworkSimGroup.id,
 *     authenticationKey: "00000000000000000000000000000000",
 *     integratedCircuitCardIdentifier: "8900000000000000000",
 *     internationalMobileSubscriberIdentity: "000000000000000",
 *     operatorKeyCode: "00000000000000000000000000000000",
 *     staticIpConfigurations: [{
 *         attachedDataNetworkId: test.id,
 *         sliceId: testAzurermMobileNetworkSlice.id,
 *         staticIpv4Address: "2.4.0.1",
 *     }],
 * });
 * ```
 *
 * ## Import
 *
 * Mobile Network Sim can be imported using the `resource id`, e.g.
 *
 * ```sh
 * $ pulumi import azure:mobile/networkSim:NetworkSim example /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/resourceGroup1/providers/Microsoft.MobileNetwork/simGroups/simGroup1/sims/sim1
 * ```
 */
export declare class NetworkSim extends pulumi.CustomResource {
    /**
     * Get an existing NetworkSim resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    static get(name: string, id: pulumi.Input<pulumi.ID>, state?: NetworkSimState, opts?: pulumi.CustomResourceOptions): NetworkSim;
    /**
     * Returns true if the given object is an instance of NetworkSim.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    static isInstance(obj: any): obj is NetworkSim;
    /**
     * The Ki value for the SIM.
     */
    readonly authenticationKey: pulumi.Output<string>;
    /**
     * An optional free-form text field that can be used to record the device type this SIM is associated with, for example `Video camera`. The Azure portal allows SIMs to be grouped and filtered based on this value.
     */
    readonly deviceType: pulumi.Output<string | undefined>;
    /**
     * The integrated circuit card ID (ICCID) for the SIM. Changing this forces a new Mobile Network Sim to be created.
     */
    readonly integratedCircuitCardIdentifier: pulumi.Output<string>;
    /**
     * The international mobile subscriber identity (IMSI) for the SIM. Changing this forces a new Mobile Network Sim to be created.
     */
    readonly internationalMobileSubscriberIdentity: pulumi.Output<string>;
    /**
     * The ID of the Mobile Network which the Mobile Network Sim belongs to. Changing this forces a new Mobile Network Sim to be created.
     */
    readonly mobileNetworkSimGroupId: pulumi.Output<string>;
    /**
     * The name which should be used for this Mobile Network Sim. Changing this forces a new Mobile Network Sim to be created.
     */
    readonly name: pulumi.Output<string>;
    /**
     * The Opc value for the SIM.
     */
    readonly operatorKeyCode: pulumi.Output<string>;
    /**
     * The ID of SIM policy used by this SIM.
     */
    readonly simPolicyId: pulumi.Output<string | undefined>;
    /**
     * The state of the SIM resource.
     */
    readonly simState: pulumi.Output<string>;
    /**
     * A `staticIpConfiguration` block as defined below.
     */
    readonly staticIpConfigurations: pulumi.Output<outputs.mobile.NetworkSimStaticIpConfiguration[] | undefined>;
    /**
     * The public key fingerprint of the SIM vendor who provided this SIM, if any.
     */
    readonly vendorKeyFingerprint: pulumi.Output<string>;
    /**
     * The name of the SIM vendor who provided this SIM, if any.
     */
    readonly vendorName: pulumi.Output<string>;
    /**
     * Create a NetworkSim resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: NetworkSimArgs, opts?: pulumi.CustomResourceOptions);
}
/**
 * Input properties used for looking up and filtering NetworkSim resources.
 */
export interface NetworkSimState {
    /**
     * The Ki value for the SIM.
     */
    authenticationKey?: pulumi.Input<string>;
    /**
     * An optional free-form text field that can be used to record the device type this SIM is associated with, for example `Video camera`. The Azure portal allows SIMs to be grouped and filtered based on this value.
     */
    deviceType?: pulumi.Input<string>;
    /**
     * The integrated circuit card ID (ICCID) for the SIM. Changing this forces a new Mobile Network Sim to be created.
     */
    integratedCircuitCardIdentifier?: pulumi.Input<string>;
    /**
     * The international mobile subscriber identity (IMSI) for the SIM. Changing this forces a new Mobile Network Sim to be created.
     */
    internationalMobileSubscriberIdentity?: pulumi.Input<string>;
    /**
     * The ID of the Mobile Network which the Mobile Network Sim belongs to. Changing this forces a new Mobile Network Sim to be created.
     */
    mobileNetworkSimGroupId?: pulumi.Input<string>;
    /**
     * The name which should be used for this Mobile Network Sim. Changing this forces a new Mobile Network Sim to be created.
     */
    name?: pulumi.Input<string>;
    /**
     * The Opc value for the SIM.
     */
    operatorKeyCode?: pulumi.Input<string>;
    /**
     * The ID of SIM policy used by this SIM.
     */
    simPolicyId?: pulumi.Input<string>;
    /**
     * The state of the SIM resource.
     */
    simState?: pulumi.Input<string>;
    /**
     * A `staticIpConfiguration` block as defined below.
     */
    staticIpConfigurations?: pulumi.Input<pulumi.Input<inputs.mobile.NetworkSimStaticIpConfiguration>[]>;
    /**
     * The public key fingerprint of the SIM vendor who provided this SIM, if any.
     */
    vendorKeyFingerprint?: pulumi.Input<string>;
    /**
     * The name of the SIM vendor who provided this SIM, if any.
     */
    vendorName?: pulumi.Input<string>;
}
/**
 * The set of arguments for constructing a NetworkSim resource.
 */
export interface NetworkSimArgs {
    /**
     * The Ki value for the SIM.
     */
    authenticationKey: pulumi.Input<string>;
    /**
     * An optional free-form text field that can be used to record the device type this SIM is associated with, for example `Video camera`. The Azure portal allows SIMs to be grouped and filtered based on this value.
     */
    deviceType?: pulumi.Input<string>;
    /**
     * The integrated circuit card ID (ICCID) for the SIM. Changing this forces a new Mobile Network Sim to be created.
     */
    integratedCircuitCardIdentifier: pulumi.Input<string>;
    /**
     * The international mobile subscriber identity (IMSI) for the SIM. Changing this forces a new Mobile Network Sim to be created.
     */
    internationalMobileSubscriberIdentity: pulumi.Input<string>;
    /**
     * The ID of the Mobile Network which the Mobile Network Sim belongs to. Changing this forces a new Mobile Network Sim to be created.
     */
    mobileNetworkSimGroupId: pulumi.Input<string>;
    /**
     * The name which should be used for this Mobile Network Sim. Changing this forces a new Mobile Network Sim to be created.
     */
    name?: pulumi.Input<string>;
    /**
     * The Opc value for the SIM.
     */
    operatorKeyCode: pulumi.Input<string>;
    /**
     * The ID of SIM policy used by this SIM.
     */
    simPolicyId?: pulumi.Input<string>;
    /**
     * A `staticIpConfiguration` block as defined below.
     */
    staticIpConfigurations?: pulumi.Input<pulumi.Input<inputs.mobile.NetworkSimStaticIpConfiguration>[]>;
}
