"use strict";
// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***
Object.defineProperty(exports, "__esModule", { value: true });
exports.LocalRulestack = void 0;
const pulumi = require("@pulumi/pulumi");
const utilities = require("../utilities");
/**
 * Manages a Palo Alto Networks Rulestack.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as azure from "@pulumi/azure";
 *
 * const example = new azure.core.ResourceGroup("example", {
 *     name: "rg-example",
 *     location: "West Europe",
 * });
 * const exampleLocalRulestack = new azure.paloalto.LocalRulestack("example", {
 *     name: "example",
 *     resourceGroupName: example.name,
 *     location: example.location,
 * });
 * ```
 *
 * ## Import
 *
 * Palo Alto Networks Rulestacks can be imported using the `resource id`, e.g.
 *
 * ```sh
 * $ pulumi import azure:paloalto/localRulestack:LocalRulestack example /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/mygroup1/providers/PaloAltoNetworks.Cloudngfw/localRulestacks/myLocalRulestack
 * ```
 */
class LocalRulestack extends pulumi.CustomResource {
    constructor(name, argsOrState, opts) {
        let resourceInputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState;
            resourceInputs["antiSpywareProfile"] = state ? state.antiSpywareProfile : undefined;
            resourceInputs["antiVirusProfile"] = state ? state.antiVirusProfile : undefined;
            resourceInputs["description"] = state ? state.description : undefined;
            resourceInputs["dnsSubscription"] = state ? state.dnsSubscription : undefined;
            resourceInputs["fileBlockingProfile"] = state ? state.fileBlockingProfile : undefined;
            resourceInputs["location"] = state ? state.location : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["resourceGroupName"] = state ? state.resourceGroupName : undefined;
            resourceInputs["urlFilteringProfile"] = state ? state.urlFilteringProfile : undefined;
            resourceInputs["vulnerabilityProfile"] = state ? state.vulnerabilityProfile : undefined;
        }
        else {
            const args = argsOrState;
            if ((!args || args.resourceGroupName === undefined) && !opts.urn) {
                throw new Error("Missing required property 'resourceGroupName'");
            }
            resourceInputs["antiSpywareProfile"] = args ? args.antiSpywareProfile : undefined;
            resourceInputs["antiVirusProfile"] = args ? args.antiVirusProfile : undefined;
            resourceInputs["description"] = args ? args.description : undefined;
            resourceInputs["dnsSubscription"] = args ? args.dnsSubscription : undefined;
            resourceInputs["fileBlockingProfile"] = args ? args.fileBlockingProfile : undefined;
            resourceInputs["location"] = args ? args.location : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["resourceGroupName"] = args ? args.resourceGroupName : undefined;
            resourceInputs["urlFilteringProfile"] = args ? args.urlFilteringProfile : undefined;
            resourceInputs["vulnerabilityProfile"] = args ? args.vulnerabilityProfile : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(LocalRulestack.__pulumiType, name, resourceInputs, opts);
    }
    /**
     * Get an existing LocalRulestack resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    static get(name, id, state, opts) {
        return new LocalRulestack(name, state, Object.assign(Object.assign({}, opts), { id: id }));
    }
    /**
     * Returns true if the given object is an instance of LocalRulestack.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    static isInstance(obj) {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === LocalRulestack.__pulumiType;
    }
}
exports.LocalRulestack = LocalRulestack;
/** @internal */
LocalRulestack.__pulumiType = 'azure:paloalto/localRulestack:LocalRulestack';
//# sourceMappingURL=localRulestack.js.map