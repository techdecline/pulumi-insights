import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
export declare class NextGenerationFirewallVirtualHubLocalRulestack extends pulumi.CustomResource {
    /**
     * Get an existing NextGenerationFirewallVirtualHubLocalRulestack resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    static get(name: string, id: pulumi.Input<pulumi.ID>, state?: NextGenerationFirewallVirtualHubLocalRulestackState, opts?: pulumi.CustomResourceOptions): NextGenerationFirewallVirtualHubLocalRulestack;
    /**
     * Returns true if the given object is an instance of NextGenerationFirewallVirtualHubLocalRulestack.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    static isInstance(obj: any): obj is NextGenerationFirewallVirtualHubLocalRulestack;
    readonly destinationNats: pulumi.Output<outputs.paloalto.NextGenerationFirewallVirtualHubLocalRulestackDestinationNat[] | undefined>;
    readonly dnsSettings: pulumi.Output<outputs.paloalto.NextGenerationFirewallVirtualHubLocalRulestackDnsSettings | undefined>;
    readonly marketplaceOfferId: pulumi.Output<string | undefined>;
    readonly name: pulumi.Output<string>;
    readonly networkProfile: pulumi.Output<outputs.paloalto.NextGenerationFirewallVirtualHubLocalRulestackNetworkProfile>;
    readonly planId: pulumi.Output<string | undefined>;
    readonly resourceGroupName: pulumi.Output<string>;
    readonly rulestackId: pulumi.Output<string>;
    readonly tags: pulumi.Output<{
        [key: string]: string;
    } | undefined>;
    /**
     * Create a NextGenerationFirewallVirtualHubLocalRulestack resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: NextGenerationFirewallVirtualHubLocalRulestackArgs, opts?: pulumi.CustomResourceOptions);
}
/**
 * Input properties used for looking up and filtering NextGenerationFirewallVirtualHubLocalRulestack resources.
 */
export interface NextGenerationFirewallVirtualHubLocalRulestackState {
    destinationNats?: pulumi.Input<pulumi.Input<inputs.paloalto.NextGenerationFirewallVirtualHubLocalRulestackDestinationNat>[]>;
    dnsSettings?: pulumi.Input<inputs.paloalto.NextGenerationFirewallVirtualHubLocalRulestackDnsSettings>;
    marketplaceOfferId?: pulumi.Input<string>;
    name?: pulumi.Input<string>;
    networkProfile?: pulumi.Input<inputs.paloalto.NextGenerationFirewallVirtualHubLocalRulestackNetworkProfile>;
    planId?: pulumi.Input<string>;
    resourceGroupName?: pulumi.Input<string>;
    rulestackId?: pulumi.Input<string>;
    tags?: pulumi.Input<{
        [key: string]: pulumi.Input<string>;
    }>;
}
/**
 * The set of arguments for constructing a NextGenerationFirewallVirtualHubLocalRulestack resource.
 */
export interface NextGenerationFirewallVirtualHubLocalRulestackArgs {
    destinationNats?: pulumi.Input<pulumi.Input<inputs.paloalto.NextGenerationFirewallVirtualHubLocalRulestackDestinationNat>[]>;
    dnsSettings?: pulumi.Input<inputs.paloalto.NextGenerationFirewallVirtualHubLocalRulestackDnsSettings>;
    marketplaceOfferId?: pulumi.Input<string>;
    name?: pulumi.Input<string>;
    networkProfile: pulumi.Input<inputs.paloalto.NextGenerationFirewallVirtualHubLocalRulestackNetworkProfile>;
    planId?: pulumi.Input<string>;
    resourceGroupName: pulumi.Input<string>;
    rulestackId: pulumi.Input<string>;
    tags?: pulumi.Input<{
        [key: string]: pulumi.Input<string>;
    }>;
}
