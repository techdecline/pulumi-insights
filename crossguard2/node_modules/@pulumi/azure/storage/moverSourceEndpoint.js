"use strict";
// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***
Object.defineProperty(exports, "__esModule", { value: true });
exports.MoverSourceEndpoint = void 0;
const pulumi = require("@pulumi/pulumi");
const utilities = require("../utilities");
/**
 * Manages a Storage Mover Source Endpoint.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as azure from "@pulumi/azure";
 *
 * const example = new azure.core.ResourceGroup("example", {
 *     name: "example-resources",
 *     location: "West Europe",
 * });
 * const exampleMover = new azure.storage.Mover("example", {
 *     name: "example-ssm",
 *     resourceGroupName: example.name,
 *     location: "West Europe",
 * });
 * const exampleMoverSourceEndpoint = new azure.storage.MoverSourceEndpoint("example", {
 *     name: "example-se",
 *     storageMoverId: exampleMover.id,
 *     "export": "/",
 *     host: "192.168.0.1",
 *     nfsVersion: "NFSv3",
 * });
 * ```
 *
 * ## Import
 *
 * Storage Mover Source Endpoint can be imported using the `resource id`, e.g.
 *
 * ```sh
 * $ pulumi import azure:storage/moverSourceEndpoint:MoverSourceEndpoint example /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/resourceGroup1/providers/Microsoft.StorageMover/storageMovers/storageMover1/endpoints/endpoint1
 * ```
 */
class MoverSourceEndpoint extends pulumi.CustomResource {
    constructor(name, argsOrState, opts) {
        let resourceInputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState;
            resourceInputs["description"] = state ? state.description : undefined;
            resourceInputs["export"] = state ? state.export : undefined;
            resourceInputs["host"] = state ? state.host : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["nfsVersion"] = state ? state.nfsVersion : undefined;
            resourceInputs["storageMoverId"] = state ? state.storageMoverId : undefined;
        }
        else {
            const args = argsOrState;
            if ((!args || args.host === undefined) && !opts.urn) {
                throw new Error("Missing required property 'host'");
            }
            if ((!args || args.storageMoverId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'storageMoverId'");
            }
            resourceInputs["description"] = args ? args.description : undefined;
            resourceInputs["export"] = args ? args.export : undefined;
            resourceInputs["host"] = args ? args.host : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["nfsVersion"] = args ? args.nfsVersion : undefined;
            resourceInputs["storageMoverId"] = args ? args.storageMoverId : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(MoverSourceEndpoint.__pulumiType, name, resourceInputs, opts);
    }
    /**
     * Get an existing MoverSourceEndpoint resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    static get(name, id, state, opts) {
        return new MoverSourceEndpoint(name, state, Object.assign(Object.assign({}, opts), { id: id }));
    }
    /**
     * Returns true if the given object is an instance of MoverSourceEndpoint.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    static isInstance(obj) {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === MoverSourceEndpoint.__pulumiType;
    }
}
exports.MoverSourceEndpoint = MoverSourceEndpoint;
/** @internal */
MoverSourceEndpoint.__pulumiType = 'azure:storage/moverSourceEndpoint:MoverSourceEndpoint';
//# sourceMappingURL=moverSourceEndpoint.js.map