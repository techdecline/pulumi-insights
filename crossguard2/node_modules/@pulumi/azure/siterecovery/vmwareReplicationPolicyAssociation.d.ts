import * as pulumi from "@pulumi/pulumi";
/**
 * Manages an Azure Site Recovery replication policy for VMWare within a Recovery Vault.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as azure from "@pulumi/azure";
 *
 * const example = new azure.core.ResourceGroup("example", {
 *     name: "example-rg",
 *     location: "East US",
 * });
 * const exampleVault = new azure.recoveryservices.Vault("example", {
 *     name: "example-recovery-vault",
 *     location: example.location,
 *     resourceGroupName: example.name,
 *     sku: "Standard",
 * });
 * const exampleVMWareReplicationPolicy = new azure.siterecovery.VMWareReplicationPolicy("example", {
 *     name: "example-policy",
 *     recoveryVaultId: exampleVault.id,
 *     recoveryPointRetentionInMinutes: 1440,
 *     applicationConsistentSnapshotFrequencyInMinutes: 240,
 * });
 * const exampleVmwareReplicationPolicyAssociation = new azure.siterecovery.VmwareReplicationPolicyAssociation("example", {
 *     name: "example-association",
 *     recoveryVaultId: exampleVault.id,
 *     policyId: exampleVMWareReplicationPolicy.id,
 * });
 * ```
 *
 * ## Import
 *
 * Site Recovery Replication Policies can be imported using the `resource id`, e.g.
 *
 * ```sh
 * $ pulumi import azure:siterecovery/vmwareReplicationPolicyAssociation:VmwareReplicationPolicyAssociation mypolicy /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/resource-group-name/providers/Microsoft.RecoveryServices/vaults/recovery-vault-name/replicationFabrics/site-name/replicationProtectionContainers/container-name/replicationProtectionContainerMappings/mapping-name
 * ```
 */
export declare class VmwareReplicationPolicyAssociation extends pulumi.CustomResource {
    /**
     * Get an existing VmwareReplicationPolicyAssociation resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    static get(name: string, id: pulumi.Input<pulumi.ID>, state?: VmwareReplicationPolicyAssociationState, opts?: pulumi.CustomResourceOptions): VmwareReplicationPolicyAssociation;
    /**
     * Returns true if the given object is an instance of VmwareReplicationPolicyAssociation.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    static isInstance(obj: any): obj is VmwareReplicationPolicyAssociation;
    /**
     * The name of the replication policy association. Changing this forces a new association to be created.
     */
    readonly name: pulumi.Output<string>;
    /**
     * The ID of the VMWare replication policy which to be associated. Changing this forces a new association to be created.
     */
    readonly policyId: pulumi.Output<string>;
    /**
     * The ID of the Recovery Service Vault to which the policy should be associated.
     * Changing this forces a new association to be created.
     */
    readonly recoveryVaultId: pulumi.Output<string>;
    /**
     * Create a VmwareReplicationPolicyAssociation resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: VmwareReplicationPolicyAssociationArgs, opts?: pulumi.CustomResourceOptions);
}
/**
 * Input properties used for looking up and filtering VmwareReplicationPolicyAssociation resources.
 */
export interface VmwareReplicationPolicyAssociationState {
    /**
     * The name of the replication policy association. Changing this forces a new association to be created.
     */
    name?: pulumi.Input<string>;
    /**
     * The ID of the VMWare replication policy which to be associated. Changing this forces a new association to be created.
     */
    policyId?: pulumi.Input<string>;
    /**
     * The ID of the Recovery Service Vault to which the policy should be associated.
     * Changing this forces a new association to be created.
     */
    recoveryVaultId?: pulumi.Input<string>;
}
/**
 * The set of arguments for constructing a VmwareReplicationPolicyAssociation resource.
 */
export interface VmwareReplicationPolicyAssociationArgs {
    /**
     * The name of the replication policy association. Changing this forces a new association to be created.
     */
    name?: pulumi.Input<string>;
    /**
     * The ID of the VMWare replication policy which to be associated. Changing this forces a new association to be created.
     */
    policyId: pulumi.Input<string>;
    /**
     * The ID of the Recovery Service Vault to which the policy should be associated.
     * Changing this forces a new association to be created.
     */
    recoveryVaultId: pulumi.Input<string>;
}
