"use strict";
// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***
Object.defineProperty(exports, "__esModule", { value: true });
exports.VmwareReplicationPolicyAssociation = exports.VMWareReplicationPolicy = exports.VmwareReplicatedVm = exports.ReplicationRecoveryPlan = exports.ReplicationPolicy = exports.ReplicatedVM = exports.ProtectionContainerMapping = exports.ProtectionContainer = exports.NetworkMapping = exports.HypervNetworkMapping = exports.HyperVSite = exports.HyperVReplicationPolicyAssociation = exports.HyperVReplicationPolicy = exports.getReplicationRecoveryPlanOutput = exports.getReplicationRecoveryPlan = exports.getReplicationPolicyOutput = exports.getReplicationPolicy = exports.getProtectionContainerOutput = exports.getProtectionContainer = exports.getFabricOutput = exports.getFabric = exports.Fabric = void 0;
const pulumi = require("@pulumi/pulumi");
const utilities = require("../utilities");
exports.Fabric = null;
utilities.lazyLoad(exports, ["Fabric"], () => require("./fabric"));
exports.getFabric = null;
exports.getFabricOutput = null;
utilities.lazyLoad(exports, ["getFabric", "getFabricOutput"], () => require("./getFabric"));
exports.getProtectionContainer = null;
exports.getProtectionContainerOutput = null;
utilities.lazyLoad(exports, ["getProtectionContainer", "getProtectionContainerOutput"], () => require("./getProtectionContainer"));
exports.getReplicationPolicy = null;
exports.getReplicationPolicyOutput = null;
utilities.lazyLoad(exports, ["getReplicationPolicy", "getReplicationPolicyOutput"], () => require("./getReplicationPolicy"));
exports.getReplicationRecoveryPlan = null;
exports.getReplicationRecoveryPlanOutput = null;
utilities.lazyLoad(exports, ["getReplicationRecoveryPlan", "getReplicationRecoveryPlanOutput"], () => require("./getReplicationRecoveryPlan"));
exports.HyperVReplicationPolicy = null;
utilities.lazyLoad(exports, ["HyperVReplicationPolicy"], () => require("./hyperVReplicationPolicy"));
exports.HyperVReplicationPolicyAssociation = null;
utilities.lazyLoad(exports, ["HyperVReplicationPolicyAssociation"], () => require("./hyperVReplicationPolicyAssociation"));
exports.HyperVSite = null;
utilities.lazyLoad(exports, ["HyperVSite"], () => require("./hyperVSite"));
exports.HypervNetworkMapping = null;
utilities.lazyLoad(exports, ["HypervNetworkMapping"], () => require("./hypervNetworkMapping"));
exports.NetworkMapping = null;
utilities.lazyLoad(exports, ["NetworkMapping"], () => require("./networkMapping"));
exports.ProtectionContainer = null;
utilities.lazyLoad(exports, ["ProtectionContainer"], () => require("./protectionContainer"));
exports.ProtectionContainerMapping = null;
utilities.lazyLoad(exports, ["ProtectionContainerMapping"], () => require("./protectionContainerMapping"));
exports.ReplicatedVM = null;
utilities.lazyLoad(exports, ["ReplicatedVM"], () => require("./replicatedVM"));
exports.ReplicationPolicy = null;
utilities.lazyLoad(exports, ["ReplicationPolicy"], () => require("./replicationPolicy"));
exports.ReplicationRecoveryPlan = null;
utilities.lazyLoad(exports, ["ReplicationRecoveryPlan"], () => require("./replicationRecoveryPlan"));
exports.VmwareReplicatedVm = null;
utilities.lazyLoad(exports, ["VmwareReplicatedVm"], () => require("./vmwareReplicatedVm"));
exports.VMWareReplicationPolicy = null;
utilities.lazyLoad(exports, ["VMWareReplicationPolicy"], () => require("./vmwareReplicationPolicy"));
exports.VmwareReplicationPolicyAssociation = null;
utilities.lazyLoad(exports, ["VmwareReplicationPolicyAssociation"], () => require("./vmwareReplicationPolicyAssociation"));
const _module = {
    version: utilities.getVersion(),
    construct: (name, type, urn) => {
        switch (type) {
            case "azure:siterecovery/fabric:Fabric":
                return new exports.Fabric(name, undefined, { urn });
            case "azure:siterecovery/hyperVReplicationPolicy:HyperVReplicationPolicy":
                return new exports.HyperVReplicationPolicy(name, undefined, { urn });
            case "azure:siterecovery/hyperVReplicationPolicyAssociation:HyperVReplicationPolicyAssociation":
                return new exports.HyperVReplicationPolicyAssociation(name, undefined, { urn });
            case "azure:siterecovery/hyperVSite:HyperVSite":
                return new exports.HyperVSite(name, undefined, { urn });
            case "azure:siterecovery/hypervNetworkMapping:HypervNetworkMapping":
                return new exports.HypervNetworkMapping(name, undefined, { urn });
            case "azure:siterecovery/networkMapping:NetworkMapping":
                return new exports.NetworkMapping(name, undefined, { urn });
            case "azure:siterecovery/protectionContainer:ProtectionContainer":
                return new exports.ProtectionContainer(name, undefined, { urn });
            case "azure:siterecovery/protectionContainerMapping:ProtectionContainerMapping":
                return new exports.ProtectionContainerMapping(name, undefined, { urn });
            case "azure:siterecovery/replicatedVM:ReplicatedVM":
                return new exports.ReplicatedVM(name, undefined, { urn });
            case "azure:siterecovery/replicationPolicy:ReplicationPolicy":
                return new exports.ReplicationPolicy(name, undefined, { urn });
            case "azure:siterecovery/replicationRecoveryPlan:ReplicationRecoveryPlan":
                return new exports.ReplicationRecoveryPlan(name, undefined, { urn });
            case "azure:siterecovery/vMWareReplicationPolicy:VMWareReplicationPolicy":
                return new exports.VMWareReplicationPolicy(name, undefined, { urn });
            case "azure:siterecovery/vmwareReplicatedVm:VmwareReplicatedVm":
                return new exports.VmwareReplicatedVm(name, undefined, { urn });
            case "azure:siterecovery/vmwareReplicationPolicyAssociation:VmwareReplicationPolicyAssociation":
                return new exports.VmwareReplicationPolicyAssociation(name, undefined, { urn });
            default:
                throw new Error(`unknown resource type ${type}`);
        }
    },
};
pulumi.runtime.registerResourceModule("azure", "siterecovery/fabric", _module);
pulumi.runtime.registerResourceModule("azure", "siterecovery/hyperVReplicationPolicy", _module);
pulumi.runtime.registerResourceModule("azure", "siterecovery/hyperVReplicationPolicyAssociation", _module);
pulumi.runtime.registerResourceModule("azure", "siterecovery/hyperVSite", _module);
pulumi.runtime.registerResourceModule("azure", "siterecovery/hypervNetworkMapping", _module);
pulumi.runtime.registerResourceModule("azure", "siterecovery/networkMapping", _module);
pulumi.runtime.registerResourceModule("azure", "siterecovery/protectionContainer", _module);
pulumi.runtime.registerResourceModule("azure", "siterecovery/protectionContainerMapping", _module);
pulumi.runtime.registerResourceModule("azure", "siterecovery/replicatedVM", _module);
pulumi.runtime.registerResourceModule("azure", "siterecovery/replicationPolicy", _module);
pulumi.runtime.registerResourceModule("azure", "siterecovery/replicationRecoveryPlan", _module);
pulumi.runtime.registerResourceModule("azure", "siterecovery/vMWareReplicationPolicy", _module);
pulumi.runtime.registerResourceModule("azure", "siterecovery/vmwareReplicatedVm", _module);
pulumi.runtime.registerResourceModule("azure", "siterecovery/vmwareReplicationPolicyAssociation", _module);
//# sourceMappingURL=index.js.map