"use strict";
// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***
Object.defineProperty(exports, "__esModule", { value: true });
exports.getPublicConfigurationsOutput = exports.getPublicConfigurations = void 0;
const pulumi = require("@pulumi/pulumi");
const utilities = require("../utilities");
/**
 * Use this data source to access information about existing Public Maintenance Configurations.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as azure from "@pulumi/azure";
 *
 * const existing = azure.maintenance.getPublicConfigurations({
 *     location: "West Europe",
 *     scope: "SQLManagedInstance",
 *     recurEvery: "Monday-Thursday",
 * });
 * export const name = existing.then(existing => existing.configs?.[0]?.name);
 * ```
 */
function getPublicConfigurations(args, opts) {
    args = args || {};
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("azure:maintenance/getPublicConfigurations:getPublicConfigurations", {
        "location": args.location,
        "recurEvery": args.recurEvery,
        "scope": args.scope,
    }, opts);
}
exports.getPublicConfigurations = getPublicConfigurations;
/**
 * Use this data source to access information about existing Public Maintenance Configurations.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as azure from "@pulumi/azure";
 *
 * const existing = azure.maintenance.getPublicConfigurations({
 *     location: "West Europe",
 *     scope: "SQLManagedInstance",
 *     recurEvery: "Monday-Thursday",
 * });
 * export const name = existing.then(existing => existing.configs?.[0]?.name);
 * ```
 */
function getPublicConfigurationsOutput(args, opts) {
    args = args || {};
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invokeOutput("azure:maintenance/getPublicConfigurations:getPublicConfigurations", {
        "location": args.location,
        "recurEvery": args.recurEvery,
        "scope": args.scope,
    }, opts);
}
exports.getPublicConfigurationsOutput = getPublicConfigurationsOutput;
//# sourceMappingURL=getPublicConfigurations.js.map