"use strict";
// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***
Object.defineProperty(exports, "__esModule", { value: true });
exports.MonitorSsoConfiguration = void 0;
const pulumi = require("@pulumi/pulumi");
const utilities = require("../utilities");
/**
 * Manages SingleSignOn on the datadog Monitor.
 *
 * ## Example Usage
 *
 * ### Enabling SSO on monitor
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as azure from "@pulumi/azure";
 *
 * const example = new azure.core.ResourceGroup("example", {
 *     name: "example-datadog",
 *     location: "West US 2",
 * });
 * const exampleMonitor = new azure.datadog.Monitor("example", {
 *     name: "example-monitor",
 *     resourceGroupName: example.name,
 *     location: example.location,
 *     datadogOrganization: {
 *         apiKey: "XXXX",
 *         applicationKey: "XXXX",
 *     },
 *     user: {
 *         name: "Example",
 *         email: "abc@xyz.com",
 *     },
 *     skuName: "Linked",
 *     identity: {
 *         type: "SystemAssigned",
 *     },
 * });
 * const exampleMonitorSsoConfiguration = new azure.datadog.MonitorSsoConfiguration("example", {
 *     datadogMonitorId: exampleMonitor.id,
 *     singleSignOnEnabled: "Enable",
 *     enterpriseApplicationId: "XXXX",
 * });
 * ```
 *
 * ## Import
 *
 * SingleSignOn on the Datadog Monitor can be imported using the `signle sign on resource id`, e.g.
 *
 * ```sh
 * $ pulumi import azure:datadog/monitorSsoConfiguration:MonitorSsoConfiguration example /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/group1/providers/Microsoft.Datadog/monitors/monitor1/singleSignOnConfigurations/default
 * ```
 */
class MonitorSsoConfiguration extends pulumi.CustomResource {
    constructor(name, argsOrState, opts) {
        let resourceInputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState;
            resourceInputs["datadogMonitorId"] = state ? state.datadogMonitorId : undefined;
            resourceInputs["enterpriseApplicationId"] = state ? state.enterpriseApplicationId : undefined;
            resourceInputs["loginUrl"] = state ? state.loginUrl : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["singleSignOnEnabled"] = state ? state.singleSignOnEnabled : undefined;
        }
        else {
            const args = argsOrState;
            if ((!args || args.datadogMonitorId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'datadogMonitorId'");
            }
            if ((!args || args.enterpriseApplicationId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'enterpriseApplicationId'");
            }
            if ((!args || args.singleSignOnEnabled === undefined) && !opts.urn) {
                throw new Error("Missing required property 'singleSignOnEnabled'");
            }
            resourceInputs["datadogMonitorId"] = args ? args.datadogMonitorId : undefined;
            resourceInputs["enterpriseApplicationId"] = args ? args.enterpriseApplicationId : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["singleSignOnEnabled"] = args ? args.singleSignOnEnabled : undefined;
            resourceInputs["loginUrl"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(MonitorSsoConfiguration.__pulumiType, name, resourceInputs, opts);
    }
    /**
     * Get an existing MonitorSsoConfiguration resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    static get(name, id, state, opts) {
        return new MonitorSsoConfiguration(name, state, Object.assign(Object.assign({}, opts), { id: id }));
    }
    /**
     * Returns true if the given object is an instance of MonitorSsoConfiguration.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    static isInstance(obj) {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === MonitorSsoConfiguration.__pulumiType;
    }
}
exports.MonitorSsoConfiguration = MonitorSsoConfiguration;
/** @internal */
MonitorSsoConfiguration.__pulumiType = 'azure:datadog/monitorSsoConfiguration:MonitorSsoConfiguration';
//# sourceMappingURL=monitorSsoConfiguration.js.map