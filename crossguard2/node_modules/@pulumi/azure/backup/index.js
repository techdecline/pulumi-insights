"use strict";
// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***
Object.defineProperty(exports, "__esModule", { value: true });
exports.ProtectedVM = exports.ProtectedFileShare = exports.PolicyVMWorkload = exports.PolicyVM = exports.PolicyFileShare = exports.getPolicyVMOutput = exports.getPolicyVM = exports.getPolicyFileshareOutput = exports.getPolicyFileshare = exports.ContainerStorageAccount = void 0;
const pulumi = require("@pulumi/pulumi");
const utilities = require("../utilities");
exports.ContainerStorageAccount = null;
utilities.lazyLoad(exports, ["ContainerStorageAccount"], () => require("./containerStorageAccount"));
exports.getPolicyFileshare = null;
exports.getPolicyFileshareOutput = null;
utilities.lazyLoad(exports, ["getPolicyFileshare", "getPolicyFileshareOutput"], () => require("./getPolicyFileshare"));
exports.getPolicyVM = null;
exports.getPolicyVMOutput = null;
utilities.lazyLoad(exports, ["getPolicyVM", "getPolicyVMOutput"], () => require("./getPolicyVM"));
exports.PolicyFileShare = null;
utilities.lazyLoad(exports, ["PolicyFileShare"], () => require("./policyFileShare"));
exports.PolicyVM = null;
utilities.lazyLoad(exports, ["PolicyVM"], () => require("./policyVM"));
exports.PolicyVMWorkload = null;
utilities.lazyLoad(exports, ["PolicyVMWorkload"], () => require("./policyVMWorkload"));
exports.ProtectedFileShare = null;
utilities.lazyLoad(exports, ["ProtectedFileShare"], () => require("./protectedFileShare"));
exports.ProtectedVM = null;
utilities.lazyLoad(exports, ["ProtectedVM"], () => require("./protectedVM"));
const _module = {
    version: utilities.getVersion(),
    construct: (name, type, urn) => {
        switch (type) {
            case "azure:backup/containerStorageAccount:ContainerStorageAccount":
                return new exports.ContainerStorageAccount(name, undefined, { urn });
            case "azure:backup/policyFileShare:PolicyFileShare":
                return new exports.PolicyFileShare(name, undefined, { urn });
            case "azure:backup/policyVM:PolicyVM":
                return new exports.PolicyVM(name, undefined, { urn });
            case "azure:backup/policyVMWorkload:PolicyVMWorkload":
                return new exports.PolicyVMWorkload(name, undefined, { urn });
            case "azure:backup/protectedFileShare:ProtectedFileShare":
                return new exports.ProtectedFileShare(name, undefined, { urn });
            case "azure:backup/protectedVM:ProtectedVM":
                return new exports.ProtectedVM(name, undefined, { urn });
            default:
                throw new Error(`unknown resource type ${type}`);
        }
    },
};
pulumi.runtime.registerResourceModule("azure", "backup/containerStorageAccount", _module);
pulumi.runtime.registerResourceModule("azure", "backup/policyFileShare", _module);
pulumi.runtime.registerResourceModule("azure", "backup/policyVM", _module);
pulumi.runtime.registerResourceModule("azure", "backup/policyVMWorkload", _module);
pulumi.runtime.registerResourceModule("azure", "backup/protectedFileShare", _module);
pulumi.runtime.registerResourceModule("azure", "backup/protectedVM", _module);
//# sourceMappingURL=index.js.map