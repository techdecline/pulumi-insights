import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
/**
 * Manages an Azure VM Workload Backup Policy within a Recovery Services vault.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as azure from "@pulumi/azure";
 *
 * const example = new azure.core.ResourceGroup("example", {
 *     name: "example-bpvmw",
 *     location: "West Europe",
 * });
 * const exampleVault = new azure.recoveryservices.Vault("example", {
 *     name: "example-rsv",
 *     location: example.location,
 *     resourceGroupName: example.name,
 *     sku: "Standard",
 *     softDeleteEnabled: false,
 * });
 * const examplePolicyVMWorkload = new azure.backup.PolicyVMWorkload("example", {
 *     name: "example-bpvmw",
 *     resourceGroupName: example.name,
 *     recoveryVaultName: exampleVault.name,
 *     workloadType: "SQLDataBase",
 *     settings: {
 *         timeZone: "UTC",
 *         compressionEnabled: false,
 *     },
 *     protectionPolicies: [
 *         {
 *             policyType: "Full",
 *             backup: {
 *                 frequency: "Daily",
 *                 time: "15:00",
 *             },
 *             retentionDaily: {
 *                 count: 8,
 *             },
 *         },
 *         {
 *             policyType: "Log",
 *             backup: {
 *                 frequencyInMinutes: 15,
 *             },
 *             simpleRetention: {
 *                 count: 8,
 *             },
 *         },
 *     ],
 * });
 * ```
 *
 * ## Import
 *
 * Azure VM Workload Backup Policies can be imported using the `resource id`, e.g.
 *
 * ```sh
 * $ pulumi import azure:backup/policyVMWorkload:PolicyVMWorkload policy1 /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/group1/providers/Microsoft.RecoveryServices/vaults/vault1/backupPolicies/policy1
 * ```
 */
export declare class PolicyVMWorkload extends pulumi.CustomResource {
    /**
     * Get an existing PolicyVMWorkload resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    static get(name: string, id: pulumi.Input<pulumi.ID>, state?: PolicyVMWorkloadState, opts?: pulumi.CustomResourceOptions): PolicyVMWorkload;
    /**
     * Returns true if the given object is an instance of PolicyVMWorkload.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    static isInstance(obj: any): obj is PolicyVMWorkload;
    /**
     * The name of the VM Workload Backup Policy. Changing this forces a new resource to be created.
     */
    readonly name: pulumi.Output<string>;
    /**
     * One or more `protectionPolicy` blocks as defined below.
     */
    readonly protectionPolicies: pulumi.Output<outputs.backup.PolicyVMWorkloadProtectionPolicy[]>;
    /**
     * The name of the Recovery Services Vault to use. Changing this forces a new resource to be created.
     */
    readonly recoveryVaultName: pulumi.Output<string>;
    /**
     * The name of the resource group in which to create the VM Workload Backup Policy. Changing this forces a new resource to be created.
     */
    readonly resourceGroupName: pulumi.Output<string>;
    /**
     * A `settings` block as defined below.
     */
    readonly settings: pulumi.Output<outputs.backup.PolicyVMWorkloadSettings>;
    /**
     * The VM Workload type for the Backup Policy. Possible values are `SQLDataBase` and `SAPHanaDatabase`. Changing this forces a new resource to be created.
     */
    readonly workloadType: pulumi.Output<string>;
    /**
     * Create a PolicyVMWorkload resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: PolicyVMWorkloadArgs, opts?: pulumi.CustomResourceOptions);
}
/**
 * Input properties used for looking up and filtering PolicyVMWorkload resources.
 */
export interface PolicyVMWorkloadState {
    /**
     * The name of the VM Workload Backup Policy. Changing this forces a new resource to be created.
     */
    name?: pulumi.Input<string>;
    /**
     * One or more `protectionPolicy` blocks as defined below.
     */
    protectionPolicies?: pulumi.Input<pulumi.Input<inputs.backup.PolicyVMWorkloadProtectionPolicy>[]>;
    /**
     * The name of the Recovery Services Vault to use. Changing this forces a new resource to be created.
     */
    recoveryVaultName?: pulumi.Input<string>;
    /**
     * The name of the resource group in which to create the VM Workload Backup Policy. Changing this forces a new resource to be created.
     */
    resourceGroupName?: pulumi.Input<string>;
    /**
     * A `settings` block as defined below.
     */
    settings?: pulumi.Input<inputs.backup.PolicyVMWorkloadSettings>;
    /**
     * The VM Workload type for the Backup Policy. Possible values are `SQLDataBase` and `SAPHanaDatabase`. Changing this forces a new resource to be created.
     */
    workloadType?: pulumi.Input<string>;
}
/**
 * The set of arguments for constructing a PolicyVMWorkload resource.
 */
export interface PolicyVMWorkloadArgs {
    /**
     * The name of the VM Workload Backup Policy. Changing this forces a new resource to be created.
     */
    name?: pulumi.Input<string>;
    /**
     * One or more `protectionPolicy` blocks as defined below.
     */
    protectionPolicies: pulumi.Input<pulumi.Input<inputs.backup.PolicyVMWorkloadProtectionPolicy>[]>;
    /**
     * The name of the Recovery Services Vault to use. Changing this forces a new resource to be created.
     */
    recoveryVaultName: pulumi.Input<string>;
    /**
     * The name of the resource group in which to create the VM Workload Backup Policy. Changing this forces a new resource to be created.
     */
    resourceGroupName: pulumi.Input<string>;
    /**
     * A `settings` block as defined below.
     */
    settings: pulumi.Input<inputs.backup.PolicyVMWorkloadSettings>;
    /**
     * The VM Workload type for the Backup Policy. Possible values are `SQLDataBase` and `SAPHanaDatabase`. Changing this forces a new resource to be created.
     */
    workloadType: pulumi.Input<string>;
}
