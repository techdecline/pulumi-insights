"use strict";
// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***
Object.defineProperty(exports, "__esModule", { value: true });
exports.Python3Package = void 0;
const pulumi = require("@pulumi/pulumi");
const utilities = require("../utilities");
/**
 * Manages a Automation Python3 Package.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as azure from "@pulumi/azure";
 *
 * const example = new azure.core.ResourceGroup("example", {
 *     name: "rg-example",
 *     location: "%[2]s",
 * });
 * const exampleAccount = new azure.automation.Account("example", {
 *     name: "accexample",
 *     location: example.location,
 *     resourceGroupName: example.name,
 *     skuName: "Basic",
 * });
 * const examplePython3Package = new azure.automation.Python3Package("example", {
 *     name: "example",
 *     resourceGroupName: example.name,
 *     automationAccountName: exampleAccount.name,
 *     contentUri: "https://pypi.org/packages/source/r/requests/requests-2.31.0.tar.gz",
 *     contentVersion: "2.31.0",
 *     hashAlgorithm: "sha256",
 *     hashValue: "942c5a758f98d790eaed1a29cb6eefc7ffb0d1cf7af05c3d2791656dbd6ad1e1",
 *     tags: {
 *         key: "foo",
 *     },
 * });
 * ```
 *
 * ## Import
 *
 * Automation Python3 Packages can be imported using the `resource id`, e.g.
 *
 * ```sh
 * $ pulumi import azure:automation/python3Package:Python3Package example /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/group1/providers/Microsoft.Automation/automationAccounts/account1/python3Packages/pkg
 * ```
 */
class Python3Package extends pulumi.CustomResource {
    constructor(name, argsOrState, opts) {
        let resourceInputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState;
            resourceInputs["automationAccountName"] = state ? state.automationAccountName : undefined;
            resourceInputs["contentUri"] = state ? state.contentUri : undefined;
            resourceInputs["contentVersion"] = state ? state.contentVersion : undefined;
            resourceInputs["hashAlgorithm"] = state ? state.hashAlgorithm : undefined;
            resourceInputs["hashValue"] = state ? state.hashValue : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["resourceGroupName"] = state ? state.resourceGroupName : undefined;
            resourceInputs["tags"] = state ? state.tags : undefined;
        }
        else {
            const args = argsOrState;
            if ((!args || args.automationAccountName === undefined) && !opts.urn) {
                throw new Error("Missing required property 'automationAccountName'");
            }
            if ((!args || args.contentUri === undefined) && !opts.urn) {
                throw new Error("Missing required property 'contentUri'");
            }
            if ((!args || args.resourceGroupName === undefined) && !opts.urn) {
                throw new Error("Missing required property 'resourceGroupName'");
            }
            resourceInputs["automationAccountName"] = args ? args.automationAccountName : undefined;
            resourceInputs["contentUri"] = args ? args.contentUri : undefined;
            resourceInputs["contentVersion"] = args ? args.contentVersion : undefined;
            resourceInputs["hashAlgorithm"] = args ? args.hashAlgorithm : undefined;
            resourceInputs["hashValue"] = args ? args.hashValue : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["resourceGroupName"] = args ? args.resourceGroupName : undefined;
            resourceInputs["tags"] = args ? args.tags : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(Python3Package.__pulumiType, name, resourceInputs, opts);
    }
    /**
     * Get an existing Python3Package resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    static get(name, id, state, opts) {
        return new Python3Package(name, state, Object.assign(Object.assign({}, opts), { id: id }));
    }
    /**
     * Returns true if the given object is an instance of Python3Package.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    static isInstance(obj) {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === Python3Package.__pulumiType;
    }
}
exports.Python3Package = Python3Package;
/** @internal */
Python3Package.__pulumiType = 'azure:automation/python3Package:Python3Package';
//# sourceMappingURL=python3Package.js.map