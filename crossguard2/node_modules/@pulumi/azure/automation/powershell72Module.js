"use strict";
// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***
Object.defineProperty(exports, "__esModule", { value: true });
exports.Powershell72Module = void 0;
const pulumi = require("@pulumi/pulumi");
const utilities = require("../utilities");
/**
 * Manages a Automation Powershell 7.2 Module.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as azure from "@pulumi/azure";
 *
 * const example = new azure.core.ResourceGroup("example", {
 *     name: "example-resources",
 *     location: "West Europe",
 * });
 * const exampleAccount = new azure.automation.Account("example", {
 *     name: "account1",
 *     location: example.location,
 *     resourceGroupName: example.name,
 *     skuName: "Basic",
 * });
 * const examplePowershell72Module = new azure.automation.Powershell72Module("example", {
 *     name: "xActiveDirectory",
 *     automationAccountId: exampleAccount.id,
 *     moduleLink: {
 *         uri: "https://devopsgallerystorage.blob.core.windows.net/packages/xactivedirectory.2.19.0.nupkg",
 *     },
 * });
 * ```
 *
 * ## Import
 *
 * Automation Modules can be imported using the `resource id`, e.g.
 *
 * ```sh
 * $ pulumi import azure:automation/powershell72Module:Powershell72Module module1 /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/group1/providers/Microsoft.Automation/automationAccounts/account1/powerShell72Modules/module1
 * ```
 */
class Powershell72Module extends pulumi.CustomResource {
    constructor(name, argsOrState, opts) {
        let resourceInputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState;
            resourceInputs["automationAccountId"] = state ? state.automationAccountId : undefined;
            resourceInputs["moduleLink"] = state ? state.moduleLink : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["tags"] = state ? state.tags : undefined;
        }
        else {
            const args = argsOrState;
            if ((!args || args.automationAccountId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'automationAccountId'");
            }
            if ((!args || args.moduleLink === undefined) && !opts.urn) {
                throw new Error("Missing required property 'moduleLink'");
            }
            resourceInputs["automationAccountId"] = args ? args.automationAccountId : undefined;
            resourceInputs["moduleLink"] = args ? args.moduleLink : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["tags"] = args ? args.tags : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(Powershell72Module.__pulumiType, name, resourceInputs, opts);
    }
    /**
     * Get an existing Powershell72Module resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    static get(name, id, state, opts) {
        return new Powershell72Module(name, state, Object.assign(Object.assign({}, opts), { id: id }));
    }
    /**
     * Returns true if the given object is an instance of Powershell72Module.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    static isInstance(obj) {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === Powershell72Module.__pulumiType;
    }
}
exports.Powershell72Module = Powershell72Module;
/** @internal */
Powershell72Module.__pulumiType = 'azure:automation/powershell72Module:Powershell72Module';
//# sourceMappingURL=powershell72Module.js.map