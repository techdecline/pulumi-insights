"use strict";
// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***
Object.defineProperty(exports, "__esModule", { value: true });
exports.SoftwareUpdateConfiguration = void 0;
const pulumi = require("@pulumi/pulumi");
const utilities = require("../utilities");
/**
 * Manages an Automation Software Update Configuration.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as azure from "@pulumi/azure";
 *
 * const example = new azure.core.ResourceGroup("example", {
 *     name: "example-rg",
 *     location: "East US",
 * });
 * const exampleAccount = new azure.automation.Account("example", {
 *     name: "example",
 *     location: example.location,
 *     resourceGroupName: example.name,
 *     skuName: "Basic",
 * });
 * const exampleRunBook = new azure.automation.RunBook("example", {
 *     name: "Get-AzureVMTutorial",
 *     location: example.location,
 *     resourceGroupName: example.name,
 *     automationAccountName: exampleAccount.name,
 *     logVerbose: true,
 *     logProgress: true,
 *     description: "This is a example runbook for terraform acceptance example",
 *     runbookType: "Python3",
 *     content: `# Some example content
 * # for Terraform acceptance example
 * `,
 *     tags: {
 *         ENV: "runbook_test",
 *     },
 * });
 * const exampleSoftwareUpdateConfiguration = new azure.automation.SoftwareUpdateConfiguration("example", {
 *     name: "example",
 *     automationAccountId: exampleAccount.id,
 *     linux: {
 *         classificationsIncludeds: "Security",
 *         excludedPackages: ["apt"],
 *         includedPackages: ["vim"],
 *         reboot: "IfRequired",
 *     },
 *     preTask: {
 *         source: exampleRunBook.name,
 *         parameters: {
 *             COMPUTER_NAME: "Foo",
 *         },
 *     },
 *     duration: "PT2H2M2S",
 * });
 * ```
 *
 * ## Import
 *
 * Automations Software Update Configuration can be imported using the `resource id`, e.g.
 *
 * ```sh
 * $ pulumi import azure:automation/softwareUpdateConfiguration:SoftwareUpdateConfiguration example /subscriptions/12345678-1234-9876-4563-123456789012/resourceGroups/group1/providers/Microsoft.Automation/automationAccounts/account1/softwareUpdateConfigurations/suc1
 * ```
 */
class SoftwareUpdateConfiguration extends pulumi.CustomResource {
    constructor(name, argsOrState, opts) {
        let resourceInputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState;
            resourceInputs["automationAccountId"] = state ? state.automationAccountId : undefined;
            resourceInputs["duration"] = state ? state.duration : undefined;
            resourceInputs["errorCode"] = state ? state.errorCode : undefined;
            resourceInputs["errorMessage"] = state ? state.errorMessage : undefined;
            resourceInputs["linux"] = state ? state.linux : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["nonAzureComputerNames"] = state ? state.nonAzureComputerNames : undefined;
            resourceInputs["postTask"] = state ? state.postTask : undefined;
            resourceInputs["preTask"] = state ? state.preTask : undefined;
            resourceInputs["schedule"] = state ? state.schedule : undefined;
            resourceInputs["target"] = state ? state.target : undefined;
            resourceInputs["virtualMachineIds"] = state ? state.virtualMachineIds : undefined;
            resourceInputs["windows"] = state ? state.windows : undefined;
        }
        else {
            const args = argsOrState;
            if ((!args || args.automationAccountId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'automationAccountId'");
            }
            if ((!args || args.schedule === undefined) && !opts.urn) {
                throw new Error("Missing required property 'schedule'");
            }
            resourceInputs["automationAccountId"] = args ? args.automationAccountId : undefined;
            resourceInputs["duration"] = args ? args.duration : undefined;
            resourceInputs["linux"] = args ? args.linux : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["nonAzureComputerNames"] = args ? args.nonAzureComputerNames : undefined;
            resourceInputs["postTask"] = args ? args.postTask : undefined;
            resourceInputs["preTask"] = args ? args.preTask : undefined;
            resourceInputs["schedule"] = args ? args.schedule : undefined;
            resourceInputs["target"] = args ? args.target : undefined;
            resourceInputs["virtualMachineIds"] = args ? args.virtualMachineIds : undefined;
            resourceInputs["windows"] = args ? args.windows : undefined;
            resourceInputs["errorCode"] = undefined /*out*/;
            resourceInputs["errorMessage"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(SoftwareUpdateConfiguration.__pulumiType, name, resourceInputs, opts);
    }
    /**
     * Get an existing SoftwareUpdateConfiguration resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    static get(name, id, state, opts) {
        return new SoftwareUpdateConfiguration(name, state, Object.assign(Object.assign({}, opts), { id: id }));
    }
    /**
     * Returns true if the given object is an instance of SoftwareUpdateConfiguration.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    static isInstance(obj) {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === SoftwareUpdateConfiguration.__pulumiType;
    }
}
exports.SoftwareUpdateConfiguration = SoftwareUpdateConfiguration;
/** @internal */
SoftwareUpdateConfiguration.__pulumiType = 'azure:automation/softwareUpdateConfiguration:SoftwareUpdateConfiguration';
//# sourceMappingURL=softwareUpdateConfiguration.js.map