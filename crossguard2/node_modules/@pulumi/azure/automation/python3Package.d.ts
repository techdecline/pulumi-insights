import * as pulumi from "@pulumi/pulumi";
/**
 * Manages a Automation Python3 Package.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as azure from "@pulumi/azure";
 *
 * const example = new azure.core.ResourceGroup("example", {
 *     name: "rg-example",
 *     location: "%[2]s",
 * });
 * const exampleAccount = new azure.automation.Account("example", {
 *     name: "accexample",
 *     location: example.location,
 *     resourceGroupName: example.name,
 *     skuName: "Basic",
 * });
 * const examplePython3Package = new azure.automation.Python3Package("example", {
 *     name: "example",
 *     resourceGroupName: example.name,
 *     automationAccountName: exampleAccount.name,
 *     contentUri: "https://pypi.org/packages/source/r/requests/requests-2.31.0.tar.gz",
 *     contentVersion: "2.31.0",
 *     hashAlgorithm: "sha256",
 *     hashValue: "942c5a758f98d790eaed1a29cb6eefc7ffb0d1cf7af05c3d2791656dbd6ad1e1",
 *     tags: {
 *         key: "foo",
 *     },
 * });
 * ```
 *
 * ## Import
 *
 * Automation Python3 Packages can be imported using the `resource id`, e.g.
 *
 * ```sh
 * $ pulumi import azure:automation/python3Package:Python3Package example /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/group1/providers/Microsoft.Automation/automationAccounts/account1/python3Packages/pkg
 * ```
 */
export declare class Python3Package extends pulumi.CustomResource {
    /**
     * Get an existing Python3Package resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    static get(name: string, id: pulumi.Input<pulumi.ID>, state?: Python3PackageState, opts?: pulumi.CustomResourceOptions): Python3Package;
    /**
     * Returns true if the given object is an instance of Python3Package.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    static isInstance(obj: any): obj is Python3Package;
    /**
     * The name of the automation account in which the Python3 Package is created. Changing this forces a new resource to be created.
     */
    readonly automationAccountName: pulumi.Output<string>;
    /**
     * The URL of the python package. Changing this forces a new Automation Python3 Package to be created.
     */
    readonly contentUri: pulumi.Output<string>;
    /**
     * Specify the version of the python3 package. The value should meet the system.version class format like `1.1.1`. Changing this forces a new Automation Python3 Package to be created.
     */
    readonly contentVersion: pulumi.Output<string | undefined>;
    /**
     * Specify the hash algorithm used to hash the content of the python3 package. Changing this forces a new Automation Python3 Package to be created.
     */
    readonly hashAlgorithm: pulumi.Output<string | undefined>;
    /**
     * Specity the hash value of the content. Changing this forces a new Automation Python3 Package to be created.
     */
    readonly hashValue: pulumi.Output<string | undefined>;
    /**
     * The name which should be used for this Automation Python3 Package. Changing this forces a new Automation Python3 Package to be created.
     */
    readonly name: pulumi.Output<string>;
    /**
     * The name of the resource group in which the Python3 Package is created. Changing this forces a new resource to be created.
     */
    readonly resourceGroupName: pulumi.Output<string>;
    /**
     * A mapping of tags which should be assigned to the Automation Python3 Package.
     */
    readonly tags: pulumi.Output<{
        [key: string]: string;
    } | undefined>;
    /**
     * Create a Python3Package resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: Python3PackageArgs, opts?: pulumi.CustomResourceOptions);
}
/**
 * Input properties used for looking up and filtering Python3Package resources.
 */
export interface Python3PackageState {
    /**
     * The name of the automation account in which the Python3 Package is created. Changing this forces a new resource to be created.
     */
    automationAccountName?: pulumi.Input<string>;
    /**
     * The URL of the python package. Changing this forces a new Automation Python3 Package to be created.
     */
    contentUri?: pulumi.Input<string>;
    /**
     * Specify the version of the python3 package. The value should meet the system.version class format like `1.1.1`. Changing this forces a new Automation Python3 Package to be created.
     */
    contentVersion?: pulumi.Input<string>;
    /**
     * Specify the hash algorithm used to hash the content of the python3 package. Changing this forces a new Automation Python3 Package to be created.
     */
    hashAlgorithm?: pulumi.Input<string>;
    /**
     * Specity the hash value of the content. Changing this forces a new Automation Python3 Package to be created.
     */
    hashValue?: pulumi.Input<string>;
    /**
     * The name which should be used for this Automation Python3 Package. Changing this forces a new Automation Python3 Package to be created.
     */
    name?: pulumi.Input<string>;
    /**
     * The name of the resource group in which the Python3 Package is created. Changing this forces a new resource to be created.
     */
    resourceGroupName?: pulumi.Input<string>;
    /**
     * A mapping of tags which should be assigned to the Automation Python3 Package.
     */
    tags?: pulumi.Input<{
        [key: string]: pulumi.Input<string>;
    }>;
}
/**
 * The set of arguments for constructing a Python3Package resource.
 */
export interface Python3PackageArgs {
    /**
     * The name of the automation account in which the Python3 Package is created. Changing this forces a new resource to be created.
     */
    automationAccountName: pulumi.Input<string>;
    /**
     * The URL of the python package. Changing this forces a new Automation Python3 Package to be created.
     */
    contentUri: pulumi.Input<string>;
    /**
     * Specify the version of the python3 package. The value should meet the system.version class format like `1.1.1`. Changing this forces a new Automation Python3 Package to be created.
     */
    contentVersion?: pulumi.Input<string>;
    /**
     * Specify the hash algorithm used to hash the content of the python3 package. Changing this forces a new Automation Python3 Package to be created.
     */
    hashAlgorithm?: pulumi.Input<string>;
    /**
     * Specity the hash value of the content. Changing this forces a new Automation Python3 Package to be created.
     */
    hashValue?: pulumi.Input<string>;
    /**
     * The name which should be used for this Automation Python3 Package. Changing this forces a new Automation Python3 Package to be created.
     */
    name?: pulumi.Input<string>;
    /**
     * The name of the resource group in which the Python3 Package is created. Changing this forces a new resource to be created.
     */
    resourceGroupName: pulumi.Input<string>;
    /**
     * A mapping of tags which should be assigned to the Automation Python3 Package.
     */
    tags?: pulumi.Input<{
        [key: string]: pulumi.Input<string>;
    }>;
}
