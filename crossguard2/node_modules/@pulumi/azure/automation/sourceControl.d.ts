import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
/**
 * Manages an Automation Source Control.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as azure from "@pulumi/azure";
 *
 * const example = new azure.core.ResourceGroup("example", {
 *     name: "example-resources",
 *     location: "West Europe",
 * });
 * const exampleAccount = new azure.automation.Account("example", {
 *     name: "example-account",
 *     location: example.location,
 *     resourceGroupName: example.name,
 *     skuName: "Basic",
 * });
 * const exampleSourceControl = new azure.automation.SourceControl("example", {
 *     name: "example",
 *     automationAccountId: exampleAccount.id,
 *     folderPath: "runbook",
 *     security: {
 *         token: "ghp_xxx",
 *         tokenType: "PersonalAccessToken",
 *     },
 *     repositoryUrl: "https://github.com/foo/bat.git",
 *     sourceControlType: "GitHub",
 *     branch: "main",
 * });
 * ```
 *
 * ## Import
 *
 * Automations can be imported using the `resource id`, e.g.
 *
 * ```sh
 * $ pulumi import azure:automation/sourceControl:SourceControl example /subscriptions/12345678-1234-9876-4563-123456789012/resourceGroups/group1/providers/Microsoft.Automation/automationAccounts/account1/sourceControls/sc1
 * ```
 */
export declare class SourceControl extends pulumi.CustomResource {
    /**
     * Get an existing SourceControl resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    static get(name: string, id: pulumi.Input<pulumi.ID>, state?: SourceControlState, opts?: pulumi.CustomResourceOptions): SourceControl;
    /**
     * Returns true if the given object is an instance of SourceControl.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    static isInstance(obj: any): obj is SourceControl;
    /**
     * Whether auto async the Source Control.
     */
    readonly automaticSync: pulumi.Output<boolean | undefined>;
    /**
     * The ID of Automation Account to manage this Source Control. Changing this forces a new Automation Source Control to be created.
     */
    readonly automationAccountId: pulumi.Output<string>;
    /**
     * Specify the repo branch of the Source Control. Empty value is valid only for `VsoTfvc`.
     */
    readonly branch: pulumi.Output<string | undefined>;
    /**
     * A short description of the Source Control.
     */
    readonly description: pulumi.Output<string | undefined>;
    /**
     * The folder path of the source control. This Path must be relative.
     */
    readonly folderPath: pulumi.Output<string>;
    /**
     * The name which should be used for this Automation Source Control. Changing this forces a new Automation Source Control to be created.
     */
    readonly name: pulumi.Output<string>;
    /**
     * Whether auto publish the Source Control. Defaults to `true`.
     */
    readonly publishRunbookEnabled: pulumi.Output<boolean | undefined>;
    /**
     * The Repository URL of the source control.
     */
    readonly repositoryUrl: pulumi.Output<string>;
    /**
     * A `security` block as defined below.
     */
    readonly security: pulumi.Output<outputs.automation.SourceControlSecurity>;
    /**
     * The source type of Source Control, possible vaules are `VsoGit`, `VsoTfvc` and `GitHub`, and the value is case sensitive.
     */
    readonly sourceControlType: pulumi.Output<string>;
    /**
     * Create a SourceControl resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: SourceControlArgs, opts?: pulumi.CustomResourceOptions);
}
/**
 * Input properties used for looking up and filtering SourceControl resources.
 */
export interface SourceControlState {
    /**
     * Whether auto async the Source Control.
     */
    automaticSync?: pulumi.Input<boolean>;
    /**
     * The ID of Automation Account to manage this Source Control. Changing this forces a new Automation Source Control to be created.
     */
    automationAccountId?: pulumi.Input<string>;
    /**
     * Specify the repo branch of the Source Control. Empty value is valid only for `VsoTfvc`.
     */
    branch?: pulumi.Input<string>;
    /**
     * A short description of the Source Control.
     */
    description?: pulumi.Input<string>;
    /**
     * The folder path of the source control. This Path must be relative.
     */
    folderPath?: pulumi.Input<string>;
    /**
     * The name which should be used for this Automation Source Control. Changing this forces a new Automation Source Control to be created.
     */
    name?: pulumi.Input<string>;
    /**
     * Whether auto publish the Source Control. Defaults to `true`.
     */
    publishRunbookEnabled?: pulumi.Input<boolean>;
    /**
     * The Repository URL of the source control.
     */
    repositoryUrl?: pulumi.Input<string>;
    /**
     * A `security` block as defined below.
     */
    security?: pulumi.Input<inputs.automation.SourceControlSecurity>;
    /**
     * The source type of Source Control, possible vaules are `VsoGit`, `VsoTfvc` and `GitHub`, and the value is case sensitive.
     */
    sourceControlType?: pulumi.Input<string>;
}
/**
 * The set of arguments for constructing a SourceControl resource.
 */
export interface SourceControlArgs {
    /**
     * Whether auto async the Source Control.
     */
    automaticSync?: pulumi.Input<boolean>;
    /**
     * The ID of Automation Account to manage this Source Control. Changing this forces a new Automation Source Control to be created.
     */
    automationAccountId: pulumi.Input<string>;
    /**
     * Specify the repo branch of the Source Control. Empty value is valid only for `VsoTfvc`.
     */
    branch?: pulumi.Input<string>;
    /**
     * A short description of the Source Control.
     */
    description?: pulumi.Input<string>;
    /**
     * The folder path of the source control. This Path must be relative.
     */
    folderPath: pulumi.Input<string>;
    /**
     * The name which should be used for this Automation Source Control. Changing this forces a new Automation Source Control to be created.
     */
    name?: pulumi.Input<string>;
    /**
     * Whether auto publish the Source Control. Defaults to `true`.
     */
    publishRunbookEnabled?: pulumi.Input<boolean>;
    /**
     * The Repository URL of the source control.
     */
    repositoryUrl: pulumi.Input<string>;
    /**
     * A `security` block as defined below.
     */
    security: pulumi.Input<inputs.automation.SourceControlSecurity>;
    /**
     * The source type of Source Control, possible vaules are `VsoGit`, `VsoTfvc` and `GitHub`, and the value is case sensitive.
     */
    sourceControlType: pulumi.Input<string>;
}
