"use strict";
// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __exportStar = (this && this.__exportStar) || function(m, exports) {
    for (var p in m) if (p !== "default" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.Topic = exports.SystemTopicEventSubscription = exports.SystemTopic = exports.Namespace = exports.getTopicOutput = exports.getTopic = exports.getSystemTopicOutput = exports.getSystemTopic = exports.getDomainTopicOutput = exports.getDomainTopic = exports.getDomainOutput = exports.getDomain = exports.EventSubscription = exports.DomainTopic = exports.Domain = void 0;
const pulumi = require("@pulumi/pulumi");
const utilities = require("../utilities");
exports.Domain = null;
utilities.lazyLoad(exports, ["Domain"], () => require("./domain"));
exports.DomainTopic = null;
utilities.lazyLoad(exports, ["DomainTopic"], () => require("./domainTopic"));
exports.EventSubscription = null;
utilities.lazyLoad(exports, ["EventSubscription"], () => require("./eventSubscription"));
exports.getDomain = null;
exports.getDomainOutput = null;
utilities.lazyLoad(exports, ["getDomain", "getDomainOutput"], () => require("./getDomain"));
exports.getDomainTopic = null;
exports.getDomainTopicOutput = null;
utilities.lazyLoad(exports, ["getDomainTopic", "getDomainTopicOutput"], () => require("./getDomainTopic"));
exports.getSystemTopic = null;
exports.getSystemTopicOutput = null;
utilities.lazyLoad(exports, ["getSystemTopic", "getSystemTopicOutput"], () => require("./getSystemTopic"));
exports.getTopic = null;
exports.getTopicOutput = null;
utilities.lazyLoad(exports, ["getTopic", "getTopicOutput"], () => require("./getTopic"));
exports.Namespace = null;
utilities.lazyLoad(exports, ["Namespace"], () => require("./namespace"));
exports.SystemTopic = null;
utilities.lazyLoad(exports, ["SystemTopic"], () => require("./systemTopic"));
exports.SystemTopicEventSubscription = null;
utilities.lazyLoad(exports, ["SystemTopicEventSubscription"], () => require("./systemTopicEventSubscription"));
exports.Topic = null;
utilities.lazyLoad(exports, ["Topic"], () => require("./topic"));
__exportStar(require("./zMixins"), exports);
const _module = {
    version: utilities.getVersion(),
    construct: (name, type, urn) => {
        switch (type) {
            case "azure:eventgrid/domain:Domain":
                return new exports.Domain(name, undefined, { urn });
            case "azure:eventgrid/domainTopic:DomainTopic":
                return new exports.DomainTopic(name, undefined, { urn });
            case "azure:eventgrid/eventSubscription:EventSubscription":
                return new exports.EventSubscription(name, undefined, { urn });
            case "azure:eventgrid/namespace:Namespace":
                return new exports.Namespace(name, undefined, { urn });
            case "azure:eventgrid/systemTopic:SystemTopic":
                return new exports.SystemTopic(name, undefined, { urn });
            case "azure:eventgrid/systemTopicEventSubscription:SystemTopicEventSubscription":
                return new exports.SystemTopicEventSubscription(name, undefined, { urn });
            case "azure:eventgrid/topic:Topic":
                return new exports.Topic(name, undefined, { urn });
            default:
                throw new Error(`unknown resource type ${type}`);
        }
    },
};
pulumi.runtime.registerResourceModule("azure", "eventgrid/domain", _module);
pulumi.runtime.registerResourceModule("azure", "eventgrid/domainTopic", _module);
pulumi.runtime.registerResourceModule("azure", "eventgrid/eventSubscription", _module);
pulumi.runtime.registerResourceModule("azure", "eventgrid/namespace", _module);
pulumi.runtime.registerResourceModule("azure", "eventgrid/systemTopic", _module);
pulumi.runtime.registerResourceModule("azure", "eventgrid/systemTopicEventSubscription", _module);
pulumi.runtime.registerResourceModule("azure", "eventgrid/topic", _module);
//# sourceMappingURL=index.js.map