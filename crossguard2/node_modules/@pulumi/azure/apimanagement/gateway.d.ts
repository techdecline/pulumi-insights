import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
/**
 * Manages an API Management Gateway.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as azure from "@pulumi/azure";
 *
 * const example = new azure.core.ResourceGroup("example", {
 *     name: "example-resources",
 *     location: "West Europe",
 * });
 * const exampleService = new azure.apimanagement.Service("example", {
 *     name: "example-apim",
 *     location: example.location,
 *     resourceGroupName: example.name,
 *     publisherName: "pub1",
 *     publisherEmail: "pub1@email.com",
 *     skuName: "Consumption_0",
 * });
 * const exampleGateway = new azure.apimanagement.Gateway("example", {
 *     name: "example-gateway",
 *     apiManagementId: exampleService.id,
 *     description: "Example API Management gateway",
 *     locationData: {
 *         name: "example name",
 *         city: "example city",
 *         district: "example district",
 *         region: "example region",
 *     },
 * });
 * ```
 *
 * ## Import
 *
 * API Management Gateways can be imported using the `resource id`, e.g.
 *
 * ```sh
 * $ pulumi import azure:apimanagement/gateway:Gateway example /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/group1/providers/Microsoft.ApiManagement/service/service1/gateways/gateway1
 * ```
 */
export declare class Gateway extends pulumi.CustomResource {
    /**
     * Get an existing Gateway resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    static get(name: string, id: pulumi.Input<pulumi.ID>, state?: GatewayState, opts?: pulumi.CustomResourceOptions): Gateway;
    /**
     * Returns true if the given object is an instance of Gateway.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    static isInstance(obj: any): obj is Gateway;
    /**
     * The ID of the API Management Resource in which the gateway will be created. Changing this forces a new API Management Gateway resource to be created.
     */
    readonly apiManagementId: pulumi.Output<string>;
    /**
     * The description of the API Management Gateway.
     */
    readonly description: pulumi.Output<string | undefined>;
    /**
     * A `locationData` block as documented below.
     */
    readonly locationData: pulumi.Output<outputs.apimanagement.GatewayLocationData>;
    /**
     * The name which should be used for the API Management Gateway. Changing this forces a new API Management Gateway to be created.
     */
    readonly name: pulumi.Output<string>;
    /**
     * Create a Gateway resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: GatewayArgs, opts?: pulumi.CustomResourceOptions);
}
/**
 * Input properties used for looking up and filtering Gateway resources.
 */
export interface GatewayState {
    /**
     * The ID of the API Management Resource in which the gateway will be created. Changing this forces a new API Management Gateway resource to be created.
     */
    apiManagementId?: pulumi.Input<string>;
    /**
     * The description of the API Management Gateway.
     */
    description?: pulumi.Input<string>;
    /**
     * A `locationData` block as documented below.
     */
    locationData?: pulumi.Input<inputs.apimanagement.GatewayLocationData>;
    /**
     * The name which should be used for the API Management Gateway. Changing this forces a new API Management Gateway to be created.
     */
    name?: pulumi.Input<string>;
}
/**
 * The set of arguments for constructing a Gateway resource.
 */
export interface GatewayArgs {
    /**
     * The ID of the API Management Resource in which the gateway will be created. Changing this forces a new API Management Gateway resource to be created.
     */
    apiManagementId: pulumi.Input<string>;
    /**
     * The description of the API Management Gateway.
     */
    description?: pulumi.Input<string>;
    /**
     * A `locationData` block as documented below.
     */
    locationData: pulumi.Input<inputs.apimanagement.GatewayLocationData>;
    /**
     * The name which should be used for the API Management Gateway. Changing this forces a new API Management Gateway to be created.
     */
    name?: pulumi.Input<string>;
}
