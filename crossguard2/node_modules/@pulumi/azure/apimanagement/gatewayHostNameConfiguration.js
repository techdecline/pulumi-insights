"use strict";
// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***
Object.defineProperty(exports, "__esModule", { value: true });
exports.GatewayHostNameConfiguration = void 0;
const pulumi = require("@pulumi/pulumi");
const utilities = require("../utilities");
/**
 * Manages an API Management Gateway Host Name Configuration.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as azure from "@pulumi/azure";
 * import * as std from "@pulumi/std";
 *
 * const example = new azure.core.ResourceGroup("example", {
 *     name: "example-resources",
 *     location: "West Europe",
 * });
 * const exampleService = new azure.apimanagement.Service("example", {
 *     name: "example-apim",
 *     location: example.location,
 *     resourceGroupName: example.name,
 *     publisherName: "pub1",
 *     publisherEmail: "pub1@email.com",
 *     skuName: "Consumption_0",
 * });
 * const exampleGateway = new azure.apimanagement.Gateway("example", {
 *     name: "example-gateway",
 *     apiManagementId: exampleService.id,
 *     description: "Example API Management gateway",
 *     locationData: {
 *         name: "example name",
 *         city: "example city",
 *         district: "example district",
 *         region: "example region",
 *     },
 * });
 * const exampleCertificate = new azure.apimanagement.Certificate("example", {
 *     name: "example-cert",
 *     apiManagementName: exampleService.name,
 *     resourceGroupName: example.name,
 *     data: std.filebase64({
 *         input: "example.pfx",
 *     }).then(invoke => invoke.result),
 * });
 * const exampleGatewayHostNameConfiguration = new azure.apimanagement.GatewayHostNameConfiguration("example", {
 *     name: "example-host-name-configuration",
 *     apiManagementId: exampleService.id,
 *     gatewayName: exampleGateway.name,
 *     certificateId: exampleCertificate.id,
 *     hostName: "example-host-name",
 *     requestClientCertificateEnabled: true,
 *     http2Enabled: true,
 *     tls10Enabled: true,
 *     tls11Enabled: false,
 * });
 * ```
 *
 * ## Import
 *
 * API Management Gateway Host Name Configuration can be imported using the `resource id`, e.g.
 *
 * ```sh
 * $ pulumi import azure:apimanagement/gatewayHostNameConfiguration:GatewayHostNameConfiguration example /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/group1/providers/Microsoft.ApiManagement/service/service1/gateways/gateway1/hostnameConfigurations/hc1
 * ```
 */
class GatewayHostNameConfiguration extends pulumi.CustomResource {
    constructor(name, argsOrState, opts) {
        let resourceInputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState;
            resourceInputs["apiManagementId"] = state ? state.apiManagementId : undefined;
            resourceInputs["certificateId"] = state ? state.certificateId : undefined;
            resourceInputs["gatewayName"] = state ? state.gatewayName : undefined;
            resourceInputs["hostName"] = state ? state.hostName : undefined;
            resourceInputs["http2Enabled"] = state ? state.http2Enabled : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["requestClientCertificateEnabled"] = state ? state.requestClientCertificateEnabled : undefined;
            resourceInputs["tls10Enabled"] = state ? state.tls10Enabled : undefined;
            resourceInputs["tls11Enabled"] = state ? state.tls11Enabled : undefined;
        }
        else {
            const args = argsOrState;
            if ((!args || args.apiManagementId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'apiManagementId'");
            }
            if ((!args || args.certificateId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'certificateId'");
            }
            if ((!args || args.gatewayName === undefined) && !opts.urn) {
                throw new Error("Missing required property 'gatewayName'");
            }
            if ((!args || args.hostName === undefined) && !opts.urn) {
                throw new Error("Missing required property 'hostName'");
            }
            resourceInputs["apiManagementId"] = args ? args.apiManagementId : undefined;
            resourceInputs["certificateId"] = args ? args.certificateId : undefined;
            resourceInputs["gatewayName"] = args ? args.gatewayName : undefined;
            resourceInputs["hostName"] = args ? args.hostName : undefined;
            resourceInputs["http2Enabled"] = args ? args.http2Enabled : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["requestClientCertificateEnabled"] = args ? args.requestClientCertificateEnabled : undefined;
            resourceInputs["tls10Enabled"] = args ? args.tls10Enabled : undefined;
            resourceInputs["tls11Enabled"] = args ? args.tls11Enabled : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(GatewayHostNameConfiguration.__pulumiType, name, resourceInputs, opts);
    }
    /**
     * Get an existing GatewayHostNameConfiguration resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    static get(name, id, state, opts) {
        return new GatewayHostNameConfiguration(name, state, Object.assign(Object.assign({}, opts), { id: id }));
    }
    /**
     * Returns true if the given object is an instance of GatewayHostNameConfiguration.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    static isInstance(obj) {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === GatewayHostNameConfiguration.__pulumiType;
    }
}
exports.GatewayHostNameConfiguration = GatewayHostNameConfiguration;
/** @internal */
GatewayHostNameConfiguration.__pulumiType = 'azure:apimanagement/gatewayHostNameConfiguration:GatewayHostNameConfiguration';
//# sourceMappingURL=gatewayHostNameConfiguration.js.map