"use strict";
// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***
Object.defineProperty(exports, "__esModule", { value: true });
exports.ApiTagDescription = void 0;
const pulumi = require("@pulumi/pulumi");
const utilities = require("../utilities");
/**
 * Manages an API Tag Description within an API Management Service.
 *
 * ## Import
 *
 * API Management API Schema's can be imported using the `resource id`, e.g.
 *
 * ```sh
 * $ pulumi import azure:apimanagement/apiTagDescription:ApiTagDescription example /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/mygroup1/providers/Microsoft.ApiManagement/service/instance1/apis/api1/tagDescriptions/tagDescriptionId1
 * ```
 */
class ApiTagDescription extends pulumi.CustomResource {
    constructor(name, argsOrState, opts) {
        let resourceInputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState;
            resourceInputs["apiTagId"] = state ? state.apiTagId : undefined;
            resourceInputs["description"] = state ? state.description : undefined;
            resourceInputs["externalDocumentationDescription"] = state ? state.externalDocumentationDescription : undefined;
            resourceInputs["externalDocumentationUrl"] = state ? state.externalDocumentationUrl : undefined;
        }
        else {
            const args = argsOrState;
            if ((!args || args.apiTagId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'apiTagId'");
            }
            resourceInputs["apiTagId"] = args ? args.apiTagId : undefined;
            resourceInputs["description"] = args ? args.description : undefined;
            resourceInputs["externalDocumentationDescription"] = args ? args.externalDocumentationDescription : undefined;
            resourceInputs["externalDocumentationUrl"] = args ? args.externalDocumentationUrl : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(ApiTagDescription.__pulumiType, name, resourceInputs, opts);
    }
    /**
     * Get an existing ApiTagDescription resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    static get(name, id, state, opts) {
        return new ApiTagDescription(name, state, Object.assign(Object.assign({}, opts), { id: id }));
    }
    /**
     * Returns true if the given object is an instance of ApiTagDescription.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    static isInstance(obj) {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === ApiTagDescription.__pulumiType;
    }
}
exports.ApiTagDescription = ApiTagDescription;
/** @internal */
ApiTagDescription.__pulumiType = 'azure:apimanagement/apiTagDescription:ApiTagDescription';
//# sourceMappingURL=apiTagDescription.js.map