import * as pulumi from "@pulumi/pulumi";
/**
 * Manages an API Management Gateway Certificate Authority.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as azure from "@pulumi/azure";
 * import * as std from "@pulumi/std";
 *
 * const example = new azure.core.ResourceGroup("example", {
 *     name: "example-resources",
 *     location: "West Europe",
 * });
 * const exampleService = new azure.apimanagement.Service("example", {
 *     name: "example-apim",
 *     location: example.location,
 *     resourceGroupName: example.name,
 *     publisherName: "pub1",
 *     publisherEmail: "pub1@email.com",
 *     skuName: "Consumption_0",
 * });
 * const exampleGateway = new azure.apimanagement.Gateway("example", {
 *     name: "example-gateway",
 *     apiManagementId: exampleService.id,
 *     description: "Example API Management gateway",
 *     locationData: {
 *         name: "example name",
 *         city: "example city",
 *         district: "example district",
 *         region: "example region",
 *     },
 * });
 * const exampleCertificate = new azure.apimanagement.Certificate("example", {
 *     name: "example-cert",
 *     apiManagementName: exampleService.name,
 *     resourceGroupName: example.name,
 *     data: std.filebase64({
 *         input: "example.pfx",
 *     }).then(invoke => invoke.result),
 * });
 * const exampleGatewayCertificateAuthority = new azure.apimanagement.GatewayCertificateAuthority("example", {
 *     apiManagementId: exampleService.id,
 *     certificateName: exampleCertificate.name,
 *     gatewayName: exampleGateway.name,
 *     isTrusted: true,
 * });
 * ```
 *
 * ## Import
 *
 * API Management Gateway Certificate Authority can be imported using the `resource id`, e.g.
 *
 * ```sh
 * $ pulumi import azure:apimanagement/gatewayCertificateAuthority:GatewayCertificateAuthority example /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/group1/providers/Microsoft.ApiManagement/service/service1/gateways/gateway1/certificateAuthorities/cert1
 * ```
 */
export declare class GatewayCertificateAuthority extends pulumi.CustomResource {
    /**
     * Get an existing GatewayCertificateAuthority resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    static get(name: string, id: pulumi.Input<pulumi.ID>, state?: GatewayCertificateAuthorityState, opts?: pulumi.CustomResourceOptions): GatewayCertificateAuthority;
    /**
     * Returns true if the given object is an instance of GatewayCertificateAuthority.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    static isInstance(obj: any): obj is GatewayCertificateAuthority;
    /**
     * The ID of the API Management Service. Changing this forces a new resource to be created.
     */
    readonly apiManagementId: pulumi.Output<string>;
    /**
     * The name of the API Management Certificate. Changing this forces a new resource to be created.
     */
    readonly certificateName: pulumi.Output<string>;
    /**
     * The name of the API Management Gateway. Changing this forces a new resource to be created.
     */
    readonly gatewayName: pulumi.Output<string>;
    /**
     * Whether the API Management Gateway Certificate Authority is trusted.
     */
    readonly isTrusted: pulumi.Output<boolean | undefined>;
    /**
     * Create a GatewayCertificateAuthority resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: GatewayCertificateAuthorityArgs, opts?: pulumi.CustomResourceOptions);
}
/**
 * Input properties used for looking up and filtering GatewayCertificateAuthority resources.
 */
export interface GatewayCertificateAuthorityState {
    /**
     * The ID of the API Management Service. Changing this forces a new resource to be created.
     */
    apiManagementId?: pulumi.Input<string>;
    /**
     * The name of the API Management Certificate. Changing this forces a new resource to be created.
     */
    certificateName?: pulumi.Input<string>;
    /**
     * The name of the API Management Gateway. Changing this forces a new resource to be created.
     */
    gatewayName?: pulumi.Input<string>;
    /**
     * Whether the API Management Gateway Certificate Authority is trusted.
     */
    isTrusted?: pulumi.Input<boolean>;
}
/**
 * The set of arguments for constructing a GatewayCertificateAuthority resource.
 */
export interface GatewayCertificateAuthorityArgs {
    /**
     * The ID of the API Management Service. Changing this forces a new resource to be created.
     */
    apiManagementId: pulumi.Input<string>;
    /**
     * The name of the API Management Certificate. Changing this forces a new resource to be created.
     */
    certificateName: pulumi.Input<string>;
    /**
     * The name of the API Management Gateway. Changing this forces a new resource to be created.
     */
    gatewayName: pulumi.Input<string>;
    /**
     * Whether the API Management Gateway Certificate Authority is trusted.
     */
    isTrusted?: pulumi.Input<boolean>;
}
