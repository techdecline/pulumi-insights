"use strict";
// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***
Object.defineProperty(exports, "__esModule", { value: true });
exports.ProductTag = void 0;
const pulumi = require("@pulumi/pulumi");
const utilities = require("../utilities");
/**
 * Manages an API Management Product tag
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as azure from "@pulumi/azure";
 *
 * const example = new azure.core.ResourceGroup("example", {
 *     name: "example-resources",
 *     location: "West Europe",
 * });
 * const exampleService = new azure.apimanagement.Service("example", {
 *     name: "example-apim",
 *     location: example.location,
 *     resourceGroupName: example.name,
 *     publisherName: "My Company",
 *     publisherEmail: "company@terraform.io",
 *     skuName: "Developer_1",
 * });
 * const exampleProduct = new azure.apimanagement.Product("example", {
 *     productId: "test-product",
 *     apiManagementName: exampleService.name,
 *     resourceGroupName: example.name,
 *     displayName: "Test Product",
 *     subscriptionRequired: true,
 *     approvalRequired: true,
 *     published: true,
 * });
 * const exampleTag = new azure.apimanagement.Tag("example", {
 *     apiManagementId: exampleService.id,
 *     name: "example-tag",
 * });
 * const exampleProductTag = new azure.apimanagement.ProductTag("example", {
 *     apiManagementProductId: exampleProduct.productId,
 *     apiManagementName: exampleService.name,
 *     resourceGroupName: example.name,
 *     name: exampleTag.name,
 * });
 * ```
 *
 * ## Import
 *
 * API Management Products can be imported using the `resource id`, e.g.
 *
 * ```sh
 * $ pulumi import azure:apimanagement/productTag:ProductTag example /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/mygroup1/providers/Microsoft.ApiManagement/service/instance1/products/myproduct/tags/mytag
 * ```
 */
class ProductTag extends pulumi.CustomResource {
    constructor(name, argsOrState, opts) {
        let resourceInputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState;
            resourceInputs["apiManagementName"] = state ? state.apiManagementName : undefined;
            resourceInputs["apiManagementProductId"] = state ? state.apiManagementProductId : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["resourceGroupName"] = state ? state.resourceGroupName : undefined;
        }
        else {
            const args = argsOrState;
            if ((!args || args.apiManagementName === undefined) && !opts.urn) {
                throw new Error("Missing required property 'apiManagementName'");
            }
            if ((!args || args.apiManagementProductId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'apiManagementProductId'");
            }
            if ((!args || args.resourceGroupName === undefined) && !opts.urn) {
                throw new Error("Missing required property 'resourceGroupName'");
            }
            resourceInputs["apiManagementName"] = args ? args.apiManagementName : undefined;
            resourceInputs["apiManagementProductId"] = args ? args.apiManagementProductId : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["resourceGroupName"] = args ? args.resourceGroupName : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(ProductTag.__pulumiType, name, resourceInputs, opts);
    }
    /**
     * Get an existing ProductTag resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    static get(name, id, state, opts) {
        return new ProductTag(name, state, Object.assign(Object.assign({}, opts), { id: id }));
    }
    /**
     * Returns true if the given object is an instance of ProductTag.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    static isInstance(obj) {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === ProductTag.__pulumiType;
    }
}
exports.ProductTag = ProductTag;
/** @internal */
ProductTag.__pulumiType = 'azure:apimanagement/productTag:ProductTag';
//# sourceMappingURL=productTag.js.map