"use strict";
// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***
Object.defineProperty(exports, "__esModule", { value: true });
exports.getGatewayHostNameConfigurationOutput = exports.getGatewayHostNameConfiguration = void 0;
const pulumi = require("@pulumi/pulumi");
const utilities = require("../utilities");
/**
 * Use this data source to access information about an existing API Management Gateway Host Configuration.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as azure from "@pulumi/azure";
 *
 * const example = azure.apimanagement.getService({
 *     name: "example-apim",
 *     resourceGroupName: "example-resources",
 * });
 * const exampleGetGateway = azure.apimanagement.getGateway({
 *     name: "example-gateway",
 *     apiManagementId: main.id,
 * });
 * const exampleGetGatewayHostNameConfiguration = Promise.all([example, exampleGetGateway]).then(([example, exampleGetGateway]) => azure.apimanagement.getGatewayHostNameConfiguration({
 *     name: "example-host-configuration",
 *     apiManagementId: example.id,
 *     gatewayName: exampleGetGateway.name,
 * }));
 * export const hostName = exampleGetGatewayHostNameConfiguration.then(exampleGetGatewayHostNameConfiguration => exampleGetGatewayHostNameConfiguration.hostName);
 * ```
 */
function getGatewayHostNameConfiguration(args, opts) {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("azure:apimanagement/getGatewayHostNameConfiguration:getGatewayHostNameConfiguration", {
        "apiManagementId": args.apiManagementId,
        "gatewayName": args.gatewayName,
        "name": args.name,
    }, opts);
}
exports.getGatewayHostNameConfiguration = getGatewayHostNameConfiguration;
/**
 * Use this data source to access information about an existing API Management Gateway Host Configuration.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as azure from "@pulumi/azure";
 *
 * const example = azure.apimanagement.getService({
 *     name: "example-apim",
 *     resourceGroupName: "example-resources",
 * });
 * const exampleGetGateway = azure.apimanagement.getGateway({
 *     name: "example-gateway",
 *     apiManagementId: main.id,
 * });
 * const exampleGetGatewayHostNameConfiguration = Promise.all([example, exampleGetGateway]).then(([example, exampleGetGateway]) => azure.apimanagement.getGatewayHostNameConfiguration({
 *     name: "example-host-configuration",
 *     apiManagementId: example.id,
 *     gatewayName: exampleGetGateway.name,
 * }));
 * export const hostName = exampleGetGatewayHostNameConfiguration.then(exampleGetGatewayHostNameConfiguration => exampleGetGatewayHostNameConfiguration.hostName);
 * ```
 */
function getGatewayHostNameConfigurationOutput(args, opts) {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invokeOutput("azure:apimanagement/getGatewayHostNameConfiguration:getGatewayHostNameConfiguration", {
        "apiManagementId": args.apiManagementId,
        "gatewayName": args.gatewayName,
        "name": args.name,
    }, opts);
}
exports.getGatewayHostNameConfigurationOutput = getGatewayHostNameConfigurationOutput;
//# sourceMappingURL=getGatewayHostNameConfiguration.js.map