import * as pulumi from "@pulumi/pulumi";
/**
 * Allows you to set a user or group as the AD administrator for a PostgreSQL Flexible Server.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as azure from "@pulumi/azure";
 * import * as azuread from "@pulumi/azuread";
 *
 * const current = azure.core.getClientConfig({});
 * const example = current.then(current => azuread.getServicePrincipal({
 *     objectId: current.objectId,
 * }));
 * const exampleResourceGroup = new azure.core.ResourceGroup("example", {
 *     name: "example-resources",
 *     location: "West Europe",
 * });
 * const exampleFlexibleServer = new azure.postgresql.FlexibleServer("example", {
 *     name: "example-fs",
 *     resourceGroupName: exampleResourceGroup.name,
 *     location: exampleResourceGroup.location,
 *     administratorLogin: "adminTerraform",
 *     administratorPassword: "QAZwsx123",
 *     storageMb: 32768,
 *     version: "12",
 *     skuName: "GP_Standard_D2s_v3",
 *     zone: "2",
 *     authentication: {
 *         activeDirectoryAuthEnabled: true,
 *         tenantId: current.then(current => current.tenantId),
 *     },
 * });
 * const exampleFlexibleServerActiveDirectoryAdministrator = new azure.postgresql.FlexibleServerActiveDirectoryAdministrator("example", {
 *     serverName: exampleFlexibleServer.name,
 *     resourceGroupName: exampleResourceGroup.name,
 *     tenantId: current.then(current => current.tenantId),
 *     objectId: example.then(example => example.objectId),
 *     principalName: example.then(example => example.displayName),
 *     principalType: "ServicePrincipal",
 * });
 * ```
 *
 * ## Import
 *
 * A PostgreSQL Flexible Server Active Directory Administrator can be imported using the `resource id`, e.g.
 *
 * ```sh
 * $ pulumi import azure:postgresql/flexibleServerActiveDirectoryAdministrator:FlexibleServerActiveDirectoryAdministrator example /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/myresourcegroup/providers/Microsoft.DBforPostgreSQL/flexibleServers/myserver/administrators/objectId
 * ```
 */
export declare class FlexibleServerActiveDirectoryAdministrator extends pulumi.CustomResource {
    /**
     * Get an existing FlexibleServerActiveDirectoryAdministrator resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    static get(name: string, id: pulumi.Input<pulumi.ID>, state?: FlexibleServerActiveDirectoryAdministratorState, opts?: pulumi.CustomResourceOptions): FlexibleServerActiveDirectoryAdministrator;
    /**
     * Returns true if the given object is an instance of FlexibleServerActiveDirectoryAdministrator.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    static isInstance(obj: any): obj is FlexibleServerActiveDirectoryAdministrator;
    /**
     * The object ID of a user, service principal or security group in the Azure Active Directory tenant set as the Flexible Server Admin. Changing this forces a new resource to be created.
     */
    readonly objectId: pulumi.Output<string>;
    /**
     * The name of Azure Active Directory principal. Changing this forces a new resource to be created.
     */
    readonly principalName: pulumi.Output<string>;
    /**
     * The type of Azure Active Directory principal. Possible values are `Group`, `ServicePrincipal` and `User`. Changing this forces a new resource to be created.
     */
    readonly principalType: pulumi.Output<string>;
    /**
     * The name of the resource group for the PostgreSQL Server. Changing this forces a new resource to be created.
     */
    readonly resourceGroupName: pulumi.Output<string>;
    /**
     * The name of the PostgreSQL Flexible Server on which to set the administrator. Changing this forces a new resource to be created.
     */
    readonly serverName: pulumi.Output<string>;
    /**
     * The Azure Tenant ID. Changing this forces a new resource to be created.
     */
    readonly tenantId: pulumi.Output<string>;
    /**
     * Create a FlexibleServerActiveDirectoryAdministrator resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: FlexibleServerActiveDirectoryAdministratorArgs, opts?: pulumi.CustomResourceOptions);
}
/**
 * Input properties used for looking up and filtering FlexibleServerActiveDirectoryAdministrator resources.
 */
export interface FlexibleServerActiveDirectoryAdministratorState {
    /**
     * The object ID of a user, service principal or security group in the Azure Active Directory tenant set as the Flexible Server Admin. Changing this forces a new resource to be created.
     */
    objectId?: pulumi.Input<string>;
    /**
     * The name of Azure Active Directory principal. Changing this forces a new resource to be created.
     */
    principalName?: pulumi.Input<string>;
    /**
     * The type of Azure Active Directory principal. Possible values are `Group`, `ServicePrincipal` and `User`. Changing this forces a new resource to be created.
     */
    principalType?: pulumi.Input<string>;
    /**
     * The name of the resource group for the PostgreSQL Server. Changing this forces a new resource to be created.
     */
    resourceGroupName?: pulumi.Input<string>;
    /**
     * The name of the PostgreSQL Flexible Server on which to set the administrator. Changing this forces a new resource to be created.
     */
    serverName?: pulumi.Input<string>;
    /**
     * The Azure Tenant ID. Changing this forces a new resource to be created.
     */
    tenantId?: pulumi.Input<string>;
}
/**
 * The set of arguments for constructing a FlexibleServerActiveDirectoryAdministrator resource.
 */
export interface FlexibleServerActiveDirectoryAdministratorArgs {
    /**
     * The object ID of a user, service principal or security group in the Azure Active Directory tenant set as the Flexible Server Admin. Changing this forces a new resource to be created.
     */
    objectId: pulumi.Input<string>;
    /**
     * The name of Azure Active Directory principal. Changing this forces a new resource to be created.
     */
    principalName: pulumi.Input<string>;
    /**
     * The type of Azure Active Directory principal. Possible values are `Group`, `ServicePrincipal` and `User`. Changing this forces a new resource to be created.
     */
    principalType: pulumi.Input<string>;
    /**
     * The name of the resource group for the PostgreSQL Server. Changing this forces a new resource to be created.
     */
    resourceGroupName: pulumi.Input<string>;
    /**
     * The name of the PostgreSQL Flexible Server on which to set the administrator. Changing this forces a new resource to be created.
     */
    serverName: pulumi.Input<string>;
    /**
     * The Azure Tenant ID. Changing this forces a new resource to be created.
     */
    tenantId: pulumi.Input<string>;
}
