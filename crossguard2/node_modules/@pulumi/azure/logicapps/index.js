"use strict";
// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***
Object.defineProperty(exports, "__esModule", { value: true });
exports.Workflow = exports.TriggerRecurrence = exports.TriggerHttpRequest = exports.TriggerCustom = exports.Standard = exports.IntegrationAccountSession = exports.IntegrationAccountSchema = exports.IntegrationAccountPartner = exports.IntegrationAccountMap = exports.IntegrationAccountCertificate = exports.IntegrationAccountBatchConfiguration = exports.IntegrationAccountAssembly = exports.IntegrationAccountAgreement = exports.IntegrationAccount = exports.getWorkflowOutput = exports.getWorkflow = exports.getStandardOutput = exports.getStandard = exports.getIntegrationAccountOutput = exports.getIntegrationAccount = exports.ActionHttp = exports.ActionCustom = void 0;
const pulumi = require("@pulumi/pulumi");
const utilities = require("../utilities");
exports.ActionCustom = null;
utilities.lazyLoad(exports, ["ActionCustom"], () => require("./actionCustom"));
exports.ActionHttp = null;
utilities.lazyLoad(exports, ["ActionHttp"], () => require("./actionHttp"));
exports.getIntegrationAccount = null;
exports.getIntegrationAccountOutput = null;
utilities.lazyLoad(exports, ["getIntegrationAccount", "getIntegrationAccountOutput"], () => require("./getIntegrationAccount"));
exports.getStandard = null;
exports.getStandardOutput = null;
utilities.lazyLoad(exports, ["getStandard", "getStandardOutput"], () => require("./getStandard"));
exports.getWorkflow = null;
exports.getWorkflowOutput = null;
utilities.lazyLoad(exports, ["getWorkflow", "getWorkflowOutput"], () => require("./getWorkflow"));
exports.IntegrationAccount = null;
utilities.lazyLoad(exports, ["IntegrationAccount"], () => require("./integrationAccount"));
exports.IntegrationAccountAgreement = null;
utilities.lazyLoad(exports, ["IntegrationAccountAgreement"], () => require("./integrationAccountAgreement"));
exports.IntegrationAccountAssembly = null;
utilities.lazyLoad(exports, ["IntegrationAccountAssembly"], () => require("./integrationAccountAssembly"));
exports.IntegrationAccountBatchConfiguration = null;
utilities.lazyLoad(exports, ["IntegrationAccountBatchConfiguration"], () => require("./integrationAccountBatchConfiguration"));
exports.IntegrationAccountCertificate = null;
utilities.lazyLoad(exports, ["IntegrationAccountCertificate"], () => require("./integrationAccountCertificate"));
exports.IntegrationAccountMap = null;
utilities.lazyLoad(exports, ["IntegrationAccountMap"], () => require("./integrationAccountMap"));
exports.IntegrationAccountPartner = null;
utilities.lazyLoad(exports, ["IntegrationAccountPartner"], () => require("./integrationAccountPartner"));
exports.IntegrationAccountSchema = null;
utilities.lazyLoad(exports, ["IntegrationAccountSchema"], () => require("./integrationAccountSchema"));
exports.IntegrationAccountSession = null;
utilities.lazyLoad(exports, ["IntegrationAccountSession"], () => require("./integrationAccountSession"));
exports.Standard = null;
utilities.lazyLoad(exports, ["Standard"], () => require("./standard"));
exports.TriggerCustom = null;
utilities.lazyLoad(exports, ["TriggerCustom"], () => require("./triggerCustom"));
exports.TriggerHttpRequest = null;
utilities.lazyLoad(exports, ["TriggerHttpRequest"], () => require("./triggerHttpRequest"));
exports.TriggerRecurrence = null;
utilities.lazyLoad(exports, ["TriggerRecurrence"], () => require("./triggerRecurrence"));
exports.Workflow = null;
utilities.lazyLoad(exports, ["Workflow"], () => require("./workflow"));
const _module = {
    version: utilities.getVersion(),
    construct: (name, type, urn) => {
        switch (type) {
            case "azure:logicapps/actionCustom:ActionCustom":
                return new exports.ActionCustom(name, undefined, { urn });
            case "azure:logicapps/actionHttp:ActionHttp":
                return new exports.ActionHttp(name, undefined, { urn });
            case "azure:logicapps/integrationAccount:IntegrationAccount":
                return new exports.IntegrationAccount(name, undefined, { urn });
            case "azure:logicapps/integrationAccountAgreement:IntegrationAccountAgreement":
                return new exports.IntegrationAccountAgreement(name, undefined, { urn });
            case "azure:logicapps/integrationAccountAssembly:IntegrationAccountAssembly":
                return new exports.IntegrationAccountAssembly(name, undefined, { urn });
            case "azure:logicapps/integrationAccountBatchConfiguration:IntegrationAccountBatchConfiguration":
                return new exports.IntegrationAccountBatchConfiguration(name, undefined, { urn });
            case "azure:logicapps/integrationAccountCertificate:IntegrationAccountCertificate":
                return new exports.IntegrationAccountCertificate(name, undefined, { urn });
            case "azure:logicapps/integrationAccountMap:IntegrationAccountMap":
                return new exports.IntegrationAccountMap(name, undefined, { urn });
            case "azure:logicapps/integrationAccountPartner:IntegrationAccountPartner":
                return new exports.IntegrationAccountPartner(name, undefined, { urn });
            case "azure:logicapps/integrationAccountSchema:IntegrationAccountSchema":
                return new exports.IntegrationAccountSchema(name, undefined, { urn });
            case "azure:logicapps/integrationAccountSession:IntegrationAccountSession":
                return new exports.IntegrationAccountSession(name, undefined, { urn });
            case "azure:logicapps/standard:Standard":
                return new exports.Standard(name, undefined, { urn });
            case "azure:logicapps/triggerCustom:TriggerCustom":
                return new exports.TriggerCustom(name, undefined, { urn });
            case "azure:logicapps/triggerHttpRequest:TriggerHttpRequest":
                return new exports.TriggerHttpRequest(name, undefined, { urn });
            case "azure:logicapps/triggerRecurrence:TriggerRecurrence":
                return new exports.TriggerRecurrence(name, undefined, { urn });
            case "azure:logicapps/workflow:Workflow":
                return new exports.Workflow(name, undefined, { urn });
            default:
                throw new Error(`unknown resource type ${type}`);
        }
    },
};
pulumi.runtime.registerResourceModule("azure", "logicapps/actionCustom", _module);
pulumi.runtime.registerResourceModule("azure", "logicapps/actionHttp", _module);
pulumi.runtime.registerResourceModule("azure", "logicapps/integrationAccount", _module);
pulumi.runtime.registerResourceModule("azure", "logicapps/integrationAccountAgreement", _module);
pulumi.runtime.registerResourceModule("azure", "logicapps/integrationAccountAssembly", _module);
pulumi.runtime.registerResourceModule("azure", "logicapps/integrationAccountBatchConfiguration", _module);
pulumi.runtime.registerResourceModule("azure", "logicapps/integrationAccountCertificate", _module);
pulumi.runtime.registerResourceModule("azure", "logicapps/integrationAccountMap", _module);
pulumi.runtime.registerResourceModule("azure", "logicapps/integrationAccountPartner", _module);
pulumi.runtime.registerResourceModule("azure", "logicapps/integrationAccountSchema", _module);
pulumi.runtime.registerResourceModule("azure", "logicapps/integrationAccountSession", _module);
pulumi.runtime.registerResourceModule("azure", "logicapps/standard", _module);
pulumi.runtime.registerResourceModule("azure", "logicapps/triggerCustom", _module);
pulumi.runtime.registerResourceModule("azure", "logicapps/triggerHttpRequest", _module);
pulumi.runtime.registerResourceModule("azure", "logicapps/triggerRecurrence", _module);
pulumi.runtime.registerResourceModule("azure", "logicapps/workflow", _module);
//# sourceMappingURL=index.js.map