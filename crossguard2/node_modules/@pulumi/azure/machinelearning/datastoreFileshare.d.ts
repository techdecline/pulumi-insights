import * as pulumi from "@pulumi/pulumi";
/**
 * Manages a Machine Learning File Share DataStore.
 *
 * ## Example Usage
 *
 * ### With Azure File Share
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as azure from "@pulumi/azure";
 *
 * const current = azure.core.getClientConfig({});
 * const example = new azure.core.ResourceGroup("example", {
 *     name: "example-resources",
 *     location: "West Europe",
 * });
 * const exampleInsights = new azure.appinsights.Insights("example", {
 *     name: "workspace-example-ai",
 *     location: example.location,
 *     resourceGroupName: example.name,
 *     applicationType: "web",
 * });
 * const exampleKeyVault = new azure.keyvault.KeyVault("example", {
 *     name: "workspaceexamplekeyvault",
 *     location: example.location,
 *     resourceGroupName: example.name,
 *     tenantId: current.then(current => current.tenantId),
 *     skuName: "premium",
 * });
 * const exampleAccount = new azure.storage.Account("example", {
 *     name: "workspacestorageaccount",
 *     location: example.location,
 *     resourceGroupName: example.name,
 *     accountTier: "Standard",
 *     accountReplicationType: "GRS",
 * });
 * const exampleWorkspace = new azure.machinelearning.Workspace("example", {
 *     name: "example-workspace",
 *     location: example.location,
 *     resourceGroupName: example.name,
 *     applicationInsightsId: exampleInsights.id,
 *     keyVaultId: exampleKeyVault.id,
 *     storageAccountId: exampleAccount.id,
 *     identity: {
 *         type: "SystemAssigned",
 *     },
 * });
 * const exampleShare = new azure.storage.Share("example", {
 *     name: "example",
 *     storageAccountName: exampleAccount.name,
 *     quota: 1,
 * });
 * const exampleDatastoreFileshare = new azure.machinelearning.DatastoreFileshare("example", {
 *     name: "example-datastore",
 *     workspaceId: exampleWorkspace.id,
 *     storageFileshareId: exampleShare.resourceManagerId,
 *     accountKey: exampleAccount.primaryAccessKey,
 * });
 * ```
 *
 * ## Import
 *
 * Machine Learning DataStores can be imported using the `resource id`, e.g.
 *
 * ```sh
 * $ pulumi import azure:machinelearning/datastoreFileshare:DatastoreFileshare example /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/group1/providers/Microsoft.MachineLearningServices/workspaces/mlw1/dataStores/datastore1
 * ```
 */
export declare class DatastoreFileshare extends pulumi.CustomResource {
    /**
     * Get an existing DatastoreFileshare resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    static get(name: string, id: pulumi.Input<pulumi.ID>, state?: DatastoreFileshareState, opts?: pulumi.CustomResourceOptions): DatastoreFileshare;
    /**
     * Returns true if the given object is an instance of DatastoreFileshare.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    static isInstance(obj: any): obj is DatastoreFileshare;
    /**
     * The access key of the Storage Account. Conflicts with `sharedAccessSignature`.
     */
    readonly accountKey: pulumi.Output<string | undefined>;
    /**
     * Text used to describe the asset. Changing this forces a new Machine Learning DataStore to be created.
     */
    readonly description: pulumi.Output<string | undefined>;
    /**
     * Indicate whether this Machines Learning DataStore is the default for the Workspace.
     */
    readonly isDefault: pulumi.Output<boolean>;
    /**
     * The name of the Machine Learning DataStore. Changing this forces a new Machine Learning DataStore to be created.
     */
    readonly name: pulumi.Output<string>;
    /**
     * Specifies which identity to use when retrieving data from the specified source. Defaults to `None`. Possible values are `None`, `WorkspaceSystemAssignedIdentity` and `WorkspaceUserAssignedIdentity`.
     */
    readonly serviceDataIdentity: pulumi.Output<string | undefined>;
    /**
     * The Shared Access Signature of the Storage Account. Conflicts with `accountKey`.
     */
    readonly sharedAccessSignature: pulumi.Output<string | undefined>;
    /**
     * The ID of the Storage Account File Share. Changing this forces a new Machine Learning DataStore to be created.
     */
    readonly storageFileshareId: pulumi.Output<string>;
    /**
     * A mapping of tags which should be assigned to the Machine Learning DataStore. Changing this forces a new Machine Learning DataStore to be created.
     */
    readonly tags: pulumi.Output<{
        [key: string]: string;
    } | undefined>;
    /**
     * The ID of the Machine Learning Workspace. Changing this forces a new Machine Learning DataStore to be created.
     */
    readonly workspaceId: pulumi.Output<string>;
    /**
     * Create a DatastoreFileshare resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: DatastoreFileshareArgs, opts?: pulumi.CustomResourceOptions);
}
/**
 * Input properties used for looking up and filtering DatastoreFileshare resources.
 */
export interface DatastoreFileshareState {
    /**
     * The access key of the Storage Account. Conflicts with `sharedAccessSignature`.
     */
    accountKey?: pulumi.Input<string>;
    /**
     * Text used to describe the asset. Changing this forces a new Machine Learning DataStore to be created.
     */
    description?: pulumi.Input<string>;
    /**
     * Indicate whether this Machines Learning DataStore is the default for the Workspace.
     */
    isDefault?: pulumi.Input<boolean>;
    /**
     * The name of the Machine Learning DataStore. Changing this forces a new Machine Learning DataStore to be created.
     */
    name?: pulumi.Input<string>;
    /**
     * Specifies which identity to use when retrieving data from the specified source. Defaults to `None`. Possible values are `None`, `WorkspaceSystemAssignedIdentity` and `WorkspaceUserAssignedIdentity`.
     */
    serviceDataIdentity?: pulumi.Input<string>;
    /**
     * The Shared Access Signature of the Storage Account. Conflicts with `accountKey`.
     */
    sharedAccessSignature?: pulumi.Input<string>;
    /**
     * The ID of the Storage Account File Share. Changing this forces a new Machine Learning DataStore to be created.
     */
    storageFileshareId?: pulumi.Input<string>;
    /**
     * A mapping of tags which should be assigned to the Machine Learning DataStore. Changing this forces a new Machine Learning DataStore to be created.
     */
    tags?: pulumi.Input<{
        [key: string]: pulumi.Input<string>;
    }>;
    /**
     * The ID of the Machine Learning Workspace. Changing this forces a new Machine Learning DataStore to be created.
     */
    workspaceId?: pulumi.Input<string>;
}
/**
 * The set of arguments for constructing a DatastoreFileshare resource.
 */
export interface DatastoreFileshareArgs {
    /**
     * The access key of the Storage Account. Conflicts with `sharedAccessSignature`.
     */
    accountKey?: pulumi.Input<string>;
    /**
     * Text used to describe the asset. Changing this forces a new Machine Learning DataStore to be created.
     */
    description?: pulumi.Input<string>;
    /**
     * The name of the Machine Learning DataStore. Changing this forces a new Machine Learning DataStore to be created.
     */
    name?: pulumi.Input<string>;
    /**
     * Specifies which identity to use when retrieving data from the specified source. Defaults to `None`. Possible values are `None`, `WorkspaceSystemAssignedIdentity` and `WorkspaceUserAssignedIdentity`.
     */
    serviceDataIdentity?: pulumi.Input<string>;
    /**
     * The Shared Access Signature of the Storage Account. Conflicts with `accountKey`.
     */
    sharedAccessSignature?: pulumi.Input<string>;
    /**
     * The ID of the Storage Account File Share. Changing this forces a new Machine Learning DataStore to be created.
     */
    storageFileshareId: pulumi.Input<string>;
    /**
     * A mapping of tags which should be assigned to the Machine Learning DataStore. Changing this forces a new Machine Learning DataStore to be created.
     */
    tags?: pulumi.Input<{
        [key: string]: pulumi.Input<string>;
    }>;
    /**
     * The ID of the Machine Learning Workspace. Changing this forces a new Machine Learning DataStore to be created.
     */
    workspaceId: pulumi.Input<string>;
}
