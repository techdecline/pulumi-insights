import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
/**
 * Manages a Private DNS Resolver Inbound Endpoint.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as azure from "@pulumi/azure";
 *
 * const example = new azure.core.ResourceGroup("example", {
 *     name: "example-resources",
 *     location: "West Europe",
 * });
 * const exampleVirtualNetwork = new azure.network.VirtualNetwork("example", {
 *     name: "example",
 *     resourceGroupName: example.name,
 *     location: example.location,
 *     addressSpaces: ["10.0.0.0/16"],
 * });
 * const exampleResolver = new azure.privatedns.Resolver("example", {
 *     name: "example",
 *     resourceGroupName: example.name,
 *     location: example.location,
 *     virtualNetworkId: exampleVirtualNetwork.id,
 * });
 * const exampleSubnet = new azure.network.Subnet("example", {
 *     name: "inbounddns",
 *     resourceGroupName: example.name,
 *     virtualNetworkName: exampleVirtualNetwork.name,
 *     addressPrefixes: ["10.0.0.0/28"],
 *     delegations: [{
 *         name: "Microsoft.Network.dnsResolvers",
 *         serviceDelegation: {
 *             actions: ["Microsoft.Network/virtualNetworks/subnets/join/action"],
 *             name: "Microsoft.Network/dnsResolvers",
 *         },
 *     }],
 * });
 * const exampleResolverInboundEndpoint = new azure.privatedns.ResolverInboundEndpoint("example", {
 *     name: "example-drie",
 *     privateDnsResolverId: exampleResolver.id,
 *     location: exampleResolver.location,
 *     ipConfigurations: {
 *         privateIpAllocationMethod: "Dynamic",
 *         subnetId: exampleSubnet.id,
 *     },
 *     tags: {
 *         key: "value",
 *     },
 * });
 * ```
 *
 * ## Import
 *
 * Private DNS Resolver Inbound Endpoint can be imported using the `resource id`, e.g.
 *
 * ```sh
 * $ pulumi import azure:privatedns/resolverInboundEndpoint:ResolverInboundEndpoint example /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/resourceGroup1/providers/Microsoft.Network/dnsResolvers/dnsResolver1/inboundEndpoints/inboundEndpoint1
 * ```
 */
export declare class ResolverInboundEndpoint extends pulumi.CustomResource {
    /**
     * Get an existing ResolverInboundEndpoint resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    static get(name: string, id: pulumi.Input<pulumi.ID>, state?: ResolverInboundEndpointState, opts?: pulumi.CustomResourceOptions): ResolverInboundEndpoint;
    /**
     * Returns true if the given object is an instance of ResolverInboundEndpoint.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    static isInstance(obj: any): obj is ResolverInboundEndpoint;
    /**
     * One `ipConfigurations` block as defined below. Changing this forces a new Private DNS Resolver Inbound Endpoint to be created.
     */
    readonly ipConfigurations: pulumi.Output<outputs.privatedns.ResolverInboundEndpointIpConfigurations>;
    /**
     * Specifies the Azure Region where the Private DNS Resolver Inbound Endpoint should exist. Changing this forces a new Private DNS Resolver Inbound Endpoint to be created.
     */
    readonly location: pulumi.Output<string>;
    /**
     * Specifies the name which should be used for this Private DNS Resolver Inbound Endpoint. Changing this forces a new Private DNS Resolver Inbound Endpoint to be created.
     */
    readonly name: pulumi.Output<string>;
    /**
     * Specifies the ID of the Private DNS Resolver Inbound Endpoint. Changing this forces a new Private DNS Resolver Inbound Endpoint to be created.
     */
    readonly privateDnsResolverId: pulumi.Output<string>;
    /**
     * A mapping of tags which should be assigned to the Private DNS Resolver Inbound Endpoint.
     */
    readonly tags: pulumi.Output<{
        [key: string]: string;
    } | undefined>;
    /**
     * Create a ResolverInboundEndpoint resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: ResolverInboundEndpointArgs, opts?: pulumi.CustomResourceOptions);
}
/**
 * Input properties used for looking up and filtering ResolverInboundEndpoint resources.
 */
export interface ResolverInboundEndpointState {
    /**
     * One `ipConfigurations` block as defined below. Changing this forces a new Private DNS Resolver Inbound Endpoint to be created.
     */
    ipConfigurations?: pulumi.Input<inputs.privatedns.ResolverInboundEndpointIpConfigurations>;
    /**
     * Specifies the Azure Region where the Private DNS Resolver Inbound Endpoint should exist. Changing this forces a new Private DNS Resolver Inbound Endpoint to be created.
     */
    location?: pulumi.Input<string>;
    /**
     * Specifies the name which should be used for this Private DNS Resolver Inbound Endpoint. Changing this forces a new Private DNS Resolver Inbound Endpoint to be created.
     */
    name?: pulumi.Input<string>;
    /**
     * Specifies the ID of the Private DNS Resolver Inbound Endpoint. Changing this forces a new Private DNS Resolver Inbound Endpoint to be created.
     */
    privateDnsResolverId?: pulumi.Input<string>;
    /**
     * A mapping of tags which should be assigned to the Private DNS Resolver Inbound Endpoint.
     */
    tags?: pulumi.Input<{
        [key: string]: pulumi.Input<string>;
    }>;
}
/**
 * The set of arguments for constructing a ResolverInboundEndpoint resource.
 */
export interface ResolverInboundEndpointArgs {
    /**
     * One `ipConfigurations` block as defined below. Changing this forces a new Private DNS Resolver Inbound Endpoint to be created.
     */
    ipConfigurations: pulumi.Input<inputs.privatedns.ResolverInboundEndpointIpConfigurations>;
    /**
     * Specifies the Azure Region where the Private DNS Resolver Inbound Endpoint should exist. Changing this forces a new Private DNS Resolver Inbound Endpoint to be created.
     */
    location?: pulumi.Input<string>;
    /**
     * Specifies the name which should be used for this Private DNS Resolver Inbound Endpoint. Changing this forces a new Private DNS Resolver Inbound Endpoint to be created.
     */
    name?: pulumi.Input<string>;
    /**
     * Specifies the ID of the Private DNS Resolver Inbound Endpoint. Changing this forces a new Private DNS Resolver Inbound Endpoint to be created.
     */
    privateDnsResolverId: pulumi.Input<string>;
    /**
     * A mapping of tags which should be assigned to the Private DNS Resolver Inbound Endpoint.
     */
    tags?: pulumi.Input<{
        [key: string]: pulumi.Input<string>;
    }>;
}
