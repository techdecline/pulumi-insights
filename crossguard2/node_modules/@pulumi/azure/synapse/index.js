"use strict";
// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***
Object.defineProperty(exports, "__esModule", { value: true });
exports.WorkspaceVulnerabilityAssessment = exports.WorkspaceSqlAadAdmin = exports.WorkspaceSecurityAlertPolicy = exports.WorkspaceKey = exports.WorkspaceExtendedAuditingPolicy = exports.WorkspaceAadAdmin = exports.Workspace = exports.SqlPoolWorkloadGroup = exports.SqlPoolWorkloadClassifier = exports.SqlPoolVulnerabilityAssessmentBaseline = exports.SqlPoolVulnerabilityAssessment = exports.SqlPoolSecurityAlertPolicy = exports.SqlPoolExtendedAuditingPolicy = exports.SqlPool = exports.SparkPool = exports.RoleAssignment = exports.PrivateLinkHub = exports.ManagedPrivateEndpoint = exports.LinkedService = exports.IntegrationRuntimeSelfHosted = exports.IntegrationRuntimeAzure = exports.getWorkspaceOutput = exports.getWorkspace = exports.FirewallRule = void 0;
const pulumi = require("@pulumi/pulumi");
const utilities = require("../utilities");
exports.FirewallRule = null;
utilities.lazyLoad(exports, ["FirewallRule"], () => require("./firewallRule"));
exports.getWorkspace = null;
exports.getWorkspaceOutput = null;
utilities.lazyLoad(exports, ["getWorkspace", "getWorkspaceOutput"], () => require("./getWorkspace"));
exports.IntegrationRuntimeAzure = null;
utilities.lazyLoad(exports, ["IntegrationRuntimeAzure"], () => require("./integrationRuntimeAzure"));
exports.IntegrationRuntimeSelfHosted = null;
utilities.lazyLoad(exports, ["IntegrationRuntimeSelfHosted"], () => require("./integrationRuntimeSelfHosted"));
exports.LinkedService = null;
utilities.lazyLoad(exports, ["LinkedService"], () => require("./linkedService"));
exports.ManagedPrivateEndpoint = null;
utilities.lazyLoad(exports, ["ManagedPrivateEndpoint"], () => require("./managedPrivateEndpoint"));
exports.PrivateLinkHub = null;
utilities.lazyLoad(exports, ["PrivateLinkHub"], () => require("./privateLinkHub"));
exports.RoleAssignment = null;
utilities.lazyLoad(exports, ["RoleAssignment"], () => require("./roleAssignment"));
exports.SparkPool = null;
utilities.lazyLoad(exports, ["SparkPool"], () => require("./sparkPool"));
exports.SqlPool = null;
utilities.lazyLoad(exports, ["SqlPool"], () => require("./sqlPool"));
exports.SqlPoolExtendedAuditingPolicy = null;
utilities.lazyLoad(exports, ["SqlPoolExtendedAuditingPolicy"], () => require("./sqlPoolExtendedAuditingPolicy"));
exports.SqlPoolSecurityAlertPolicy = null;
utilities.lazyLoad(exports, ["SqlPoolSecurityAlertPolicy"], () => require("./sqlPoolSecurityAlertPolicy"));
exports.SqlPoolVulnerabilityAssessment = null;
utilities.lazyLoad(exports, ["SqlPoolVulnerabilityAssessment"], () => require("./sqlPoolVulnerabilityAssessment"));
exports.SqlPoolVulnerabilityAssessmentBaseline = null;
utilities.lazyLoad(exports, ["SqlPoolVulnerabilityAssessmentBaseline"], () => require("./sqlPoolVulnerabilityAssessmentBaseline"));
exports.SqlPoolWorkloadClassifier = null;
utilities.lazyLoad(exports, ["SqlPoolWorkloadClassifier"], () => require("./sqlPoolWorkloadClassifier"));
exports.SqlPoolWorkloadGroup = null;
utilities.lazyLoad(exports, ["SqlPoolWorkloadGroup"], () => require("./sqlPoolWorkloadGroup"));
exports.Workspace = null;
utilities.lazyLoad(exports, ["Workspace"], () => require("./workspace"));
exports.WorkspaceAadAdmin = null;
utilities.lazyLoad(exports, ["WorkspaceAadAdmin"], () => require("./workspaceAadAdmin"));
exports.WorkspaceExtendedAuditingPolicy = null;
utilities.lazyLoad(exports, ["WorkspaceExtendedAuditingPolicy"], () => require("./workspaceExtendedAuditingPolicy"));
exports.WorkspaceKey = null;
utilities.lazyLoad(exports, ["WorkspaceKey"], () => require("./workspaceKey"));
exports.WorkspaceSecurityAlertPolicy = null;
utilities.lazyLoad(exports, ["WorkspaceSecurityAlertPolicy"], () => require("./workspaceSecurityAlertPolicy"));
exports.WorkspaceSqlAadAdmin = null;
utilities.lazyLoad(exports, ["WorkspaceSqlAadAdmin"], () => require("./workspaceSqlAadAdmin"));
exports.WorkspaceVulnerabilityAssessment = null;
utilities.lazyLoad(exports, ["WorkspaceVulnerabilityAssessment"], () => require("./workspaceVulnerabilityAssessment"));
const _module = {
    version: utilities.getVersion(),
    construct: (name, type, urn) => {
        switch (type) {
            case "azure:synapse/firewallRule:FirewallRule":
                return new exports.FirewallRule(name, undefined, { urn });
            case "azure:synapse/integrationRuntimeAzure:IntegrationRuntimeAzure":
                return new exports.IntegrationRuntimeAzure(name, undefined, { urn });
            case "azure:synapse/integrationRuntimeSelfHosted:IntegrationRuntimeSelfHosted":
                return new exports.IntegrationRuntimeSelfHosted(name, undefined, { urn });
            case "azure:synapse/linkedService:LinkedService":
                return new exports.LinkedService(name, undefined, { urn });
            case "azure:synapse/managedPrivateEndpoint:ManagedPrivateEndpoint":
                return new exports.ManagedPrivateEndpoint(name, undefined, { urn });
            case "azure:synapse/privateLinkHub:PrivateLinkHub":
                return new exports.PrivateLinkHub(name, undefined, { urn });
            case "azure:synapse/roleAssignment:RoleAssignment":
                return new exports.RoleAssignment(name, undefined, { urn });
            case "azure:synapse/sparkPool:SparkPool":
                return new exports.SparkPool(name, undefined, { urn });
            case "azure:synapse/sqlPool:SqlPool":
                return new exports.SqlPool(name, undefined, { urn });
            case "azure:synapse/sqlPoolExtendedAuditingPolicy:SqlPoolExtendedAuditingPolicy":
                return new exports.SqlPoolExtendedAuditingPolicy(name, undefined, { urn });
            case "azure:synapse/sqlPoolSecurityAlertPolicy:SqlPoolSecurityAlertPolicy":
                return new exports.SqlPoolSecurityAlertPolicy(name, undefined, { urn });
            case "azure:synapse/sqlPoolVulnerabilityAssessment:SqlPoolVulnerabilityAssessment":
                return new exports.SqlPoolVulnerabilityAssessment(name, undefined, { urn });
            case "azure:synapse/sqlPoolVulnerabilityAssessmentBaseline:SqlPoolVulnerabilityAssessmentBaseline":
                return new exports.SqlPoolVulnerabilityAssessmentBaseline(name, undefined, { urn });
            case "azure:synapse/sqlPoolWorkloadClassifier:SqlPoolWorkloadClassifier":
                return new exports.SqlPoolWorkloadClassifier(name, undefined, { urn });
            case "azure:synapse/sqlPoolWorkloadGroup:SqlPoolWorkloadGroup":
                return new exports.SqlPoolWorkloadGroup(name, undefined, { urn });
            case "azure:synapse/workspace:Workspace":
                return new exports.Workspace(name, undefined, { urn });
            case "azure:synapse/workspaceAadAdmin:WorkspaceAadAdmin":
                return new exports.WorkspaceAadAdmin(name, undefined, { urn });
            case "azure:synapse/workspaceExtendedAuditingPolicy:WorkspaceExtendedAuditingPolicy":
                return new exports.WorkspaceExtendedAuditingPolicy(name, undefined, { urn });
            case "azure:synapse/workspaceKey:WorkspaceKey":
                return new exports.WorkspaceKey(name, undefined, { urn });
            case "azure:synapse/workspaceSecurityAlertPolicy:WorkspaceSecurityAlertPolicy":
                return new exports.WorkspaceSecurityAlertPolicy(name, undefined, { urn });
            case "azure:synapse/workspaceSqlAadAdmin:WorkspaceSqlAadAdmin":
                return new exports.WorkspaceSqlAadAdmin(name, undefined, { urn });
            case "azure:synapse/workspaceVulnerabilityAssessment:WorkspaceVulnerabilityAssessment":
                return new exports.WorkspaceVulnerabilityAssessment(name, undefined, { urn });
            default:
                throw new Error(`unknown resource type ${type}`);
        }
    },
};
pulumi.runtime.registerResourceModule("azure", "synapse/firewallRule", _module);
pulumi.runtime.registerResourceModule("azure", "synapse/integrationRuntimeAzure", _module);
pulumi.runtime.registerResourceModule("azure", "synapse/integrationRuntimeSelfHosted", _module);
pulumi.runtime.registerResourceModule("azure", "synapse/linkedService", _module);
pulumi.runtime.registerResourceModule("azure", "synapse/managedPrivateEndpoint", _module);
pulumi.runtime.registerResourceModule("azure", "synapse/privateLinkHub", _module);
pulumi.runtime.registerResourceModule("azure", "synapse/roleAssignment", _module);
pulumi.runtime.registerResourceModule("azure", "synapse/sparkPool", _module);
pulumi.runtime.registerResourceModule("azure", "synapse/sqlPool", _module);
pulumi.runtime.registerResourceModule("azure", "synapse/sqlPoolExtendedAuditingPolicy", _module);
pulumi.runtime.registerResourceModule("azure", "synapse/sqlPoolSecurityAlertPolicy", _module);
pulumi.runtime.registerResourceModule("azure", "synapse/sqlPoolVulnerabilityAssessment", _module);
pulumi.runtime.registerResourceModule("azure", "synapse/sqlPoolVulnerabilityAssessmentBaseline", _module);
pulumi.runtime.registerResourceModule("azure", "synapse/sqlPoolWorkloadClassifier", _module);
pulumi.runtime.registerResourceModule("azure", "synapse/sqlPoolWorkloadGroup", _module);
pulumi.runtime.registerResourceModule("azure", "synapse/workspace", _module);
pulumi.runtime.registerResourceModule("azure", "synapse/workspaceAadAdmin", _module);
pulumi.runtime.registerResourceModule("azure", "synapse/workspaceExtendedAuditingPolicy", _module);
pulumi.runtime.registerResourceModule("azure", "synapse/workspaceKey", _module);
pulumi.runtime.registerResourceModule("azure", "synapse/workspaceSecurityAlertPolicy", _module);
pulumi.runtime.registerResourceModule("azure", "synapse/workspaceSqlAadAdmin", _module);
pulumi.runtime.registerResourceModule("azure", "synapse/workspaceVulnerabilityAssessment", _module);
//# sourceMappingURL=index.js.map