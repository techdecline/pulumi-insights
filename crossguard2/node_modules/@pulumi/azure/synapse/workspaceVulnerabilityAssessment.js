"use strict";
// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***
Object.defineProperty(exports, "__esModule", { value: true });
exports.WorkspaceVulnerabilityAssessment = void 0;
const pulumi = require("@pulumi/pulumi");
const utilities = require("../utilities");
/**
 * Manages the Vulnerability Assessment for a Synapse Workspace.
 *
 * ## Import
 *
 * Synapse Workspace Vulnerability Assessment can be imported using the `resource id`, e.g.
 *
 * ```sh
 * $ pulumi import azure:synapse/workspaceVulnerabilityAssessment:WorkspaceVulnerabilityAssessment example /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/group1/providers/Microsoft.Synapse/workspaces/workspace1/vulnerabilityAssessments/default
 * ```
 */
class WorkspaceVulnerabilityAssessment extends pulumi.CustomResource {
    constructor(name, argsOrState, opts) {
        let resourceInputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState;
            resourceInputs["recurringScans"] = state ? state.recurringScans : undefined;
            resourceInputs["storageAccountAccessKey"] = state ? state.storageAccountAccessKey : undefined;
            resourceInputs["storageContainerPath"] = state ? state.storageContainerPath : undefined;
            resourceInputs["storageContainerSasKey"] = state ? state.storageContainerSasKey : undefined;
            resourceInputs["workspaceSecurityAlertPolicyId"] = state ? state.workspaceSecurityAlertPolicyId : undefined;
        }
        else {
            const args = argsOrState;
            if ((!args || args.storageContainerPath === undefined) && !opts.urn) {
                throw new Error("Missing required property 'storageContainerPath'");
            }
            if ((!args || args.workspaceSecurityAlertPolicyId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'workspaceSecurityAlertPolicyId'");
            }
            resourceInputs["recurringScans"] = args ? args.recurringScans : undefined;
            resourceInputs["storageAccountAccessKey"] = (args === null || args === void 0 ? void 0 : args.storageAccountAccessKey) ? pulumi.secret(args.storageAccountAccessKey) : undefined;
            resourceInputs["storageContainerPath"] = args ? args.storageContainerPath : undefined;
            resourceInputs["storageContainerSasKey"] = (args === null || args === void 0 ? void 0 : args.storageContainerSasKey) ? pulumi.secret(args.storageContainerSasKey) : undefined;
            resourceInputs["workspaceSecurityAlertPolicyId"] = args ? args.workspaceSecurityAlertPolicyId : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        const secretOpts = { additionalSecretOutputs: ["storageAccountAccessKey", "storageContainerSasKey"] };
        opts = pulumi.mergeOptions(opts, secretOpts);
        super(WorkspaceVulnerabilityAssessment.__pulumiType, name, resourceInputs, opts);
    }
    /**
     * Get an existing WorkspaceVulnerabilityAssessment resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    static get(name, id, state, opts) {
        return new WorkspaceVulnerabilityAssessment(name, state, Object.assign(Object.assign({}, opts), { id: id }));
    }
    /**
     * Returns true if the given object is an instance of WorkspaceVulnerabilityAssessment.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    static isInstance(obj) {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === WorkspaceVulnerabilityAssessment.__pulumiType;
    }
}
exports.WorkspaceVulnerabilityAssessment = WorkspaceVulnerabilityAssessment;
/** @internal */
WorkspaceVulnerabilityAssessment.__pulumiType = 'azure:synapse/workspaceVulnerabilityAssessment:WorkspaceVulnerabilityAssessment';
//# sourceMappingURL=workspaceVulnerabilityAssessment.js.map