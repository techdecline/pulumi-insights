import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
/**
 * Manages the Vulnerability Assessment for a Synapse Workspace.
 *
 * ## Import
 *
 * Synapse Workspace Vulnerability Assessment can be imported using the `resource id`, e.g.
 *
 * ```sh
 * $ pulumi import azure:synapse/workspaceVulnerabilityAssessment:WorkspaceVulnerabilityAssessment example /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/group1/providers/Microsoft.Synapse/workspaces/workspace1/vulnerabilityAssessments/default
 * ```
 */
export declare class WorkspaceVulnerabilityAssessment extends pulumi.CustomResource {
    /**
     * Get an existing WorkspaceVulnerabilityAssessment resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    static get(name: string, id: pulumi.Input<pulumi.ID>, state?: WorkspaceVulnerabilityAssessmentState, opts?: pulumi.CustomResourceOptions): WorkspaceVulnerabilityAssessment;
    /**
     * Returns true if the given object is an instance of WorkspaceVulnerabilityAssessment.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    static isInstance(obj: any): obj is WorkspaceVulnerabilityAssessment;
    /**
     * The recurring scans settings. The `recurringScans` block supports fields documented below.
     */
    readonly recurringScans: pulumi.Output<outputs.synapse.WorkspaceVulnerabilityAssessmentRecurringScans>;
    /**
     * Specifies the identifier key of the storage account for vulnerability assessment scan results. If `storageContainerSasKey` isn't specified, `storageAccountAccessKey` is required.
     */
    readonly storageAccountAccessKey: pulumi.Output<string | undefined>;
    /**
     * A blob storage container path to hold the scan results (e.g. <https://example.blob.core.windows.net/VaScans/>).
     */
    readonly storageContainerPath: pulumi.Output<string>;
    /**
     * A shared access signature (SAS Key) that has write access to the blob container specified in `storageContainerPath` parameter. If `storageAccountAccessKey` isn't specified, `storageContainerSasKey` is required.
     */
    readonly storageContainerSasKey: pulumi.Output<string | undefined>;
    /**
     * The ID of the security alert policy of the Synapse Workspace. Changing this forces a new resource to be created.
     */
    readonly workspaceSecurityAlertPolicyId: pulumi.Output<string>;
    /**
     * Create a WorkspaceVulnerabilityAssessment resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: WorkspaceVulnerabilityAssessmentArgs, opts?: pulumi.CustomResourceOptions);
}
/**
 * Input properties used for looking up and filtering WorkspaceVulnerabilityAssessment resources.
 */
export interface WorkspaceVulnerabilityAssessmentState {
    /**
     * The recurring scans settings. The `recurringScans` block supports fields documented below.
     */
    recurringScans?: pulumi.Input<inputs.synapse.WorkspaceVulnerabilityAssessmentRecurringScans>;
    /**
     * Specifies the identifier key of the storage account for vulnerability assessment scan results. If `storageContainerSasKey` isn't specified, `storageAccountAccessKey` is required.
     */
    storageAccountAccessKey?: pulumi.Input<string>;
    /**
     * A blob storage container path to hold the scan results (e.g. <https://example.blob.core.windows.net/VaScans/>).
     */
    storageContainerPath?: pulumi.Input<string>;
    /**
     * A shared access signature (SAS Key) that has write access to the blob container specified in `storageContainerPath` parameter. If `storageAccountAccessKey` isn't specified, `storageContainerSasKey` is required.
     */
    storageContainerSasKey?: pulumi.Input<string>;
    /**
     * The ID of the security alert policy of the Synapse Workspace. Changing this forces a new resource to be created.
     */
    workspaceSecurityAlertPolicyId?: pulumi.Input<string>;
}
/**
 * The set of arguments for constructing a WorkspaceVulnerabilityAssessment resource.
 */
export interface WorkspaceVulnerabilityAssessmentArgs {
    /**
     * The recurring scans settings. The `recurringScans` block supports fields documented below.
     */
    recurringScans?: pulumi.Input<inputs.synapse.WorkspaceVulnerabilityAssessmentRecurringScans>;
    /**
     * Specifies the identifier key of the storage account for vulnerability assessment scan results. If `storageContainerSasKey` isn't specified, `storageAccountAccessKey` is required.
     */
    storageAccountAccessKey?: pulumi.Input<string>;
    /**
     * A blob storage container path to hold the scan results (e.g. <https://example.blob.core.windows.net/VaScans/>).
     */
    storageContainerPath: pulumi.Input<string>;
    /**
     * A shared access signature (SAS Key) that has write access to the blob container specified in `storageContainerPath` parameter. If `storageAccountAccessKey` isn't specified, `storageContainerSasKey` is required.
     */
    storageContainerSasKey?: pulumi.Input<string>;
    /**
     * The ID of the security alert policy of the Synapse Workspace. Changing this forces a new resource to be created.
     */
    workspaceSecurityAlertPolicyId: pulumi.Input<string>;
}
