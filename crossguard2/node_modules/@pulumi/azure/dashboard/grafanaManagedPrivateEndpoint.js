"use strict";
// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***
Object.defineProperty(exports, "__esModule", { value: true });
exports.GrafanaManagedPrivateEndpoint = void 0;
const pulumi = require("@pulumi/pulumi");
const utilities = require("../utilities");
/**
 * Manages a Dashboard Grafana Managed Private Endpoint.
 *
 * > **NOTE:** This resource will _not_ approve the managed private endpoint connection on the linked resource. This will need to be done manually via Azure CLI, PowerShell, or AzAPI resources. See here for an example that uses AzAPI.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as azure from "@pulumi/azure";
 *
 * const example = new azure.core.ResourceGroup("example", {
 *     name: "example-resources",
 *     location: "Canada Central",
 * });
 * const exampleWorkspace = new azure.monitoring.Workspace("example", {
 *     name: "example-mamw",
 *     resourceGroupName: example.name,
 *     location: example.location,
 *     publicNetworkAccessEnabled: false,
 * });
 * const exampleGrafana = new azure.dashboard.Grafana("example", {
 *     name: "example-dg",
 *     resourceGroupName: example.name,
 *     location: example.location,
 *     grafanaMajorVersion: "10",
 *     publicNetworkAccessEnabled: false,
 *     azureMonitorWorkspaceIntegrations: [{
 *         resourceId: exampleWorkspace.id,
 *     }],
 * });
 * const exampleGrafanaManagedPrivateEndpoint = new azure.dashboard.GrafanaManagedPrivateEndpoint("example", {
 *     grafanaId: exampleGrafana.id,
 *     name: "example-mpe",
 *     location: exampleGrafana.location,
 *     privateLinkResourceId: exampleWorkspace.id,
 *     groupIds: ["prometheusMetrics"],
 *     privateLinkResourceRegion: exampleGrafana.location,
 * });
 * ```
 *
 * ## Import
 *
 * Dashboard Grafana Managed Private Endpoint Examples can be imported using the `resource id`, e.g.
 *
 * ```sh
 * $ pulumi import azure:dashboard/grafanaManagedPrivateEndpoint:GrafanaManagedPrivateEndpoint example /subscriptions/12345678-1234-9876-4563-123456789012/resourceGroups/resGroup1/providers/Microsoft.Dashboard/grafana/workspace1/managedPrivateEndpoints/endpoint1
 * ```
 */
class GrafanaManagedPrivateEndpoint extends pulumi.CustomResource {
    constructor(name, argsOrState, opts) {
        let resourceInputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState;
            resourceInputs["grafanaId"] = state ? state.grafanaId : undefined;
            resourceInputs["groupIds"] = state ? state.groupIds : undefined;
            resourceInputs["location"] = state ? state.location : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["privateLinkResourceId"] = state ? state.privateLinkResourceId : undefined;
            resourceInputs["privateLinkResourceRegion"] = state ? state.privateLinkResourceRegion : undefined;
            resourceInputs["requestMessage"] = state ? state.requestMessage : undefined;
            resourceInputs["tags"] = state ? state.tags : undefined;
        }
        else {
            const args = argsOrState;
            if ((!args || args.grafanaId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'grafanaId'");
            }
            if ((!args || args.privateLinkResourceId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'privateLinkResourceId'");
            }
            resourceInputs["grafanaId"] = args ? args.grafanaId : undefined;
            resourceInputs["groupIds"] = args ? args.groupIds : undefined;
            resourceInputs["location"] = args ? args.location : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["privateLinkResourceId"] = args ? args.privateLinkResourceId : undefined;
            resourceInputs["privateLinkResourceRegion"] = args ? args.privateLinkResourceRegion : undefined;
            resourceInputs["requestMessage"] = args ? args.requestMessage : undefined;
            resourceInputs["tags"] = args ? args.tags : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(GrafanaManagedPrivateEndpoint.__pulumiType, name, resourceInputs, opts);
    }
    /**
     * Get an existing GrafanaManagedPrivateEndpoint resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    static get(name, id, state, opts) {
        return new GrafanaManagedPrivateEndpoint(name, state, Object.assign(Object.assign({}, opts), { id: id }));
    }
    /**
     * Returns true if the given object is an instance of GrafanaManagedPrivateEndpoint.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    static isInstance(obj) {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === GrafanaManagedPrivateEndpoint.__pulumiType;
    }
}
exports.GrafanaManagedPrivateEndpoint = GrafanaManagedPrivateEndpoint;
/** @internal */
GrafanaManagedPrivateEndpoint.__pulumiType = 'azure:dashboard/grafanaManagedPrivateEndpoint:GrafanaManagedPrivateEndpoint';
//# sourceMappingURL=grafanaManagedPrivateEndpoint.js.map