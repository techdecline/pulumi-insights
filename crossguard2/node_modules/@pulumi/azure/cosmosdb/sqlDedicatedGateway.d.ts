import * as pulumi from "@pulumi/pulumi";
/**
 * Manages a SQL Dedicated Gateway within a Cosmos DB Account.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as azure from "@pulumi/azure";
 *
 * const example = new azure.core.ResourceGroup("example", {
 *     name: "example-resource-group",
 *     location: "West Europe",
 * });
 * const exampleAccount = new azure.cosmosdb.Account("example", {
 *     name: "example-ca",
 *     location: example.location,
 *     resourceGroupName: example.name,
 *     offerType: "Standard",
 *     kind: "GlobalDocumentDB",
 *     consistencyPolicy: {
 *         consistencyLevel: "BoundedStaleness",
 *     },
 *     geoLocations: [{
 *         location: example.location,
 *         failoverPriority: 0,
 *     }],
 * });
 * const exampleSqlDedicatedGateway = new azure.cosmosdb.SqlDedicatedGateway("example", {
 *     cosmosdbAccountId: exampleAccount.id,
 *     instanceCount: 1,
 *     instanceSize: "Cosmos.D4s",
 * });
 * ```
 *
 * ## Import
 *
 * CosmosDB SQL Dedicated Gateways can be imported using the `resource id`, e.g.
 *
 * ```sh
 * $ pulumi import azure:cosmosdb/sqlDedicatedGateway:SqlDedicatedGateway example /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/resourceGroup1/providers/Microsoft.DocumentDB/databaseAccounts/account1/services/SqlDedicatedGateway
 * ```
 */
export declare class SqlDedicatedGateway extends pulumi.CustomResource {
    /**
     * Get an existing SqlDedicatedGateway resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    static get(name: string, id: pulumi.Input<pulumi.ID>, state?: SqlDedicatedGatewayState, opts?: pulumi.CustomResourceOptions): SqlDedicatedGateway;
    /**
     * Returns true if the given object is an instance of SqlDedicatedGateway.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    static isInstance(obj: any): obj is SqlDedicatedGateway;
    /**
     * The resource ID of the CosmosDB Account. Changing this forces a new resource to be created.
     */
    readonly cosmosdbAccountId: pulumi.Output<string>;
    /**
     * The instance count for the CosmosDB SQL Dedicated Gateway. Possible value is between `1` and `5`.
     */
    readonly instanceCount: pulumi.Output<number>;
    /**
     * The instance size for the CosmosDB SQL Dedicated Gateway. Changing this forces a new resource to be created. Possible values are `Cosmos.D4s`, `Cosmos.D8s` and `Cosmos.D16s`.
     */
    readonly instanceSize: pulumi.Output<string>;
    /**
     * Create a SqlDedicatedGateway resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: SqlDedicatedGatewayArgs, opts?: pulumi.CustomResourceOptions);
}
/**
 * Input properties used for looking up and filtering SqlDedicatedGateway resources.
 */
export interface SqlDedicatedGatewayState {
    /**
     * The resource ID of the CosmosDB Account. Changing this forces a new resource to be created.
     */
    cosmosdbAccountId?: pulumi.Input<string>;
    /**
     * The instance count for the CosmosDB SQL Dedicated Gateway. Possible value is between `1` and `5`.
     */
    instanceCount?: pulumi.Input<number>;
    /**
     * The instance size for the CosmosDB SQL Dedicated Gateway. Changing this forces a new resource to be created. Possible values are `Cosmos.D4s`, `Cosmos.D8s` and `Cosmos.D16s`.
     */
    instanceSize?: pulumi.Input<string>;
}
/**
 * The set of arguments for constructing a SqlDedicatedGateway resource.
 */
export interface SqlDedicatedGatewayArgs {
    /**
     * The resource ID of the CosmosDB Account. Changing this forces a new resource to be created.
     */
    cosmosdbAccountId: pulumi.Input<string>;
    /**
     * The instance count for the CosmosDB SQL Dedicated Gateway. Possible value is between `1` and `5`.
     */
    instanceCount: pulumi.Input<number>;
    /**
     * The instance size for the CosmosDB SQL Dedicated Gateway. Changing this forces a new resource to be created. Possible values are `Cosmos.D4s`, `Cosmos.D8s` and `Cosmos.D16s`.
     */
    instanceSize: pulumi.Input<string>;
}
