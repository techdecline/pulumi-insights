import * as pulumi from "@pulumi/pulumi";
/**
 * Manages a MongoDB Cluster using vCore Architecture.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as azure from "@pulumi/azure";
 *
 * const example = new azure.core.ResourceGroup("example", {
 *     name: "example-rg",
 *     location: "East US",
 * });
 * const exampleMongoCluster = new azure.cosmosdb.MongoCluster("example", {
 *     name: "example-mc",
 *     resourceGroupName: example.name,
 *     location: example.location,
 *     administratorUsername: "adminTerraform",
 *     administratorPassword: "QAZwsx123",
 *     shardCount: 1,
 *     computeTier: "Free",
 *     highAvailabilityMode: "Disabled",
 *     storageSizeInGb: 32,
 * });
 * ```
 *
 * ### Preview Feature GeoReplicas)
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as azure from "@pulumi/azure";
 *
 * const example = new azure.core.ResourceGroup("example", {
 *     name: "example-rg",
 *     location: "East US",
 * });
 * const exampleMongoCluster = new azure.cosmosdb.MongoCluster("example", {
 *     name: "example-mc",
 *     resourceGroupName: example.name,
 *     location: example.location,
 *     administratorUsername: "adminTerraform",
 *     administratorPassword: "QAZwsx123",
 *     shardCount: 1,
 *     computeTier: "M30",
 *     highAvailabilityMode: "ZoneRedundantPreferred",
 *     storageSizeInGb: 64,
 *     previewFeatures: ["GeoReplicas"],
 * });
 * const exampleGeoReplica = new azure.cosmosdb.MongoCluster("example_geo_replica", {
 *     name: "example-mc-geo",
 *     resourceGroupName: example.name,
 *     location: "Central US",
 *     sourceServerId: exampleMongoCluster.id,
 *     sourceLocation: exampleMongoCluster.location,
 *     createMode: "GeoReplica",
 * });
 * ```
 *
 * ## Import
 *
 * MongoDB Clusters can be imported using the `resource id`, e.g.
 *
 * ```sh
 * $ pulumi import azure:cosmosdb/mongoCluster:MongoCluster example /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/group1/providers/Microsoft.DocumentDB/mongoClusters/myMongoCluster
 * ```
 */
export declare class MongoCluster extends pulumi.CustomResource {
    /**
     * Get an existing MongoCluster resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    static get(name: string, id: pulumi.Input<pulumi.ID>, state?: MongoClusterState, opts?: pulumi.CustomResourceOptions): MongoCluster;
    /**
     * Returns true if the given object is an instance of MongoCluster.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    static isInstance(obj: any): obj is MongoCluster;
    /**
     * The Password associated with the `administratorUsername` for the MongoDB Cluster.
     */
    readonly administratorPassword: pulumi.Output<string | undefined>;
    /**
     * The administrator username of the MongoDB Cluster. Changing this forces a new resource to be created.
     */
    readonly administratorUsername: pulumi.Output<string | undefined>;
    /**
     * The compute tier to assign to the MongoDB Cluster. Possible values are `Free`, `M25`, `M30`, `M40`, `M50`, `M60` and `M80`.
     */
    readonly computeTier: pulumi.Output<string | undefined>;
    /**
     * The creation mode for the MongoDB Cluster. Possibles values are `Default` and `GeoReplica`. Defaults to `Default`. Changing this forces a new resource to be created.
     *
     * > **Note** The creation mode `GeoReplica` is currently in preview. It is only available when `previewFeatures` is set.
     */
    readonly createMode: pulumi.Output<string | undefined>;
    /**
     * The high availability mode for the MongoDB Cluster. Possibles values are `Disabled` and `ZoneRedundantPreferred`.
     */
    readonly highAvailabilityMode: pulumi.Output<string | undefined>;
    /**
     * The supported Azure location where the MongoDB Cluster exists. Changing this forces a new resource to be created.
     */
    readonly location: pulumi.Output<string>;
    /**
     * The name which should be used for the MongoDB Cluster. Changing this forces a new resource to be created.
     */
    readonly name: pulumi.Output<string>;
    /**
     * The preview features that can be enabled on the MongoDB Cluster. Changing this forces a new resource to be created.
     */
    readonly previewFeatures: pulumi.Output<string[] | undefined>;
    /**
     * The Public Network Access setting for the MongoDB Cluster. Possibles values are `Disabled` and `Enabled`. Defaults to `Enabled`.
     */
    readonly publicNetworkAccess: pulumi.Output<string | undefined>;
    /**
     * The name of the resource group in which to create the MongoDB Cluster. Changing this forces a new resource to be created.
     */
    readonly resourceGroupName: pulumi.Output<string>;
    /**
     * The Number of shards to provision on the MongoDB Cluster. Changing this forces a new resource to be created.
     */
    readonly shardCount: pulumi.Output<number | undefined>;
    /**
     * The location of the source MongoDB Cluster. Changing this forces a new resource to be created.
     */
    readonly sourceLocation: pulumi.Output<string | undefined>;
    /**
     * The ID of the replication source MongoDB Cluster. Changing this forces a new resource to be created.
     */
    readonly sourceServerId: pulumi.Output<string | undefined>;
    /**
     * The size of the data disk space for the MongoDB Cluster.
     */
    readonly storageSizeInGb: pulumi.Output<number | undefined>;
    /**
     * A mapping of tags to assign to the MongoDB Cluster.
     */
    readonly tags: pulumi.Output<{
        [key: string]: string;
    } | undefined>;
    /**
     * The version for the MongoDB Cluster. Possibles values are `5.0`, `6.0` and `7.0`.
     */
    readonly version: pulumi.Output<string | undefined>;
    /**
     * Create a MongoCluster resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: MongoClusterArgs, opts?: pulumi.CustomResourceOptions);
}
/**
 * Input properties used for looking up and filtering MongoCluster resources.
 */
export interface MongoClusterState {
    /**
     * The Password associated with the `administratorUsername` for the MongoDB Cluster.
     */
    administratorPassword?: pulumi.Input<string>;
    /**
     * The administrator username of the MongoDB Cluster. Changing this forces a new resource to be created.
     */
    administratorUsername?: pulumi.Input<string>;
    /**
     * The compute tier to assign to the MongoDB Cluster. Possible values are `Free`, `M25`, `M30`, `M40`, `M50`, `M60` and `M80`.
     */
    computeTier?: pulumi.Input<string>;
    /**
     * The creation mode for the MongoDB Cluster. Possibles values are `Default` and `GeoReplica`. Defaults to `Default`. Changing this forces a new resource to be created.
     *
     * > **Note** The creation mode `GeoReplica` is currently in preview. It is only available when `previewFeatures` is set.
     */
    createMode?: pulumi.Input<string>;
    /**
     * The high availability mode for the MongoDB Cluster. Possibles values are `Disabled` and `ZoneRedundantPreferred`.
     */
    highAvailabilityMode?: pulumi.Input<string>;
    /**
     * The supported Azure location where the MongoDB Cluster exists. Changing this forces a new resource to be created.
     */
    location?: pulumi.Input<string>;
    /**
     * The name which should be used for the MongoDB Cluster. Changing this forces a new resource to be created.
     */
    name?: pulumi.Input<string>;
    /**
     * The preview features that can be enabled on the MongoDB Cluster. Changing this forces a new resource to be created.
     */
    previewFeatures?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The Public Network Access setting for the MongoDB Cluster. Possibles values are `Disabled` and `Enabled`. Defaults to `Enabled`.
     */
    publicNetworkAccess?: pulumi.Input<string>;
    /**
     * The name of the resource group in which to create the MongoDB Cluster. Changing this forces a new resource to be created.
     */
    resourceGroupName?: pulumi.Input<string>;
    /**
     * The Number of shards to provision on the MongoDB Cluster. Changing this forces a new resource to be created.
     */
    shardCount?: pulumi.Input<number>;
    /**
     * The location of the source MongoDB Cluster. Changing this forces a new resource to be created.
     */
    sourceLocation?: pulumi.Input<string>;
    /**
     * The ID of the replication source MongoDB Cluster. Changing this forces a new resource to be created.
     */
    sourceServerId?: pulumi.Input<string>;
    /**
     * The size of the data disk space for the MongoDB Cluster.
     */
    storageSizeInGb?: pulumi.Input<number>;
    /**
     * A mapping of tags to assign to the MongoDB Cluster.
     */
    tags?: pulumi.Input<{
        [key: string]: pulumi.Input<string>;
    }>;
    /**
     * The version for the MongoDB Cluster. Possibles values are `5.0`, `6.0` and `7.0`.
     */
    version?: pulumi.Input<string>;
}
/**
 * The set of arguments for constructing a MongoCluster resource.
 */
export interface MongoClusterArgs {
    /**
     * The Password associated with the `administratorUsername` for the MongoDB Cluster.
     */
    administratorPassword?: pulumi.Input<string>;
    /**
     * The administrator username of the MongoDB Cluster. Changing this forces a new resource to be created.
     */
    administratorUsername?: pulumi.Input<string>;
    /**
     * The compute tier to assign to the MongoDB Cluster. Possible values are `Free`, `M25`, `M30`, `M40`, `M50`, `M60` and `M80`.
     */
    computeTier?: pulumi.Input<string>;
    /**
     * The creation mode for the MongoDB Cluster. Possibles values are `Default` and `GeoReplica`. Defaults to `Default`. Changing this forces a new resource to be created.
     *
     * > **Note** The creation mode `GeoReplica` is currently in preview. It is only available when `previewFeatures` is set.
     */
    createMode?: pulumi.Input<string>;
    /**
     * The high availability mode for the MongoDB Cluster. Possibles values are `Disabled` and `ZoneRedundantPreferred`.
     */
    highAvailabilityMode?: pulumi.Input<string>;
    /**
     * The supported Azure location where the MongoDB Cluster exists. Changing this forces a new resource to be created.
     */
    location?: pulumi.Input<string>;
    /**
     * The name which should be used for the MongoDB Cluster. Changing this forces a new resource to be created.
     */
    name?: pulumi.Input<string>;
    /**
     * The preview features that can be enabled on the MongoDB Cluster. Changing this forces a new resource to be created.
     */
    previewFeatures?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The Public Network Access setting for the MongoDB Cluster. Possibles values are `Disabled` and `Enabled`. Defaults to `Enabled`.
     */
    publicNetworkAccess?: pulumi.Input<string>;
    /**
     * The name of the resource group in which to create the MongoDB Cluster. Changing this forces a new resource to be created.
     */
    resourceGroupName: pulumi.Input<string>;
    /**
     * The Number of shards to provision on the MongoDB Cluster. Changing this forces a new resource to be created.
     */
    shardCount?: pulumi.Input<number>;
    /**
     * The location of the source MongoDB Cluster. Changing this forces a new resource to be created.
     */
    sourceLocation?: pulumi.Input<string>;
    /**
     * The ID of the replication source MongoDB Cluster. Changing this forces a new resource to be created.
     */
    sourceServerId?: pulumi.Input<string>;
    /**
     * The size of the data disk space for the MongoDB Cluster.
     */
    storageSizeInGb?: pulumi.Input<number>;
    /**
     * A mapping of tags to assign to the MongoDB Cluster.
     */
    tags?: pulumi.Input<{
        [key: string]: pulumi.Input<string>;
    }>;
    /**
     * The version for the MongoDB Cluster. Possibles values are `5.0`, `6.0` and `7.0`.
     */
    version?: pulumi.Input<string>;
}
