import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
/**
 * Manages a fully managed Azure Red Hat OpenShift Cluster (also known as ARO).
 *
 * > **Note:** All arguments including the client secret will be stored in the raw state as plain-text. [Read more about sensitive data in state](https://www.terraform.io/docs/state/sensitive-data.html).
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as azure from "@pulumi/azure";
 * import * as azuread from "@pulumi/azuread";
 *
 * const example = azure.core.getClientConfig({});
 * const exampleGetClientConfig = azuread.getClientConfig({});
 * const exampleApplication = new azuread.Application("example", {displayName: "example-aro"});
 * const exampleServicePrincipal = new azuread.ServicePrincipal("example", {clientId: exampleApplication.clientId});
 * const exampleServicePrincipalPassword = new azuread.ServicePrincipalPassword("example", {servicePrincipalId: exampleServicePrincipal.objectId});
 * const redhatopenshift = azuread.getServicePrincipal({
 *     clientId: "f1dd0a37-89c6-4e07-bcd1-ffd3d43d8875",
 * });
 * const exampleResourceGroup = new azure.core.ResourceGroup("example", {
 *     name: "example-resources",
 *     location: "West US",
 * });
 * const exampleVirtualNetwork = new azure.network.VirtualNetwork("example", {
 *     name: "example-vnet",
 *     addressSpaces: ["10.0.0.0/22"],
 *     location: exampleResourceGroup.location,
 *     resourceGroupName: exampleResourceGroup.name,
 * });
 * const roleNetwork1 = new azure.authorization.Assignment("role_network1", {
 *     scope: exampleVirtualNetwork.id,
 *     roleDefinitionName: "Network Contributor",
 *     principalId: exampleServicePrincipal.objectId,
 * });
 * const roleNetwork2 = new azure.authorization.Assignment("role_network2", {
 *     scope: exampleVirtualNetwork.id,
 *     roleDefinitionName: "Network Contributor",
 *     principalId: redhatopenshift.then(redhatopenshift => redhatopenshift.objectId),
 * });
 * const mainSubnet = new azure.network.Subnet("main_subnet", {
 *     name: "main-subnet",
 *     resourceGroupName: exampleResourceGroup.name,
 *     virtualNetworkName: exampleVirtualNetwork.name,
 *     addressPrefixes: ["10.0.0.0/23"],
 *     serviceEndpoints: [
 *         "Microsoft.Storage",
 *         "Microsoft.ContainerRegistry",
 *     ],
 * });
 * const workerSubnet = new azure.network.Subnet("worker_subnet", {
 *     name: "worker-subnet",
 *     resourceGroupName: exampleResourceGroup.name,
 *     virtualNetworkName: exampleVirtualNetwork.name,
 *     addressPrefixes: ["10.0.2.0/23"],
 *     serviceEndpoints: [
 *         "Microsoft.Storage",
 *         "Microsoft.ContainerRegistry",
 *     ],
 * });
 * const exampleCluster = new azure.redhatopenshift.Cluster("example", {
 *     name: "examplearo",
 *     location: exampleResourceGroup.location,
 *     resourceGroupName: exampleResourceGroup.name,
 *     clusterProfile: {
 *         domain: "aro-example.com",
 *         version: "4.13.23",
 *     },
 *     networkProfile: {
 *         podCidr: "10.128.0.0/14",
 *         serviceCidr: "172.30.0.0/16",
 *     },
 *     mainProfile: {
 *         vmSize: "Standard_D8s_v3",
 *         subnetId: mainSubnet.id,
 *     },
 *     apiServerProfile: {
 *         visibility: "Public",
 *     },
 *     ingressProfile: {
 *         visibility: "Public",
 *     },
 *     workerProfile: {
 *         vmSize: "Standard_D4s_v3",
 *         diskSizeGb: 128,
 *         nodeCount: 3,
 *         subnetId: workerSubnet.id,
 *     },
 *     servicePrincipal: {
 *         clientId: exampleApplication.clientId,
 *         clientSecret: exampleServicePrincipalPassword.value,
 *     },
 * }, {
 *     dependsOn: [
 *         roleNetwork1,
 *         roleNetwork2,
 *     ],
 * });
 * export const consoleUrl = exampleCluster.consoleUrl;
 * ```
 *
 * ## Import
 *
 * Red Hat OpenShift Clusters can be imported using the `resource id`, e.g.
 *
 * ```sh
 * $ pulumi import azure:redhatopenshift/cluster:Cluster cluster1 /subscriptions/00000000-0000-0000-0000-000000000000/resourcegroups/group1/providers/Microsoft.RedHatOpenShift/openShiftClusters/cluster1
 * ```
 */
export declare class Cluster extends pulumi.CustomResource {
    /**
     * Get an existing Cluster resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    static get(name: string, id: pulumi.Input<pulumi.ID>, state?: ClusterState, opts?: pulumi.CustomResourceOptions): Cluster;
    /**
     * Returns true if the given object is an instance of Cluster.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    static isInstance(obj: any): obj is Cluster;
    /**
     * An `apiServerProfile` block as defined below. Changing this forces a new resource to be created.
     */
    readonly apiServerProfile: pulumi.Output<outputs.redhatopenshift.ClusterApiServerProfile>;
    /**
     * A `clusterProfile` block as defined below. Changing this forces a new resource to be created.
     */
    readonly clusterProfile: pulumi.Output<outputs.redhatopenshift.ClusterClusterProfile>;
    /**
     * The Red Hat OpenShift cluster console URL.
     */
    readonly consoleUrl: pulumi.Output<string>;
    /**
     * An `ingressProfile` block as defined below. Changing this forces a new resource to be created.
     */
    readonly ingressProfile: pulumi.Output<outputs.redhatopenshift.ClusterIngressProfile>;
    /**
     * The location where the Azure Red Hat OpenShift Cluster should be created. Changing this forces a new resource to be created.
     */
    readonly location: pulumi.Output<string>;
    /**
     * A `mainProfile` block as defined below. Changing this forces a new resource to be created.
     */
    readonly mainProfile: pulumi.Output<outputs.redhatopenshift.ClusterMainProfile>;
    /**
     * The name of the Azure Red Hat OpenShift Cluster to create. Changing this forces a new resource to be created.
     */
    readonly name: pulumi.Output<string>;
    /**
     * A `networkProfile` block as defined below. Changing this forces a new resource to be created.
     */
    readonly networkProfile: pulumi.Output<outputs.redhatopenshift.ClusterNetworkProfile>;
    /**
     * Specifies the Resource Group where the Azure Red Hat OpenShift Cluster should exist. Changing this forces a new resource to be created.
     */
    readonly resourceGroupName: pulumi.Output<string>;
    /**
     * A `servicePrincipal` block as defined below.
     */
    readonly servicePrincipal: pulumi.Output<outputs.redhatopenshift.ClusterServicePrincipal>;
    /**
     * A mapping of tags to assign to the resource.
     */
    readonly tags: pulumi.Output<{
        [key: string]: string;
    } | undefined>;
    /**
     * A `workerProfile` block as defined below. Changing this forces a new resource to be created.
     */
    readonly workerProfile: pulumi.Output<outputs.redhatopenshift.ClusterWorkerProfile>;
    /**
     * Create a Cluster resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: ClusterArgs, opts?: pulumi.CustomResourceOptions);
}
/**
 * Input properties used for looking up and filtering Cluster resources.
 */
export interface ClusterState {
    /**
     * An `apiServerProfile` block as defined below. Changing this forces a new resource to be created.
     */
    apiServerProfile?: pulumi.Input<inputs.redhatopenshift.ClusterApiServerProfile>;
    /**
     * A `clusterProfile` block as defined below. Changing this forces a new resource to be created.
     */
    clusterProfile?: pulumi.Input<inputs.redhatopenshift.ClusterClusterProfile>;
    /**
     * The Red Hat OpenShift cluster console URL.
     */
    consoleUrl?: pulumi.Input<string>;
    /**
     * An `ingressProfile` block as defined below. Changing this forces a new resource to be created.
     */
    ingressProfile?: pulumi.Input<inputs.redhatopenshift.ClusterIngressProfile>;
    /**
     * The location where the Azure Red Hat OpenShift Cluster should be created. Changing this forces a new resource to be created.
     */
    location?: pulumi.Input<string>;
    /**
     * A `mainProfile` block as defined below. Changing this forces a new resource to be created.
     */
    mainProfile?: pulumi.Input<inputs.redhatopenshift.ClusterMainProfile>;
    /**
     * The name of the Azure Red Hat OpenShift Cluster to create. Changing this forces a new resource to be created.
     */
    name?: pulumi.Input<string>;
    /**
     * A `networkProfile` block as defined below. Changing this forces a new resource to be created.
     */
    networkProfile?: pulumi.Input<inputs.redhatopenshift.ClusterNetworkProfile>;
    /**
     * Specifies the Resource Group where the Azure Red Hat OpenShift Cluster should exist. Changing this forces a new resource to be created.
     */
    resourceGroupName?: pulumi.Input<string>;
    /**
     * A `servicePrincipal` block as defined below.
     */
    servicePrincipal?: pulumi.Input<inputs.redhatopenshift.ClusterServicePrincipal>;
    /**
     * A mapping of tags to assign to the resource.
     */
    tags?: pulumi.Input<{
        [key: string]: pulumi.Input<string>;
    }>;
    /**
     * A `workerProfile` block as defined below. Changing this forces a new resource to be created.
     */
    workerProfile?: pulumi.Input<inputs.redhatopenshift.ClusterWorkerProfile>;
}
/**
 * The set of arguments for constructing a Cluster resource.
 */
export interface ClusterArgs {
    /**
     * An `apiServerProfile` block as defined below. Changing this forces a new resource to be created.
     */
    apiServerProfile: pulumi.Input<inputs.redhatopenshift.ClusterApiServerProfile>;
    /**
     * A `clusterProfile` block as defined below. Changing this forces a new resource to be created.
     */
    clusterProfile: pulumi.Input<inputs.redhatopenshift.ClusterClusterProfile>;
    /**
     * An `ingressProfile` block as defined below. Changing this forces a new resource to be created.
     */
    ingressProfile: pulumi.Input<inputs.redhatopenshift.ClusterIngressProfile>;
    /**
     * The location where the Azure Red Hat OpenShift Cluster should be created. Changing this forces a new resource to be created.
     */
    location?: pulumi.Input<string>;
    /**
     * A `mainProfile` block as defined below. Changing this forces a new resource to be created.
     */
    mainProfile: pulumi.Input<inputs.redhatopenshift.ClusterMainProfile>;
    /**
     * The name of the Azure Red Hat OpenShift Cluster to create. Changing this forces a new resource to be created.
     */
    name?: pulumi.Input<string>;
    /**
     * A `networkProfile` block as defined below. Changing this forces a new resource to be created.
     */
    networkProfile: pulumi.Input<inputs.redhatopenshift.ClusterNetworkProfile>;
    /**
     * Specifies the Resource Group where the Azure Red Hat OpenShift Cluster should exist. Changing this forces a new resource to be created.
     */
    resourceGroupName: pulumi.Input<string>;
    /**
     * A `servicePrincipal` block as defined below.
     */
    servicePrincipal: pulumi.Input<inputs.redhatopenshift.ClusterServicePrincipal>;
    /**
     * A mapping of tags to assign to the resource.
     */
    tags?: pulumi.Input<{
        [key: string]: pulumi.Input<string>;
    }>;
    /**
     * A `workerProfile` block as defined below. Changing this forces a new resource to be created.
     */
    workerProfile: pulumi.Input<inputs.redhatopenshift.ClusterWorkerProfile>;
}
