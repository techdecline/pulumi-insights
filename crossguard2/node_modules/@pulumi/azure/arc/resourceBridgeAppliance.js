"use strict";
// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***
Object.defineProperty(exports, "__esModule", { value: true });
exports.ResourceBridgeAppliance = void 0;
const pulumi = require("@pulumi/pulumi");
const utilities = require("../utilities");
/**
 * Manages an Arc Resource Bridge Appliance.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as azure from "@pulumi/azure";
 *
 * const example = new azure.core.ResourceGroup("example", {
 *     name: "example-resources",
 *     location: "West Europe",
 * });
 * const exampleResourceBridgeAppliance = new azure.arc.ResourceBridgeAppliance("example", {
 *     name: "example-appliance",
 *     location: example.location,
 *     resourceGroupName: example.name,
 *     distro: "AKSEdge",
 *     infrastructureProvider: "VMWare",
 *     identity: {
 *         type: "SystemAssigned",
 *     },
 *     tags: {
 *         hello: "world",
 *     },
 * });
 * ```
 *
 * ## Import
 *
 * Arc Resource Bridge Appliance can be imported using the `resource id`, e.g.
 *
 * ```sh
 * $ pulumi import azure:arc/resourceBridgeAppliance:ResourceBridgeAppliance example /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/group1/providers/Microsoft.ResourceConnector/appliances/appliancesExample
 * ```
 */
class ResourceBridgeAppliance extends pulumi.CustomResource {
    constructor(name, argsOrState, opts) {
        let resourceInputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState;
            resourceInputs["distro"] = state ? state.distro : undefined;
            resourceInputs["identity"] = state ? state.identity : undefined;
            resourceInputs["infrastructureProvider"] = state ? state.infrastructureProvider : undefined;
            resourceInputs["location"] = state ? state.location : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["publicKeyBase64"] = state ? state.publicKeyBase64 : undefined;
            resourceInputs["resourceGroupName"] = state ? state.resourceGroupName : undefined;
            resourceInputs["tags"] = state ? state.tags : undefined;
        }
        else {
            const args = argsOrState;
            if ((!args || args.distro === undefined) && !opts.urn) {
                throw new Error("Missing required property 'distro'");
            }
            if ((!args || args.identity === undefined) && !opts.urn) {
                throw new Error("Missing required property 'identity'");
            }
            if ((!args || args.infrastructureProvider === undefined) && !opts.urn) {
                throw new Error("Missing required property 'infrastructureProvider'");
            }
            if ((!args || args.resourceGroupName === undefined) && !opts.urn) {
                throw new Error("Missing required property 'resourceGroupName'");
            }
            resourceInputs["distro"] = args ? args.distro : undefined;
            resourceInputs["identity"] = args ? args.identity : undefined;
            resourceInputs["infrastructureProvider"] = args ? args.infrastructureProvider : undefined;
            resourceInputs["location"] = args ? args.location : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["publicKeyBase64"] = args ? args.publicKeyBase64 : undefined;
            resourceInputs["resourceGroupName"] = args ? args.resourceGroupName : undefined;
            resourceInputs["tags"] = args ? args.tags : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(ResourceBridgeAppliance.__pulumiType, name, resourceInputs, opts);
    }
    /**
     * Get an existing ResourceBridgeAppliance resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    static get(name, id, state, opts) {
        return new ResourceBridgeAppliance(name, state, Object.assign(Object.assign({}, opts), { id: id }));
    }
    /**
     * Returns true if the given object is an instance of ResourceBridgeAppliance.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    static isInstance(obj) {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === ResourceBridgeAppliance.__pulumiType;
    }
}
exports.ResourceBridgeAppliance = ResourceBridgeAppliance;
/** @internal */
ResourceBridgeAppliance.__pulumiType = 'azure:arc/resourceBridgeAppliance:ResourceBridgeAppliance';
//# sourceMappingURL=resourceBridgeAppliance.js.map