"use strict";
// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***
Object.defineProperty(exports, "__esModule", { value: true });
exports.JobSchedule = void 0;
const pulumi = require("@pulumi/pulumi");
const utilities = require("../utilities");
/**
 * Manages a Stream Analytics Job Schedule.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as azure from "@pulumi/azure";
 *
 * const example = new azure.core.ResourceGroup("example", {
 *     name: "example-resources",
 *     location: "West Europe",
 * });
 * const exampleAccount = new azure.storage.Account("example", {
 *     name: "example",
 *     resourceGroupName: example.name,
 *     location: example.location,
 *     accountTier: "Standard",
 *     accountReplicationType: "LRS",
 * });
 * const exampleContainer = new azure.storage.Container("example", {
 *     name: "example",
 *     storageAccountName: exampleAccount.name,
 *     containerAccessType: "private",
 * });
 * const exampleBlob = new azure.storage.Blob("example", {
 *     name: "example",
 *     storageAccountName: exampleAccount.name,
 *     storageContainerName: exampleContainer.name,
 *     type: "Block",
 *     source: new pulumi.asset.FileAsset("example.csv"),
 * });
 * const exampleJob = new azure.streamanalytics.Job("example", {
 *     name: "example-job",
 *     resourceGroupName: example.name,
 *     location: example.location,
 *     compatibilityLevel: "1.2",
 *     dataLocale: "en-GB",
 *     eventsLateArrivalMaxDelayInSeconds: 60,
 *     eventsOutOfOrderMaxDelayInSeconds: 50,
 *     eventsOutOfOrderPolicy: "Adjust",
 *     outputErrorPolicy: "Drop",
 *     streamingUnits: 3,
 *     tags: {
 *         environment: "Example",
 *     },
 *     transformationQuery: `    SELECT *
 *     INTO [exampleoutput]
 *     FROM [exampleinput]
 * `,
 * });
 * const exampleStreamInputBlob = new azure.streamanalytics.StreamInputBlob("example", {
 *     name: "exampleinput",
 *     streamAnalyticsJobName: exampleJob.name,
 *     resourceGroupName: exampleJob.resourceGroupName,
 *     storageAccountName: exampleAccount.name,
 *     storageAccountKey: exampleAccount.primaryAccessKey,
 *     storageContainerName: exampleContainer.name,
 *     pathPattern: "",
 *     dateFormat: "yyyy/MM/dd",
 *     timeFormat: "HH",
 *     serialization: {
 *         type: "Csv",
 *         encoding: "UTF8",
 *         fieldDelimiter: ",",
 *     },
 * });
 * const exampleOutputBlob = new azure.streamanalytics.OutputBlob("example", {
 *     name: "exampleoutput",
 *     streamAnalyticsJobName: exampleJob.name,
 *     resourceGroupName: exampleJob.resourceGroupName,
 *     storageAccountName: exampleAccount.name,
 *     storageAccountKey: exampleAccount.primaryAccessKey,
 *     storageContainerName: exampleContainer.name,
 *     pathPattern: "example-{date}-{time}",
 *     dateFormat: "yyyy-MM-dd",
 *     timeFormat: "HH",
 *     serialization: {
 *         type: "Avro",
 *     },
 * });
 * const exampleJobSchedule = new azure.streamanalytics.JobSchedule("example", {
 *     streamAnalyticsJobId: exampleJob.id,
 *     startMode: "CustomTime",
 *     startTime: "2022-09-21T00:00:00Z",
 * }, {
 *     dependsOn: [
 *         exampleJob,
 *         exampleStreamInputBlob,
 *         exampleOutputBlob,
 *     ],
 * });
 * ```
 *
 * ## Import
 *
 * Stream Analytics Job's can be imported using the `resource id`, e.g.
 *
 * ```sh
 * $ pulumi import azure:streamanalytics/jobSchedule:JobSchedule example /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/group1/providers/Microsoft.StreamAnalytics/streamingJobs/job1/schedule/default
 * ```
 */
class JobSchedule extends pulumi.CustomResource {
    constructor(name, argsOrState, opts) {
        let resourceInputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState;
            resourceInputs["lastOutputTime"] = state ? state.lastOutputTime : undefined;
            resourceInputs["startMode"] = state ? state.startMode : undefined;
            resourceInputs["startTime"] = state ? state.startTime : undefined;
            resourceInputs["streamAnalyticsJobId"] = state ? state.streamAnalyticsJobId : undefined;
        }
        else {
            const args = argsOrState;
            if ((!args || args.startMode === undefined) && !opts.urn) {
                throw new Error("Missing required property 'startMode'");
            }
            if ((!args || args.streamAnalyticsJobId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'streamAnalyticsJobId'");
            }
            resourceInputs["startMode"] = args ? args.startMode : undefined;
            resourceInputs["startTime"] = args ? args.startTime : undefined;
            resourceInputs["streamAnalyticsJobId"] = args ? args.streamAnalyticsJobId : undefined;
            resourceInputs["lastOutputTime"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(JobSchedule.__pulumiType, name, resourceInputs, opts);
    }
    /**
     * Get an existing JobSchedule resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    static get(name, id, state, opts) {
        return new JobSchedule(name, state, Object.assign(Object.assign({}, opts), { id: id }));
    }
    /**
     * Returns true if the given object is an instance of JobSchedule.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    static isInstance(obj) {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === JobSchedule.__pulumiType;
    }
}
exports.JobSchedule = JobSchedule;
/** @internal */
JobSchedule.__pulumiType = 'azure:streamanalytics/jobSchedule:JobSchedule';
//# sourceMappingURL=jobSchedule.js.map