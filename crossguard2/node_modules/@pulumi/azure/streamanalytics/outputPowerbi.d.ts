import * as pulumi from "@pulumi/pulumi";
/**
 * Manages a Stream Analytics Output powerBI.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as azure from "@pulumi/azure";
 *
 * const example = azure.core.getResourceGroup({
 *     name: "example-resources",
 * });
 * const exampleGetJob = example.then(example => azure.streamanalytics.getJob({
 *     name: "example-job",
 *     resourceGroupName: example.name,
 * }));
 * const exampleOutputPowerbi = new azure.streamanalytics.OutputPowerbi("example", {
 *     name: "output-to-powerbi",
 *     streamAnalyticsJobId: exampleGetJob.then(exampleGetJob => exampleGetJob.id),
 *     dataset: "example-dataset",
 *     table: "example-table",
 *     groupId: "00000000-0000-0000-0000-000000000000",
 *     groupName: "some-group-name",
 * });
 * ```
 *
 * ## Import
 *
 * Stream Analytics Output to Power BI can be imported using the `resource id`, e.g.
 *
 * ```sh
 * $ pulumi import azure:streamanalytics/outputPowerbi:OutputPowerbi example /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/group1/providers/Microsoft.StreamAnalytics/streamingJobs/job1/outputs/output1
 * ```
 */
export declare class OutputPowerbi extends pulumi.CustomResource {
    /**
     * Get an existing OutputPowerbi resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    static get(name: string, id: pulumi.Input<pulumi.ID>, state?: OutputPowerbiState, opts?: pulumi.CustomResourceOptions): OutputPowerbi;
    /**
     * Returns true if the given object is an instance of OutputPowerbi.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    static isInstance(obj: any): obj is OutputPowerbi;
    /**
     * The name of the Power BI dataset.
     */
    readonly dataset: pulumi.Output<string>;
    /**
     * The ID of the Power BI group, this must be a valid UUID.
     */
    readonly groupId: pulumi.Output<string>;
    /**
     * The name of the Power BI group. Use this property to help remember which specific Power BI group id was used.
     */
    readonly groupName: pulumi.Output<string>;
    /**
     * The name of the Stream Output. Changing this forces a new resource to be created.
     */
    readonly name: pulumi.Output<string>;
    /**
     * The ID of the Stream Analytics Job. Changing this forces a new resource to be created.
     */
    readonly streamAnalyticsJobId: pulumi.Output<string>;
    /**
     * The name of the Power BI table under the specified dataset.
     */
    readonly table: pulumi.Output<string>;
    /**
     * The user display name of the user that was used to obtain the refresh token.
     */
    readonly tokenUserDisplayName: pulumi.Output<string | undefined>;
    /**
     * The user principal name (UPN) of the user that was used to obtain the refresh token.
     */
    readonly tokenUserPrincipalName: pulumi.Output<string | undefined>;
    /**
     * Create a OutputPowerbi resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: OutputPowerbiArgs, opts?: pulumi.CustomResourceOptions);
}
/**
 * Input properties used for looking up and filtering OutputPowerbi resources.
 */
export interface OutputPowerbiState {
    /**
     * The name of the Power BI dataset.
     */
    dataset?: pulumi.Input<string>;
    /**
     * The ID of the Power BI group, this must be a valid UUID.
     */
    groupId?: pulumi.Input<string>;
    /**
     * The name of the Power BI group. Use this property to help remember which specific Power BI group id was used.
     */
    groupName?: pulumi.Input<string>;
    /**
     * The name of the Stream Output. Changing this forces a new resource to be created.
     */
    name?: pulumi.Input<string>;
    /**
     * The ID of the Stream Analytics Job. Changing this forces a new resource to be created.
     */
    streamAnalyticsJobId?: pulumi.Input<string>;
    /**
     * The name of the Power BI table under the specified dataset.
     */
    table?: pulumi.Input<string>;
    /**
     * The user display name of the user that was used to obtain the refresh token.
     */
    tokenUserDisplayName?: pulumi.Input<string>;
    /**
     * The user principal name (UPN) of the user that was used to obtain the refresh token.
     */
    tokenUserPrincipalName?: pulumi.Input<string>;
}
/**
 * The set of arguments for constructing a OutputPowerbi resource.
 */
export interface OutputPowerbiArgs {
    /**
     * The name of the Power BI dataset.
     */
    dataset: pulumi.Input<string>;
    /**
     * The ID of the Power BI group, this must be a valid UUID.
     */
    groupId: pulumi.Input<string>;
    /**
     * The name of the Power BI group. Use this property to help remember which specific Power BI group id was used.
     */
    groupName: pulumi.Input<string>;
    /**
     * The name of the Stream Output. Changing this forces a new resource to be created.
     */
    name?: pulumi.Input<string>;
    /**
     * The ID of the Stream Analytics Job. Changing this forces a new resource to be created.
     */
    streamAnalyticsJobId: pulumi.Input<string>;
    /**
     * The name of the Power BI table under the specified dataset.
     */
    table: pulumi.Input<string>;
    /**
     * The user display name of the user that was used to obtain the refresh token.
     */
    tokenUserDisplayName?: pulumi.Input<string>;
    /**
     * The user principal name (UPN) of the user that was used to obtain the refresh token.
     */
    tokenUserPrincipalName?: pulumi.Input<string>;
}
