"use strict";
// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***
Object.defineProperty(exports, "__esModule", { value: true });
exports.OutputMssql = void 0;
const pulumi = require("@pulumi/pulumi");
const utilities = require("../utilities");
/**
 * Manages a Stream Analytics Output to Microsoft SQL Server Database.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as azure from "@pulumi/azure";
 * import * as azurerm from "@pulumi/azurerm";
 *
 * const exampleResourceGroup = new azure.core.ResourceGroup("example", {
 *     name: "rg-example",
 *     location: "West Europe",
 * });
 * const example = azure.streamanalytics.getJobOutput({
 *     name: "example-job",
 *     resourceGroupName: exampleResourceGroup.name,
 * });
 * const exampleSqlServer = new azurerm.index.SqlServer("example", {
 *     name: "example-server",
 *     resourceGroupName: exampleResourceGroup.name,
 *     location: exampleResourceGroup.location,
 *     version: "12.0",
 *     administratorLogin: "dbadmin",
 *     administratorLoginPassword: "example-password",
 * });
 * const exampleSqlDatabase = new azurerm.index.SqlDatabase("example", {
 *     name: "exampledb",
 *     resourceGroupName: exampleResourceGroup.name,
 *     location: exampleResourceGroup.location,
 *     serverName: exampleSqlServer.name,
 *     requestedServiceObjectiveName: "S0",
 *     collation: "SQL_LATIN1_GENERAL_CP1_CI_AS",
 *     maxSizeBytes: "268435456000",
 *     createMode: "Default",
 * });
 * const exampleOutputMssql = new azure.streamanalytics.OutputMssql("example", {
 *     name: "example-output-sql",
 *     streamAnalyticsJobName: example.apply(example => example.name),
 *     resourceGroupName: example.apply(example => example.resourceGroupName),
 *     server: exampleSqlServer.fullyQualifiedDomainName,
 *     user: exampleSqlServer.administratorLogin,
 *     password: exampleSqlServer.administratorLoginPassword,
 *     database: exampleSqlDatabase.name,
 *     table: "ExampleTable",
 * });
 * ```
 *
 * ## Import
 *
 * Stream Analytics Outputs to Microsoft SQL Server Database can be imported using the `resource id`, e.g.
 *
 * ```sh
 * $ pulumi import azure:streamanalytics/outputMssql:OutputMssql example /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/group1/providers/Microsoft.StreamAnalytics/streamingJobs/job1/outputs/output1
 * ```
 */
class OutputMssql extends pulumi.CustomResource {
    constructor(name, argsOrState, opts) {
        let resourceInputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState;
            resourceInputs["authenticationMode"] = state ? state.authenticationMode : undefined;
            resourceInputs["database"] = state ? state.database : undefined;
            resourceInputs["maxBatchCount"] = state ? state.maxBatchCount : undefined;
            resourceInputs["maxWriterCount"] = state ? state.maxWriterCount : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["password"] = state ? state.password : undefined;
            resourceInputs["resourceGroupName"] = state ? state.resourceGroupName : undefined;
            resourceInputs["server"] = state ? state.server : undefined;
            resourceInputs["streamAnalyticsJobName"] = state ? state.streamAnalyticsJobName : undefined;
            resourceInputs["table"] = state ? state.table : undefined;
            resourceInputs["user"] = state ? state.user : undefined;
        }
        else {
            const args = argsOrState;
            if ((!args || args.database === undefined) && !opts.urn) {
                throw new Error("Missing required property 'database'");
            }
            if ((!args || args.resourceGroupName === undefined) && !opts.urn) {
                throw new Error("Missing required property 'resourceGroupName'");
            }
            if ((!args || args.server === undefined) && !opts.urn) {
                throw new Error("Missing required property 'server'");
            }
            if ((!args || args.streamAnalyticsJobName === undefined) && !opts.urn) {
                throw new Error("Missing required property 'streamAnalyticsJobName'");
            }
            if ((!args || args.table === undefined) && !opts.urn) {
                throw new Error("Missing required property 'table'");
            }
            resourceInputs["authenticationMode"] = args ? args.authenticationMode : undefined;
            resourceInputs["database"] = args ? args.database : undefined;
            resourceInputs["maxBatchCount"] = args ? args.maxBatchCount : undefined;
            resourceInputs["maxWriterCount"] = args ? args.maxWriterCount : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["password"] = (args === null || args === void 0 ? void 0 : args.password) ? pulumi.secret(args.password) : undefined;
            resourceInputs["resourceGroupName"] = args ? args.resourceGroupName : undefined;
            resourceInputs["server"] = args ? args.server : undefined;
            resourceInputs["streamAnalyticsJobName"] = args ? args.streamAnalyticsJobName : undefined;
            resourceInputs["table"] = args ? args.table : undefined;
            resourceInputs["user"] = args ? args.user : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        const secretOpts = { additionalSecretOutputs: ["password"] };
        opts = pulumi.mergeOptions(opts, secretOpts);
        super(OutputMssql.__pulumiType, name, resourceInputs, opts);
    }
    /**
     * Get an existing OutputMssql resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    static get(name, id, state, opts) {
        return new OutputMssql(name, state, Object.assign(Object.assign({}, opts), { id: id }));
    }
    /**
     * Returns true if the given object is an instance of OutputMssql.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    static isInstance(obj) {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === OutputMssql.__pulumiType;
    }
}
exports.OutputMssql = OutputMssql;
/** @internal */
OutputMssql.__pulumiType = 'azure:streamanalytics/outputMssql:OutputMssql';
//# sourceMappingURL=outputMssql.js.map