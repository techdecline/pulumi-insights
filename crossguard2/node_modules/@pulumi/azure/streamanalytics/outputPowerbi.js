"use strict";
// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***
Object.defineProperty(exports, "__esModule", { value: true });
exports.OutputPowerbi = void 0;
const pulumi = require("@pulumi/pulumi");
const utilities = require("../utilities");
/**
 * Manages a Stream Analytics Output powerBI.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as azure from "@pulumi/azure";
 *
 * const example = azure.core.getResourceGroup({
 *     name: "example-resources",
 * });
 * const exampleGetJob = example.then(example => azure.streamanalytics.getJob({
 *     name: "example-job",
 *     resourceGroupName: example.name,
 * }));
 * const exampleOutputPowerbi = new azure.streamanalytics.OutputPowerbi("example", {
 *     name: "output-to-powerbi",
 *     streamAnalyticsJobId: exampleGetJob.then(exampleGetJob => exampleGetJob.id),
 *     dataset: "example-dataset",
 *     table: "example-table",
 *     groupId: "00000000-0000-0000-0000-000000000000",
 *     groupName: "some-group-name",
 * });
 * ```
 *
 * ## Import
 *
 * Stream Analytics Output to Power BI can be imported using the `resource id`, e.g.
 *
 * ```sh
 * $ pulumi import azure:streamanalytics/outputPowerbi:OutputPowerbi example /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/group1/providers/Microsoft.StreamAnalytics/streamingJobs/job1/outputs/output1
 * ```
 */
class OutputPowerbi extends pulumi.CustomResource {
    constructor(name, argsOrState, opts) {
        let resourceInputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState;
            resourceInputs["dataset"] = state ? state.dataset : undefined;
            resourceInputs["groupId"] = state ? state.groupId : undefined;
            resourceInputs["groupName"] = state ? state.groupName : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["streamAnalyticsJobId"] = state ? state.streamAnalyticsJobId : undefined;
            resourceInputs["table"] = state ? state.table : undefined;
            resourceInputs["tokenUserDisplayName"] = state ? state.tokenUserDisplayName : undefined;
            resourceInputs["tokenUserPrincipalName"] = state ? state.tokenUserPrincipalName : undefined;
        }
        else {
            const args = argsOrState;
            if ((!args || args.dataset === undefined) && !opts.urn) {
                throw new Error("Missing required property 'dataset'");
            }
            if ((!args || args.groupId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'groupId'");
            }
            if ((!args || args.groupName === undefined) && !opts.urn) {
                throw new Error("Missing required property 'groupName'");
            }
            if ((!args || args.streamAnalyticsJobId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'streamAnalyticsJobId'");
            }
            if ((!args || args.table === undefined) && !opts.urn) {
                throw new Error("Missing required property 'table'");
            }
            resourceInputs["dataset"] = args ? args.dataset : undefined;
            resourceInputs["groupId"] = args ? args.groupId : undefined;
            resourceInputs["groupName"] = args ? args.groupName : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["streamAnalyticsJobId"] = args ? args.streamAnalyticsJobId : undefined;
            resourceInputs["table"] = args ? args.table : undefined;
            resourceInputs["tokenUserDisplayName"] = args ? args.tokenUserDisplayName : undefined;
            resourceInputs["tokenUserPrincipalName"] = args ? args.tokenUserPrincipalName : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(OutputPowerbi.__pulumiType, name, resourceInputs, opts);
    }
    /**
     * Get an existing OutputPowerbi resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    static get(name, id, state, opts) {
        return new OutputPowerbi(name, state, Object.assign(Object.assign({}, opts), { id: id }));
    }
    /**
     * Returns true if the given object is an instance of OutputPowerbi.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    static isInstance(obj) {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === OutputPowerbi.__pulumiType;
    }
}
exports.OutputPowerbi = OutputPowerbi;
/** @internal */
OutputPowerbi.__pulumiType = 'azure:streamanalytics/outputPowerbi:OutputPowerbi';
//# sourceMappingURL=outputPowerbi.js.map