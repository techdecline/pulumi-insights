"use strict";
// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***
Object.defineProperty(exports, "__esModule", { value: true });
exports.Rule = exports.Probe = exports.OutboundRule = exports.NatRule = exports.NatPool = exports.LoadBalancer = exports.getLBRuleOutput = exports.getLBRule = exports.getLBOutboundRuleOutput = exports.getLBOutboundRule = exports.getLBOutput = exports.getLB = exports.getBackendAddressPoolOutput = exports.getBackendAddressPool = exports.BackendAddressPoolAddress = exports.BackendAddressPool = void 0;
const pulumi = require("@pulumi/pulumi");
const utilities = require("../utilities");
exports.BackendAddressPool = null;
utilities.lazyLoad(exports, ["BackendAddressPool"], () => require("./backendAddressPool"));
exports.BackendAddressPoolAddress = null;
utilities.lazyLoad(exports, ["BackendAddressPoolAddress"], () => require("./backendAddressPoolAddress"));
exports.getBackendAddressPool = null;
exports.getBackendAddressPoolOutput = null;
utilities.lazyLoad(exports, ["getBackendAddressPool", "getBackendAddressPoolOutput"], () => require("./getBackendAddressPool"));
exports.getLB = null;
exports.getLBOutput = null;
utilities.lazyLoad(exports, ["getLB", "getLBOutput"], () => require("./getLB"));
exports.getLBOutboundRule = null;
exports.getLBOutboundRuleOutput = null;
utilities.lazyLoad(exports, ["getLBOutboundRule", "getLBOutboundRuleOutput"], () => require("./getLBOutboundRule"));
exports.getLBRule = null;
exports.getLBRuleOutput = null;
utilities.lazyLoad(exports, ["getLBRule", "getLBRuleOutput"], () => require("./getLBRule"));
exports.LoadBalancer = null;
utilities.lazyLoad(exports, ["LoadBalancer"], () => require("./loadBalancer"));
exports.NatPool = null;
utilities.lazyLoad(exports, ["NatPool"], () => require("./natPool"));
exports.NatRule = null;
utilities.lazyLoad(exports, ["NatRule"], () => require("./natRule"));
exports.OutboundRule = null;
utilities.lazyLoad(exports, ["OutboundRule"], () => require("./outboundRule"));
exports.Probe = null;
utilities.lazyLoad(exports, ["Probe"], () => require("./probe"));
exports.Rule = null;
utilities.lazyLoad(exports, ["Rule"], () => require("./rule"));
const _module = {
    version: utilities.getVersion(),
    construct: (name, type, urn) => {
        switch (type) {
            case "azure:lb/backendAddressPool:BackendAddressPool":
                return new exports.BackendAddressPool(name, undefined, { urn });
            case "azure:lb/backendAddressPoolAddress:BackendAddressPoolAddress":
                return new exports.BackendAddressPoolAddress(name, undefined, { urn });
            case "azure:lb/loadBalancer:LoadBalancer":
                return new exports.LoadBalancer(name, undefined, { urn });
            case "azure:lb/natPool:NatPool":
                return new exports.NatPool(name, undefined, { urn });
            case "azure:lb/natRule:NatRule":
                return new exports.NatRule(name, undefined, { urn });
            case "azure:lb/outboundRule:OutboundRule":
                return new exports.OutboundRule(name, undefined, { urn });
            case "azure:lb/probe:Probe":
                return new exports.Probe(name, undefined, { urn });
            case "azure:lb/rule:Rule":
                return new exports.Rule(name, undefined, { urn });
            default:
                throw new Error(`unknown resource type ${type}`);
        }
    },
};
pulumi.runtime.registerResourceModule("azure", "lb/backendAddressPool", _module);
pulumi.runtime.registerResourceModule("azure", "lb/backendAddressPoolAddress", _module);
pulumi.runtime.registerResourceModule("azure", "lb/loadBalancer", _module);
pulumi.runtime.registerResourceModule("azure", "lb/natPool", _module);
pulumi.runtime.registerResourceModule("azure", "lb/natRule", _module);
pulumi.runtime.registerResourceModule("azure", "lb/outboundRule", _module);
pulumi.runtime.registerResourceModule("azure", "lb/probe", _module);
pulumi.runtime.registerResourceModule("azure", "lb/rule", _module);
//# sourceMappingURL=index.js.map