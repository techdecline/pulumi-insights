"use strict";
// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***
Object.defineProperty(exports, "__esModule", { value: true });
exports.VolumeQuotaRule = exports.VolumeGroupSapHana = exports.Volume = exports.SnapshotPolicy = exports.Snapshot = exports.Pool = exports.getVolumeQuotaRuleOutput = exports.getVolumeQuotaRule = exports.getVolumeGroupSapHanaOutput = exports.getVolumeGroupSapHana = exports.getVolumeOutput = exports.getVolume = exports.getSnapshotPolicyOutput = exports.getSnapshotPolicy = exports.getSnapshotOutput = exports.getSnapshot = exports.getPoolOutput = exports.getPool = exports.getBackupVaultOutput = exports.getBackupVault = exports.getBackupPolicyOutput = exports.getBackupPolicy = exports.getAccountEncryptionOutput = exports.getAccountEncryption = exports.getAccountOutput = exports.getAccount = exports.BackupVault = exports.BackupPolicy = exports.AccountEncryption = exports.Account = void 0;
const pulumi = require("@pulumi/pulumi");
const utilities = require("../utilities");
exports.Account = null;
utilities.lazyLoad(exports, ["Account"], () => require("./account"));
exports.AccountEncryption = null;
utilities.lazyLoad(exports, ["AccountEncryption"], () => require("./accountEncryption"));
exports.BackupPolicy = null;
utilities.lazyLoad(exports, ["BackupPolicy"], () => require("./backupPolicy"));
exports.BackupVault = null;
utilities.lazyLoad(exports, ["BackupVault"], () => require("./backupVault"));
exports.getAccount = null;
exports.getAccountOutput = null;
utilities.lazyLoad(exports, ["getAccount", "getAccountOutput"], () => require("./getAccount"));
exports.getAccountEncryption = null;
exports.getAccountEncryptionOutput = null;
utilities.lazyLoad(exports, ["getAccountEncryption", "getAccountEncryptionOutput"], () => require("./getAccountEncryption"));
exports.getBackupPolicy = null;
exports.getBackupPolicyOutput = null;
utilities.lazyLoad(exports, ["getBackupPolicy", "getBackupPolicyOutput"], () => require("./getBackupPolicy"));
exports.getBackupVault = null;
exports.getBackupVaultOutput = null;
utilities.lazyLoad(exports, ["getBackupVault", "getBackupVaultOutput"], () => require("./getBackupVault"));
exports.getPool = null;
exports.getPoolOutput = null;
utilities.lazyLoad(exports, ["getPool", "getPoolOutput"], () => require("./getPool"));
exports.getSnapshot = null;
exports.getSnapshotOutput = null;
utilities.lazyLoad(exports, ["getSnapshot", "getSnapshotOutput"], () => require("./getSnapshot"));
exports.getSnapshotPolicy = null;
exports.getSnapshotPolicyOutput = null;
utilities.lazyLoad(exports, ["getSnapshotPolicy", "getSnapshotPolicyOutput"], () => require("./getSnapshotPolicy"));
exports.getVolume = null;
exports.getVolumeOutput = null;
utilities.lazyLoad(exports, ["getVolume", "getVolumeOutput"], () => require("./getVolume"));
exports.getVolumeGroupSapHana = null;
exports.getVolumeGroupSapHanaOutput = null;
utilities.lazyLoad(exports, ["getVolumeGroupSapHana", "getVolumeGroupSapHanaOutput"], () => require("./getVolumeGroupSapHana"));
exports.getVolumeQuotaRule = null;
exports.getVolumeQuotaRuleOutput = null;
utilities.lazyLoad(exports, ["getVolumeQuotaRule", "getVolumeQuotaRuleOutput"], () => require("./getVolumeQuotaRule"));
exports.Pool = null;
utilities.lazyLoad(exports, ["Pool"], () => require("./pool"));
exports.Snapshot = null;
utilities.lazyLoad(exports, ["Snapshot"], () => require("./snapshot"));
exports.SnapshotPolicy = null;
utilities.lazyLoad(exports, ["SnapshotPolicy"], () => require("./snapshotPolicy"));
exports.Volume = null;
utilities.lazyLoad(exports, ["Volume"], () => require("./volume"));
exports.VolumeGroupSapHana = null;
utilities.lazyLoad(exports, ["VolumeGroupSapHana"], () => require("./volumeGroupSapHana"));
exports.VolumeQuotaRule = null;
utilities.lazyLoad(exports, ["VolumeQuotaRule"], () => require("./volumeQuotaRule"));
const _module = {
    version: utilities.getVersion(),
    construct: (name, type, urn) => {
        switch (type) {
            case "azure:netapp/account:Account":
                return new exports.Account(name, undefined, { urn });
            case "azure:netapp/accountEncryption:AccountEncryption":
                return new exports.AccountEncryption(name, undefined, { urn });
            case "azure:netapp/backupPolicy:BackupPolicy":
                return new exports.BackupPolicy(name, undefined, { urn });
            case "azure:netapp/backupVault:BackupVault":
                return new exports.BackupVault(name, undefined, { urn });
            case "azure:netapp/pool:Pool":
                return new exports.Pool(name, undefined, { urn });
            case "azure:netapp/snapshot:Snapshot":
                return new exports.Snapshot(name, undefined, { urn });
            case "azure:netapp/snapshotPolicy:SnapshotPolicy":
                return new exports.SnapshotPolicy(name, undefined, { urn });
            case "azure:netapp/volume:Volume":
                return new exports.Volume(name, undefined, { urn });
            case "azure:netapp/volumeGroupSapHana:VolumeGroupSapHana":
                return new exports.VolumeGroupSapHana(name, undefined, { urn });
            case "azure:netapp/volumeQuotaRule:VolumeQuotaRule":
                return new exports.VolumeQuotaRule(name, undefined, { urn });
            default:
                throw new Error(`unknown resource type ${type}`);
        }
    },
};
pulumi.runtime.registerResourceModule("azure", "netapp/account", _module);
pulumi.runtime.registerResourceModule("azure", "netapp/accountEncryption", _module);
pulumi.runtime.registerResourceModule("azure", "netapp/backupPolicy", _module);
pulumi.runtime.registerResourceModule("azure", "netapp/backupVault", _module);
pulumi.runtime.registerResourceModule("azure", "netapp/pool", _module);
pulumi.runtime.registerResourceModule("azure", "netapp/snapshot", _module);
pulumi.runtime.registerResourceModule("azure", "netapp/snapshotPolicy", _module);
pulumi.runtime.registerResourceModule("azure", "netapp/volume", _module);
pulumi.runtime.registerResourceModule("azure", "netapp/volumeGroupSapHana", _module);
pulumi.runtime.registerResourceModule("azure", "netapp/volumeQuotaRule", _module);
//# sourceMappingURL=index.js.map