import * as pulumi from "@pulumi/pulumi";
/**
 * Manages a NetApp Backup Policy.
 *
 * ## NetApp Backup Policy Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as azure from "@pulumi/azure";
 *
 * const example = new azure.core.ResourceGroup("example", {
 *     name: "example-resources",
 *     location: "West Europe",
 * });
 * const exampleAccount = new azure.netapp.Account("example", {
 *     name: "example-netappaccount",
 *     location: example.location,
 *     resourceGroupName: example.name,
 * });
 * const exampleBackupPolicy = new azure.netapp.BackupPolicy("example", {
 *     name: "example-netappbackuppolicy",
 *     resourceGroupName: example.name,
 *     location: example.location,
 *     accountName: exampleAccount.name,
 *     enabled: true,
 * });
 * ```
 *
 * ## Import
 *
 * NetApp Backup Policy can be imported using the `resource id`, e.g.
 *
 * ```sh
 * $ pulumi import azure:netapp/backupPolicy:BackupPolicy example /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/group1/providers/Microsoft.NetApp/netAppAccounts/account1/backupPolicies/backuppolicy1
 * ```
 */
export declare class BackupPolicy extends pulumi.CustomResource {
    /**
     * Get an existing BackupPolicy resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    static get(name: string, id: pulumi.Input<pulumi.ID>, state?: BackupPolicyState, opts?: pulumi.CustomResourceOptions): BackupPolicy;
    /**
     * Returns true if the given object is an instance of BackupPolicy.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    static isInstance(obj: any): obj is BackupPolicy;
    /**
     * The name of the NetApp account in which the NetApp Policy should be created under. Changing this forces a new resource to be created.
     */
    readonly accountName: pulumi.Output<string>;
    /**
     * Provides the number of daily backups to keep, defaults to `2` which is the minimum, maximum is 1019.
     */
    readonly dailyBackupsToKeep: pulumi.Output<number | undefined>;
    /**
     * Whether the Backup Policy is enabled. Defaults to `true`.
     */
    readonly enabled: pulumi.Output<boolean | undefined>;
    /**
     * Specifies the supported Azure location where the resource exists. Changing this forces a new resource to be created.
     */
    readonly location: pulumi.Output<string>;
    /**
     * Provides the number of monthly backups to keep, defaults to `1` which is the minimum, maximum is 1019.
     *
     * > **Note:** Currently, the combined (daily + weekly + monthy) retention counts cannot exceed 1019.
     */
    readonly monthlyBackupsToKeep: pulumi.Output<number | undefined>;
    /**
     * The name of the NetApp Backup Policy. Changing this forces a new resource to be created.
     */
    readonly name: pulumi.Output<string>;
    /**
     * The name of the resource group where the NetApp Backup Policy should be created. Changing this forces a new resource to be created.
     */
    readonly resourceGroupName: pulumi.Output<string>;
    /**
     * A mapping of tags to assign to the resource.
     */
    readonly tags: pulumi.Output<{
        [key: string]: string;
    } | undefined>;
    /**
     * Provides the number of weekly backups to keep, defaults to `1` which is the minimum, maximum is 1019.
     */
    readonly weeklyBackupsToKeep: pulumi.Output<number | undefined>;
    /**
     * Create a BackupPolicy resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: BackupPolicyArgs, opts?: pulumi.CustomResourceOptions);
}
/**
 * Input properties used for looking up and filtering BackupPolicy resources.
 */
export interface BackupPolicyState {
    /**
     * The name of the NetApp account in which the NetApp Policy should be created under. Changing this forces a new resource to be created.
     */
    accountName?: pulumi.Input<string>;
    /**
     * Provides the number of daily backups to keep, defaults to `2` which is the minimum, maximum is 1019.
     */
    dailyBackupsToKeep?: pulumi.Input<number>;
    /**
     * Whether the Backup Policy is enabled. Defaults to `true`.
     */
    enabled?: pulumi.Input<boolean>;
    /**
     * Specifies the supported Azure location where the resource exists. Changing this forces a new resource to be created.
     */
    location?: pulumi.Input<string>;
    /**
     * Provides the number of monthly backups to keep, defaults to `1` which is the minimum, maximum is 1019.
     *
     * > **Note:** Currently, the combined (daily + weekly + monthy) retention counts cannot exceed 1019.
     */
    monthlyBackupsToKeep?: pulumi.Input<number>;
    /**
     * The name of the NetApp Backup Policy. Changing this forces a new resource to be created.
     */
    name?: pulumi.Input<string>;
    /**
     * The name of the resource group where the NetApp Backup Policy should be created. Changing this forces a new resource to be created.
     */
    resourceGroupName?: pulumi.Input<string>;
    /**
     * A mapping of tags to assign to the resource.
     */
    tags?: pulumi.Input<{
        [key: string]: pulumi.Input<string>;
    }>;
    /**
     * Provides the number of weekly backups to keep, defaults to `1` which is the minimum, maximum is 1019.
     */
    weeklyBackupsToKeep?: pulumi.Input<number>;
}
/**
 * The set of arguments for constructing a BackupPolicy resource.
 */
export interface BackupPolicyArgs {
    /**
     * The name of the NetApp account in which the NetApp Policy should be created under. Changing this forces a new resource to be created.
     */
    accountName: pulumi.Input<string>;
    /**
     * Provides the number of daily backups to keep, defaults to `2` which is the minimum, maximum is 1019.
     */
    dailyBackupsToKeep?: pulumi.Input<number>;
    /**
     * Whether the Backup Policy is enabled. Defaults to `true`.
     */
    enabled?: pulumi.Input<boolean>;
    /**
     * Specifies the supported Azure location where the resource exists. Changing this forces a new resource to be created.
     */
    location?: pulumi.Input<string>;
    /**
     * Provides the number of monthly backups to keep, defaults to `1` which is the minimum, maximum is 1019.
     *
     * > **Note:** Currently, the combined (daily + weekly + monthy) retention counts cannot exceed 1019.
     */
    monthlyBackupsToKeep?: pulumi.Input<number>;
    /**
     * The name of the NetApp Backup Policy. Changing this forces a new resource to be created.
     */
    name?: pulumi.Input<string>;
    /**
     * The name of the resource group where the NetApp Backup Policy should be created. Changing this forces a new resource to be created.
     */
    resourceGroupName: pulumi.Input<string>;
    /**
     * A mapping of tags to assign to the resource.
     */
    tags?: pulumi.Input<{
        [key: string]: pulumi.Input<string>;
    }>;
    /**
     * Provides the number of weekly backups to keep, defaults to `1` which is the minimum, maximum is 1019.
     */
    weeklyBackupsToKeep?: pulumi.Input<number>;
}
