import * as pulumi from "@pulumi/pulumi";
/**
 * Manages a Virtual Machine Restore Point.
 *
 * ## Import
 *
 * Virtual Machine Restore Point can be imported using the `resource id`, e.g.
 *
 * ```sh
 * $ pulumi import azure:compute/restorePoint:RestorePoint example /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/mygroup1/providers/Microsoft.Compute/restorePointCollections/collection1/restorePoints/restorePoint1
 * ```
 */
export declare class RestorePoint extends pulumi.CustomResource {
    /**
     * Get an existing RestorePoint resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    static get(name: string, id: pulumi.Input<pulumi.ID>, state?: RestorePointState, opts?: pulumi.CustomResourceOptions): RestorePoint;
    /**
     * Returns true if the given object is an instance of RestorePoint.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    static isInstance(obj: any): obj is RestorePoint;
    /**
     * Is Crash Consistent the Consistency Mode of the Virtual Machine Restore Point. Defaults to `false`. Changing this forces a new resource to be created.
     */
    readonly crashConsistencyModeEnabled: pulumi.Output<boolean | undefined>;
    /**
     * A list of disks that will be excluded from the Virtual Machine Restore Point. Changing this forces a new resource to be created.
     */
    readonly excludedDisks: pulumi.Output<string[] | undefined>;
    /**
     * Specifies the name of the Virtual Machine Restore Point. Changing this forces a new resource to be created.
     */
    readonly name: pulumi.Output<string>;
    readonly virtualMachineRestorePointCollectionId: pulumi.Output<string>;
    /**
     * Create a RestorePoint resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: RestorePointArgs, opts?: pulumi.CustomResourceOptions);
}
/**
 * Input properties used for looking up and filtering RestorePoint resources.
 */
export interface RestorePointState {
    /**
     * Is Crash Consistent the Consistency Mode of the Virtual Machine Restore Point. Defaults to `false`. Changing this forces a new resource to be created.
     */
    crashConsistencyModeEnabled?: pulumi.Input<boolean>;
    /**
     * A list of disks that will be excluded from the Virtual Machine Restore Point. Changing this forces a new resource to be created.
     */
    excludedDisks?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Specifies the name of the Virtual Machine Restore Point. Changing this forces a new resource to be created.
     */
    name?: pulumi.Input<string>;
    virtualMachineRestorePointCollectionId?: pulumi.Input<string>;
}
/**
 * The set of arguments for constructing a RestorePoint resource.
 */
export interface RestorePointArgs {
    /**
     * Is Crash Consistent the Consistency Mode of the Virtual Machine Restore Point. Defaults to `false`. Changing this forces a new resource to be created.
     */
    crashConsistencyModeEnabled?: pulumi.Input<boolean>;
    /**
     * A list of disks that will be excluded from the Virtual Machine Restore Point. Changing this forces a new resource to be created.
     */
    excludedDisks?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Specifies the name of the Virtual Machine Restore Point. Changing this forces a new resource to be created.
     */
    name?: pulumi.Input<string>;
    virtualMachineRestorePointCollectionId: pulumi.Input<string>;
}
