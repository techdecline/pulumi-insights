"use strict";
// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***
Object.defineProperty(exports, "__esModule", { value: true });
exports.getSshPublicKeyOutput = exports.getSshPublicKey = exports.getSnapshotOutput = exports.getSnapshot = exports.getSharedImageVersionsOutput = exports.getSharedImageVersions = exports.getSharedImageVersionOutput = exports.getSharedImageVersion = exports.getSharedImageGalleryOutput = exports.getSharedImageGallery = exports.getSharedImageOutput = exports.getSharedImage = exports.getPlatformImageOutput = exports.getPlatformImage = exports.getOrchestratedVirtualMachineScaleSetOutput = exports.getOrchestratedVirtualMachineScaleSet = exports.getManagedDiskOutput = exports.getManagedDisk = exports.getImagesOutput = exports.getImages = exports.getImageOutput = exports.getImage = exports.getDiskEncryptionSetOutput = exports.getDiskEncryptionSet = exports.getDiskAccessOutput = exports.getDiskAccess = exports.getDedicatedHostGroupOutput = exports.getDedicatedHostGroup = exports.getDedicatedHostOutput = exports.getDedicatedHost = exports.getConfidentialLedgerOutput = exports.getConfidentialLedger = exports.getBastionHostOutput = exports.getBastionHost = exports.getAvailabilitySetOutput = exports.getAvailabilitySet = exports.GalleryApplicationVersion = exports.GalleryApplicationAssignment = exports.GalleryApplication = exports.Extension = exports.DiskEncryptionSet = exports.DiskAccess = exports.DedicatedHostGroup = exports.DedicatedHost = exports.DataDiskAttachment = exports.CapacityReservationGroup = exports.CapacityReservation = exports.BastionHost = exports.AvailabilitySet = exports.AutomanageConfigurationAssignment = void 0;
exports.WindowsVirtualMachineScaleSet = exports.WindowsVirtualMachine = exports.VirtualMachineScaleSetExtension = exports.VirtualMachine = exports.SshPublicKey = exports.Snapshot = exports.SharedImageVersion = exports.SharedImageGallery = exports.SharedImage = exports.ScaleSetPacketCapture = exports.ScaleSet = exports.RunCommand = exports.RestorePointCollection = exports.RestorePoint = exports.PacketCapture = exports.OrchestratedVirtualMachineScaleSet = exports.ManagedDiskSasToken = exports.ManagedDisk = exports.LinuxVirtualMachineScaleSet = exports.LinuxVirtualMachine = exports.ImplicitDataDiskFromSource = exports.Image = exports.getVirtualMachineScaleSetOutput = exports.getVirtualMachineScaleSet = exports.getVirtualMachineOutput = exports.getVirtualMachine = void 0;
const pulumi = require("@pulumi/pulumi");
const utilities = require("../utilities");
exports.AutomanageConfigurationAssignment = null;
utilities.lazyLoad(exports, ["AutomanageConfigurationAssignment"], () => require("./automanageConfigurationAssignment"));
exports.AvailabilitySet = null;
utilities.lazyLoad(exports, ["AvailabilitySet"], () => require("./availabilitySet"));
exports.BastionHost = null;
utilities.lazyLoad(exports, ["BastionHost"], () => require("./bastionHost"));
exports.CapacityReservation = null;
utilities.lazyLoad(exports, ["CapacityReservation"], () => require("./capacityReservation"));
exports.CapacityReservationGroup = null;
utilities.lazyLoad(exports, ["CapacityReservationGroup"], () => require("./capacityReservationGroup"));
exports.DataDiskAttachment = null;
utilities.lazyLoad(exports, ["DataDiskAttachment"], () => require("./dataDiskAttachment"));
exports.DedicatedHost = null;
utilities.lazyLoad(exports, ["DedicatedHost"], () => require("./dedicatedHost"));
exports.DedicatedHostGroup = null;
utilities.lazyLoad(exports, ["DedicatedHostGroup"], () => require("./dedicatedHostGroup"));
exports.DiskAccess = null;
utilities.lazyLoad(exports, ["DiskAccess"], () => require("./diskAccess"));
exports.DiskEncryptionSet = null;
utilities.lazyLoad(exports, ["DiskEncryptionSet"], () => require("./diskEncryptionSet"));
exports.Extension = null;
utilities.lazyLoad(exports, ["Extension"], () => require("./extension"));
exports.GalleryApplication = null;
utilities.lazyLoad(exports, ["GalleryApplication"], () => require("./galleryApplication"));
exports.GalleryApplicationAssignment = null;
utilities.lazyLoad(exports, ["GalleryApplicationAssignment"], () => require("./galleryApplicationAssignment"));
exports.GalleryApplicationVersion = null;
utilities.lazyLoad(exports, ["GalleryApplicationVersion"], () => require("./galleryApplicationVersion"));
exports.getAvailabilitySet = null;
exports.getAvailabilitySetOutput = null;
utilities.lazyLoad(exports, ["getAvailabilitySet", "getAvailabilitySetOutput"], () => require("./getAvailabilitySet"));
exports.getBastionHost = null;
exports.getBastionHostOutput = null;
utilities.lazyLoad(exports, ["getBastionHost", "getBastionHostOutput"], () => require("./getBastionHost"));
exports.getConfidentialLedger = null;
exports.getConfidentialLedgerOutput = null;
utilities.lazyLoad(exports, ["getConfidentialLedger", "getConfidentialLedgerOutput"], () => require("./getConfidentialLedger"));
exports.getDedicatedHost = null;
exports.getDedicatedHostOutput = null;
utilities.lazyLoad(exports, ["getDedicatedHost", "getDedicatedHostOutput"], () => require("./getDedicatedHost"));
exports.getDedicatedHostGroup = null;
exports.getDedicatedHostGroupOutput = null;
utilities.lazyLoad(exports, ["getDedicatedHostGroup", "getDedicatedHostGroupOutput"], () => require("./getDedicatedHostGroup"));
exports.getDiskAccess = null;
exports.getDiskAccessOutput = null;
utilities.lazyLoad(exports, ["getDiskAccess", "getDiskAccessOutput"], () => require("./getDiskAccess"));
exports.getDiskEncryptionSet = null;
exports.getDiskEncryptionSetOutput = null;
utilities.lazyLoad(exports, ["getDiskEncryptionSet", "getDiskEncryptionSetOutput"], () => require("./getDiskEncryptionSet"));
exports.getImage = null;
exports.getImageOutput = null;
utilities.lazyLoad(exports, ["getImage", "getImageOutput"], () => require("./getImage"));
exports.getImages = null;
exports.getImagesOutput = null;
utilities.lazyLoad(exports, ["getImages", "getImagesOutput"], () => require("./getImages"));
exports.getManagedDisk = null;
exports.getManagedDiskOutput = null;
utilities.lazyLoad(exports, ["getManagedDisk", "getManagedDiskOutput"], () => require("./getManagedDisk"));
exports.getOrchestratedVirtualMachineScaleSet = null;
exports.getOrchestratedVirtualMachineScaleSetOutput = null;
utilities.lazyLoad(exports, ["getOrchestratedVirtualMachineScaleSet", "getOrchestratedVirtualMachineScaleSetOutput"], () => require("./getOrchestratedVirtualMachineScaleSet"));
exports.getPlatformImage = null;
exports.getPlatformImageOutput = null;
utilities.lazyLoad(exports, ["getPlatformImage", "getPlatformImageOutput"], () => require("./getPlatformImage"));
exports.getSharedImage = null;
exports.getSharedImageOutput = null;
utilities.lazyLoad(exports, ["getSharedImage", "getSharedImageOutput"], () => require("./getSharedImage"));
exports.getSharedImageGallery = null;
exports.getSharedImageGalleryOutput = null;
utilities.lazyLoad(exports, ["getSharedImageGallery", "getSharedImageGalleryOutput"], () => require("./getSharedImageGallery"));
exports.getSharedImageVersion = null;
exports.getSharedImageVersionOutput = null;
utilities.lazyLoad(exports, ["getSharedImageVersion", "getSharedImageVersionOutput"], () => require("./getSharedImageVersion"));
exports.getSharedImageVersions = null;
exports.getSharedImageVersionsOutput = null;
utilities.lazyLoad(exports, ["getSharedImageVersions", "getSharedImageVersionsOutput"], () => require("./getSharedImageVersions"));
exports.getSnapshot = null;
exports.getSnapshotOutput = null;
utilities.lazyLoad(exports, ["getSnapshot", "getSnapshotOutput"], () => require("./getSnapshot"));
exports.getSshPublicKey = null;
exports.getSshPublicKeyOutput = null;
utilities.lazyLoad(exports, ["getSshPublicKey", "getSshPublicKeyOutput"], () => require("./getSshPublicKey"));
exports.getVirtualMachine = null;
exports.getVirtualMachineOutput = null;
utilities.lazyLoad(exports, ["getVirtualMachine", "getVirtualMachineOutput"], () => require("./getVirtualMachine"));
exports.getVirtualMachineScaleSet = null;
exports.getVirtualMachineScaleSetOutput = null;
utilities.lazyLoad(exports, ["getVirtualMachineScaleSet", "getVirtualMachineScaleSetOutput"], () => require("./getVirtualMachineScaleSet"));
exports.Image = null;
utilities.lazyLoad(exports, ["Image"], () => require("./image"));
exports.ImplicitDataDiskFromSource = null;
utilities.lazyLoad(exports, ["ImplicitDataDiskFromSource"], () => require("./implicitDataDiskFromSource"));
exports.LinuxVirtualMachine = null;
utilities.lazyLoad(exports, ["LinuxVirtualMachine"], () => require("./linuxVirtualMachine"));
exports.LinuxVirtualMachineScaleSet = null;
utilities.lazyLoad(exports, ["LinuxVirtualMachineScaleSet"], () => require("./linuxVirtualMachineScaleSet"));
exports.ManagedDisk = null;
utilities.lazyLoad(exports, ["ManagedDisk"], () => require("./managedDisk"));
exports.ManagedDiskSasToken = null;
utilities.lazyLoad(exports, ["ManagedDiskSasToken"], () => require("./managedDiskSasToken"));
exports.OrchestratedVirtualMachineScaleSet = null;
utilities.lazyLoad(exports, ["OrchestratedVirtualMachineScaleSet"], () => require("./orchestratedVirtualMachineScaleSet"));
exports.PacketCapture = null;
utilities.lazyLoad(exports, ["PacketCapture"], () => require("./packetCapture"));
exports.RestorePoint = null;
utilities.lazyLoad(exports, ["RestorePoint"], () => require("./restorePoint"));
exports.RestorePointCollection = null;
utilities.lazyLoad(exports, ["RestorePointCollection"], () => require("./restorePointCollection"));
exports.RunCommand = null;
utilities.lazyLoad(exports, ["RunCommand"], () => require("./runCommand"));
exports.ScaleSet = null;
utilities.lazyLoad(exports, ["ScaleSet"], () => require("./scaleSet"));
exports.ScaleSetPacketCapture = null;
utilities.lazyLoad(exports, ["ScaleSetPacketCapture"], () => require("./scaleSetPacketCapture"));
exports.SharedImage = null;
utilities.lazyLoad(exports, ["SharedImage"], () => require("./sharedImage"));
exports.SharedImageGallery = null;
utilities.lazyLoad(exports, ["SharedImageGallery"], () => require("./sharedImageGallery"));
exports.SharedImageVersion = null;
utilities.lazyLoad(exports, ["SharedImageVersion"], () => require("./sharedImageVersion"));
exports.Snapshot = null;
utilities.lazyLoad(exports, ["Snapshot"], () => require("./snapshot"));
exports.SshPublicKey = null;
utilities.lazyLoad(exports, ["SshPublicKey"], () => require("./sshPublicKey"));
exports.VirtualMachine = null;
utilities.lazyLoad(exports, ["VirtualMachine"], () => require("./virtualMachine"));
exports.VirtualMachineScaleSetExtension = null;
utilities.lazyLoad(exports, ["VirtualMachineScaleSetExtension"], () => require("./virtualMachineScaleSetExtension"));
exports.WindowsVirtualMachine = null;
utilities.lazyLoad(exports, ["WindowsVirtualMachine"], () => require("./windowsVirtualMachine"));
exports.WindowsVirtualMachineScaleSet = null;
utilities.lazyLoad(exports, ["WindowsVirtualMachineScaleSet"], () => require("./windowsVirtualMachineScaleSet"));
const _module = {
    version: utilities.getVersion(),
    construct: (name, type, urn) => {
        switch (type) {
            case "azure:compute/automanageConfigurationAssignment:AutomanageConfigurationAssignment":
                return new exports.AutomanageConfigurationAssignment(name, undefined, { urn });
            case "azure:compute/availabilitySet:AvailabilitySet":
                return new exports.AvailabilitySet(name, undefined, { urn });
            case "azure:compute/bastionHost:BastionHost":
                return new exports.BastionHost(name, undefined, { urn });
            case "azure:compute/capacityReservation:CapacityReservation":
                return new exports.CapacityReservation(name, undefined, { urn });
            case "azure:compute/capacityReservationGroup:CapacityReservationGroup":
                return new exports.CapacityReservationGroup(name, undefined, { urn });
            case "azure:compute/dataDiskAttachment:DataDiskAttachment":
                return new exports.DataDiskAttachment(name, undefined, { urn });
            case "azure:compute/dedicatedHost:DedicatedHost":
                return new exports.DedicatedHost(name, undefined, { urn });
            case "azure:compute/dedicatedHostGroup:DedicatedHostGroup":
                return new exports.DedicatedHostGroup(name, undefined, { urn });
            case "azure:compute/diskAccess:DiskAccess":
                return new exports.DiskAccess(name, undefined, { urn });
            case "azure:compute/diskEncryptionSet:DiskEncryptionSet":
                return new exports.DiskEncryptionSet(name, undefined, { urn });
            case "azure:compute/extension:Extension":
                return new exports.Extension(name, undefined, { urn });
            case "azure:compute/galleryApplication:GalleryApplication":
                return new exports.GalleryApplication(name, undefined, { urn });
            case "azure:compute/galleryApplicationAssignment:GalleryApplicationAssignment":
                return new exports.GalleryApplicationAssignment(name, undefined, { urn });
            case "azure:compute/galleryApplicationVersion:GalleryApplicationVersion":
                return new exports.GalleryApplicationVersion(name, undefined, { urn });
            case "azure:compute/image:Image":
                return new exports.Image(name, undefined, { urn });
            case "azure:compute/implicitDataDiskFromSource:ImplicitDataDiskFromSource":
                return new exports.ImplicitDataDiskFromSource(name, undefined, { urn });
            case "azure:compute/linuxVirtualMachine:LinuxVirtualMachine":
                return new exports.LinuxVirtualMachine(name, undefined, { urn });
            case "azure:compute/linuxVirtualMachineScaleSet:LinuxVirtualMachineScaleSet":
                return new exports.LinuxVirtualMachineScaleSet(name, undefined, { urn });
            case "azure:compute/managedDisk:ManagedDisk":
                return new exports.ManagedDisk(name, undefined, { urn });
            case "azure:compute/managedDiskSasToken:ManagedDiskSasToken":
                return new exports.ManagedDiskSasToken(name, undefined, { urn });
            case "azure:compute/orchestratedVirtualMachineScaleSet:OrchestratedVirtualMachineScaleSet":
                return new exports.OrchestratedVirtualMachineScaleSet(name, undefined, { urn });
            case "azure:compute/packetCapture:PacketCapture":
                return new exports.PacketCapture(name, undefined, { urn });
            case "azure:compute/restorePoint:RestorePoint":
                return new exports.RestorePoint(name, undefined, { urn });
            case "azure:compute/restorePointCollection:RestorePointCollection":
                return new exports.RestorePointCollection(name, undefined, { urn });
            case "azure:compute/runCommand:RunCommand":
                return new exports.RunCommand(name, undefined, { urn });
            case "azure:compute/scaleSet:ScaleSet":
                return new exports.ScaleSet(name, undefined, { urn });
            case "azure:compute/scaleSetPacketCapture:ScaleSetPacketCapture":
                return new exports.ScaleSetPacketCapture(name, undefined, { urn });
            case "azure:compute/sharedImage:SharedImage":
                return new exports.SharedImage(name, undefined, { urn });
            case "azure:compute/sharedImageGallery:SharedImageGallery":
                return new exports.SharedImageGallery(name, undefined, { urn });
            case "azure:compute/sharedImageVersion:SharedImageVersion":
                return new exports.SharedImageVersion(name, undefined, { urn });
            case "azure:compute/snapshot:Snapshot":
                return new exports.Snapshot(name, undefined, { urn });
            case "azure:compute/sshPublicKey:SshPublicKey":
                return new exports.SshPublicKey(name, undefined, { urn });
            case "azure:compute/virtualMachine:VirtualMachine":
                return new exports.VirtualMachine(name, undefined, { urn });
            case "azure:compute/virtualMachineScaleSetExtension:VirtualMachineScaleSetExtension":
                return new exports.VirtualMachineScaleSetExtension(name, undefined, { urn });
            case "azure:compute/windowsVirtualMachine:WindowsVirtualMachine":
                return new exports.WindowsVirtualMachine(name, undefined, { urn });
            case "azure:compute/windowsVirtualMachineScaleSet:WindowsVirtualMachineScaleSet":
                return new exports.WindowsVirtualMachineScaleSet(name, undefined, { urn });
            default:
                throw new Error(`unknown resource type ${type}`);
        }
    },
};
pulumi.runtime.registerResourceModule("azure", "compute/automanageConfigurationAssignment", _module);
pulumi.runtime.registerResourceModule("azure", "compute/availabilitySet", _module);
pulumi.runtime.registerResourceModule("azure", "compute/bastionHost", _module);
pulumi.runtime.registerResourceModule("azure", "compute/capacityReservation", _module);
pulumi.runtime.registerResourceModule("azure", "compute/capacityReservationGroup", _module);
pulumi.runtime.registerResourceModule("azure", "compute/dataDiskAttachment", _module);
pulumi.runtime.registerResourceModule("azure", "compute/dedicatedHost", _module);
pulumi.runtime.registerResourceModule("azure", "compute/dedicatedHostGroup", _module);
pulumi.runtime.registerResourceModule("azure", "compute/diskAccess", _module);
pulumi.runtime.registerResourceModule("azure", "compute/diskEncryptionSet", _module);
pulumi.runtime.registerResourceModule("azure", "compute/extension", _module);
pulumi.runtime.registerResourceModule("azure", "compute/galleryApplication", _module);
pulumi.runtime.registerResourceModule("azure", "compute/galleryApplicationAssignment", _module);
pulumi.runtime.registerResourceModule("azure", "compute/galleryApplicationVersion", _module);
pulumi.runtime.registerResourceModule("azure", "compute/image", _module);
pulumi.runtime.registerResourceModule("azure", "compute/implicitDataDiskFromSource", _module);
pulumi.runtime.registerResourceModule("azure", "compute/linuxVirtualMachine", _module);
pulumi.runtime.registerResourceModule("azure", "compute/linuxVirtualMachineScaleSet", _module);
pulumi.runtime.registerResourceModule("azure", "compute/managedDisk", _module);
pulumi.runtime.registerResourceModule("azure", "compute/managedDiskSasToken", _module);
pulumi.runtime.registerResourceModule("azure", "compute/orchestratedVirtualMachineScaleSet", _module);
pulumi.runtime.registerResourceModule("azure", "compute/packetCapture", _module);
pulumi.runtime.registerResourceModule("azure", "compute/restorePoint", _module);
pulumi.runtime.registerResourceModule("azure", "compute/restorePointCollection", _module);
pulumi.runtime.registerResourceModule("azure", "compute/runCommand", _module);
pulumi.runtime.registerResourceModule("azure", "compute/scaleSet", _module);
pulumi.runtime.registerResourceModule("azure", "compute/scaleSetPacketCapture", _module);
pulumi.runtime.registerResourceModule("azure", "compute/sharedImage", _module);
pulumi.runtime.registerResourceModule("azure", "compute/sharedImageGallery", _module);
pulumi.runtime.registerResourceModule("azure", "compute/sharedImageVersion", _module);
pulumi.runtime.registerResourceModule("azure", "compute/snapshot", _module);
pulumi.runtime.registerResourceModule("azure", "compute/sshPublicKey", _module);
pulumi.runtime.registerResourceModule("azure", "compute/virtualMachine", _module);
pulumi.runtime.registerResourceModule("azure", "compute/virtualMachineScaleSetExtension", _module);
pulumi.runtime.registerResourceModule("azure", "compute/windowsVirtualMachine", _module);
pulumi.runtime.registerResourceModule("azure", "compute/windowsVirtualMachineScaleSet", _module);
//# sourceMappingURL=index.js.map