import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
/**
 * Manages a Capacity Reservation within a Capacity Reservation Group.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as azure from "@pulumi/azure";
 *
 * const example = new azure.core.ResourceGroup("example", {
 *     name: "example-rg",
 *     location: "West Europe",
 * });
 * const exampleCapacityReservationGroup = new azure.compute.CapacityReservationGroup("example", {
 *     name: "example-capacity-reservation-group",
 *     resourceGroupName: example.name,
 *     location: example.location,
 * });
 * const exampleCapacityReservation = new azure.compute.CapacityReservation("example", {
 *     name: "example-capacity-reservation",
 *     capacityReservationGroupId: exampleCapacityReservationGroup.id,
 *     sku: {
 *         name: "Standard_D2s_v3",
 *         capacity: 1,
 *     },
 * });
 * ```
 *
 * ## Import
 *
 * Capacity Reservations can be imported using the `resource id`, e.g.
 *
 * ```sh
 * $ pulumi import azure:compute/capacityReservation:CapacityReservation example /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/group1/providers/Microsoft.Compute/capacityReservationGroups/capacityReservationGroup1/capacityReservations/capacityReservation1
 * ```
 */
export declare class CapacityReservation extends pulumi.CustomResource {
    /**
     * Get an existing CapacityReservation resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    static get(name: string, id: pulumi.Input<pulumi.ID>, state?: CapacityReservationState, opts?: pulumi.CustomResourceOptions): CapacityReservation;
    /**
     * Returns true if the given object is an instance of CapacityReservation.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    static isInstance(obj: any): obj is CapacityReservation;
    /**
     * The ID of the Capacity Reservation Group where the Capacity Reservation exists. Changing this forces a new resource to be created.
     */
    readonly capacityReservationGroupId: pulumi.Output<string>;
    /**
     * Specifies the name of this Capacity Reservation. Changing this forces a new resource to be created.
     */
    readonly name: pulumi.Output<string>;
    /**
     * A `sku` block as defined below.
     */
    readonly sku: pulumi.Output<outputs.compute.CapacityReservationSku>;
    /**
     * A mapping of tags to assign to the resource.
     */
    readonly tags: pulumi.Output<{
        [key: string]: string;
    } | undefined>;
    /**
     * Specifies the Availability Zone for this Capacity Reservation. Changing this forces a new resource to be created.
     */
    readonly zone: pulumi.Output<string | undefined>;
    /**
     * Create a CapacityReservation resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: CapacityReservationArgs, opts?: pulumi.CustomResourceOptions);
}
/**
 * Input properties used for looking up and filtering CapacityReservation resources.
 */
export interface CapacityReservationState {
    /**
     * The ID of the Capacity Reservation Group where the Capacity Reservation exists. Changing this forces a new resource to be created.
     */
    capacityReservationGroupId?: pulumi.Input<string>;
    /**
     * Specifies the name of this Capacity Reservation. Changing this forces a new resource to be created.
     */
    name?: pulumi.Input<string>;
    /**
     * A `sku` block as defined below.
     */
    sku?: pulumi.Input<inputs.compute.CapacityReservationSku>;
    /**
     * A mapping of tags to assign to the resource.
     */
    tags?: pulumi.Input<{
        [key: string]: pulumi.Input<string>;
    }>;
    /**
     * Specifies the Availability Zone for this Capacity Reservation. Changing this forces a new resource to be created.
     */
    zone?: pulumi.Input<string>;
}
/**
 * The set of arguments for constructing a CapacityReservation resource.
 */
export interface CapacityReservationArgs {
    /**
     * The ID of the Capacity Reservation Group where the Capacity Reservation exists. Changing this forces a new resource to be created.
     */
    capacityReservationGroupId: pulumi.Input<string>;
    /**
     * Specifies the name of this Capacity Reservation. Changing this forces a new resource to be created.
     */
    name?: pulumi.Input<string>;
    /**
     * A `sku` block as defined below.
     */
    sku: pulumi.Input<inputs.compute.CapacityReservationSku>;
    /**
     * A mapping of tags to assign to the resource.
     */
    tags?: pulumi.Input<{
        [key: string]: pulumi.Input<string>;
    }>;
    /**
     * Specifies the Availability Zone for this Capacity Reservation. Changing this forces a new resource to be created.
     */
    zone?: pulumi.Input<string>;
}
