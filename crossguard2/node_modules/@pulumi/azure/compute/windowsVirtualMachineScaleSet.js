"use strict";
// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***
Object.defineProperty(exports, "__esModule", { value: true });
exports.WindowsVirtualMachineScaleSet = void 0;
const pulumi = require("@pulumi/pulumi");
const utilities = require("../utilities");
/**
 * Manages a Windows Virtual Machine Scale Set.
 *
 * ## Disclaimers
 *
 * > **Note:** This resource will only create Virtual Machine Scale Sets with the **Uniform** Orchestration Mode. For Virtual Machine Scale Sets with **Flexible** orchestration mode, use `azure.compute.OrchestratedVirtualMachineScaleSet`. Flexible orchestration mode is recommended for workloads on Azure.
 *
 * > **Note:** All arguments including the administrator login and password will be stored in the raw state as plain-text. [Read more about sensitive data in state](https://www.terraform.io/docs/state/sensitive-data.html).
 *
 * > **Note:** This provider will automatically update & reimage the nodes in the Scale Set (if Required) during an Update - this behaviour can be configured using the `features` setting within the Provider block.
 *
 * > **Note:** This resource does not support Unmanaged Disks. If you need to use Unmanaged Disks you can continue to use the `azure.compute.ScaleSet` resource instead
 *
 * ## Example Usage
 *
 * This example provisions a basic Windows Virtual Machine Scale Set on an internal network.
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as azure from "@pulumi/azure";
 *
 * const example = new azure.core.ResourceGroup("example", {
 *     name: "example-resources",
 *     location: "West Europe",
 * });
 * const exampleVirtualNetwork = new azure.network.VirtualNetwork("example", {
 *     name: "example-network",
 *     resourceGroupName: example.name,
 *     location: example.location,
 *     addressSpaces: ["10.0.0.0/16"],
 * });
 * const internal = new azure.network.Subnet("internal", {
 *     name: "internal",
 *     resourceGroupName: example.name,
 *     virtualNetworkName: exampleVirtualNetwork.name,
 *     addressPrefixes: ["10.0.2.0/24"],
 * });
 * const exampleWindowsVirtualMachineScaleSet = new azure.compute.WindowsVirtualMachineScaleSet("example", {
 *     name: "example-vmss",
 *     resourceGroupName: example.name,
 *     location: example.location,
 *     sku: "Standard_F2",
 *     instances: 1,
 *     adminPassword: "P@55w0rd1234!",
 *     adminUsername: "adminuser",
 *     computerNamePrefix: "vm-",
 *     sourceImageReference: {
 *         publisher: "MicrosoftWindowsServer",
 *         offer: "WindowsServer",
 *         sku: "2016-Datacenter-Server-Core",
 *         version: "latest",
 *     },
 *     osDisk: {
 *         storageAccountType: "Standard_LRS",
 *         caching: "ReadWrite",
 *     },
 *     networkInterfaces: [{
 *         name: "example",
 *         primary: true,
 *         ipConfigurations: [{
 *             name: "internal",
 *             primary: true,
 *             subnetId: internal.id,
 *         }],
 *     }],
 * });
 * ```
 *
 * ## Import
 *
 * Windows Virtual Machine Scale Sets can be imported using the `resource id`, e.g.
 *
 * ```sh
 * $ pulumi import azure:compute/windowsVirtualMachineScaleSet:WindowsVirtualMachineScaleSet example /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/mygroup1/providers/Microsoft.Compute/virtualMachineScaleSets/scaleset1
 * ```
 */
class WindowsVirtualMachineScaleSet extends pulumi.CustomResource {
    constructor(name, argsOrState, opts) {
        let resourceInputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState;
            resourceInputs["additionalCapabilities"] = state ? state.additionalCapabilities : undefined;
            resourceInputs["additionalUnattendContents"] = state ? state.additionalUnattendContents : undefined;
            resourceInputs["adminPassword"] = state ? state.adminPassword : undefined;
            resourceInputs["adminUsername"] = state ? state.adminUsername : undefined;
            resourceInputs["automaticInstanceRepair"] = state ? state.automaticInstanceRepair : undefined;
            resourceInputs["automaticOsUpgradePolicy"] = state ? state.automaticOsUpgradePolicy : undefined;
            resourceInputs["bootDiagnostics"] = state ? state.bootDiagnostics : undefined;
            resourceInputs["capacityReservationGroupId"] = state ? state.capacityReservationGroupId : undefined;
            resourceInputs["computerNamePrefix"] = state ? state.computerNamePrefix : undefined;
            resourceInputs["customData"] = state ? state.customData : undefined;
            resourceInputs["dataDisks"] = state ? state.dataDisks : undefined;
            resourceInputs["doNotRunExtensionsOnOverprovisionedMachines"] = state ? state.doNotRunExtensionsOnOverprovisionedMachines : undefined;
            resourceInputs["edgeZone"] = state ? state.edgeZone : undefined;
            resourceInputs["enableAutomaticUpdates"] = state ? state.enableAutomaticUpdates : undefined;
            resourceInputs["encryptionAtHostEnabled"] = state ? state.encryptionAtHostEnabled : undefined;
            resourceInputs["evictionPolicy"] = state ? state.evictionPolicy : undefined;
            resourceInputs["extensionOperationsEnabled"] = state ? state.extensionOperationsEnabled : undefined;
            resourceInputs["extensions"] = state ? state.extensions : undefined;
            resourceInputs["extensionsTimeBudget"] = state ? state.extensionsTimeBudget : undefined;
            resourceInputs["galleryApplications"] = state ? state.galleryApplications : undefined;
            resourceInputs["healthProbeId"] = state ? state.healthProbeId : undefined;
            resourceInputs["hostGroupId"] = state ? state.hostGroupId : undefined;
            resourceInputs["identity"] = state ? state.identity : undefined;
            resourceInputs["instances"] = state ? state.instances : undefined;
            resourceInputs["licenseType"] = state ? state.licenseType : undefined;
            resourceInputs["location"] = state ? state.location : undefined;
            resourceInputs["maxBidPrice"] = state ? state.maxBidPrice : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["networkInterfaces"] = state ? state.networkInterfaces : undefined;
            resourceInputs["osDisk"] = state ? state.osDisk : undefined;
            resourceInputs["overprovision"] = state ? state.overprovision : undefined;
            resourceInputs["plan"] = state ? state.plan : undefined;
            resourceInputs["platformFaultDomainCount"] = state ? state.platformFaultDomainCount : undefined;
            resourceInputs["priority"] = state ? state.priority : undefined;
            resourceInputs["provisionVmAgent"] = state ? state.provisionVmAgent : undefined;
            resourceInputs["proximityPlacementGroupId"] = state ? state.proximityPlacementGroupId : undefined;
            resourceInputs["resourceGroupName"] = state ? state.resourceGroupName : undefined;
            resourceInputs["rollingUpgradePolicy"] = state ? state.rollingUpgradePolicy : undefined;
            resourceInputs["scaleIn"] = state ? state.scaleIn : undefined;
            resourceInputs["secrets"] = state ? state.secrets : undefined;
            resourceInputs["secureBootEnabled"] = state ? state.secureBootEnabled : undefined;
            resourceInputs["singlePlacementGroup"] = state ? state.singlePlacementGroup : undefined;
            resourceInputs["sku"] = state ? state.sku : undefined;
            resourceInputs["sourceImageId"] = state ? state.sourceImageId : undefined;
            resourceInputs["sourceImageReference"] = state ? state.sourceImageReference : undefined;
            resourceInputs["spotRestore"] = state ? state.spotRestore : undefined;
            resourceInputs["tags"] = state ? state.tags : undefined;
            resourceInputs["terminationNotification"] = state ? state.terminationNotification : undefined;
            resourceInputs["timezone"] = state ? state.timezone : undefined;
            resourceInputs["uniqueId"] = state ? state.uniqueId : undefined;
            resourceInputs["upgradeMode"] = state ? state.upgradeMode : undefined;
            resourceInputs["userData"] = state ? state.userData : undefined;
            resourceInputs["vtpmEnabled"] = state ? state.vtpmEnabled : undefined;
            resourceInputs["winrmListeners"] = state ? state.winrmListeners : undefined;
            resourceInputs["zoneBalance"] = state ? state.zoneBalance : undefined;
            resourceInputs["zones"] = state ? state.zones : undefined;
        }
        else {
            const args = argsOrState;
            if ((!args || args.adminPassword === undefined) && !opts.urn) {
                throw new Error("Missing required property 'adminPassword'");
            }
            if ((!args || args.adminUsername === undefined) && !opts.urn) {
                throw new Error("Missing required property 'adminUsername'");
            }
            if ((!args || args.instances === undefined) && !opts.urn) {
                throw new Error("Missing required property 'instances'");
            }
            if ((!args || args.networkInterfaces === undefined) && !opts.urn) {
                throw new Error("Missing required property 'networkInterfaces'");
            }
            if ((!args || args.osDisk === undefined) && !opts.urn) {
                throw new Error("Missing required property 'osDisk'");
            }
            if ((!args || args.resourceGroupName === undefined) && !opts.urn) {
                throw new Error("Missing required property 'resourceGroupName'");
            }
            if ((!args || args.sku === undefined) && !opts.urn) {
                throw new Error("Missing required property 'sku'");
            }
            resourceInputs["additionalCapabilities"] = args ? args.additionalCapabilities : undefined;
            resourceInputs["additionalUnattendContents"] = args ? args.additionalUnattendContents : undefined;
            resourceInputs["adminPassword"] = (args === null || args === void 0 ? void 0 : args.adminPassword) ? pulumi.secret(args.adminPassword) : undefined;
            resourceInputs["adminUsername"] = args ? args.adminUsername : undefined;
            resourceInputs["automaticInstanceRepair"] = args ? args.automaticInstanceRepair : undefined;
            resourceInputs["automaticOsUpgradePolicy"] = args ? args.automaticOsUpgradePolicy : undefined;
            resourceInputs["bootDiagnostics"] = args ? args.bootDiagnostics : undefined;
            resourceInputs["capacityReservationGroupId"] = args ? args.capacityReservationGroupId : undefined;
            resourceInputs["computerNamePrefix"] = args ? args.computerNamePrefix : undefined;
            resourceInputs["customData"] = (args === null || args === void 0 ? void 0 : args.customData) ? pulumi.secret(args.customData) : undefined;
            resourceInputs["dataDisks"] = args ? args.dataDisks : undefined;
            resourceInputs["doNotRunExtensionsOnOverprovisionedMachines"] = args ? args.doNotRunExtensionsOnOverprovisionedMachines : undefined;
            resourceInputs["edgeZone"] = args ? args.edgeZone : undefined;
            resourceInputs["enableAutomaticUpdates"] = args ? args.enableAutomaticUpdates : undefined;
            resourceInputs["encryptionAtHostEnabled"] = args ? args.encryptionAtHostEnabled : undefined;
            resourceInputs["evictionPolicy"] = args ? args.evictionPolicy : undefined;
            resourceInputs["extensionOperationsEnabled"] = args ? args.extensionOperationsEnabled : undefined;
            resourceInputs["extensions"] = args ? args.extensions : undefined;
            resourceInputs["extensionsTimeBudget"] = args ? args.extensionsTimeBudget : undefined;
            resourceInputs["galleryApplications"] = args ? args.galleryApplications : undefined;
            resourceInputs["healthProbeId"] = args ? args.healthProbeId : undefined;
            resourceInputs["hostGroupId"] = args ? args.hostGroupId : undefined;
            resourceInputs["identity"] = args ? args.identity : undefined;
            resourceInputs["instances"] = args ? args.instances : undefined;
            resourceInputs["licenseType"] = args ? args.licenseType : undefined;
            resourceInputs["location"] = args ? args.location : undefined;
            resourceInputs["maxBidPrice"] = args ? args.maxBidPrice : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["networkInterfaces"] = args ? args.networkInterfaces : undefined;
            resourceInputs["osDisk"] = args ? args.osDisk : undefined;
            resourceInputs["overprovision"] = args ? args.overprovision : undefined;
            resourceInputs["plan"] = args ? args.plan : undefined;
            resourceInputs["platformFaultDomainCount"] = args ? args.platformFaultDomainCount : undefined;
            resourceInputs["priority"] = args ? args.priority : undefined;
            resourceInputs["provisionVmAgent"] = args ? args.provisionVmAgent : undefined;
            resourceInputs["proximityPlacementGroupId"] = args ? args.proximityPlacementGroupId : undefined;
            resourceInputs["resourceGroupName"] = args ? args.resourceGroupName : undefined;
            resourceInputs["rollingUpgradePolicy"] = args ? args.rollingUpgradePolicy : undefined;
            resourceInputs["scaleIn"] = args ? args.scaleIn : undefined;
            resourceInputs["secrets"] = args ? args.secrets : undefined;
            resourceInputs["secureBootEnabled"] = args ? args.secureBootEnabled : undefined;
            resourceInputs["singlePlacementGroup"] = args ? args.singlePlacementGroup : undefined;
            resourceInputs["sku"] = args ? args.sku : undefined;
            resourceInputs["sourceImageId"] = args ? args.sourceImageId : undefined;
            resourceInputs["sourceImageReference"] = args ? args.sourceImageReference : undefined;
            resourceInputs["spotRestore"] = args ? args.spotRestore : undefined;
            resourceInputs["tags"] = args ? args.tags : undefined;
            resourceInputs["terminationNotification"] = args ? args.terminationNotification : undefined;
            resourceInputs["timezone"] = args ? args.timezone : undefined;
            resourceInputs["upgradeMode"] = args ? args.upgradeMode : undefined;
            resourceInputs["userData"] = args ? args.userData : undefined;
            resourceInputs["vtpmEnabled"] = args ? args.vtpmEnabled : undefined;
            resourceInputs["winrmListeners"] = args ? args.winrmListeners : undefined;
            resourceInputs["zoneBalance"] = args ? args.zoneBalance : undefined;
            resourceInputs["zones"] = args ? args.zones : undefined;
            resourceInputs["uniqueId"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        const secretOpts = { additionalSecretOutputs: ["adminPassword", "customData"] };
        opts = pulumi.mergeOptions(opts, secretOpts);
        super(WindowsVirtualMachineScaleSet.__pulumiType, name, resourceInputs, opts);
    }
    /**
     * Get an existing WindowsVirtualMachineScaleSet resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    static get(name, id, state, opts) {
        return new WindowsVirtualMachineScaleSet(name, state, Object.assign(Object.assign({}, opts), { id: id }));
    }
    /**
     * Returns true if the given object is an instance of WindowsVirtualMachineScaleSet.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    static isInstance(obj) {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === WindowsVirtualMachineScaleSet.__pulumiType;
    }
}
exports.WindowsVirtualMachineScaleSet = WindowsVirtualMachineScaleSet;
/** @internal */
WindowsVirtualMachineScaleSet.__pulumiType = 'azure:compute/windowsVirtualMachineScaleSet:WindowsVirtualMachineScaleSet';
//# sourceMappingURL=windowsVirtualMachineScaleSet.js.map