"use strict";
// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***
Object.defineProperty(exports, "__esModule", { value: true });
exports.FrontdoorSecurityPolicy = void 0;
const pulumi = require("@pulumi/pulumi");
const utilities = require("../utilities");
/**
 * Manages a Front Door (standard/premium) Security Policy.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as azure from "@pulumi/azure";
 *
 * const example = new azure.core.ResourceGroup("example", {
 *     name: "example-cdn-frontdoor",
 *     location: "West Europe",
 * });
 * const exampleFrontdoorProfile = new azure.cdn.FrontdoorProfile("example", {
 *     name: "example-profile",
 *     resourceGroupName: example.name,
 *     skuName: "Standard_AzureFrontDoor",
 * });
 * const exampleFrontdoorFirewallPolicy = new azure.cdn.FrontdoorFirewallPolicy("example", {
 *     name: "exampleWAF",
 *     resourceGroupName: example.name,
 *     skuName: exampleFrontdoorProfile.skuName,
 *     enabled: true,
 *     mode: "Prevention",
 *     redirectUrl: "https://www.contoso.com",
 *     customBlockResponseStatusCode: 403,
 *     customBlockResponseBody: "PGh0bWw+CjxoZWFkZXI+PHRpdGxlPkhlbGxvPC90aXRsZT48L2hlYWRlcj4KPGJvZHk+CkhlbGxvIHdvcmxkCjwvYm9keT4KPC9odG1sPg==",
 *     customRules: [{
 *         name: "Rule1",
 *         enabled: true,
 *         priority: 1,
 *         rateLimitDurationInMinutes: 1,
 *         rateLimitThreshold: 10,
 *         type: "MatchRule",
 *         action: "Block",
 *         matchConditions: [{
 *             matchVariable: "RemoteAddr",
 *             operator: "IPMatch",
 *             negationCondition: false,
 *             matchValues: [
 *                 "192.168.1.0/24",
 *                 "10.0.1.0/24",
 *             ],
 *         }],
 *     }],
 * });
 * const exampleZone = new azure.dns.Zone("example", {
 *     name: "sub-domain.domain.com",
 *     resourceGroupName: example.name,
 * });
 * const exampleFrontdoorCustomDomain = new azure.cdn.FrontdoorCustomDomain("example", {
 *     name: "example-customDomain",
 *     cdnFrontdoorProfileId: exampleFrontdoorProfile.id,
 *     dnsZoneId: exampleZone.id,
 *     hostName: "contoso.fabrikam.com",
 *     tls: {
 *         certificateType: "ManagedCertificate",
 *         minimumTlsVersion: "TLS12",
 *     },
 * });
 * const exampleFrontdoorSecurityPolicy = new azure.cdn.FrontdoorSecurityPolicy("example", {
 *     name: "Example-Security-Policy",
 *     cdnFrontdoorProfileId: exampleFrontdoorProfile.id,
 *     securityPolicies: {
 *         firewall: {
 *             cdnFrontdoorFirewallPolicyId: exampleFrontdoorFirewallPolicy.id,
 *             association: {
 *                 domains: [{
 *                     cdnFrontdoorDomainId: exampleFrontdoorCustomDomain.id,
 *                 }],
 *                 patternsToMatch: "/*",
 *             },
 *         },
 *     },
 * });
 * ```
 *
 * ## Import
 *
 * Front Door Security Policies can be imported using the `resource id`, e.g.
 *
 * ```sh
 * $ pulumi import azure:cdn/frontdoorSecurityPolicy:FrontdoorSecurityPolicy example /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/resourceGroup1/providers/Microsoft.Cdn/profiles/profile1/securityPolicies/policy1
 * ```
 */
class FrontdoorSecurityPolicy extends pulumi.CustomResource {
    constructor(name, argsOrState, opts) {
        let resourceInputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState;
            resourceInputs["cdnFrontdoorProfileId"] = state ? state.cdnFrontdoorProfileId : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["securityPolicies"] = state ? state.securityPolicies : undefined;
        }
        else {
            const args = argsOrState;
            if ((!args || args.cdnFrontdoorProfileId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'cdnFrontdoorProfileId'");
            }
            if ((!args || args.securityPolicies === undefined) && !opts.urn) {
                throw new Error("Missing required property 'securityPolicies'");
            }
            resourceInputs["cdnFrontdoorProfileId"] = args ? args.cdnFrontdoorProfileId : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["securityPolicies"] = args ? args.securityPolicies : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(FrontdoorSecurityPolicy.__pulumiType, name, resourceInputs, opts);
    }
    /**
     * Get an existing FrontdoorSecurityPolicy resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    static get(name, id, state, opts) {
        return new FrontdoorSecurityPolicy(name, state, Object.assign(Object.assign({}, opts), { id: id }));
    }
    /**
     * Returns true if the given object is an instance of FrontdoorSecurityPolicy.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    static isInstance(obj) {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === FrontdoorSecurityPolicy.__pulumiType;
    }
}
exports.FrontdoorSecurityPolicy = FrontdoorSecurityPolicy;
/** @internal */
FrontdoorSecurityPolicy.__pulumiType = 'azure:cdn/frontdoorSecurityPolicy:FrontdoorSecurityPolicy';
//# sourceMappingURL=frontdoorSecurityPolicy.js.map