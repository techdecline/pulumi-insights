import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
/**
 * Manages a Hybrid Compute Machine.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as azure from "@pulumi/azure";
 *
 * const example = new azure.core.ResourceGroup("example", {
 *     name: "example-resources",
 *     location: "West Europe",
 * });
 * const exampleArcMachine = new azure.arcmachine.ArcMachine("example", {
 *     name: "example-arcmachine",
 *     resourceGroupName: example.name,
 *     location: example.location,
 *     kind: "SCVMM",
 *     identity: {
 *         type: "SystemAssigned",
 *     },
 *     tags: {
 *         environment: "example",
 *     },
 * });
 * ```
 *
 * ## Import
 *
 * Arc Machines can be imported using the `resource id`, e.g.
 *
 * ```sh
 * $ pulumi import azure:arcmachine/arcMachine:ArcMachine example /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/resourceGroup1/providers/Microsoft.HybridCompute/machines/machine1
 * ```
 */
export declare class ArcMachine extends pulumi.CustomResource {
    /**
     * Get an existing ArcMachine resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    static get(name: string, id: pulumi.Input<pulumi.ID>, state?: ArcMachineState, opts?: pulumi.CustomResourceOptions): ArcMachine;
    /**
     * Returns true if the given object is an instance of ArcMachine.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    static isInstance(obj: any): obj is ArcMachine;
    /**
     * An `identity` block as defined below.
     */
    readonly identity: pulumi.Output<outputs.arcmachine.ArcMachineIdentity | undefined>;
    /**
     * The kind of the Arc Machine. Possible values are `AVS`, `AWS`, `EPS`, `GCP`, `HCI`, `SCVMM` and `VMware`. Changing this forces a new resource to be created.
     */
    readonly kind: pulumi.Output<string>;
    /**
     * The Azure Region where the Arc Machine should exist. Changing this forces a new resource to be created.
     */
    readonly location: pulumi.Output<string>;
    /**
     * The name of the Arc machine. Changing this forces a new resource to be created.
     */
    readonly name: pulumi.Output<string>;
    /**
     * The name of the Resource Group where the Arc Machine should exist. Changing this forces a new resource to be created.
     */
    readonly resourceGroupName: pulumi.Output<string>;
    /**
     * A mapping of tags to assign to the Arc Machine.
     */
    readonly tags: pulumi.Output<{
        [key: string]: string;
    } | undefined>;
    /**
     * Create a ArcMachine resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: ArcMachineArgs, opts?: pulumi.CustomResourceOptions);
}
/**
 * Input properties used for looking up and filtering ArcMachine resources.
 */
export interface ArcMachineState {
    /**
     * An `identity` block as defined below.
     */
    identity?: pulumi.Input<inputs.arcmachine.ArcMachineIdentity>;
    /**
     * The kind of the Arc Machine. Possible values are `AVS`, `AWS`, `EPS`, `GCP`, `HCI`, `SCVMM` and `VMware`. Changing this forces a new resource to be created.
     */
    kind?: pulumi.Input<string>;
    /**
     * The Azure Region where the Arc Machine should exist. Changing this forces a new resource to be created.
     */
    location?: pulumi.Input<string>;
    /**
     * The name of the Arc machine. Changing this forces a new resource to be created.
     */
    name?: pulumi.Input<string>;
    /**
     * The name of the Resource Group where the Arc Machine should exist. Changing this forces a new resource to be created.
     */
    resourceGroupName?: pulumi.Input<string>;
    /**
     * A mapping of tags to assign to the Arc Machine.
     */
    tags?: pulumi.Input<{
        [key: string]: pulumi.Input<string>;
    }>;
}
/**
 * The set of arguments for constructing a ArcMachine resource.
 */
export interface ArcMachineArgs {
    /**
     * An `identity` block as defined below.
     */
    identity?: pulumi.Input<inputs.arcmachine.ArcMachineIdentity>;
    /**
     * The kind of the Arc Machine. Possible values are `AVS`, `AWS`, `EPS`, `GCP`, `HCI`, `SCVMM` and `VMware`. Changing this forces a new resource to be created.
     */
    kind: pulumi.Input<string>;
    /**
     * The Azure Region where the Arc Machine should exist. Changing this forces a new resource to be created.
     */
    location?: pulumi.Input<string>;
    /**
     * The name of the Arc machine. Changing this forces a new resource to be created.
     */
    name?: pulumi.Input<string>;
    /**
     * The name of the Resource Group where the Arc Machine should exist. Changing this forces a new resource to be created.
     */
    resourceGroupName: pulumi.Input<string>;
    /**
     * A mapping of tags to assign to the Arc Machine.
     */
    tags?: pulumi.Input<{
        [key: string]: pulumi.Input<string>;
    }>;
}
