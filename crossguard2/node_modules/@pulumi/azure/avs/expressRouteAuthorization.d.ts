import * as pulumi from "@pulumi/pulumi";
/**
 * Manages an Azure VMware Solution ExpressRoute Circuit Authorization.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as azure from "@pulumi/azure";
 *
 * const example = new azure.core.ResourceGroup("example", {
 *     name: "example-resources",
 *     location: "West Europe",
 * });
 * const examplePrivateCloud = new azure.avs.PrivateCloud("example", {
 *     name: "example-vmware-private-cloud",
 *     resourceGroupName: example.name,
 *     location: example.location,
 *     skuName: "av36",
 *     managementCluster: {
 *         size: 3,
 *     },
 *     networkSubnetCidr: "192.168.48.0/22",
 *     internetConnectionEnabled: false,
 *     nsxtPassword: "QazWsx13$Edc",
 *     vcenterPassword: "WsxEdc23$Rfv",
 * });
 * const exampleExpressRouteAuthorization = new azure.avs.ExpressRouteAuthorization("example", {
 *     name: "example-authorization",
 *     privateCloudId: examplePrivateCloud.id,
 * });
 * ```
 *
 * ## Import
 *
 * Azure VMware Solution ExpressRoute Circuit Authorizations can be imported using the `resource id`, e.g.
 *
 * ```sh
 * $ pulumi import azure:avs/expressRouteAuthorization:ExpressRouteAuthorization example /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/mygroup1/providers/Microsoft.AVS/privateClouds/privateCloud1/authorizations/authorization1
 * ```
 */
export declare class ExpressRouteAuthorization extends pulumi.CustomResource {
    /**
     * Get an existing ExpressRouteAuthorization resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    static get(name: string, id: pulumi.Input<pulumi.ID>, state?: ExpressRouteAuthorizationState, opts?: pulumi.CustomResourceOptions): ExpressRouteAuthorization;
    /**
     * Returns true if the given object is an instance of ExpressRouteAuthorization.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    static isInstance(obj: any): obj is ExpressRouteAuthorization;
    /**
     * The ID of the Azure VMware Solution ExpressRoute Circuit Authorization.
     */
    readonly expressRouteAuthorizationId: pulumi.Output<string>;
    /**
     * The key of the Azure VMware Solution ExpressRoute Circuit Authorization.
     */
    readonly expressRouteAuthorizationKey: pulumi.Output<string>;
    /**
     * The name which should be used for this Azure VMware Solution ExpressRoute Circuit Authorization. Changing this forces a new Azure VMware Solution ExpressRoute Circuit Authorization to be created.
     */
    readonly name: pulumi.Output<string>;
    /**
     * The ID of the Azure VMware Solution Private Cloud in which to create this Azure VMware Solution ExpressRoute Circuit Authorization. Changing this forces a new Azure VMware Solution ExpressRoute Circuit Authorization to be created.
     */
    readonly privateCloudId: pulumi.Output<string>;
    /**
     * Create a ExpressRouteAuthorization resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: ExpressRouteAuthorizationArgs, opts?: pulumi.CustomResourceOptions);
}
/**
 * Input properties used for looking up and filtering ExpressRouteAuthorization resources.
 */
export interface ExpressRouteAuthorizationState {
    /**
     * The ID of the Azure VMware Solution ExpressRoute Circuit Authorization.
     */
    expressRouteAuthorizationId?: pulumi.Input<string>;
    /**
     * The key of the Azure VMware Solution ExpressRoute Circuit Authorization.
     */
    expressRouteAuthorizationKey?: pulumi.Input<string>;
    /**
     * The name which should be used for this Azure VMware Solution ExpressRoute Circuit Authorization. Changing this forces a new Azure VMware Solution ExpressRoute Circuit Authorization to be created.
     */
    name?: pulumi.Input<string>;
    /**
     * The ID of the Azure VMware Solution Private Cloud in which to create this Azure VMware Solution ExpressRoute Circuit Authorization. Changing this forces a new Azure VMware Solution ExpressRoute Circuit Authorization to be created.
     */
    privateCloudId?: pulumi.Input<string>;
}
/**
 * The set of arguments for constructing a ExpressRouteAuthorization resource.
 */
export interface ExpressRouteAuthorizationArgs {
    /**
     * The name which should be used for this Azure VMware Solution ExpressRoute Circuit Authorization. Changing this forces a new Azure VMware Solution ExpressRoute Circuit Authorization to be created.
     */
    name?: pulumi.Input<string>;
    /**
     * The ID of the Azure VMware Solution Private Cloud in which to create this Azure VMware Solution ExpressRoute Circuit Authorization. Changing this forces a new Azure VMware Solution ExpressRoute Circuit Authorization to be created.
     */
    privateCloudId: pulumi.Input<string>;
}
