"use strict";
// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***
Object.defineProperty(exports, "__esModule", { value: true });
exports.CosmosdbDataConnection = void 0;
const pulumi = require("@pulumi/pulumi");
const utilities = require("../utilities");
/**
 * Manages a Kusto / Cosmos Database Data Connection.
 *
 * ## Import
 *
 * Kusto / Cosmos Database Data Connection can be imported using the `resource id`, e.g.
 *
 * ```sh
 * $ pulumi import azure:kusto/cosmosdbDataConnection:CosmosdbDataConnection example /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/group1/providers/Microsoft.Kusto/clusters/cluster1/databases/database1/dataConnections/dataConnection1
 * ```
 */
class CosmosdbDataConnection extends pulumi.CustomResource {
    constructor(name, argsOrState, opts) {
        let resourceInputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState;
            resourceInputs["cosmosdbContainerId"] = state ? state.cosmosdbContainerId : undefined;
            resourceInputs["kustoDatabaseId"] = state ? state.kustoDatabaseId : undefined;
            resourceInputs["location"] = state ? state.location : undefined;
            resourceInputs["managedIdentityId"] = state ? state.managedIdentityId : undefined;
            resourceInputs["mappingRuleName"] = state ? state.mappingRuleName : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["retrievalStartDate"] = state ? state.retrievalStartDate : undefined;
            resourceInputs["tableName"] = state ? state.tableName : undefined;
        }
        else {
            const args = argsOrState;
            if ((!args || args.cosmosdbContainerId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'cosmosdbContainerId'");
            }
            if ((!args || args.kustoDatabaseId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'kustoDatabaseId'");
            }
            if ((!args || args.managedIdentityId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'managedIdentityId'");
            }
            if ((!args || args.tableName === undefined) && !opts.urn) {
                throw new Error("Missing required property 'tableName'");
            }
            resourceInputs["cosmosdbContainerId"] = args ? args.cosmosdbContainerId : undefined;
            resourceInputs["kustoDatabaseId"] = args ? args.kustoDatabaseId : undefined;
            resourceInputs["location"] = args ? args.location : undefined;
            resourceInputs["managedIdentityId"] = args ? args.managedIdentityId : undefined;
            resourceInputs["mappingRuleName"] = args ? args.mappingRuleName : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["retrievalStartDate"] = args ? args.retrievalStartDate : undefined;
            resourceInputs["tableName"] = args ? args.tableName : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(CosmosdbDataConnection.__pulumiType, name, resourceInputs, opts);
    }
    /**
     * Get an existing CosmosdbDataConnection resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    static get(name, id, state, opts) {
        return new CosmosdbDataConnection(name, state, Object.assign(Object.assign({}, opts), { id: id }));
    }
    /**
     * Returns true if the given object is an instance of CosmosdbDataConnection.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    static isInstance(obj) {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === CosmosdbDataConnection.__pulumiType;
    }
}
exports.CosmosdbDataConnection = CosmosdbDataConnection;
/** @internal */
CosmosdbDataConnection.__pulumiType = 'azure:kusto/cosmosdbDataConnection:CosmosdbDataConnection';
//# sourceMappingURL=cosmosdbDataConnection.js.map