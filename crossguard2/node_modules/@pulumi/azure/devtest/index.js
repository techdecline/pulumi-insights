"use strict";
// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***
Object.defineProperty(exports, "__esModule", { value: true });
exports.WindowsVirtualMachine = exports.VirtualNetwork = exports.Schedule = exports.Policy = exports.LinuxVirtualMachine = exports.Lab = exports.GlobalVMShutdownSchedule = exports.getVirtualNetworkOutput = exports.getVirtualNetwork = exports.getLabOutput = exports.getLab = void 0;
const pulumi = require("@pulumi/pulumi");
const utilities = require("../utilities");
exports.getLab = null;
exports.getLabOutput = null;
utilities.lazyLoad(exports, ["getLab", "getLabOutput"], () => require("./getLab"));
exports.getVirtualNetwork = null;
exports.getVirtualNetworkOutput = null;
utilities.lazyLoad(exports, ["getVirtualNetwork", "getVirtualNetworkOutput"], () => require("./getVirtualNetwork"));
exports.GlobalVMShutdownSchedule = null;
utilities.lazyLoad(exports, ["GlobalVMShutdownSchedule"], () => require("./globalVMShutdownSchedule"));
exports.Lab = null;
utilities.lazyLoad(exports, ["Lab"], () => require("./lab"));
exports.LinuxVirtualMachine = null;
utilities.lazyLoad(exports, ["LinuxVirtualMachine"], () => require("./linuxVirtualMachine"));
exports.Policy = null;
utilities.lazyLoad(exports, ["Policy"], () => require("./policy"));
exports.Schedule = null;
utilities.lazyLoad(exports, ["Schedule"], () => require("./schedule"));
exports.VirtualNetwork = null;
utilities.lazyLoad(exports, ["VirtualNetwork"], () => require("./virtualNetwork"));
exports.WindowsVirtualMachine = null;
utilities.lazyLoad(exports, ["WindowsVirtualMachine"], () => require("./windowsVirtualMachine"));
const _module = {
    version: utilities.getVersion(),
    construct: (name, type, urn) => {
        switch (type) {
            case "azure:devtest/globalVMShutdownSchedule:GlobalVMShutdownSchedule":
                return new exports.GlobalVMShutdownSchedule(name, undefined, { urn });
            case "azure:devtest/lab:Lab":
                return new exports.Lab(name, undefined, { urn });
            case "azure:devtest/linuxVirtualMachine:LinuxVirtualMachine":
                return new exports.LinuxVirtualMachine(name, undefined, { urn });
            case "azure:devtest/policy:Policy":
                return new exports.Policy(name, undefined, { urn });
            case "azure:devtest/schedule:Schedule":
                return new exports.Schedule(name, undefined, { urn });
            case "azure:devtest/virtualNetwork:VirtualNetwork":
                return new exports.VirtualNetwork(name, undefined, { urn });
            case "azure:devtest/windowsVirtualMachine:WindowsVirtualMachine":
                return new exports.WindowsVirtualMachine(name, undefined, { urn });
            default:
                throw new Error(`unknown resource type ${type}`);
        }
    },
};
pulumi.runtime.registerResourceModule("azure", "devtest/globalVMShutdownSchedule", _module);
pulumi.runtime.registerResourceModule("azure", "devtest/lab", _module);
pulumi.runtime.registerResourceModule("azure", "devtest/linuxVirtualMachine", _module);
pulumi.runtime.registerResourceModule("azure", "devtest/policy", _module);
pulumi.runtime.registerResourceModule("azure", "devtest/schedule", _module);
pulumi.runtime.registerResourceModule("azure", "devtest/virtualNetwork", _module);
pulumi.runtime.registerResourceModule("azure", "devtest/windowsVirtualMachine", _module);
//# sourceMappingURL=index.js.map