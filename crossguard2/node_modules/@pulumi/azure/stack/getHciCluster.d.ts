import * as pulumi from "@pulumi/pulumi";
import * as outputs from "../types/output";
/**
 * Use this data source to access information about an existing Azure Stack HCI Cluster instance.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as azure from "@pulumi/azure";
 *
 * const example = azure.stack.getHciCluster({
 *     name: "existing",
 *     resourceGroupName: "existing",
 * });
 * export const id = example.then(example => example.id);
 * export const location = example.then(example => example.location);
 * export const clientId = example.then(example => example.clientId);
 * ```
 */
export declare function getHciCluster(args: GetHciClusterArgs, opts?: pulumi.InvokeOptions): Promise<GetHciClusterResult>;
/**
 * A collection of arguments for invoking getHciCluster.
 */
export interface GetHciClusterArgs {
    /**
     * The name of the Azure Stack HCI Cluster.
     */
    name: string;
    /**
     * The name of the Resource Group where the Azure Stack HCI Cluster exists.
     */
    resourceGroupName: string;
}
/**
 * A collection of values returned by getHciCluster.
 */
export interface GetHciClusterResult {
    /**
     * The ID of the Automanage Configuration assigned to the Azure Stack HCI Cluster.
     */
    readonly automanageConfigurationId: string;
    /**
     * The Client ID of the Azure Active Directory used by the Azure Stack HCI Cluster.
     */
    readonly clientId: string;
    /**
     * An immutable UUID for the Azure Stack HCI Cluster.
     */
    readonly cloudId: string;
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    /**
     * An `identity` block as defined below.
     */
    readonly identities: outputs.stack.GetHciClusterIdentity[];
    /**
     * The Azure Region where the Azure Stack HCI Cluster exists.
     */
    readonly location: string;
    readonly name: string;
    readonly resourceGroupName: string;
    /**
     * The object ID of the Resource Provider Service Principal.
     */
    readonly resourceProviderObjectId: string;
    /**
     * The region specific Data Path Endpoint of the Azure Stack HCI Cluster.
     */
    readonly serviceEndpoint: string;
    /**
     * A mapping of tags assigned to the Azure Stack HCI Cluster.
     */
    readonly tags: {
        [key: string]: string;
    };
    /**
     * The Tenant ID associated with this Managed Service Identity.
     */
    readonly tenantId: string;
}
/**
 * Use this data source to access information about an existing Azure Stack HCI Cluster instance.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as azure from "@pulumi/azure";
 *
 * const example = azure.stack.getHciCluster({
 *     name: "existing",
 *     resourceGroupName: "existing",
 * });
 * export const id = example.then(example => example.id);
 * export const location = example.then(example => example.location);
 * export const clientId = example.then(example => example.clientId);
 * ```
 */
export declare function getHciClusterOutput(args: GetHciClusterOutputArgs, opts?: pulumi.InvokeOutputOptions): pulumi.Output<GetHciClusterResult>;
/**
 * A collection of arguments for invoking getHciCluster.
 */
export interface GetHciClusterOutputArgs {
    /**
     * The name of the Azure Stack HCI Cluster.
     */
    name: pulumi.Input<string>;
    /**
     * The name of the Resource Group where the Azure Stack HCI Cluster exists.
     */
    resourceGroupName: pulumi.Input<string>;
}
