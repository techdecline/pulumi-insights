"use strict";
// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***
Object.defineProperty(exports, "__esModule", { value: true });
exports.HciVirtualHardDisk = exports.HciStoragePath = exports.HciNetworkInterface = exports.HciMarketplaceGalleryImage = exports.HciLogicalNetwork = exports.HciExtension = exports.HciDeploymentSetting = exports.HciCluster = exports.getHciClusterOutput = exports.getHciCluster = void 0;
const pulumi = require("@pulumi/pulumi");
const utilities = require("../utilities");
exports.getHciCluster = null;
exports.getHciClusterOutput = null;
utilities.lazyLoad(exports, ["getHciCluster", "getHciClusterOutput"], () => require("./getHciCluster"));
exports.HciCluster = null;
utilities.lazyLoad(exports, ["HciCluster"], () => require("./hciCluster"));
exports.HciDeploymentSetting = null;
utilities.lazyLoad(exports, ["HciDeploymentSetting"], () => require("./hciDeploymentSetting"));
exports.HciExtension = null;
utilities.lazyLoad(exports, ["HciExtension"], () => require("./hciExtension"));
exports.HciLogicalNetwork = null;
utilities.lazyLoad(exports, ["HciLogicalNetwork"], () => require("./hciLogicalNetwork"));
exports.HciMarketplaceGalleryImage = null;
utilities.lazyLoad(exports, ["HciMarketplaceGalleryImage"], () => require("./hciMarketplaceGalleryImage"));
exports.HciNetworkInterface = null;
utilities.lazyLoad(exports, ["HciNetworkInterface"], () => require("./hciNetworkInterface"));
exports.HciStoragePath = null;
utilities.lazyLoad(exports, ["HciStoragePath"], () => require("./hciStoragePath"));
exports.HciVirtualHardDisk = null;
utilities.lazyLoad(exports, ["HciVirtualHardDisk"], () => require("./hciVirtualHardDisk"));
const _module = {
    version: utilities.getVersion(),
    construct: (name, type, urn) => {
        switch (type) {
            case "azure:stack/hciCluster:HciCluster":
                return new exports.HciCluster(name, undefined, { urn });
            case "azure:stack/hciDeploymentSetting:HciDeploymentSetting":
                return new exports.HciDeploymentSetting(name, undefined, { urn });
            case "azure:stack/hciExtension:HciExtension":
                return new exports.HciExtension(name, undefined, { urn });
            case "azure:stack/hciLogicalNetwork:HciLogicalNetwork":
                return new exports.HciLogicalNetwork(name, undefined, { urn });
            case "azure:stack/hciMarketplaceGalleryImage:HciMarketplaceGalleryImage":
                return new exports.HciMarketplaceGalleryImage(name, undefined, { urn });
            case "azure:stack/hciNetworkInterface:HciNetworkInterface":
                return new exports.HciNetworkInterface(name, undefined, { urn });
            case "azure:stack/hciStoragePath:HciStoragePath":
                return new exports.HciStoragePath(name, undefined, { urn });
            case "azure:stack/hciVirtualHardDisk:HciVirtualHardDisk":
                return new exports.HciVirtualHardDisk(name, undefined, { urn });
            default:
                throw new Error(`unknown resource type ${type}`);
        }
    },
};
pulumi.runtime.registerResourceModule("azure", "stack/hciCluster", _module);
pulumi.runtime.registerResourceModule("azure", "stack/hciDeploymentSetting", _module);
pulumi.runtime.registerResourceModule("azure", "stack/hciExtension", _module);
pulumi.runtime.registerResourceModule("azure", "stack/hciLogicalNetwork", _module);
pulumi.runtime.registerResourceModule("azure", "stack/hciMarketplaceGalleryImage", _module);
pulumi.runtime.registerResourceModule("azure", "stack/hciNetworkInterface", _module);
pulumi.runtime.registerResourceModule("azure", "stack/hciStoragePath", _module);
pulumi.runtime.registerResourceModule("azure", "stack/hciVirtualHardDisk", _module);
//# sourceMappingURL=index.js.map