import * as pulumi from "@pulumi/pulumi";
/**
 * Manages a Container App Environment Certificate.
 *
 * ## Import
 *
 * A Container App Environment Certificate can be imported using the `resource id`, e.g.
 *
 * ```sh
 * $ pulumi import azure:containerapp/environmentCertificate:EnvironmentCertificate example "/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/resGroup1/providers/Microsoft.App/managedEnvironments/myenv/certificates/mycertificate"
 * ```
 */
export declare class EnvironmentCertificate extends pulumi.CustomResource {
    /**
     * Get an existing EnvironmentCertificate resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    static get(name: string, id: pulumi.Input<pulumi.ID>, state?: EnvironmentCertificateState, opts?: pulumi.CustomResourceOptions): EnvironmentCertificate;
    /**
     * Returns true if the given object is an instance of EnvironmentCertificate.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    static isInstance(obj: any): obj is EnvironmentCertificate;
    /**
     * The Certificate Private Key as a base64 encoded PFX or PEM. Changing this forces a new resource to be created.
     */
    readonly certificateBlobBase64: pulumi.Output<string>;
    /**
     * The password for the Certificate. Changing this forces a new resource to be created.
     */
    readonly certificatePassword: pulumi.Output<string>;
    /**
     * The Container App Managed Environment ID to configure this Certificate on. Changing this forces a new resource to be created.
     */
    readonly containerAppEnvironmentId: pulumi.Output<string>;
    /**
     * The expiration date for the Certificate.
     */
    readonly expirationDate: pulumi.Output<string>;
    /**
     * The date of issue for the Certificate.
     */
    readonly issueDate: pulumi.Output<string>;
    /**
     * The Certificate Issuer.
     */
    readonly issuer: pulumi.Output<string>;
    /**
     * The name of the Container Apps Environment Certificate. Changing this forces a new resource to be created.
     */
    readonly name: pulumi.Output<string>;
    /**
     * The Subject Name for the Certificate.
     */
    readonly subjectName: pulumi.Output<string>;
    /**
     * A mapping of tags to assign to the resource.
     */
    readonly tags: pulumi.Output<{
        [key: string]: string;
    } | undefined>;
    /**
     * The Thumbprint of the Certificate.
     */
    readonly thumbprint: pulumi.Output<string>;
    /**
     * Create a EnvironmentCertificate resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: EnvironmentCertificateArgs, opts?: pulumi.CustomResourceOptions);
}
/**
 * Input properties used for looking up and filtering EnvironmentCertificate resources.
 */
export interface EnvironmentCertificateState {
    /**
     * The Certificate Private Key as a base64 encoded PFX or PEM. Changing this forces a new resource to be created.
     */
    certificateBlobBase64?: pulumi.Input<string>;
    /**
     * The password for the Certificate. Changing this forces a new resource to be created.
     */
    certificatePassword?: pulumi.Input<string>;
    /**
     * The Container App Managed Environment ID to configure this Certificate on. Changing this forces a new resource to be created.
     */
    containerAppEnvironmentId?: pulumi.Input<string>;
    /**
     * The expiration date for the Certificate.
     */
    expirationDate?: pulumi.Input<string>;
    /**
     * The date of issue for the Certificate.
     */
    issueDate?: pulumi.Input<string>;
    /**
     * The Certificate Issuer.
     */
    issuer?: pulumi.Input<string>;
    /**
     * The name of the Container Apps Environment Certificate. Changing this forces a new resource to be created.
     */
    name?: pulumi.Input<string>;
    /**
     * The Subject Name for the Certificate.
     */
    subjectName?: pulumi.Input<string>;
    /**
     * A mapping of tags to assign to the resource.
     */
    tags?: pulumi.Input<{
        [key: string]: pulumi.Input<string>;
    }>;
    /**
     * The Thumbprint of the Certificate.
     */
    thumbprint?: pulumi.Input<string>;
}
/**
 * The set of arguments for constructing a EnvironmentCertificate resource.
 */
export interface EnvironmentCertificateArgs {
    /**
     * The Certificate Private Key as a base64 encoded PFX or PEM. Changing this forces a new resource to be created.
     */
    certificateBlobBase64: pulumi.Input<string>;
    /**
     * The password for the Certificate. Changing this forces a new resource to be created.
     */
    certificatePassword: pulumi.Input<string>;
    /**
     * The Container App Managed Environment ID to configure this Certificate on. Changing this forces a new resource to be created.
     */
    containerAppEnvironmentId: pulumi.Input<string>;
    /**
     * The name of the Container Apps Environment Certificate. Changing this forces a new resource to be created.
     */
    name?: pulumi.Input<string>;
    /**
     * A mapping of tags to assign to the resource.
     */
    tags?: pulumi.Input<{
        [key: string]: pulumi.Input<string>;
    }>;
}
