import * as pulumi from "@pulumi/pulumi";
/**
 * Manages a Container App Custom Domain.
 *
 * ### Managed Certificate
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as azure from "@pulumi/azure";
 * import * as std from "@pulumi/std";
 *
 * const example = new azure.containerapp.CustomDomain("example", {
 *     name: std.trimprefix({
 *         input: api.fqdn,
 *         prefix: "asuid.",
 *     }).then(invoke => std.trimsuffix({
 *         input: invoke.result,
 *         suffix: ".",
 *     })).then(invoke => invoke.result),
 *     containerAppId: exampleAzurermContainerApp.id,
 * });
 * ```
 *
 * ## Import
 *
 * A Container App Custom Domain can be imported using the `resource id`, e.g.
 *
 * ```sh
 * $ pulumi import azure:containerapp/customDomain:CustomDomain example "/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/resGroup1/providers/Microsoft.App/containerApps/myContainerApp/customDomainName/mycustomdomain.example.com"
 * ```
 */
export declare class CustomDomain extends pulumi.CustomResource {
    /**
     * Get an existing CustomDomain resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    static get(name: string, id: pulumi.Input<pulumi.ID>, state?: CustomDomainState, opts?: pulumi.CustomResourceOptions): CustomDomain;
    /**
     * Returns true if the given object is an instance of CustomDomain.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    static isInstance(obj: any): obj is CustomDomain;
    /**
     * The Binding type. Possible values include `Disabled` and `SniEnabled`.
     */
    readonly certificateBindingType: pulumi.Output<string | undefined>;
    /**
     * The ID of the Container App Environment Certificate to use. Changing this forces a new resource to be created.
     *
     * > **NOTE:** Omit this value if you wish to use an Azure Managed certificate. You must create the relevant DNS verification steps before this process will be successful.
     */
    readonly containerAppEnvironmentCertificateId: pulumi.Output<string | undefined>;
    /**
     * The ID of the Container App Environment Managed Certificate to use.
     */
    readonly containerAppEnvironmentManagedCertificateId: pulumi.Output<string>;
    /**
     * The ID of the Container App to which this Custom Domain should be bound. Changing this forces a new resource to be created.
     */
    readonly containerAppId: pulumi.Output<string>;
    /**
     * The fully qualified name of the Custom Domain. Must be the CN or a named SAN in the certificate specified by the `containerAppEnvironmentCertificateId`. Changing this forces a new resource to be created.
     *
     * > **Note:** The Custom Domain verification TXT record requires a prefix of `asuid.`, however, this must be trimmed from the `name` property here. See the [official docs](https://learn.microsoft.com/en-us/azure/container-apps/custom-domains-certificates) for more information.
     */
    readonly name: pulumi.Output<string>;
    /**
     * Create a CustomDomain resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: CustomDomainArgs, opts?: pulumi.CustomResourceOptions);
}
/**
 * Input properties used for looking up and filtering CustomDomain resources.
 */
export interface CustomDomainState {
    /**
     * The Binding type. Possible values include `Disabled` and `SniEnabled`.
     */
    certificateBindingType?: pulumi.Input<string>;
    /**
     * The ID of the Container App Environment Certificate to use. Changing this forces a new resource to be created.
     *
     * > **NOTE:** Omit this value if you wish to use an Azure Managed certificate. You must create the relevant DNS verification steps before this process will be successful.
     */
    containerAppEnvironmentCertificateId?: pulumi.Input<string>;
    /**
     * The ID of the Container App Environment Managed Certificate to use.
     */
    containerAppEnvironmentManagedCertificateId?: pulumi.Input<string>;
    /**
     * The ID of the Container App to which this Custom Domain should be bound. Changing this forces a new resource to be created.
     */
    containerAppId?: pulumi.Input<string>;
    /**
     * The fully qualified name of the Custom Domain. Must be the CN or a named SAN in the certificate specified by the `containerAppEnvironmentCertificateId`. Changing this forces a new resource to be created.
     *
     * > **Note:** The Custom Domain verification TXT record requires a prefix of `asuid.`, however, this must be trimmed from the `name` property here. See the [official docs](https://learn.microsoft.com/en-us/azure/container-apps/custom-domains-certificates) for more information.
     */
    name?: pulumi.Input<string>;
}
/**
 * The set of arguments for constructing a CustomDomain resource.
 */
export interface CustomDomainArgs {
    /**
     * The Binding type. Possible values include `Disabled` and `SniEnabled`.
     */
    certificateBindingType?: pulumi.Input<string>;
    /**
     * The ID of the Container App Environment Certificate to use. Changing this forces a new resource to be created.
     *
     * > **NOTE:** Omit this value if you wish to use an Azure Managed certificate. You must create the relevant DNS verification steps before this process will be successful.
     */
    containerAppEnvironmentCertificateId?: pulumi.Input<string>;
    /**
     * The ID of the Container App to which this Custom Domain should be bound. Changing this forces a new resource to be created.
     */
    containerAppId: pulumi.Input<string>;
    /**
     * The fully qualified name of the Custom Domain. Must be the CN or a named SAN in the certificate specified by the `containerAppEnvironmentCertificateId`. Changing this forces a new resource to be created.
     *
     * > **Note:** The Custom Domain verification TXT record requires a prefix of `asuid.`, however, this must be trimmed from the `name` property here. See the [official docs](https://learn.microsoft.com/en-us/azure/container-apps/custom-domains-certificates) for more information.
     */
    name?: pulumi.Input<string>;
}
