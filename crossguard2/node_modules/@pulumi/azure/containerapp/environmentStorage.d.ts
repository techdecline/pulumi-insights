import * as pulumi from "@pulumi/pulumi";
/**
 * Manages a Container App Environment Storage.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as azure from "@pulumi/azure";
 *
 * const example = new azure.core.ResourceGroup("example", {
 *     name: "example-resources",
 *     location: "West Europe",
 * });
 * const exampleAnalyticsWorkspace = new azure.operationalinsights.AnalyticsWorkspace("example", {
 *     name: "acctest-01",
 *     location: example.location,
 *     resourceGroupName: example.name,
 *     sku: "PerGB2018",
 *     retentionInDays: 30,
 * });
 * const exampleEnvironment = new azure.containerapp.Environment("example", {
 *     name: "myEnvironment",
 *     location: example.location,
 *     resourceGroupName: example.name,
 *     logAnalyticsWorkspaceId: exampleAnalyticsWorkspace.id,
 * });
 * const exampleAccount = new azure.storage.Account("example", {
 *     name: "azureteststorage",
 *     resourceGroupName: example.name,
 *     location: example.location,
 *     accountTier: "Standard",
 *     accountReplicationType: "LRS",
 * });
 * const exampleShare = new azure.storage.Share("example", {
 *     name: "sharename",
 *     storageAccountName: exampleAccount.name,
 *     quota: 5,
 * });
 * const exampleEnvironmentStorage = new azure.containerapp.EnvironmentStorage("example", {
 *     name: "mycontainerappstorage",
 *     containerAppEnvironmentId: exampleEnvironment.id,
 *     accountName: exampleAccount.name,
 *     shareName: exampleShare.name,
 *     accessKey: exampleAccount.primaryAccessKey,
 *     accessMode: "ReadOnly",
 * });
 * ```
 *
 * ## Import
 *
 * A Container App Environment Storage can be imported using the `resource id`, e.g.
 *
 * ```sh
 * $ pulumi import azure:containerapp/environmentStorage:EnvironmentStorage example "/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/resGroup1/providers/Microsoft.App/managedEnvironments/myEnvironment/storages/mystorage"
 * ```
 */
export declare class EnvironmentStorage extends pulumi.CustomResource {
    /**
     * Get an existing EnvironmentStorage resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    static get(name: string, id: pulumi.Input<pulumi.ID>, state?: EnvironmentStorageState, opts?: pulumi.CustomResourceOptions): EnvironmentStorage;
    /**
     * Returns true if the given object is an instance of EnvironmentStorage.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    static isInstance(obj: any): obj is EnvironmentStorage;
    /**
     * The Storage Account Access Key.
     */
    readonly accessKey: pulumi.Output<string>;
    /**
     * The access mode to connect this storage to the Container App. Possible values include `ReadOnly` and `ReadWrite`. Changing this forces a new resource to be created.
     */
    readonly accessMode: pulumi.Output<string>;
    /**
     * The Azure Storage Account in which the Share to be used is located. Changing this forces a new resource to be created.
     */
    readonly accountName: pulumi.Output<string>;
    /**
     * The ID of the Container App Environment to which this storage belongs. Changing this forces a new resource to be created.
     */
    readonly containerAppEnvironmentId: pulumi.Output<string>;
    /**
     * The name for this Container App Environment Storage. Changing this forces a new resource to be created.
     */
    readonly name: pulumi.Output<string>;
    /**
     * The name of the Azure Storage Share to use. Changing this forces a new resource to be created.
     */
    readonly shareName: pulumi.Output<string>;
    /**
     * Create a EnvironmentStorage resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: EnvironmentStorageArgs, opts?: pulumi.CustomResourceOptions);
}
/**
 * Input properties used for looking up and filtering EnvironmentStorage resources.
 */
export interface EnvironmentStorageState {
    /**
     * The Storage Account Access Key.
     */
    accessKey?: pulumi.Input<string>;
    /**
     * The access mode to connect this storage to the Container App. Possible values include `ReadOnly` and `ReadWrite`. Changing this forces a new resource to be created.
     */
    accessMode?: pulumi.Input<string>;
    /**
     * The Azure Storage Account in which the Share to be used is located. Changing this forces a new resource to be created.
     */
    accountName?: pulumi.Input<string>;
    /**
     * The ID of the Container App Environment to which this storage belongs. Changing this forces a new resource to be created.
     */
    containerAppEnvironmentId?: pulumi.Input<string>;
    /**
     * The name for this Container App Environment Storage. Changing this forces a new resource to be created.
     */
    name?: pulumi.Input<string>;
    /**
     * The name of the Azure Storage Share to use. Changing this forces a new resource to be created.
     */
    shareName?: pulumi.Input<string>;
}
/**
 * The set of arguments for constructing a EnvironmentStorage resource.
 */
export interface EnvironmentStorageArgs {
    /**
     * The Storage Account Access Key.
     */
    accessKey: pulumi.Input<string>;
    /**
     * The access mode to connect this storage to the Container App. Possible values include `ReadOnly` and `ReadWrite`. Changing this forces a new resource to be created.
     */
    accessMode: pulumi.Input<string>;
    /**
     * The Azure Storage Account in which the Share to be used is located. Changing this forces a new resource to be created.
     */
    accountName: pulumi.Input<string>;
    /**
     * The ID of the Container App Environment to which this storage belongs. Changing this forces a new resource to be created.
     */
    containerAppEnvironmentId: pulumi.Input<string>;
    /**
     * The name for this Container App Environment Storage. Changing this forces a new resource to be created.
     */
    name?: pulumi.Input<string>;
    /**
     * The name of the Azure Storage Share to use. Changing this forces a new resource to be created.
     */
    shareName: pulumi.Input<string>;
}
