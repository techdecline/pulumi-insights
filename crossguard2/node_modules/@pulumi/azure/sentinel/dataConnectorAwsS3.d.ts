import * as pulumi from "@pulumi/pulumi";
/**
 * Manages a AWS S3 Data Connector.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as azure from "@pulumi/azure";
 *
 * const example = new azure.core.ResourceGroup("example", {
 *     name: "example-rg",
 *     location: "West Europe",
 * });
 * const exampleAnalyticsWorkspace = new azure.operationalinsights.AnalyticsWorkspace("example", {
 *     name: "example-workspace",
 *     location: example.location,
 *     resourceGroupName: example.name,
 *     sku: "PerGB2018",
 * });
 * const exampleLogAnalyticsWorkspaceOnboarding = new azure.sentinel.LogAnalyticsWorkspaceOnboarding("example", {workspaceId: exampleAnalyticsWorkspace.id});
 * const exampleDataConnectorAwsS3 = new azure.sentinel.DataConnectorAwsS3("example", {
 *     name: "example",
 *     logAnalyticsWorkspaceId: exampleLogAnalyticsWorkspaceOnboarding.workspaceId,
 *     awsRoleArn: "arn:aws:iam::000000000000:role/role1",
 *     destinationTable: "AWSGuardDuty",
 *     sqsUrls: ["https://sqs.us-east-1.amazonaws.com/000000000000/example"],
 * });
 * ```
 *
 * ## Import
 *
 * AWS S3 Data Connectors can be imported using the `resource id`, e.g.
 *
 * ```sh
 * $ pulumi import azure:sentinel/dataConnectorAwsS3:DataConnectorAwsS3 example /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/group1/providers/Microsoft.OperationalInsights/workspaces/workspace1/providers/Microsoft.SecurityInsights/dataConnectors/dc1
 * ```
 */
export declare class DataConnectorAwsS3 extends pulumi.CustomResource {
    /**
     * Get an existing DataConnectorAwsS3 resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    static get(name: string, id: pulumi.Input<pulumi.ID>, state?: DataConnectorAwsS3State, opts?: pulumi.CustomResourceOptions): DataConnectorAwsS3;
    /**
     * Returns true if the given object is an instance of DataConnectorAwsS3.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    static isInstance(obj: any): obj is DataConnectorAwsS3;
    /**
     * The ARN of the AWS role, which is connected to this AWS CloudTrail Data Connector. See the [Azure document](https://docs.microsoft.com/azure/sentinel/connect-aws?tabs=s3#create-an-aws-assumed-role-and-grant-access-to-the-aws-sentinel-account) for details.
     */
    readonly awsRoleArn: pulumi.Output<string>;
    /**
     * The name of the Log Analytics table that will store the ingested data.
     */
    readonly destinationTable: pulumi.Output<string>;
    /**
     * The ID of the Log Analytics Workspace that this AWS S3 Data Connector resides in. Changing this forces a new AWS S3 Data Connector to be created.
     */
    readonly logAnalyticsWorkspaceId: pulumi.Output<string>;
    /**
     * The name which should be used for this AWS S3 Data Connector. Changing this forces a new AWS S3 Data Connector to be created.
     */
    readonly name: pulumi.Output<string>;
    /**
     * Specifies a list of AWS SQS urls for the AWS S3 Data Connector.
     */
    readonly sqsUrls: pulumi.Output<string[]>;
    /**
     * Create a DataConnectorAwsS3 resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: DataConnectorAwsS3Args, opts?: pulumi.CustomResourceOptions);
}
/**
 * Input properties used for looking up and filtering DataConnectorAwsS3 resources.
 */
export interface DataConnectorAwsS3State {
    /**
     * The ARN of the AWS role, which is connected to this AWS CloudTrail Data Connector. See the [Azure document](https://docs.microsoft.com/azure/sentinel/connect-aws?tabs=s3#create-an-aws-assumed-role-and-grant-access-to-the-aws-sentinel-account) for details.
     */
    awsRoleArn?: pulumi.Input<string>;
    /**
     * The name of the Log Analytics table that will store the ingested data.
     */
    destinationTable?: pulumi.Input<string>;
    /**
     * The ID of the Log Analytics Workspace that this AWS S3 Data Connector resides in. Changing this forces a new AWS S3 Data Connector to be created.
     */
    logAnalyticsWorkspaceId?: pulumi.Input<string>;
    /**
     * The name which should be used for this AWS S3 Data Connector. Changing this forces a new AWS S3 Data Connector to be created.
     */
    name?: pulumi.Input<string>;
    /**
     * Specifies a list of AWS SQS urls for the AWS S3 Data Connector.
     */
    sqsUrls?: pulumi.Input<pulumi.Input<string>[]>;
}
/**
 * The set of arguments for constructing a DataConnectorAwsS3 resource.
 */
export interface DataConnectorAwsS3Args {
    /**
     * The ARN of the AWS role, which is connected to this AWS CloudTrail Data Connector. See the [Azure document](https://docs.microsoft.com/azure/sentinel/connect-aws?tabs=s3#create-an-aws-assumed-role-and-grant-access-to-the-aws-sentinel-account) for details.
     */
    awsRoleArn: pulumi.Input<string>;
    /**
     * The name of the Log Analytics table that will store the ingested data.
     */
    destinationTable: pulumi.Input<string>;
    /**
     * The ID of the Log Analytics Workspace that this AWS S3 Data Connector resides in. Changing this forces a new AWS S3 Data Connector to be created.
     */
    logAnalyticsWorkspaceId: pulumi.Input<string>;
    /**
     * The name which should be used for this AWS S3 Data Connector. Changing this forces a new AWS S3 Data Connector to be created.
     */
    name?: pulumi.Input<string>;
    /**
     * Specifies a list of AWS SQS urls for the AWS S3 Data Connector.
     */
    sqsUrls: pulumi.Input<pulumi.Input<string>[]>;
}
