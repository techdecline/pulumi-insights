"use strict";
// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***
Object.defineProperty(exports, "__esModule", { value: true });
exports.DataConnectorAwsS3 = void 0;
const pulumi = require("@pulumi/pulumi");
const utilities = require("../utilities");
/**
 * Manages a AWS S3 Data Connector.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as azure from "@pulumi/azure";
 *
 * const example = new azure.core.ResourceGroup("example", {
 *     name: "example-rg",
 *     location: "West Europe",
 * });
 * const exampleAnalyticsWorkspace = new azure.operationalinsights.AnalyticsWorkspace("example", {
 *     name: "example-workspace",
 *     location: example.location,
 *     resourceGroupName: example.name,
 *     sku: "PerGB2018",
 * });
 * const exampleLogAnalyticsWorkspaceOnboarding = new azure.sentinel.LogAnalyticsWorkspaceOnboarding("example", {workspaceId: exampleAnalyticsWorkspace.id});
 * const exampleDataConnectorAwsS3 = new azure.sentinel.DataConnectorAwsS3("example", {
 *     name: "example",
 *     logAnalyticsWorkspaceId: exampleLogAnalyticsWorkspaceOnboarding.workspaceId,
 *     awsRoleArn: "arn:aws:iam::000000000000:role/role1",
 *     destinationTable: "AWSGuardDuty",
 *     sqsUrls: ["https://sqs.us-east-1.amazonaws.com/000000000000/example"],
 * });
 * ```
 *
 * ## Import
 *
 * AWS S3 Data Connectors can be imported using the `resource id`, e.g.
 *
 * ```sh
 * $ pulumi import azure:sentinel/dataConnectorAwsS3:DataConnectorAwsS3 example /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/group1/providers/Microsoft.OperationalInsights/workspaces/workspace1/providers/Microsoft.SecurityInsights/dataConnectors/dc1
 * ```
 */
class DataConnectorAwsS3 extends pulumi.CustomResource {
    constructor(name, argsOrState, opts) {
        let resourceInputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState;
            resourceInputs["awsRoleArn"] = state ? state.awsRoleArn : undefined;
            resourceInputs["destinationTable"] = state ? state.destinationTable : undefined;
            resourceInputs["logAnalyticsWorkspaceId"] = state ? state.logAnalyticsWorkspaceId : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["sqsUrls"] = state ? state.sqsUrls : undefined;
        }
        else {
            const args = argsOrState;
            if ((!args || args.awsRoleArn === undefined) && !opts.urn) {
                throw new Error("Missing required property 'awsRoleArn'");
            }
            if ((!args || args.destinationTable === undefined) && !opts.urn) {
                throw new Error("Missing required property 'destinationTable'");
            }
            if ((!args || args.logAnalyticsWorkspaceId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'logAnalyticsWorkspaceId'");
            }
            if ((!args || args.sqsUrls === undefined) && !opts.urn) {
                throw new Error("Missing required property 'sqsUrls'");
            }
            resourceInputs["awsRoleArn"] = args ? args.awsRoleArn : undefined;
            resourceInputs["destinationTable"] = args ? args.destinationTable : undefined;
            resourceInputs["logAnalyticsWorkspaceId"] = args ? args.logAnalyticsWorkspaceId : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["sqsUrls"] = args ? args.sqsUrls : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(DataConnectorAwsS3.__pulumiType, name, resourceInputs, opts);
    }
    /**
     * Get an existing DataConnectorAwsS3 resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    static get(name, id, state, opts) {
        return new DataConnectorAwsS3(name, state, Object.assign(Object.assign({}, opts), { id: id }));
    }
    /**
     * Returns true if the given object is an instance of DataConnectorAwsS3.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    static isInstance(obj) {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === DataConnectorAwsS3.__pulumiType;
    }
}
exports.DataConnectorAwsS3 = DataConnectorAwsS3;
/** @internal */
DataConnectorAwsS3.__pulumiType = 'azure:sentinel/dataConnectorAwsS3:DataConnectorAwsS3';
//# sourceMappingURL=dataConnectorAwsS3.js.map