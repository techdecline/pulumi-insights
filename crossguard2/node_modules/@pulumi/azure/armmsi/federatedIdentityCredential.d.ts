import * as pulumi from "@pulumi/pulumi";
/**
 * Manages a Federated Identity Credential.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as azure from "@pulumi/azure";
 *
 * const example = new azure.core.ResourceGroup("example", {
 *     name: "example",
 *     location: "West Europe",
 * });
 * const exampleUserAssignedIdentity = new azure.authorization.UserAssignedIdentity("example", {
 *     location: example.location,
 *     name: "example",
 *     resourceGroupName: example.name,
 * });
 * const exampleFederatedIdentityCredential = new azure.armmsi.FederatedIdentityCredential("example", {
 *     name: "example",
 *     resourceGroupName: example.name,
 *     audience: "foo",
 *     issuer: "https://foo",
 *     parentId: exampleUserAssignedIdentity.id,
 *     subject: "foo",
 * });
 * ```
 *
 * ## Import
 *
 * An existing Federated Identity Credential can be imported into Pulumi using the `resource id`, e.g.
 *
 * ```sh
 * $ pulumi import azure:armmsi/federatedIdentityCredential:FederatedIdentityCredential example /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedIdentity/userAssignedIdentities/{parentIdentityName}/federatedIdentityCredentials/{resourceName}
 * ```
 */
export declare class FederatedIdentityCredential extends pulumi.CustomResource {
    /**
     * Get an existing FederatedIdentityCredential resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    static get(name: string, id: pulumi.Input<pulumi.ID>, state?: FederatedIdentityCredentialState, opts?: pulumi.CustomResourceOptions): FederatedIdentityCredential;
    /**
     * Returns true if the given object is an instance of FederatedIdentityCredential.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    static isInstance(obj: any): obj is FederatedIdentityCredential;
    /**
     * Specifies the audience for this Federated Identity Credential.
     */
    readonly audience: pulumi.Output<string>;
    /**
     * Specifies the issuer of this Federated Identity Credential.
     */
    readonly issuer: pulumi.Output<string>;
    /**
     * Specifies the name of this Federated Identity Credential. Changing this forces a new resource to be created.
     */
    readonly name: pulumi.Output<string>;
    /**
     * Specifies parent ID of User Assigned Identity for this Federated Identity Credential. Changing this forces a new Federated Identity Credential to be created.
     */
    readonly parentId: pulumi.Output<string>;
    /**
     * Specifies the name of the Resource Group within which this Federated Identity Credential should exist. Changing this forces a new Federated Identity Credential to be created.
     */
    readonly resourceGroupName: pulumi.Output<string>;
    /**
     * Specifies the subject for this Federated Identity Credential.
     */
    readonly subject: pulumi.Output<string>;
    /**
     * Create a FederatedIdentityCredential resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: FederatedIdentityCredentialArgs, opts?: pulumi.CustomResourceOptions);
}
/**
 * Input properties used for looking up and filtering FederatedIdentityCredential resources.
 */
export interface FederatedIdentityCredentialState {
    /**
     * Specifies the audience for this Federated Identity Credential.
     */
    audience?: pulumi.Input<string>;
    /**
     * Specifies the issuer of this Federated Identity Credential.
     */
    issuer?: pulumi.Input<string>;
    /**
     * Specifies the name of this Federated Identity Credential. Changing this forces a new resource to be created.
     */
    name?: pulumi.Input<string>;
    /**
     * Specifies parent ID of User Assigned Identity for this Federated Identity Credential. Changing this forces a new Federated Identity Credential to be created.
     */
    parentId?: pulumi.Input<string>;
    /**
     * Specifies the name of the Resource Group within which this Federated Identity Credential should exist. Changing this forces a new Federated Identity Credential to be created.
     */
    resourceGroupName?: pulumi.Input<string>;
    /**
     * Specifies the subject for this Federated Identity Credential.
     */
    subject?: pulumi.Input<string>;
}
/**
 * The set of arguments for constructing a FederatedIdentityCredential resource.
 */
export interface FederatedIdentityCredentialArgs {
    /**
     * Specifies the audience for this Federated Identity Credential.
     */
    audience: pulumi.Input<string>;
    /**
     * Specifies the issuer of this Federated Identity Credential.
     */
    issuer: pulumi.Input<string>;
    /**
     * Specifies the name of this Federated Identity Credential. Changing this forces a new resource to be created.
     */
    name?: pulumi.Input<string>;
    /**
     * Specifies parent ID of User Assigned Identity for this Federated Identity Credential. Changing this forces a new Federated Identity Credential to be created.
     */
    parentId: pulumi.Input<string>;
    /**
     * Specifies the name of the Resource Group within which this Federated Identity Credential should exist. Changing this forces a new Federated Identity Credential to be created.
     */
    resourceGroupName: pulumi.Input<string>;
    /**
     * Specifies the subject for this Federated Identity Credential.
     */
    subject: pulumi.Input<string>;
}
