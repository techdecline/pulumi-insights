import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
/**
 * Manages Dynatrace tag rules.
 *
 * ## Import
 *
 * Dynatrace tag rules can be imported using the `resource id`, e.g.
 *
 * ```sh
 * $ pulumi import azure:dynatrace/tagRules:TagRules example /subscriptions/12345678-1234-9876-4563-123456789012/resourceGroups/resGroup1/providers/Dynatrace.Observability/monitors/monitor1/tagRules/tagRules1
 * ```
 */
export declare class TagRules extends pulumi.CustomResource {
    /**
     * Get an existing TagRules resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    static get(name: string, id: pulumi.Input<pulumi.ID>, state?: TagRulesState, opts?: pulumi.CustomResourceOptions): TagRules;
    /**
     * Returns true if the given object is an instance of TagRules.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    static isInstance(obj: any): obj is TagRules;
    /**
     * Set of rules for sending logs for the Monitor resource. Changing this forces a new resource to be created. A `logRule` block as defined below.
     */
    readonly logRule: pulumi.Output<outputs.dynatrace.TagRulesLogRule | undefined>;
    /**
     * Set of rules for sending metrics for the Monitor resource. Changing this forces a new resource to be created. A `metricRule` block as defined below.
     */
    readonly metricRule: pulumi.Output<outputs.dynatrace.TagRulesMetricRule | undefined>;
    /**
     * Name of the Dynatrace monitor. Changing this forces a new resource to be created.
     */
    readonly monitorId: pulumi.Output<string>;
    /**
     * Name of the Dynatrace tag rules. Currently, the only supported value is `default`. Changing this forces a new resource to be created.
     */
    readonly name: pulumi.Output<string>;
    /**
     * Create a TagRules resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: TagRulesArgs, opts?: pulumi.CustomResourceOptions);
}
/**
 * Input properties used for looking up and filtering TagRules resources.
 */
export interface TagRulesState {
    /**
     * Set of rules for sending logs for the Monitor resource. Changing this forces a new resource to be created. A `logRule` block as defined below.
     */
    logRule?: pulumi.Input<inputs.dynatrace.TagRulesLogRule>;
    /**
     * Set of rules for sending metrics for the Monitor resource. Changing this forces a new resource to be created. A `metricRule` block as defined below.
     */
    metricRule?: pulumi.Input<inputs.dynatrace.TagRulesMetricRule>;
    /**
     * Name of the Dynatrace monitor. Changing this forces a new resource to be created.
     */
    monitorId?: pulumi.Input<string>;
    /**
     * Name of the Dynatrace tag rules. Currently, the only supported value is `default`. Changing this forces a new resource to be created.
     */
    name?: pulumi.Input<string>;
}
/**
 * The set of arguments for constructing a TagRules resource.
 */
export interface TagRulesArgs {
    /**
     * Set of rules for sending logs for the Monitor resource. Changing this forces a new resource to be created. A `logRule` block as defined below.
     */
    logRule?: pulumi.Input<inputs.dynatrace.TagRulesLogRule>;
    /**
     * Set of rules for sending metrics for the Monitor resource. Changing this forces a new resource to be created. A `metricRule` block as defined below.
     */
    metricRule?: pulumi.Input<inputs.dynatrace.TagRulesMetricRule>;
    /**
     * Name of the Dynatrace monitor. Changing this forces a new resource to be created.
     */
    monitorId: pulumi.Input<string>;
    /**
     * Name of the Dynatrace tag rules. Currently, the only supported value is `default`. Changing this forces a new resource to be created.
     */
    name?: pulumi.Input<string>;
}
