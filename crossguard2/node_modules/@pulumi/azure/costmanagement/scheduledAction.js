"use strict";
// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***
Object.defineProperty(exports, "__esModule", { value: true });
exports.ScheduledAction = void 0;
const pulumi = require("@pulumi/pulumi");
const utilities = require("../utilities");
/**
 * Manages an Azure Cost Management Scheduled Action.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as azure from "@pulumi/azure";
 *
 * const example = new azure.costmanagement.ScheduledAction("example", {
 *     name: "examplescheduledaction",
 *     displayName: "Report Last 6 Months",
 *     viewId: "/subscriptions/00000000-0000-0000-0000-000000000000/providers/Microsoft.CostManagement/views/ms:CostByService",
 *     emailAddressSender: "platformteam@test.com",
 *     emailSubject: "Cost Management Report",
 *     emailAddresses: ["example@example.com"],
 *     message: "Hi all, take a look at last 6 months spending!",
 *     frequency: "Daily",
 *     startDate: "2023-01-02T00:00:00Z",
 *     endDate: "2023-02-02T00:00:00Z",
 * });
 * ```
 *
 * ## Import
 *
 * Azure Cost Management Scheduled Actions can be imported using the `resource id`, e.g.
 *
 * ```sh
 * $ pulumi import azure:costmanagement/scheduledAction:ScheduledAction example /subscriptions/00000000-0000-0000-0000-000000000000/providers/Microsoft.CostManagement/scheduledActions/scheduledaction1
 * ```
 */
class ScheduledAction extends pulumi.CustomResource {
    constructor(name, argsOrState, opts) {
        let resourceInputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState;
            resourceInputs["dayOfMonth"] = state ? state.dayOfMonth : undefined;
            resourceInputs["daysOfWeeks"] = state ? state.daysOfWeeks : undefined;
            resourceInputs["displayName"] = state ? state.displayName : undefined;
            resourceInputs["emailAddressSender"] = state ? state.emailAddressSender : undefined;
            resourceInputs["emailAddresses"] = state ? state.emailAddresses : undefined;
            resourceInputs["emailSubject"] = state ? state.emailSubject : undefined;
            resourceInputs["endDate"] = state ? state.endDate : undefined;
            resourceInputs["frequency"] = state ? state.frequency : undefined;
            resourceInputs["hourOfDay"] = state ? state.hourOfDay : undefined;
            resourceInputs["message"] = state ? state.message : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["startDate"] = state ? state.startDate : undefined;
            resourceInputs["viewId"] = state ? state.viewId : undefined;
            resourceInputs["weeksOfMonths"] = state ? state.weeksOfMonths : undefined;
        }
        else {
            const args = argsOrState;
            if ((!args || args.displayName === undefined) && !opts.urn) {
                throw new Error("Missing required property 'displayName'");
            }
            if ((!args || args.emailAddressSender === undefined) && !opts.urn) {
                throw new Error("Missing required property 'emailAddressSender'");
            }
            if ((!args || args.emailAddresses === undefined) && !opts.urn) {
                throw new Error("Missing required property 'emailAddresses'");
            }
            if ((!args || args.emailSubject === undefined) && !opts.urn) {
                throw new Error("Missing required property 'emailSubject'");
            }
            if ((!args || args.endDate === undefined) && !opts.urn) {
                throw new Error("Missing required property 'endDate'");
            }
            if ((!args || args.frequency === undefined) && !opts.urn) {
                throw new Error("Missing required property 'frequency'");
            }
            if ((!args || args.startDate === undefined) && !opts.urn) {
                throw new Error("Missing required property 'startDate'");
            }
            if ((!args || args.viewId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'viewId'");
            }
            resourceInputs["dayOfMonth"] = args ? args.dayOfMonth : undefined;
            resourceInputs["daysOfWeeks"] = args ? args.daysOfWeeks : undefined;
            resourceInputs["displayName"] = args ? args.displayName : undefined;
            resourceInputs["emailAddressSender"] = args ? args.emailAddressSender : undefined;
            resourceInputs["emailAddresses"] = args ? args.emailAddresses : undefined;
            resourceInputs["emailSubject"] = args ? args.emailSubject : undefined;
            resourceInputs["endDate"] = args ? args.endDate : undefined;
            resourceInputs["frequency"] = args ? args.frequency : undefined;
            resourceInputs["hourOfDay"] = args ? args.hourOfDay : undefined;
            resourceInputs["message"] = args ? args.message : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["startDate"] = args ? args.startDate : undefined;
            resourceInputs["viewId"] = args ? args.viewId : undefined;
            resourceInputs["weeksOfMonths"] = args ? args.weeksOfMonths : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(ScheduledAction.__pulumiType, name, resourceInputs, opts);
    }
    /**
     * Get an existing ScheduledAction resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    static get(name, id, state, opts) {
        return new ScheduledAction(name, state, Object.assign(Object.assign({}, opts), { id: id }));
    }
    /**
     * Returns true if the given object is an instance of ScheduledAction.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    static isInstance(obj) {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === ScheduledAction.__pulumiType;
    }
}
exports.ScheduledAction = ScheduledAction;
/** @internal */
ScheduledAction.__pulumiType = 'azure:costmanagement/scheduledAction:ScheduledAction';
//# sourceMappingURL=scheduledAction.js.map