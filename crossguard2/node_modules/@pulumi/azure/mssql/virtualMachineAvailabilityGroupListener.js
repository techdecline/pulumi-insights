"use strict";
// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***
Object.defineProperty(exports, "__esModule", { value: true });
exports.VirtualMachineAvailabilityGroupListener = void 0;
const pulumi = require("@pulumi/pulumi");
const utilities = require("../utilities");
/**
 * Manages a Microsoft SQL Virtual Machine Availability Group Listener.
 *
 * ## Import
 *
 * Microsoft SQL Virtual Machine Availability Group Listeners can be imported using the `resource id`, e.g.
 *
 * ```sh
 * $ pulumi import azure:mssql/virtualMachineAvailabilityGroupListener:VirtualMachineAvailabilityGroupListener example /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/group1/providers/Microsoft.SqlVirtualMachine/sqlVirtualMachineGroups/vmgroup1/availabilityGroupListeners/listener1
 * ```
 */
class VirtualMachineAvailabilityGroupListener extends pulumi.CustomResource {
    constructor(name, argsOrState, opts) {
        let resourceInputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState;
            resourceInputs["availabilityGroupName"] = state ? state.availabilityGroupName : undefined;
            resourceInputs["loadBalancerConfiguration"] = state ? state.loadBalancerConfiguration : undefined;
            resourceInputs["multiSubnetIpConfigurations"] = state ? state.multiSubnetIpConfigurations : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["port"] = state ? state.port : undefined;
            resourceInputs["replicas"] = state ? state.replicas : undefined;
            resourceInputs["sqlVirtualMachineGroupId"] = state ? state.sqlVirtualMachineGroupId : undefined;
        }
        else {
            const args = argsOrState;
            if ((!args || args.replicas === undefined) && !opts.urn) {
                throw new Error("Missing required property 'replicas'");
            }
            if ((!args || args.sqlVirtualMachineGroupId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'sqlVirtualMachineGroupId'");
            }
            resourceInputs["availabilityGroupName"] = args ? args.availabilityGroupName : undefined;
            resourceInputs["loadBalancerConfiguration"] = args ? args.loadBalancerConfiguration : undefined;
            resourceInputs["multiSubnetIpConfigurations"] = args ? args.multiSubnetIpConfigurations : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["port"] = args ? args.port : undefined;
            resourceInputs["replicas"] = args ? args.replicas : undefined;
            resourceInputs["sqlVirtualMachineGroupId"] = args ? args.sqlVirtualMachineGroupId : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(VirtualMachineAvailabilityGroupListener.__pulumiType, name, resourceInputs, opts);
    }
    /**
     * Get an existing VirtualMachineAvailabilityGroupListener resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    static get(name, id, state, opts) {
        return new VirtualMachineAvailabilityGroupListener(name, state, Object.assign(Object.assign({}, opts), { id: id }));
    }
    /**
     * Returns true if the given object is an instance of VirtualMachineAvailabilityGroupListener.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    static isInstance(obj) {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === VirtualMachineAvailabilityGroupListener.__pulumiType;
    }
}
exports.VirtualMachineAvailabilityGroupListener = VirtualMachineAvailabilityGroupListener;
/** @internal */
VirtualMachineAvailabilityGroupListener.__pulumiType = 'azure:mssql/virtualMachineAvailabilityGroupListener:VirtualMachineAvailabilityGroupListener';
//# sourceMappingURL=virtualMachineAvailabilityGroupListener.js.map