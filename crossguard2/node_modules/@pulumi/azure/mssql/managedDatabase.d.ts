import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
/**
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as azure from "@pulumi/azure";
 *
 * const example = new azure.core.ResourceGroup("example", {
 *     name: "example",
 *     location: "West Europe",
 * });
 * const exampleVirtualNetwork = new azure.network.VirtualNetwork("example", {
 *     name: "example",
 *     location: example.location,
 *     resourceGroupName: example.name,
 *     addressSpaces: ["10.0.0.0/16"],
 * });
 * const exampleSubnet = new azure.network.Subnet("example", {
 *     name: "example",
 *     resourceGroupName: example.name,
 *     virtualNetworkName: exampleVirtualNetwork.name,
 *     addressPrefixes: ["10.0.2.0/24"],
 * });
 * const exampleManagedInstance = new azure.mssql.ManagedInstance("example", {
 *     name: "managedsqlinstance",
 *     resourceGroupName: example.name,
 *     location: example.location,
 *     licenseType: "BasePrice",
 *     skuName: "GP_Gen5",
 *     storageSizeInGb: 32,
 *     subnetId: exampleSubnet.id,
 *     vcores: 4,
 *     administratorLogin: "msadministrator",
 *     administratorLoginPassword: "thisIsDog11",
 * });
 * const exampleManagedDatabase = new azure.mssql.ManagedDatabase("example", {
 *     name: "example",
 *     managedInstanceId: exampleManagedInstance.id,
 * });
 * ```
 *
 * ## Import
 *
 * SQL Managed Databases can be imported using the `resource id`, e.g.
 *
 * ```sh
 * $ pulumi import azure:mssql/managedDatabase:ManagedDatabase example /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/myresourcegroup/providers/Microsoft.Sql/managedInstances/myserver/databases/mydatabase
 * ```
 */
export declare class ManagedDatabase extends pulumi.CustomResource {
    /**
     * Get an existing ManagedDatabase resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    static get(name: string, id: pulumi.Input<pulumi.ID>, state?: ManagedDatabaseState, opts?: pulumi.CustomResourceOptions): ManagedDatabase;
    /**
     * Returns true if the given object is an instance of ManagedDatabase.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    static isInstance(obj: any): obj is ManagedDatabase;
    /**
     * A `longTermRetentionPolicy` block as defined below.
     */
    readonly longTermRetentionPolicy: pulumi.Output<outputs.mssql.ManagedDatabaseLongTermRetentionPolicy>;
    /**
     * The ID of the Azure SQL Managed Instance on which to create this Managed Database. Changing this forces a new resource to be created.
     */
    readonly managedInstanceId: pulumi.Output<string>;
    /**
     * The name of the Managed Database to create. Changing this forces a new resource to be created.
     */
    readonly name: pulumi.Output<string>;
    /**
     * A `pointInTimeRestore` block as defined below. Changing this forces a new resource to be created.
     */
    readonly pointInTimeRestore: pulumi.Output<outputs.mssql.ManagedDatabasePointInTimeRestore | undefined>;
    /**
     * The backup retention period in days. This is how many days Point-in-Time Restore will be supported.
     */
    readonly shortTermRetentionDays: pulumi.Output<number | undefined>;
    /**
     * A mapping of tags to assign to the resource.
     */
    readonly tags: pulumi.Output<{
        [key: string]: string;
    } | undefined>;
    /**
     * Create a ManagedDatabase resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: ManagedDatabaseArgs, opts?: pulumi.CustomResourceOptions);
}
/**
 * Input properties used for looking up and filtering ManagedDatabase resources.
 */
export interface ManagedDatabaseState {
    /**
     * A `longTermRetentionPolicy` block as defined below.
     */
    longTermRetentionPolicy?: pulumi.Input<inputs.mssql.ManagedDatabaseLongTermRetentionPolicy>;
    /**
     * The ID of the Azure SQL Managed Instance on which to create this Managed Database. Changing this forces a new resource to be created.
     */
    managedInstanceId?: pulumi.Input<string>;
    /**
     * The name of the Managed Database to create. Changing this forces a new resource to be created.
     */
    name?: pulumi.Input<string>;
    /**
     * A `pointInTimeRestore` block as defined below. Changing this forces a new resource to be created.
     */
    pointInTimeRestore?: pulumi.Input<inputs.mssql.ManagedDatabasePointInTimeRestore>;
    /**
     * The backup retention period in days. This is how many days Point-in-Time Restore will be supported.
     */
    shortTermRetentionDays?: pulumi.Input<number>;
    /**
     * A mapping of tags to assign to the resource.
     */
    tags?: pulumi.Input<{
        [key: string]: pulumi.Input<string>;
    }>;
}
/**
 * The set of arguments for constructing a ManagedDatabase resource.
 */
export interface ManagedDatabaseArgs {
    /**
     * A `longTermRetentionPolicy` block as defined below.
     */
    longTermRetentionPolicy?: pulumi.Input<inputs.mssql.ManagedDatabaseLongTermRetentionPolicy>;
    /**
     * The ID of the Azure SQL Managed Instance on which to create this Managed Database. Changing this forces a new resource to be created.
     */
    managedInstanceId: pulumi.Input<string>;
    /**
     * The name of the Managed Database to create. Changing this forces a new resource to be created.
     */
    name?: pulumi.Input<string>;
    /**
     * A `pointInTimeRestore` block as defined below. Changing this forces a new resource to be created.
     */
    pointInTimeRestore?: pulumi.Input<inputs.mssql.ManagedDatabasePointInTimeRestore>;
    /**
     * The backup retention period in days. This is how many days Point-in-Time Restore will be supported.
     */
    shortTermRetentionDays?: pulumi.Input<number>;
    /**
     * A mapping of tags to assign to the resource.
     */
    tags?: pulumi.Input<{
        [key: string]: pulumi.Input<string>;
    }>;
}
