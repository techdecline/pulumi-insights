import * as pulumi from "@pulumi/pulumi";
/**
 * Manages a MS SQL Server DNS Alias.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as azure from "@pulumi/azure";
 *
 * const example = new azure.core.ResourceGroup("example", {
 *     name: "example-resources",
 *     location: "West Europe",
 * });
 * const exampleServer = new azure.mssql.Server("example", {
 *     name: "example-sqlserver",
 *     resourceGroupName: example.name,
 *     location: example.location,
 *     version: "12.0",
 *     administratorLogin: "missadministrator",
 *     administratorLoginPassword: "AdminPassword123!",
 * });
 * const exampleServerDnsAlias = new azure.mssql.ServerDnsAlias("example", {
 *     name: "example-dns-alias",
 *     mssqlServerId: exampleServer.id,
 * });
 * ```
 *
 * ## Import
 *
 * MSSQL Server DNS Aliass can be imported using the `resource id`, e.g.
 *
 * ```sh
 * $ pulumi import azure:mssql/serverDnsAlias:ServerDnsAlias example /subscriptions/12345678-1234-9876-4563-123456789012/resourceGroups/group1/providers/Microsoft.Sql/servers/server1/dnsAliases/default
 * ```
 */
export declare class ServerDnsAlias extends pulumi.CustomResource {
    /**
     * Get an existing ServerDnsAlias resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    static get(name: string, id: pulumi.Input<pulumi.ID>, state?: ServerDnsAliasState, opts?: pulumi.CustomResourceOptions): ServerDnsAlias;
    /**
     * Returns true if the given object is an instance of ServerDnsAlias.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    static isInstance(obj: any): obj is ServerDnsAlias;
    /**
     * The fully qualified DNS record for alias.
     */
    readonly dnsRecord: pulumi.Output<string>;
    /**
     * The ID of the mssql server. Changing this forces a new MSSQL Server DNS Alias to be created.
     */
    readonly mssqlServerId: pulumi.Output<string>;
    /**
     * The name which should be used for this MSSQL Server DNS Alias. Changing this forces a new MSSQL Server DNS Alias to be created.
     */
    readonly name: pulumi.Output<string>;
    /**
     * Create a ServerDnsAlias resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: ServerDnsAliasArgs, opts?: pulumi.CustomResourceOptions);
}
/**
 * Input properties used for looking up and filtering ServerDnsAlias resources.
 */
export interface ServerDnsAliasState {
    /**
     * The fully qualified DNS record for alias.
     */
    dnsRecord?: pulumi.Input<string>;
    /**
     * The ID of the mssql server. Changing this forces a new MSSQL Server DNS Alias to be created.
     */
    mssqlServerId?: pulumi.Input<string>;
    /**
     * The name which should be used for this MSSQL Server DNS Alias. Changing this forces a new MSSQL Server DNS Alias to be created.
     */
    name?: pulumi.Input<string>;
}
/**
 * The set of arguments for constructing a ServerDnsAlias resource.
 */
export interface ServerDnsAliasArgs {
    /**
     * The ID of the mssql server. Changing this forces a new MSSQL Server DNS Alias to be created.
     */
    mssqlServerId: pulumi.Input<string>;
    /**
     * The name which should be used for this MSSQL Server DNS Alias. Changing this forces a new MSSQL Server DNS Alias to be created.
     */
    name?: pulumi.Input<string>;
}
