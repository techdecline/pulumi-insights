"use strict";
// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***
Object.defineProperty(exports, "__esModule", { value: true });
exports.ServerVulnerabilityAssessment = void 0;
const pulumi = require("@pulumi/pulumi");
const utilities = require("../utilities");
/**
 * Manages the Vulnerability Assessment for a MS SQL Server.
 *
 * > **NOTE** Vulnerability Assessment is currently only available for MS SQL databases.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as azure from "@pulumi/azure";
 *
 * const example = new azure.core.ResourceGroup("example", {
 *     name: "example-resources",
 *     location: "West Europe",
 * });
 * const exampleServer = new azure.mssql.Server("example", {
 *     name: "mysqlserver",
 *     resourceGroupName: example.name,
 *     location: example.location,
 *     version: "12.0",
 *     administratorLogin: "4dm1n157r470r",
 *     administratorLoginPassword: "4-v3ry-53cr37-p455w0rd",
 * });
 * const exampleAccount = new azure.storage.Account("example", {
 *     name: "accteststorageaccount",
 *     resourceGroupName: example.name,
 *     location: example.location,
 *     accountTier: "Standard",
 *     accountReplicationType: "GRS",
 * });
 * const exampleContainer = new azure.storage.Container("example", {
 *     name: "accteststoragecontainer",
 *     storageAccountName: exampleAccount.name,
 *     containerAccessType: "private",
 * });
 * const exampleServerSecurityAlertPolicy = new azure.mssql.ServerSecurityAlertPolicy("example", {
 *     resourceGroupName: example.name,
 *     serverName: exampleServer.name,
 *     state: "Enabled",
 * });
 * const exampleServerVulnerabilityAssessment = new azure.mssql.ServerVulnerabilityAssessment("example", {
 *     serverSecurityAlertPolicyId: exampleServerSecurityAlertPolicy.id,
 *     storageContainerPath: pulumi.interpolate`${exampleAccount.primaryBlobEndpoint}${exampleContainer.name}/`,
 *     storageAccountAccessKey: exampleAccount.primaryAccessKey,
 *     recurringScans: {
 *         enabled: true,
 *         emailSubscriptionAdmins: true,
 *         emails: [
 *             "email@example1.com",
 *             "email@example2.com",
 *         ],
 *     },
 * });
 * ```
 *
 * ## Import
 *
 * MS SQL Server Vulnerability Assessment can be imported using the `resource id`, e.g.
 *
 * ```sh
 * $ pulumi import azure:mssql/serverVulnerabilityAssessment:ServerVulnerabilityAssessment example /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/acceptanceTestResourceGroup1/providers/Microsoft.Sql/servers/mssqlserver/vulnerabilityAssessments/Default
 * ```
 */
class ServerVulnerabilityAssessment extends pulumi.CustomResource {
    constructor(name, argsOrState, opts) {
        let resourceInputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState;
            resourceInputs["recurringScans"] = state ? state.recurringScans : undefined;
            resourceInputs["serverSecurityAlertPolicyId"] = state ? state.serverSecurityAlertPolicyId : undefined;
            resourceInputs["storageAccountAccessKey"] = state ? state.storageAccountAccessKey : undefined;
            resourceInputs["storageContainerPath"] = state ? state.storageContainerPath : undefined;
            resourceInputs["storageContainerSasKey"] = state ? state.storageContainerSasKey : undefined;
        }
        else {
            const args = argsOrState;
            if ((!args || args.serverSecurityAlertPolicyId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'serverSecurityAlertPolicyId'");
            }
            if ((!args || args.storageContainerPath === undefined) && !opts.urn) {
                throw new Error("Missing required property 'storageContainerPath'");
            }
            resourceInputs["recurringScans"] = args ? args.recurringScans : undefined;
            resourceInputs["serverSecurityAlertPolicyId"] = args ? args.serverSecurityAlertPolicyId : undefined;
            resourceInputs["storageAccountAccessKey"] = (args === null || args === void 0 ? void 0 : args.storageAccountAccessKey) ? pulumi.secret(args.storageAccountAccessKey) : undefined;
            resourceInputs["storageContainerPath"] = args ? args.storageContainerPath : undefined;
            resourceInputs["storageContainerSasKey"] = (args === null || args === void 0 ? void 0 : args.storageContainerSasKey) ? pulumi.secret(args.storageContainerSasKey) : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        const secretOpts = { additionalSecretOutputs: ["storageAccountAccessKey", "storageContainerSasKey"] };
        opts = pulumi.mergeOptions(opts, secretOpts);
        super(ServerVulnerabilityAssessment.__pulumiType, name, resourceInputs, opts);
    }
    /**
     * Get an existing ServerVulnerabilityAssessment resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    static get(name, id, state, opts) {
        return new ServerVulnerabilityAssessment(name, state, Object.assign(Object.assign({}, opts), { id: id }));
    }
    /**
     * Returns true if the given object is an instance of ServerVulnerabilityAssessment.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    static isInstance(obj) {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === ServerVulnerabilityAssessment.__pulumiType;
    }
}
exports.ServerVulnerabilityAssessment = ServerVulnerabilityAssessment;
/** @internal */
ServerVulnerabilityAssessment.__pulumiType = 'azure:mssql/serverVulnerabilityAssessment:ServerVulnerabilityAssessment';
//# sourceMappingURL=serverVulnerabilityAssessment.js.map