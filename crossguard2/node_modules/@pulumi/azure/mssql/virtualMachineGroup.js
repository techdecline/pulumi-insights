"use strict";
// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***
Object.defineProperty(exports, "__esModule", { value: true });
exports.VirtualMachineGroup = void 0;
const pulumi = require("@pulumi/pulumi");
const utilities = require("../utilities");
/**
 * Manages a Microsoft SQL Virtual Machine Group.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as azure from "@pulumi/azure";
 *
 * const example = new azure.core.ResourceGroup("example", {
 *     name: "example-resources",
 *     location: "West Europe",
 * });
 * const exampleVirtualMachineGroup = new azure.mssql.VirtualMachineGroup("example", {
 *     name: "examplegroup",
 *     resourceGroupName: example.name,
 *     location: example.location,
 *     sqlImageOffer: "SQL2017-WS2016",
 *     sqlImageSku: "Developer",
 *     wsfcDomainProfile: {
 *         fqdn: "testdomain.com",
 *         clusterSubnetType: "SingleSubnet",
 *     },
 * });
 * ```
 *
 * ## Import
 *
 * Microsoft SQL Virtual Machine Groups can be imported using the `resource id`, e.g.
 *
 * ```sh
 * $ pulumi import azure:mssql/virtualMachineGroup:VirtualMachineGroup example /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/group1/providers/Microsoft.SqlVirtualMachine/sqlVirtualMachineGroups/vmgroup1
 * ```
 */
class VirtualMachineGroup extends pulumi.CustomResource {
    constructor(name, argsOrState, opts) {
        let resourceInputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState;
            resourceInputs["location"] = state ? state.location : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["resourceGroupName"] = state ? state.resourceGroupName : undefined;
            resourceInputs["sqlImageOffer"] = state ? state.sqlImageOffer : undefined;
            resourceInputs["sqlImageSku"] = state ? state.sqlImageSku : undefined;
            resourceInputs["tags"] = state ? state.tags : undefined;
            resourceInputs["wsfcDomainProfile"] = state ? state.wsfcDomainProfile : undefined;
        }
        else {
            const args = argsOrState;
            if ((!args || args.resourceGroupName === undefined) && !opts.urn) {
                throw new Error("Missing required property 'resourceGroupName'");
            }
            if ((!args || args.sqlImageOffer === undefined) && !opts.urn) {
                throw new Error("Missing required property 'sqlImageOffer'");
            }
            if ((!args || args.sqlImageSku === undefined) && !opts.urn) {
                throw new Error("Missing required property 'sqlImageSku'");
            }
            if ((!args || args.wsfcDomainProfile === undefined) && !opts.urn) {
                throw new Error("Missing required property 'wsfcDomainProfile'");
            }
            resourceInputs["location"] = args ? args.location : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["resourceGroupName"] = args ? args.resourceGroupName : undefined;
            resourceInputs["sqlImageOffer"] = args ? args.sqlImageOffer : undefined;
            resourceInputs["sqlImageSku"] = args ? args.sqlImageSku : undefined;
            resourceInputs["tags"] = args ? args.tags : undefined;
            resourceInputs["wsfcDomainProfile"] = args ? args.wsfcDomainProfile : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(VirtualMachineGroup.__pulumiType, name, resourceInputs, opts);
    }
    /**
     * Get an existing VirtualMachineGroup resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    static get(name, id, state, opts) {
        return new VirtualMachineGroup(name, state, Object.assign(Object.assign({}, opts), { id: id }));
    }
    /**
     * Returns true if the given object is an instance of VirtualMachineGroup.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    static isInstance(obj) {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === VirtualMachineGroup.__pulumiType;
    }
}
exports.VirtualMachineGroup = VirtualMachineGroup;
/** @internal */
VirtualMachineGroup.__pulumiType = 'azure:mssql/virtualMachineGroup:VirtualMachineGroup';
//# sourceMappingURL=virtualMachineGroup.js.map