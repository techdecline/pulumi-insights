import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
/**
 * Manages a Database Vulnerability Assessment Rule Baseline.
 *
 * > **NOTE** Database Vulnerability Assessment is currently only available for MS SQL databases.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as azure from "@pulumi/azure";
 * import * as azurerm from "@pulumi/azurerm";
 *
 * const example = new azure.core.ResourceGroup("example", {
 *     name: "example-resources",
 *     location: "West Europe",
 * });
 * const exampleSqlServer = new azurerm.index.SqlServer("example", {
 *     name: "mysqlserver",
 *     resourceGroupName: example.name,
 *     location: example.location,
 *     version: "12.0",
 *     administratorLogin: "4dm1n157r470r",
 *     administratorLoginPassword: "4-v3ry-53cr37-p455w0rd",
 * });
 * const exampleAccount = new azure.storage.Account("example", {
 *     name: "accteststorageaccount",
 *     resourceGroupName: example.name,
 *     location: example.location,
 *     accountTier: "Standard",
 *     accountReplicationType: "GRS",
 * });
 * const exampleContainer = new azure.storage.Container("example", {
 *     name: "accteststoragecontainer",
 *     storageAccountName: exampleAccount.name,
 *     containerAccessType: "private",
 * });
 * const exampleServerSecurityAlertPolicy = new azure.mssql.ServerSecurityAlertPolicy("example", {
 *     resourceGroupName: example.name,
 *     serverName: exampleSqlServer.name,
 *     state: "Enabled",
 * });
 * const exampleSqlDatabase = new azurerm.index.SqlDatabase("example", {
 *     name: "mysqldatabase",
 *     resourceGroupName: example.name,
 *     serverName: exampleSqlServer.name,
 *     location: example.location,
 *     edition: "Standard",
 * });
 * const exampleServerVulnerabilityAssessment = new azure.mssql.ServerVulnerabilityAssessment("example", {
 *     serverSecurityAlertPolicyId: exampleServerSecurityAlertPolicy.id,
 *     storageContainerPath: pulumi.interpolate`${exampleAccount.primaryBlobEndpoint}${exampleContainer.name}/`,
 *     storageAccountAccessKey: exampleAccount.primaryAccessKey,
 * });
 * const exampleDatabaseVulnerabilityAssessmentRuleBaseline = new azure.mssql.DatabaseVulnerabilityAssessmentRuleBaseline("example", {
 *     serverVulnerabilityAssessmentId: exampleServerVulnerabilityAssessment.id,
 *     databaseName: exampleSqlDatabase.name,
 *     ruleId: "VA2065",
 *     baselineName: "master",
 *     baselineResults: [
 *         {
 *             results: [
 *                 "allowedip1",
 *                 "123.123.123.123",
 *                 "123.123.123.123",
 *             ],
 *         },
 *         {
 *             results: [
 *                 "allowedip2",
 *                 "255.255.255.255",
 *                 "255.255.255.255",
 *             ],
 *         },
 *     ],
 * });
 * ```
 *
 * ## Import
 *
 * Database Vulnerability Assessment Rule Baseline can be imported using the `resource id`, e.g.
 *
 * ```sh
 * $ pulumi import azure:mssql/databaseVulnerabilityAssessmentRuleBaseline:DatabaseVulnerabilityAssessmentRuleBaseline example /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/acceptanceTestResourceGroup1/providers/Microsoft.Sql/servers/mssqlserver/databases/mysqldatabase/vulnerabilityAssessments/Default/rules/VA2065/baselines/master
 * ```
 */
export declare class DatabaseVulnerabilityAssessmentRuleBaseline extends pulumi.CustomResource {
    /**
     * Get an existing DatabaseVulnerabilityAssessmentRuleBaseline resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    static get(name: string, id: pulumi.Input<pulumi.ID>, state?: DatabaseVulnerabilityAssessmentRuleBaselineState, opts?: pulumi.CustomResourceOptions): DatabaseVulnerabilityAssessmentRuleBaseline;
    /**
     * Returns true if the given object is an instance of DatabaseVulnerabilityAssessmentRuleBaseline.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    static isInstance(obj: any): obj is DatabaseVulnerabilityAssessmentRuleBaseline;
    /**
     * The name of the vulnerability assessment rule baseline. Valid options are `default` and `master`. `default` implies a baseline on a database level rule and `master` for server level rule. Defaults to `default`. Changing this forces a new resource to be created.
     */
    readonly baselineName: pulumi.Output<string | undefined>;
    /**
     * A `baselineResult` block as documented below. Multiple blocks can be defined.
     */
    readonly baselineResults: pulumi.Output<outputs.mssql.DatabaseVulnerabilityAssessmentRuleBaselineBaselineResult[]>;
    /**
     * Specifies the name of the MS SQL Database. Changing this forces a new resource to be created.
     */
    readonly databaseName: pulumi.Output<string>;
    /**
     * The vulnerability assessment rule ID. Changing this forces a new resource to be created.
     */
    readonly ruleId: pulumi.Output<string>;
    /**
     * The Vulnerability Assessment ID of the MS SQL Server. Changing this forces a new resource to be created.
     */
    readonly serverVulnerabilityAssessmentId: pulumi.Output<string>;
    /**
     * Create a DatabaseVulnerabilityAssessmentRuleBaseline resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: DatabaseVulnerabilityAssessmentRuleBaselineArgs, opts?: pulumi.CustomResourceOptions);
}
/**
 * Input properties used for looking up and filtering DatabaseVulnerabilityAssessmentRuleBaseline resources.
 */
export interface DatabaseVulnerabilityAssessmentRuleBaselineState {
    /**
     * The name of the vulnerability assessment rule baseline. Valid options are `default` and `master`. `default` implies a baseline on a database level rule and `master` for server level rule. Defaults to `default`. Changing this forces a new resource to be created.
     */
    baselineName?: pulumi.Input<string>;
    /**
     * A `baselineResult` block as documented below. Multiple blocks can be defined.
     */
    baselineResults?: pulumi.Input<pulumi.Input<inputs.mssql.DatabaseVulnerabilityAssessmentRuleBaselineBaselineResult>[]>;
    /**
     * Specifies the name of the MS SQL Database. Changing this forces a new resource to be created.
     */
    databaseName?: pulumi.Input<string>;
    /**
     * The vulnerability assessment rule ID. Changing this forces a new resource to be created.
     */
    ruleId?: pulumi.Input<string>;
    /**
     * The Vulnerability Assessment ID of the MS SQL Server. Changing this forces a new resource to be created.
     */
    serverVulnerabilityAssessmentId?: pulumi.Input<string>;
}
/**
 * The set of arguments for constructing a DatabaseVulnerabilityAssessmentRuleBaseline resource.
 */
export interface DatabaseVulnerabilityAssessmentRuleBaselineArgs {
    /**
     * The name of the vulnerability assessment rule baseline. Valid options are `default` and `master`. `default` implies a baseline on a database level rule and `master` for server level rule. Defaults to `default`. Changing this forces a new resource to be created.
     */
    baselineName?: pulumi.Input<string>;
    /**
     * A `baselineResult` block as documented below. Multiple blocks can be defined.
     */
    baselineResults: pulumi.Input<pulumi.Input<inputs.mssql.DatabaseVulnerabilityAssessmentRuleBaselineBaselineResult>[]>;
    /**
     * Specifies the name of the MS SQL Database. Changing this forces a new resource to be created.
     */
    databaseName: pulumi.Input<string>;
    /**
     * The vulnerability assessment rule ID. Changing this forces a new resource to be created.
     */
    ruleId: pulumi.Input<string>;
    /**
     * The Vulnerability Assessment ID of the MS SQL Server. Changing this forces a new resource to be created.
     */
    serverVulnerabilityAssessmentId: pulumi.Input<string>;
}
