import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
/**
 * Manages a Microsoft SQL Virtual Machine
 *
 * ## Example Usage
 *
 * This example provisions a brief Managed Microsoft SQL Virtual Machine.
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as azure from "@pulumi/azure";
 *
 * const example = azure.compute.getVirtualMachine({
 *     name: "example-vm",
 *     resourceGroupName: "example-resources",
 * });
 * const exampleVirtualMachine = new azure.mssql.VirtualMachine("example", {
 *     virtualMachineId: example.then(example => example.id),
 *     sqlLicenseType: "PAYG",
 *     rServicesEnabled: true,
 *     sqlConnectivityPort: 1433,
 *     sqlConnectivityType: "PRIVATE",
 *     sqlConnectivityUpdatePassword: "Password1234!",
 *     sqlConnectivityUpdateUsername: "sqllogin",
 *     autoPatching: {
 *         dayOfWeek: "Sunday",
 *         maintenanceWindowDurationInMinutes: 60,
 *         maintenanceWindowStartingHour: 2,
 *     },
 * });
 * ```
 *
 * ## Import
 *
 * Microsoft SQL Virtual Machines can be imported using the `resource id`, e.g.
 *
 * ```sh
 * $ pulumi import azure:mssql/virtualMachine:VirtualMachine example /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/group1/providers/Microsoft.SqlVirtualMachine/sqlVirtualMachines/example1
 * ```
 */
export declare class VirtualMachine extends pulumi.CustomResource {
    /**
     * Get an existing VirtualMachine resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    static get(name: string, id: pulumi.Input<pulumi.ID>, state?: VirtualMachineState, opts?: pulumi.CustomResourceOptions): VirtualMachine;
    /**
     * Returns true if the given object is an instance of VirtualMachine.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    static isInstance(obj: any): obj is VirtualMachine;
    /**
     * An `assessment` block as defined below.
     */
    readonly assessment: pulumi.Output<outputs.mssql.VirtualMachineAssessment | undefined>;
    /**
     * An `autoBackup` block as defined below. This block can be added to an existing resource, but removing this block forces a new resource to be created.
     */
    readonly autoBackup: pulumi.Output<outputs.mssql.VirtualMachineAutoBackup | undefined>;
    /**
     * An `autoPatching` block as defined below.
     */
    readonly autoPatching: pulumi.Output<outputs.mssql.VirtualMachineAutoPatching | undefined>;
    /**
     * An `keyVaultCredential` block as defined below.
     */
    readonly keyVaultCredential: pulumi.Output<outputs.mssql.VirtualMachineKeyVaultCredential | undefined>;
    /**
     * Should R Services be enabled?
     */
    readonly rServicesEnabled: pulumi.Output<boolean | undefined>;
    /**
     * The SQL Server port. Defaults to `1433`.
     */
    readonly sqlConnectivityPort: pulumi.Output<number | undefined>;
    /**
     * The connectivity type used for this SQL Server. Possible values are `LOCAL`, `PRIVATE` and `PUBLIC`. Defaults to `PRIVATE`.
     */
    readonly sqlConnectivityType: pulumi.Output<string | undefined>;
    /**
     * The SQL Server sysadmin login password.
     */
    readonly sqlConnectivityUpdatePassword: pulumi.Output<string | undefined>;
    /**
     * The SQL Server sysadmin login to create.
     */
    readonly sqlConnectivityUpdateUsername: pulumi.Output<string | undefined>;
    /**
     * A `sqlInstance` block as defined below.
     */
    readonly sqlInstance: pulumi.Output<outputs.mssql.VirtualMachineSqlInstance | undefined>;
    /**
     * The SQL Server license type. Possible values are `AHUB` (Azure Hybrid Benefit), `DR` (Disaster Recovery), and `PAYG` (Pay-As-You-Go). Changing this forces a new resource to be created.
     */
    readonly sqlLicenseType: pulumi.Output<string | undefined>;
    /**
     * The ID of the SQL Virtual Machine Group that the SQL Virtual Machine belongs to.
     */
    readonly sqlVirtualMachineGroupId: pulumi.Output<string | undefined>;
    /**
     * An `storageConfiguration` block as defined below.
     */
    readonly storageConfiguration: pulumi.Output<outputs.mssql.VirtualMachineStorageConfiguration | undefined>;
    /**
     * A mapping of tags to assign to the resource.
     */
    readonly tags: pulumi.Output<{
        [key: string]: string;
    } | undefined>;
    /**
     * The ID of the Virtual Machine. Changing this forces a new resource to be created.
     */
    readonly virtualMachineId: pulumi.Output<string>;
    /**
     * A `wsfcDomainCredential` block as defined below
     */
    readonly wsfcDomainCredential: pulumi.Output<outputs.mssql.VirtualMachineWsfcDomainCredential | undefined>;
    /**
     * Create a VirtualMachine resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: VirtualMachineArgs, opts?: pulumi.CustomResourceOptions);
}
/**
 * Input properties used for looking up and filtering VirtualMachine resources.
 */
export interface VirtualMachineState {
    /**
     * An `assessment` block as defined below.
     */
    assessment?: pulumi.Input<inputs.mssql.VirtualMachineAssessment>;
    /**
     * An `autoBackup` block as defined below. This block can be added to an existing resource, but removing this block forces a new resource to be created.
     */
    autoBackup?: pulumi.Input<inputs.mssql.VirtualMachineAutoBackup>;
    /**
     * An `autoPatching` block as defined below.
     */
    autoPatching?: pulumi.Input<inputs.mssql.VirtualMachineAutoPatching>;
    /**
     * An `keyVaultCredential` block as defined below.
     */
    keyVaultCredential?: pulumi.Input<inputs.mssql.VirtualMachineKeyVaultCredential>;
    /**
     * Should R Services be enabled?
     */
    rServicesEnabled?: pulumi.Input<boolean>;
    /**
     * The SQL Server port. Defaults to `1433`.
     */
    sqlConnectivityPort?: pulumi.Input<number>;
    /**
     * The connectivity type used for this SQL Server. Possible values are `LOCAL`, `PRIVATE` and `PUBLIC`. Defaults to `PRIVATE`.
     */
    sqlConnectivityType?: pulumi.Input<string>;
    /**
     * The SQL Server sysadmin login password.
     */
    sqlConnectivityUpdatePassword?: pulumi.Input<string>;
    /**
     * The SQL Server sysadmin login to create.
     */
    sqlConnectivityUpdateUsername?: pulumi.Input<string>;
    /**
     * A `sqlInstance` block as defined below.
     */
    sqlInstance?: pulumi.Input<inputs.mssql.VirtualMachineSqlInstance>;
    /**
     * The SQL Server license type. Possible values are `AHUB` (Azure Hybrid Benefit), `DR` (Disaster Recovery), and `PAYG` (Pay-As-You-Go). Changing this forces a new resource to be created.
     */
    sqlLicenseType?: pulumi.Input<string>;
    /**
     * The ID of the SQL Virtual Machine Group that the SQL Virtual Machine belongs to.
     */
    sqlVirtualMachineGroupId?: pulumi.Input<string>;
    /**
     * An `storageConfiguration` block as defined below.
     */
    storageConfiguration?: pulumi.Input<inputs.mssql.VirtualMachineStorageConfiguration>;
    /**
     * A mapping of tags to assign to the resource.
     */
    tags?: pulumi.Input<{
        [key: string]: pulumi.Input<string>;
    }>;
    /**
     * The ID of the Virtual Machine. Changing this forces a new resource to be created.
     */
    virtualMachineId?: pulumi.Input<string>;
    /**
     * A `wsfcDomainCredential` block as defined below
     */
    wsfcDomainCredential?: pulumi.Input<inputs.mssql.VirtualMachineWsfcDomainCredential>;
}
/**
 * The set of arguments for constructing a VirtualMachine resource.
 */
export interface VirtualMachineArgs {
    /**
     * An `assessment` block as defined below.
     */
    assessment?: pulumi.Input<inputs.mssql.VirtualMachineAssessment>;
    /**
     * An `autoBackup` block as defined below. This block can be added to an existing resource, but removing this block forces a new resource to be created.
     */
    autoBackup?: pulumi.Input<inputs.mssql.VirtualMachineAutoBackup>;
    /**
     * An `autoPatching` block as defined below.
     */
    autoPatching?: pulumi.Input<inputs.mssql.VirtualMachineAutoPatching>;
    /**
     * An `keyVaultCredential` block as defined below.
     */
    keyVaultCredential?: pulumi.Input<inputs.mssql.VirtualMachineKeyVaultCredential>;
    /**
     * Should R Services be enabled?
     */
    rServicesEnabled?: pulumi.Input<boolean>;
    /**
     * The SQL Server port. Defaults to `1433`.
     */
    sqlConnectivityPort?: pulumi.Input<number>;
    /**
     * The connectivity type used for this SQL Server. Possible values are `LOCAL`, `PRIVATE` and `PUBLIC`. Defaults to `PRIVATE`.
     */
    sqlConnectivityType?: pulumi.Input<string>;
    /**
     * The SQL Server sysadmin login password.
     */
    sqlConnectivityUpdatePassword?: pulumi.Input<string>;
    /**
     * The SQL Server sysadmin login to create.
     */
    sqlConnectivityUpdateUsername?: pulumi.Input<string>;
    /**
     * A `sqlInstance` block as defined below.
     */
    sqlInstance?: pulumi.Input<inputs.mssql.VirtualMachineSqlInstance>;
    /**
     * The SQL Server license type. Possible values are `AHUB` (Azure Hybrid Benefit), `DR` (Disaster Recovery), and `PAYG` (Pay-As-You-Go). Changing this forces a new resource to be created.
     */
    sqlLicenseType?: pulumi.Input<string>;
    /**
     * The ID of the SQL Virtual Machine Group that the SQL Virtual Machine belongs to.
     */
    sqlVirtualMachineGroupId?: pulumi.Input<string>;
    /**
     * An `storageConfiguration` block as defined below.
     */
    storageConfiguration?: pulumi.Input<inputs.mssql.VirtualMachineStorageConfiguration>;
    /**
     * A mapping of tags to assign to the resource.
     */
    tags?: pulumi.Input<{
        [key: string]: pulumi.Input<string>;
    }>;
    /**
     * The ID of the Virtual Machine. Changing this forces a new resource to be created.
     */
    virtualMachineId: pulumi.Input<string>;
    /**
     * A `wsfcDomainCredential` block as defined below
     */
    wsfcDomainCredential?: pulumi.Input<inputs.mssql.VirtualMachineWsfcDomainCredential>;
}
