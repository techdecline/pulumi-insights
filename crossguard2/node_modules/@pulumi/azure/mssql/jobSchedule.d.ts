import * as pulumi from "@pulumi/pulumi";
/**
 * Manages an Elastic Job Schedule.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as azure from "@pulumi/azure";
 *
 * const example = new azure.core.ResourceGroup("example", {
 *     name: "example-resource-group",
 *     location: "East US",
 * });
 * const exampleServer = new azure.mssql.Server("example", {
 *     name: "example-server",
 *     resourceGroupName: example.name,
 *     location: example.location,
 *     version: "12.0",
 *     administratorLogin: "4dm1n157r470r",
 *     administratorLoginPassword: "4-v3ry-53cr37-p455w0rd",
 * });
 * const exampleDatabase = new azure.mssql.Database("example", {
 *     name: "example-db",
 *     serverId: exampleServer.id,
 *     collation: "SQL_Latin1_General_CP1_CI_AS",
 *     skuName: "S1",
 * });
 * const exampleJobAgent = new azure.mssql.JobAgent("example", {
 *     name: "example-job-agent",
 *     location: example.location,
 *     databaseId: exampleDatabase.id,
 * });
 * const exampleJobCredential = new azure.mssql.JobCredential("example", {
 *     name: "example-job-credential",
 *     jobAgentId: exampleJobAgent.id,
 *     username: "my-username",
 *     password: "MyP4ssw0rd!!!",
 * });
 * const exampleJob = new azure.mssql.Job("example", {
 *     name: "example-job",
 *     jobAgentId: exampleJobAgent.id,
 * });
 * const exampleJobSchedule = new azure.mssql.JobSchedule("example", {
 *     jobId: exampleJob.id,
 *     type: "Recurring",
 *     enabled: true,
 *     endTime: "2025-12-01T00:00:00Z",
 *     interval: "PT5M",
 *     startTime: "2025-01-01T00:00:00Z",
 * });
 * ```
 *
 * ## Import
 *
 * Elastic Job Schedules can be imported using the `resource id`, e.g.
 *
 * ```sh
 * $ pulumi import azure:mssql/jobSchedule:JobSchedule example /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/mygroup1/providers/Microsoft.Sql/servers/myserver1/jobAgents/myjobagent1/jobs/myjob1
 * ```
 */
export declare class JobSchedule extends pulumi.CustomResource {
    /**
     * Get an existing JobSchedule resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    static get(name: string, id: pulumi.Input<pulumi.ID>, state?: JobScheduleState, opts?: pulumi.CustomResourceOptions): JobSchedule;
    /**
     * Returns true if the given object is an instance of JobSchedule.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    static isInstance(obj: any): obj is JobSchedule;
    /**
     * Should the Elastic Job Schedule be enabled? Defaults to `false`.
     *
     * > **Note:** When `type` is set to `Once` and `enabled` is set to `true`, it's recommended to add `enabled` to `ignoreChanges`. This is because Azure will set `enabled` to `false` once the job has executed.
     */
    readonly enabled: pulumi.Output<boolean>;
    /**
     * The end time of the schedule. Must be in RFC3339 format.
     */
    readonly endTime: pulumi.Output<string>;
    /**
     * The interval between job executions. Must be in ISO8601 duration format.
     */
    readonly interval: pulumi.Output<string | undefined>;
    /**
     * The ID of the Elastic Job. Changing this forces a new Elastic Job Schedule to be created.
     */
    readonly jobId: pulumi.Output<string>;
    /**
     * The start time of the schedule. Must be in RFC3339 format.
     */
    readonly startTime: pulumi.Output<string>;
    /**
     * The type of schedule. Possible values are `Once` and `Recurring`.
     */
    readonly type: pulumi.Output<string>;
    /**
     * Create a JobSchedule resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: JobScheduleArgs, opts?: pulumi.CustomResourceOptions);
}
/**
 * Input properties used for looking up and filtering JobSchedule resources.
 */
export interface JobScheduleState {
    /**
     * Should the Elastic Job Schedule be enabled? Defaults to `false`.
     *
     * > **Note:** When `type` is set to `Once` and `enabled` is set to `true`, it's recommended to add `enabled` to `ignoreChanges`. This is because Azure will set `enabled` to `false` once the job has executed.
     */
    enabled?: pulumi.Input<boolean>;
    /**
     * The end time of the schedule. Must be in RFC3339 format.
     */
    endTime?: pulumi.Input<string>;
    /**
     * The interval between job executions. Must be in ISO8601 duration format.
     */
    interval?: pulumi.Input<string>;
    /**
     * The ID of the Elastic Job. Changing this forces a new Elastic Job Schedule to be created.
     */
    jobId?: pulumi.Input<string>;
    /**
     * The start time of the schedule. Must be in RFC3339 format.
     */
    startTime?: pulumi.Input<string>;
    /**
     * The type of schedule. Possible values are `Once` and `Recurring`.
     */
    type?: pulumi.Input<string>;
}
/**
 * The set of arguments for constructing a JobSchedule resource.
 */
export interface JobScheduleArgs {
    /**
     * Should the Elastic Job Schedule be enabled? Defaults to `false`.
     *
     * > **Note:** When `type` is set to `Once` and `enabled` is set to `true`, it's recommended to add `enabled` to `ignoreChanges`. This is because Azure will set `enabled` to `false` once the job has executed.
     */
    enabled?: pulumi.Input<boolean>;
    /**
     * The end time of the schedule. Must be in RFC3339 format.
     */
    endTime?: pulumi.Input<string>;
    /**
     * The interval between job executions. Must be in ISO8601 duration format.
     */
    interval?: pulumi.Input<string>;
    /**
     * The ID of the Elastic Job. Changing this forces a new Elastic Job Schedule to be created.
     */
    jobId: pulumi.Input<string>;
    /**
     * The start time of the schedule. Must be in RFC3339 format.
     */
    startTime?: pulumi.Input<string>;
    /**
     * The type of schedule. Possible values are `Once` and `Recurring`.
     */
    type: pulumi.Input<string>;
}
