import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
/**
 * Manages a Resource Deployment Script of Azure Cli.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as azure from "@pulumi/azure";
 *
 * const example = new azure.core.ResourceGroup("example", {
 *     name: "example-resources",
 *     location: "West Europe",
 * });
 * const exampleUserAssignedIdentity = new azure.authorization.UserAssignedIdentity("example", {
 *     name: "example-uai",
 *     location: example.location,
 *     resourceGroupName: example.name,
 * });
 * const exampleResourceDeploymentScriptAzureCli = new azure.core.ResourceDeploymentScriptAzureCli("example", {
 *     name: "example-rdsac",
 *     resourceGroupName: example.name,
 *     location: "West Europe",
 *     version: "2.40.0",
 *     retentionInterval: "P1D",
 *     commandLine: "'foo' 'bar'",
 *     cleanupPreference: "OnSuccess",
 *     forceUpdateTag: "1",
 *     timeout: "PT30M",
 *     scriptContent: "            echo \"{\\\"name\\\":{\\\"displayName\\\":\\\"$1 $2\\\"}}\" > $AZ_SCRIPTS_OUTPUT_PATH\n",
 *     identity: {
 *         type: "UserAssigned",
 *         identityIds: [exampleUserAssignedIdentity.id],
 *     },
 *     tags: {
 *         key: "value",
 *     },
 * });
 * ```
 *
 * ## Import
 *
 * Resource Deployment Script can be imported using the `resource id`, e.g.
 *
 * ```sh
 * $ pulumi import azure:core/resourceDeploymentScriptAzureCli:ResourceDeploymentScriptAzureCli example /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/resourceGroup1/providers/Microsoft.Resources/deploymentScripts/script1
 * ```
 */
export declare class ResourceDeploymentScriptAzureCli extends pulumi.CustomResource {
    /**
     * Get an existing ResourceDeploymentScriptAzureCli resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    static get(name: string, id: pulumi.Input<pulumi.ID>, state?: ResourceDeploymentScriptAzureCliState, opts?: pulumi.CustomResourceOptions): ResourceDeploymentScriptAzureCli;
    /**
     * Returns true if the given object is an instance of ResourceDeploymentScriptAzureCli.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    static isInstance(obj: any): obj is ResourceDeploymentScriptAzureCli;
    /**
     * Specifies the cleanup preference when the script execution gets in a terminal state. Possible values are `Always`, `OnExpiration`, `OnSuccess`. Defaults to `Always`. Changing this forces a new Resource Deployment Script to be created.
     */
    readonly cleanupPreference: pulumi.Output<string | undefined>;
    /**
     * Command line arguments to pass to the script. Changing this forces a new Resource Deployment Script to be created.
     */
    readonly commandLine: pulumi.Output<string | undefined>;
    /**
     * A `container` block as defined below. Changing this forces a new Resource Deployment Script to be created.
     */
    readonly container: pulumi.Output<outputs.core.ResourceDeploymentScriptAzureCliContainer | undefined>;
    /**
     * An `environmentVariable` block as defined below. Changing this forces a new Resource Deployment Script to be created.
     */
    readonly environmentVariables: pulumi.Output<outputs.core.ResourceDeploymentScriptAzureCliEnvironmentVariable[] | undefined>;
    /**
     * Gets or sets how the deployment script should be forced to execute even if the script resource has not changed. Can be current time stamp or a GUID. Changing this forces a new Resource Deployment Script to be created.
     */
    readonly forceUpdateTag: pulumi.Output<string | undefined>;
    /**
     * An `identity` block as defined below. Changing this forces a new Resource Deployment Script to be created.
     */
    readonly identity: pulumi.Output<outputs.core.ResourceDeploymentScriptAzureCliIdentity | undefined>;
    /**
     * Specifies the Azure Region where the Resource Deployment Script should exist. Changing this forces a new Resource Deployment Script to be created.
     */
    readonly location: pulumi.Output<string>;
    /**
     * Specifies the name which should be used for this Resource Deployment Script. The name length must be from 1 to 260 characters. The name can only contain alphanumeric, underscore, parentheses, hyphen and period, and it cannot end with a period. Changing this forces a new Resource Deployment Script to be created.
     */
    readonly name: pulumi.Output<string>;
    /**
     * List of script outputs.
     */
    readonly outputs: pulumi.Output<string>;
    /**
     * Uri for the script. This is the entry point for the external script. Changing this forces a new Resource Deployment Script to be created.
     */
    readonly primaryScriptUri: pulumi.Output<string | undefined>;
    /**
     * Specifies the name of the Resource Group where the Resource Deployment Script should exist. Changing this forces a new Resource Deployment Script to be created.
     */
    readonly resourceGroupName: pulumi.Output<string>;
    /**
     * Interval for which the service retains the script resource after it reaches a terminal state. Resource will be deleted when this duration expires. The time duration should be between `1` hour and `26` hours (inclusive) and should be specified in ISO 8601 format. Changing this forces a new Resource Deployment Script to be created.
     */
    readonly retentionInterval: pulumi.Output<string>;
    /**
     * Script body. Changing this forces a new Resource Deployment Script to be created.
     */
    readonly scriptContent: pulumi.Output<string | undefined>;
    /**
     * A `storageAccount` block as defined below. Changing this forces a new Resource Deployment Script to be created.
     */
    readonly storageAccount: pulumi.Output<outputs.core.ResourceDeploymentScriptAzureCliStorageAccount | undefined>;
    /**
     * Supporting files for the external script. Changing this forces a new Resource Deployment Script to be created.
     */
    readonly supportingScriptUris: pulumi.Output<string[] | undefined>;
    /**
     * A mapping of tags which should be assigned to the Resource Deployment Script.
     */
    readonly tags: pulumi.Output<{
        [key: string]: string;
    } | undefined>;
    /**
     * Maximum allowed script execution time specified in ISO 8601 format. Needs to be greater than 0 and smaller than 1 day. Defaults to `P1D`. Changing this forces a new Resource Deployment Script to be created.
     */
    readonly timeout: pulumi.Output<string | undefined>;
    /**
     * Specifies the version of the Azure CLI that should be used in the format `X.Y.Z` (e.g. `2.30.0`). A canonical list of versions [is available from the Microsoft Container Registry API](https://mcr.microsoft.com/v2/azure-cli/tags/list). Changing this forces a new Resource Deployment Script to be created.
     */
    readonly version: pulumi.Output<string>;
    /**
     * Create a ResourceDeploymentScriptAzureCli resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: ResourceDeploymentScriptAzureCliArgs, opts?: pulumi.CustomResourceOptions);
}
/**
 * Input properties used for looking up and filtering ResourceDeploymentScriptAzureCli resources.
 */
export interface ResourceDeploymentScriptAzureCliState {
    /**
     * Specifies the cleanup preference when the script execution gets in a terminal state. Possible values are `Always`, `OnExpiration`, `OnSuccess`. Defaults to `Always`. Changing this forces a new Resource Deployment Script to be created.
     */
    cleanupPreference?: pulumi.Input<string>;
    /**
     * Command line arguments to pass to the script. Changing this forces a new Resource Deployment Script to be created.
     */
    commandLine?: pulumi.Input<string>;
    /**
     * A `container` block as defined below. Changing this forces a new Resource Deployment Script to be created.
     */
    container?: pulumi.Input<inputs.core.ResourceDeploymentScriptAzureCliContainer>;
    /**
     * An `environmentVariable` block as defined below. Changing this forces a new Resource Deployment Script to be created.
     */
    environmentVariables?: pulumi.Input<pulumi.Input<inputs.core.ResourceDeploymentScriptAzureCliEnvironmentVariable>[]>;
    /**
     * Gets or sets how the deployment script should be forced to execute even if the script resource has not changed. Can be current time stamp or a GUID. Changing this forces a new Resource Deployment Script to be created.
     */
    forceUpdateTag?: pulumi.Input<string>;
    /**
     * An `identity` block as defined below. Changing this forces a new Resource Deployment Script to be created.
     */
    identity?: pulumi.Input<inputs.core.ResourceDeploymentScriptAzureCliIdentity>;
    /**
     * Specifies the Azure Region where the Resource Deployment Script should exist. Changing this forces a new Resource Deployment Script to be created.
     */
    location?: pulumi.Input<string>;
    /**
     * Specifies the name which should be used for this Resource Deployment Script. The name length must be from 1 to 260 characters. The name can only contain alphanumeric, underscore, parentheses, hyphen and period, and it cannot end with a period. Changing this forces a new Resource Deployment Script to be created.
     */
    name?: pulumi.Input<string>;
    /**
     * List of script outputs.
     */
    outputs?: pulumi.Input<string>;
    /**
     * Uri for the script. This is the entry point for the external script. Changing this forces a new Resource Deployment Script to be created.
     */
    primaryScriptUri?: pulumi.Input<string>;
    /**
     * Specifies the name of the Resource Group where the Resource Deployment Script should exist. Changing this forces a new Resource Deployment Script to be created.
     */
    resourceGroupName?: pulumi.Input<string>;
    /**
     * Interval for which the service retains the script resource after it reaches a terminal state. Resource will be deleted when this duration expires. The time duration should be between `1` hour and `26` hours (inclusive) and should be specified in ISO 8601 format. Changing this forces a new Resource Deployment Script to be created.
     */
    retentionInterval?: pulumi.Input<string>;
    /**
     * Script body. Changing this forces a new Resource Deployment Script to be created.
     */
    scriptContent?: pulumi.Input<string>;
    /**
     * A `storageAccount` block as defined below. Changing this forces a new Resource Deployment Script to be created.
     */
    storageAccount?: pulumi.Input<inputs.core.ResourceDeploymentScriptAzureCliStorageAccount>;
    /**
     * Supporting files for the external script. Changing this forces a new Resource Deployment Script to be created.
     */
    supportingScriptUris?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * A mapping of tags which should be assigned to the Resource Deployment Script.
     */
    tags?: pulumi.Input<{
        [key: string]: pulumi.Input<string>;
    }>;
    /**
     * Maximum allowed script execution time specified in ISO 8601 format. Needs to be greater than 0 and smaller than 1 day. Defaults to `P1D`. Changing this forces a new Resource Deployment Script to be created.
     */
    timeout?: pulumi.Input<string>;
    /**
     * Specifies the version of the Azure CLI that should be used in the format `X.Y.Z` (e.g. `2.30.0`). A canonical list of versions [is available from the Microsoft Container Registry API](https://mcr.microsoft.com/v2/azure-cli/tags/list). Changing this forces a new Resource Deployment Script to be created.
     */
    version?: pulumi.Input<string>;
}
/**
 * The set of arguments for constructing a ResourceDeploymentScriptAzureCli resource.
 */
export interface ResourceDeploymentScriptAzureCliArgs {
    /**
     * Specifies the cleanup preference when the script execution gets in a terminal state. Possible values are `Always`, `OnExpiration`, `OnSuccess`. Defaults to `Always`. Changing this forces a new Resource Deployment Script to be created.
     */
    cleanupPreference?: pulumi.Input<string>;
    /**
     * Command line arguments to pass to the script. Changing this forces a new Resource Deployment Script to be created.
     */
    commandLine?: pulumi.Input<string>;
    /**
     * A `container` block as defined below. Changing this forces a new Resource Deployment Script to be created.
     */
    container?: pulumi.Input<inputs.core.ResourceDeploymentScriptAzureCliContainer>;
    /**
     * An `environmentVariable` block as defined below. Changing this forces a new Resource Deployment Script to be created.
     */
    environmentVariables?: pulumi.Input<pulumi.Input<inputs.core.ResourceDeploymentScriptAzureCliEnvironmentVariable>[]>;
    /**
     * Gets or sets how the deployment script should be forced to execute even if the script resource has not changed. Can be current time stamp or a GUID. Changing this forces a new Resource Deployment Script to be created.
     */
    forceUpdateTag?: pulumi.Input<string>;
    /**
     * An `identity` block as defined below. Changing this forces a new Resource Deployment Script to be created.
     */
    identity?: pulumi.Input<inputs.core.ResourceDeploymentScriptAzureCliIdentity>;
    /**
     * Specifies the Azure Region where the Resource Deployment Script should exist. Changing this forces a new Resource Deployment Script to be created.
     */
    location?: pulumi.Input<string>;
    /**
     * Specifies the name which should be used for this Resource Deployment Script. The name length must be from 1 to 260 characters. The name can only contain alphanumeric, underscore, parentheses, hyphen and period, and it cannot end with a period. Changing this forces a new Resource Deployment Script to be created.
     */
    name?: pulumi.Input<string>;
    /**
     * Uri for the script. This is the entry point for the external script. Changing this forces a new Resource Deployment Script to be created.
     */
    primaryScriptUri?: pulumi.Input<string>;
    /**
     * Specifies the name of the Resource Group where the Resource Deployment Script should exist. Changing this forces a new Resource Deployment Script to be created.
     */
    resourceGroupName: pulumi.Input<string>;
    /**
     * Interval for which the service retains the script resource after it reaches a terminal state. Resource will be deleted when this duration expires. The time duration should be between `1` hour and `26` hours (inclusive) and should be specified in ISO 8601 format. Changing this forces a new Resource Deployment Script to be created.
     */
    retentionInterval: pulumi.Input<string>;
    /**
     * Script body. Changing this forces a new Resource Deployment Script to be created.
     */
    scriptContent?: pulumi.Input<string>;
    /**
     * A `storageAccount` block as defined below. Changing this forces a new Resource Deployment Script to be created.
     */
    storageAccount?: pulumi.Input<inputs.core.ResourceDeploymentScriptAzureCliStorageAccount>;
    /**
     * Supporting files for the external script. Changing this forces a new Resource Deployment Script to be created.
     */
    supportingScriptUris?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * A mapping of tags which should be assigned to the Resource Deployment Script.
     */
    tags?: pulumi.Input<{
        [key: string]: pulumi.Input<string>;
    }>;
    /**
     * Maximum allowed script execution time specified in ISO 8601 format. Needs to be greater than 0 and smaller than 1 day. Defaults to `P1D`. Changing this forces a new Resource Deployment Script to be created.
     */
    timeout?: pulumi.Input<string>;
    /**
     * Specifies the version of the Azure CLI that should be used in the format `X.Y.Z` (e.g. `2.30.0`). A canonical list of versions [is available from the Microsoft Container Registry API](https://mcr.microsoft.com/v2/azure-cli/tags/list). Changing this forces a new Resource Deployment Script to be created.
     */
    version: pulumi.Input<string>;
}
