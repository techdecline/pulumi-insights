"use strict";
// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***
Object.defineProperty(exports, "__esModule", { value: true });
exports.ResourceDeploymentScriptPowerShell = void 0;
const pulumi = require("@pulumi/pulumi");
const utilities = require("../utilities");
/**
 * Manages a Resource Deployment Script of Azure PowerShell.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as azure from "@pulumi/azure";
 *
 * const example = new azure.core.ResourceGroup("example", {
 *     name: "example-resources",
 *     location: "West Europe",
 * });
 * const exampleUserAssignedIdentity = new azure.authorization.UserAssignedIdentity("example", {
 *     name: "example-uai",
 *     location: example.location,
 *     resourceGroupName: example.name,
 * });
 * const exampleResourceDeploymentScriptPowerShell = new azure.core.ResourceDeploymentScriptPowerShell("example", {
 *     name: "example-rdsaps",
 *     resourceGroupName: example.name,
 *     location: "West Europe",
 *     version: "8.3",
 *     retentionInterval: "P1D",
 *     commandLine: "-name \"John Dole\"",
 *     cleanupPreference: "OnSuccess",
 *     forceUpdateTag: "1",
 *     timeout: "PT30M",
 *     scriptContent: `          param([string] name)
 *             output = 'Hello {0}.' -f name
 *             Write-Output output
 *             DeploymentScriptOutputs = @{}
 *             DeploymentScriptOutputs['text'] = output
 * `,
 *     identity: {
 *         type: "UserAssigned",
 *         identityIds: [exampleUserAssignedIdentity.id],
 *     },
 *     tags: {
 *         key: "value",
 *     },
 * });
 * ```
 *
 * ## Import
 *
 * Resource Deployment Script can be imported using the `resource id`, e.g.
 *
 * ```sh
 * $ pulumi import azure:core/resourceDeploymentScriptPowerShell:ResourceDeploymentScriptPowerShell example /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/resourceGroup1/providers/Microsoft.Resources/deploymentScripts/script1
 * ```
 */
class ResourceDeploymentScriptPowerShell extends pulumi.CustomResource {
    constructor(name, argsOrState, opts) {
        let resourceInputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState;
            resourceInputs["cleanupPreference"] = state ? state.cleanupPreference : undefined;
            resourceInputs["commandLine"] = state ? state.commandLine : undefined;
            resourceInputs["container"] = state ? state.container : undefined;
            resourceInputs["environmentVariables"] = state ? state.environmentVariables : undefined;
            resourceInputs["forceUpdateTag"] = state ? state.forceUpdateTag : undefined;
            resourceInputs["identity"] = state ? state.identity : undefined;
            resourceInputs["location"] = state ? state.location : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["outputs"] = state ? state.outputs : undefined;
            resourceInputs["primaryScriptUri"] = state ? state.primaryScriptUri : undefined;
            resourceInputs["resourceGroupName"] = state ? state.resourceGroupName : undefined;
            resourceInputs["retentionInterval"] = state ? state.retentionInterval : undefined;
            resourceInputs["scriptContent"] = state ? state.scriptContent : undefined;
            resourceInputs["storageAccount"] = state ? state.storageAccount : undefined;
            resourceInputs["supportingScriptUris"] = state ? state.supportingScriptUris : undefined;
            resourceInputs["tags"] = state ? state.tags : undefined;
            resourceInputs["timeout"] = state ? state.timeout : undefined;
            resourceInputs["version"] = state ? state.version : undefined;
        }
        else {
            const args = argsOrState;
            if ((!args || args.resourceGroupName === undefined) && !opts.urn) {
                throw new Error("Missing required property 'resourceGroupName'");
            }
            if ((!args || args.retentionInterval === undefined) && !opts.urn) {
                throw new Error("Missing required property 'retentionInterval'");
            }
            if ((!args || args.version === undefined) && !opts.urn) {
                throw new Error("Missing required property 'version'");
            }
            resourceInputs["cleanupPreference"] = args ? args.cleanupPreference : undefined;
            resourceInputs["commandLine"] = args ? args.commandLine : undefined;
            resourceInputs["container"] = args ? args.container : undefined;
            resourceInputs["environmentVariables"] = args ? args.environmentVariables : undefined;
            resourceInputs["forceUpdateTag"] = args ? args.forceUpdateTag : undefined;
            resourceInputs["identity"] = args ? args.identity : undefined;
            resourceInputs["location"] = args ? args.location : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["primaryScriptUri"] = args ? args.primaryScriptUri : undefined;
            resourceInputs["resourceGroupName"] = args ? args.resourceGroupName : undefined;
            resourceInputs["retentionInterval"] = args ? args.retentionInterval : undefined;
            resourceInputs["scriptContent"] = args ? args.scriptContent : undefined;
            resourceInputs["storageAccount"] = args ? args.storageAccount : undefined;
            resourceInputs["supportingScriptUris"] = args ? args.supportingScriptUris : undefined;
            resourceInputs["tags"] = args ? args.tags : undefined;
            resourceInputs["timeout"] = args ? args.timeout : undefined;
            resourceInputs["version"] = args ? args.version : undefined;
            resourceInputs["outputs"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(ResourceDeploymentScriptPowerShell.__pulumiType, name, resourceInputs, opts);
    }
    /**
     * Get an existing ResourceDeploymentScriptPowerShell resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    static get(name, id, state, opts) {
        return new ResourceDeploymentScriptPowerShell(name, state, Object.assign(Object.assign({}, opts), { id: id }));
    }
    /**
     * Returns true if the given object is an instance of ResourceDeploymentScriptPowerShell.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    static isInstance(obj) {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === ResourceDeploymentScriptPowerShell.__pulumiType;
    }
}
exports.ResourceDeploymentScriptPowerShell = ResourceDeploymentScriptPowerShell;
/** @internal */
ResourceDeploymentScriptPowerShell.__pulumiType = 'azure:core/resourceDeploymentScriptPowerShell:ResourceDeploymentScriptPowerShell';
//# sourceMappingURL=resourceDeploymentScriptPowerShell.js.map