import * as pulumi from "@pulumi/pulumi";
/**
 * Manages a Trusted Signing Account.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as azure from "@pulumi/azure";
 *
 * const example = new azure.core.ResourceGroup("example", {
 *     name: "example",
 *     location: "West Europe",
 * });
 * const exampleAccount = new azure.trustedsigning.Account("example", {
 *     name: "example-account",
 *     resourceGroupName: example.name,
 *     location: "West Europe",
 *     skuName: "Basic",
 * });
 * ```
 *
 * ## Import
 *
 * Trusted Signing Accounts can be imported using the `resource id`, e.g.
 *
 * ```sh
 * $ pulumi import azure:trustedsigning/account:Account example /subscriptions/0000000-0000-0000-0000-000000000000/resourceGroups/example-rg/providers/Microsoft.CodeSigning/codeSigningAccounts/example-account
 * ```
 */
export declare class Account extends pulumi.CustomResource {
    /**
     * Get an existing Account resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    static get(name: string, id: pulumi.Input<pulumi.ID>, state?: AccountState, opts?: pulumi.CustomResourceOptions): Account;
    /**
     * Returns true if the given object is an instance of Account.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    static isInstance(obj: any): obj is Account;
    /**
     * The URI of the Trusted Signing Account which is used during signing files.
     */
    readonly accountUri: pulumi.Output<string>;
    /**
     * The Azure Region where the Trusted Signing Account should exist. Changing this forces a new Trusted Signing Account to be created.
     */
    readonly location: pulumi.Output<string>;
    /**
     * The name which should be used for this Trusted Signing Account. Changing this forces a new Trusted Signing Account to be created.
     */
    readonly name: pulumi.Output<string>;
    /**
     * The name of the Resource Group where the Trusted Signing Account should exist. Changing this forces a new Trusted Signing Account to be created.
     */
    readonly resourceGroupName: pulumi.Output<string>;
    /**
     * The sku name of this Trusted Signing Account. Possible values are `Basic` and `Premium`.
     */
    readonly skuName: pulumi.Output<string>;
    /**
     * A mapping of tags which should be assigned to the Trusted Signing Account.
     */
    readonly tags: pulumi.Output<{
        [key: string]: string;
    } | undefined>;
    /**
     * Create a Account resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: AccountArgs, opts?: pulumi.CustomResourceOptions);
}
/**
 * Input properties used for looking up and filtering Account resources.
 */
export interface AccountState {
    /**
     * The URI of the Trusted Signing Account which is used during signing files.
     */
    accountUri?: pulumi.Input<string>;
    /**
     * The Azure Region where the Trusted Signing Account should exist. Changing this forces a new Trusted Signing Account to be created.
     */
    location?: pulumi.Input<string>;
    /**
     * The name which should be used for this Trusted Signing Account. Changing this forces a new Trusted Signing Account to be created.
     */
    name?: pulumi.Input<string>;
    /**
     * The name of the Resource Group where the Trusted Signing Account should exist. Changing this forces a new Trusted Signing Account to be created.
     */
    resourceGroupName?: pulumi.Input<string>;
    /**
     * The sku name of this Trusted Signing Account. Possible values are `Basic` and `Premium`.
     */
    skuName?: pulumi.Input<string>;
    /**
     * A mapping of tags which should be assigned to the Trusted Signing Account.
     */
    tags?: pulumi.Input<{
        [key: string]: pulumi.Input<string>;
    }>;
}
/**
 * The set of arguments for constructing a Account resource.
 */
export interface AccountArgs {
    /**
     * The Azure Region where the Trusted Signing Account should exist. Changing this forces a new Trusted Signing Account to be created.
     */
    location?: pulumi.Input<string>;
    /**
     * The name which should be used for this Trusted Signing Account. Changing this forces a new Trusted Signing Account to be created.
     */
    name?: pulumi.Input<string>;
    /**
     * The name of the Resource Group where the Trusted Signing Account should exist. Changing this forces a new Trusted Signing Account to be created.
     */
    resourceGroupName: pulumi.Input<string>;
    /**
     * The sku name of this Trusted Signing Account. Possible values are `Basic` and `Premium`.
     */
    skuName: pulumi.Input<string>;
    /**
     * A mapping of tags which should be assigned to the Trusted Signing Account.
     */
    tags?: pulumi.Input<{
        [key: string]: pulumi.Input<string>;
    }>;
}
