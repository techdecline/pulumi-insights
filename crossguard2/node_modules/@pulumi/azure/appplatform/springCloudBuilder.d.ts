import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
/**
 * Manages a Spring Cloud Builder.
 *
 * > **NOTE:** This resource is applicable only for Spring Cloud Service with enterprise tier.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as azure from "@pulumi/azure";
 *
 * const example = new azure.core.ResourceGroup("example", {
 *     name: "example-resources",
 *     location: "West Europe",
 * });
 * const exampleSpringCloudService = new azure.appplatform.SpringCloudService("example", {
 *     name: "example-springcloud",
 *     resourceGroupName: example.name,
 *     location: example.location,
 *     skuName: "E0",
 * });
 * const exampleSpringCloudBuilder = new azure.appplatform.SpringCloudBuilder("example", {
 *     name: "example",
 *     springCloudServiceId: exampleSpringCloudService.id,
 *     buildPackGroups: [{
 *         name: "mix",
 *         buildPackIds: ["tanzu-buildpacks/java-azure"],
 *     }],
 *     stack: {
 *         id: "io.buildpacks.stacks.bionic",
 *         version: "base",
 *     },
 * });
 * ```
 *
 * ## Import
 *
 * Spring Cloud Builders can be imported using the `resource id`, e.g.
 *
 * ```sh
 * $ pulumi import azure:appplatform/springCloudBuilder:SpringCloudBuilder example /subscriptions/12345678-1234-9876-4563-123456789012/resourceGroups/resourceGroup1/providers/Microsoft.AppPlatform/spring/service1/buildServices/buildService1/builders/builder1
 * ```
 */
export declare class SpringCloudBuilder extends pulumi.CustomResource {
    /**
     * Get an existing SpringCloudBuilder resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    static get(name: string, id: pulumi.Input<pulumi.ID>, state?: SpringCloudBuilderState, opts?: pulumi.CustomResourceOptions): SpringCloudBuilder;
    /**
     * Returns true if the given object is an instance of SpringCloudBuilder.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    static isInstance(obj: any): obj is SpringCloudBuilder;
    /**
     * One or more `buildPackGroup` blocks as defined below.
     */
    readonly buildPackGroups: pulumi.Output<outputs.appplatform.SpringCloudBuilderBuildPackGroup[]>;
    /**
     * The name which should be used for this Spring Cloud Builder. Changing this forces a new Spring Cloud Builder to be created.
     */
    readonly name: pulumi.Output<string>;
    /**
     * The ID of the Spring Cloud Service. Changing this forces a new Spring Cloud Builder to be created.
     */
    readonly springCloudServiceId: pulumi.Output<string>;
    /**
     * A `stack` block as defined below.
     */
    readonly stack: pulumi.Output<outputs.appplatform.SpringCloudBuilderStack>;
    /**
     * Create a SpringCloudBuilder resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: SpringCloudBuilderArgs, opts?: pulumi.CustomResourceOptions);
}
/**
 * Input properties used for looking up and filtering SpringCloudBuilder resources.
 */
export interface SpringCloudBuilderState {
    /**
     * One or more `buildPackGroup` blocks as defined below.
     */
    buildPackGroups?: pulumi.Input<pulumi.Input<inputs.appplatform.SpringCloudBuilderBuildPackGroup>[]>;
    /**
     * The name which should be used for this Spring Cloud Builder. Changing this forces a new Spring Cloud Builder to be created.
     */
    name?: pulumi.Input<string>;
    /**
     * The ID of the Spring Cloud Service. Changing this forces a new Spring Cloud Builder to be created.
     */
    springCloudServiceId?: pulumi.Input<string>;
    /**
     * A `stack` block as defined below.
     */
    stack?: pulumi.Input<inputs.appplatform.SpringCloudBuilderStack>;
}
/**
 * The set of arguments for constructing a SpringCloudBuilder resource.
 */
export interface SpringCloudBuilderArgs {
    /**
     * One or more `buildPackGroup` blocks as defined below.
     */
    buildPackGroups: pulumi.Input<pulumi.Input<inputs.appplatform.SpringCloudBuilderBuildPackGroup>[]>;
    /**
     * The name which should be used for this Spring Cloud Builder. Changing this forces a new Spring Cloud Builder to be created.
     */
    name?: pulumi.Input<string>;
    /**
     * The ID of the Spring Cloud Service. Changing this forces a new Spring Cloud Builder to be created.
     */
    springCloudServiceId: pulumi.Input<string>;
    /**
     * A `stack` block as defined below.
     */
    stack: pulumi.Input<inputs.appplatform.SpringCloudBuilderStack>;
}
