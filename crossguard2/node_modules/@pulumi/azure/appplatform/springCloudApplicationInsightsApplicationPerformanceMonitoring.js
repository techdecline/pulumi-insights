"use strict";
// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***
Object.defineProperty(exports, "__esModule", { value: true });
exports.SpringCloudApplicationInsightsApplicationPerformanceMonitoring = void 0;
const pulumi = require("@pulumi/pulumi");
const utilities = require("../utilities");
/**
 * > **NOTE:** This resource is only applicable for Spring Cloud Service enterprise tier
 *
 * Manages a Spring Cloud Application Performance Monitoring resource for Application Insights.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as azure from "@pulumi/azure";
 *
 * const example = new azure.core.ResourceGroup("example", {
 *     name: "example",
 *     location: "West Europe",
 * });
 * const exampleInsights = new azure.appinsights.Insights("example", {
 *     name: "example",
 *     location: example.location,
 *     resourceGroupName: example.name,
 *     applicationType: "web",
 * });
 * const exampleSpringCloudService = new azure.appplatform.SpringCloudService("example", {
 *     name: "example",
 *     location: example.location,
 *     resourceGroupName: example.name,
 *     skuName: "E0",
 * });
 * const exampleSpringCloudApplicationInsightsApplicationPerformanceMonitoring = new azure.appplatform.SpringCloudApplicationInsightsApplicationPerformanceMonitoring("example", {
 *     name: "example",
 *     springCloudServiceId: exampleSpringCloudService.id,
 *     connectionString: exampleInsights.instrumentationKey,
 *     globallyEnabled: true,
 *     roleName: "test-role",
 *     roleInstance: "test-instance",
 *     samplingPercentage: 50,
 *     samplingRequestsPerSecond: 10,
 * });
 * ```
 *
 * ## Import
 *
 * Spring Cloud Application Performance Monitoring resource for Application Insights can be imported using the `resource id`, e.g.
 *
 * ```sh
 * $ pulumi import azure:appplatform/springCloudApplicationInsightsApplicationPerformanceMonitoring:SpringCloudApplicationInsightsApplicationPerformanceMonitoring example /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/mygroup1/providers/Microsoft.AppPlatform/spring/service1/apms/apm1
 * ```
 */
class SpringCloudApplicationInsightsApplicationPerformanceMonitoring extends pulumi.CustomResource {
    constructor(name, argsOrState, opts) {
        let resourceInputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState;
            resourceInputs["connectionString"] = state ? state.connectionString : undefined;
            resourceInputs["globallyEnabled"] = state ? state.globallyEnabled : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["roleInstance"] = state ? state.roleInstance : undefined;
            resourceInputs["roleName"] = state ? state.roleName : undefined;
            resourceInputs["samplingPercentage"] = state ? state.samplingPercentage : undefined;
            resourceInputs["samplingRequestsPerSecond"] = state ? state.samplingRequestsPerSecond : undefined;
            resourceInputs["springCloudServiceId"] = state ? state.springCloudServiceId : undefined;
        }
        else {
            const args = argsOrState;
            if ((!args || args.springCloudServiceId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'springCloudServiceId'");
            }
            resourceInputs["connectionString"] = args ? args.connectionString : undefined;
            resourceInputs["globallyEnabled"] = args ? args.globallyEnabled : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["roleInstance"] = args ? args.roleInstance : undefined;
            resourceInputs["roleName"] = args ? args.roleName : undefined;
            resourceInputs["samplingPercentage"] = args ? args.samplingPercentage : undefined;
            resourceInputs["samplingRequestsPerSecond"] = args ? args.samplingRequestsPerSecond : undefined;
            resourceInputs["springCloudServiceId"] = args ? args.springCloudServiceId : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(SpringCloudApplicationInsightsApplicationPerformanceMonitoring.__pulumiType, name, resourceInputs, opts);
    }
    /**
     * Get an existing SpringCloudApplicationInsightsApplicationPerformanceMonitoring resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    static get(name, id, state, opts) {
        return new SpringCloudApplicationInsightsApplicationPerformanceMonitoring(name, state, Object.assign(Object.assign({}, opts), { id: id }));
    }
    /**
     * Returns true if the given object is an instance of SpringCloudApplicationInsightsApplicationPerformanceMonitoring.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    static isInstance(obj) {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === SpringCloudApplicationInsightsApplicationPerformanceMonitoring.__pulumiType;
    }
}
exports.SpringCloudApplicationInsightsApplicationPerformanceMonitoring = SpringCloudApplicationInsightsApplicationPerformanceMonitoring;
/** @internal */
SpringCloudApplicationInsightsApplicationPerformanceMonitoring.__pulumiType = 'azure:appplatform/springCloudApplicationInsightsApplicationPerformanceMonitoring:SpringCloudApplicationInsightsApplicationPerformanceMonitoring';
//# sourceMappingURL=springCloudApplicationInsightsApplicationPerformanceMonitoring.js.map