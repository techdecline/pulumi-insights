"use strict";
// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***
Object.defineProperty(exports, "__esModule", { value: true });
exports.SpringCloudCustomizedAccelerator = void 0;
const pulumi = require("@pulumi/pulumi");
const utilities = require("../utilities");
/**
 * Manages a Spring Cloud Customized Accelerator.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as azure from "@pulumi/azure";
 *
 * const example = new azure.core.ResourceGroup("example", {
 *     name: "example-resources",
 *     location: "west europe",
 * });
 * const exampleSpringCloudService = new azure.appplatform.SpringCloudService("example", {
 *     name: "example",
 *     location: example.location,
 *     resourceGroupName: example.name,
 *     skuName: "E0",
 * });
 * const exampleSpringCloudAccelerator = new azure.appplatform.SpringCloudAccelerator("example", {
 *     name: "default",
 *     springCloudServiceId: exampleSpringCloudService.id,
 * });
 * const exampleSpringCloudCustomizedAccelerator = new azure.appplatform.SpringCloudCustomizedAccelerator("example", {
 *     name: "example",
 *     springCloudAcceleratorId: exampleSpringCloudAccelerator.id,
 *     gitRepository: {
 *         url: "https://github.com/Azure-Samples/piggymetrics",
 *         gitTag: "spring.version.2.0.3",
 *         intervalInSeconds: 100,
 *     },
 *     acceleratorTags: [
 *         "tag-a",
 *         "tag-b",
 *     ],
 *     description: "example description",
 *     displayName: "example name",
 *     iconUrl: "https://images.freecreatives.com/wp-content/uploads/2015/05/smiley-559124_640.jpg",
 * });
 * ```
 *
 * ## Import
 *
 * Spring Cloud Customized Accelerators can be imported using the `resource id`, e.g.
 *
 * ```sh
 * $ pulumi import azure:appplatform/springCloudCustomizedAccelerator:SpringCloudCustomizedAccelerator example /subscriptions/12345678-1234-9876-4563-123456789012/resourceGroups/resGroup1/providers/Microsoft.AppPlatform/spring/spring1/applicationAccelerators/default/customizedAccelerators/customizedAccelerator1
 * ```
 */
class SpringCloudCustomizedAccelerator extends pulumi.CustomResource {
    constructor(name, argsOrState, opts) {
        let resourceInputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState;
            resourceInputs["acceleratorTags"] = state ? state.acceleratorTags : undefined;
            resourceInputs["acceleratorType"] = state ? state.acceleratorType : undefined;
            resourceInputs["description"] = state ? state.description : undefined;
            resourceInputs["displayName"] = state ? state.displayName : undefined;
            resourceInputs["gitRepository"] = state ? state.gitRepository : undefined;
            resourceInputs["iconUrl"] = state ? state.iconUrl : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["springCloudAcceleratorId"] = state ? state.springCloudAcceleratorId : undefined;
        }
        else {
            const args = argsOrState;
            if ((!args || args.gitRepository === undefined) && !opts.urn) {
                throw new Error("Missing required property 'gitRepository'");
            }
            if ((!args || args.springCloudAcceleratorId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'springCloudAcceleratorId'");
            }
            resourceInputs["acceleratorTags"] = args ? args.acceleratorTags : undefined;
            resourceInputs["acceleratorType"] = args ? args.acceleratorType : undefined;
            resourceInputs["description"] = args ? args.description : undefined;
            resourceInputs["displayName"] = args ? args.displayName : undefined;
            resourceInputs["gitRepository"] = args ? args.gitRepository : undefined;
            resourceInputs["iconUrl"] = args ? args.iconUrl : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["springCloudAcceleratorId"] = args ? args.springCloudAcceleratorId : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(SpringCloudCustomizedAccelerator.__pulumiType, name, resourceInputs, opts);
    }
    /**
     * Get an existing SpringCloudCustomizedAccelerator resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    static get(name, id, state, opts) {
        return new SpringCloudCustomizedAccelerator(name, state, Object.assign(Object.assign({}, opts), { id: id }));
    }
    /**
     * Returns true if the given object is an instance of SpringCloudCustomizedAccelerator.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    static isInstance(obj) {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === SpringCloudCustomizedAccelerator.__pulumiType;
    }
}
exports.SpringCloudCustomizedAccelerator = SpringCloudCustomizedAccelerator;
/** @internal */
SpringCloudCustomizedAccelerator.__pulumiType = 'azure:appplatform/springCloudCustomizedAccelerator:SpringCloudCustomizedAccelerator';
//# sourceMappingURL=springCloudCustomizedAccelerator.js.map