import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
/**
 * Manages a Spring Cloud Build Deployment.
 *
 * > **NOTE:** This resource is applicable only for Spring Cloud Service with enterprise tier.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as azure from "@pulumi/azure";
 *
 * const example = new azure.core.ResourceGroup("example", {
 *     name: "example",
 *     location: "West Europe",
 * });
 * const exampleSpringCloudService = new azure.appplatform.SpringCloudService("example", {
 *     name: "example",
 *     location: example.location,
 *     resourceGroupName: example.name,
 *     skuName: "E0",
 * });
 * const exampleSpringCloudApp = new azure.appplatform.SpringCloudApp("example", {
 *     name: "example",
 *     resourceGroupName: exampleSpringCloudService.resourceGroupName,
 *     serviceName: exampleSpringCloudService.name,
 * });
 * const exampleSpringCloudBuildDeployment = new azure.appplatform.SpringCloudBuildDeployment("example", {
 *     name: "example",
 *     springCloudAppId: exampleSpringCloudApp.id,
 *     buildResultId: "<default>",
 *     instanceCount: 2,
 *     environmentVariables: {
 *         Foo: "Bar",
 *         Env: "Staging",
 *     },
 *     quota: {
 *         cpu: "2",
 *         memory: "4Gi",
 *     },
 * });
 * ```
 *
 * ## Import
 *
 * Spring Cloud Build Deployments can be imported using the `resource id`, e.g.
 *
 * ```sh
 * $ pulumi import azure:appplatform/springCloudBuildDeployment:SpringCloudBuildDeployment example /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/resGroup1/providers/Microsoft.AppPlatform/spring/spring1/apps/app1/deployments/deploy1
 * ```
 */
export declare class SpringCloudBuildDeployment extends pulumi.CustomResource {
    /**
     * Get an existing SpringCloudBuildDeployment resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    static get(name: string, id: pulumi.Input<pulumi.ID>, state?: SpringCloudBuildDeploymentState, opts?: pulumi.CustomResourceOptions): SpringCloudBuildDeployment;
    /**
     * Returns true if the given object is an instance of SpringCloudBuildDeployment.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    static isInstance(obj: any): obj is SpringCloudBuildDeployment;
    /**
     * A JSON object that contains the addon configurations of the Spring Cloud Build Deployment.
     */
    readonly addonJson: pulumi.Output<string>;
    /**
     * Specifies a list of Spring Cloud Application Performance Monitoring IDs.
     */
    readonly applicationPerformanceMonitoringIds: pulumi.Output<string[] | undefined>;
    /**
     * The ID of the Spring Cloud Build Result.
     */
    readonly buildResultId: pulumi.Output<string>;
    /**
     * Specifies the environment variables of the Spring Cloud Deployment as a map of key-value pairs.
     */
    readonly environmentVariables: pulumi.Output<{
        [key: string]: string;
    } | undefined>;
    /**
     * Specifies the required instance count of the Spring Cloud Deployment. Possible Values are between `1` and `500`. Defaults to `1` if not specified.
     */
    readonly instanceCount: pulumi.Output<number | undefined>;
    /**
     * The name which should be used for this Spring Cloud Build Deployment. Changing this forces a new Spring Cloud Build Deployment to be created.
     */
    readonly name: pulumi.Output<string>;
    /**
     * A `quota` block as defined below.
     */
    readonly quota: pulumi.Output<outputs.appplatform.SpringCloudBuildDeploymentQuota>;
    /**
     * The ID of the Spring Cloud Service. Changing this forces a new Spring Cloud Build Deployment to be created.
     */
    readonly springCloudAppId: pulumi.Output<string>;
    /**
     * Create a SpringCloudBuildDeployment resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: SpringCloudBuildDeploymentArgs, opts?: pulumi.CustomResourceOptions);
}
/**
 * Input properties used for looking up and filtering SpringCloudBuildDeployment resources.
 */
export interface SpringCloudBuildDeploymentState {
    /**
     * A JSON object that contains the addon configurations of the Spring Cloud Build Deployment.
     */
    addonJson?: pulumi.Input<string>;
    /**
     * Specifies a list of Spring Cloud Application Performance Monitoring IDs.
     */
    applicationPerformanceMonitoringIds?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The ID of the Spring Cloud Build Result.
     */
    buildResultId?: pulumi.Input<string>;
    /**
     * Specifies the environment variables of the Spring Cloud Deployment as a map of key-value pairs.
     */
    environmentVariables?: pulumi.Input<{
        [key: string]: pulumi.Input<string>;
    }>;
    /**
     * Specifies the required instance count of the Spring Cloud Deployment. Possible Values are between `1` and `500`. Defaults to `1` if not specified.
     */
    instanceCount?: pulumi.Input<number>;
    /**
     * The name which should be used for this Spring Cloud Build Deployment. Changing this forces a new Spring Cloud Build Deployment to be created.
     */
    name?: pulumi.Input<string>;
    /**
     * A `quota` block as defined below.
     */
    quota?: pulumi.Input<inputs.appplatform.SpringCloudBuildDeploymentQuota>;
    /**
     * The ID of the Spring Cloud Service. Changing this forces a new Spring Cloud Build Deployment to be created.
     */
    springCloudAppId?: pulumi.Input<string>;
}
/**
 * The set of arguments for constructing a SpringCloudBuildDeployment resource.
 */
export interface SpringCloudBuildDeploymentArgs {
    /**
     * A JSON object that contains the addon configurations of the Spring Cloud Build Deployment.
     */
    addonJson?: pulumi.Input<string>;
    /**
     * Specifies a list of Spring Cloud Application Performance Monitoring IDs.
     */
    applicationPerformanceMonitoringIds?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The ID of the Spring Cloud Build Result.
     */
    buildResultId: pulumi.Input<string>;
    /**
     * Specifies the environment variables of the Spring Cloud Deployment as a map of key-value pairs.
     */
    environmentVariables?: pulumi.Input<{
        [key: string]: pulumi.Input<string>;
    }>;
    /**
     * Specifies the required instance count of the Spring Cloud Deployment. Possible Values are between `1` and `500`. Defaults to `1` if not specified.
     */
    instanceCount?: pulumi.Input<number>;
    /**
     * The name which should be used for this Spring Cloud Build Deployment. Changing this forces a new Spring Cloud Build Deployment to be created.
     */
    name?: pulumi.Input<string>;
    /**
     * A `quota` block as defined below.
     */
    quota?: pulumi.Input<inputs.appplatform.SpringCloudBuildDeploymentQuota>;
    /**
     * The ID of the Spring Cloud Service. Changing this forces a new Spring Cloud Build Deployment to be created.
     */
    springCloudAppId: pulumi.Input<string>;
}
