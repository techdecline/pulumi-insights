"use strict";
// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***
Object.defineProperty(exports, "__esModule", { value: true });
exports.SpringCloudAppCosmosDBAssociation = void 0;
const pulumi = require("@pulumi/pulumi");
const utilities = require("../utilities");
/**
 * Associates a Spring Cloud Application with a CosmosDB Account.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as azure from "@pulumi/azure";
 *
 * const example = new azure.core.ResourceGroup("example", {
 *     name: "example-resources",
 *     location: "West Europe",
 * });
 * const exampleSpringCloudService = new azure.appplatform.SpringCloudService("example", {
 *     name: "example-springcloud",
 *     resourceGroupName: example.name,
 *     location: example.location,
 * });
 * const exampleSpringCloudApp = new azure.appplatform.SpringCloudApp("example", {
 *     name: "example-springcloudapp",
 *     resourceGroupName: example.name,
 *     serviceName: exampleSpringCloudService.name,
 * });
 * const exampleAccount = new azure.cosmosdb.Account("example", {
 *     name: "example-cosmosdb-account",
 *     location: example.location,
 *     resourceGroupName: example.name,
 *     offerType: "Standard",
 *     kind: "GlobalDocumentDB",
 *     consistencyPolicy: {
 *         consistencyLevel: "Strong",
 *     },
 *     geoLocations: [{
 *         location: example.location,
 *         failoverPriority: 0,
 *     }],
 * });
 * const exampleSpringCloudAppCosmosDBAssociation = new azure.appplatform.SpringCloudAppCosmosDBAssociation("example", {
 *     name: "example-bind",
 *     springCloudAppId: exampleSpringCloudApp.id,
 *     cosmosdbAccountId: exampleAccount.id,
 *     apiType: "table",
 *     cosmosdbAccessKey: exampleAccount.primaryKey,
 * });
 * ```
 *
 * ## Import
 *
 * Spring Cloud Application CosmosDB Association can be imported using the `resource id`, e.g.
 *
 * ```sh
 * $ pulumi import azure:appplatform/springCloudAppCosmosDBAssociation:SpringCloudAppCosmosDBAssociation example /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/resourcegroup1/providers/Microsoft.AppPlatform/spring/service1/apps/app1/bindings/bind1
 * ```
 */
class SpringCloudAppCosmosDBAssociation extends pulumi.CustomResource {
    constructor(name, argsOrState, opts) {
        let resourceInputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState;
            resourceInputs["apiType"] = state ? state.apiType : undefined;
            resourceInputs["cosmosdbAccessKey"] = state ? state.cosmosdbAccessKey : undefined;
            resourceInputs["cosmosdbAccountId"] = state ? state.cosmosdbAccountId : undefined;
            resourceInputs["cosmosdbCassandraKeyspaceName"] = state ? state.cosmosdbCassandraKeyspaceName : undefined;
            resourceInputs["cosmosdbGremlinDatabaseName"] = state ? state.cosmosdbGremlinDatabaseName : undefined;
            resourceInputs["cosmosdbGremlinGraphName"] = state ? state.cosmosdbGremlinGraphName : undefined;
            resourceInputs["cosmosdbMongoDatabaseName"] = state ? state.cosmosdbMongoDatabaseName : undefined;
            resourceInputs["cosmosdbSqlDatabaseName"] = state ? state.cosmosdbSqlDatabaseName : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["springCloudAppId"] = state ? state.springCloudAppId : undefined;
        }
        else {
            const args = argsOrState;
            if ((!args || args.apiType === undefined) && !opts.urn) {
                throw new Error("Missing required property 'apiType'");
            }
            if ((!args || args.cosmosdbAccessKey === undefined) && !opts.urn) {
                throw new Error("Missing required property 'cosmosdbAccessKey'");
            }
            if ((!args || args.cosmosdbAccountId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'cosmosdbAccountId'");
            }
            if ((!args || args.springCloudAppId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'springCloudAppId'");
            }
            resourceInputs["apiType"] = args ? args.apiType : undefined;
            resourceInputs["cosmosdbAccessKey"] = args ? args.cosmosdbAccessKey : undefined;
            resourceInputs["cosmosdbAccountId"] = args ? args.cosmosdbAccountId : undefined;
            resourceInputs["cosmosdbCassandraKeyspaceName"] = args ? args.cosmosdbCassandraKeyspaceName : undefined;
            resourceInputs["cosmosdbGremlinDatabaseName"] = args ? args.cosmosdbGremlinDatabaseName : undefined;
            resourceInputs["cosmosdbGremlinGraphName"] = args ? args.cosmosdbGremlinGraphName : undefined;
            resourceInputs["cosmosdbMongoDatabaseName"] = args ? args.cosmosdbMongoDatabaseName : undefined;
            resourceInputs["cosmosdbSqlDatabaseName"] = args ? args.cosmosdbSqlDatabaseName : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["springCloudAppId"] = args ? args.springCloudAppId : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(SpringCloudAppCosmosDBAssociation.__pulumiType, name, resourceInputs, opts);
    }
    /**
     * Get an existing SpringCloudAppCosmosDBAssociation resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    static get(name, id, state, opts) {
        return new SpringCloudAppCosmosDBAssociation(name, state, Object.assign(Object.assign({}, opts), { id: id }));
    }
    /**
     * Returns true if the given object is an instance of SpringCloudAppCosmosDBAssociation.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    static isInstance(obj) {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === SpringCloudAppCosmosDBAssociation.__pulumiType;
    }
}
exports.SpringCloudAppCosmosDBAssociation = SpringCloudAppCosmosDBAssociation;
/** @internal */
SpringCloudAppCosmosDBAssociation.__pulumiType = 'azure:appplatform/springCloudAppCosmosDBAssociation:SpringCloudAppCosmosDBAssociation';
//# sourceMappingURL=springCloudAppCosmosDBAssociation.js.map