import * as pulumi from "@pulumi/pulumi";
/**
 * > **NOTE:** This resource is only applicable for Spring Cloud Service enterprise tier
 *
 * Manages a Spring Cloud Application Performance Monitoring resource for New Relic.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as azure from "@pulumi/azure";
 *
 * const example = new azure.core.ResourceGroup("example", {
 *     name: "example",
 *     location: "West Europe",
 * });
 * const exampleSpringCloudService = new azure.appplatform.SpringCloudService("example", {
 *     name: "example",
 *     location: example.location,
 *     resourceGroupName: example.name,
 *     skuName: "E0",
 * });
 * const exampleSpringCloudNewRelicApplicationPerformanceMonitoring = new azure.appplatform.SpringCloudNewRelicApplicationPerformanceMonitoring("example", {
 *     name: "example",
 *     springCloudServiceId: exampleSpringCloudService.id,
 *     appName: "example-app-name",
 *     licenseKey: "example-license-key",
 *     appServerPort: 8080,
 *     labels: {
 *         tagName1: "tagValue1",
 *         tagName2: "tagValue2",
 *     },
 *     globallyEnabled: true,
 * });
 * ```
 *
 * ## Import
 *
 * Spring Cloud Application Performance Monitoring resource for New Relic can be imported using the `resource id`, e.g.
 *
 * ```sh
 * $ pulumi import azure:appplatform/springCloudNewRelicApplicationPerformanceMonitoring:SpringCloudNewRelicApplicationPerformanceMonitoring example /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/mygroup1/providers/Microsoft.AppPlatform/spring/service1/apms/apm1
 * ```
 */
export declare class SpringCloudNewRelicApplicationPerformanceMonitoring extends pulumi.CustomResource {
    /**
     * Get an existing SpringCloudNewRelicApplicationPerformanceMonitoring resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    static get(name: string, id: pulumi.Input<pulumi.ID>, state?: SpringCloudNewRelicApplicationPerformanceMonitoringState, opts?: pulumi.CustomResourceOptions): SpringCloudNewRelicApplicationPerformanceMonitoring;
    /**
     * Returns true if the given object is an instance of SpringCloudNewRelicApplicationPerformanceMonitoring.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    static isInstance(obj: any): obj is SpringCloudNewRelicApplicationPerformanceMonitoring;
    /**
     * Specifies whether enable the agent. Defaults to `true`.
     */
    readonly agentEnabled: pulumi.Output<boolean | undefined>;
    /**
     * Specifies the application name used to report data to New Relic.
     */
    readonly appName: pulumi.Output<string>;
    /**
     * Specifies the port number to differentiate JVMs for the same app on the same machine.
     */
    readonly appServerPort: pulumi.Output<number | undefined>;
    /**
     * Specifies whether enable plain text logging of all data sent to New Relic to the agent logfile. Defaults to `false`.
     */
    readonly auditModeEnabled: pulumi.Output<boolean | undefined>;
    /**
     * Specifies whether enable the reporting of data separately for each web app. Defaults to `false`.
     */
    readonly autoAppNamingEnabled: pulumi.Output<boolean | undefined>;
    /**
     * Specifies whether enable the component-based transaction naming. Defaults to `true`.
     */
    readonly autoTransactionNamingEnabled: pulumi.Output<boolean | undefined>;
    /**
     * Specifies whether enable all instrumentation using an `@Trace` annotation. Disabling this causes `@Trace` annotations to be ignored. Defaults to `true`.
     */
    readonly customTracingEnabled: pulumi.Output<boolean | undefined>;
    /**
     * Specifies whether the Spring Cloud Application Performance Monitoring resource for Application Insights is enabled globally. Defaults to `false`.
     */
    readonly globallyEnabled: pulumi.Output<boolean | undefined>;
    /**
     * Specifies a mapping of labels to be added to the New Relic application.
     */
    readonly labels: pulumi.Output<{
        [key: string]: string;
    } | undefined>;
    /**
     * Specifies the license key associated with the New Relic account. This key binds your agent's data to your account in New Relic service.
     */
    readonly licenseKey: pulumi.Output<string>;
    /**
     * The name which should be used for this Spring Cloud Application Performance Monitoring resource for New Relic. Changing this forces a new resource to be created.
     */
    readonly name: pulumi.Output<string>;
    /**
     * The ID of the Spring Cloud Service. Changing this forces a new resource to be created.
     */
    readonly springCloudServiceId: pulumi.Output<string>;
    /**
     * Create a SpringCloudNewRelicApplicationPerformanceMonitoring resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: SpringCloudNewRelicApplicationPerformanceMonitoringArgs, opts?: pulumi.CustomResourceOptions);
}
/**
 * Input properties used for looking up and filtering SpringCloudNewRelicApplicationPerformanceMonitoring resources.
 */
export interface SpringCloudNewRelicApplicationPerformanceMonitoringState {
    /**
     * Specifies whether enable the agent. Defaults to `true`.
     */
    agentEnabled?: pulumi.Input<boolean>;
    /**
     * Specifies the application name used to report data to New Relic.
     */
    appName?: pulumi.Input<string>;
    /**
     * Specifies the port number to differentiate JVMs for the same app on the same machine.
     */
    appServerPort?: pulumi.Input<number>;
    /**
     * Specifies whether enable plain text logging of all data sent to New Relic to the agent logfile. Defaults to `false`.
     */
    auditModeEnabled?: pulumi.Input<boolean>;
    /**
     * Specifies whether enable the reporting of data separately for each web app. Defaults to `false`.
     */
    autoAppNamingEnabled?: pulumi.Input<boolean>;
    /**
     * Specifies whether enable the component-based transaction naming. Defaults to `true`.
     */
    autoTransactionNamingEnabled?: pulumi.Input<boolean>;
    /**
     * Specifies whether enable all instrumentation using an `@Trace` annotation. Disabling this causes `@Trace` annotations to be ignored. Defaults to `true`.
     */
    customTracingEnabled?: pulumi.Input<boolean>;
    /**
     * Specifies whether the Spring Cloud Application Performance Monitoring resource for Application Insights is enabled globally. Defaults to `false`.
     */
    globallyEnabled?: pulumi.Input<boolean>;
    /**
     * Specifies a mapping of labels to be added to the New Relic application.
     */
    labels?: pulumi.Input<{
        [key: string]: pulumi.Input<string>;
    }>;
    /**
     * Specifies the license key associated with the New Relic account. This key binds your agent's data to your account in New Relic service.
     */
    licenseKey?: pulumi.Input<string>;
    /**
     * The name which should be used for this Spring Cloud Application Performance Monitoring resource for New Relic. Changing this forces a new resource to be created.
     */
    name?: pulumi.Input<string>;
    /**
     * The ID of the Spring Cloud Service. Changing this forces a new resource to be created.
     */
    springCloudServiceId?: pulumi.Input<string>;
}
/**
 * The set of arguments for constructing a SpringCloudNewRelicApplicationPerformanceMonitoring resource.
 */
export interface SpringCloudNewRelicApplicationPerformanceMonitoringArgs {
    /**
     * Specifies whether enable the agent. Defaults to `true`.
     */
    agentEnabled?: pulumi.Input<boolean>;
    /**
     * Specifies the application name used to report data to New Relic.
     */
    appName: pulumi.Input<string>;
    /**
     * Specifies the port number to differentiate JVMs for the same app on the same machine.
     */
    appServerPort?: pulumi.Input<number>;
    /**
     * Specifies whether enable plain text logging of all data sent to New Relic to the agent logfile. Defaults to `false`.
     */
    auditModeEnabled?: pulumi.Input<boolean>;
    /**
     * Specifies whether enable the reporting of data separately for each web app. Defaults to `false`.
     */
    autoAppNamingEnabled?: pulumi.Input<boolean>;
    /**
     * Specifies whether enable the component-based transaction naming. Defaults to `true`.
     */
    autoTransactionNamingEnabled?: pulumi.Input<boolean>;
    /**
     * Specifies whether enable all instrumentation using an `@Trace` annotation. Disabling this causes `@Trace` annotations to be ignored. Defaults to `true`.
     */
    customTracingEnabled?: pulumi.Input<boolean>;
    /**
     * Specifies whether the Spring Cloud Application Performance Monitoring resource for Application Insights is enabled globally. Defaults to `false`.
     */
    globallyEnabled?: pulumi.Input<boolean>;
    /**
     * Specifies a mapping of labels to be added to the New Relic application.
     */
    labels?: pulumi.Input<{
        [key: string]: pulumi.Input<string>;
    }>;
    /**
     * Specifies the license key associated with the New Relic account. This key binds your agent's data to your account in New Relic service.
     */
    licenseKey: pulumi.Input<string>;
    /**
     * The name which should be used for this Spring Cloud Application Performance Monitoring resource for New Relic. Changing this forces a new resource to be created.
     */
    name?: pulumi.Input<string>;
    /**
     * The ID of the Spring Cloud Service. Changing this forces a new resource to be created.
     */
    springCloudServiceId: pulumi.Input<string>;
}
