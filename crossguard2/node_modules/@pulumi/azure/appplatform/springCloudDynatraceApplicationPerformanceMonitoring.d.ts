import * as pulumi from "@pulumi/pulumi";
/**
 * > **NOTE:** This resource is only applicable for Spring Cloud Service enterprise tier
 *
 * Manages a Spring Cloud Application Performance Monitoring resource for Dynatrace.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as azure from "@pulumi/azure";
 *
 * const example = new azure.core.ResourceGroup("example", {
 *     name: "example",
 *     location: "West Europe",
 * });
 * const exampleSpringCloudService = new azure.appplatform.SpringCloudService("example", {
 *     name: "example",
 *     location: example.location,
 *     resourceGroupName: example.name,
 *     skuName: "E0",
 * });
 * const exampleSpringCloudDynatraceApplicationPerformanceMonitoring = new azure.appplatform.SpringCloudDynatraceApplicationPerformanceMonitoring("example", {
 *     name: "example",
 *     springCloudServiceId: exampleSpringCloudService.id,
 *     globallyEnabled: true,
 *     apiUrl: "https://example-api-url.com",
 *     apiToken: "dt0s01.AAAAAAAAAAAAAAAAAAAAAAAA.BBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBB",
 *     environmentId: "example-environment-id",
 *     tenant: "example-tenant",
 *     tenantToken: "dt0s01.AAAAAAAAAAAAAAAAAAAAAAAA.BBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBB",
 *     connectionPoint: "https://example.live.dynatrace.com:443",
 * });
 * ```
 *
 * ## Import
 *
 * Spring Cloud Application Performance Monitoring resource for Dynatrace can be imported using the `resource id`, e.g.
 *
 * ```sh
 * $ pulumi import azure:appplatform/springCloudDynatraceApplicationPerformanceMonitoring:SpringCloudDynatraceApplicationPerformanceMonitoring example /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/mygroup1/providers/Microsoft.AppPlatform/spring/service1/apms/apm1
 * ```
 */
export declare class SpringCloudDynatraceApplicationPerformanceMonitoring extends pulumi.CustomResource {
    /**
     * Get an existing SpringCloudDynatraceApplicationPerformanceMonitoring resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    static get(name: string, id: pulumi.Input<pulumi.ID>, state?: SpringCloudDynatraceApplicationPerformanceMonitoringState, opts?: pulumi.CustomResourceOptions): SpringCloudDynatraceApplicationPerformanceMonitoring;
    /**
     * Returns true if the given object is an instance of SpringCloudDynatraceApplicationPerformanceMonitoring.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    static isInstance(obj: any): obj is SpringCloudDynatraceApplicationPerformanceMonitoring;
    /**
     * Specifies the API token of the Dynatrace environment.
     */
    readonly apiToken: pulumi.Output<string | undefined>;
    /**
     * Specifies the API Url of the Dynatrace environment.
     */
    readonly apiUrl: pulumi.Output<string | undefined>;
    /**
     * Specifies the endpoint to connect to the Dynatrace environment.
     */
    readonly connectionPoint: pulumi.Output<string>;
    /**
     * Specifies the Dynatrace environment ID.
     */
    readonly environmentId: pulumi.Output<string | undefined>;
    /**
     * Specifies whether the Spring Cloud Application Performance Monitoring resource for Application Insights is enabled globally. Defaults to `false`.
     */
    readonly globallyEnabled: pulumi.Output<boolean | undefined>;
    /**
     * The name which should be used for this Spring Cloud Application Performance Monitoring resource for Dynatrace. Changing this forces a new resource to be created.
     */
    readonly name: pulumi.Output<string>;
    /**
     * The ID of the Spring Cloud Service. Changing this forces a new resource to be created.
     */
    readonly springCloudServiceId: pulumi.Output<string>;
    /**
     * Specifies the Dynatrace tenant.
     */
    readonly tenant: pulumi.Output<string>;
    /**
     * Specifies the internal token that is used for authentication when OneAgent connects to the Dynatrace cluster to send data.
     */
    readonly tenantToken: pulumi.Output<string>;
    /**
     * Create a SpringCloudDynatraceApplicationPerformanceMonitoring resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: SpringCloudDynatraceApplicationPerformanceMonitoringArgs, opts?: pulumi.CustomResourceOptions);
}
/**
 * Input properties used for looking up and filtering SpringCloudDynatraceApplicationPerformanceMonitoring resources.
 */
export interface SpringCloudDynatraceApplicationPerformanceMonitoringState {
    /**
     * Specifies the API token of the Dynatrace environment.
     */
    apiToken?: pulumi.Input<string>;
    /**
     * Specifies the API Url of the Dynatrace environment.
     */
    apiUrl?: pulumi.Input<string>;
    /**
     * Specifies the endpoint to connect to the Dynatrace environment.
     */
    connectionPoint?: pulumi.Input<string>;
    /**
     * Specifies the Dynatrace environment ID.
     */
    environmentId?: pulumi.Input<string>;
    /**
     * Specifies whether the Spring Cloud Application Performance Monitoring resource for Application Insights is enabled globally. Defaults to `false`.
     */
    globallyEnabled?: pulumi.Input<boolean>;
    /**
     * The name which should be used for this Spring Cloud Application Performance Monitoring resource for Dynatrace. Changing this forces a new resource to be created.
     */
    name?: pulumi.Input<string>;
    /**
     * The ID of the Spring Cloud Service. Changing this forces a new resource to be created.
     */
    springCloudServiceId?: pulumi.Input<string>;
    /**
     * Specifies the Dynatrace tenant.
     */
    tenant?: pulumi.Input<string>;
    /**
     * Specifies the internal token that is used for authentication when OneAgent connects to the Dynatrace cluster to send data.
     */
    tenantToken?: pulumi.Input<string>;
}
/**
 * The set of arguments for constructing a SpringCloudDynatraceApplicationPerformanceMonitoring resource.
 */
export interface SpringCloudDynatraceApplicationPerformanceMonitoringArgs {
    /**
     * Specifies the API token of the Dynatrace environment.
     */
    apiToken?: pulumi.Input<string>;
    /**
     * Specifies the API Url of the Dynatrace environment.
     */
    apiUrl?: pulumi.Input<string>;
    /**
     * Specifies the endpoint to connect to the Dynatrace environment.
     */
    connectionPoint: pulumi.Input<string>;
    /**
     * Specifies the Dynatrace environment ID.
     */
    environmentId?: pulumi.Input<string>;
    /**
     * Specifies whether the Spring Cloud Application Performance Monitoring resource for Application Insights is enabled globally. Defaults to `false`.
     */
    globallyEnabled?: pulumi.Input<boolean>;
    /**
     * The name which should be used for this Spring Cloud Application Performance Monitoring resource for Dynatrace. Changing this forces a new resource to be created.
     */
    name?: pulumi.Input<string>;
    /**
     * The ID of the Spring Cloud Service. Changing this forces a new resource to be created.
     */
    springCloudServiceId: pulumi.Input<string>;
    /**
     * Specifies the Dynatrace tenant.
     */
    tenant: pulumi.Input<string>;
    /**
     * Specifies the internal token that is used for authentication when OneAgent connects to the Dynatrace cluster to send data.
     */
    tenantToken: pulumi.Input<string>;
}
