import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
/**
 * > **NOTE:** This resource is applicable only for Spring Cloud Service with enterprise tier.
 *
 * Manages a Spring Cloud Dev Tool Portal.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as azure from "@pulumi/azure";
 *
 * const current = azure.core.getClientConfig({});
 * const example = new azure.core.ResourceGroup("example", {
 *     name: "example",
 *     location: "West Europe",
 * });
 * const exampleSpringCloudService = new azure.appplatform.SpringCloudService("example", {
 *     name: "example",
 *     location: example.location,
 *     resourceGroupName: example.name,
 *     skuName: "E0",
 * });
 * const exampleSpringCloudDevToolPortal = new azure.appplatform.SpringCloudDevToolPortal("example", {
 *     name: "default",
 *     springCloudServiceId: exampleSpringCloudService.id,
 *     publicNetworkAccessEnabled: true,
 *     sso: {
 *         clientId: "example id",
 *         clientSecret: "example secret",
 *         metadataUrl: current.then(current => `https://login.microsoftonline.com/${current.tenantId}/v2.0/.well-known/openid-configuration`),
 *         scopes: [
 *             "openid",
 *             "profile",
 *             "email",
 *         ],
 *     },
 *     applicationAcceleratorEnabled: true,
 *     applicationLiveViewEnabled: true,
 * });
 * ```
 *
 * ## Import
 *
 * Spring Cloud Dev Tool Portals can be imported using the `resource id`, e.g.
 *
 * ```sh
 * $ pulumi import azure:appplatform/springCloudDevToolPortal:SpringCloudDevToolPortal example /subscriptions/12345678-1234-9876-4563-123456789012/resourceGroups/resourceGroup1/providers/Microsoft.AppPlatform/Spring/service1/DevToolPortals/default
 * ```
 */
export declare class SpringCloudDevToolPortal extends pulumi.CustomResource {
    /**
     * Get an existing SpringCloudDevToolPortal resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    static get(name: string, id: pulumi.Input<pulumi.ID>, state?: SpringCloudDevToolPortalState, opts?: pulumi.CustomResourceOptions): SpringCloudDevToolPortal;
    /**
     * Returns true if the given object is an instance of SpringCloudDevToolPortal.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    static isInstance(obj: any): obj is SpringCloudDevToolPortal;
    /**
     * Should the Accelerator plugin be enabled?
     */
    readonly applicationAcceleratorEnabled: pulumi.Output<boolean>;
    /**
     * Should the Application Live View be enabled?
     */
    readonly applicationLiveViewEnabled: pulumi.Output<boolean>;
    /**
     * The name which should be used for this Spring Cloud Dev Tool Portal. The only possible value is `default`. Changing this forces a new Spring Cloud Dev Tool Portal to be created.
     */
    readonly name: pulumi.Output<string>;
    /**
     * Is public network access enabled?
     */
    readonly publicNetworkAccessEnabled: pulumi.Output<boolean | undefined>;
    /**
     * The ID of the Spring Cloud Service. Changing this forces a new Spring Cloud Dev Tool Portal to be created.
     */
    readonly springCloudServiceId: pulumi.Output<string>;
    /**
     * A `sso` block as defined below.
     */
    readonly sso: pulumi.Output<outputs.appplatform.SpringCloudDevToolPortalSso | undefined>;
    /**
     * Create a SpringCloudDevToolPortal resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: SpringCloudDevToolPortalArgs, opts?: pulumi.CustomResourceOptions);
}
/**
 * Input properties used for looking up and filtering SpringCloudDevToolPortal resources.
 */
export interface SpringCloudDevToolPortalState {
    /**
     * Should the Accelerator plugin be enabled?
     */
    applicationAcceleratorEnabled?: pulumi.Input<boolean>;
    /**
     * Should the Application Live View be enabled?
     */
    applicationLiveViewEnabled?: pulumi.Input<boolean>;
    /**
     * The name which should be used for this Spring Cloud Dev Tool Portal. The only possible value is `default`. Changing this forces a new Spring Cloud Dev Tool Portal to be created.
     */
    name?: pulumi.Input<string>;
    /**
     * Is public network access enabled?
     */
    publicNetworkAccessEnabled?: pulumi.Input<boolean>;
    /**
     * The ID of the Spring Cloud Service. Changing this forces a new Spring Cloud Dev Tool Portal to be created.
     */
    springCloudServiceId?: pulumi.Input<string>;
    /**
     * A `sso` block as defined below.
     */
    sso?: pulumi.Input<inputs.appplatform.SpringCloudDevToolPortalSso>;
}
/**
 * The set of arguments for constructing a SpringCloudDevToolPortal resource.
 */
export interface SpringCloudDevToolPortalArgs {
    /**
     * Should the Accelerator plugin be enabled?
     */
    applicationAcceleratorEnabled?: pulumi.Input<boolean>;
    /**
     * Should the Application Live View be enabled?
     */
    applicationLiveViewEnabled?: pulumi.Input<boolean>;
    /**
     * The name which should be used for this Spring Cloud Dev Tool Portal. The only possible value is `default`. Changing this forces a new Spring Cloud Dev Tool Portal to be created.
     */
    name?: pulumi.Input<string>;
    /**
     * Is public network access enabled?
     */
    publicNetworkAccessEnabled?: pulumi.Input<boolean>;
    /**
     * The ID of the Spring Cloud Service. Changing this forces a new Spring Cloud Dev Tool Portal to be created.
     */
    springCloudServiceId: pulumi.Input<string>;
    /**
     * A `sso` block as defined below.
     */
    sso?: pulumi.Input<inputs.appplatform.SpringCloudDevToolPortalSso>;
}
