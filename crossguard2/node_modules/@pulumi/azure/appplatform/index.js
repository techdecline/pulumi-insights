"use strict";
// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***
Object.defineProperty(exports, "__esModule", { value: true });
exports.SpringCloudStorage = exports.SpringCloudService = exports.SpringCloudNewRelicApplicationPerformanceMonitoring = exports.SpringCloudJavaDeployment = exports.SpringCloudGatewayRouteConfig = exports.SpringCloudGatewayCustomDomain = exports.SpringCloudGateway = exports.SpringCloudElasticApplicationPerformanceMonitoring = exports.SpringCloudDynatraceApplicationPerformanceMonitoring = exports.SpringCloudDevToolPortal = exports.SpringCloudCustomizedAccelerator = exports.SpringCloudCustomDomain = exports.SpringCloudContainerDeployment = exports.SpringCloudConnection = exports.SpringCloudConfigurationService = exports.SpringCloudCertificate = exports.SpringCloudBuilder = exports.SpringCloudBuildPackBinding = exports.SpringCloudBuildDeployment = exports.SpringCloudApplicationLiveView = exports.SpringCloudApplicationInsightsApplicationPerformanceMonitoring = exports.SpringCloudAppRedisAssociation = exports.SpringCloudAppMysqlAssociation = exports.SpringCloudAppDynamicsApplicationPerformanceMonitoring = exports.SpringCloudAppCosmosDBAssociation = exports.SpringCloudApp = exports.SpringCloudApiPortalCustomDomain = exports.SpringCloudApiPortal = exports.SpringCloudActiveDeployment = exports.SpringCloudAccelerator = exports.getSpringCloudServiceOutput = exports.getSpringCloudService = exports.getSpringCloudAppOutput = exports.getSpringCloudApp = void 0;
const pulumi = require("@pulumi/pulumi");
const utilities = require("../utilities");
exports.getSpringCloudApp = null;
exports.getSpringCloudAppOutput = null;
utilities.lazyLoad(exports, ["getSpringCloudApp", "getSpringCloudAppOutput"], () => require("./getSpringCloudApp"));
exports.getSpringCloudService = null;
exports.getSpringCloudServiceOutput = null;
utilities.lazyLoad(exports, ["getSpringCloudService", "getSpringCloudServiceOutput"], () => require("./getSpringCloudService"));
exports.SpringCloudAccelerator = null;
utilities.lazyLoad(exports, ["SpringCloudAccelerator"], () => require("./springCloudAccelerator"));
exports.SpringCloudActiveDeployment = null;
utilities.lazyLoad(exports, ["SpringCloudActiveDeployment"], () => require("./springCloudActiveDeployment"));
exports.SpringCloudApiPortal = null;
utilities.lazyLoad(exports, ["SpringCloudApiPortal"], () => require("./springCloudApiPortal"));
exports.SpringCloudApiPortalCustomDomain = null;
utilities.lazyLoad(exports, ["SpringCloudApiPortalCustomDomain"], () => require("./springCloudApiPortalCustomDomain"));
exports.SpringCloudApp = null;
utilities.lazyLoad(exports, ["SpringCloudApp"], () => require("./springCloudApp"));
exports.SpringCloudAppCosmosDBAssociation = null;
utilities.lazyLoad(exports, ["SpringCloudAppCosmosDBAssociation"], () => require("./springCloudAppCosmosDBAssociation"));
exports.SpringCloudAppDynamicsApplicationPerformanceMonitoring = null;
utilities.lazyLoad(exports, ["SpringCloudAppDynamicsApplicationPerformanceMonitoring"], () => require("./springCloudAppDynamicsApplicationPerformanceMonitoring"));
exports.SpringCloudAppMysqlAssociation = null;
utilities.lazyLoad(exports, ["SpringCloudAppMysqlAssociation"], () => require("./springCloudAppMysqlAssociation"));
exports.SpringCloudAppRedisAssociation = null;
utilities.lazyLoad(exports, ["SpringCloudAppRedisAssociation"], () => require("./springCloudAppRedisAssociation"));
exports.SpringCloudApplicationInsightsApplicationPerformanceMonitoring = null;
utilities.lazyLoad(exports, ["SpringCloudApplicationInsightsApplicationPerformanceMonitoring"], () => require("./springCloudApplicationInsightsApplicationPerformanceMonitoring"));
exports.SpringCloudApplicationLiveView = null;
utilities.lazyLoad(exports, ["SpringCloudApplicationLiveView"], () => require("./springCloudApplicationLiveView"));
exports.SpringCloudBuildDeployment = null;
utilities.lazyLoad(exports, ["SpringCloudBuildDeployment"], () => require("./springCloudBuildDeployment"));
exports.SpringCloudBuildPackBinding = null;
utilities.lazyLoad(exports, ["SpringCloudBuildPackBinding"], () => require("./springCloudBuildPackBinding"));
exports.SpringCloudBuilder = null;
utilities.lazyLoad(exports, ["SpringCloudBuilder"], () => require("./springCloudBuilder"));
exports.SpringCloudCertificate = null;
utilities.lazyLoad(exports, ["SpringCloudCertificate"], () => require("./springCloudCertificate"));
exports.SpringCloudConfigurationService = null;
utilities.lazyLoad(exports, ["SpringCloudConfigurationService"], () => require("./springCloudConfigurationService"));
exports.SpringCloudConnection = null;
utilities.lazyLoad(exports, ["SpringCloudConnection"], () => require("./springCloudConnection"));
exports.SpringCloudContainerDeployment = null;
utilities.lazyLoad(exports, ["SpringCloudContainerDeployment"], () => require("./springCloudContainerDeployment"));
exports.SpringCloudCustomDomain = null;
utilities.lazyLoad(exports, ["SpringCloudCustomDomain"], () => require("./springCloudCustomDomain"));
exports.SpringCloudCustomizedAccelerator = null;
utilities.lazyLoad(exports, ["SpringCloudCustomizedAccelerator"], () => require("./springCloudCustomizedAccelerator"));
exports.SpringCloudDevToolPortal = null;
utilities.lazyLoad(exports, ["SpringCloudDevToolPortal"], () => require("./springCloudDevToolPortal"));
exports.SpringCloudDynatraceApplicationPerformanceMonitoring = null;
utilities.lazyLoad(exports, ["SpringCloudDynatraceApplicationPerformanceMonitoring"], () => require("./springCloudDynatraceApplicationPerformanceMonitoring"));
exports.SpringCloudElasticApplicationPerformanceMonitoring = null;
utilities.lazyLoad(exports, ["SpringCloudElasticApplicationPerformanceMonitoring"], () => require("./springCloudElasticApplicationPerformanceMonitoring"));
exports.SpringCloudGateway = null;
utilities.lazyLoad(exports, ["SpringCloudGateway"], () => require("./springCloudGateway"));
exports.SpringCloudGatewayCustomDomain = null;
utilities.lazyLoad(exports, ["SpringCloudGatewayCustomDomain"], () => require("./springCloudGatewayCustomDomain"));
exports.SpringCloudGatewayRouteConfig = null;
utilities.lazyLoad(exports, ["SpringCloudGatewayRouteConfig"], () => require("./springCloudGatewayRouteConfig"));
exports.SpringCloudJavaDeployment = null;
utilities.lazyLoad(exports, ["SpringCloudJavaDeployment"], () => require("./springCloudJavaDeployment"));
exports.SpringCloudNewRelicApplicationPerformanceMonitoring = null;
utilities.lazyLoad(exports, ["SpringCloudNewRelicApplicationPerformanceMonitoring"], () => require("./springCloudNewRelicApplicationPerformanceMonitoring"));
exports.SpringCloudService = null;
utilities.lazyLoad(exports, ["SpringCloudService"], () => require("./springCloudService"));
exports.SpringCloudStorage = null;
utilities.lazyLoad(exports, ["SpringCloudStorage"], () => require("./springCloudStorage"));
const _module = {
    version: utilities.getVersion(),
    construct: (name, type, urn) => {
        switch (type) {
            case "azure:appplatform/springCloudAccelerator:SpringCloudAccelerator":
                return new exports.SpringCloudAccelerator(name, undefined, { urn });
            case "azure:appplatform/springCloudActiveDeployment:SpringCloudActiveDeployment":
                return new exports.SpringCloudActiveDeployment(name, undefined, { urn });
            case "azure:appplatform/springCloudApiPortal:SpringCloudApiPortal":
                return new exports.SpringCloudApiPortal(name, undefined, { urn });
            case "azure:appplatform/springCloudApiPortalCustomDomain:SpringCloudApiPortalCustomDomain":
                return new exports.SpringCloudApiPortalCustomDomain(name, undefined, { urn });
            case "azure:appplatform/springCloudApp:SpringCloudApp":
                return new exports.SpringCloudApp(name, undefined, { urn });
            case "azure:appplatform/springCloudAppCosmosDBAssociation:SpringCloudAppCosmosDBAssociation":
                return new exports.SpringCloudAppCosmosDBAssociation(name, undefined, { urn });
            case "azure:appplatform/springCloudAppDynamicsApplicationPerformanceMonitoring:SpringCloudAppDynamicsApplicationPerformanceMonitoring":
                return new exports.SpringCloudAppDynamicsApplicationPerformanceMonitoring(name, undefined, { urn });
            case "azure:appplatform/springCloudAppMysqlAssociation:SpringCloudAppMysqlAssociation":
                return new exports.SpringCloudAppMysqlAssociation(name, undefined, { urn });
            case "azure:appplatform/springCloudAppRedisAssociation:SpringCloudAppRedisAssociation":
                return new exports.SpringCloudAppRedisAssociation(name, undefined, { urn });
            case "azure:appplatform/springCloudApplicationInsightsApplicationPerformanceMonitoring:SpringCloudApplicationInsightsApplicationPerformanceMonitoring":
                return new exports.SpringCloudApplicationInsightsApplicationPerformanceMonitoring(name, undefined, { urn });
            case "azure:appplatform/springCloudApplicationLiveView:SpringCloudApplicationLiveView":
                return new exports.SpringCloudApplicationLiveView(name, undefined, { urn });
            case "azure:appplatform/springCloudBuildDeployment:SpringCloudBuildDeployment":
                return new exports.SpringCloudBuildDeployment(name, undefined, { urn });
            case "azure:appplatform/springCloudBuildPackBinding:SpringCloudBuildPackBinding":
                return new exports.SpringCloudBuildPackBinding(name, undefined, { urn });
            case "azure:appplatform/springCloudBuilder:SpringCloudBuilder":
                return new exports.SpringCloudBuilder(name, undefined, { urn });
            case "azure:appplatform/springCloudCertificate:SpringCloudCertificate":
                return new exports.SpringCloudCertificate(name, undefined, { urn });
            case "azure:appplatform/springCloudConfigurationService:SpringCloudConfigurationService":
                return new exports.SpringCloudConfigurationService(name, undefined, { urn });
            case "azure:appplatform/springCloudConnection:SpringCloudConnection":
                return new exports.SpringCloudConnection(name, undefined, { urn });
            case "azure:appplatform/springCloudContainerDeployment:SpringCloudContainerDeployment":
                return new exports.SpringCloudContainerDeployment(name, undefined, { urn });
            case "azure:appplatform/springCloudCustomDomain:SpringCloudCustomDomain":
                return new exports.SpringCloudCustomDomain(name, undefined, { urn });
            case "azure:appplatform/springCloudCustomizedAccelerator:SpringCloudCustomizedAccelerator":
                return new exports.SpringCloudCustomizedAccelerator(name, undefined, { urn });
            case "azure:appplatform/springCloudDevToolPortal:SpringCloudDevToolPortal":
                return new exports.SpringCloudDevToolPortal(name, undefined, { urn });
            case "azure:appplatform/springCloudDynatraceApplicationPerformanceMonitoring:SpringCloudDynatraceApplicationPerformanceMonitoring":
                return new exports.SpringCloudDynatraceApplicationPerformanceMonitoring(name, undefined, { urn });
            case "azure:appplatform/springCloudElasticApplicationPerformanceMonitoring:SpringCloudElasticApplicationPerformanceMonitoring":
                return new exports.SpringCloudElasticApplicationPerformanceMonitoring(name, undefined, { urn });
            case "azure:appplatform/springCloudGateway:SpringCloudGateway":
                return new exports.SpringCloudGateway(name, undefined, { urn });
            case "azure:appplatform/springCloudGatewayCustomDomain:SpringCloudGatewayCustomDomain":
                return new exports.SpringCloudGatewayCustomDomain(name, undefined, { urn });
            case "azure:appplatform/springCloudGatewayRouteConfig:SpringCloudGatewayRouteConfig":
                return new exports.SpringCloudGatewayRouteConfig(name, undefined, { urn });
            case "azure:appplatform/springCloudJavaDeployment:SpringCloudJavaDeployment":
                return new exports.SpringCloudJavaDeployment(name, undefined, { urn });
            case "azure:appplatform/springCloudNewRelicApplicationPerformanceMonitoring:SpringCloudNewRelicApplicationPerformanceMonitoring":
                return new exports.SpringCloudNewRelicApplicationPerformanceMonitoring(name, undefined, { urn });
            case "azure:appplatform/springCloudService:SpringCloudService":
                return new exports.SpringCloudService(name, undefined, { urn });
            case "azure:appplatform/springCloudStorage:SpringCloudStorage":
                return new exports.SpringCloudStorage(name, undefined, { urn });
            default:
                throw new Error(`unknown resource type ${type}`);
        }
    },
};
pulumi.runtime.registerResourceModule("azure", "appplatform/springCloudAccelerator", _module);
pulumi.runtime.registerResourceModule("azure", "appplatform/springCloudActiveDeployment", _module);
pulumi.runtime.registerResourceModule("azure", "appplatform/springCloudApiPortal", _module);
pulumi.runtime.registerResourceModule("azure", "appplatform/springCloudApiPortalCustomDomain", _module);
pulumi.runtime.registerResourceModule("azure", "appplatform/springCloudApp", _module);
pulumi.runtime.registerResourceModule("azure", "appplatform/springCloudAppCosmosDBAssociation", _module);
pulumi.runtime.registerResourceModule("azure", "appplatform/springCloudAppDynamicsApplicationPerformanceMonitoring", _module);
pulumi.runtime.registerResourceModule("azure", "appplatform/springCloudAppMysqlAssociation", _module);
pulumi.runtime.registerResourceModule("azure", "appplatform/springCloudAppRedisAssociation", _module);
pulumi.runtime.registerResourceModule("azure", "appplatform/springCloudApplicationInsightsApplicationPerformanceMonitoring", _module);
pulumi.runtime.registerResourceModule("azure", "appplatform/springCloudApplicationLiveView", _module);
pulumi.runtime.registerResourceModule("azure", "appplatform/springCloudBuildDeployment", _module);
pulumi.runtime.registerResourceModule("azure", "appplatform/springCloudBuildPackBinding", _module);
pulumi.runtime.registerResourceModule("azure", "appplatform/springCloudBuilder", _module);
pulumi.runtime.registerResourceModule("azure", "appplatform/springCloudCertificate", _module);
pulumi.runtime.registerResourceModule("azure", "appplatform/springCloudConfigurationService", _module);
pulumi.runtime.registerResourceModule("azure", "appplatform/springCloudConnection", _module);
pulumi.runtime.registerResourceModule("azure", "appplatform/springCloudContainerDeployment", _module);
pulumi.runtime.registerResourceModule("azure", "appplatform/springCloudCustomDomain", _module);
pulumi.runtime.registerResourceModule("azure", "appplatform/springCloudCustomizedAccelerator", _module);
pulumi.runtime.registerResourceModule("azure", "appplatform/springCloudDevToolPortal", _module);
pulumi.runtime.registerResourceModule("azure", "appplatform/springCloudDynatraceApplicationPerformanceMonitoring", _module);
pulumi.runtime.registerResourceModule("azure", "appplatform/springCloudElasticApplicationPerformanceMonitoring", _module);
pulumi.runtime.registerResourceModule("azure", "appplatform/springCloudGateway", _module);
pulumi.runtime.registerResourceModule("azure", "appplatform/springCloudGatewayCustomDomain", _module);
pulumi.runtime.registerResourceModule("azure", "appplatform/springCloudGatewayRouteConfig", _module);
pulumi.runtime.registerResourceModule("azure", "appplatform/springCloudJavaDeployment", _module);
pulumi.runtime.registerResourceModule("azure", "appplatform/springCloudNewRelicApplicationPerformanceMonitoring", _module);
pulumi.runtime.registerResourceModule("azure", "appplatform/springCloudService", _module);
pulumi.runtime.registerResourceModule("azure", "appplatform/springCloudStorage", _module);
//# sourceMappingURL=index.js.map