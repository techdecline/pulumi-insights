"use strict";
// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***
Object.defineProperty(exports, "__esModule", { value: true });
exports.SpringCloudGateway = void 0;
const pulumi = require("@pulumi/pulumi");
const utilities = require("../utilities");
/**
 * > **NOTE:** This resource is applicable only for Spring Cloud Service with enterprise tier.
 *
 * Manages a Spring Cloud Gateway.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as azure from "@pulumi/azure";
 *
 * const example = new azure.core.ResourceGroup("example", {
 *     name: "example",
 *     location: "West Europe",
 * });
 * const exampleSpringCloudService = new azure.appplatform.SpringCloudService("example", {
 *     name: "example",
 *     location: example.location,
 *     resourceGroupName: example.name,
 *     skuName: "E0",
 * });
 * const exampleSpringCloudGateway = new azure.appplatform.SpringCloudGateway("example", {
 *     name: "default",
 *     springCloudServiceId: exampleSpringCloudService.id,
 *     httpsOnly: false,
 *     publicNetworkAccessEnabled: true,
 *     instanceCount: 2,
 *     apiMetadata: {
 *         description: "example description",
 *         documentationUrl: "https://www.example.com/docs",
 *         serverUrl: "https://wwww.example.com",
 *         title: "example title",
 *         version: "1.0",
 *     },
 *     cors: {
 *         credentialsAllowed: false,
 *         allowedHeaders: ["*"],
 *         allowedMethods: ["PUT"],
 *         allowedOrigins: ["example.com"],
 *         exposedHeaders: ["x-example-header"],
 *         maxAgeSeconds: 86400,
 *     },
 *     quota: {
 *         cpu: "1",
 *         memory: "2Gi",
 *     },
 *     sso: {
 *         clientId: "example id",
 *         clientSecret: "example secret",
 *         issuerUri: "https://www.test.com/issueToken",
 *         scopes: ["read"],
 *     },
 *     localResponseCachePerInstance: {
 *         size: "100MB",
 *         timeToLive: "30s",
 *     },
 * });
 * ```
 *
 * ## Import
 *
 * Spring Cloud Gateways can be imported using the `resource id`, e.g.
 *
 * ```sh
 * $ pulumi import azure:appplatform/springCloudGateway:SpringCloudGateway example /subscriptions/12345678-1234-9876-4563-123456789012/resourceGroups/resourceGroup1/providers/Microsoft.AppPlatform/spring/service1/gateways/gateway1
 * ```
 */
class SpringCloudGateway extends pulumi.CustomResource {
    constructor(name, argsOrState, opts) {
        let resourceInputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState;
            resourceInputs["apiMetadata"] = state ? state.apiMetadata : undefined;
            resourceInputs["applicationPerformanceMonitoringIds"] = state ? state.applicationPerformanceMonitoringIds : undefined;
            resourceInputs["applicationPerformanceMonitoringTypes"] = state ? state.applicationPerformanceMonitoringTypes : undefined;
            resourceInputs["clientAuthorization"] = state ? state.clientAuthorization : undefined;
            resourceInputs["cors"] = state ? state.cors : undefined;
            resourceInputs["environmentVariables"] = state ? state.environmentVariables : undefined;
            resourceInputs["httpsOnly"] = state ? state.httpsOnly : undefined;
            resourceInputs["instanceCount"] = state ? state.instanceCount : undefined;
            resourceInputs["localResponseCachePerInstance"] = state ? state.localResponseCachePerInstance : undefined;
            resourceInputs["localResponseCachePerRoute"] = state ? state.localResponseCachePerRoute : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["publicNetworkAccessEnabled"] = state ? state.publicNetworkAccessEnabled : undefined;
            resourceInputs["quota"] = state ? state.quota : undefined;
            resourceInputs["sensitiveEnvironmentVariables"] = state ? state.sensitiveEnvironmentVariables : undefined;
            resourceInputs["springCloudServiceId"] = state ? state.springCloudServiceId : undefined;
            resourceInputs["sso"] = state ? state.sso : undefined;
            resourceInputs["url"] = state ? state.url : undefined;
        }
        else {
            const args = argsOrState;
            if ((!args || args.springCloudServiceId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'springCloudServiceId'");
            }
            resourceInputs["apiMetadata"] = args ? args.apiMetadata : undefined;
            resourceInputs["applicationPerformanceMonitoringIds"] = args ? args.applicationPerformanceMonitoringIds : undefined;
            resourceInputs["applicationPerformanceMonitoringTypes"] = args ? args.applicationPerformanceMonitoringTypes : undefined;
            resourceInputs["clientAuthorization"] = args ? args.clientAuthorization : undefined;
            resourceInputs["cors"] = args ? args.cors : undefined;
            resourceInputs["environmentVariables"] = args ? args.environmentVariables : undefined;
            resourceInputs["httpsOnly"] = args ? args.httpsOnly : undefined;
            resourceInputs["instanceCount"] = args ? args.instanceCount : undefined;
            resourceInputs["localResponseCachePerInstance"] = args ? args.localResponseCachePerInstance : undefined;
            resourceInputs["localResponseCachePerRoute"] = args ? args.localResponseCachePerRoute : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["publicNetworkAccessEnabled"] = args ? args.publicNetworkAccessEnabled : undefined;
            resourceInputs["quota"] = args ? args.quota : undefined;
            resourceInputs["sensitiveEnvironmentVariables"] = (args === null || args === void 0 ? void 0 : args.sensitiveEnvironmentVariables) ? pulumi.secret(args.sensitiveEnvironmentVariables) : undefined;
            resourceInputs["springCloudServiceId"] = args ? args.springCloudServiceId : undefined;
            resourceInputs["sso"] = args ? args.sso : undefined;
            resourceInputs["url"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        const secretOpts = { additionalSecretOutputs: ["sensitiveEnvironmentVariables"] };
        opts = pulumi.mergeOptions(opts, secretOpts);
        super(SpringCloudGateway.__pulumiType, name, resourceInputs, opts);
    }
    /**
     * Get an existing SpringCloudGateway resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    static get(name, id, state, opts) {
        return new SpringCloudGateway(name, state, Object.assign(Object.assign({}, opts), { id: id }));
    }
    /**
     * Returns true if the given object is an instance of SpringCloudGateway.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    static isInstance(obj) {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === SpringCloudGateway.__pulumiType;
    }
}
exports.SpringCloudGateway = SpringCloudGateway;
/** @internal */
SpringCloudGateway.__pulumiType = 'azure:appplatform/springCloudGateway:SpringCloudGateway';
//# sourceMappingURL=springCloudGateway.js.map