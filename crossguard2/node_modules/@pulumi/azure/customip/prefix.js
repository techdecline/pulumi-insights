"use strict";
// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***
Object.defineProperty(exports, "__esModule", { value: true });
exports.Prefix = void 0;
const pulumi = require("@pulumi/pulumi");
const utilities = require("../utilities");
/**
 * Manages a custom IPv4 prefix or custom IPv6 prefix.
 *
 * ## Example Usage
 *
 * *IPv4 custom prefix*
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as azure from "@pulumi/azure";
 *
 * const example = new azure.core.ResourceGroup("example", {
 *     name: "example-resources",
 *     location: "West Europe",
 * });
 * const examplePrefix = new azure.customip.Prefix("example", {
 *     name: "example-CustomIPPrefix",
 *     location: example.location,
 *     resourceGroupName: example.name,
 *     cidr: "1.2.3.4/22",
 *     zones: [
 *         "1",
 *         "2",
 *         "3",
 *     ],
 *     commissioningEnabled: true,
 *     roaValidityEndDate: "2099-12-12",
 *     wanValidationSignedMessage: "signed message for WAN validation",
 *     tags: {
 *         env: "test",
 *     },
 * });
 * ```
 *
 * *IPv6 custom prefix*
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as azure from "@pulumi/azure";
 * import * as std from "@pulumi/std";
 *
 * const example = new azure.core.ResourceGroup("example", {
 *     name: "example-resources",
 *     location: "West Europe",
 * });
 * const global = new azure.customip.Prefix("global", {
 *     name: "example-Global-CustomIPPrefix",
 *     location: test.location,
 *     resourceGroupName: test.name,
 *     cidr: "2001:db8:1::/48",
 *     roaValidityEndDate: "2199-12-12",
 *     wanValidationSignedMessage: "signed message for WAN validation",
 * });
 * const regional = new azure.customip.Prefix("regional", {
 *     name: "example-Regional-CustomIPPrefix",
 *     location: test.location,
 *     resourceGroupName: test.name,
 *     parentCustomIpPrefixId: global.id,
 *     cidr: global.cidr.apply(cidr => std.cidrsubnetOutput({
 *         input: cidr,
 *         newbits: 16,
 *         netnum: 1,
 *     })).apply(invoke => invoke.result),
 *     zones: ["1"],
 * });
 * ```
 *
 * ## Import
 *
 * A Custom IP Prefix can be imported using the `resource id`, e.g.
 *
 * ```sh
 * $ pulumi import azure:customip/prefix:Prefix example /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/group1/providers/Microsoft.Network/customIPPrefixes/customIPPrefix1
 * ```
 */
class Prefix extends pulumi.CustomResource {
    constructor(name, argsOrState, opts) {
        let resourceInputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState;
            resourceInputs["cidr"] = state ? state.cidr : undefined;
            resourceInputs["commissioningEnabled"] = state ? state.commissioningEnabled : undefined;
            resourceInputs["internetAdvertisingDisabled"] = state ? state.internetAdvertisingDisabled : undefined;
            resourceInputs["location"] = state ? state.location : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["parentCustomIpPrefixId"] = state ? state.parentCustomIpPrefixId : undefined;
            resourceInputs["resourceGroupName"] = state ? state.resourceGroupName : undefined;
            resourceInputs["roaValidityEndDate"] = state ? state.roaValidityEndDate : undefined;
            resourceInputs["tags"] = state ? state.tags : undefined;
            resourceInputs["wanValidationSignedMessage"] = state ? state.wanValidationSignedMessage : undefined;
            resourceInputs["zones"] = state ? state.zones : undefined;
        }
        else {
            const args = argsOrState;
            if ((!args || args.cidr === undefined) && !opts.urn) {
                throw new Error("Missing required property 'cidr'");
            }
            if ((!args || args.resourceGroupName === undefined) && !opts.urn) {
                throw new Error("Missing required property 'resourceGroupName'");
            }
            resourceInputs["cidr"] = args ? args.cidr : undefined;
            resourceInputs["commissioningEnabled"] = args ? args.commissioningEnabled : undefined;
            resourceInputs["internetAdvertisingDisabled"] = args ? args.internetAdvertisingDisabled : undefined;
            resourceInputs["location"] = args ? args.location : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["parentCustomIpPrefixId"] = args ? args.parentCustomIpPrefixId : undefined;
            resourceInputs["resourceGroupName"] = args ? args.resourceGroupName : undefined;
            resourceInputs["roaValidityEndDate"] = args ? args.roaValidityEndDate : undefined;
            resourceInputs["tags"] = args ? args.tags : undefined;
            resourceInputs["wanValidationSignedMessage"] = args ? args.wanValidationSignedMessage : undefined;
            resourceInputs["zones"] = args ? args.zones : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(Prefix.__pulumiType, name, resourceInputs, opts);
    }
    /**
     * Get an existing Prefix resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    static get(name, id, state, opts) {
        return new Prefix(name, state, Object.assign(Object.assign({}, opts), { id: id }));
    }
    /**
     * Returns true if the given object is an instance of Prefix.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    static isInstance(obj) {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === Prefix.__pulumiType;
    }
}
exports.Prefix = Prefix;
/** @internal */
Prefix.__pulumiType = 'azure:customip/prefix:Prefix';
//# sourceMappingURL=prefix.js.map