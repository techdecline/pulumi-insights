import * as pulumi from "@pulumi/pulumi";
/**
 * <!-- Note: This documentation is generated. Any manual changes will be overwritten -->
 *
 * Manages a Kubernetes Fleet Member.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as azure from "@pulumi/azure";
 *
 * const exampleResourceGroup = new azure.core.ResourceGroup("example", {
 *     name: "example-resources",
 *     location: "West Europe",
 * });
 * const example = new azure.containerservice.KubernetesCluster("example", {
 *     name: "example",
 *     location: exampleResourceGroup.location,
 *     resourceGroupName: exampleResourceGroup.name,
 *     dnsPrefix: "acctestaksexample",
 *     defaultNodePool: {
 *         name: "example-value",
 *         nodeCount: "example-value",
 *         vmSize: "example-value",
 *         upgradeSettings: {
 *             maxSurge: "example-value",
 *         },
 *     },
 *     identity: {
 *         type: "example-value",
 *     },
 * });
 * const exampleKubernetesFleetManager = new azure.containerservice.KubernetesFleetManager("example", {
 *     name: "example",
 *     location: exampleResourceGroup.location,
 *     resourceGroupName: exampleResourceGroup.name,
 * });
 * const exampleFleetMember = new azure.containerservice.FleetMember("example", {
 *     kubernetesClusterId: example.id,
 *     kubernetesFleetId: exampleKubernetesFleetManager.id,
 *     name: "example",
 * });
 * ```
 *
 * ## Import
 *
 * An existing Kubernetes Fleet Member can be imported into Pulumi using the `resource id`, e.g.
 *
 * ```sh
 * $ pulumi import azure:containerservice/fleetMember:FleetMember example /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ContainerService/fleets/{fleetName}/members/{memberName}
 * ```
 *
 * * Where `{subscriptionId}` is the ID of the Azure Subscription where the Kubernetes Fleet Member exists. For example `12345678-1234-9876-4563-123456789012`.
 *
 * * Where `{resourceGroupName}` is the name of Resource Group where this Kubernetes Fleet Member exists. For example `example-resource-group`.
 *
 * * Where `{fleetName}` is the name of the Fleet. For example `fleetValue`.
 *
 * * Where `{memberName}` is the name of the Member. For example `memberValue`.
 */
export declare class FleetMember extends pulumi.CustomResource {
    /**
     * Get an existing FleetMember resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    static get(name: string, id: pulumi.Input<pulumi.ID>, state?: FleetMemberState, opts?: pulumi.CustomResourceOptions): FleetMember;
    /**
     * Returns true if the given object is an instance of FleetMember.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    static isInstance(obj: any): obj is FleetMember;
    /**
     * The group this member belongs to for multi-cluster update management.
     */
    readonly group: pulumi.Output<string | undefined>;
    /**
     * The ARM resource ID of the cluster that joins the Fleet. Changing this forces a new Kubernetes Fleet Member to be created.
     */
    readonly kubernetesClusterId: pulumi.Output<string>;
    /**
     * Specifies the Kubernetes Fleet Id within which this Kubernetes Fleet Member should exist. Changing this forces a new Kubernetes Fleet Member to be created.
     */
    readonly kubernetesFleetId: pulumi.Output<string>;
    /**
     * Specifies the name of this Kubernetes Fleet Member. Changing this forces a new Kubernetes Fleet Member to be created.
     */
    readonly name: pulumi.Output<string>;
    /**
     * Create a FleetMember resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: FleetMemberArgs, opts?: pulumi.CustomResourceOptions);
}
/**
 * Input properties used for looking up and filtering FleetMember resources.
 */
export interface FleetMemberState {
    /**
     * The group this member belongs to for multi-cluster update management.
     */
    group?: pulumi.Input<string>;
    /**
     * The ARM resource ID of the cluster that joins the Fleet. Changing this forces a new Kubernetes Fleet Member to be created.
     */
    kubernetesClusterId?: pulumi.Input<string>;
    /**
     * Specifies the Kubernetes Fleet Id within which this Kubernetes Fleet Member should exist. Changing this forces a new Kubernetes Fleet Member to be created.
     */
    kubernetesFleetId?: pulumi.Input<string>;
    /**
     * Specifies the name of this Kubernetes Fleet Member. Changing this forces a new Kubernetes Fleet Member to be created.
     */
    name?: pulumi.Input<string>;
}
/**
 * The set of arguments for constructing a FleetMember resource.
 */
export interface FleetMemberArgs {
    /**
     * The group this member belongs to for multi-cluster update management.
     */
    group?: pulumi.Input<string>;
    /**
     * The ARM resource ID of the cluster that joins the Fleet. Changing this forces a new Kubernetes Fleet Member to be created.
     */
    kubernetesClusterId: pulumi.Input<string>;
    /**
     * Specifies the Kubernetes Fleet Id within which this Kubernetes Fleet Member should exist. Changing this forces a new Kubernetes Fleet Member to be created.
     */
    kubernetesFleetId: pulumi.Input<string>;
    /**
     * Specifies the name of this Kubernetes Fleet Member. Changing this forces a new Kubernetes Fleet Member to be created.
     */
    name?: pulumi.Input<string>;
}
