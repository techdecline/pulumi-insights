"use strict";
// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***
Object.defineProperty(exports, "__esModule", { value: true });
exports.FluxConfiguration = void 0;
const pulumi = require("@pulumi/pulumi");
const utilities = require("../utilities");
/**
 * Manages a Kubernetes Flux Configuration.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as azure from "@pulumi/azure";
 *
 * const example = new azure.core.ResourceGroup("example", {
 *     name: "example-resources",
 *     location: "West Europe",
 * });
 * const exampleKubernetesCluster = new azure.containerservice.KubernetesCluster("example", {
 *     name: "example-aks",
 *     location: "West Europe",
 *     resourceGroupName: example.name,
 *     dnsPrefix: "example-aks",
 *     defaultNodePool: {
 *         name: "default",
 *         nodeCount: 1,
 *         vmSize: "Standard_DS2_v2",
 *     },
 *     identity: {
 *         type: "SystemAssigned",
 *     },
 * });
 * const exampleKubernetesClusterExtension = new azure.containerservice.KubernetesClusterExtension("example", {
 *     name: "example-ext",
 *     clusterId: test.id,
 *     extensionType: "microsoft.flux",
 * });
 * const exampleFluxConfiguration = new azure.containerservice.FluxConfiguration("example", {
 *     name: "example-fc",
 *     clusterId: test.id,
 *     namespace: "flux",
 *     gitRepository: {
 *         url: "https://github.com/Azure/arc-k8s-demo",
 *         referenceType: "branch",
 *         referenceValue: "main",
 *     },
 *     kustomizations: [{
 *         name: "kustomization-1",
 *         postBuild: {
 *             substitute: {
 *                 example_var: "substitute_with_this",
 *             },
 *             substituteFroms: [{
 *                 kind: "ConfigMap",
 *                 name: "example-configmap",
 *             }],
 *         },
 *     }],
 * }, {
 *     dependsOn: [exampleKubernetesClusterExtension],
 * });
 * ```
 *
 * ## Import
 *
 * Kubernetes Flux Configuration can be imported using the `resource id` for different `cluster_resource_name`, e.g.
 *
 * ```sh
 * $ pulumi import azure:containerservice/fluxConfiguration:FluxConfiguration example /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/resourceGroup1/providers/Microsoft.ContainerService/managedClusters/cluster1/providers/Microsoft.KubernetesConfiguration/fluxConfigurations/fluxConfiguration1
 * ```
 */
class FluxConfiguration extends pulumi.CustomResource {
    constructor(name, argsOrState, opts) {
        let resourceInputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState;
            resourceInputs["blobStorage"] = state ? state.blobStorage : undefined;
            resourceInputs["bucket"] = state ? state.bucket : undefined;
            resourceInputs["clusterId"] = state ? state.clusterId : undefined;
            resourceInputs["continuousReconciliationEnabled"] = state ? state.continuousReconciliationEnabled : undefined;
            resourceInputs["gitRepository"] = state ? state.gitRepository : undefined;
            resourceInputs["kustomizations"] = state ? state.kustomizations : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["namespace"] = state ? state.namespace : undefined;
            resourceInputs["scope"] = state ? state.scope : undefined;
        }
        else {
            const args = argsOrState;
            if ((!args || args.clusterId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'clusterId'");
            }
            if ((!args || args.kustomizations === undefined) && !opts.urn) {
                throw new Error("Missing required property 'kustomizations'");
            }
            if ((!args || args.namespace === undefined) && !opts.urn) {
                throw new Error("Missing required property 'namespace'");
            }
            resourceInputs["blobStorage"] = args ? args.blobStorage : undefined;
            resourceInputs["bucket"] = args ? args.bucket : undefined;
            resourceInputs["clusterId"] = args ? args.clusterId : undefined;
            resourceInputs["continuousReconciliationEnabled"] = args ? args.continuousReconciliationEnabled : undefined;
            resourceInputs["gitRepository"] = args ? args.gitRepository : undefined;
            resourceInputs["kustomizations"] = args ? args.kustomizations : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["namespace"] = args ? args.namespace : undefined;
            resourceInputs["scope"] = args ? args.scope : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(FluxConfiguration.__pulumiType, name, resourceInputs, opts);
    }
    /**
     * Get an existing FluxConfiguration resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    static get(name, id, state, opts) {
        return new FluxConfiguration(name, state, Object.assign(Object.assign({}, opts), { id: id }));
    }
    /**
     * Returns true if the given object is an instance of FluxConfiguration.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    static isInstance(obj) {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === FluxConfiguration.__pulumiType;
    }
}
exports.FluxConfiguration = FluxConfiguration;
/** @internal */
FluxConfiguration.__pulumiType = 'azure:containerservice/fluxConfiguration:FluxConfiguration';
//# sourceMappingURL=fluxConfiguration.js.map