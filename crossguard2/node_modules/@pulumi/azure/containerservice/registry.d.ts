import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
/**
 * Manages an Azure Container Registry.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as azure from "@pulumi/azure";
 *
 * const example = new azure.core.ResourceGroup("example", {
 *     name: "example-resources",
 *     location: "West Europe",
 * });
 * const acr = new azure.containerservice.Registry("acr", {
 *     name: "containerRegistry1",
 *     resourceGroupName: example.name,
 *     location: example.location,
 *     sku: "Premium",
 *     adminEnabled: false,
 *     georeplications: [
 *         {
 *             location: "East US",
 *             zoneRedundancyEnabled: true,
 *             tags: {},
 *         },
 *         {
 *             location: "North Europe",
 *             zoneRedundancyEnabled: true,
 *             tags: {},
 *         },
 *     ],
 * });
 * ```
 *
 * ### Encryption)
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as azure from "@pulumi/azure";
 *
 * const exampleResourceGroup = new azure.core.ResourceGroup("example", {
 *     name: "example-resources",
 *     location: "West Europe",
 * });
 * const exampleUserAssignedIdentity = new azure.authorization.UserAssignedIdentity("example", {
 *     resourceGroupName: exampleResourceGroup.name,
 *     location: exampleResourceGroup.location,
 *     name: "registry-uai",
 * });
 * const example = azure.keyvault.getKey({
 *     name: "super-secret",
 *     keyVaultId: existing.id,
 * });
 * const acr = new azure.containerservice.Registry("acr", {
 *     name: "containerRegistry1",
 *     resourceGroupName: exampleResourceGroup.name,
 *     location: exampleResourceGroup.location,
 *     sku: "Premium",
 *     identity: {
 *         type: "UserAssigned",
 *         identityIds: [exampleUserAssignedIdentity.id],
 *     },
 *     encryption: {
 *         keyVaultKeyId: example.then(example => example.id),
 *         identityClientId: exampleUserAssignedIdentity.clientId,
 *     },
 * });
 * ```
 *
 * ## Import
 *
 * Container Registries can be imported using the `resource id`, e.g.
 *
 * ```sh
 * $ pulumi import azure:containerservice/registry:Registry example /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/mygroup1/providers/Microsoft.ContainerRegistry/registries/myregistry1
 * ```
 */
export declare class Registry extends pulumi.CustomResource {
    /**
     * Get an existing Registry resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    static get(name: string, id: pulumi.Input<pulumi.ID>, state?: RegistryState, opts?: pulumi.CustomResourceOptions): Registry;
    /**
     * Returns true if the given object is an instance of Registry.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    static isInstance(obj: any): obj is Registry;
    /**
     * Specifies whether the admin user is enabled. Defaults to `false`.
     */
    readonly adminEnabled: pulumi.Output<boolean | undefined>;
    /**
     * The Password associated with the Container Registry Admin account - if the admin account is enabled.
     */
    readonly adminPassword: pulumi.Output<string>;
    /**
     * The Username associated with the Container Registry Admin account - if the admin account is enabled.
     */
    readonly adminUsername: pulumi.Output<string>;
    /**
     * Whether allows anonymous (unauthenticated) pull access to this Container Registry? This is only supported on resources with the `Standard` or `Premium` SKU.
     */
    readonly anonymousPullEnabled: pulumi.Output<boolean | undefined>;
    /**
     * Whether to enable dedicated data endpoints for this Container Registry? This is only supported on resources with the `Premium` SKU.
     */
    readonly dataEndpointEnabled: pulumi.Output<boolean | undefined>;
    /**
     * An `encryption` block as documented below.
     */
    readonly encryption: pulumi.Output<outputs.containerservice.RegistryEncryption>;
    /**
     * Boolean value that indicates whether export policy is enabled. Defaults to `true`. In order to set it to `false`, make sure the `publicNetworkAccessEnabled` is also set to `false`.
     *
     * > **NOTE:** `quarantinePolicyEnabled`, `retentionPolicyInDays`, `trustPolicyEnabled`, `exportPolicyEnabled` and `zoneRedundancyEnabled` are only supported on resources with the `Premium` SKU.
     */
    readonly exportPolicyEnabled: pulumi.Output<boolean | undefined>;
    /**
     * One or more `georeplications` blocks as documented below.
     *
     * > **NOTE:** The `georeplications` is only supported on new resources with the `Premium` SKU.
     *
     * > **NOTE:** The `georeplications` list cannot contain the location where the Container Registry exists.
     *
     * > **NOTE:** If more than one `georeplications` block is specified, they are expected to follow the alphabetic order on the `location` property.
     */
    readonly georeplications: pulumi.Output<outputs.containerservice.RegistryGeoreplication[] | undefined>;
    /**
     * An `identity` block as defined below.
     */
    readonly identity: pulumi.Output<outputs.containerservice.RegistryIdentity | undefined>;
    /**
     * Specifies the supported Azure location where the resource exists. Changing this forces a new resource to be created.
     */
    readonly location: pulumi.Output<string>;
    /**
     * The URL that can be used to log into the container registry.
     */
    readonly loginServer: pulumi.Output<string>;
    /**
     * Specifies the name of the Container Registry. Only Alphanumeric characters allowed. Changing this forces a new resource to be created.
     */
    readonly name: pulumi.Output<string>;
    /**
     * Whether to allow trusted Azure services to access a network restricted Container Registry? Possible values are `None` and `AzureServices`. Defaults to `AzureServices`.
     */
    readonly networkRuleBypassOption: pulumi.Output<string | undefined>;
    /**
     * A `networkRuleSet` block as documented below.
     */
    readonly networkRuleSet: pulumi.Output<outputs.containerservice.RegistryNetworkRuleSet>;
    /**
     * Whether public network access is allowed for the container registry. Defaults to `true`.
     */
    readonly publicNetworkAccessEnabled: pulumi.Output<boolean | undefined>;
    /**
     * Boolean value that indicates whether quarantine policy is enabled.
     */
    readonly quarantinePolicyEnabled: pulumi.Output<boolean | undefined>;
    /**
     * The name of the resource group in which to create the Container Registry. Changing this forces a new resource to be created.
     */
    readonly resourceGroupName: pulumi.Output<string>;
    /**
     * The number of days to retain and untagged manifest after which it gets purged. Defaults to `7`.
     */
    readonly retentionPolicyInDays: pulumi.Output<number | undefined>;
    /**
     * The SKU name of the container registry. Possible values are `Basic`, `Standard` and `Premium`.
     */
    readonly sku: pulumi.Output<string>;
    /**
     * A mapping of tags to assign to the resource.
     */
    readonly tags: pulumi.Output<{
        [key: string]: string;
    } | undefined>;
    /**
     * Boolean value that indicated whether trust policy is enabled. Defaults to `false`.
     */
    readonly trustPolicyEnabled: pulumi.Output<boolean | undefined>;
    /**
     * Whether zone redundancy is enabled for this Container Registry? Changing this forces a new resource to be created. Defaults to `false`.
     */
    readonly zoneRedundancyEnabled: pulumi.Output<boolean | undefined>;
    /**
     * Create a Registry resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: RegistryArgs, opts?: pulumi.CustomResourceOptions);
}
/**
 * Input properties used for looking up and filtering Registry resources.
 */
export interface RegistryState {
    /**
     * Specifies whether the admin user is enabled. Defaults to `false`.
     */
    adminEnabled?: pulumi.Input<boolean>;
    /**
     * The Password associated with the Container Registry Admin account - if the admin account is enabled.
     */
    adminPassword?: pulumi.Input<string>;
    /**
     * The Username associated with the Container Registry Admin account - if the admin account is enabled.
     */
    adminUsername?: pulumi.Input<string>;
    /**
     * Whether allows anonymous (unauthenticated) pull access to this Container Registry? This is only supported on resources with the `Standard` or `Premium` SKU.
     */
    anonymousPullEnabled?: pulumi.Input<boolean>;
    /**
     * Whether to enable dedicated data endpoints for this Container Registry? This is only supported on resources with the `Premium` SKU.
     */
    dataEndpointEnabled?: pulumi.Input<boolean>;
    /**
     * An `encryption` block as documented below.
     */
    encryption?: pulumi.Input<inputs.containerservice.RegistryEncryption>;
    /**
     * Boolean value that indicates whether export policy is enabled. Defaults to `true`. In order to set it to `false`, make sure the `publicNetworkAccessEnabled` is also set to `false`.
     *
     * > **NOTE:** `quarantinePolicyEnabled`, `retentionPolicyInDays`, `trustPolicyEnabled`, `exportPolicyEnabled` and `zoneRedundancyEnabled` are only supported on resources with the `Premium` SKU.
     */
    exportPolicyEnabled?: pulumi.Input<boolean>;
    /**
     * One or more `georeplications` blocks as documented below.
     *
     * > **NOTE:** The `georeplications` is only supported on new resources with the `Premium` SKU.
     *
     * > **NOTE:** The `georeplications` list cannot contain the location where the Container Registry exists.
     *
     * > **NOTE:** If more than one `georeplications` block is specified, they are expected to follow the alphabetic order on the `location` property.
     */
    georeplications?: pulumi.Input<pulumi.Input<inputs.containerservice.RegistryGeoreplication>[]>;
    /**
     * An `identity` block as defined below.
     */
    identity?: pulumi.Input<inputs.containerservice.RegistryIdentity>;
    /**
     * Specifies the supported Azure location where the resource exists. Changing this forces a new resource to be created.
     */
    location?: pulumi.Input<string>;
    /**
     * The URL that can be used to log into the container registry.
     */
    loginServer?: pulumi.Input<string>;
    /**
     * Specifies the name of the Container Registry. Only Alphanumeric characters allowed. Changing this forces a new resource to be created.
     */
    name?: pulumi.Input<string>;
    /**
     * Whether to allow trusted Azure services to access a network restricted Container Registry? Possible values are `None` and `AzureServices`. Defaults to `AzureServices`.
     */
    networkRuleBypassOption?: pulumi.Input<string>;
    /**
     * A `networkRuleSet` block as documented below.
     */
    networkRuleSet?: pulumi.Input<inputs.containerservice.RegistryNetworkRuleSet>;
    /**
     * Whether public network access is allowed for the container registry. Defaults to `true`.
     */
    publicNetworkAccessEnabled?: pulumi.Input<boolean>;
    /**
     * Boolean value that indicates whether quarantine policy is enabled.
     */
    quarantinePolicyEnabled?: pulumi.Input<boolean>;
    /**
     * The name of the resource group in which to create the Container Registry. Changing this forces a new resource to be created.
     */
    resourceGroupName?: pulumi.Input<string>;
    /**
     * The number of days to retain and untagged manifest after which it gets purged. Defaults to `7`.
     */
    retentionPolicyInDays?: pulumi.Input<number>;
    /**
     * The SKU name of the container registry. Possible values are `Basic`, `Standard` and `Premium`.
     */
    sku?: pulumi.Input<string>;
    /**
     * A mapping of tags to assign to the resource.
     */
    tags?: pulumi.Input<{
        [key: string]: pulumi.Input<string>;
    }>;
    /**
     * Boolean value that indicated whether trust policy is enabled. Defaults to `false`.
     */
    trustPolicyEnabled?: pulumi.Input<boolean>;
    /**
     * Whether zone redundancy is enabled for this Container Registry? Changing this forces a new resource to be created. Defaults to `false`.
     */
    zoneRedundancyEnabled?: pulumi.Input<boolean>;
}
/**
 * The set of arguments for constructing a Registry resource.
 */
export interface RegistryArgs {
    /**
     * Specifies whether the admin user is enabled. Defaults to `false`.
     */
    adminEnabled?: pulumi.Input<boolean>;
    /**
     * Whether allows anonymous (unauthenticated) pull access to this Container Registry? This is only supported on resources with the `Standard` or `Premium` SKU.
     */
    anonymousPullEnabled?: pulumi.Input<boolean>;
    /**
     * Whether to enable dedicated data endpoints for this Container Registry? This is only supported on resources with the `Premium` SKU.
     */
    dataEndpointEnabled?: pulumi.Input<boolean>;
    /**
     * An `encryption` block as documented below.
     */
    encryption?: pulumi.Input<inputs.containerservice.RegistryEncryption>;
    /**
     * Boolean value that indicates whether export policy is enabled. Defaults to `true`. In order to set it to `false`, make sure the `publicNetworkAccessEnabled` is also set to `false`.
     *
     * > **NOTE:** `quarantinePolicyEnabled`, `retentionPolicyInDays`, `trustPolicyEnabled`, `exportPolicyEnabled` and `zoneRedundancyEnabled` are only supported on resources with the `Premium` SKU.
     */
    exportPolicyEnabled?: pulumi.Input<boolean>;
    /**
     * One or more `georeplications` blocks as documented below.
     *
     * > **NOTE:** The `georeplications` is only supported on new resources with the `Premium` SKU.
     *
     * > **NOTE:** The `georeplications` list cannot contain the location where the Container Registry exists.
     *
     * > **NOTE:** If more than one `georeplications` block is specified, they are expected to follow the alphabetic order on the `location` property.
     */
    georeplications?: pulumi.Input<pulumi.Input<inputs.containerservice.RegistryGeoreplication>[]>;
    /**
     * An `identity` block as defined below.
     */
    identity?: pulumi.Input<inputs.containerservice.RegistryIdentity>;
    /**
     * Specifies the supported Azure location where the resource exists. Changing this forces a new resource to be created.
     */
    location?: pulumi.Input<string>;
    /**
     * Specifies the name of the Container Registry. Only Alphanumeric characters allowed. Changing this forces a new resource to be created.
     */
    name?: pulumi.Input<string>;
    /**
     * Whether to allow trusted Azure services to access a network restricted Container Registry? Possible values are `None` and `AzureServices`. Defaults to `AzureServices`.
     */
    networkRuleBypassOption?: pulumi.Input<string>;
    /**
     * A `networkRuleSet` block as documented below.
     */
    networkRuleSet?: pulumi.Input<inputs.containerservice.RegistryNetworkRuleSet>;
    /**
     * Whether public network access is allowed for the container registry. Defaults to `true`.
     */
    publicNetworkAccessEnabled?: pulumi.Input<boolean>;
    /**
     * Boolean value that indicates whether quarantine policy is enabled.
     */
    quarantinePolicyEnabled?: pulumi.Input<boolean>;
    /**
     * The name of the resource group in which to create the Container Registry. Changing this forces a new resource to be created.
     */
    resourceGroupName: pulumi.Input<string>;
    /**
     * The number of days to retain and untagged manifest after which it gets purged. Defaults to `7`.
     */
    retentionPolicyInDays?: pulumi.Input<number>;
    /**
     * The SKU name of the container registry. Possible values are `Basic`, `Standard` and `Premium`.
     */
    sku: pulumi.Input<string>;
    /**
     * A mapping of tags to assign to the resource.
     */
    tags?: pulumi.Input<{
        [key: string]: pulumi.Input<string>;
    }>;
    /**
     * Boolean value that indicated whether trust policy is enabled. Defaults to `false`.
     */
    trustPolicyEnabled?: pulumi.Input<boolean>;
    /**
     * Whether zone redundancy is enabled for this Container Registry? Changing this forces a new resource to be created. Defaults to `false`.
     */
    zoneRedundancyEnabled?: pulumi.Input<boolean>;
}
