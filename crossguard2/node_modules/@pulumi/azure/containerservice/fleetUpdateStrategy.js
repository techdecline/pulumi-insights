"use strict";
// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***
Object.defineProperty(exports, "__esModule", { value: true });
exports.FleetUpdateStrategy = void 0;
const pulumi = require("@pulumi/pulumi");
const utilities = require("../utilities");
/**
 * Manages a Kubernetes Fleet Update Strategy.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as azure from "@pulumi/azure";
 *
 * const example = new azure.core.ResourceGroup("example", {
 *     name: "example-rg",
 *     location: "westeurope",
 * });
 * const exampleKubernetesFleetManager = new azure.containerservice.KubernetesFleetManager("example", {
 *     location: example.location,
 *     name: "example",
 *     resourceGroupName: example.name,
 * });
 * const exampleFleetUpdateStrategy = new azure.containerservice.FleetUpdateStrategy("example", {
 *     name: "example",
 *     kubernetesFleetManagerId: exampleKubernetesFleetManager.id,
 *     stages: [{
 *         name: "example-stage-1",
 *         groups: [{
 *             name: "example-group-1",
 *         }],
 *         afterStageWaitInSeconds: 21,
 *     }],
 * });
 * ```
 *
 * ## Import
 *
 * Kubernetes Fleet Update Strategies can be imported using the `resource id`, e.g.
 *
 * ```sh
 * $ pulumi import azure:containerservice/fleetUpdateStrategy:FleetUpdateStrategy example /subscriptions/12345678-1234-9876-4563-123456789012/resourceGroups/resourceGroup1/providers/Microsoft.ContainerService/fleets/fleet1/updateStrategies/updateStrategy1
 * ```
 */
class FleetUpdateStrategy extends pulumi.CustomResource {
    constructor(name, argsOrState, opts) {
        let resourceInputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState;
            resourceInputs["kubernetesFleetManagerId"] = state ? state.kubernetesFleetManagerId : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["stages"] = state ? state.stages : undefined;
        }
        else {
            const args = argsOrState;
            if ((!args || args.kubernetesFleetManagerId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'kubernetesFleetManagerId'");
            }
            if ((!args || args.stages === undefined) && !opts.urn) {
                throw new Error("Missing required property 'stages'");
            }
            resourceInputs["kubernetesFleetManagerId"] = args ? args.kubernetesFleetManagerId : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["stages"] = args ? args.stages : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(FleetUpdateStrategy.__pulumiType, name, resourceInputs, opts);
    }
    /**
     * Get an existing FleetUpdateStrategy resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    static get(name, id, state, opts) {
        return new FleetUpdateStrategy(name, state, Object.assign(Object.assign({}, opts), { id: id }));
    }
    /**
     * Returns true if the given object is an instance of FleetUpdateStrategy.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    static isInstance(obj) {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === FleetUpdateStrategy.__pulumiType;
    }
}
exports.FleetUpdateStrategy = FleetUpdateStrategy;
/** @internal */
FleetUpdateStrategy.__pulumiType = 'azure:containerservice/fleetUpdateStrategy:FleetUpdateStrategy';
//# sourceMappingURL=fleetUpdateStrategy.js.map