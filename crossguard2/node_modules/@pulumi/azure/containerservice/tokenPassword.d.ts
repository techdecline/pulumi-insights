import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
/**
 * Manages a Container Registry Token Password.
 *
 * ## Import
 *
 * Container Registry Token Passwords can be imported using the `resource id`, e.g.
 *
 * ```sh
 * $ pulumi import azure:containerservice/tokenPassword:TokenPassword example /subscriptions/12345678-1234-9876-4563-123456789012/resourceGroups/group1/providers/Microsoft.ContainerRegistry/registries/registry1/tokens/token1/passwords/password
 * ```
 */
export declare class TokenPassword extends pulumi.CustomResource {
    /**
     * Get an existing TokenPassword resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    static get(name: string, id: pulumi.Input<pulumi.ID>, state?: TokenPasswordState, opts?: pulumi.CustomResourceOptions): TokenPassword;
    /**
     * Returns true if the given object is an instance of TokenPassword.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    static isInstance(obj: any): obj is TokenPassword;
    /**
     * The ID of the Container Registry Token that this Container Registry Token Password resides in. Changing this forces a new Container Registry Token Password to be created.
     */
    readonly containerRegistryTokenId: pulumi.Output<string>;
    /**
     * One `password` block as defined below.
     */
    readonly password1: pulumi.Output<outputs.containerservice.TokenPasswordPassword1>;
    /**
     * One `password` block as defined below.
     */
    readonly password2: pulumi.Output<outputs.containerservice.TokenPasswordPassword2 | undefined>;
    /**
     * Create a TokenPassword resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: TokenPasswordArgs, opts?: pulumi.CustomResourceOptions);
}
/**
 * Input properties used for looking up and filtering TokenPassword resources.
 */
export interface TokenPasswordState {
    /**
     * The ID of the Container Registry Token that this Container Registry Token Password resides in. Changing this forces a new Container Registry Token Password to be created.
     */
    containerRegistryTokenId?: pulumi.Input<string>;
    /**
     * One `password` block as defined below.
     */
    password1?: pulumi.Input<inputs.containerservice.TokenPasswordPassword1>;
    /**
     * One `password` block as defined below.
     */
    password2?: pulumi.Input<inputs.containerservice.TokenPasswordPassword2>;
}
/**
 * The set of arguments for constructing a TokenPassword resource.
 */
export interface TokenPasswordArgs {
    /**
     * The ID of the Container Registry Token that this Container Registry Token Password resides in. Changing this forces a new Container Registry Token Password to be created.
     */
    containerRegistryTokenId: pulumi.Input<string>;
    /**
     * One `password` block as defined below.
     */
    password1: pulumi.Input<inputs.containerservice.TokenPasswordPassword1>;
    /**
     * One `password` block as defined below.
     */
    password2?: pulumi.Input<inputs.containerservice.TokenPasswordPassword2>;
}
