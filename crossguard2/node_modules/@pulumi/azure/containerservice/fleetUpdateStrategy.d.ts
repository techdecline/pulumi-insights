import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
/**
 * Manages a Kubernetes Fleet Update Strategy.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as azure from "@pulumi/azure";
 *
 * const example = new azure.core.ResourceGroup("example", {
 *     name: "example-rg",
 *     location: "westeurope",
 * });
 * const exampleKubernetesFleetManager = new azure.containerservice.KubernetesFleetManager("example", {
 *     location: example.location,
 *     name: "example",
 *     resourceGroupName: example.name,
 * });
 * const exampleFleetUpdateStrategy = new azure.containerservice.FleetUpdateStrategy("example", {
 *     name: "example",
 *     kubernetesFleetManagerId: exampleKubernetesFleetManager.id,
 *     stages: [{
 *         name: "example-stage-1",
 *         groups: [{
 *             name: "example-group-1",
 *         }],
 *         afterStageWaitInSeconds: 21,
 *     }],
 * });
 * ```
 *
 * ## Import
 *
 * Kubernetes Fleet Update Strategies can be imported using the `resource id`, e.g.
 *
 * ```sh
 * $ pulumi import azure:containerservice/fleetUpdateStrategy:FleetUpdateStrategy example /subscriptions/12345678-1234-9876-4563-123456789012/resourceGroups/resourceGroup1/providers/Microsoft.ContainerService/fleets/fleet1/updateStrategies/updateStrategy1
 * ```
 */
export declare class FleetUpdateStrategy extends pulumi.CustomResource {
    /**
     * Get an existing FleetUpdateStrategy resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    static get(name: string, id: pulumi.Input<pulumi.ID>, state?: FleetUpdateStrategyState, opts?: pulumi.CustomResourceOptions): FleetUpdateStrategy;
    /**
     * Returns true if the given object is an instance of FleetUpdateStrategy.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    static isInstance(obj: any): obj is FleetUpdateStrategy;
    /**
     * The ID of the Fleet Manager. Changing this forces a new Kubernetes Fleet Update Strategy to be created.
     */
    readonly kubernetesFleetManagerId: pulumi.Output<string>;
    /**
     * The name which should be used for this Kubernetes Fleet Update Strategy. Changing this forces a new Kubernetes Fleet Update Strategy to be created.
     */
    readonly name: pulumi.Output<string>;
    /**
     * One or more `stage` blocks as defined below.
     */
    readonly stages: pulumi.Output<outputs.containerservice.FleetUpdateStrategyStage[]>;
    /**
     * Create a FleetUpdateStrategy resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: FleetUpdateStrategyArgs, opts?: pulumi.CustomResourceOptions);
}
/**
 * Input properties used for looking up and filtering FleetUpdateStrategy resources.
 */
export interface FleetUpdateStrategyState {
    /**
     * The ID of the Fleet Manager. Changing this forces a new Kubernetes Fleet Update Strategy to be created.
     */
    kubernetesFleetManagerId?: pulumi.Input<string>;
    /**
     * The name which should be used for this Kubernetes Fleet Update Strategy. Changing this forces a new Kubernetes Fleet Update Strategy to be created.
     */
    name?: pulumi.Input<string>;
    /**
     * One or more `stage` blocks as defined below.
     */
    stages?: pulumi.Input<pulumi.Input<inputs.containerservice.FleetUpdateStrategyStage>[]>;
}
/**
 * The set of arguments for constructing a FleetUpdateStrategy resource.
 */
export interface FleetUpdateStrategyArgs {
    /**
     * The ID of the Fleet Manager. Changing this forces a new Kubernetes Fleet Update Strategy to be created.
     */
    kubernetesFleetManagerId: pulumi.Input<string>;
    /**
     * The name which should be used for this Kubernetes Fleet Update Strategy. Changing this forces a new Kubernetes Fleet Update Strategy to be created.
     */
    name?: pulumi.Input<string>;
    /**
     * One or more `stage` blocks as defined below.
     */
    stages: pulumi.Input<pulumi.Input<inputs.containerservice.FleetUpdateStrategyStage>[]>;
}
