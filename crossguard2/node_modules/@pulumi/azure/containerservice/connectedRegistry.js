"use strict";
// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***
Object.defineProperty(exports, "__esModule", { value: true });
exports.ConnectedRegistry = void 0;
const pulumi = require("@pulumi/pulumi");
const utilities = require("../utilities");
/**
 * Manages a Container Connected Registry.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as azure from "@pulumi/azure";
 *
 * const example = new azure.core.ResourceGroup("example", {
 *     name: "example-rg",
 *     location: "West Europe",
 * });
 * const exampleRegistry = new azure.containerservice.Registry("example", {
 *     name: "exampleacr",
 *     resourceGroupName: example.name,
 *     location: example.location,
 *     sku: "Premium",
 *     dataEndpointEnabled: true,
 * });
 * const exampleRegistryScopeMap = new azure.containerservice.RegistryScopeMap("example", {
 *     name: "examplescopemap",
 *     containerRegistryName: exampleRegistry.name,
 *     resourceGroupName: exampleRegistry.resourceGroupName,
 *     actions: [
 *         "repositories/hello-world/content/delete",
 *         "repositories/hello-world/content/read",
 *         "repositories/hello-world/content/write",
 *         "repositories/hello-world/metadata/read",
 *         "repositories/hello-world/metadata/write",
 *         "gateway/examplecr/config/read",
 *         "gateway/examplecr/config/write",
 *         "gateway/examplecr/message/read",
 *         "gateway/examplecr/message/write",
 *     ],
 * });
 * const exampleRegistryToken = new azure.containerservice.RegistryToken("example", {
 *     name: "exampletoken",
 *     containerRegistryName: exampleRegistry.name,
 *     resourceGroupName: exampleRegistry.resourceGroupName,
 *     scopeMapId: exampleRegistryScopeMap.id,
 * });
 * const exampleConnectedRegistry = new azure.containerservice.ConnectedRegistry("example", {
 *     name: "examplecr",
 *     containerRegistryId: exampleRegistry.id,
 *     syncTokenId: exampleRegistryToken.id,
 * });
 * ```
 *
 * ## Import
 *
 * Container Connected Registries can be imported using the `resource id`, e.g.
 *
 * ```sh
 * $ pulumi import azure:containerservice/connectedRegistry:ConnectedRegistry example /subscriptions/12345678-1234-9876-4563-123456789012/resourceGroups/group1/providers/Microsoft.ContainerRegistry/registries/registry1/connectedRegistries/registry1
 * ```
 */
class ConnectedRegistry extends pulumi.CustomResource {
    constructor(name, argsOrState, opts) {
        let resourceInputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState;
            resourceInputs["auditLogEnabled"] = state ? state.auditLogEnabled : undefined;
            resourceInputs["clientTokenIds"] = state ? state.clientTokenIds : undefined;
            resourceInputs["containerRegistryId"] = state ? state.containerRegistryId : undefined;
            resourceInputs["logLevel"] = state ? state.logLevel : undefined;
            resourceInputs["mode"] = state ? state.mode : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["notifications"] = state ? state.notifications : undefined;
            resourceInputs["parentRegistryId"] = state ? state.parentRegistryId : undefined;
            resourceInputs["syncMessageTtl"] = state ? state.syncMessageTtl : undefined;
            resourceInputs["syncSchedule"] = state ? state.syncSchedule : undefined;
            resourceInputs["syncTokenId"] = state ? state.syncTokenId : undefined;
            resourceInputs["syncWindow"] = state ? state.syncWindow : undefined;
        }
        else {
            const args = argsOrState;
            if ((!args || args.containerRegistryId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'containerRegistryId'");
            }
            if ((!args || args.syncTokenId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'syncTokenId'");
            }
            resourceInputs["auditLogEnabled"] = args ? args.auditLogEnabled : undefined;
            resourceInputs["clientTokenIds"] = args ? args.clientTokenIds : undefined;
            resourceInputs["containerRegistryId"] = args ? args.containerRegistryId : undefined;
            resourceInputs["logLevel"] = args ? args.logLevel : undefined;
            resourceInputs["mode"] = args ? args.mode : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["notifications"] = args ? args.notifications : undefined;
            resourceInputs["parentRegistryId"] = args ? args.parentRegistryId : undefined;
            resourceInputs["syncMessageTtl"] = args ? args.syncMessageTtl : undefined;
            resourceInputs["syncSchedule"] = args ? args.syncSchedule : undefined;
            resourceInputs["syncTokenId"] = args ? args.syncTokenId : undefined;
            resourceInputs["syncWindow"] = args ? args.syncWindow : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(ConnectedRegistry.__pulumiType, name, resourceInputs, opts);
    }
    /**
     * Get an existing ConnectedRegistry resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    static get(name, id, state, opts) {
        return new ConnectedRegistry(name, state, Object.assign(Object.assign({}, opts), { id: id }));
    }
    /**
     * Returns true if the given object is an instance of ConnectedRegistry.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    static isInstance(obj) {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === ConnectedRegistry.__pulumiType;
    }
}
exports.ConnectedRegistry = ConnectedRegistry;
/** @internal */
ConnectedRegistry.__pulumiType = 'azure:containerservice/connectedRegistry:ConnectedRegistry';
//# sourceMappingURL=connectedRegistry.js.map