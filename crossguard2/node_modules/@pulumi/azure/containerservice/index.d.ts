export { ClusterTrustedAccessRoleBindingArgs, ClusterTrustedAccessRoleBindingState } from "./clusterTrustedAccessRoleBinding";
export declare type ClusterTrustedAccessRoleBinding = import("./clusterTrustedAccessRoleBinding").ClusterTrustedAccessRoleBinding;
export declare const ClusterTrustedAccessRoleBinding: typeof import("./clusterTrustedAccessRoleBinding").ClusterTrustedAccessRoleBinding;
export { ConnectedRegistryArgs, ConnectedRegistryState } from "./connectedRegistry";
export declare type ConnectedRegistry = import("./connectedRegistry").ConnectedRegistry;
export declare const ConnectedRegistry: typeof import("./connectedRegistry").ConnectedRegistry;
export { FleetMemberArgs, FleetMemberState } from "./fleetMember";
export declare type FleetMember = import("./fleetMember").FleetMember;
export declare const FleetMember: typeof import("./fleetMember").FleetMember;
export { FleetUpdateRunArgs, FleetUpdateRunState } from "./fleetUpdateRun";
export declare type FleetUpdateRun = import("./fleetUpdateRun").FleetUpdateRun;
export declare const FleetUpdateRun: typeof import("./fleetUpdateRun").FleetUpdateRun;
export { FleetUpdateStrategyArgs, FleetUpdateStrategyState } from "./fleetUpdateStrategy";
export declare type FleetUpdateStrategy = import("./fleetUpdateStrategy").FleetUpdateStrategy;
export declare const FleetUpdateStrategy: typeof import("./fleetUpdateStrategy").FleetUpdateStrategy;
export { FluxConfigurationArgs, FluxConfigurationState } from "./fluxConfiguration";
export declare type FluxConfiguration = import("./fluxConfiguration").FluxConfiguration;
export declare const FluxConfiguration: typeof import("./fluxConfiguration").FluxConfiguration;
export { GetClusterNodePoolArgs, GetClusterNodePoolResult, GetClusterNodePoolOutputArgs } from "./getClusterNodePool";
export declare const getClusterNodePool: typeof import("./getClusterNodePool").getClusterNodePool;
export declare const getClusterNodePoolOutput: typeof import("./getClusterNodePool").getClusterNodePoolOutput;
export { GetFleetManagerArgs, GetFleetManagerResult, GetFleetManagerOutputArgs } from "./getFleetManager";
export declare const getFleetManager: typeof import("./getFleetManager").getFleetManager;
export declare const getFleetManagerOutput: typeof import("./getFleetManager").getFleetManagerOutput;
export { GetGroupArgs, GetGroupResult, GetGroupOutputArgs } from "./getGroup";
export declare const getGroup: typeof import("./getGroup").getGroup;
export declare const getGroupOutput: typeof import("./getGroup").getGroupOutput;
export { GetKubernetesClusterArgs, GetKubernetesClusterResult, GetKubernetesClusterOutputArgs } from "./getKubernetesCluster";
export declare const getKubernetesCluster: typeof import("./getKubernetesCluster").getKubernetesCluster;
export declare const getKubernetesClusterOutput: typeof import("./getKubernetesCluster").getKubernetesClusterOutput;
export { GetKubernetesNodePoolSnapshotArgs, GetKubernetesNodePoolSnapshotResult, GetKubernetesNodePoolSnapshotOutputArgs } from "./getKubernetesNodePoolSnapshot";
export declare const getKubernetesNodePoolSnapshot: typeof import("./getKubernetesNodePoolSnapshot").getKubernetesNodePoolSnapshot;
export declare const getKubernetesNodePoolSnapshotOutput: typeof import("./getKubernetesNodePoolSnapshot").getKubernetesNodePoolSnapshotOutput;
export { GetKubernetesServiceVersionsArgs, GetKubernetesServiceVersionsResult, GetKubernetesServiceVersionsOutputArgs } from "./getKubernetesServiceVersions";
export declare const getKubernetesServiceVersions: typeof import("./getKubernetesServiceVersions").getKubernetesServiceVersions;
export declare const getKubernetesServiceVersionsOutput: typeof import("./getKubernetesServiceVersions").getKubernetesServiceVersionsOutput;
export { GetRegistryArgs, GetRegistryResult, GetRegistryOutputArgs } from "./getRegistry";
export declare const getRegistry: typeof import("./getRegistry").getRegistry;
export declare const getRegistryOutput: typeof import("./getRegistry").getRegistryOutput;
export { GetRegistryCacheRuleArgs, GetRegistryCacheRuleResult, GetRegistryCacheRuleOutputArgs } from "./getRegistryCacheRule";
export declare const getRegistryCacheRule: typeof import("./getRegistryCacheRule").getRegistryCacheRule;
export declare const getRegistryCacheRuleOutput: typeof import("./getRegistryCacheRule").getRegistryCacheRuleOutput;
export { GetRegistryScopeMapArgs, GetRegistryScopeMapResult, GetRegistryScopeMapOutputArgs } from "./getRegistryScopeMap";
export declare const getRegistryScopeMap: typeof import("./getRegistryScopeMap").getRegistryScopeMap;
export declare const getRegistryScopeMapOutput: typeof import("./getRegistryScopeMap").getRegistryScopeMapOutput;
export { GetRegistryTokenArgs, GetRegistryTokenResult, GetRegistryTokenOutputArgs } from "./getRegistryToken";
export declare const getRegistryToken: typeof import("./getRegistryToken").getRegistryToken;
export declare const getRegistryTokenOutput: typeof import("./getRegistryToken").getRegistryTokenOutput;
export { GroupArgs, GroupState } from "./group";
export declare type Group = import("./group").Group;
export declare const Group: typeof import("./group").Group;
export { KubernetesClusterArgs, KubernetesClusterState } from "./kubernetesCluster";
export declare type KubernetesCluster = import("./kubernetesCluster").KubernetesCluster;
export declare const KubernetesCluster: typeof import("./kubernetesCluster").KubernetesCluster;
export { KubernetesClusterExtensionArgs, KubernetesClusterExtensionState } from "./kubernetesClusterExtension";
export declare type KubernetesClusterExtension = import("./kubernetesClusterExtension").KubernetesClusterExtension;
export declare const KubernetesClusterExtension: typeof import("./kubernetesClusterExtension").KubernetesClusterExtension;
export { KubernetesClusterNodePoolArgs, KubernetesClusterNodePoolState } from "./kubernetesClusterNodePool";
export declare type KubernetesClusterNodePool = import("./kubernetesClusterNodePool").KubernetesClusterNodePool;
export declare const KubernetesClusterNodePool: typeof import("./kubernetesClusterNodePool").KubernetesClusterNodePool;
export { KubernetesFleetManagerArgs, KubernetesFleetManagerState } from "./kubernetesFleetManager";
export declare type KubernetesFleetManager = import("./kubernetesFleetManager").KubernetesFleetManager;
export declare const KubernetesFleetManager: typeof import("./kubernetesFleetManager").KubernetesFleetManager;
export { RegistryArgs, RegistryState } from "./registry";
export declare type Registry = import("./registry").Registry;
export declare const Registry: typeof import("./registry").Registry;
export { RegistryAgentPoolArgs, RegistryAgentPoolState } from "./registryAgentPool";
export declare type RegistryAgentPool = import("./registryAgentPool").RegistryAgentPool;
export declare const RegistryAgentPool: typeof import("./registryAgentPool").RegistryAgentPool;
export { RegistryCacheRuleArgs, RegistryCacheRuleState } from "./registryCacheRule";
export declare type RegistryCacheRule = import("./registryCacheRule").RegistryCacheRule;
export declare const RegistryCacheRule: typeof import("./registryCacheRule").RegistryCacheRule;
export { RegistryCredentialSetArgs, RegistryCredentialSetState } from "./registryCredentialSet";
export declare type RegistryCredentialSet = import("./registryCredentialSet").RegistryCredentialSet;
export declare const RegistryCredentialSet: typeof import("./registryCredentialSet").RegistryCredentialSet;
export { RegistryScopeMapArgs, RegistryScopeMapState } from "./registryScopeMap";
export declare type RegistryScopeMap = import("./registryScopeMap").RegistryScopeMap;
export declare const RegistryScopeMap: typeof import("./registryScopeMap").RegistryScopeMap;
export { RegistryTaskArgs, RegistryTaskState } from "./registryTask";
export declare type RegistryTask = import("./registryTask").RegistryTask;
export declare const RegistryTask: typeof import("./registryTask").RegistryTask;
export { RegistryTaskScheduleRunNowArgs, RegistryTaskScheduleRunNowState } from "./registryTaskScheduleRunNow";
export declare type RegistryTaskScheduleRunNow = import("./registryTaskScheduleRunNow").RegistryTaskScheduleRunNow;
export declare const RegistryTaskScheduleRunNow: typeof import("./registryTaskScheduleRunNow").RegistryTaskScheduleRunNow;
export { RegistryTokenArgs, RegistryTokenState } from "./registryToken";
export declare type RegistryToken = import("./registryToken").RegistryToken;
export declare const RegistryToken: typeof import("./registryToken").RegistryToken;
export { RegistryWebhookArgs, RegistryWebhookState } from "./registryWebhook";
export declare type RegistryWebhook = import("./registryWebhook").RegistryWebhook;
export declare const RegistryWebhook: typeof import("./registryWebhook").RegistryWebhook;
export { RegistryWebookArgs, RegistryWebookState } from "./registryWebook";
export declare type RegistryWebook = import("./registryWebook").RegistryWebook;
export declare const RegistryWebook: typeof import("./registryWebook").RegistryWebook;
export { TokenPasswordArgs, TokenPasswordState } from "./tokenPassword";
export declare type TokenPassword = import("./tokenPassword").TokenPassword;
export declare const TokenPassword: typeof import("./tokenPassword").TokenPassword;
