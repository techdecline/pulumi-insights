"use strict";
// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***
Object.defineProperty(exports, "__esModule", { value: true });
exports.RegistryTaskScheduleRunNow = void 0;
const pulumi = require("@pulumi/pulumi");
const utilities = require("../utilities");
/**
 * Runs a Container Registry Task Schedule.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as azure from "@pulumi/azure";
 *
 * const example = new azure.core.ResourceGroup("example", {
 *     name: "example-rg",
 *     location: "West Europe",
 * });
 * const exampleRegistry = new azure.containerservice.Registry("example", {
 *     name: "example-acr",
 *     resourceGroupName: example.name,
 *     location: example.location,
 *     sku: "Basic",
 * });
 * const exampleRegistryTask = new azure.containerservice.RegistryTask("example", {
 *     name: "example-task",
 *     containerRegistryId: exampleRegistry.id,
 *     platform: {
 *         os: "Linux",
 *     },
 *     dockerStep: {
 *         dockerfilePath: "Dockerfile",
 *         contextPath: "https://github.com/<user name>/acr-build-helloworld-node#main",
 *         contextAccessToken: "<github personal access token>",
 *         imageNames: ["helloworld:{{.Run.ID}}"],
 *     },
 * });
 * const exampleRegistryTaskScheduleRunNow = new azure.containerservice.RegistryTaskScheduleRunNow("example", {containerRegistryTaskId: exampleRegistryTask.id});
 * ```
 */
class RegistryTaskScheduleRunNow extends pulumi.CustomResource {
    constructor(name, argsOrState, opts) {
        let resourceInputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState;
            resourceInputs["containerRegistryTaskId"] = state ? state.containerRegistryTaskId : undefined;
        }
        else {
            const args = argsOrState;
            if ((!args || args.containerRegistryTaskId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'containerRegistryTaskId'");
            }
            resourceInputs["containerRegistryTaskId"] = args ? args.containerRegistryTaskId : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(RegistryTaskScheduleRunNow.__pulumiType, name, resourceInputs, opts);
    }
    /**
     * Get an existing RegistryTaskScheduleRunNow resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    static get(name, id, state, opts) {
        return new RegistryTaskScheduleRunNow(name, state, Object.assign(Object.assign({}, opts), { id: id }));
    }
    /**
     * Returns true if the given object is an instance of RegistryTaskScheduleRunNow.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    static isInstance(obj) {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === RegistryTaskScheduleRunNow.__pulumiType;
    }
}
exports.RegistryTaskScheduleRunNow = RegistryTaskScheduleRunNow;
/** @internal */
RegistryTaskScheduleRunNow.__pulumiType = 'azure:containerservice/registryTaskScheduleRunNow:RegistryTaskScheduleRunNow';
//# sourceMappingURL=registryTaskScheduleRunNow.js.map