import * as pulumi from "@pulumi/pulumi";
/**
 * Runs a Container Registry Task Schedule.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as azure from "@pulumi/azure";
 *
 * const example = new azure.core.ResourceGroup("example", {
 *     name: "example-rg",
 *     location: "West Europe",
 * });
 * const exampleRegistry = new azure.containerservice.Registry("example", {
 *     name: "example-acr",
 *     resourceGroupName: example.name,
 *     location: example.location,
 *     sku: "Basic",
 * });
 * const exampleRegistryTask = new azure.containerservice.RegistryTask("example", {
 *     name: "example-task",
 *     containerRegistryId: exampleRegistry.id,
 *     platform: {
 *         os: "Linux",
 *     },
 *     dockerStep: {
 *         dockerfilePath: "Dockerfile",
 *         contextPath: "https://github.com/<user name>/acr-build-helloworld-node#main",
 *         contextAccessToken: "<github personal access token>",
 *         imageNames: ["helloworld:{{.Run.ID}}"],
 *     },
 * });
 * const exampleRegistryTaskScheduleRunNow = new azure.containerservice.RegistryTaskScheduleRunNow("example", {containerRegistryTaskId: exampleRegistryTask.id});
 * ```
 */
export declare class RegistryTaskScheduleRunNow extends pulumi.CustomResource {
    /**
     * Get an existing RegistryTaskScheduleRunNow resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    static get(name: string, id: pulumi.Input<pulumi.ID>, state?: RegistryTaskScheduleRunNowState, opts?: pulumi.CustomResourceOptions): RegistryTaskScheduleRunNow;
    /**
     * Returns true if the given object is an instance of RegistryTaskScheduleRunNow.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    static isInstance(obj: any): obj is RegistryTaskScheduleRunNow;
    /**
     * The ID of the Container Registry Task that to be scheduled. Changing this forces a new Container Registry Task Schedule to be created.
     */
    readonly containerRegistryTaskId: pulumi.Output<string>;
    /**
     * Create a RegistryTaskScheduleRunNow resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: RegistryTaskScheduleRunNowArgs, opts?: pulumi.CustomResourceOptions);
}
/**
 * Input properties used for looking up and filtering RegistryTaskScheduleRunNow resources.
 */
export interface RegistryTaskScheduleRunNowState {
    /**
     * The ID of the Container Registry Task that to be scheduled. Changing this forces a new Container Registry Task Schedule to be created.
     */
    containerRegistryTaskId?: pulumi.Input<string>;
}
/**
 * The set of arguments for constructing a RegistryTaskScheduleRunNow resource.
 */
export interface RegistryTaskScheduleRunNowArgs {
    /**
     * The ID of the Container Registry Task that to be scheduled. Changing this forces a new Container Registry Task Schedule to be created.
     */
    containerRegistryTaskId: pulumi.Input<string>;
}
