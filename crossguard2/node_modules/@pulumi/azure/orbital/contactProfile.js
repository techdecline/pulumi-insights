"use strict";
// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***
Object.defineProperty(exports, "__esModule", { value: true });
exports.ContactProfile = void 0;
const pulumi = require("@pulumi/pulumi");
const utilities = require("../utilities");
/**
 * Manages a Contact profile.
 *
 * > **Note:** The `azure.orbital.ContactProfile` resource has been deprecated and will be removed in v5.0 of the AzureRM Provider.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as azure from "@pulumi/azure";
 *
 * const example = new azure.core.ResourceGroup("example", {
 *     name: "rg-example",
 *     location: "West Europe",
 * });
 * const exampleVirtualNetwork = new azure.network.VirtualNetwork("example", {
 *     name: "testvnet",
 *     addressSpaces: ["10.0.0.0/16"],
 *     location: example.location,
 *     resourceGroupName: example.name,
 * });
 * const exampleSubnet = new azure.network.Subnet("example", {
 *     name: "testsubnet",
 *     resourceGroupName: example.name,
 *     virtualNetworkName: exampleVirtualNetwork.name,
 *     addressPrefixes: ["10.0.1.0/24"],
 *     delegations: [{
 *         name: "orbitalgateway",
 *         serviceDelegation: {
 *             name: "Microsoft.Orbital/orbitalGateways",
 *             actions: [
 *                 "Microsoft.Network/publicIPAddresses/join/action",
 *                 "Microsoft.Network/virtualNetworks/subnets/join/action",
 *                 "Microsoft.Network/virtualNetworks/read",
 *                 "Microsoft.Network/publicIPAddresses/read",
 *             ],
 *         },
 *     }],
 * });
 * const exampleContactProfile = new azure.orbital.ContactProfile("example", {
 *     name: "example-contact-profile",
 *     resourceGroupName: example.name,
 *     location: example.location,
 *     minimumVariableContactDuration: "PT1M",
 *     autoTracking: "disabled",
 *     links: [{
 *         channels: [{
 *             name: "channelname",
 *             bandwidthMhz: 100,
 *             centerFrequencyMhz: 101,
 *             endPoints: [{
 *                 endPointName: "AQUA_command",
 *                 ipAddress: "10.0.1.0",
 *                 port: "49513",
 *                 protocol: "TCP",
 *             }],
 *         }],
 *         direction: "Uplink",
 *         name: "RHCP_UL",
 *         polarization: "RHCP",
 *     }],
 *     networkConfigurationSubnetId: exampleSubnet.id,
 * });
 * ```
 *
 * ## Import
 *
 * Contact profile can be imported using the `resource id`, e.g.
 *
 * ```sh
 * $ pulumi import azure:orbital/contactProfile:ContactProfile example /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/group1/providers/Microsoft.Orbital/contactProfiles/contactProfile1
 * ```
 */
class ContactProfile extends pulumi.CustomResource {
    constructor(name, argsOrState, opts) {
        let resourceInputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState;
            resourceInputs["autoTracking"] = state ? state.autoTracking : undefined;
            resourceInputs["eventHubUri"] = state ? state.eventHubUri : undefined;
            resourceInputs["links"] = state ? state.links : undefined;
            resourceInputs["location"] = state ? state.location : undefined;
            resourceInputs["minimumElevationDegrees"] = state ? state.minimumElevationDegrees : undefined;
            resourceInputs["minimumVariableContactDuration"] = state ? state.minimumVariableContactDuration : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["networkConfigurationSubnetId"] = state ? state.networkConfigurationSubnetId : undefined;
            resourceInputs["resourceGroupName"] = state ? state.resourceGroupName : undefined;
            resourceInputs["tags"] = state ? state.tags : undefined;
        }
        else {
            const args = argsOrState;
            if ((!args || args.autoTracking === undefined) && !opts.urn) {
                throw new Error("Missing required property 'autoTracking'");
            }
            if ((!args || args.links === undefined) && !opts.urn) {
                throw new Error("Missing required property 'links'");
            }
            if ((!args || args.minimumVariableContactDuration === undefined) && !opts.urn) {
                throw new Error("Missing required property 'minimumVariableContactDuration'");
            }
            if ((!args || args.networkConfigurationSubnetId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'networkConfigurationSubnetId'");
            }
            if ((!args || args.resourceGroupName === undefined) && !opts.urn) {
                throw new Error("Missing required property 'resourceGroupName'");
            }
            resourceInputs["autoTracking"] = args ? args.autoTracking : undefined;
            resourceInputs["eventHubUri"] = args ? args.eventHubUri : undefined;
            resourceInputs["links"] = args ? args.links : undefined;
            resourceInputs["location"] = args ? args.location : undefined;
            resourceInputs["minimumElevationDegrees"] = args ? args.minimumElevationDegrees : undefined;
            resourceInputs["minimumVariableContactDuration"] = args ? args.minimumVariableContactDuration : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["networkConfigurationSubnetId"] = args ? args.networkConfigurationSubnetId : undefined;
            resourceInputs["resourceGroupName"] = args ? args.resourceGroupName : undefined;
            resourceInputs["tags"] = args ? args.tags : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(ContactProfile.__pulumiType, name, resourceInputs, opts);
    }
    /**
     * Get an existing ContactProfile resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    static get(name, id, state, opts) {
        return new ContactProfile(name, state, Object.assign(Object.assign({}, opts), { id: id }));
    }
    /**
     * Returns true if the given object is an instance of ContactProfile.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    static isInstance(obj) {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === ContactProfile.__pulumiType;
    }
}
exports.ContactProfile = ContactProfile;
/** @internal */
ContactProfile.__pulumiType = 'azure:orbital/contactProfile:ContactProfile';
//# sourceMappingURL=contactProfile.js.map