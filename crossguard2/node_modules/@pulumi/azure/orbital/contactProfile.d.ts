import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
/**
 * Manages a Contact profile.
 *
 * > **Note:** The `azure.orbital.ContactProfile` resource has been deprecated and will be removed in v5.0 of the AzureRM Provider.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as azure from "@pulumi/azure";
 *
 * const example = new azure.core.ResourceGroup("example", {
 *     name: "rg-example",
 *     location: "West Europe",
 * });
 * const exampleVirtualNetwork = new azure.network.VirtualNetwork("example", {
 *     name: "testvnet",
 *     addressSpaces: ["10.0.0.0/16"],
 *     location: example.location,
 *     resourceGroupName: example.name,
 * });
 * const exampleSubnet = new azure.network.Subnet("example", {
 *     name: "testsubnet",
 *     resourceGroupName: example.name,
 *     virtualNetworkName: exampleVirtualNetwork.name,
 *     addressPrefixes: ["10.0.1.0/24"],
 *     delegations: [{
 *         name: "orbitalgateway",
 *         serviceDelegation: {
 *             name: "Microsoft.Orbital/orbitalGateways",
 *             actions: [
 *                 "Microsoft.Network/publicIPAddresses/join/action",
 *                 "Microsoft.Network/virtualNetworks/subnets/join/action",
 *                 "Microsoft.Network/virtualNetworks/read",
 *                 "Microsoft.Network/publicIPAddresses/read",
 *             ],
 *         },
 *     }],
 * });
 * const exampleContactProfile = new azure.orbital.ContactProfile("example", {
 *     name: "example-contact-profile",
 *     resourceGroupName: example.name,
 *     location: example.location,
 *     minimumVariableContactDuration: "PT1M",
 *     autoTracking: "disabled",
 *     links: [{
 *         channels: [{
 *             name: "channelname",
 *             bandwidthMhz: 100,
 *             centerFrequencyMhz: 101,
 *             endPoints: [{
 *                 endPointName: "AQUA_command",
 *                 ipAddress: "10.0.1.0",
 *                 port: "49513",
 *                 protocol: "TCP",
 *             }],
 *         }],
 *         direction: "Uplink",
 *         name: "RHCP_UL",
 *         polarization: "RHCP",
 *     }],
 *     networkConfigurationSubnetId: exampleSubnet.id,
 * });
 * ```
 *
 * ## Import
 *
 * Contact profile can be imported using the `resource id`, e.g.
 *
 * ```sh
 * $ pulumi import azure:orbital/contactProfile:ContactProfile example /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/group1/providers/Microsoft.Orbital/contactProfiles/contactProfile1
 * ```
 */
export declare class ContactProfile extends pulumi.CustomResource {
    /**
     * Get an existing ContactProfile resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    static get(name: string, id: pulumi.Input<pulumi.ID>, state?: ContactProfileState, opts?: pulumi.CustomResourceOptions): ContactProfile;
    /**
     * Returns true if the given object is an instance of ContactProfile.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    static isInstance(obj: any): obj is ContactProfile;
    /**
     * Auto-tracking configurations for a spacecraft. Possible values are `disabled`, `xBand` and `sBand`.
     */
    readonly autoTracking: pulumi.Output<string>;
    /**
     * ARM resource identifier of the Event Hub used for telemetry. Requires granting Orbital Resource Provider the rights to send telemetry into the hub.
     */
    readonly eventHubUri: pulumi.Output<string | undefined>;
    /**
     * A list of spacecraft links. A `links` block as defined below. Changing this forces a new resource to be created.
     */
    readonly links: pulumi.Output<outputs.orbital.ContactProfileLink[]>;
    /**
     * The location where the contact profile exists. Changing this forces a new resource to be created.
     */
    readonly location: pulumi.Output<string>;
    /**
     * Maximum elevation of the antenna during the contact in decimal degrees.
     */
    readonly minimumElevationDegrees: pulumi.Output<number | undefined>;
    /**
     * Minimum viable contact duration in ISO 8601 format. Used for listing the available contacts with a spacecraft at a given ground station.
     */
    readonly minimumVariableContactDuration: pulumi.Output<string>;
    /**
     * The name of the contact profile. Changing this forces a new resource to be created.
     */
    readonly name: pulumi.Output<string>;
    /**
     * ARM resource identifier of the subnet delegated to the Microsoft.Orbital/orbitalGateways. Needs to be at least a class C subnet, and should not have any IP created in it. Changing this forces a new resource to be created.
     */
    readonly networkConfigurationSubnetId: pulumi.Output<string>;
    /**
     * The name of the Resource Group where the contact profile exists. Changing this forces a new resource to be created.
     */
    readonly resourceGroupName: pulumi.Output<string>;
    /**
     * A mapping of tags to assign to the resource.
     */
    readonly tags: pulumi.Output<{
        [key: string]: string;
    } | undefined>;
    /**
     * Create a ContactProfile resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: ContactProfileArgs, opts?: pulumi.CustomResourceOptions);
}
/**
 * Input properties used for looking up and filtering ContactProfile resources.
 */
export interface ContactProfileState {
    /**
     * Auto-tracking configurations for a spacecraft. Possible values are `disabled`, `xBand` and `sBand`.
     */
    autoTracking?: pulumi.Input<string>;
    /**
     * ARM resource identifier of the Event Hub used for telemetry. Requires granting Orbital Resource Provider the rights to send telemetry into the hub.
     */
    eventHubUri?: pulumi.Input<string>;
    /**
     * A list of spacecraft links. A `links` block as defined below. Changing this forces a new resource to be created.
     */
    links?: pulumi.Input<pulumi.Input<inputs.orbital.ContactProfileLink>[]>;
    /**
     * The location where the contact profile exists. Changing this forces a new resource to be created.
     */
    location?: pulumi.Input<string>;
    /**
     * Maximum elevation of the antenna during the contact in decimal degrees.
     */
    minimumElevationDegrees?: pulumi.Input<number>;
    /**
     * Minimum viable contact duration in ISO 8601 format. Used for listing the available contacts with a spacecraft at a given ground station.
     */
    minimumVariableContactDuration?: pulumi.Input<string>;
    /**
     * The name of the contact profile. Changing this forces a new resource to be created.
     */
    name?: pulumi.Input<string>;
    /**
     * ARM resource identifier of the subnet delegated to the Microsoft.Orbital/orbitalGateways. Needs to be at least a class C subnet, and should not have any IP created in it. Changing this forces a new resource to be created.
     */
    networkConfigurationSubnetId?: pulumi.Input<string>;
    /**
     * The name of the Resource Group where the contact profile exists. Changing this forces a new resource to be created.
     */
    resourceGroupName?: pulumi.Input<string>;
    /**
     * A mapping of tags to assign to the resource.
     */
    tags?: pulumi.Input<{
        [key: string]: pulumi.Input<string>;
    }>;
}
/**
 * The set of arguments for constructing a ContactProfile resource.
 */
export interface ContactProfileArgs {
    /**
     * Auto-tracking configurations for a spacecraft. Possible values are `disabled`, `xBand` and `sBand`.
     */
    autoTracking: pulumi.Input<string>;
    /**
     * ARM resource identifier of the Event Hub used for telemetry. Requires granting Orbital Resource Provider the rights to send telemetry into the hub.
     */
    eventHubUri?: pulumi.Input<string>;
    /**
     * A list of spacecraft links. A `links` block as defined below. Changing this forces a new resource to be created.
     */
    links: pulumi.Input<pulumi.Input<inputs.orbital.ContactProfileLink>[]>;
    /**
     * The location where the contact profile exists. Changing this forces a new resource to be created.
     */
    location?: pulumi.Input<string>;
    /**
     * Maximum elevation of the antenna during the contact in decimal degrees.
     */
    minimumElevationDegrees?: pulumi.Input<number>;
    /**
     * Minimum viable contact duration in ISO 8601 format. Used for listing the available contacts with a spacecraft at a given ground station.
     */
    minimumVariableContactDuration: pulumi.Input<string>;
    /**
     * The name of the contact profile. Changing this forces a new resource to be created.
     */
    name?: pulumi.Input<string>;
    /**
     * ARM resource identifier of the subnet delegated to the Microsoft.Orbital/orbitalGateways. Needs to be at least a class C subnet, and should not have any IP created in it. Changing this forces a new resource to be created.
     */
    networkConfigurationSubnetId: pulumi.Input<string>;
    /**
     * The name of the Resource Group where the contact profile exists. Changing this forces a new resource to be created.
     */
    resourceGroupName: pulumi.Input<string>;
    /**
     * A mapping of tags to assign to the resource.
     */
    tags?: pulumi.Input<{
        [key: string]: pulumi.Input<string>;
    }>;
}
