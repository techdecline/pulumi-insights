import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
/**
 * Manages a Spacecraft.
 *
 * > **Note:** The `azure.orbital.Spacecraft` resource has been deprecated and will be removed in v5.0 of the AzureRM Provider.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as azure from "@pulumi/azure";
 *
 * const example = new azure.core.ResourceGroup("example", {
 *     name: "rg-example",
 *     location: "West Europe",
 * });
 * const exampleSpacecraft = new azure.orbital.Spacecraft("example", {
 *     name: "example-spacecraft",
 *     resourceGroupName: example.name,
 *     location: "westeurope",
 *     noradId: "12345",
 *     links: [{
 *         bandwidthMhz: 30,
 *         centerFrequencyMhz: 2050,
 *         direction: "Uplink",
 *         polarization: "LHCP",
 *         name: "examplename",
 *     }],
 *     twoLineElements: [
 *         "1 23455U 94089A   97320.90946019  .00000140  00000-0  10191-3 0  2621",
 *         "2 23455  99.0090 272.6745 0008546 223.1686 136.8816 14.11711747148495",
 *     ],
 *     titleLine: "AQUA",
 *     tags: {
 *         "aks-managed-cluster-name": "9a57225d-a405-4d40-aa46-f13d2342abef",
 *     },
 * });
 * ```
 *
 * ## Import
 *
 * Spacecraft can be imported using the `resource id`, e.g.
 *
 * ```sh
 * $ pulumi import azure:orbital/spacecraft:Spacecraft example /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/group1/providers/Microsoft.Orbital/spacecrafts/spacecraft1
 * ```
 */
export declare class Spacecraft extends pulumi.CustomResource {
    /**
     * Get an existing Spacecraft resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    static get(name: string, id: pulumi.Input<pulumi.ID>, state?: SpacecraftState, opts?: pulumi.CustomResourceOptions): Spacecraft;
    /**
     * Returns true if the given object is an instance of Spacecraft.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    static isInstance(obj: any): obj is Spacecraft;
    /**
     * A `links` block as defined below. Changing this forces a new resource to be created.
     */
    readonly links: pulumi.Output<outputs.orbital.SpacecraftLink[]>;
    /**
     * The location where the Spacecraft exists. Changing this forces a new resource to be created.
     */
    readonly location: pulumi.Output<string>;
    /**
     * The name of the Spacecraft. Changing this forces a new resource to be created.
     */
    readonly name: pulumi.Output<string>;
    /**
     * NORAD ID of the Spacecraft.
     */
    readonly noradId: pulumi.Output<string>;
    /**
     * The name of the Resource Group where the Spacecraft exists. Changing this forces a new resource to be created.
     */
    readonly resourceGroupName: pulumi.Output<string>;
    /**
     * A mapping of tags to assign to the resource.
     */
    readonly tags: pulumi.Output<{
        [key: string]: string;
    } | undefined>;
    /**
     * Title of the two line elements (TLE).
     */
    readonly titleLine: pulumi.Output<string>;
    /**
     * A list of the two line elements (TLE), the first string being the first of the TLE, the second string being the second line of the TLE. Changing this forces a new resource to be created.
     */
    readonly twoLineElements: pulumi.Output<string[]>;
    /**
     * Create a Spacecraft resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: SpacecraftArgs, opts?: pulumi.CustomResourceOptions);
}
/**
 * Input properties used for looking up and filtering Spacecraft resources.
 */
export interface SpacecraftState {
    /**
     * A `links` block as defined below. Changing this forces a new resource to be created.
     */
    links?: pulumi.Input<pulumi.Input<inputs.orbital.SpacecraftLink>[]>;
    /**
     * The location where the Spacecraft exists. Changing this forces a new resource to be created.
     */
    location?: pulumi.Input<string>;
    /**
     * The name of the Spacecraft. Changing this forces a new resource to be created.
     */
    name?: pulumi.Input<string>;
    /**
     * NORAD ID of the Spacecraft.
     */
    noradId?: pulumi.Input<string>;
    /**
     * The name of the Resource Group where the Spacecraft exists. Changing this forces a new resource to be created.
     */
    resourceGroupName?: pulumi.Input<string>;
    /**
     * A mapping of tags to assign to the resource.
     */
    tags?: pulumi.Input<{
        [key: string]: pulumi.Input<string>;
    }>;
    /**
     * Title of the two line elements (TLE).
     */
    titleLine?: pulumi.Input<string>;
    /**
     * A list of the two line elements (TLE), the first string being the first of the TLE, the second string being the second line of the TLE. Changing this forces a new resource to be created.
     */
    twoLineElements?: pulumi.Input<pulumi.Input<string>[]>;
}
/**
 * The set of arguments for constructing a Spacecraft resource.
 */
export interface SpacecraftArgs {
    /**
     * A `links` block as defined below. Changing this forces a new resource to be created.
     */
    links: pulumi.Input<pulumi.Input<inputs.orbital.SpacecraftLink>[]>;
    /**
     * The location where the Spacecraft exists. Changing this forces a new resource to be created.
     */
    location?: pulumi.Input<string>;
    /**
     * The name of the Spacecraft. Changing this forces a new resource to be created.
     */
    name?: pulumi.Input<string>;
    /**
     * NORAD ID of the Spacecraft.
     */
    noradId: pulumi.Input<string>;
    /**
     * The name of the Resource Group where the Spacecraft exists. Changing this forces a new resource to be created.
     */
    resourceGroupName: pulumi.Input<string>;
    /**
     * A mapping of tags to assign to the resource.
     */
    tags?: pulumi.Input<{
        [key: string]: pulumi.Input<string>;
    }>;
    /**
     * Title of the two line elements (TLE).
     */
    titleLine: pulumi.Input<string>;
    /**
     * A list of the two line elements (TLE), the first string being the first of the TLE, the second string being the second line of the TLE. Changing this forces a new resource to be created.
     */
    twoLineElements: pulumi.Input<pulumi.Input<string>[]>;
}
