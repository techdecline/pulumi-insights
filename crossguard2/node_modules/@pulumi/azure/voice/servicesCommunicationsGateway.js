"use strict";
// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***
Object.defineProperty(exports, "__esModule", { value: true });
exports.ServicesCommunicationsGateway = void 0;
const pulumi = require("@pulumi/pulumi");
const utilities = require("../utilities");
/**
 * Manages a Voice Services Communications Gateways.
 *
 * !> **NOTE:** You must have signed an Operator Connect agreement with Microsoft to use this resource. For more information, see [`Prerequisites`](https://learn.microsoft.com/en-us/azure/communications-gateway/prepare-to-deploy#prerequisites).
 *
 * !> **NOTE:** Access to Azure Communications Gateway is restricted, see [`Get access to Azure Communications Gateway for your Azure subscription`](https://learn.microsoft.com/en-us/azure/communications-gateway/prepare-to-deploy#9-get-access-to-azure-communications-gateway-for-your-azure-subscription) for details.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as azure from "@pulumi/azure";
 *
 * const example = new azure.core.ResourceGroup("example", {
 *     name: "example-resources",
 *     location: "West Europe",
 * });
 * const exampleServicesCommunicationsGateway = new azure.voice.ServicesCommunicationsGateway("example", {
 *     name: "example-vcg",
 *     location: "West Europe",
 *     resourceGroupName: example.name,
 *     connectivity: "PublicAddress",
 *     codecs: "PCMA",
 *     e911Type: "DirectToEsrp",
 *     platforms: [
 *         "OperatorConnect",
 *         "TeamsPhoneMobile",
 *     ],
 *     serviceLocations: [
 *         {
 *             location: "eastus",
 *             allowedMediaSourceAddressPrefixes: ["10.1.2.0/24"],
 *             allowedSignalingSourceAddressPrefixes: ["10.1.1.0/24"],
 *             esrpAddresses: ["198.51.100.3"],
 *             operatorAddresses: ["198.51.100.1"],
 *         },
 *         {
 *             location: "eastus2",
 *             allowedMediaSourceAddressPrefixes: ["10.2.2.0/24"],
 *             allowedSignalingSourceAddressPrefixes: ["10.2.1.0/24"],
 *             esrpAddresses: ["198.51.100.4"],
 *             operatorAddresses: ["198.51.100.2"],
 *         },
 *     ],
 *     autoGeneratedDomainNameLabelScope: "SubscriptionReuse",
 *     apiBridge: JSON.stringify({}),
 *     emergencyDialStrings: [
 *         "911",
 *         "933",
 *     ],
 *     onPremMcpEnabled: false,
 *     tags: {
 *         key: "value",
 *     },
 *     microsoftTeamsVoicemailPilotNumber: "1",
 * });
 * ```
 *
 * ## Import
 *
 * Voice Services Communications Gateways can be imported using the `resource id`, e.g.
 *
 * ```sh
 * $ pulumi import azure:voice/servicesCommunicationsGateway:ServicesCommunicationsGateway example /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/resourceGroup1/providers/Microsoft.VoiceServices/communicationsGateways/communicationsGateway1
 * ```
 */
class ServicesCommunicationsGateway extends pulumi.CustomResource {
    constructor(name, argsOrState, opts) {
        let resourceInputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState;
            resourceInputs["apiBridge"] = state ? state.apiBridge : undefined;
            resourceInputs["autoGeneratedDomainNameLabelScope"] = state ? state.autoGeneratedDomainNameLabelScope : undefined;
            resourceInputs["codecs"] = state ? state.codecs : undefined;
            resourceInputs["connectivity"] = state ? state.connectivity : undefined;
            resourceInputs["e911Type"] = state ? state.e911Type : undefined;
            resourceInputs["emergencyDialStrings"] = state ? state.emergencyDialStrings : undefined;
            resourceInputs["location"] = state ? state.location : undefined;
            resourceInputs["microsoftTeamsVoicemailPilotNumber"] = state ? state.microsoftTeamsVoicemailPilotNumber : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["onPremMcpEnabled"] = state ? state.onPremMcpEnabled : undefined;
            resourceInputs["platforms"] = state ? state.platforms : undefined;
            resourceInputs["resourceGroupName"] = state ? state.resourceGroupName : undefined;
            resourceInputs["serviceLocations"] = state ? state.serviceLocations : undefined;
            resourceInputs["tags"] = state ? state.tags : undefined;
        }
        else {
            const args = argsOrState;
            if ((!args || args.codecs === undefined) && !opts.urn) {
                throw new Error("Missing required property 'codecs'");
            }
            if ((!args || args.connectivity === undefined) && !opts.urn) {
                throw new Error("Missing required property 'connectivity'");
            }
            if ((!args || args.e911Type === undefined) && !opts.urn) {
                throw new Error("Missing required property 'e911Type'");
            }
            if ((!args || args.platforms === undefined) && !opts.urn) {
                throw new Error("Missing required property 'platforms'");
            }
            if ((!args || args.resourceGroupName === undefined) && !opts.urn) {
                throw new Error("Missing required property 'resourceGroupName'");
            }
            if ((!args || args.serviceLocations === undefined) && !opts.urn) {
                throw new Error("Missing required property 'serviceLocations'");
            }
            resourceInputs["apiBridge"] = args ? args.apiBridge : undefined;
            resourceInputs["autoGeneratedDomainNameLabelScope"] = args ? args.autoGeneratedDomainNameLabelScope : undefined;
            resourceInputs["codecs"] = args ? args.codecs : undefined;
            resourceInputs["connectivity"] = args ? args.connectivity : undefined;
            resourceInputs["e911Type"] = args ? args.e911Type : undefined;
            resourceInputs["emergencyDialStrings"] = args ? args.emergencyDialStrings : undefined;
            resourceInputs["location"] = args ? args.location : undefined;
            resourceInputs["microsoftTeamsVoicemailPilotNumber"] = args ? args.microsoftTeamsVoicemailPilotNumber : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["onPremMcpEnabled"] = args ? args.onPremMcpEnabled : undefined;
            resourceInputs["platforms"] = args ? args.platforms : undefined;
            resourceInputs["resourceGroupName"] = args ? args.resourceGroupName : undefined;
            resourceInputs["serviceLocations"] = args ? args.serviceLocations : undefined;
            resourceInputs["tags"] = args ? args.tags : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(ServicesCommunicationsGateway.__pulumiType, name, resourceInputs, opts);
    }
    /**
     * Get an existing ServicesCommunicationsGateway resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    static get(name, id, state, opts) {
        return new ServicesCommunicationsGateway(name, state, Object.assign(Object.assign({}, opts), { id: id }));
    }
    /**
     * Returns true if the given object is an instance of ServicesCommunicationsGateway.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    static isInstance(obj) {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === ServicesCommunicationsGateway.__pulumiType;
    }
}
exports.ServicesCommunicationsGateway = ServicesCommunicationsGateway;
/** @internal */
ServicesCommunicationsGateway.__pulumiType = 'azure:voice/servicesCommunicationsGateway:ServicesCommunicationsGateway';
//# sourceMappingURL=servicesCommunicationsGateway.js.map