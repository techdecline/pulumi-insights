import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
/**
 * Manages an Email Communication Service Domain.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as azure from "@pulumi/azure";
 *
 * const example = new azure.core.ResourceGroup("example", {
 *     name: "example-resources",
 *     location: "West Europe",
 * });
 * const exampleEmailService = new azure.communication.EmailService("example", {
 *     name: "example-emailcommunicationservice",
 *     resourceGroupName: example.name,
 *     dataLocation: "United States",
 * });
 * const exampleEmailServiceDomain = new azure.communication.EmailServiceDomain("example", {
 *     name: "AzureManagedDomain",
 *     emailServiceId: exampleEmailService.id,
 *     domainManagement: "AzureManaged",
 * });
 * ```
 *
 * ## Import
 *
 * Communication Services can be imported using the `resource id`, e.g.
 *
 * ```sh
 * $ pulumi import azure:communication/emailServiceDomain:EmailServiceDomain example /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/group1/providers/Microsoft.Communication/emailServices/emailCommunicationService1/domains/domain1
 * ```
 */
export declare class EmailServiceDomain extends pulumi.CustomResource {
    /**
     * Get an existing EmailServiceDomain resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    static get(name: string, id: pulumi.Input<pulumi.ID>, state?: EmailServiceDomainState, opts?: pulumi.CustomResourceOptions): EmailServiceDomain;
    /**
     * Returns true if the given object is an instance of EmailServiceDomain.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    static isInstance(obj: any): obj is EmailServiceDomain;
    /**
     * Describes how a Domains resource is being managed. Possible values are `AzureManaged`, `CustomerManaged`, `CustomerManagedInExchangeOnline`. Changing this forces a new Email Communication Service to be created.
     */
    readonly domainManagement: pulumi.Output<string>;
    /**
     * The resource ID of the Email Communication Service where the Domain belongs to. Changing this forces a new Email Communication Service to be created.
     */
    readonly emailServiceId: pulumi.Output<string>;
    /**
     * P2 sender domain that is displayed to the email recipients [RFC 5322].
     */
    readonly fromSenderDomain: pulumi.Output<string>;
    /**
     * P1 sender domain that is present on the email envelope [RFC 5321].
     */
    readonly mailFromSenderDomain: pulumi.Output<string>;
    /**
     * The name of the Email Communication Service resource. If `domainManagement` is `AzureManaged`, the name must be `AzureManagedDomain`. Changing this forces a new Email Communication Service to be created.
     */
    readonly name: pulumi.Output<string>;
    /**
     * A mapping of tags which should be assigned to the Email Communication Service.
     */
    readonly tags: pulumi.Output<{
        [key: string]: string;
    } | undefined>;
    /**
     * Describes user engagement tracking is enabled or disabled. Defaults to `false`.
     */
    readonly userEngagementTrackingEnabled: pulumi.Output<boolean | undefined>;
    /**
     * (Optional) An `verificationRecords` block as defined below.
     */
    readonly verificationRecords: pulumi.Output<outputs.communication.EmailServiceDomainVerificationRecord[]>;
    /**
     * Create a EmailServiceDomain resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: EmailServiceDomainArgs, opts?: pulumi.CustomResourceOptions);
}
/**
 * Input properties used for looking up and filtering EmailServiceDomain resources.
 */
export interface EmailServiceDomainState {
    /**
     * Describes how a Domains resource is being managed. Possible values are `AzureManaged`, `CustomerManaged`, `CustomerManagedInExchangeOnline`. Changing this forces a new Email Communication Service to be created.
     */
    domainManagement?: pulumi.Input<string>;
    /**
     * The resource ID of the Email Communication Service where the Domain belongs to. Changing this forces a new Email Communication Service to be created.
     */
    emailServiceId?: pulumi.Input<string>;
    /**
     * P2 sender domain that is displayed to the email recipients [RFC 5322].
     */
    fromSenderDomain?: pulumi.Input<string>;
    /**
     * P1 sender domain that is present on the email envelope [RFC 5321].
     */
    mailFromSenderDomain?: pulumi.Input<string>;
    /**
     * The name of the Email Communication Service resource. If `domainManagement` is `AzureManaged`, the name must be `AzureManagedDomain`. Changing this forces a new Email Communication Service to be created.
     */
    name?: pulumi.Input<string>;
    /**
     * A mapping of tags which should be assigned to the Email Communication Service.
     */
    tags?: pulumi.Input<{
        [key: string]: pulumi.Input<string>;
    }>;
    /**
     * Describes user engagement tracking is enabled or disabled. Defaults to `false`.
     */
    userEngagementTrackingEnabled?: pulumi.Input<boolean>;
    /**
     * (Optional) An `verificationRecords` block as defined below.
     */
    verificationRecords?: pulumi.Input<pulumi.Input<inputs.communication.EmailServiceDomainVerificationRecord>[]>;
}
/**
 * The set of arguments for constructing a EmailServiceDomain resource.
 */
export interface EmailServiceDomainArgs {
    /**
     * Describes how a Domains resource is being managed. Possible values are `AzureManaged`, `CustomerManaged`, `CustomerManagedInExchangeOnline`. Changing this forces a new Email Communication Service to be created.
     */
    domainManagement: pulumi.Input<string>;
    /**
     * The resource ID of the Email Communication Service where the Domain belongs to. Changing this forces a new Email Communication Service to be created.
     */
    emailServiceId: pulumi.Input<string>;
    /**
     * The name of the Email Communication Service resource. If `domainManagement` is `AzureManaged`, the name must be `AzureManagedDomain`. Changing this forces a new Email Communication Service to be created.
     */
    name?: pulumi.Input<string>;
    /**
     * A mapping of tags which should be assigned to the Email Communication Service.
     */
    tags?: pulumi.Input<{
        [key: string]: pulumi.Input<string>;
    }>;
    /**
     * Describes user engagement tracking is enabled or disabled. Defaults to `false`.
     */
    userEngagementTrackingEnabled?: pulumi.Input<boolean>;
}
