import * as pulumi from "@pulumi/pulumi";
/**
 * Manages a Digital Twins Time Series Database Connection.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as azure from "@pulumi/azure";
 *
 * const example = new azure.core.ResourceGroup("example", {
 *     name: "example-resources",
 *     location: "West Europe",
 * });
 * const exampleInstance = new azure.digitaltwins.Instance("example", {
 *     name: "example-DT",
 *     resourceGroupName: example.name,
 *     location: example.location,
 *     identity: {
 *         type: "SystemAssigned",
 *     },
 * });
 * const exampleEventHubNamespace = new azure.eventhub.EventHubNamespace("example", {
 *     name: "exampleEventHubNamespace",
 *     location: example.location,
 *     resourceGroupName: example.name,
 *     sku: "Standard",
 * });
 * const exampleEventHub = new azure.eventhub.EventHub("example", {
 *     name: "exampleEventHub",
 *     namespaceName: exampleEventHubNamespace.name,
 *     resourceGroupName: example.name,
 *     partitionCount: 2,
 *     messageRetention: 7,
 * });
 * const exampleConsumerGroup = new azure.eventhub.ConsumerGroup("example", {
 *     name: "example-consumergroup",
 *     namespaceName: exampleEventHubNamespace.name,
 *     eventhubName: exampleEventHub.name,
 *     resourceGroupName: example.name,
 * });
 * const exampleCluster = new azure.kusto.Cluster("example", {
 *     name: "examplekc",
 *     location: example.location,
 *     resourceGroupName: example.name,
 *     sku: {
 *         name: "Dev(No SLA)_Standard_D11_v2",
 *         capacity: 1,
 *     },
 * });
 * const exampleDatabase = new azure.kusto.Database("example", {
 *     name: "example-kusto-database",
 *     resourceGroupName: example.name,
 *     location: example.location,
 *     clusterName: exampleCluster.name,
 * });
 * const databaseContributor = new azure.authorization.Assignment("database_contributor", {
 *     scope: exampleDatabase.id,
 *     principalId: exampleInstance.identity.apply(identity => identity?.principalId),
 *     roleDefinitionName: "Contributor",
 * });
 * const eventhubDataOwner = new azure.authorization.Assignment("eventhub_data_owner", {
 *     scope: exampleEventHub.id,
 *     principalId: exampleInstance.identity.apply(identity => identity?.principalId),
 *     roleDefinitionName: "Azure Event Hubs Data Owner",
 * });
 * const exampleDatabasePrincipalAssignment = new azure.kusto.DatabasePrincipalAssignment("example", {
 *     name: "dataadmin",
 *     resourceGroupName: example.name,
 *     clusterName: exampleCluster.name,
 *     databaseName: exampleDatabase.name,
 *     tenantId: exampleInstance.identity.apply(identity => identity?.tenantId),
 *     principalId: exampleInstance.identity.apply(identity => identity?.principalId),
 *     principalType: "App",
 *     role: "Admin",
 * });
 * const exampleTimeSeriesDatabaseConnection = new azure.digitaltwins.TimeSeriesDatabaseConnection("example", {
 *     name: "example-connection",
 *     digitalTwinsId: exampleInstance.id,
 *     eventhubName: exampleEventHub.name,
 *     eventhubNamespaceId: exampleEventHubNamespace.id,
 *     eventhubNamespaceEndpointUri: pulumi.interpolate`sb://${exampleEventHubNamespace.name}.servicebus.windows.net`,
 *     eventhubConsumerGroupName: exampleConsumerGroup.name,
 *     kustoClusterId: exampleCluster.id,
 *     kustoClusterUri: exampleCluster.uri,
 *     kustoDatabaseName: exampleDatabase.name,
 *     kustoTableName: "exampleTable",
 * }, {
 *     dependsOn: [
 *         databaseContributor,
 *         eventhubDataOwner,
 *         exampleDatabasePrincipalAssignment,
 *     ],
 * });
 * ```
 *
 * ## Import
 *
 * Digital Twins Time Series Database Connections can be imported using the `resource id`, e.g.
 *
 * ```sh
 * $ pulumi import azure:digitaltwins/timeSeriesDatabaseConnection:TimeSeriesDatabaseConnection example /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/group1/providers/Microsoft.DigitalTwins/digitalTwinsInstances/dt1/timeSeriesDatabaseConnections/connection1
 * ```
 */
export declare class TimeSeriesDatabaseConnection extends pulumi.CustomResource {
    /**
     * Get an existing TimeSeriesDatabaseConnection resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    static get(name: string, id: pulumi.Input<pulumi.ID>, state?: TimeSeriesDatabaseConnectionState, opts?: pulumi.CustomResourceOptions): TimeSeriesDatabaseConnection;
    /**
     * Returns true if the given object is an instance of TimeSeriesDatabaseConnection.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    static isInstance(obj: any): obj is TimeSeriesDatabaseConnection;
    /**
     * The ID of the Digital Twins. Changing this forces a new resource to be created.
     */
    readonly digitalTwinsId: pulumi.Output<string>;
    /**
     * Name of the Event Hub Consumer Group. Changing this forces a new resource to be created. Defaults to `$Default`.
     */
    readonly eventhubConsumerGroupName: pulumi.Output<string | undefined>;
    /**
     * Name of the Event Hub. Changing this forces a new resource to be created.
     */
    readonly eventhubName: pulumi.Output<string>;
    /**
     * URI of the Event Hub Namespace. Changing this forces a new resource to be created.
     */
    readonly eventhubNamespaceEndpointUri: pulumi.Output<string>;
    /**
     * The ID of the Event Hub Namespace. Changing this forces a new resource to be created.
     */
    readonly eventhubNamespaceId: pulumi.Output<string>;
    /**
     * The ID of the Kusto Cluster. Changing this forces a new resource to be created.
     */
    readonly kustoClusterId: pulumi.Output<string>;
    /**
     * URI of the Kusto Cluster. Changing this forces a new resource to be created.
     */
    readonly kustoClusterUri: pulumi.Output<string>;
    /**
     * Name of the Kusto Database. Changing this forces a new resource to be created.
     */
    readonly kustoDatabaseName: pulumi.Output<string>;
    /**
     * Name of the Kusto Table. Defaults to `AdtPropertyEvents`. Changing this forces a new resource to be created.
     */
    readonly kustoTableName: pulumi.Output<string | undefined>;
    /**
     * The name which should be used for this Digital Twins Time Series Database Connection. Changing this forces a new resource to be created.
     */
    readonly name: pulumi.Output<string>;
    /**
     * Create a TimeSeriesDatabaseConnection resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: TimeSeriesDatabaseConnectionArgs, opts?: pulumi.CustomResourceOptions);
}
/**
 * Input properties used for looking up and filtering TimeSeriesDatabaseConnection resources.
 */
export interface TimeSeriesDatabaseConnectionState {
    /**
     * The ID of the Digital Twins. Changing this forces a new resource to be created.
     */
    digitalTwinsId?: pulumi.Input<string>;
    /**
     * Name of the Event Hub Consumer Group. Changing this forces a new resource to be created. Defaults to `$Default`.
     */
    eventhubConsumerGroupName?: pulumi.Input<string>;
    /**
     * Name of the Event Hub. Changing this forces a new resource to be created.
     */
    eventhubName?: pulumi.Input<string>;
    /**
     * URI of the Event Hub Namespace. Changing this forces a new resource to be created.
     */
    eventhubNamespaceEndpointUri?: pulumi.Input<string>;
    /**
     * The ID of the Event Hub Namespace. Changing this forces a new resource to be created.
     */
    eventhubNamespaceId?: pulumi.Input<string>;
    /**
     * The ID of the Kusto Cluster. Changing this forces a new resource to be created.
     */
    kustoClusterId?: pulumi.Input<string>;
    /**
     * URI of the Kusto Cluster. Changing this forces a new resource to be created.
     */
    kustoClusterUri?: pulumi.Input<string>;
    /**
     * Name of the Kusto Database. Changing this forces a new resource to be created.
     */
    kustoDatabaseName?: pulumi.Input<string>;
    /**
     * Name of the Kusto Table. Defaults to `AdtPropertyEvents`. Changing this forces a new resource to be created.
     */
    kustoTableName?: pulumi.Input<string>;
    /**
     * The name which should be used for this Digital Twins Time Series Database Connection. Changing this forces a new resource to be created.
     */
    name?: pulumi.Input<string>;
}
/**
 * The set of arguments for constructing a TimeSeriesDatabaseConnection resource.
 */
export interface TimeSeriesDatabaseConnectionArgs {
    /**
     * The ID of the Digital Twins. Changing this forces a new resource to be created.
     */
    digitalTwinsId: pulumi.Input<string>;
    /**
     * Name of the Event Hub Consumer Group. Changing this forces a new resource to be created. Defaults to `$Default`.
     */
    eventhubConsumerGroupName?: pulumi.Input<string>;
    /**
     * Name of the Event Hub. Changing this forces a new resource to be created.
     */
    eventhubName: pulumi.Input<string>;
    /**
     * URI of the Event Hub Namespace. Changing this forces a new resource to be created.
     */
    eventhubNamespaceEndpointUri: pulumi.Input<string>;
    /**
     * The ID of the Event Hub Namespace. Changing this forces a new resource to be created.
     */
    eventhubNamespaceId: pulumi.Input<string>;
    /**
     * The ID of the Kusto Cluster. Changing this forces a new resource to be created.
     */
    kustoClusterId: pulumi.Input<string>;
    /**
     * URI of the Kusto Cluster. Changing this forces a new resource to be created.
     */
    kustoClusterUri: pulumi.Input<string>;
    /**
     * Name of the Kusto Database. Changing this forces a new resource to be created.
     */
    kustoDatabaseName: pulumi.Input<string>;
    /**
     * Name of the Kusto Table. Defaults to `AdtPropertyEvents`. Changing this forces a new resource to be created.
     */
    kustoTableName?: pulumi.Input<string>;
    /**
     * The name which should be used for this Digital Twins Time Series Database Connection. Changing this forces a new resource to be created.
     */
    name?: pulumi.Input<string>;
}
