"use strict";
// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***
Object.defineProperty(exports, "__esModule", { value: true });
exports.SparkCluster = exports.KafkaCluster = exports.InteractiveQueryCluster = exports.HBaseCluster = exports.HadoopCluster = exports.getClusterOutput = exports.getCluster = void 0;
const pulumi = require("@pulumi/pulumi");
const utilities = require("../utilities");
exports.getCluster = null;
exports.getClusterOutput = null;
utilities.lazyLoad(exports, ["getCluster", "getClusterOutput"], () => require("./getCluster"));
exports.HadoopCluster = null;
utilities.lazyLoad(exports, ["HadoopCluster"], () => require("./hadoopCluster"));
exports.HBaseCluster = null;
utilities.lazyLoad(exports, ["HBaseCluster"], () => require("./hbaseCluster"));
exports.InteractiveQueryCluster = null;
utilities.lazyLoad(exports, ["InteractiveQueryCluster"], () => require("./interactiveQueryCluster"));
exports.KafkaCluster = null;
utilities.lazyLoad(exports, ["KafkaCluster"], () => require("./kafkaCluster"));
exports.SparkCluster = null;
utilities.lazyLoad(exports, ["SparkCluster"], () => require("./sparkCluster"));
const _module = {
    version: utilities.getVersion(),
    construct: (name, type, urn) => {
        switch (type) {
            case "azure:hdinsight/hBaseCluster:HBaseCluster":
                return new exports.HBaseCluster(name, undefined, { urn });
            case "azure:hdinsight/hadoopCluster:HadoopCluster":
                return new exports.HadoopCluster(name, undefined, { urn });
            case "azure:hdinsight/interactiveQueryCluster:InteractiveQueryCluster":
                return new exports.InteractiveQueryCluster(name, undefined, { urn });
            case "azure:hdinsight/kafkaCluster:KafkaCluster":
                return new exports.KafkaCluster(name, undefined, { urn });
            case "azure:hdinsight/sparkCluster:SparkCluster":
                return new exports.SparkCluster(name, undefined, { urn });
            default:
                throw new Error(`unknown resource type ${type}`);
        }
    },
};
pulumi.runtime.registerResourceModule("azure", "hdinsight/hBaseCluster", _module);
pulumi.runtime.registerResourceModule("azure", "hdinsight/hadoopCluster", _module);
pulumi.runtime.registerResourceModule("azure", "hdinsight/interactiveQueryCluster", _module);
pulumi.runtime.registerResourceModule("azure", "hdinsight/kafkaCluster", _module);
pulumi.runtime.registerResourceModule("azure", "hdinsight/sparkCluster", _module);
//# sourceMappingURL=index.js.map