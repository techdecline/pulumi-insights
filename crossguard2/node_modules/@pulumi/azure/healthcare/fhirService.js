"use strict";
// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***
Object.defineProperty(exports, "__esModule", { value: true });
exports.FhirService = void 0;
const pulumi = require("@pulumi/pulumi");
const utilities = require("../utilities");
/**
 * Manages a Healthcare FHIR (Fast Healthcare Interoperability Resources) Service
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as azure from "@pulumi/azure";
 *
 * const example = new azure.core.ResourceGroup("example", {
 *     name: "example",
 *     location: "West Europe",
 * });
 * const current = azure.core.getClientConfig({});
 * const exampleWorkspace = new azure.healthcare.Workspace("example", {
 *     name: "example",
 *     location: example.location,
 *     resourceGroupName: example.name,
 * });
 * const exampleFhirService = new azure.healthcare.FhirService("example", {
 *     name: "tfexfhir",
 *     location: "east us",
 *     resourceGroupName: "tfex-resource_group",
 *     workspaceId: exampleWorkspace.id,
 *     kind: "fhir-R4",
 *     authentication: {
 *         authority: "https://login.microsoftonline.com/tenantId",
 *         audience: "https://tfexfhir.fhir.azurehealthcareapis.com",
 *     },
 *     accessPolicyObjectIds: [current.then(current => current.objectId)],
 *     identity: {
 *         type: "SystemAssigned",
 *     },
 *     containerRegistryLoginServerUrls: ["tfex-container_registry_login_server"],
 *     cors: {
 *         allowedOrigins: [
 *             "https://tfex.com:123",
 *             "https://tfex1.com:3389",
 *         ],
 *         allowedHeaders: ["*"],
 *         allowedMethods: [
 *             "GET",
 *             "DELETE",
 *             "PUT",
 *         ],
 *         maxAgeInSeconds: 3600,
 *         credentialsAllowed: true,
 *     },
 *     configurationExportStorageAccountName: "storage_account_name",
 * });
 * ```
 *
 * ## Import
 *
 * Healthcare FHIR Service can be imported using the resource`id`, e.g.
 *
 * ```sh
 * $ pulumi import azure:healthcare/fhirService:FhirService example /subscriptions/12345678-1234-9876-4563-123456789012/resourceGroups/group1/providers/Microsoft.HealthcareApis/workspaces/workspace1/fhirServices/service1
 * ```
 */
class FhirService extends pulumi.CustomResource {
    constructor(name, argsOrState, opts) {
        let resourceInputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState;
            resourceInputs["accessPolicyObjectIds"] = state ? state.accessPolicyObjectIds : undefined;
            resourceInputs["authentication"] = state ? state.authentication : undefined;
            resourceInputs["configurationExportStorageAccountName"] = state ? state.configurationExportStorageAccountName : undefined;
            resourceInputs["containerRegistryLoginServerUrls"] = state ? state.containerRegistryLoginServerUrls : undefined;
            resourceInputs["cors"] = state ? state.cors : undefined;
            resourceInputs["identity"] = state ? state.identity : undefined;
            resourceInputs["kind"] = state ? state.kind : undefined;
            resourceInputs["location"] = state ? state.location : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["ociArtifacts"] = state ? state.ociArtifacts : undefined;
            resourceInputs["publicNetworkAccessEnabled"] = state ? state.publicNetworkAccessEnabled : undefined;
            resourceInputs["resourceGroupName"] = state ? state.resourceGroupName : undefined;
            resourceInputs["tags"] = state ? state.tags : undefined;
            resourceInputs["workspaceId"] = state ? state.workspaceId : undefined;
        }
        else {
            const args = argsOrState;
            if ((!args || args.authentication === undefined) && !opts.urn) {
                throw new Error("Missing required property 'authentication'");
            }
            if ((!args || args.resourceGroupName === undefined) && !opts.urn) {
                throw new Error("Missing required property 'resourceGroupName'");
            }
            if ((!args || args.workspaceId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'workspaceId'");
            }
            resourceInputs["accessPolicyObjectIds"] = args ? args.accessPolicyObjectIds : undefined;
            resourceInputs["authentication"] = args ? args.authentication : undefined;
            resourceInputs["configurationExportStorageAccountName"] = args ? args.configurationExportStorageAccountName : undefined;
            resourceInputs["containerRegistryLoginServerUrls"] = args ? args.containerRegistryLoginServerUrls : undefined;
            resourceInputs["cors"] = args ? args.cors : undefined;
            resourceInputs["identity"] = args ? args.identity : undefined;
            resourceInputs["kind"] = args ? args.kind : undefined;
            resourceInputs["location"] = args ? args.location : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["ociArtifacts"] = args ? args.ociArtifacts : undefined;
            resourceInputs["resourceGroupName"] = args ? args.resourceGroupName : undefined;
            resourceInputs["tags"] = args ? args.tags : undefined;
            resourceInputs["workspaceId"] = args ? args.workspaceId : undefined;
            resourceInputs["publicNetworkAccessEnabled"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(FhirService.__pulumiType, name, resourceInputs, opts);
    }
    /**
     * Get an existing FhirService resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    static get(name, id, state, opts) {
        return new FhirService(name, state, Object.assign(Object.assign({}, opts), { id: id }));
    }
    /**
     * Returns true if the given object is an instance of FhirService.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    static isInstance(obj) {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === FhirService.__pulumiType;
    }
}
exports.FhirService = FhirService;
/** @internal */
FhirService.__pulumiType = 'azure:healthcare/fhirService:FhirService';
//# sourceMappingURL=fhirService.js.map