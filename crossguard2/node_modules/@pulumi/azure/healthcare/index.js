"use strict";
// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***
Object.defineProperty(exports, "__esModule", { value: true });
exports.Workspace = exports.Service = exports.MedtechServiceFhirDestination = exports.MedtechService = exports.getWorkspaceOutput = exports.getWorkspace = exports.getServiceOutput = exports.getService = exports.getMedtechServiceOutput = exports.getMedtechService = exports.getFhirServiceOutput = exports.getFhirService = exports.getDicomServiceOutput = exports.getDicomService = exports.FhirService = exports.DicomService = void 0;
const pulumi = require("@pulumi/pulumi");
const utilities = require("../utilities");
exports.DicomService = null;
utilities.lazyLoad(exports, ["DicomService"], () => require("./dicomService"));
exports.FhirService = null;
utilities.lazyLoad(exports, ["FhirService"], () => require("./fhirService"));
exports.getDicomService = null;
exports.getDicomServiceOutput = null;
utilities.lazyLoad(exports, ["getDicomService", "getDicomServiceOutput"], () => require("./getDicomService"));
exports.getFhirService = null;
exports.getFhirServiceOutput = null;
utilities.lazyLoad(exports, ["getFhirService", "getFhirServiceOutput"], () => require("./getFhirService"));
exports.getMedtechService = null;
exports.getMedtechServiceOutput = null;
utilities.lazyLoad(exports, ["getMedtechService", "getMedtechServiceOutput"], () => require("./getMedtechService"));
exports.getService = null;
exports.getServiceOutput = null;
utilities.lazyLoad(exports, ["getService", "getServiceOutput"], () => require("./getService"));
exports.getWorkspace = null;
exports.getWorkspaceOutput = null;
utilities.lazyLoad(exports, ["getWorkspace", "getWorkspaceOutput"], () => require("./getWorkspace"));
exports.MedtechService = null;
utilities.lazyLoad(exports, ["MedtechService"], () => require("./medtechService"));
exports.MedtechServiceFhirDestination = null;
utilities.lazyLoad(exports, ["MedtechServiceFhirDestination"], () => require("./medtechServiceFhirDestination"));
exports.Service = null;
utilities.lazyLoad(exports, ["Service"], () => require("./service"));
exports.Workspace = null;
utilities.lazyLoad(exports, ["Workspace"], () => require("./workspace"));
const _module = {
    version: utilities.getVersion(),
    construct: (name, type, urn) => {
        switch (type) {
            case "azure:healthcare/dicomService:DicomService":
                return new exports.DicomService(name, undefined, { urn });
            case "azure:healthcare/fhirService:FhirService":
                return new exports.FhirService(name, undefined, { urn });
            case "azure:healthcare/medtechService:MedtechService":
                return new exports.MedtechService(name, undefined, { urn });
            case "azure:healthcare/medtechServiceFhirDestination:MedtechServiceFhirDestination":
                return new exports.MedtechServiceFhirDestination(name, undefined, { urn });
            case "azure:healthcare/service:Service":
                return new exports.Service(name, undefined, { urn });
            case "azure:healthcare/workspace:Workspace":
                return new exports.Workspace(name, undefined, { urn });
            default:
                throw new Error(`unknown resource type ${type}`);
        }
    },
};
pulumi.runtime.registerResourceModule("azure", "healthcare/dicomService", _module);
pulumi.runtime.registerResourceModule("azure", "healthcare/fhirService", _module);
pulumi.runtime.registerResourceModule("azure", "healthcare/medtechService", _module);
pulumi.runtime.registerResourceModule("azure", "healthcare/medtechServiceFhirDestination", _module);
pulumi.runtime.registerResourceModule("azure", "healthcare/service", _module);
pulumi.runtime.registerResourceModule("azure", "healthcare/workspace", _module);
//# sourceMappingURL=index.js.map