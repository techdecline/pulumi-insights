import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
/**
 * <!-- Note: This documentation is generated. Any manual changes will be overwritten -->
 *
 * Manages a Load Test Service.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as azure from "@pulumi/azure";
 *
 * const example = new azure.core.ResourceGroup("example", {
 *     name: "example-resources",
 *     location: "West Europe",
 * });
 * const exampleUserAssignedIdentity = new azure.authorization.UserAssignedIdentity("example", {
 *     name: "example",
 *     resourceGroupName: example.name,
 *     location: example.location,
 * });
 * const exampleLoadTest = new azure.loadtest.LoadTest("example", {
 *     location: example.location,
 *     name: "example",
 *     resourceGroupName: example.name,
 * });
 * ```
 *
 * ## Import
 *
 * An existing Load Test can be imported into Pulumi using the `resource id`, e.g.
 *
 * ```sh
 * $ pulumi import azure:loadtest/loadTest:LoadTest example /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.LoadTestService/loadTests/{loadTestName}
 * ```
 *
 * * Where `{subscriptionId}` is the ID of the Azure Subscription where the Load Test exists. For example `12345678-1234-9876-4563-123456789012`.
 *
 * * Where `{resourceGroupName}` is the name of Resource Group where this Load Test exists. For example `example-resource-group`.
 *
 * * Where `{loadTestName}` is the name of the Load Test. For example `loadTestValue`.
 */
export declare class LoadTest extends pulumi.CustomResource {
    /**
     * Get an existing LoadTest resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    static get(name: string, id: pulumi.Input<pulumi.ID>, state?: LoadTestState, opts?: pulumi.CustomResourceOptions): LoadTest;
    /**
     * Returns true if the given object is an instance of LoadTest.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    static isInstance(obj: any): obj is LoadTest;
    /**
     * Resource data plane URI.
     */
    readonly dataPlaneUri: pulumi.Output<string>;
    /**
     * Description of the resource.
     */
    readonly description: pulumi.Output<string | undefined>;
    /**
     * An `encryption` block as defined below. Changing this forces a new Load Test to be created.
     */
    readonly encryption: pulumi.Output<outputs.loadtest.LoadTestEncryption | undefined>;
    /**
     * An `identity` block as defined below. Specifies the Managed Identity which should be assigned to this Load Test.
     */
    readonly identity: pulumi.Output<outputs.loadtest.LoadTestIdentity | undefined>;
    /**
     * The Azure Region where the Load Test should exist. Changing this forces a new Load Test to be created.
     */
    readonly location: pulumi.Output<string>;
    /**
     * Specifies the name of this Load Test. Changing this forces a new Load Test to be created.
     */
    readonly name: pulumi.Output<string>;
    /**
     * Specifies the name of the Resource Group within which this Load Test should exist. Changing this forces a new Load Test to be created.
     */
    readonly resourceGroupName: pulumi.Output<string>;
    /**
     * A mapping of tags which should be assigned to the Load Test.
     */
    readonly tags: pulumi.Output<{
        [key: string]: string;
    } | undefined>;
    /**
     * Create a LoadTest resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: LoadTestArgs, opts?: pulumi.CustomResourceOptions);
}
/**
 * Input properties used for looking up and filtering LoadTest resources.
 */
export interface LoadTestState {
    /**
     * Resource data plane URI.
     */
    dataPlaneUri?: pulumi.Input<string>;
    /**
     * Description of the resource.
     */
    description?: pulumi.Input<string>;
    /**
     * An `encryption` block as defined below. Changing this forces a new Load Test to be created.
     */
    encryption?: pulumi.Input<inputs.loadtest.LoadTestEncryption>;
    /**
     * An `identity` block as defined below. Specifies the Managed Identity which should be assigned to this Load Test.
     */
    identity?: pulumi.Input<inputs.loadtest.LoadTestIdentity>;
    /**
     * The Azure Region where the Load Test should exist. Changing this forces a new Load Test to be created.
     */
    location?: pulumi.Input<string>;
    /**
     * Specifies the name of this Load Test. Changing this forces a new Load Test to be created.
     */
    name?: pulumi.Input<string>;
    /**
     * Specifies the name of the Resource Group within which this Load Test should exist. Changing this forces a new Load Test to be created.
     */
    resourceGroupName?: pulumi.Input<string>;
    /**
     * A mapping of tags which should be assigned to the Load Test.
     */
    tags?: pulumi.Input<{
        [key: string]: pulumi.Input<string>;
    }>;
}
/**
 * The set of arguments for constructing a LoadTest resource.
 */
export interface LoadTestArgs {
    /**
     * Description of the resource.
     */
    description?: pulumi.Input<string>;
    /**
     * An `encryption` block as defined below. Changing this forces a new Load Test to be created.
     */
    encryption?: pulumi.Input<inputs.loadtest.LoadTestEncryption>;
    /**
     * An `identity` block as defined below. Specifies the Managed Identity which should be assigned to this Load Test.
     */
    identity?: pulumi.Input<inputs.loadtest.LoadTestIdentity>;
    /**
     * The Azure Region where the Load Test should exist. Changing this forces a new Load Test to be created.
     */
    location?: pulumi.Input<string>;
    /**
     * Specifies the name of this Load Test. Changing this forces a new Load Test to be created.
     */
    name?: pulumi.Input<string>;
    /**
     * Specifies the name of the Resource Group within which this Load Test should exist. Changing this forces a new Load Test to be created.
     */
    resourceGroupName: pulumi.Input<string>;
    /**
     * A mapping of tags which should be assigned to the Load Test.
     */
    tags?: pulumi.Input<{
        [key: string]: pulumi.Input<string>;
    }>;
}
