"use strict";
// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***
Object.defineProperty(exports, "__esModule", { value: true });
exports.ServerVulnerabilityAssessmentVirtualMachine = void 0;
const pulumi = require("@pulumi/pulumi");
const utilities = require("../utilities");
/**
 * Manages an Azure Server Vulnerability Assessment (Qualys) to a VM.
 *
 * > **NOTE** Azure Defender has to be enabled on the subscription in order for this resource to work.
 * See this [documentation](https://docs.microsoft.com/azure/security-center/security-center-get-started) to get started.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as azure from "@pulumi/azure";
 *
 * const example = new azure.core.ResourceGroup("example", {
 *     name: "example-resources",
 *     location: "West Europe",
 * });
 * const exampleVirtualNetwork = new azure.network.VirtualNetwork("example", {
 *     name: "example-vnet",
 *     resourceGroupName: example.name,
 *     addressSpaces: ["192.168.1.0/24"],
 *     location: example.location,
 * });
 * const exampleSubnet = new azure.network.Subnet("example", {
 *     name: "example-subnet",
 *     resourceGroupName: example.name,
 *     virtualNetworkName: exampleVirtualNetwork.name,
 *     addressPrefixes: ["192.168.1.0/24"],
 * });
 * const exampleNetworkInterface = new azure.network.NetworkInterface("example", {
 *     name: "example-nic",
 *     location: example.location,
 *     resourceGroupName: example.name,
 *     ipConfigurations: [{
 *         name: "vm-example",
 *         subnetId: exampleSubnet.id,
 *         privateIpAddressAllocation: "Dynamic",
 *     }],
 * });
 * const exampleLinuxVirtualMachine = new azure.compute.LinuxVirtualMachine("example", {
 *     name: "example-vm",
 *     location: example.location,
 *     resourceGroupName: example.name,
 *     size: "Standard_B1s",
 *     adminUsername: "testadmin",
 *     adminPassword: "Password1234!",
 *     disablePasswordAuthentication: false,
 *     sourceImageReference: {
 *         publisher: "Canonical",
 *         offer: "0001-com-ubuntu-server-jammy",
 *         sku: "22_04-lts",
 *         version: "latest",
 *     },
 *     osDisk: {
 *         caching: "ReadWrite",
 *         storageAccountType: "Standard_LRS",
 *     },
 *     networkInterfaceIds: [exampleNetworkInterface.id],
 * });
 * const exampleServerVulnerabilityAssessmentVirtualMachine = new azure.securitycenter.ServerVulnerabilityAssessmentVirtualMachine("example", {virtualMachineId: exampleLinuxVirtualMachine.id});
 * ```
 *
 * ## Import
 *
 * Server Vulnerability Assessments can be imported using the `resource id`, e.g.
 *
 * ```sh
 * $ pulumi import azure:securitycenter/serverVulnerabilityAssessmentVirtualMachine:ServerVulnerabilityAssessmentVirtualMachine example /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/resource-group-name/providers/Microsoft.Compute/virtualMachines/vm-name/providers/Microsoft.Security/serverVulnerabilityAssessments/Default
 * ```
 */
class ServerVulnerabilityAssessmentVirtualMachine extends pulumi.CustomResource {
    constructor(name, argsOrState, opts) {
        let resourceInputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState;
            resourceInputs["virtualMachineId"] = state ? state.virtualMachineId : undefined;
        }
        else {
            const args = argsOrState;
            if ((!args || args.virtualMachineId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'virtualMachineId'");
            }
            resourceInputs["virtualMachineId"] = args ? args.virtualMachineId : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        const aliasOpts = { aliases: [{ type: "azure:securitycenter/serverVulnerabilityAssessment:ServerVulnerabilityAssessment" }] };
        opts = pulumi.mergeOptions(opts, aliasOpts);
        super(ServerVulnerabilityAssessmentVirtualMachine.__pulumiType, name, resourceInputs, opts);
    }
    /**
     * Get an existing ServerVulnerabilityAssessmentVirtualMachine resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    static get(name, id, state, opts) {
        return new ServerVulnerabilityAssessmentVirtualMachine(name, state, Object.assign(Object.assign({}, opts), { id: id }));
    }
    /**
     * Returns true if the given object is an instance of ServerVulnerabilityAssessmentVirtualMachine.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    static isInstance(obj) {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === ServerVulnerabilityAssessmentVirtualMachine.__pulumiType;
    }
}
exports.ServerVulnerabilityAssessmentVirtualMachine = ServerVulnerabilityAssessmentVirtualMachine;
/** @internal */
ServerVulnerabilityAssessmentVirtualMachine.__pulumiType = 'azure:securitycenter/serverVulnerabilityAssessmentVirtualMachine:ServerVulnerabilityAssessmentVirtualMachine';
//# sourceMappingURL=serverVulnerabilityAssessmentVirtualMachine.js.map