"use strict";
// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***
Object.defineProperty(exports, "__esModule", { value: true });
exports.StorageDefender = void 0;
const pulumi = require("@pulumi/pulumi");
const utilities = require("../utilities");
/**
 * Manages the Defender for Storage.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as azure from "@pulumi/azure";
 *
 * const example = new azure.core.ResourceGroup("example", {
 *     name: "example-rg",
 *     location: "westus2",
 * });
 * const exampleAccount = new azure.storage.Account("example", {
 *     name: "exampleacc",
 *     resourceGroupName: example.name,
 *     location: example.location,
 *     accountTier: "Standard",
 *     accountReplicationType: "LRS",
 * });
 * const exampleStorageDefender = new azure.securitycenter.StorageDefender("example", {storageAccountId: exampleAccount.id});
 * ```
 *
 * ## Import
 *
 * The setting can be imported using the `resource id`, e.g.
 *
 * ```sh
 * $ pulumi import azure:securitycenter/storageDefender:StorageDefender example /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/group1/providers/Microsoft.Storage/storageAccounts/storageacc
 * ```
 */
class StorageDefender extends pulumi.CustomResource {
    constructor(name, argsOrState, opts) {
        let resourceInputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState;
            resourceInputs["malwareScanningOnUploadCapGbPerMonth"] = state ? state.malwareScanningOnUploadCapGbPerMonth : undefined;
            resourceInputs["malwareScanningOnUploadEnabled"] = state ? state.malwareScanningOnUploadEnabled : undefined;
            resourceInputs["overrideSubscriptionSettingsEnabled"] = state ? state.overrideSubscriptionSettingsEnabled : undefined;
            resourceInputs["scanResultsEventGridTopicId"] = state ? state.scanResultsEventGridTopicId : undefined;
            resourceInputs["sensitiveDataDiscoveryEnabled"] = state ? state.sensitiveDataDiscoveryEnabled : undefined;
            resourceInputs["storageAccountId"] = state ? state.storageAccountId : undefined;
        }
        else {
            const args = argsOrState;
            if ((!args || args.storageAccountId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'storageAccountId'");
            }
            resourceInputs["malwareScanningOnUploadCapGbPerMonth"] = args ? args.malwareScanningOnUploadCapGbPerMonth : undefined;
            resourceInputs["malwareScanningOnUploadEnabled"] = args ? args.malwareScanningOnUploadEnabled : undefined;
            resourceInputs["overrideSubscriptionSettingsEnabled"] = args ? args.overrideSubscriptionSettingsEnabled : undefined;
            resourceInputs["scanResultsEventGridTopicId"] = args ? args.scanResultsEventGridTopicId : undefined;
            resourceInputs["sensitiveDataDiscoveryEnabled"] = args ? args.sensitiveDataDiscoveryEnabled : undefined;
            resourceInputs["storageAccountId"] = args ? args.storageAccountId : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(StorageDefender.__pulumiType, name, resourceInputs, opts);
    }
    /**
     * Get an existing StorageDefender resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    static get(name, id, state, opts) {
        return new StorageDefender(name, state, Object.assign(Object.assign({}, opts), { id: id }));
    }
    /**
     * Returns true if the given object is an instance of StorageDefender.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    static isInstance(obj) {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === StorageDefender.__pulumiType;
    }
}
exports.StorageDefender = StorageDefender;
/** @internal */
StorageDefender.__pulumiType = 'azure:securitycenter/storageDefender:StorageDefender';
//# sourceMappingURL=storageDefender.js.map