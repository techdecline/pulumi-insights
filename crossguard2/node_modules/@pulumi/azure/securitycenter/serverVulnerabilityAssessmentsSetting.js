"use strict";
// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***
Object.defineProperty(exports, "__esModule", { value: true });
exports.ServerVulnerabilityAssessmentsSetting = void 0;
const pulumi = require("@pulumi/pulumi");
const utilities = require("../utilities");
/**
 * Manages the Server Vulnerability Assesments Setting for Azure Security Center.
 *
 * > **NOTE:** This resource requires the `Owner` permission on the Subscription.
 *
 * > **NOTE:** Deletion of this resource disables the setting.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as azure from "@pulumi/azure";
 *
 * const example = new azure.securitycenter.ServerVulnerabilityAssessmentsSetting("example", {vulnerabilityAssessmentProvider: "MdeTvm"});
 * ```
 *
 * ## Import
 *
 * The setting can be imported using the `resource id`, e.g.
 *
 * ```sh
 * $ pulumi import azure:securitycenter/serverVulnerabilityAssessmentsSetting:ServerVulnerabilityAssessmentsSetting example /subscriptions/00000000-0000-0000-0000-000000000000/providers/Microsoft.Security/serverVulnerabilityAssessmentsSettings/AzureServersSetting
 * ```
 */
class ServerVulnerabilityAssessmentsSetting extends pulumi.CustomResource {
    constructor(name, argsOrState, opts) {
        let resourceInputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState;
            resourceInputs["vulnerabilityAssessmentProvider"] = state ? state.vulnerabilityAssessmentProvider : undefined;
        }
        else {
            const args = argsOrState;
            if ((!args || args.vulnerabilityAssessmentProvider === undefined) && !opts.urn) {
                throw new Error("Missing required property 'vulnerabilityAssessmentProvider'");
            }
            resourceInputs["vulnerabilityAssessmentProvider"] = args ? args.vulnerabilityAssessmentProvider : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(ServerVulnerabilityAssessmentsSetting.__pulumiType, name, resourceInputs, opts);
    }
    /**
     * Get an existing ServerVulnerabilityAssessmentsSetting resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    static get(name, id, state, opts) {
        return new ServerVulnerabilityAssessmentsSetting(name, state, Object.assign(Object.assign({}, opts), { id: id }));
    }
    /**
     * Returns true if the given object is an instance of ServerVulnerabilityAssessmentsSetting.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    static isInstance(obj) {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === ServerVulnerabilityAssessmentsSetting.__pulumiType;
    }
}
exports.ServerVulnerabilityAssessmentsSetting = ServerVulnerabilityAssessmentsSetting;
/** @internal */
ServerVulnerabilityAssessmentsSetting.__pulumiType = 'azure:securitycenter/serverVulnerabilityAssessmentsSetting:ServerVulnerabilityAssessmentsSetting';
//# sourceMappingURL=serverVulnerabilityAssessmentsSetting.js.map