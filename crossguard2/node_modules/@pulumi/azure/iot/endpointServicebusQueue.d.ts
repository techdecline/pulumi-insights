import * as pulumi from "@pulumi/pulumi";
/**
 * Manages an IotHub ServiceBus Queue Endpoint
 *
 * > **NOTE:** Endpoints can be defined either directly on the `azure.iot.IoTHub` resource, or using the `azurerm_iothub_endpoint_*` resources - but the two ways of defining the endpoints cannot be used together. If both are used against the same IoTHub, spurious changes will occur. Also, defining a `azurerm_iothub_endpoint_*` resource and another endpoint of a different type directly on the `azure.iot.IoTHub` resource is not supported.
 *
 * ## Import
 *
 * IoTHub ServiceBus Queue Endpoint can be imported using the `resource id`, e.g.
 *
 * g
 *
 * ```sh
 * $ pulumi import azure:iot/endpointServicebusQueue:EndpointServicebusQueue servicebus_queue1 /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/mygroup1/providers/Microsoft.Devices/iotHubs/hub1/endpoints/servicebusqueue_endpoint1
 * ```
 */
export declare class EndpointServicebusQueue extends pulumi.CustomResource {
    /**
     * Get an existing EndpointServicebusQueue resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    static get(name: string, id: pulumi.Input<pulumi.ID>, state?: EndpointServicebusQueueState, opts?: pulumi.CustomResourceOptions): EndpointServicebusQueue;
    /**
     * Returns true if the given object is an instance of EndpointServicebusQueue.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    static isInstance(obj: any): obj is EndpointServicebusQueue;
    /**
     * Type used to authenticate against the Service Bus Queue endpoint. Possible values are `keyBased` and `identityBased`. Defaults to `keyBased`.
     */
    readonly authenticationType: pulumi.Output<string | undefined>;
    /**
     * The connection string for the endpoint. This attribute can only be specified and is mandatory when `authenticationType` is `keyBased`.
     */
    readonly connectionString: pulumi.Output<string | undefined>;
    /**
     * URI of the Service Bus endpoint. This attribute can only be specified and is mandatory when `authenticationType` is `identityBased`.
     */
    readonly endpointUri: pulumi.Output<string | undefined>;
    /**
     * Name of the Service Bus Queue. This attribute can only be specified and is mandatory when `authenticationType` is `identityBased`.
     */
    readonly entityPath: pulumi.Output<string | undefined>;
    /**
     * ID of the User Managed Identity used to authenticate against the Service Bus Queue endpoint.
     *
     * > **NOTE:** `identityId` can only be specified when `authenticationType` is `identityBased`. It must be one of the `identityIds` of the Iot Hub. If not specified when `authenticationType` is `identityBased`, System Assigned Managed Identity of the Iot Hub will be used.
     */
    readonly identityId: pulumi.Output<string | undefined>;
    /**
     * The IoTHub ID for the endpoint. Changing this forces a new resource to be created.
     */
    readonly iothubId: pulumi.Output<string>;
    /**
     * The name of the endpoint. The name must be unique across endpoint types. The following names are reserved: `events`, `operationsMonitoringEvents`, `fileNotifications` and `$default`. Changing this forces a new resource to be created.
     */
    readonly name: pulumi.Output<string>;
    /**
     * The name of the resource group under which the Service Bus Queue has been created. Changing this forces a new resource to be created.
     */
    readonly resourceGroupName: pulumi.Output<string>;
    /**
     * Create a EndpointServicebusQueue resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: EndpointServicebusQueueArgs, opts?: pulumi.CustomResourceOptions);
}
/**
 * Input properties used for looking up and filtering EndpointServicebusQueue resources.
 */
export interface EndpointServicebusQueueState {
    /**
     * Type used to authenticate against the Service Bus Queue endpoint. Possible values are `keyBased` and `identityBased`. Defaults to `keyBased`.
     */
    authenticationType?: pulumi.Input<string>;
    /**
     * The connection string for the endpoint. This attribute can only be specified and is mandatory when `authenticationType` is `keyBased`.
     */
    connectionString?: pulumi.Input<string>;
    /**
     * URI of the Service Bus endpoint. This attribute can only be specified and is mandatory when `authenticationType` is `identityBased`.
     */
    endpointUri?: pulumi.Input<string>;
    /**
     * Name of the Service Bus Queue. This attribute can only be specified and is mandatory when `authenticationType` is `identityBased`.
     */
    entityPath?: pulumi.Input<string>;
    /**
     * ID of the User Managed Identity used to authenticate against the Service Bus Queue endpoint.
     *
     * > **NOTE:** `identityId` can only be specified when `authenticationType` is `identityBased`. It must be one of the `identityIds` of the Iot Hub. If not specified when `authenticationType` is `identityBased`, System Assigned Managed Identity of the Iot Hub will be used.
     */
    identityId?: pulumi.Input<string>;
    /**
     * The IoTHub ID for the endpoint. Changing this forces a new resource to be created.
     */
    iothubId?: pulumi.Input<string>;
    /**
     * The name of the endpoint. The name must be unique across endpoint types. The following names are reserved: `events`, `operationsMonitoringEvents`, `fileNotifications` and `$default`. Changing this forces a new resource to be created.
     */
    name?: pulumi.Input<string>;
    /**
     * The name of the resource group under which the Service Bus Queue has been created. Changing this forces a new resource to be created.
     */
    resourceGroupName?: pulumi.Input<string>;
}
/**
 * The set of arguments for constructing a EndpointServicebusQueue resource.
 */
export interface EndpointServicebusQueueArgs {
    /**
     * Type used to authenticate against the Service Bus Queue endpoint. Possible values are `keyBased` and `identityBased`. Defaults to `keyBased`.
     */
    authenticationType?: pulumi.Input<string>;
    /**
     * The connection string for the endpoint. This attribute can only be specified and is mandatory when `authenticationType` is `keyBased`.
     */
    connectionString?: pulumi.Input<string>;
    /**
     * URI of the Service Bus endpoint. This attribute can only be specified and is mandatory when `authenticationType` is `identityBased`.
     */
    endpointUri?: pulumi.Input<string>;
    /**
     * Name of the Service Bus Queue. This attribute can only be specified and is mandatory when `authenticationType` is `identityBased`.
     */
    entityPath?: pulumi.Input<string>;
    /**
     * ID of the User Managed Identity used to authenticate against the Service Bus Queue endpoint.
     *
     * > **NOTE:** `identityId` can only be specified when `authenticationType` is `identityBased`. It must be one of the `identityIds` of the Iot Hub. If not specified when `authenticationType` is `identityBased`, System Assigned Managed Identity of the Iot Hub will be used.
     */
    identityId?: pulumi.Input<string>;
    /**
     * The IoTHub ID for the endpoint. Changing this forces a new resource to be created.
     */
    iothubId: pulumi.Input<string>;
    /**
     * The name of the endpoint. The name must be unique across endpoint types. The following names are reserved: `events`, `operationsMonitoringEvents`, `fileNotifications` and `$default`. Changing this forces a new resource to be created.
     */
    name?: pulumi.Input<string>;
    /**
     * The name of the resource group under which the Service Bus Queue has been created. Changing this forces a new resource to be created.
     */
    resourceGroupName: pulumi.Input<string>;
}
