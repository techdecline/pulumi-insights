"use strict";
// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __exportStar = (this && this.__exportStar) || function(m, exports) {
    for (var p in m) if (p !== "default" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.SharedAccessPolicy = exports.SecuritySolution = exports.SecurityDeviceGroup = exports.Route = exports.IotHubDps = exports.IotHubDeviceUpdateInstance = exports.IotHubDeviceUpdateAccount = exports.IotHubCertificate = exports.IoTHub = exports.getSharedAccessPolicyOutput = exports.getSharedAccessPolicy = exports.getIotHubOutput = exports.getIotHub = exports.getDpsSharedAccessPolicyOutput = exports.getDpsSharedAccessPolicy = exports.getDpsOutput = exports.getDps = exports.FileUpload = exports.FallbackRoute = exports.Enrichment = exports.EndpointStorageContainer = exports.EndpointServicebusTopic = exports.EndpointServicebusQueue = exports.EndpointEventhub = exports.EndpointCosmosdbAccount = exports.DpsSharedAccessPolicy = exports.ConsumerGroup = exports.Certificate = void 0;
const pulumi = require("@pulumi/pulumi");
const utilities = require("../utilities");
exports.Certificate = null;
utilities.lazyLoad(exports, ["Certificate"], () => require("./certificate"));
exports.ConsumerGroup = null;
utilities.lazyLoad(exports, ["ConsumerGroup"], () => require("./consumerGroup"));
exports.DpsSharedAccessPolicy = null;
utilities.lazyLoad(exports, ["DpsSharedAccessPolicy"], () => require("./dpsSharedAccessPolicy"));
exports.EndpointCosmosdbAccount = null;
utilities.lazyLoad(exports, ["EndpointCosmosdbAccount"], () => require("./endpointCosmosdbAccount"));
exports.EndpointEventhub = null;
utilities.lazyLoad(exports, ["EndpointEventhub"], () => require("./endpointEventhub"));
exports.EndpointServicebusQueue = null;
utilities.lazyLoad(exports, ["EndpointServicebusQueue"], () => require("./endpointServicebusQueue"));
exports.EndpointServicebusTopic = null;
utilities.lazyLoad(exports, ["EndpointServicebusTopic"], () => require("./endpointServicebusTopic"));
exports.EndpointStorageContainer = null;
utilities.lazyLoad(exports, ["EndpointStorageContainer"], () => require("./endpointStorageContainer"));
exports.Enrichment = null;
utilities.lazyLoad(exports, ["Enrichment"], () => require("./enrichment"));
exports.FallbackRoute = null;
utilities.lazyLoad(exports, ["FallbackRoute"], () => require("./fallbackRoute"));
exports.FileUpload = null;
utilities.lazyLoad(exports, ["FileUpload"], () => require("./fileUpload"));
exports.getDps = null;
exports.getDpsOutput = null;
utilities.lazyLoad(exports, ["getDps", "getDpsOutput"], () => require("./getDps"));
exports.getDpsSharedAccessPolicy = null;
exports.getDpsSharedAccessPolicyOutput = null;
utilities.lazyLoad(exports, ["getDpsSharedAccessPolicy", "getDpsSharedAccessPolicyOutput"], () => require("./getDpsSharedAccessPolicy"));
exports.getIotHub = null;
exports.getIotHubOutput = null;
utilities.lazyLoad(exports, ["getIotHub", "getIotHubOutput"], () => require("./getIotHub"));
exports.getSharedAccessPolicy = null;
exports.getSharedAccessPolicyOutput = null;
utilities.lazyLoad(exports, ["getSharedAccessPolicy", "getSharedAccessPolicyOutput"], () => require("./getSharedAccessPolicy"));
exports.IoTHub = null;
utilities.lazyLoad(exports, ["IoTHub"], () => require("./ioTHub"));
exports.IotHubCertificate = null;
utilities.lazyLoad(exports, ["IotHubCertificate"], () => require("./iotHubCertificate"));
exports.IotHubDeviceUpdateAccount = null;
utilities.lazyLoad(exports, ["IotHubDeviceUpdateAccount"], () => require("./iotHubDeviceUpdateAccount"));
exports.IotHubDeviceUpdateInstance = null;
utilities.lazyLoad(exports, ["IotHubDeviceUpdateInstance"], () => require("./iotHubDeviceUpdateInstance"));
exports.IotHubDps = null;
utilities.lazyLoad(exports, ["IotHubDps"], () => require("./iotHubDps"));
exports.Route = null;
utilities.lazyLoad(exports, ["Route"], () => require("./route"));
exports.SecurityDeviceGroup = null;
utilities.lazyLoad(exports, ["SecurityDeviceGroup"], () => require("./securityDeviceGroup"));
exports.SecuritySolution = null;
utilities.lazyLoad(exports, ["SecuritySolution"], () => require("./securitySolution"));
exports.SharedAccessPolicy = null;
utilities.lazyLoad(exports, ["SharedAccessPolicy"], () => require("./sharedAccessPolicy"));
__exportStar(require("./zMixins"), exports);
const _module = {
    version: utilities.getVersion(),
    construct: (name, type, urn) => {
        switch (type) {
            case "azure:iot/certificate:Certificate":
                return new exports.Certificate(name, undefined, { urn });
            case "azure:iot/consumerGroup:ConsumerGroup":
                return new exports.ConsumerGroup(name, undefined, { urn });
            case "azure:iot/dpsSharedAccessPolicy:DpsSharedAccessPolicy":
                return new exports.DpsSharedAccessPolicy(name, undefined, { urn });
            case "azure:iot/endpointCosmosdbAccount:EndpointCosmosdbAccount":
                return new exports.EndpointCosmosdbAccount(name, undefined, { urn });
            case "azure:iot/endpointEventhub:EndpointEventhub":
                return new exports.EndpointEventhub(name, undefined, { urn });
            case "azure:iot/endpointServicebusQueue:EndpointServicebusQueue":
                return new exports.EndpointServicebusQueue(name, undefined, { urn });
            case "azure:iot/endpointServicebusTopic:EndpointServicebusTopic":
                return new exports.EndpointServicebusTopic(name, undefined, { urn });
            case "azure:iot/endpointStorageContainer:EndpointStorageContainer":
                return new exports.EndpointStorageContainer(name, undefined, { urn });
            case "azure:iot/enrichment:Enrichment":
                return new exports.Enrichment(name, undefined, { urn });
            case "azure:iot/fallbackRoute:FallbackRoute":
                return new exports.FallbackRoute(name, undefined, { urn });
            case "azure:iot/fileUpload:FileUpload":
                return new exports.FileUpload(name, undefined, { urn });
            case "azure:iot/ioTHub:IoTHub":
                return new exports.IoTHub(name, undefined, { urn });
            case "azure:iot/iotHubCertificate:IotHubCertificate":
                return new exports.IotHubCertificate(name, undefined, { urn });
            case "azure:iot/iotHubDeviceUpdateAccount:IotHubDeviceUpdateAccount":
                return new exports.IotHubDeviceUpdateAccount(name, undefined, { urn });
            case "azure:iot/iotHubDeviceUpdateInstance:IotHubDeviceUpdateInstance":
                return new exports.IotHubDeviceUpdateInstance(name, undefined, { urn });
            case "azure:iot/iotHubDps:IotHubDps":
                return new exports.IotHubDps(name, undefined, { urn });
            case "azure:iot/route:Route":
                return new exports.Route(name, undefined, { urn });
            case "azure:iot/securityDeviceGroup:SecurityDeviceGroup":
                return new exports.SecurityDeviceGroup(name, undefined, { urn });
            case "azure:iot/securitySolution:SecuritySolution":
                return new exports.SecuritySolution(name, undefined, { urn });
            case "azure:iot/sharedAccessPolicy:SharedAccessPolicy":
                return new exports.SharedAccessPolicy(name, undefined, { urn });
            default:
                throw new Error(`unknown resource type ${type}`);
        }
    },
};
pulumi.runtime.registerResourceModule("azure", "iot/certificate", _module);
pulumi.runtime.registerResourceModule("azure", "iot/consumerGroup", _module);
pulumi.runtime.registerResourceModule("azure", "iot/dpsSharedAccessPolicy", _module);
pulumi.runtime.registerResourceModule("azure", "iot/endpointCosmosdbAccount", _module);
pulumi.runtime.registerResourceModule("azure", "iot/endpointEventhub", _module);
pulumi.runtime.registerResourceModule("azure", "iot/endpointServicebusQueue", _module);
pulumi.runtime.registerResourceModule("azure", "iot/endpointServicebusTopic", _module);
pulumi.runtime.registerResourceModule("azure", "iot/endpointStorageContainer", _module);
pulumi.runtime.registerResourceModule("azure", "iot/enrichment", _module);
pulumi.runtime.registerResourceModule("azure", "iot/fallbackRoute", _module);
pulumi.runtime.registerResourceModule("azure", "iot/fileUpload", _module);
pulumi.runtime.registerResourceModule("azure", "iot/ioTHub", _module);
pulumi.runtime.registerResourceModule("azure", "iot/iotHubCertificate", _module);
pulumi.runtime.registerResourceModule("azure", "iot/iotHubDeviceUpdateAccount", _module);
pulumi.runtime.registerResourceModule("azure", "iot/iotHubDeviceUpdateInstance", _module);
pulumi.runtime.registerResourceModule("azure", "iot/iotHubDps", _module);
pulumi.runtime.registerResourceModule("azure", "iot/route", _module);
pulumi.runtime.registerResourceModule("azure", "iot/securityDeviceGroup", _module);
pulumi.runtime.registerResourceModule("azure", "iot/securitySolution", _module);
pulumi.runtime.registerResourceModule("azure", "iot/sharedAccessPolicy", _module);
//# sourceMappingURL=index.js.map