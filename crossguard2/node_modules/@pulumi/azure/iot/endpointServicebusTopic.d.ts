import * as pulumi from "@pulumi/pulumi";
/**
 * Manages an IotHub ServiceBus Topic Endpoint
 *
 * > **NOTE:** Endpoints can be defined either directly on the `azure.iot.IoTHub` resource, or using the `azurerm_iothub_endpoint_*` resources - but the two ways of defining the endpoints cannot be used together. If both are used against the same IoTHub, spurious changes will occur. Also, defining a `azurerm_iothub_endpoint_*` resource and another endpoint of a different type directly on the `azure.iot.IoTHub` resource is not supported.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as azure from "@pulumi/azure";
 *
 * const example = new azure.core.ResourceGroup("example", {
 *     name: "example-resources",
 *     location: "West Europe",
 * });
 * const exampleNamespace = new azure.servicebus.Namespace("example", {
 *     name: "exampleNamespace",
 *     location: example.location,
 *     resourceGroupName: example.name,
 *     sku: "Standard",
 * });
 * const exampleTopic = new azure.servicebus.Topic("example", {
 *     name: "exampleTopic",
 *     namespaceId: exampleNamespace.id,
 * });
 * const exampleTopicAuthorizationRule = new azure.servicebus.TopicAuthorizationRule("example", {
 *     name: "exampleRule",
 *     topicId: exampleTopic.id,
 *     listen: false,
 *     send: true,
 *     manage: false,
 * });
 * const exampleIoTHub = new azure.iot.IoTHub("example", {
 *     name: "exampleIothub",
 *     resourceGroupName: example.name,
 *     location: example.location,
 *     sku: {
 *         name: "B1",
 *         capacity: 1,
 *     },
 *     tags: {
 *         purpose: "example",
 *     },
 * });
 * const exampleEndpointServicebusTopic = new azure.iot.EndpointServicebusTopic("example", {
 *     resourceGroupName: example.name,
 *     iothubId: exampleIoTHub.id,
 *     name: "example",
 *     connectionString: exampleTopicAuthorizationRule.primaryConnectionString,
 * });
 * ```
 *
 * ## Import
 *
 * IoTHub ServiceBus Topic Endpoint can be imported using the `resource id`, e.g.
 *
 * ```sh
 * $ pulumi import azure:iot/endpointServicebusTopic:EndpointServicebusTopic servicebus_topic1 /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/mygroup1/providers/Microsoft.Devices/iotHubs/hub1/endpoints/servicebustopic_endpoint1
 * ```
 */
export declare class EndpointServicebusTopic extends pulumi.CustomResource {
    /**
     * Get an existing EndpointServicebusTopic resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    static get(name: string, id: pulumi.Input<pulumi.ID>, state?: EndpointServicebusTopicState, opts?: pulumi.CustomResourceOptions): EndpointServicebusTopic;
    /**
     * Returns true if the given object is an instance of EndpointServicebusTopic.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    static isInstance(obj: any): obj is EndpointServicebusTopic;
    /**
     * Type used to authenticate against the Service Bus Topic endpoint. Possible values are `keyBased` and `identityBased`. Defaults to `keyBased`.
     */
    readonly authenticationType: pulumi.Output<string | undefined>;
    /**
     * The connection string for the endpoint. This attribute can only be specified and is mandatory when `authenticationType` is `keyBased`.
     */
    readonly connectionString: pulumi.Output<string | undefined>;
    /**
     * URI of the Service Bus endpoint. This attribute can only be specified and is mandatory when `authenticationType` is `identityBased`.
     */
    readonly endpointUri: pulumi.Output<string | undefined>;
    /**
     * Name of the Service Bus Topic. This attribute can only be specified and is mandatory when `authenticationType` is `identityBased`.
     */
    readonly entityPath: pulumi.Output<string | undefined>;
    /**
     * ID of the User Managed Identity used to authenticate against the Service Bus Topic endpoint.
     *
     * > **NOTE:** `identityId` can only be specified when `authenticationType` is `identityBased`. It must be one of the `identityIds` of the Iot Hub. If not specified when `authenticationType` is `identityBased`, System Assigned Managed Identity of the Iot Hub will be used.
     */
    readonly identityId: pulumi.Output<string | undefined>;
    /**
     * The IoTHub ID for the endpoint. Changing this forces a new resource to be created.
     */
    readonly iothubId: pulumi.Output<string>;
    /**
     * The name of the endpoint. The name must be unique across endpoint types. The following names are reserved: `events`, `operationsMonitoringEvents`, `fileNotifications` and `$default`. Changing this forces a new resource to be created.
     */
    readonly name: pulumi.Output<string>;
    /**
     * The name of the resource group under which the Service Bus Topic has been created. Changing this forces a new resource to be created.
     */
    readonly resourceGroupName: pulumi.Output<string>;
    /**
     * Create a EndpointServicebusTopic resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: EndpointServicebusTopicArgs, opts?: pulumi.CustomResourceOptions);
}
/**
 * Input properties used for looking up and filtering EndpointServicebusTopic resources.
 */
export interface EndpointServicebusTopicState {
    /**
     * Type used to authenticate against the Service Bus Topic endpoint. Possible values are `keyBased` and `identityBased`. Defaults to `keyBased`.
     */
    authenticationType?: pulumi.Input<string>;
    /**
     * The connection string for the endpoint. This attribute can only be specified and is mandatory when `authenticationType` is `keyBased`.
     */
    connectionString?: pulumi.Input<string>;
    /**
     * URI of the Service Bus endpoint. This attribute can only be specified and is mandatory when `authenticationType` is `identityBased`.
     */
    endpointUri?: pulumi.Input<string>;
    /**
     * Name of the Service Bus Topic. This attribute can only be specified and is mandatory when `authenticationType` is `identityBased`.
     */
    entityPath?: pulumi.Input<string>;
    /**
     * ID of the User Managed Identity used to authenticate against the Service Bus Topic endpoint.
     *
     * > **NOTE:** `identityId` can only be specified when `authenticationType` is `identityBased`. It must be one of the `identityIds` of the Iot Hub. If not specified when `authenticationType` is `identityBased`, System Assigned Managed Identity of the Iot Hub will be used.
     */
    identityId?: pulumi.Input<string>;
    /**
     * The IoTHub ID for the endpoint. Changing this forces a new resource to be created.
     */
    iothubId?: pulumi.Input<string>;
    /**
     * The name of the endpoint. The name must be unique across endpoint types. The following names are reserved: `events`, `operationsMonitoringEvents`, `fileNotifications` and `$default`. Changing this forces a new resource to be created.
     */
    name?: pulumi.Input<string>;
    /**
     * The name of the resource group under which the Service Bus Topic has been created. Changing this forces a new resource to be created.
     */
    resourceGroupName?: pulumi.Input<string>;
}
/**
 * The set of arguments for constructing a EndpointServicebusTopic resource.
 */
export interface EndpointServicebusTopicArgs {
    /**
     * Type used to authenticate against the Service Bus Topic endpoint. Possible values are `keyBased` and `identityBased`. Defaults to `keyBased`.
     */
    authenticationType?: pulumi.Input<string>;
    /**
     * The connection string for the endpoint. This attribute can only be specified and is mandatory when `authenticationType` is `keyBased`.
     */
    connectionString?: pulumi.Input<string>;
    /**
     * URI of the Service Bus endpoint. This attribute can only be specified and is mandatory when `authenticationType` is `identityBased`.
     */
    endpointUri?: pulumi.Input<string>;
    /**
     * Name of the Service Bus Topic. This attribute can only be specified and is mandatory when `authenticationType` is `identityBased`.
     */
    entityPath?: pulumi.Input<string>;
    /**
     * ID of the User Managed Identity used to authenticate against the Service Bus Topic endpoint.
     *
     * > **NOTE:** `identityId` can only be specified when `authenticationType` is `identityBased`. It must be one of the `identityIds` of the Iot Hub. If not specified when `authenticationType` is `identityBased`, System Assigned Managed Identity of the Iot Hub will be used.
     */
    identityId?: pulumi.Input<string>;
    /**
     * The IoTHub ID for the endpoint. Changing this forces a new resource to be created.
     */
    iothubId: pulumi.Input<string>;
    /**
     * The name of the endpoint. The name must be unique across endpoint types. The following names are reserved: `events`, `operationsMonitoringEvents`, `fileNotifications` and `$default`. Changing this forces a new resource to be created.
     */
    name?: pulumi.Input<string>;
    /**
     * The name of the resource group under which the Service Bus Topic has been created. Changing this forces a new resource to be created.
     */
    resourceGroupName: pulumi.Input<string>;
}
