"use strict";
// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***
Object.defineProperty(exports, "__esModule", { value: true });
exports.ManagedHardwareSecurityModuleKeyRotationPolicy = void 0;
const pulumi = require("@pulumi/pulumi");
const utilities = require("../utilities");
/**
 * Manages a Managed HSM Key rotation policy.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as azure from "@pulumi/azure";
 *
 * const example = new azure.keyvault.ManagedHardwareSecurityModuleKey("example", {
 *     name: "example-key",
 *     managedHsmId: exampleAzurermKeyVaultManagedHardwareSecurityModule.id,
 *     keyType: "EC-HSM",
 *     curve: "P-521",
 *     keyOpts: ["sign"],
 * });
 * const exampleManagedHardwareSecurityModuleKeyRotationPolicy = new azure.keyvault.ManagedHardwareSecurityModuleKeyRotationPolicy("example", {
 *     managedHsmKeyId: example.id,
 *     expireAfter: "P60D",
 *     timeBeforeExpiry: "P30D",
 * });
 * ```
 *
 * ## Import
 *
 * Managed HSM Key rotation policy can be imported using the `resource id`, e.g.
 *
 * ```sh
 * $ pulumi import azure:keyvault/managedHardwareSecurityModuleKeyRotationPolicy:ManagedHardwareSecurityModuleKeyRotationPolicy example https://example-hsm.managedhsm.azure.net/keys/example
 * ```
 */
class ManagedHardwareSecurityModuleKeyRotationPolicy extends pulumi.CustomResource {
    constructor(name, argsOrState, opts) {
        let resourceInputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState;
            resourceInputs["expireAfter"] = state ? state.expireAfter : undefined;
            resourceInputs["managedHsmKeyId"] = state ? state.managedHsmKeyId : undefined;
            resourceInputs["timeAfterCreation"] = state ? state.timeAfterCreation : undefined;
            resourceInputs["timeBeforeExpiry"] = state ? state.timeBeforeExpiry : undefined;
        }
        else {
            const args = argsOrState;
            if ((!args || args.expireAfter === undefined) && !opts.urn) {
                throw new Error("Missing required property 'expireAfter'");
            }
            if ((!args || args.managedHsmKeyId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'managedHsmKeyId'");
            }
            resourceInputs["expireAfter"] = args ? args.expireAfter : undefined;
            resourceInputs["managedHsmKeyId"] = args ? args.managedHsmKeyId : undefined;
            resourceInputs["timeAfterCreation"] = args ? args.timeAfterCreation : undefined;
            resourceInputs["timeBeforeExpiry"] = args ? args.timeBeforeExpiry : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(ManagedHardwareSecurityModuleKeyRotationPolicy.__pulumiType, name, resourceInputs, opts);
    }
    /**
     * Get an existing ManagedHardwareSecurityModuleKeyRotationPolicy resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    static get(name, id, state, opts) {
        return new ManagedHardwareSecurityModuleKeyRotationPolicy(name, state, Object.assign(Object.assign({}, opts), { id: id }));
    }
    /**
     * Returns true if the given object is an instance of ManagedHardwareSecurityModuleKeyRotationPolicy.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    static isInstance(obj) {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === ManagedHardwareSecurityModuleKeyRotationPolicy.__pulumiType;
    }
}
exports.ManagedHardwareSecurityModuleKeyRotationPolicy = ManagedHardwareSecurityModuleKeyRotationPolicy;
/** @internal */
ManagedHardwareSecurityModuleKeyRotationPolicy.__pulumiType = 'azure:keyvault/managedHardwareSecurityModuleKeyRotationPolicy:ManagedHardwareSecurityModuleKeyRotationPolicy';
//# sourceMappingURL=managedHardwareSecurityModuleKeyRotationPolicy.js.map