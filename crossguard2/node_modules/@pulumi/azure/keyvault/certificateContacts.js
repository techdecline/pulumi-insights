"use strict";
// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***
Object.defineProperty(exports, "__esModule", { value: true });
exports.CertificateContacts = void 0;
const pulumi = require("@pulumi/pulumi");
const utilities = require("../utilities");
/**
 * Manages Key Vault Certificate Contacts.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as azure from "@pulumi/azure";
 *
 * const current = azure.core.getClientConfig({});
 * const example = new azure.core.ResourceGroup("example", {
 *     name: "example-resources",
 *     location: "West Europe",
 * });
 * const exampleKeyVault = new azure.keyvault.KeyVault("example", {
 *     name: "examplekeyvault",
 *     location: example.location,
 *     resourceGroupName: example.name,
 *     tenantId: current.then(current => current.tenantId),
 *     skuName: "premium",
 * });
 * const exampleAccessPolicy = new azure.keyvault.AccessPolicy("example", {
 *     keyVaultId: exampleKeyVault.id,
 *     tenantId: current.then(current => current.tenantId),
 *     objectId: current.then(current => current.objectId),
 *     certificatePermissions: ["ManageContacts"],
 *     keyPermissions: ["Create"],
 *     secretPermissions: ["Set"],
 * });
 * const exampleCertificateContacts = new azure.keyvault.CertificateContacts("example", {
 *     keyVaultId: exampleKeyVault.id,
 *     contacts: [
 *         {
 *             email: "example@example.com",
 *             name: "example",
 *             phone: "01234567890",
 *         },
 *         {
 *             email: "example2@example.com",
 *         },
 *     ],
 * }, {
 *     dependsOn: [exampleAccessPolicy],
 * });
 * ```
 *
 * ## Import
 *
 * Key Vault Certificate Contacts can be imported using the `resource id`, e.g.
 *
 * ```sh
 * $ pulumi import azure:keyvault/certificateContacts:CertificateContacts example https://example-keyvault.vault.azure.net/certificates/contacts
 * ```
 */
class CertificateContacts extends pulumi.CustomResource {
    constructor(name, argsOrState, opts) {
        let resourceInputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState;
            resourceInputs["contacts"] = state ? state.contacts : undefined;
            resourceInputs["keyVaultId"] = state ? state.keyVaultId : undefined;
        }
        else {
            const args = argsOrState;
            if ((!args || args.keyVaultId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'keyVaultId'");
            }
            resourceInputs["contacts"] = args ? args.contacts : undefined;
            resourceInputs["keyVaultId"] = args ? args.keyVaultId : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(CertificateContacts.__pulumiType, name, resourceInputs, opts);
    }
    /**
     * Get an existing CertificateContacts resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    static get(name, id, state, opts) {
        return new CertificateContacts(name, state, Object.assign(Object.assign({}, opts), { id: id }));
    }
    /**
     * Returns true if the given object is an instance of CertificateContacts.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    static isInstance(obj) {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === CertificateContacts.__pulumiType;
    }
}
exports.CertificateContacts = CertificateContacts;
/** @internal */
CertificateContacts.__pulumiType = 'azure:keyvault/certificateContacts:CertificateContacts';
//# sourceMappingURL=certificateContacts.js.map