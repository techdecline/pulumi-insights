"use strict";
// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***
Object.defineProperty(exports, "__esModule", { value: true });
exports.ManagedHardwareSecurityModuleKey = void 0;
const pulumi = require("@pulumi/pulumi");
const utilities = require("../utilities");
/**
 * Manages a Key Vault Managed Hardware Security Module Key.
 *
 * > **Note:** The Azure Provider includes a Feature Toggle which will purge a Key Vault Managed Hardware Security Module Key resource on destroy, rather than the default soft-delete. See `purgeSoftDeletedHardwareSecurityModulesOnDestroy` for more information.
 *
 * ## Import
 *
 * Key Vault Managed Hardware Security Module Key can be imported using the `resource id`, e.g.
 *
 * ```sh
 * $ pulumi import azure:keyvault/managedHardwareSecurityModuleKey:ManagedHardwareSecurityModuleKey example https://exampleHSM.managedhsm.azure.net/keys/exampleKey
 * ```
 */
class ManagedHardwareSecurityModuleKey extends pulumi.CustomResource {
    constructor(name, argsOrState, opts) {
        let resourceInputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState;
            resourceInputs["curve"] = state ? state.curve : undefined;
            resourceInputs["expirationDate"] = state ? state.expirationDate : undefined;
            resourceInputs["keyOpts"] = state ? state.keyOpts : undefined;
            resourceInputs["keySize"] = state ? state.keySize : undefined;
            resourceInputs["keyType"] = state ? state.keyType : undefined;
            resourceInputs["managedHsmId"] = state ? state.managedHsmId : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["notBeforeDate"] = state ? state.notBeforeDate : undefined;
            resourceInputs["tags"] = state ? state.tags : undefined;
            resourceInputs["versionedId"] = state ? state.versionedId : undefined;
        }
        else {
            const args = argsOrState;
            if ((!args || args.keyOpts === undefined) && !opts.urn) {
                throw new Error("Missing required property 'keyOpts'");
            }
            if ((!args || args.keyType === undefined) && !opts.urn) {
                throw new Error("Missing required property 'keyType'");
            }
            if ((!args || args.managedHsmId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'managedHsmId'");
            }
            resourceInputs["curve"] = args ? args.curve : undefined;
            resourceInputs["expirationDate"] = args ? args.expirationDate : undefined;
            resourceInputs["keyOpts"] = args ? args.keyOpts : undefined;
            resourceInputs["keySize"] = args ? args.keySize : undefined;
            resourceInputs["keyType"] = args ? args.keyType : undefined;
            resourceInputs["managedHsmId"] = args ? args.managedHsmId : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["notBeforeDate"] = args ? args.notBeforeDate : undefined;
            resourceInputs["tags"] = args ? args.tags : undefined;
            resourceInputs["versionedId"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(ManagedHardwareSecurityModuleKey.__pulumiType, name, resourceInputs, opts);
    }
    /**
     * Get an existing ManagedHardwareSecurityModuleKey resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    static get(name, id, state, opts) {
        return new ManagedHardwareSecurityModuleKey(name, state, Object.assign(Object.assign({}, opts), { id: id }));
    }
    /**
     * Returns true if the given object is an instance of ManagedHardwareSecurityModuleKey.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    static isInstance(obj) {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === ManagedHardwareSecurityModuleKey.__pulumiType;
    }
}
exports.ManagedHardwareSecurityModuleKey = ManagedHardwareSecurityModuleKey;
/** @internal */
ManagedHardwareSecurityModuleKey.__pulumiType = 'azure:keyvault/managedHardwareSecurityModuleKey:ManagedHardwareSecurityModuleKey';
//# sourceMappingURL=managedHardwareSecurityModuleKey.js.map