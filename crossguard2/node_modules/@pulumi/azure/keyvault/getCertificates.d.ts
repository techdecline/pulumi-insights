import * as pulumi from "@pulumi/pulumi";
import * as outputs from "../types/output";
/**
 * Use this data source to retrieve a list of certificate names from an existing Key Vault.
 */
export declare function getCertificates(args: GetCertificatesArgs, opts?: pulumi.InvokeOptions): Promise<GetCertificatesResult>;
/**
 * A collection of arguments for invoking getCertificates.
 */
export interface GetCertificatesArgs {
    /**
     * Specifies whether to include certificates which are not completely provisioned. Defaults to true.
     */
    includePending?: boolean;
    /**
     * Specifies the ID of the Key Vault instance to fetch certificate names from, available on the `azure.keyvault.KeyVault` Data Source / Resource.
     *
     * **NOTE:** The vault must be in the same subscription as the provider. If the vault is in another subscription, you must create an aliased provider for that subscription.
     */
    keyVaultId: string;
}
/**
 * A collection of values returned by getCertificates.
 */
export interface GetCertificatesResult {
    /**
     * One or more `certificates` blocks as defined below.
     */
    readonly certificates: outputs.keyvault.GetCertificatesCertificate[];
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    readonly includePending?: boolean;
    /**
     * The Key Vault ID.
     */
    readonly keyVaultId: string;
    /**
     * List containing names of certificates that exist in this Key Vault.
     */
    readonly names: string[];
}
/**
 * Use this data source to retrieve a list of certificate names from an existing Key Vault.
 */
export declare function getCertificatesOutput(args: GetCertificatesOutputArgs, opts?: pulumi.InvokeOutputOptions): pulumi.Output<GetCertificatesResult>;
/**
 * A collection of arguments for invoking getCertificates.
 */
export interface GetCertificatesOutputArgs {
    /**
     * Specifies whether to include certificates which are not completely provisioned. Defaults to true.
     */
    includePending?: pulumi.Input<boolean>;
    /**
     * Specifies the ID of the Key Vault instance to fetch certificate names from, available on the `azure.keyvault.KeyVault` Data Source / Resource.
     *
     * **NOTE:** The vault must be in the same subscription as the provider. If the vault is in another subscription, you must create an aliased provider for that subscription.
     */
    keyVaultId: pulumi.Input<string>;
}
