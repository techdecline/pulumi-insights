import * as pulumi from "@pulumi/pulumi";
/**
 * Manages a Managed Hardware Security Module Role Assignment.
 *
 * ## Import
 *
 * Managed Hardware Security Modules can be imported using the `resource id`, e.g.
 *
 * ```sh
 * $ pulumi import azure:keyvault/managedHardwareSecurityModuleRoleAssignment:ManagedHardwareSecurityModuleRoleAssignment example https://0000.managedhsm.azure.net///RoleAssignment/00000000-0000-0000-0000-000000000000
 * ```
 */
export declare class ManagedHardwareSecurityModuleRoleAssignment extends pulumi.CustomResource {
    /**
     * Get an existing ManagedHardwareSecurityModuleRoleAssignment resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    static get(name: string, id: pulumi.Input<pulumi.ID>, state?: ManagedHardwareSecurityModuleRoleAssignmentState, opts?: pulumi.CustomResourceOptions): ManagedHardwareSecurityModuleRoleAssignment;
    /**
     * Returns true if the given object is an instance of ManagedHardwareSecurityModuleRoleAssignment.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    static isInstance(obj: any): obj is ManagedHardwareSecurityModuleRoleAssignment;
    /**
     * The ID of a Managed Hardware Security Module resource. Changing this forces a new Managed Hardware Security Module to be created.
     * *
     */
    readonly managedHsmId: pulumi.Output<string>;
    /**
     * The name in GUID notation which should be used for this Managed Hardware Security Module Role Assignment. Changing this forces a new Managed Hardware Security Module to be created.
     */
    readonly name: pulumi.Output<string>;
    /**
     * The principal ID to be assigned to this role. It can point to a user, service principal, or security group. Changing this forces a new Managed Hardware Security Module to be created.
     */
    readonly principalId: pulumi.Output<string>;
    /**
     * (Deprecated) The resource id of created assignment resource.
     */
    readonly resourceId: pulumi.Output<string>;
    /**
     * The resource ID of the role definition to assign. Changing this forces a new Managed Hardware Security Module to be created.
     */
    readonly roleDefinitionId: pulumi.Output<string>;
    /**
     * Specifies the scope to create the role assignment. Changing this forces a new Managed Hardware Security Module to be created.
     */
    readonly scope: pulumi.Output<string>;
    /**
     * Create a ManagedHardwareSecurityModuleRoleAssignment resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: ManagedHardwareSecurityModuleRoleAssignmentArgs, opts?: pulumi.CustomResourceOptions);
}
/**
 * Input properties used for looking up and filtering ManagedHardwareSecurityModuleRoleAssignment resources.
 */
export interface ManagedHardwareSecurityModuleRoleAssignmentState {
    /**
     * The ID of a Managed Hardware Security Module resource. Changing this forces a new Managed Hardware Security Module to be created.
     * *
     */
    managedHsmId?: pulumi.Input<string>;
    /**
     * The name in GUID notation which should be used for this Managed Hardware Security Module Role Assignment. Changing this forces a new Managed Hardware Security Module to be created.
     */
    name?: pulumi.Input<string>;
    /**
     * The principal ID to be assigned to this role. It can point to a user, service principal, or security group. Changing this forces a new Managed Hardware Security Module to be created.
     */
    principalId?: pulumi.Input<string>;
    /**
     * (Deprecated) The resource id of created assignment resource.
     */
    resourceId?: pulumi.Input<string>;
    /**
     * The resource ID of the role definition to assign. Changing this forces a new Managed Hardware Security Module to be created.
     */
    roleDefinitionId?: pulumi.Input<string>;
    /**
     * Specifies the scope to create the role assignment. Changing this forces a new Managed Hardware Security Module to be created.
     */
    scope?: pulumi.Input<string>;
}
/**
 * The set of arguments for constructing a ManagedHardwareSecurityModuleRoleAssignment resource.
 */
export interface ManagedHardwareSecurityModuleRoleAssignmentArgs {
    /**
     * The ID of a Managed Hardware Security Module resource. Changing this forces a new Managed Hardware Security Module to be created.
     * *
     */
    managedHsmId: pulumi.Input<string>;
    /**
     * The name in GUID notation which should be used for this Managed Hardware Security Module Role Assignment. Changing this forces a new Managed Hardware Security Module to be created.
     */
    name?: pulumi.Input<string>;
    /**
     * The principal ID to be assigned to this role. It can point to a user, service principal, or security group. Changing this forces a new Managed Hardware Security Module to be created.
     */
    principalId: pulumi.Input<string>;
    /**
     * The resource ID of the role definition to assign. Changing this forces a new Managed Hardware Security Module to be created.
     */
    roleDefinitionId: pulumi.Input<string>;
    /**
     * Specifies the scope to create the role assignment. Changing this forces a new Managed Hardware Security Module to be created.
     */
    scope: pulumi.Input<string>;
}
