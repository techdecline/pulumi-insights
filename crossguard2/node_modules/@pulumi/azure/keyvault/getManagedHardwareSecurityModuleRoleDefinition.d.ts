import * as pulumi from "@pulumi/pulumi";
import * as outputs from "../types/output";
/**
 * Use this data source to access information about an existing KeyVault Role Definition.
 */
export declare function getManagedHardwareSecurityModuleRoleDefinition(args: GetManagedHardwareSecurityModuleRoleDefinitionArgs, opts?: pulumi.InvokeOptions): Promise<GetManagedHardwareSecurityModuleRoleDefinitionResult>;
/**
 * A collection of arguments for invoking getManagedHardwareSecurityModuleRoleDefinition.
 */
export interface GetManagedHardwareSecurityModuleRoleDefinitionArgs {
    managedHsmId: string;
    /**
     * The name in UUID notation of this KeyVault Role Definition.
     */
    name: string;
}
/**
 * A collection of values returned by getManagedHardwareSecurityModuleRoleDefinition.
 */
export interface GetManagedHardwareSecurityModuleRoleDefinitionResult {
    /**
     * A list of assignable role scope. Possible values are `/` and `/keys`.
     */
    readonly assignableScopes: string[];
    /**
     * A text description of this role definition.
     */
    readonly description: string;
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    readonly managedHsmId: string;
    readonly name: string;
    /**
     * A `permission` block as defined below.
     */
    readonly permissions: outputs.keyvault.GetManagedHardwareSecurityModuleRoleDefinitionPermission[];
    /**
     * The ID of the role definition resource without base url.
     */
    readonly resourceManagerId: string;
    /**
     * The role name of the role definition.
     */
    readonly roleName: string;
    /**
     * The type of the role definition. Possible values are `AKVBuiltInRole` and `CustomRole`.
     */
    readonly roleType: string;
}
/**
 * Use this data source to access information about an existing KeyVault Role Definition.
 */
export declare function getManagedHardwareSecurityModuleRoleDefinitionOutput(args: GetManagedHardwareSecurityModuleRoleDefinitionOutputArgs, opts?: pulumi.InvokeOutputOptions): pulumi.Output<GetManagedHardwareSecurityModuleRoleDefinitionResult>;
/**
 * A collection of arguments for invoking getManagedHardwareSecurityModuleRoleDefinition.
 */
export interface GetManagedHardwareSecurityModuleRoleDefinitionOutputArgs {
    managedHsmId: pulumi.Input<string>;
    /**
     * The name in UUID notation of this KeyVault Role Definition.
     */
    name: pulumi.Input<string>;
}
