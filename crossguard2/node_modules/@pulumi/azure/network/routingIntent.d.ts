import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
/**
 * Manages a Virtual Hub Routing Intent.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as azure from "@pulumi/azure";
 *
 * const example = new azure.core.ResourceGroup("example", {
 *     name: "example-resources",
 *     location: "West Europe",
 * });
 * const exampleVirtualWan = new azure.network.VirtualWan("example", {
 *     name: "example-vwan",
 *     resourceGroupName: example.name,
 *     location: example.location,
 * });
 * const exampleVirtualHub = new azure.network.VirtualHub("example", {
 *     name: "example-vhub",
 *     resourceGroupName: example.name,
 *     location: example.location,
 *     virtualWanId: exampleVirtualWan.id,
 *     addressPrefix: "10.0.1.0/24",
 * });
 * const exampleFirewall = new azure.network.Firewall("example", {
 *     name: "example-fw",
 *     location: example.location,
 *     resourceGroupName: example.name,
 *     skuName: "AZFW_Hub",
 *     skuTier: "Standard",
 *     virtualHub: {
 *         virtualHubId: exampleVirtualHub.id,
 *         publicIpCount: 1,
 *     },
 * });
 * const exampleRoutingIntent = new azure.network.RoutingIntent("example", {
 *     name: "example-routingintent",
 *     virtualHubId: exampleVirtualHub.id,
 *     routingPolicies: [{
 *         name: "InternetTrafficPolicy",
 *         destinations: ["Internet"],
 *         nextHop: exampleFirewall.id,
 *     }],
 * });
 * ```
 *
 * ## Import
 *
 * Virtual Hub Routing Intents can be imported using the `resource id`, e.g.
 *
 * ```sh
 * $ pulumi import azure:network/routingIntent:RoutingIntent example /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/resourceGroup1/providers/Microsoft.Network/virtualHubs/virtualHub1/routingIntent/routingIntent1
 * ```
 */
export declare class RoutingIntent extends pulumi.CustomResource {
    /**
     * Get an existing RoutingIntent resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    static get(name: string, id: pulumi.Input<pulumi.ID>, state?: RoutingIntentState, opts?: pulumi.CustomResourceOptions): RoutingIntent;
    /**
     * Returns true if the given object is an instance of RoutingIntent.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    static isInstance(obj: any): obj is RoutingIntent;
    /**
     * The name which should be used for this Virtual Hub Routing Intent. Changing this forces a new resource to be created.
     */
    readonly name: pulumi.Output<string>;
    /**
     * One or more `routingPolicy` blocks as defined below.
     */
    readonly routingPolicies: pulumi.Output<outputs.network.RoutingIntentRoutingPolicy[]>;
    /**
     * The resource ID of the Virtual Hub. Changing this forces a new resource to be created.
     */
    readonly virtualHubId: pulumi.Output<string>;
    /**
     * Create a RoutingIntent resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: RoutingIntentArgs, opts?: pulumi.CustomResourceOptions);
}
/**
 * Input properties used for looking up and filtering RoutingIntent resources.
 */
export interface RoutingIntentState {
    /**
     * The name which should be used for this Virtual Hub Routing Intent. Changing this forces a new resource to be created.
     */
    name?: pulumi.Input<string>;
    /**
     * One or more `routingPolicy` blocks as defined below.
     */
    routingPolicies?: pulumi.Input<pulumi.Input<inputs.network.RoutingIntentRoutingPolicy>[]>;
    /**
     * The resource ID of the Virtual Hub. Changing this forces a new resource to be created.
     */
    virtualHubId?: pulumi.Input<string>;
}
/**
 * The set of arguments for constructing a RoutingIntent resource.
 */
export interface RoutingIntentArgs {
    /**
     * The name which should be used for this Virtual Hub Routing Intent. Changing this forces a new resource to be created.
     */
    name?: pulumi.Input<string>;
    /**
     * One or more `routingPolicy` blocks as defined below.
     */
    routingPolicies: pulumi.Input<pulumi.Input<inputs.network.RoutingIntentRoutingPolicy>[]>;
    /**
     * The resource ID of the Virtual Hub. Changing this forces a new resource to be created.
     */
    virtualHubId: pulumi.Input<string>;
}
