"use strict";
// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***
Object.defineProperty(exports, "__esModule", { value: true });
exports.VnpGatewayNatRule = void 0;
const pulumi = require("@pulumi/pulumi");
const utilities = require("../utilities");
/**
 * Manages a VPN Gateway NAT Rule.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as azure from "@pulumi/azure";
 *
 * const example = new azure.core.ResourceGroup("example", {
 *     name: "example-resources",
 *     location: "West Europe",
 * });
 * const exampleVirtualWan = new azure.network.VirtualWan("example", {
 *     name: "example-vwan",
 *     resourceGroupName: example.name,
 *     location: example.location,
 * });
 * const exampleVirtualHub = new azure.network.VirtualHub("example", {
 *     name: "example-vhub",
 *     resourceGroupName: example.name,
 *     location: example.location,
 *     addressPrefix: "10.0.1.0/24",
 *     virtualWanId: exampleVirtualWan.id,
 * });
 * const exampleVpnGateway = new azure.network.VpnGateway("example", {
 *     name: "example-vpngateway",
 *     location: example.location,
 *     resourceGroupName: example.name,
 *     virtualHubId: exampleVirtualHub.id,
 * });
 * const exampleVnpGatewayNatRule = new azure.network.VnpGatewayNatRule("example", {
 *     name: "example-vpngatewaynatrule",
 *     vpnGatewayId: exampleVpnGateway.id,
 *     externalMappings: [{
 *         addressSpace: "192.168.21.0/26",
 *     }],
 *     internalMappings: [{
 *         addressSpace: "10.4.0.0/26",
 *     }],
 * });
 * ```
 *
 * ## Import
 *
 * VPN Gateway NAT Rules can be imported using the `resource id`, e.g.
 *
 * ```sh
 * $ pulumi import azure:network/vnpGatewayNatRule:VnpGatewayNatRule example /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/resGroup1/providers/Microsoft.Network/vpnGateways/vpnGateway1/natRules/natRule1
 * ```
 */
class VnpGatewayNatRule extends pulumi.CustomResource {
    constructor(name, argsOrState, opts) {
        let resourceInputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState;
            resourceInputs["externalMappings"] = state ? state.externalMappings : undefined;
            resourceInputs["internalMappings"] = state ? state.internalMappings : undefined;
            resourceInputs["ipConfigurationId"] = state ? state.ipConfigurationId : undefined;
            resourceInputs["mode"] = state ? state.mode : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["type"] = state ? state.type : undefined;
            resourceInputs["vpnGatewayId"] = state ? state.vpnGatewayId : undefined;
        }
        else {
            const args = argsOrState;
            if ((!args || args.vpnGatewayId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'vpnGatewayId'");
            }
            resourceInputs["externalMappings"] = args ? args.externalMappings : undefined;
            resourceInputs["internalMappings"] = args ? args.internalMappings : undefined;
            resourceInputs["ipConfigurationId"] = args ? args.ipConfigurationId : undefined;
            resourceInputs["mode"] = args ? args.mode : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["type"] = args ? args.type : undefined;
            resourceInputs["vpnGatewayId"] = args ? args.vpnGatewayId : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(VnpGatewayNatRule.__pulumiType, name, resourceInputs, opts);
    }
    /**
     * Get an existing VnpGatewayNatRule resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    static get(name, id, state, opts) {
        return new VnpGatewayNatRule(name, state, Object.assign(Object.assign({}, opts), { id: id }));
    }
    /**
     * Returns true if the given object is an instance of VnpGatewayNatRule.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    static isInstance(obj) {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === VnpGatewayNatRule.__pulumiType;
    }
}
exports.VnpGatewayNatRule = VnpGatewayNatRule;
/** @internal */
VnpGatewayNatRule.__pulumiType = 'azure:network/vnpGatewayNatRule:VnpGatewayNatRule';
//# sourceMappingURL=vnpGatewayNatRule.js.map