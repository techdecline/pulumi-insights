import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
/**
 * Manages a VPN Gateway NAT Rule.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as azure from "@pulumi/azure";
 *
 * const example = new azure.core.ResourceGroup("example", {
 *     name: "example-resources",
 *     location: "West Europe",
 * });
 * const exampleVirtualWan = new azure.network.VirtualWan("example", {
 *     name: "example-vwan",
 *     resourceGroupName: example.name,
 *     location: example.location,
 * });
 * const exampleVirtualHub = new azure.network.VirtualHub("example", {
 *     name: "example-vhub",
 *     resourceGroupName: example.name,
 *     location: example.location,
 *     addressPrefix: "10.0.1.0/24",
 *     virtualWanId: exampleVirtualWan.id,
 * });
 * const exampleVpnGateway = new azure.network.VpnGateway("example", {
 *     name: "example-vpngateway",
 *     location: example.location,
 *     resourceGroupName: example.name,
 *     virtualHubId: exampleVirtualHub.id,
 * });
 * const exampleVnpGatewayNatRule = new azure.network.VnpGatewayNatRule("example", {
 *     name: "example-vpngatewaynatrule",
 *     vpnGatewayId: exampleVpnGateway.id,
 *     externalMappings: [{
 *         addressSpace: "192.168.21.0/26",
 *     }],
 *     internalMappings: [{
 *         addressSpace: "10.4.0.0/26",
 *     }],
 * });
 * ```
 *
 * ## Import
 *
 * VPN Gateway NAT Rules can be imported using the `resource id`, e.g.
 *
 * ```sh
 * $ pulumi import azure:network/vnpGatewayNatRule:VnpGatewayNatRule example /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/resGroup1/providers/Microsoft.Network/vpnGateways/vpnGateway1/natRules/natRule1
 * ```
 */
export declare class VnpGatewayNatRule extends pulumi.CustomResource {
    /**
     * Get an existing VnpGatewayNatRule resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    static get(name: string, id: pulumi.Input<pulumi.ID>, state?: VnpGatewayNatRuleState, opts?: pulumi.CustomResourceOptions): VnpGatewayNatRule;
    /**
     * Returns true if the given object is an instance of VnpGatewayNatRule.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    static isInstance(obj: any): obj is VnpGatewayNatRule;
    /**
     * One of more `externalMapping` blocks as defined below.
     */
    readonly externalMappings: pulumi.Output<outputs.network.VnpGatewayNatRuleExternalMapping[] | undefined>;
    /**
     * One of more `internalMapping` blocks as defined below.
     */
    readonly internalMappings: pulumi.Output<outputs.network.VnpGatewayNatRuleInternalMapping[] | undefined>;
    /**
     * The ID of the IP Configuration this VPN Gateway NAT Rule applies to. Possible values are `Instance0` and `Instance1`.
     */
    readonly ipConfigurationId: pulumi.Output<string | undefined>;
    /**
     * The source NAT direction of the VPN NAT. Possible values are `EgressSnat` and `IngressSnat`. Defaults to `EgressSnat`. Changing this forces a new resource to be created.
     */
    readonly mode: pulumi.Output<string | undefined>;
    /**
     * The name which should be used for this VPN Gateway NAT Rule. Changing this forces a new resource to be created.
     */
    readonly name: pulumi.Output<string>;
    /**
     * The type of the VPN Gateway NAT Rule. Possible values are `Dynamic` and `Static`. Defaults to `Static`. Changing this forces a new resource to be created.
     */
    readonly type: pulumi.Output<string | undefined>;
    /**
     * The ID of the VPN Gateway that this VPN Gateway NAT Rule belongs to. Changing this forces a new resource to be created.
     */
    readonly vpnGatewayId: pulumi.Output<string>;
    /**
     * Create a VnpGatewayNatRule resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: VnpGatewayNatRuleArgs, opts?: pulumi.CustomResourceOptions);
}
/**
 * Input properties used for looking up and filtering VnpGatewayNatRule resources.
 */
export interface VnpGatewayNatRuleState {
    /**
     * One of more `externalMapping` blocks as defined below.
     */
    externalMappings?: pulumi.Input<pulumi.Input<inputs.network.VnpGatewayNatRuleExternalMapping>[]>;
    /**
     * One of more `internalMapping` blocks as defined below.
     */
    internalMappings?: pulumi.Input<pulumi.Input<inputs.network.VnpGatewayNatRuleInternalMapping>[]>;
    /**
     * The ID of the IP Configuration this VPN Gateway NAT Rule applies to. Possible values are `Instance0` and `Instance1`.
     */
    ipConfigurationId?: pulumi.Input<string>;
    /**
     * The source NAT direction of the VPN NAT. Possible values are `EgressSnat` and `IngressSnat`. Defaults to `EgressSnat`. Changing this forces a new resource to be created.
     */
    mode?: pulumi.Input<string>;
    /**
     * The name which should be used for this VPN Gateway NAT Rule. Changing this forces a new resource to be created.
     */
    name?: pulumi.Input<string>;
    /**
     * The type of the VPN Gateway NAT Rule. Possible values are `Dynamic` and `Static`. Defaults to `Static`. Changing this forces a new resource to be created.
     */
    type?: pulumi.Input<string>;
    /**
     * The ID of the VPN Gateway that this VPN Gateway NAT Rule belongs to. Changing this forces a new resource to be created.
     */
    vpnGatewayId?: pulumi.Input<string>;
}
/**
 * The set of arguments for constructing a VnpGatewayNatRule resource.
 */
export interface VnpGatewayNatRuleArgs {
    /**
     * One of more `externalMapping` blocks as defined below.
     */
    externalMappings?: pulumi.Input<pulumi.Input<inputs.network.VnpGatewayNatRuleExternalMapping>[]>;
    /**
     * One of more `internalMapping` blocks as defined below.
     */
    internalMappings?: pulumi.Input<pulumi.Input<inputs.network.VnpGatewayNatRuleInternalMapping>[]>;
    /**
     * The ID of the IP Configuration this VPN Gateway NAT Rule applies to. Possible values are `Instance0` and `Instance1`.
     */
    ipConfigurationId?: pulumi.Input<string>;
    /**
     * The source NAT direction of the VPN NAT. Possible values are `EgressSnat` and `IngressSnat`. Defaults to `EgressSnat`. Changing this forces a new resource to be created.
     */
    mode?: pulumi.Input<string>;
    /**
     * The name which should be used for this VPN Gateway NAT Rule. Changing this forces a new resource to be created.
     */
    name?: pulumi.Input<string>;
    /**
     * The type of the VPN Gateway NAT Rule. Possible values are `Dynamic` and `Static`. Defaults to `Static`. Changing this forces a new resource to be created.
     */
    type?: pulumi.Input<string>;
    /**
     * The ID of the VPN Gateway that this VPN Gateway NAT Rule belongs to. Changing this forces a new resource to be created.
     */
    vpnGatewayId: pulumi.Input<string>;
}
