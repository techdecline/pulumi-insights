export { ApplicationGatewayArgs, ApplicationGatewayState } from "./applicationGateway";
export declare type ApplicationGateway = import("./applicationGateway").ApplicationGateway;
export declare const ApplicationGateway: typeof import("./applicationGateway").ApplicationGateway;
export { ApplicationSecurityGroupArgs, ApplicationSecurityGroupState } from "./applicationSecurityGroup";
export declare type ApplicationSecurityGroup = import("./applicationSecurityGroup").ApplicationSecurityGroup;
export declare const ApplicationSecurityGroup: typeof import("./applicationSecurityGroup").ApplicationSecurityGroup;
export { BgpConnectionArgs, BgpConnectionState } from "./bgpConnection";
export declare type BgpConnection = import("./bgpConnection").BgpConnection;
export declare const BgpConnection: typeof import("./bgpConnection").BgpConnection;
export { DdosProtectionPlanArgs, DdosProtectionPlanState } from "./ddosProtectionPlan";
export declare type DdosProtectionPlan = import("./ddosProtectionPlan").DdosProtectionPlan;
export declare const DdosProtectionPlan: typeof import("./ddosProtectionPlan").DdosProtectionPlan;
export { ExpressRouteCircuitArgs, ExpressRouteCircuitState } from "./expressRouteCircuit";
export declare type ExpressRouteCircuit = import("./expressRouteCircuit").ExpressRouteCircuit;
export declare const ExpressRouteCircuit: typeof import("./expressRouteCircuit").ExpressRouteCircuit;
export { ExpressRouteCircuitAuthorizationArgs, ExpressRouteCircuitAuthorizationState } from "./expressRouteCircuitAuthorization";
export declare type ExpressRouteCircuitAuthorization = import("./expressRouteCircuitAuthorization").ExpressRouteCircuitAuthorization;
export declare const ExpressRouteCircuitAuthorization: typeof import("./expressRouteCircuitAuthorization").ExpressRouteCircuitAuthorization;
export { ExpressRouteCircuitConnectionArgs, ExpressRouteCircuitConnectionState } from "./expressRouteCircuitConnection";
export declare type ExpressRouteCircuitConnection = import("./expressRouteCircuitConnection").ExpressRouteCircuitConnection;
export declare const ExpressRouteCircuitConnection: typeof import("./expressRouteCircuitConnection").ExpressRouteCircuitConnection;
export { ExpressRouteCircuitPeeringArgs, ExpressRouteCircuitPeeringState } from "./expressRouteCircuitPeering";
export declare type ExpressRouteCircuitPeering = import("./expressRouteCircuitPeering").ExpressRouteCircuitPeering;
export declare const ExpressRouteCircuitPeering: typeof import("./expressRouteCircuitPeering").ExpressRouteCircuitPeering;
export { ExpressRouteConnectionArgs, ExpressRouteConnectionState } from "./expressRouteConnection";
export declare type ExpressRouteConnection = import("./expressRouteConnection").ExpressRouteConnection;
export declare const ExpressRouteConnection: typeof import("./expressRouteConnection").ExpressRouteConnection;
export { ExpressRouteGatewayArgs, ExpressRouteGatewayState } from "./expressRouteGateway";
export declare type ExpressRouteGateway = import("./expressRouteGateway").ExpressRouteGateway;
export declare const ExpressRouteGateway: typeof import("./expressRouteGateway").ExpressRouteGateway;
export { ExpressRoutePortArgs, ExpressRoutePortState } from "./expressRoutePort";
export declare type ExpressRoutePort = import("./expressRoutePort").ExpressRoutePort;
export declare const ExpressRoutePort: typeof import("./expressRoutePort").ExpressRoutePort;
export { ExpressRoutePortAuthorizationArgs, ExpressRoutePortAuthorizationState } from "./expressRoutePortAuthorization";
export declare type ExpressRoutePortAuthorization = import("./expressRoutePortAuthorization").ExpressRoutePortAuthorization;
export declare const ExpressRoutePortAuthorization: typeof import("./expressRoutePortAuthorization").ExpressRoutePortAuthorization;
export { FirewallArgs, FirewallState } from "./firewall";
export declare type Firewall = import("./firewall").Firewall;
export declare const Firewall: typeof import("./firewall").Firewall;
export { FirewallApplicationRuleCollectionArgs, FirewallApplicationRuleCollectionState } from "./firewallApplicationRuleCollection";
export declare type FirewallApplicationRuleCollection = import("./firewallApplicationRuleCollection").FirewallApplicationRuleCollection;
export declare const FirewallApplicationRuleCollection: typeof import("./firewallApplicationRuleCollection").FirewallApplicationRuleCollection;
export { FirewallNatRuleCollectionArgs, FirewallNatRuleCollectionState } from "./firewallNatRuleCollection";
export declare type FirewallNatRuleCollection = import("./firewallNatRuleCollection").FirewallNatRuleCollection;
export declare const FirewallNatRuleCollection: typeof import("./firewallNatRuleCollection").FirewallNatRuleCollection;
export { FirewallNetworkRuleCollectionArgs, FirewallNetworkRuleCollectionState } from "./firewallNetworkRuleCollection";
export declare type FirewallNetworkRuleCollection = import("./firewallNetworkRuleCollection").FirewallNetworkRuleCollection;
export declare const FirewallNetworkRuleCollection: typeof import("./firewallNetworkRuleCollection").FirewallNetworkRuleCollection;
export { FirewallPolicyArgs, FirewallPolicyState } from "./firewallPolicy";
export declare type FirewallPolicy = import("./firewallPolicy").FirewallPolicy;
export declare const FirewallPolicy: typeof import("./firewallPolicy").FirewallPolicy;
export { FirewallPolicyRuleCollectionGroupArgs, FirewallPolicyRuleCollectionGroupState } from "./firewallPolicyRuleCollectionGroup";
export declare type FirewallPolicyRuleCollectionGroup = import("./firewallPolicyRuleCollectionGroup").FirewallPolicyRuleCollectionGroup;
export declare const FirewallPolicyRuleCollectionGroup: typeof import("./firewallPolicyRuleCollectionGroup").FirewallPolicyRuleCollectionGroup;
export { GetApplicationGatewayArgs, GetApplicationGatewayResult, GetApplicationGatewayOutputArgs } from "./getApplicationGateway";
export declare const getApplicationGateway: typeof import("./getApplicationGateway").getApplicationGateway;
export declare const getApplicationGatewayOutput: typeof import("./getApplicationGateway").getApplicationGatewayOutput;
export { GetApplicationSecurityGroupArgs, GetApplicationSecurityGroupResult, GetApplicationSecurityGroupOutputArgs } from "./getApplicationSecurityGroup";
export declare const getApplicationSecurityGroup: typeof import("./getApplicationSecurityGroup").getApplicationSecurityGroup;
export declare const getApplicationSecurityGroupOutput: typeof import("./getApplicationSecurityGroup").getApplicationSecurityGroupOutput;
export { GetExpressRouteCircuitArgs, GetExpressRouteCircuitResult, GetExpressRouteCircuitOutputArgs } from "./getExpressRouteCircuit";
export declare const getExpressRouteCircuit: typeof import("./getExpressRouteCircuit").getExpressRouteCircuit;
export declare const getExpressRouteCircuitOutput: typeof import("./getExpressRouteCircuit").getExpressRouteCircuitOutput;
export { GetFirewallArgs, GetFirewallResult, GetFirewallOutputArgs } from "./getFirewall";
export declare const getFirewall: typeof import("./getFirewall").getFirewall;
export declare const getFirewallOutput: typeof import("./getFirewall").getFirewallOutput;
export { GetFirewallPolicyArgs, GetFirewallPolicyResult, GetFirewallPolicyOutputArgs } from "./getFirewallPolicy";
export declare const getFirewallPolicy: typeof import("./getFirewallPolicy").getFirewallPolicy;
export declare const getFirewallPolicyOutput: typeof import("./getFirewallPolicy").getFirewallPolicyOutput;
export { GetGatewayConnectionArgs, GetGatewayConnectionResult, GetGatewayConnectionOutputArgs } from "./getGatewayConnection";
export declare const getGatewayConnection: typeof import("./getGatewayConnection").getGatewayConnection;
export declare const getGatewayConnectionOutput: typeof import("./getGatewayConnection").getGatewayConnectionOutput;
export { GetIpGroupArgs, GetIpGroupResult, GetIpGroupOutputArgs } from "./getIpGroup";
export declare const getIpGroup: typeof import("./getIpGroup").getIpGroup;
export declare const getIpGroupOutput: typeof import("./getIpGroup").getIpGroupOutput;
export { GetIpGroupsArgs, GetIpGroupsResult, GetIpGroupsOutputArgs } from "./getIpGroups";
export declare const getIpGroups: typeof import("./getIpGroups").getIpGroups;
export declare const getIpGroupsOutput: typeof import("./getIpGroups").getIpGroupsOutput;
export { GetLocalNetworkGatewayArgs, GetLocalNetworkGatewayResult, GetLocalNetworkGatewayOutputArgs } from "./getLocalNetworkGateway";
export declare const getLocalNetworkGateway: typeof import("./getLocalNetworkGateway").getLocalNetworkGateway;
export declare const getLocalNetworkGatewayOutput: typeof import("./getLocalNetworkGateway").getLocalNetworkGatewayOutput;
export { GetNatGatewayArgs, GetNatGatewayResult, GetNatGatewayOutputArgs } from "./getNatGateway";
export declare const getNatGateway: typeof import("./getNatGateway").getNatGateway;
export declare const getNatGatewayOutput: typeof import("./getNatGateway").getNatGatewayOutput;
export { GetNetworkDdosProtectionPlanArgs, GetNetworkDdosProtectionPlanResult, GetNetworkDdosProtectionPlanOutputArgs } from "./getNetworkDdosProtectionPlan";
export declare const getNetworkDdosProtectionPlan: typeof import("./getNetworkDdosProtectionPlan").getNetworkDdosProtectionPlan;
export declare const getNetworkDdosProtectionPlanOutput: typeof import("./getNetworkDdosProtectionPlan").getNetworkDdosProtectionPlanOutput;
export { GetNetworkInterfaceArgs, GetNetworkInterfaceResult, GetNetworkInterfaceOutputArgs } from "./getNetworkInterface";
export declare const getNetworkInterface: typeof import("./getNetworkInterface").getNetworkInterface;
export declare const getNetworkInterfaceOutput: typeof import("./getNetworkInterface").getNetworkInterfaceOutput;
export { GetNetworkManagerArgs, GetNetworkManagerResult, GetNetworkManagerOutputArgs } from "./getNetworkManager";
export declare const getNetworkManager: typeof import("./getNetworkManager").getNetworkManager;
export declare const getNetworkManagerOutput: typeof import("./getNetworkManager").getNetworkManagerOutput;
export { GetNetworkManagerConnectivityConfigurationArgs, GetNetworkManagerConnectivityConfigurationResult, GetNetworkManagerConnectivityConfigurationOutputArgs } from "./getNetworkManagerConnectivityConfiguration";
export declare const getNetworkManagerConnectivityConfiguration: typeof import("./getNetworkManagerConnectivityConfiguration").getNetworkManagerConnectivityConfiguration;
export declare const getNetworkManagerConnectivityConfigurationOutput: typeof import("./getNetworkManagerConnectivityConfiguration").getNetworkManagerConnectivityConfigurationOutput;
export { GetNetworkManagerNetworkGroupArgs, GetNetworkManagerNetworkGroupResult, GetNetworkManagerNetworkGroupOutputArgs } from "./getNetworkManagerNetworkGroup";
export declare const getNetworkManagerNetworkGroup: typeof import("./getNetworkManagerNetworkGroup").getNetworkManagerNetworkGroup;
export declare const getNetworkManagerNetworkGroupOutput: typeof import("./getNetworkManagerNetworkGroup").getNetworkManagerNetworkGroupOutput;
export { GetNetworkSecurityGroupArgs, GetNetworkSecurityGroupResult, GetNetworkSecurityGroupOutputArgs } from "./getNetworkSecurityGroup";
export declare const getNetworkSecurityGroup: typeof import("./getNetworkSecurityGroup").getNetworkSecurityGroup;
export declare const getNetworkSecurityGroupOutput: typeof import("./getNetworkSecurityGroup").getNetworkSecurityGroupOutput;
export { GetNetworkWatcherArgs, GetNetworkWatcherResult, GetNetworkWatcherOutputArgs } from "./getNetworkWatcher";
export declare const getNetworkWatcher: typeof import("./getNetworkWatcher").getNetworkWatcher;
export declare const getNetworkWatcherOutput: typeof import("./getNetworkWatcher").getNetworkWatcherOutput;
export { GetPublicIPArgs, GetPublicIPResult, GetPublicIPOutputArgs } from "./getPublicIP";
export declare const getPublicIP: typeof import("./getPublicIP").getPublicIP;
export declare const getPublicIPOutput: typeof import("./getPublicIP").getPublicIPOutput;
export { GetPublicIPsArgs, GetPublicIPsResult, GetPublicIPsOutputArgs } from "./getPublicIPs";
export declare const getPublicIPs: typeof import("./getPublicIPs").getPublicIPs;
export declare const getPublicIPsOutput: typeof import("./getPublicIPs").getPublicIPsOutput;
export { GetPublicIpPrefixArgs, GetPublicIpPrefixResult, GetPublicIpPrefixOutputArgs } from "./getPublicIpPrefix";
export declare const getPublicIpPrefix: typeof import("./getPublicIpPrefix").getPublicIpPrefix;
export declare const getPublicIpPrefixOutput: typeof import("./getPublicIpPrefix").getPublicIpPrefixOutput;
export { GetRouteFilterArgs, GetRouteFilterResult, GetRouteFilterOutputArgs } from "./getRouteFilter";
export declare const getRouteFilter: typeof import("./getRouteFilter").getRouteFilter;
export declare const getRouteFilterOutput: typeof import("./getRouteFilter").getRouteFilterOutput;
export { GetRouteTableArgs, GetRouteTableResult, GetRouteTableOutputArgs } from "./getRouteTable";
export declare const getRouteTable: typeof import("./getRouteTable").getRouteTable;
export declare const getRouteTableOutput: typeof import("./getRouteTable").getRouteTableOutput;
export { GetServiceTagsArgs, GetServiceTagsResult, GetServiceTagsOutputArgs } from "./getServiceTags";
export declare const getServiceTags: typeof import("./getServiceTags").getServiceTags;
export declare const getServiceTagsOutput: typeof import("./getServiceTags").getServiceTagsOutput;
export { GetSubnetArgs, GetSubnetResult, GetSubnetOutputArgs } from "./getSubnet";
export declare const getSubnet: typeof import("./getSubnet").getSubnet;
export declare const getSubnetOutput: typeof import("./getSubnet").getSubnetOutput;
export { GetTrafficManagerArgs, GetTrafficManagerResult, GetTrafficManagerOutputArgs } from "./getTrafficManager";
export declare const getTrafficManager: typeof import("./getTrafficManager").getTrafficManager;
export declare const getTrafficManagerOutput: typeof import("./getTrafficManager").getTrafficManagerOutput;
export { GetTrafficManagerProfileArgs, GetTrafficManagerProfileResult, GetTrafficManagerProfileOutputArgs } from "./getTrafficManagerProfile";
export declare const getTrafficManagerProfile: typeof import("./getTrafficManagerProfile").getTrafficManagerProfile;
export declare const getTrafficManagerProfileOutput: typeof import("./getTrafficManagerProfile").getTrafficManagerProfileOutput;
export { GetVirtualHubArgs, GetVirtualHubResult, GetVirtualHubOutputArgs } from "./getVirtualHub";
export declare const getVirtualHub: typeof import("./getVirtualHub").getVirtualHub;
export declare const getVirtualHubOutput: typeof import("./getVirtualHub").getVirtualHubOutput;
export { GetVirtualHubConnectionArgs, GetVirtualHubConnectionResult, GetVirtualHubConnectionOutputArgs } from "./getVirtualHubConnection";
export declare const getVirtualHubConnection: typeof import("./getVirtualHubConnection").getVirtualHubConnection;
export declare const getVirtualHubConnectionOutput: typeof import("./getVirtualHubConnection").getVirtualHubConnectionOutput;
export { GetVirtualHubRouteTableArgs, GetVirtualHubRouteTableResult, GetVirtualHubRouteTableOutputArgs } from "./getVirtualHubRouteTable";
export declare const getVirtualHubRouteTable: typeof import("./getVirtualHubRouteTable").getVirtualHubRouteTable;
export declare const getVirtualHubRouteTableOutput: typeof import("./getVirtualHubRouteTable").getVirtualHubRouteTableOutput;
export { GetVirtualNetworkArgs, GetVirtualNetworkResult, GetVirtualNetworkOutputArgs } from "./getVirtualNetwork";
export declare const getVirtualNetwork: typeof import("./getVirtualNetwork").getVirtualNetwork;
export declare const getVirtualNetworkOutput: typeof import("./getVirtualNetwork").getVirtualNetworkOutput;
export { GetVirtualNetworkGatewayArgs, GetVirtualNetworkGatewayResult, GetVirtualNetworkGatewayOutputArgs } from "./getVirtualNetworkGateway";
export declare const getVirtualNetworkGateway: typeof import("./getVirtualNetworkGateway").getVirtualNetworkGateway;
export declare const getVirtualNetworkGatewayOutput: typeof import("./getVirtualNetworkGateway").getVirtualNetworkGatewayOutput;
export { GetVirtualNetworkPeeringArgs, GetVirtualNetworkPeeringResult, GetVirtualNetworkPeeringOutputArgs } from "./getVirtualNetworkPeering";
export declare const getVirtualNetworkPeering: typeof import("./getVirtualNetworkPeering").getVirtualNetworkPeering;
export declare const getVirtualNetworkPeeringOutput: typeof import("./getVirtualNetworkPeering").getVirtualNetworkPeeringOutput;
export { GetVirtualWanArgs, GetVirtualWanResult, GetVirtualWanOutputArgs } from "./getVirtualWan";
export declare const getVirtualWan: typeof import("./getVirtualWan").getVirtualWan;
export declare const getVirtualWanOutput: typeof import("./getVirtualWan").getVirtualWanOutput;
export { GetVpnGatewayArgs, GetVpnGatewayResult, GetVpnGatewayOutputArgs } from "./getVpnGateway";
export declare const getVpnGateway: typeof import("./getVpnGateway").getVpnGateway;
export declare const getVpnGatewayOutput: typeof import("./getVpnGateway").getVpnGatewayOutput;
export { GetVpnServerConfigurationArgs, GetVpnServerConfigurationResult, GetVpnServerConfigurationOutputArgs } from "./getVpnServerConfiguration";
export declare const getVpnServerConfiguration: typeof import("./getVpnServerConfiguration").getVpnServerConfiguration;
export declare const getVpnServerConfigurationOutput: typeof import("./getVpnServerConfiguration").getVpnServerConfigurationOutput;
export { IPGroupArgs, IPGroupState } from "./ipgroup";
export declare type IPGroup = import("./ipgroup").IPGroup;
export declare const IPGroup: typeof import("./ipgroup").IPGroup;
export { IPGroupCIDRArgs, IPGroupCIDRState } from "./ipgroupCIDR";
export declare type IPGroupCIDR = import("./ipgroupCIDR").IPGroupCIDR;
export declare const IPGroupCIDR: typeof import("./ipgroupCIDR").IPGroupCIDR;
export { LocalNetworkGatewayArgs, LocalNetworkGatewayState } from "./localNetworkGateway";
export declare type LocalNetworkGateway = import("./localNetworkGateway").LocalNetworkGateway;
export declare const LocalNetworkGateway: typeof import("./localNetworkGateway").LocalNetworkGateway;
export { NatGatewayArgs, NatGatewayState } from "./natGateway";
export declare type NatGateway = import("./natGateway").NatGateway;
export declare const NatGateway: typeof import("./natGateway").NatGateway;
export { NatGatewayPublicIpAssociationArgs, NatGatewayPublicIpAssociationState } from "./natGatewayPublicIpAssociation";
export declare type NatGatewayPublicIpAssociation = import("./natGatewayPublicIpAssociation").NatGatewayPublicIpAssociation;
export declare const NatGatewayPublicIpAssociation: typeof import("./natGatewayPublicIpAssociation").NatGatewayPublicIpAssociation;
export { NatGatewayPublicIpPrefixAssociationArgs, NatGatewayPublicIpPrefixAssociationState } from "./natGatewayPublicIpPrefixAssociation";
export declare type NatGatewayPublicIpPrefixAssociation = import("./natGatewayPublicIpPrefixAssociation").NatGatewayPublicIpPrefixAssociation;
export declare const NatGatewayPublicIpPrefixAssociation: typeof import("./natGatewayPublicIpPrefixAssociation").NatGatewayPublicIpPrefixAssociation;
export { NetworkConnectionMonitorArgs, NetworkConnectionMonitorState } from "./networkConnectionMonitor";
export declare type NetworkConnectionMonitor = import("./networkConnectionMonitor").NetworkConnectionMonitor;
export declare const NetworkConnectionMonitor: typeof import("./networkConnectionMonitor").NetworkConnectionMonitor;
export { NetworkInterfaceArgs, NetworkInterfaceState } from "./networkInterface";
export declare type NetworkInterface = import("./networkInterface").NetworkInterface;
export declare const NetworkInterface: typeof import("./networkInterface").NetworkInterface;
export { NetworkInterfaceApplicationGatewayBackendAddressPoolAssociationArgs, NetworkInterfaceApplicationGatewayBackendAddressPoolAssociationState } from "./networkInterfaceApplicationGatewayBackendAddressPoolAssociation";
export declare type NetworkInterfaceApplicationGatewayBackendAddressPoolAssociation = import("./networkInterfaceApplicationGatewayBackendAddressPoolAssociation").NetworkInterfaceApplicationGatewayBackendAddressPoolAssociation;
export declare const NetworkInterfaceApplicationGatewayBackendAddressPoolAssociation: typeof import("./networkInterfaceApplicationGatewayBackendAddressPoolAssociation").NetworkInterfaceApplicationGatewayBackendAddressPoolAssociation;
export { NetworkInterfaceApplicationSecurityGroupAssociationArgs, NetworkInterfaceApplicationSecurityGroupAssociationState } from "./networkInterfaceApplicationSecurityGroupAssociation";
export declare type NetworkInterfaceApplicationSecurityGroupAssociation = import("./networkInterfaceApplicationSecurityGroupAssociation").NetworkInterfaceApplicationSecurityGroupAssociation;
export declare const NetworkInterfaceApplicationSecurityGroupAssociation: typeof import("./networkInterfaceApplicationSecurityGroupAssociation").NetworkInterfaceApplicationSecurityGroupAssociation;
export { NetworkInterfaceBackendAddressPoolAssociationArgs, NetworkInterfaceBackendAddressPoolAssociationState } from "./networkInterfaceBackendAddressPoolAssociation";
export declare type NetworkInterfaceBackendAddressPoolAssociation = import("./networkInterfaceBackendAddressPoolAssociation").NetworkInterfaceBackendAddressPoolAssociation;
export declare const NetworkInterfaceBackendAddressPoolAssociation: typeof import("./networkInterfaceBackendAddressPoolAssociation").NetworkInterfaceBackendAddressPoolAssociation;
export { NetworkInterfaceNatRuleAssociationArgs, NetworkInterfaceNatRuleAssociationState } from "./networkInterfaceNatRuleAssociation";
export declare type NetworkInterfaceNatRuleAssociation = import("./networkInterfaceNatRuleAssociation").NetworkInterfaceNatRuleAssociation;
export declare const NetworkInterfaceNatRuleAssociation: typeof import("./networkInterfaceNatRuleAssociation").NetworkInterfaceNatRuleAssociation;
export { NetworkInterfaceSecurityGroupAssociationArgs, NetworkInterfaceSecurityGroupAssociationState } from "./networkInterfaceSecurityGroupAssociation";
export declare type NetworkInterfaceSecurityGroupAssociation = import("./networkInterfaceSecurityGroupAssociation").NetworkInterfaceSecurityGroupAssociation;
export declare const NetworkInterfaceSecurityGroupAssociation: typeof import("./networkInterfaceSecurityGroupAssociation").NetworkInterfaceSecurityGroupAssociation;
export { NetworkManagerArgs, NetworkManagerState } from "./networkManager";
export declare type NetworkManager = import("./networkManager").NetworkManager;
export declare const NetworkManager: typeof import("./networkManager").NetworkManager;
export { NetworkManagerAdminRuleArgs, NetworkManagerAdminRuleState } from "./networkManagerAdminRule";
export declare type NetworkManagerAdminRule = import("./networkManagerAdminRule").NetworkManagerAdminRule;
export declare const NetworkManagerAdminRule: typeof import("./networkManagerAdminRule").NetworkManagerAdminRule;
export { NetworkManagerAdminRuleCollectionArgs, NetworkManagerAdminRuleCollectionState } from "./networkManagerAdminRuleCollection";
export declare type NetworkManagerAdminRuleCollection = import("./networkManagerAdminRuleCollection").NetworkManagerAdminRuleCollection;
export declare const NetworkManagerAdminRuleCollection: typeof import("./networkManagerAdminRuleCollection").NetworkManagerAdminRuleCollection;
export { NetworkManagerConnectivityConfigurationArgs, NetworkManagerConnectivityConfigurationState } from "./networkManagerConnectivityConfiguration";
export declare type NetworkManagerConnectivityConfiguration = import("./networkManagerConnectivityConfiguration").NetworkManagerConnectivityConfiguration;
export declare const NetworkManagerConnectivityConfiguration: typeof import("./networkManagerConnectivityConfiguration").NetworkManagerConnectivityConfiguration;
export { NetworkManagerDeploymentArgs, NetworkManagerDeploymentState } from "./networkManagerDeployment";
export declare type NetworkManagerDeployment = import("./networkManagerDeployment").NetworkManagerDeployment;
export declare const NetworkManagerDeployment: typeof import("./networkManagerDeployment").NetworkManagerDeployment;
export { NetworkManagerManagementGroupConnectionArgs, NetworkManagerManagementGroupConnectionState } from "./networkManagerManagementGroupConnection";
export declare type NetworkManagerManagementGroupConnection = import("./networkManagerManagementGroupConnection").NetworkManagerManagementGroupConnection;
export declare const NetworkManagerManagementGroupConnection: typeof import("./networkManagerManagementGroupConnection").NetworkManagerManagementGroupConnection;
export { NetworkManagerNetworkGroupArgs, NetworkManagerNetworkGroupState } from "./networkManagerNetworkGroup";
export declare type NetworkManagerNetworkGroup = import("./networkManagerNetworkGroup").NetworkManagerNetworkGroup;
export declare const NetworkManagerNetworkGroup: typeof import("./networkManagerNetworkGroup").NetworkManagerNetworkGroup;
export { NetworkManagerScopeConnectionArgs, NetworkManagerScopeConnectionState } from "./networkManagerScopeConnection";
export declare type NetworkManagerScopeConnection = import("./networkManagerScopeConnection").NetworkManagerScopeConnection;
export declare const NetworkManagerScopeConnection: typeof import("./networkManagerScopeConnection").NetworkManagerScopeConnection;
export { NetworkManagerSecurityAdminConfigurationArgs, NetworkManagerSecurityAdminConfigurationState } from "./networkManagerSecurityAdminConfiguration";
export declare type NetworkManagerSecurityAdminConfiguration = import("./networkManagerSecurityAdminConfiguration").NetworkManagerSecurityAdminConfiguration;
export declare const NetworkManagerSecurityAdminConfiguration: typeof import("./networkManagerSecurityAdminConfiguration").NetworkManagerSecurityAdminConfiguration;
export { NetworkManagerStaticMemberArgs, NetworkManagerStaticMemberState } from "./networkManagerStaticMember";
export declare type NetworkManagerStaticMember = import("./networkManagerStaticMember").NetworkManagerStaticMember;
export declare const NetworkManagerStaticMember: typeof import("./networkManagerStaticMember").NetworkManagerStaticMember;
export { NetworkManagerSubscriptionConnectionArgs, NetworkManagerSubscriptionConnectionState } from "./networkManagerSubscriptionConnection";
export declare type NetworkManagerSubscriptionConnection = import("./networkManagerSubscriptionConnection").NetworkManagerSubscriptionConnection;
export declare const NetworkManagerSubscriptionConnection: typeof import("./networkManagerSubscriptionConnection").NetworkManagerSubscriptionConnection;
export { NetworkSecurityGroupArgs, NetworkSecurityGroupState } from "./networkSecurityGroup";
export declare type NetworkSecurityGroup = import("./networkSecurityGroup").NetworkSecurityGroup;
export declare const NetworkSecurityGroup: typeof import("./networkSecurityGroup").NetworkSecurityGroup;
export { NetworkSecurityRuleArgs, NetworkSecurityRuleState } from "./networkSecurityRule";
export declare type NetworkSecurityRule = import("./networkSecurityRule").NetworkSecurityRule;
export declare const NetworkSecurityRule: typeof import("./networkSecurityRule").NetworkSecurityRule;
export { NetworkWatcherArgs, NetworkWatcherState } from "./networkWatcher";
export declare type NetworkWatcher = import("./networkWatcher").NetworkWatcher;
export declare const NetworkWatcher: typeof import("./networkWatcher").NetworkWatcher;
export { NetworkWatcherFlowLogArgs, NetworkWatcherFlowLogState } from "./networkWatcherFlowLog";
export declare type NetworkWatcherFlowLog = import("./networkWatcherFlowLog").NetworkWatcherFlowLog;
export declare const NetworkWatcherFlowLog: typeof import("./networkWatcherFlowLog").NetworkWatcherFlowLog;
export { PointToPointVpnGatewayArgs, PointToPointVpnGatewayState } from "./pointToPointVpnGateway";
export declare type PointToPointVpnGateway = import("./pointToPointVpnGateway").PointToPointVpnGateway;
export declare const PointToPointVpnGateway: typeof import("./pointToPointVpnGateway").PointToPointVpnGateway;
export { ProfileArgs, ProfileState } from "./profile";
export declare type Profile = import("./profile").Profile;
export declare const Profile: typeof import("./profile").Profile;
export { PublicIpArgs, PublicIpState } from "./publicIp";
export declare type PublicIp = import("./publicIp").PublicIp;
export declare const PublicIp: typeof import("./publicIp").PublicIp;
export { PublicIpPrefixArgs, PublicIpPrefixState } from "./publicIpPrefix";
export declare type PublicIpPrefix = import("./publicIpPrefix").PublicIpPrefix;
export declare const PublicIpPrefix: typeof import("./publicIpPrefix").PublicIpPrefix;
export { RouteArgs, RouteState } from "./route";
export declare type Route = import("./route").Route;
export declare const Route: typeof import("./route").Route;
export { RouteFilterArgs, RouteFilterState } from "./routeFilter";
export declare type RouteFilter = import("./routeFilter").RouteFilter;
export declare const RouteFilter: typeof import("./routeFilter").RouteFilter;
export { RouteMapArgs, RouteMapState } from "./routeMap";
export declare type RouteMap = import("./routeMap").RouteMap;
export declare const RouteMap: typeof import("./routeMap").RouteMap;
export { RouteServerArgs, RouteServerState } from "./routeServer";
export declare type RouteServer = import("./routeServer").RouteServer;
export declare const RouteServer: typeof import("./routeServer").RouteServer;
export { RouteServerBgpConnectionArgs, RouteServerBgpConnectionState } from "./routeServerBgpConnection";
export declare type RouteServerBgpConnection = import("./routeServerBgpConnection").RouteServerBgpConnection;
export declare const RouteServerBgpConnection: typeof import("./routeServerBgpConnection").RouteServerBgpConnection;
export { RouteTableArgs, RouteTableState } from "./routeTable";
export declare type RouteTable = import("./routeTable").RouteTable;
export declare const RouteTable: typeof import("./routeTable").RouteTable;
export { RoutingIntentArgs, RoutingIntentState } from "./routingIntent";
export declare type RoutingIntent = import("./routingIntent").RoutingIntent;
export declare const RoutingIntent: typeof import("./routingIntent").RoutingIntent;
export { SecurityPartnerProviderArgs, SecurityPartnerProviderState } from "./securityPartnerProvider";
export declare type SecurityPartnerProvider = import("./securityPartnerProvider").SecurityPartnerProvider;
export declare const SecurityPartnerProvider: typeof import("./securityPartnerProvider").SecurityPartnerProvider;
export { SubnetArgs, SubnetState } from "./subnet";
export declare type Subnet = import("./subnet").Subnet;
export declare const Subnet: typeof import("./subnet").Subnet;
export { SubnetNatGatewayAssociationArgs, SubnetNatGatewayAssociationState } from "./subnetNatGatewayAssociation";
export declare type SubnetNatGatewayAssociation = import("./subnetNatGatewayAssociation").SubnetNatGatewayAssociation;
export declare const SubnetNatGatewayAssociation: typeof import("./subnetNatGatewayAssociation").SubnetNatGatewayAssociation;
export { SubnetNetworkSecurityGroupAssociationArgs, SubnetNetworkSecurityGroupAssociationState } from "./subnetNetworkSecurityGroupAssociation";
export declare type SubnetNetworkSecurityGroupAssociation = import("./subnetNetworkSecurityGroupAssociation").SubnetNetworkSecurityGroupAssociation;
export declare const SubnetNetworkSecurityGroupAssociation: typeof import("./subnetNetworkSecurityGroupAssociation").SubnetNetworkSecurityGroupAssociation;
export { SubnetRouteTableAssociationArgs, SubnetRouteTableAssociationState } from "./subnetRouteTableAssociation";
export declare type SubnetRouteTableAssociation = import("./subnetRouteTableAssociation").SubnetRouteTableAssociation;
export declare const SubnetRouteTableAssociation: typeof import("./subnetRouteTableAssociation").SubnetRouteTableAssociation;
export { SubnetServiceEndpointStoragePolicyArgs, SubnetServiceEndpointStoragePolicyState } from "./subnetServiceEndpointStoragePolicy";
export declare type SubnetServiceEndpointStoragePolicy = import("./subnetServiceEndpointStoragePolicy").SubnetServiceEndpointStoragePolicy;
export declare const SubnetServiceEndpointStoragePolicy: typeof import("./subnetServiceEndpointStoragePolicy").SubnetServiceEndpointStoragePolicy;
export { TrafficManagerAzureEndpointArgs, TrafficManagerAzureEndpointState } from "./trafficManagerAzureEndpoint";
export declare type TrafficManagerAzureEndpoint = import("./trafficManagerAzureEndpoint").TrafficManagerAzureEndpoint;
export declare const TrafficManagerAzureEndpoint: typeof import("./trafficManagerAzureEndpoint").TrafficManagerAzureEndpoint;
export { TrafficManagerExternalEndpointArgs, TrafficManagerExternalEndpointState } from "./trafficManagerExternalEndpoint";
export declare type TrafficManagerExternalEndpoint = import("./trafficManagerExternalEndpoint").TrafficManagerExternalEndpoint;
export declare const TrafficManagerExternalEndpoint: typeof import("./trafficManagerExternalEndpoint").TrafficManagerExternalEndpoint;
export { TrafficManagerNestedEndpointArgs, TrafficManagerNestedEndpointState } from "./trafficManagerNestedEndpoint";
export declare type TrafficManagerNestedEndpoint = import("./trafficManagerNestedEndpoint").TrafficManagerNestedEndpoint;
export declare const TrafficManagerNestedEndpoint: typeof import("./trafficManagerNestedEndpoint").TrafficManagerNestedEndpoint;
export { TrafficManagerProfileArgs, TrafficManagerProfileState } from "./trafficManagerProfile";
export declare type TrafficManagerProfile = import("./trafficManagerProfile").TrafficManagerProfile;
export declare const TrafficManagerProfile: typeof import("./trafficManagerProfile").TrafficManagerProfile;
export { VirtualHubArgs, VirtualHubState } from "./virtualHub";
export declare type VirtualHub = import("./virtualHub").VirtualHub;
export declare const VirtualHub: typeof import("./virtualHub").VirtualHub;
export { VirtualHubConnectionArgs, VirtualHubConnectionState } from "./virtualHubConnection";
export declare type VirtualHubConnection = import("./virtualHubConnection").VirtualHubConnection;
export declare const VirtualHubConnection: typeof import("./virtualHubConnection").VirtualHubConnection;
export { VirtualHubIpArgs, VirtualHubIpState } from "./virtualHubIp";
export declare type VirtualHubIp = import("./virtualHubIp").VirtualHubIp;
export declare const VirtualHubIp: typeof import("./virtualHubIp").VirtualHubIp;
export { VirtualHubRouteTableArgs, VirtualHubRouteTableState } from "./virtualHubRouteTable";
export declare type VirtualHubRouteTable = import("./virtualHubRouteTable").VirtualHubRouteTable;
export declare const VirtualHubRouteTable: typeof import("./virtualHubRouteTable").VirtualHubRouteTable;
export { VirtualHubRouteTableRouteArgs, VirtualHubRouteTableRouteState } from "./virtualHubRouteTableRoute";
export declare type VirtualHubRouteTableRoute = import("./virtualHubRouteTableRoute").VirtualHubRouteTableRoute;
export declare const VirtualHubRouteTableRoute: typeof import("./virtualHubRouteTableRoute").VirtualHubRouteTableRoute;
export { VirtualNetworkArgs, VirtualNetworkState } from "./virtualNetwork";
export declare type VirtualNetwork = import("./virtualNetwork").VirtualNetwork;
export declare const VirtualNetwork: typeof import("./virtualNetwork").VirtualNetwork;
export { VirtualNetworkDnsServersArgs, VirtualNetworkDnsServersState } from "./virtualNetworkDnsServers";
export declare type VirtualNetworkDnsServers = import("./virtualNetworkDnsServers").VirtualNetworkDnsServers;
export declare const VirtualNetworkDnsServers: typeof import("./virtualNetworkDnsServers").VirtualNetworkDnsServers;
export { VirtualNetworkGatewayArgs, VirtualNetworkGatewayState } from "./virtualNetworkGateway";
export declare type VirtualNetworkGateway = import("./virtualNetworkGateway").VirtualNetworkGateway;
export declare const VirtualNetworkGateway: typeof import("./virtualNetworkGateway").VirtualNetworkGateway;
export { VirtualNetworkGatewayConnectionArgs, VirtualNetworkGatewayConnectionState } from "./virtualNetworkGatewayConnection";
export declare type VirtualNetworkGatewayConnection = import("./virtualNetworkGatewayConnection").VirtualNetworkGatewayConnection;
export declare const VirtualNetworkGatewayConnection: typeof import("./virtualNetworkGatewayConnection").VirtualNetworkGatewayConnection;
export { VirtualNetworkGatewayNatRuleArgs, VirtualNetworkGatewayNatRuleState } from "./virtualNetworkGatewayNatRule";
export declare type VirtualNetworkGatewayNatRule = import("./virtualNetworkGatewayNatRule").VirtualNetworkGatewayNatRule;
export declare const VirtualNetworkGatewayNatRule: typeof import("./virtualNetworkGatewayNatRule").VirtualNetworkGatewayNatRule;
export { VirtualNetworkPeeringArgs, VirtualNetworkPeeringState } from "./virtualNetworkPeering";
export declare type VirtualNetworkPeering = import("./virtualNetworkPeering").VirtualNetworkPeering;
export declare const VirtualNetworkPeering: typeof import("./virtualNetworkPeering").VirtualNetworkPeering;
export { VirtualWanArgs, VirtualWanState } from "./virtualWan";
export declare type VirtualWan = import("./virtualWan").VirtualWan;
export declare const VirtualWan: typeof import("./virtualWan").VirtualWan;
export { VnpGatewayNatRuleArgs, VnpGatewayNatRuleState } from "./vnpGatewayNatRule";
export declare type VnpGatewayNatRule = import("./vnpGatewayNatRule").VnpGatewayNatRule;
export declare const VnpGatewayNatRule: typeof import("./vnpGatewayNatRule").VnpGatewayNatRule;
export { VpnGatewayArgs, VpnGatewayState } from "./vpnGateway";
export declare type VpnGateway = import("./vpnGateway").VpnGateway;
export declare const VpnGateway: typeof import("./vpnGateway").VpnGateway;
export { VpnGatewayConnectionArgs, VpnGatewayConnectionState } from "./vpnGatewayConnection";
export declare type VpnGatewayConnection = import("./vpnGatewayConnection").VpnGatewayConnection;
export declare const VpnGatewayConnection: typeof import("./vpnGatewayConnection").VpnGatewayConnection;
export { VpnServerConfigurationArgs, VpnServerConfigurationState } from "./vpnServerConfiguration";
export declare type VpnServerConfiguration = import("./vpnServerConfiguration").VpnServerConfiguration;
export declare const VpnServerConfiguration: typeof import("./vpnServerConfiguration").VpnServerConfiguration;
export { VpnServerConfigurationPolicyGroupArgs, VpnServerConfigurationPolicyGroupState } from "./vpnServerConfigurationPolicyGroup";
export declare type VpnServerConfigurationPolicyGroup = import("./vpnServerConfigurationPolicyGroup").VpnServerConfigurationPolicyGroup;
export declare const VpnServerConfigurationPolicyGroup: typeof import("./vpnServerConfigurationPolicyGroup").VpnServerConfigurationPolicyGroup;
export { VpnSiteArgs, VpnSiteState } from "./vpnSite";
export declare type VpnSite = import("./vpnSite").VpnSite;
export declare const VpnSite: typeof import("./vpnSite").VpnSite;
