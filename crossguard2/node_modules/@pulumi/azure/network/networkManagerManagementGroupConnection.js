"use strict";
// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***
Object.defineProperty(exports, "__esModule", { value: true });
exports.NetworkManagerManagementGroupConnection = void 0;
const pulumi = require("@pulumi/pulumi");
const utilities = require("../utilities");
/**
 * Manages a Network Manager Management Group Connection which may cross tenants.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as azure from "@pulumi/azure";
 *
 * const example = new azure.management.Group("example", {});
 * const alt = azure.core.getSubscription({
 *     subscriptionId: "00000000-0000-0000-0000-000000000000",
 * });
 * const exampleGroupSubscriptionAssociation = new azure.management.GroupSubscriptionAssociation("example", {
 *     managementGroupId: example.id,
 *     subscriptionId: alt.then(alt => alt.id),
 * });
 * const current = azure.core.getSubscription({});
 * const currentGetClientConfig = azure.core.getClientConfig({});
 * const networkContributor = new azure.authorization.Assignment("network_contributor", {
 *     scope: example.id,
 *     roleDefinitionName: "Network Contributor",
 *     principalId: currentGetClientConfig.then(currentGetClientConfig => currentGetClientConfig.objectId),
 * });
 * const exampleResourceGroup = new azure.core.ResourceGroup("example", {
 *     name: "example-resources",
 *     location: "West Europe",
 * });
 * const exampleNetworkManager = new azure.network.NetworkManager("example", {
 *     name: "example-networkmanager",
 *     location: exampleResourceGroup.location,
 *     resourceGroupName: exampleResourceGroup.name,
 *     scope: {
 *         subscriptionIds: [current.then(current => current.id)],
 *     },
 *     scopeAccesses: ["SecurityAdmin"],
 * });
 * const exampleNetworkManagerManagementGroupConnection = new azure.network.NetworkManagerManagementGroupConnection("example", {
 *     name: "example-nmmgc",
 *     managementGroupId: example.id,
 *     networkManagerId: exampleNetworkManager.id,
 *     description: "example",
 * }, {
 *     dependsOn: [networkContributor],
 * });
 * ```
 *
 * ## Import
 *
 * Network Manager Management Group Connection can be imported using the `resource id`, e.g.
 *
 * ```sh
 * $ pulumi import azure:network/networkManagerManagementGroupConnection:NetworkManagerManagementGroupConnection example /providers/Microsoft.Management/managementGroups/00000000-0000-0000-0000-000000000000/providers/Microsoft.Network/networkManagerConnections/networkManagerConnection1
 * ```
 */
class NetworkManagerManagementGroupConnection extends pulumi.CustomResource {
    constructor(name, argsOrState, opts) {
        let resourceInputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState;
            resourceInputs["connectionState"] = state ? state.connectionState : undefined;
            resourceInputs["description"] = state ? state.description : undefined;
            resourceInputs["managementGroupId"] = state ? state.managementGroupId : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["networkManagerId"] = state ? state.networkManagerId : undefined;
        }
        else {
            const args = argsOrState;
            if ((!args || args.managementGroupId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'managementGroupId'");
            }
            if ((!args || args.networkManagerId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'networkManagerId'");
            }
            resourceInputs["description"] = args ? args.description : undefined;
            resourceInputs["managementGroupId"] = args ? args.managementGroupId : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["networkManagerId"] = args ? args.networkManagerId : undefined;
            resourceInputs["connectionState"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(NetworkManagerManagementGroupConnection.__pulumiType, name, resourceInputs, opts);
    }
    /**
     * Get an existing NetworkManagerManagementGroupConnection resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    static get(name, id, state, opts) {
        return new NetworkManagerManagementGroupConnection(name, state, Object.assign(Object.assign({}, opts), { id: id }));
    }
    /**
     * Returns true if the given object is an instance of NetworkManagerManagementGroupConnection.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    static isInstance(obj) {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === NetworkManagerManagementGroupConnection.__pulumiType;
    }
}
exports.NetworkManagerManagementGroupConnection = NetworkManagerManagementGroupConnection;
/** @internal */
NetworkManagerManagementGroupConnection.__pulumiType = 'azure:network/networkManagerManagementGroupConnection:NetworkManagerManagementGroupConnection';
//# sourceMappingURL=networkManagerManagementGroupConnection.js.map