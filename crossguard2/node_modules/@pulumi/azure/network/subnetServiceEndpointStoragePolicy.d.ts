import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
/**
 * Manages a Subnet Service Endpoint Storage Policy.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as azure from "@pulumi/azure";
 *
 * const example = new azure.core.ResourceGroup("example", {
 *     name: "example-rg",
 *     location: "West Europe",
 * });
 * const exampleAccount = new azure.storage.Account("example", {
 *     name: "examplestorageacct",
 *     resourceGroupName: example.name,
 *     location: example.location,
 *     accountTier: "Standard",
 *     accountReplicationType: "GRS",
 * });
 * const exampleSubnetServiceEndpointStoragePolicy = new azure.network.SubnetServiceEndpointStoragePolicy("example", {
 *     name: "example-policy",
 *     resourceGroupName: example.name,
 *     location: example.location,
 *     definitions: [
 *         {
 *             name: "name1",
 *             description: "definition1",
 *             service: "Microsoft.Storage",
 *             serviceResources: [
 *                 example.id,
 *                 exampleAccount.id,
 *             ],
 *         },
 *         {
 *             name: "name2",
 *             description: "definition2",
 *             service: "Global",
 *             serviceResources: [
 *                 "/services/Azure",
 *                 "/services/Azure/Batch",
 *                 "/services/Azure/DataFactory",
 *                 "/services/Azure/MachineLearning",
 *                 "/services/Azure/ManagedInstance",
 *                 "/services/Azure/WebPI",
 *             ],
 *         },
 *     ],
 * });
 * ```
 *
 * ## Import
 *
 * Subnet Service Endpoint Policies can be imported using the `resource id`, e.g.
 *
 * ```sh
 * $ pulumi import azure:network/subnetServiceEndpointStoragePolicy:SubnetServiceEndpointStoragePolicy example /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/mygroup1/providers/Microsoft.Network/serviceEndpointPolicies/policy1
 * ```
 */
export declare class SubnetServiceEndpointStoragePolicy extends pulumi.CustomResource {
    /**
     * Get an existing SubnetServiceEndpointStoragePolicy resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    static get(name: string, id: pulumi.Input<pulumi.ID>, state?: SubnetServiceEndpointStoragePolicyState, opts?: pulumi.CustomResourceOptions): SubnetServiceEndpointStoragePolicy;
    /**
     * Returns true if the given object is an instance of SubnetServiceEndpointStoragePolicy.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    static isInstance(obj: any): obj is SubnetServiceEndpointStoragePolicy;
    /**
     * A `definition` block as defined below
     */
    readonly definitions: pulumi.Output<outputs.network.SubnetServiceEndpointStoragePolicyDefinition[] | undefined>;
    /**
     * The Azure Region where the Subnet Service Endpoint Storage Policy should exist. Changing this forces a new Subnet Service Endpoint Storage Policy to be created.
     */
    readonly location: pulumi.Output<string>;
    /**
     * The name which should be used for this Subnet Service Endpoint Storage Policy. Changing this forces a new Subnet Service Endpoint Storage Policy to be created.
     */
    readonly name: pulumi.Output<string>;
    /**
     * The name of the Resource Group where the Subnet Service Endpoint Storage Policy should exist. Changing this forces a new Subnet Service Endpoint Storage Policy to be created.
     */
    readonly resourceGroupName: pulumi.Output<string>;
    /**
     * A mapping of tags which should be assigned to the Subnet Service Endpoint Storage Policy.
     */
    readonly tags: pulumi.Output<{
        [key: string]: string;
    } | undefined>;
    /**
     * Create a SubnetServiceEndpointStoragePolicy resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: SubnetServiceEndpointStoragePolicyArgs, opts?: pulumi.CustomResourceOptions);
}
/**
 * Input properties used for looking up and filtering SubnetServiceEndpointStoragePolicy resources.
 */
export interface SubnetServiceEndpointStoragePolicyState {
    /**
     * A `definition` block as defined below
     */
    definitions?: pulumi.Input<pulumi.Input<inputs.network.SubnetServiceEndpointStoragePolicyDefinition>[]>;
    /**
     * The Azure Region where the Subnet Service Endpoint Storage Policy should exist. Changing this forces a new Subnet Service Endpoint Storage Policy to be created.
     */
    location?: pulumi.Input<string>;
    /**
     * The name which should be used for this Subnet Service Endpoint Storage Policy. Changing this forces a new Subnet Service Endpoint Storage Policy to be created.
     */
    name?: pulumi.Input<string>;
    /**
     * The name of the Resource Group where the Subnet Service Endpoint Storage Policy should exist. Changing this forces a new Subnet Service Endpoint Storage Policy to be created.
     */
    resourceGroupName?: pulumi.Input<string>;
    /**
     * A mapping of tags which should be assigned to the Subnet Service Endpoint Storage Policy.
     */
    tags?: pulumi.Input<{
        [key: string]: pulumi.Input<string>;
    }>;
}
/**
 * The set of arguments for constructing a SubnetServiceEndpointStoragePolicy resource.
 */
export interface SubnetServiceEndpointStoragePolicyArgs {
    /**
     * A `definition` block as defined below
     */
    definitions?: pulumi.Input<pulumi.Input<inputs.network.SubnetServiceEndpointStoragePolicyDefinition>[]>;
    /**
     * The Azure Region where the Subnet Service Endpoint Storage Policy should exist. Changing this forces a new Subnet Service Endpoint Storage Policy to be created.
     */
    location?: pulumi.Input<string>;
    /**
     * The name which should be used for this Subnet Service Endpoint Storage Policy. Changing this forces a new Subnet Service Endpoint Storage Policy to be created.
     */
    name?: pulumi.Input<string>;
    /**
     * The name of the Resource Group where the Subnet Service Endpoint Storage Policy should exist. Changing this forces a new Subnet Service Endpoint Storage Policy to be created.
     */
    resourceGroupName: pulumi.Input<string>;
    /**
     * A mapping of tags which should be assigned to the Subnet Service Endpoint Storage Policy.
     */
    tags?: pulumi.Input<{
        [key: string]: pulumi.Input<string>;
    }>;
}
