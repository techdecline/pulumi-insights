"use strict";
// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***
Object.defineProperty(exports, "__esModule", { value: true });
exports.IPGroupCIDR = void 0;
const pulumi = require("@pulumi/pulumi");
const utilities = require("../utilities");
/**
 * Manages IP Group CIDR records.
 *
 * > Warning Do not use this resource at the same time as the `cidrs` property of the
 * `azure.network.IPGroup` resource for the same IP Group. Doing so will cause a conflict and
 * CIDRS will be removed.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as azure from "@pulumi/azure";
 *
 * const example = new azure.core.ResourceGroup("example", {
 *     name: "test-rg",
 *     location: "West Europe",
 * });
 * const exampleIPGroup = new azure.network.IPGroup("example", {
 *     name: "test-ipgroup",
 *     location: example.location,
 *     resourceGroupName: example.name,
 * });
 * const exampleIPGroupCIDR = new azure.network.IPGroupCIDR("example", {
 *     ipGroupId: exampleIPGroup.id,
 *     cidr: "10.10.10.0/24",
 * });
 * ```
 *
 * ## Import
 *
 * IP Group CIDRs can be imported using the `resource id` of the IP Group and
 *
 * the CIDR value (`/` characters have to be replaced by `_`), e.g.
 *
 * ```sh
 * $ pulumi import azure:network/iPGroupCIDR:IPGroupCIDR example /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/test-rg/providers/Microsoft.Network/ipGroups/test-ipgroup/cidrs/10.1.0.0_24
 * ```
 */
class IPGroupCIDR extends pulumi.CustomResource {
    constructor(name, argsOrState, opts) {
        let resourceInputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState;
            resourceInputs["cidr"] = state ? state.cidr : undefined;
            resourceInputs["ipGroupId"] = state ? state.ipGroupId : undefined;
        }
        else {
            const args = argsOrState;
            if ((!args || args.cidr === undefined) && !opts.urn) {
                throw new Error("Missing required property 'cidr'");
            }
            if ((!args || args.ipGroupId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'ipGroupId'");
            }
            resourceInputs["cidr"] = args ? args.cidr : undefined;
            resourceInputs["ipGroupId"] = args ? args.ipGroupId : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(IPGroupCIDR.__pulumiType, name, resourceInputs, opts);
    }
    /**
     * Get an existing IPGroupCIDR resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    static get(name, id, state, opts) {
        return new IPGroupCIDR(name, state, Object.assign(Object.assign({}, opts), { id: id }));
    }
    /**
     * Returns true if the given object is an instance of IPGroupCIDR.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    static isInstance(obj) {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === IPGroupCIDR.__pulumiType;
    }
}
exports.IPGroupCIDR = IPGroupCIDR;
/** @internal */
IPGroupCIDR.__pulumiType = 'azure:network/iPGroupCIDR:IPGroupCIDR';
//# sourceMappingURL=ipgroupCIDR.js.map