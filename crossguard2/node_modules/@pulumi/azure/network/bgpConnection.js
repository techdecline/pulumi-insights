"use strict";
// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***
Object.defineProperty(exports, "__esModule", { value: true });
exports.BgpConnection = void 0;
const pulumi = require("@pulumi/pulumi");
const utilities = require("../utilities");
/**
 * Manages a Bgp Connection for a Virtual Hub.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as azure from "@pulumi/azure";
 *
 * const example = new azure.core.ResourceGroup("example", {
 *     name: "example-resources",
 *     location: "West Europe",
 * });
 * const exampleVirtualHub = new azure.network.VirtualHub("example", {
 *     name: "example-vhub",
 *     resourceGroupName: example.name,
 *     location: example.location,
 *     sku: "Standard",
 * });
 * const examplePublicIp = new azure.network.PublicIp("example", {
 *     name: "example-pip",
 *     location: example.location,
 *     resourceGroupName: example.name,
 *     allocationMethod: "Static",
 *     sku: "Standard",
 * });
 * const exampleVirtualNetwork = new azure.network.VirtualNetwork("example", {
 *     name: "example-vnet",
 *     addressSpaces: ["10.5.0.0/16"],
 *     location: example.location,
 *     resourceGroupName: example.name,
 * });
 * const exampleSubnet = new azure.network.Subnet("example", {
 *     name: "RouteServerSubnet",
 *     resourceGroupName: example.name,
 *     virtualNetworkName: exampleVirtualNetwork.name,
 *     addressPrefixes: ["10.5.1.0/24"],
 * });
 * const exampleVirtualHubIp = new azure.network.VirtualHubIp("example", {
 *     name: "example-vhubip",
 *     virtualHubId: exampleVirtualHub.id,
 *     privateIpAddress: "10.5.1.18",
 *     privateIpAllocationMethod: "Static",
 *     publicIpAddressId: examplePublicIp.id,
 *     subnetId: exampleSubnet.id,
 * });
 * const exampleBgpConnection = new azure.network.BgpConnection("example", {
 *     name: "example-vhub-bgpconnection",
 *     virtualHubId: exampleVirtualHub.id,
 *     peerAsn: 65514,
 *     peerIp: "169.254.21.5",
 * }, {
 *     dependsOn: [exampleVirtualHubIp],
 * });
 * ```
 *
 * ## Import
 *
 * Virtual Hub Bgp Connections can be imported using the `resource id`, e.g.
 *
 * ```sh
 * $ pulumi import azure:network/bgpConnection:BgpConnection example /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/group1/providers/Microsoft.Network/virtualHubs/virtualHub1/bgpConnections/connection1
 * ```
 */
class BgpConnection extends pulumi.CustomResource {
    constructor(name, argsOrState, opts) {
        let resourceInputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["peerAsn"] = state ? state.peerAsn : undefined;
            resourceInputs["peerIp"] = state ? state.peerIp : undefined;
            resourceInputs["virtualHubId"] = state ? state.virtualHubId : undefined;
            resourceInputs["virtualNetworkConnectionId"] = state ? state.virtualNetworkConnectionId : undefined;
        }
        else {
            const args = argsOrState;
            if ((!args || args.peerAsn === undefined) && !opts.urn) {
                throw new Error("Missing required property 'peerAsn'");
            }
            if ((!args || args.peerIp === undefined) && !opts.urn) {
                throw new Error("Missing required property 'peerIp'");
            }
            if ((!args || args.virtualHubId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'virtualHubId'");
            }
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["peerAsn"] = args ? args.peerAsn : undefined;
            resourceInputs["peerIp"] = args ? args.peerIp : undefined;
            resourceInputs["virtualHubId"] = args ? args.virtualHubId : undefined;
            resourceInputs["virtualNetworkConnectionId"] = args ? args.virtualNetworkConnectionId : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(BgpConnection.__pulumiType, name, resourceInputs, opts);
    }
    /**
     * Get an existing BgpConnection resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    static get(name, id, state, opts) {
        return new BgpConnection(name, state, Object.assign(Object.assign({}, opts), { id: id }));
    }
    /**
     * Returns true if the given object is an instance of BgpConnection.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    static isInstance(obj) {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === BgpConnection.__pulumiType;
    }
}
exports.BgpConnection = BgpConnection;
/** @internal */
BgpConnection.__pulumiType = 'azure:network/bgpConnection:BgpConnection';
//# sourceMappingURL=bgpConnection.js.map