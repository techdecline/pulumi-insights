import * as pulumi from "@pulumi/pulumi";
/**
 * Use this data source to access information about existing IP Groups.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as azure from "@pulumi/azure";
 *
 * const example = azure.network.getIpGroups({
 *     name: "existing",
 *     resourceGroupName: "existing",
 * });
 * export const ids = example.then(example => example.ids);
 * ```
 */
export declare function getIpGroups(args: GetIpGroupsArgs, opts?: pulumi.InvokeOptions): Promise<GetIpGroupsResult>;
/**
 * A collection of arguments for invoking getIpGroups.
 */
export interface GetIpGroupsArgs {
    /**
     * A substring to match some number of IP Groups.
     */
    name: string;
    /**
     * The name of the Resource Group where the IP Groups exist.
     */
    resourceGroupName: string;
}
/**
 * A collection of values returned by getIpGroups.
 */
export interface GetIpGroupsResult {
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    /**
     * A list of IP Group IDs.
     */
    readonly ids: string[];
    readonly location: string;
    readonly name: string;
    /**
     * A list of IP Group Names.
     */
    readonly names: string[];
    readonly resourceGroupName: string;
    readonly tags: {
        [key: string]: string;
    };
}
/**
 * Use this data source to access information about existing IP Groups.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as azure from "@pulumi/azure";
 *
 * const example = azure.network.getIpGroups({
 *     name: "existing",
 *     resourceGroupName: "existing",
 * });
 * export const ids = example.then(example => example.ids);
 * ```
 */
export declare function getIpGroupsOutput(args: GetIpGroupsOutputArgs, opts?: pulumi.InvokeOutputOptions): pulumi.Output<GetIpGroupsResult>;
/**
 * A collection of arguments for invoking getIpGroups.
 */
export interface GetIpGroupsOutputArgs {
    /**
     * A substring to match some number of IP Groups.
     */
    name: pulumi.Input<string>;
    /**
     * The name of the Resource Group where the IP Groups exist.
     */
    resourceGroupName: pulumi.Input<string>;
}
