import * as pulumi from "@pulumi/pulumi";
import * as outputs from "../types/output";
/**
 * Use this data source to access information about a Network Manager.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as azure from "@pulumi/azure";
 *
 * const exampleResourceGroup = new azure.core.ResourceGroup("example", {
 *     name: "example-resources",
 *     location: "West Europe",
 * });
 * const current = azure.core.getSubscription({});
 * const exampleNetworkManager = new azure.network.NetworkManager("example", {
 *     name: "example-network-manager",
 *     location: exampleResourceGroup.location,
 *     resourceGroupName: exampleResourceGroup.name,
 *     scope: {
 *         subscriptionIds: [current.then(current => current.id)],
 *     },
 *     scopeAccesses: [
 *         "Connectivity",
 *         "SecurityAdmin",
 *     ],
 *     description: "example network manager",
 * });
 * const example = azure.network.getNetworkManagerOutput({
 *     name: exampleNetworkManager.name,
 *     resourceGroupName: exampleNetworkManager.resourceGroupName,
 * });
 * ```
 */
export declare function getNetworkManager(args: GetNetworkManagerArgs, opts?: pulumi.InvokeOptions): Promise<GetNetworkManagerResult>;
/**
 * A collection of arguments for invoking getNetworkManager.
 */
export interface GetNetworkManagerArgs {
    /**
     * The name of the Network Manager.
     */
    name: string;
    /**
     * The Name of the Resource Group where the Network Manager exists.
     */
    resourceGroupName: string;
}
/**
 * A collection of values returned by getNetworkManager.
 */
export interface GetNetworkManagerResult {
    /**
     * One or more `crossTenantScopes` blocks as defined below.
     */
    readonly crossTenantScopes: outputs.network.GetNetworkManagerCrossTenantScope[];
    /**
     * A description of the Network Manager.
     */
    readonly description: string;
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    /**
     * The Azure Region where the Network Manager exists.
     */
    readonly location: string;
    readonly name: string;
    readonly resourceGroupName: string;
    /**
     * A list of configuration deployment type configured on the Network Manager.
     */
    readonly scopeAccesses: string[];
    /**
     * A `scope` block as defined below.
     */
    readonly scopes: outputs.network.GetNetworkManagerScope[];
    /**
     * A mapping of tags assigned to the Network Manager.
     */
    readonly tags: {
        [key: string]: string;
    };
}
/**
 * Use this data source to access information about a Network Manager.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as azure from "@pulumi/azure";
 *
 * const exampleResourceGroup = new azure.core.ResourceGroup("example", {
 *     name: "example-resources",
 *     location: "West Europe",
 * });
 * const current = azure.core.getSubscription({});
 * const exampleNetworkManager = new azure.network.NetworkManager("example", {
 *     name: "example-network-manager",
 *     location: exampleResourceGroup.location,
 *     resourceGroupName: exampleResourceGroup.name,
 *     scope: {
 *         subscriptionIds: [current.then(current => current.id)],
 *     },
 *     scopeAccesses: [
 *         "Connectivity",
 *         "SecurityAdmin",
 *     ],
 *     description: "example network manager",
 * });
 * const example = azure.network.getNetworkManagerOutput({
 *     name: exampleNetworkManager.name,
 *     resourceGroupName: exampleNetworkManager.resourceGroupName,
 * });
 * ```
 */
export declare function getNetworkManagerOutput(args: GetNetworkManagerOutputArgs, opts?: pulumi.InvokeOutputOptions): pulumi.Output<GetNetworkManagerResult>;
/**
 * A collection of arguments for invoking getNetworkManager.
 */
export interface GetNetworkManagerOutputArgs {
    /**
     * The name of the Network Manager.
     */
    name: pulumi.Input<string>;
    /**
     * The Name of the Resource Group where the Network Manager exists.
     */
    resourceGroupName: pulumi.Input<string>;
}
