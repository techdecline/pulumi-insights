import * as pulumi from "@pulumi/pulumi";
/**
 * Manages an Azure Route Server
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as azure from "@pulumi/azure";
 *
 * const example = new azure.core.ResourceGroup("example", {
 *     name: "example-resources",
 *     location: "West Europe",
 * });
 * const exampleVirtualNetwork = new azure.network.VirtualNetwork("example", {
 *     name: "example-vn",
 *     addressSpaces: ["10.0.0.0/16"],
 *     resourceGroupName: example.name,
 *     location: example.location,
 *     tags: {
 *         environment: "Production",
 *     },
 * });
 * const exampleSubnet = new azure.network.Subnet("example", {
 *     name: "RouteServerSubnet",
 *     virtualNetworkName: exampleVirtualNetwork.name,
 *     resourceGroupName: example.name,
 *     addressPrefixes: ["10.0.1.0/24"],
 * });
 * const examplePublicIp = new azure.network.PublicIp("example", {
 *     name: "example-pip",
 *     resourceGroupName: example.name,
 *     location: example.location,
 *     allocationMethod: "Static",
 *     sku: "Standard",
 * });
 * const exampleRouteServer = new azure.network.RouteServer("example", {
 *     name: "example-routerserver",
 *     resourceGroupName: example.name,
 *     location: example.location,
 *     sku: "Standard",
 *     publicIpAddressId: examplePublicIp.id,
 *     subnetId: exampleSubnet.id,
 *     branchToBranchTrafficEnabled: true,
 *     hubRoutingPreference: "ASPath",
 * });
 * ```
 *
 * ## Import
 *
 * Route Server can be imported using the `resource id`, e.g.
 *
 * ```sh
 * $ pulumi import azure:network/routeServer:RouteServer example /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/group1/providers/Microsoft.Network/virtualHubs/routeServer1
 * ```
 */
export declare class RouteServer extends pulumi.CustomResource {
    /**
     * Get an existing RouteServer resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    static get(name: string, id: pulumi.Input<pulumi.ID>, state?: RouteServerState, opts?: pulumi.CustomResourceOptions): RouteServer;
    /**
     * Returns true if the given object is an instance of RouteServer.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    static isInstance(obj: any): obj is RouteServer;
    /**
     * Whether to enable route exchange between Azure Route Server and the gateway(s).
     */
    readonly branchToBranchTrafficEnabled: pulumi.Output<boolean | undefined>;
    /**
     * The hub routing preference. Valid values are `ASPath`, `ExpressRoute` or `VpnGateway`. Defaults to `ExpressRoute`.
     */
    readonly hubRoutingPreference: pulumi.Output<string | undefined>;
    /**
     * Specifies the supported Azure location where the Route Server should exist. Changing this forces a new resource to be created.
     */
    readonly location: pulumi.Output<string>;
    /**
     * The name of the Route Server. Changing this forces a new resource to be created.
     */
    readonly name: pulumi.Output<string>;
    /**
     * The ID of the Public IP Address. This option is required since September 1st 2021. Changing this forces a new resource to be created.
     */
    readonly publicIpAddressId: pulumi.Output<string>;
    /**
     * Specifies the name of the Resource Group where the Route Server should exist. Changing this forces a new resource to be created.
     */
    readonly resourceGroupName: pulumi.Output<string>;
    readonly routingState: pulumi.Output<string>;
    /**
     * The SKU of the Route Server. The only possible value is `Standard`. Changing this forces a new resource to be created.
     */
    readonly sku: pulumi.Output<string>;
    /**
     * The ID of the Subnet that the Route Server will reside. Changing this forces a new resource to be created.
     *
     * > **NOTE:** Azure Route Server requires a dedicated subnet named RouteServerSubnet. The subnet size has to be at least /27 or short prefix (such as /26 or /25) and cannot be attached to any security group, otherwise, you'll receive an error message when deploying the Route Server.
     */
    readonly subnetId: pulumi.Output<string>;
    /**
     * A mapping of tags to assign to the resource.
     */
    readonly tags: pulumi.Output<{
        [key: string]: string;
    } | undefined>;
    readonly virtualRouterAsn: pulumi.Output<number>;
    readonly virtualRouterIps: pulumi.Output<string[]>;
    /**
     * Create a RouteServer resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: RouteServerArgs, opts?: pulumi.CustomResourceOptions);
}
/**
 * Input properties used for looking up and filtering RouteServer resources.
 */
export interface RouteServerState {
    /**
     * Whether to enable route exchange between Azure Route Server and the gateway(s).
     */
    branchToBranchTrafficEnabled?: pulumi.Input<boolean>;
    /**
     * The hub routing preference. Valid values are `ASPath`, `ExpressRoute` or `VpnGateway`. Defaults to `ExpressRoute`.
     */
    hubRoutingPreference?: pulumi.Input<string>;
    /**
     * Specifies the supported Azure location where the Route Server should exist. Changing this forces a new resource to be created.
     */
    location?: pulumi.Input<string>;
    /**
     * The name of the Route Server. Changing this forces a new resource to be created.
     */
    name?: pulumi.Input<string>;
    /**
     * The ID of the Public IP Address. This option is required since September 1st 2021. Changing this forces a new resource to be created.
     */
    publicIpAddressId?: pulumi.Input<string>;
    /**
     * Specifies the name of the Resource Group where the Route Server should exist. Changing this forces a new resource to be created.
     */
    resourceGroupName?: pulumi.Input<string>;
    routingState?: pulumi.Input<string>;
    /**
     * The SKU of the Route Server. The only possible value is `Standard`. Changing this forces a new resource to be created.
     */
    sku?: pulumi.Input<string>;
    /**
     * The ID of the Subnet that the Route Server will reside. Changing this forces a new resource to be created.
     *
     * > **NOTE:** Azure Route Server requires a dedicated subnet named RouteServerSubnet. The subnet size has to be at least /27 or short prefix (such as /26 or /25) and cannot be attached to any security group, otherwise, you'll receive an error message when deploying the Route Server.
     */
    subnetId?: pulumi.Input<string>;
    /**
     * A mapping of tags to assign to the resource.
     */
    tags?: pulumi.Input<{
        [key: string]: pulumi.Input<string>;
    }>;
    virtualRouterAsn?: pulumi.Input<number>;
    virtualRouterIps?: pulumi.Input<pulumi.Input<string>[]>;
}
/**
 * The set of arguments for constructing a RouteServer resource.
 */
export interface RouteServerArgs {
    /**
     * Whether to enable route exchange between Azure Route Server and the gateway(s).
     */
    branchToBranchTrafficEnabled?: pulumi.Input<boolean>;
    /**
     * The hub routing preference. Valid values are `ASPath`, `ExpressRoute` or `VpnGateway`. Defaults to `ExpressRoute`.
     */
    hubRoutingPreference?: pulumi.Input<string>;
    /**
     * Specifies the supported Azure location where the Route Server should exist. Changing this forces a new resource to be created.
     */
    location?: pulumi.Input<string>;
    /**
     * The name of the Route Server. Changing this forces a new resource to be created.
     */
    name?: pulumi.Input<string>;
    /**
     * The ID of the Public IP Address. This option is required since September 1st 2021. Changing this forces a new resource to be created.
     */
    publicIpAddressId: pulumi.Input<string>;
    /**
     * Specifies the name of the Resource Group where the Route Server should exist. Changing this forces a new resource to be created.
     */
    resourceGroupName: pulumi.Input<string>;
    /**
     * The SKU of the Route Server. The only possible value is `Standard`. Changing this forces a new resource to be created.
     */
    sku: pulumi.Input<string>;
    /**
     * The ID of the Subnet that the Route Server will reside. Changing this forces a new resource to be created.
     *
     * > **NOTE:** Azure Route Server requires a dedicated subnet named RouteServerSubnet. The subnet size has to be at least /27 or short prefix (such as /26 or /25) and cannot be attached to any security group, otherwise, you'll receive an error message when deploying the Route Server.
     */
    subnetId: pulumi.Input<string>;
    /**
     * A mapping of tags to assign to the resource.
     */
    tags?: pulumi.Input<{
        [key: string]: pulumi.Input<string>;
    }>;
}
