"use strict";
// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***
Object.defineProperty(exports, "__esModule", { value: true });
exports.VirtualNetworkGatewayNatRule = void 0;
const pulumi = require("@pulumi/pulumi");
const utilities = require("../utilities");
/**
 * Manages a Virtual Network Gateway Nat Rule.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as azure from "@pulumi/azure";
 *
 * const exampleResourceGroup = new azure.core.ResourceGroup("example", {
 *     name: "example-resources",
 *     location: "West Europe",
 * });
 * const exampleVirtualNetwork = new azure.network.VirtualNetwork("example", {
 *     name: "example-vnet",
 *     location: exampleResourceGroup.location,
 *     resourceGroupName: exampleResourceGroup.name,
 *     addressSpaces: ["10.0.0.0/16"],
 * });
 * const exampleSubnet = new azure.network.Subnet("example", {
 *     name: "GatewaySubnet",
 *     resourceGroupName: exampleResourceGroup.name,
 *     virtualNetworkName: exampleVirtualNetwork.name,
 *     addressPrefixes: ["10.0.1.0/24"],
 * });
 * const examplePublicIp = new azure.network.PublicIp("example", {
 *     name: "example-pip",
 *     location: exampleResourceGroup.location,
 *     resourceGroupName: exampleResourceGroup.name,
 *     allocationMethod: "Dynamic",
 * });
 * const exampleVirtualNetworkGateway = new azure.network.VirtualNetworkGateway("example", {
 *     name: "example-vnetgw",
 *     location: exampleResourceGroup.location,
 *     resourceGroupName: exampleResourceGroup.name,
 *     type: "Vpn",
 *     vpnType: "RouteBased",
 *     sku: "Basic",
 *     ipConfigurations: [{
 *         publicIpAddressId: examplePublicIp.id,
 *         privateIpAddressAllocation: "Dynamic",
 *         subnetId: exampleSubnet.id,
 *     }],
 * });
 * const example = azure.network.getVirtualNetworkGatewayOutput({
 *     name: exampleVirtualNetworkGateway.name,
 *     resourceGroupName: exampleVirtualNetworkGateway.resourceGroupName,
 * });
 * const exampleVirtualNetworkGatewayNatRule = new azure.network.VirtualNetworkGatewayNatRule("example", {
 *     name: "example-vnetgwnatrule",
 *     resourceGroupName: exampleResourceGroup.name,
 *     virtualNetworkGatewayId: example.apply(example => example.id),
 *     mode: "EgressSnat",
 *     type: "Dynamic",
 *     ipConfigurationId: example.apply(example => example.ipConfigurations?.[0]?.id),
 *     externalMappings: [{
 *         addressSpace: "10.2.0.0/26",
 *         portRange: "200",
 *     }],
 *     internalMappings: [{
 *         addressSpace: "10.4.0.0/26",
 *         portRange: "400",
 *     }],
 * });
 * ```
 *
 * ## Import
 *
 * Virtual Network Gateway Nat Rules can be imported using the `resource id`, e.g.
 *
 * ```sh
 * $ pulumi import azure:network/virtualNetworkGatewayNatRule:VirtualNetworkGatewayNatRule example /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/resGroup1/providers/Microsoft.Network/virtualNetworkGateways/gw1/natRules/rule1
 * ```
 */
class VirtualNetworkGatewayNatRule extends pulumi.CustomResource {
    constructor(name, argsOrState, opts) {
        let resourceInputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState;
            resourceInputs["externalMappings"] = state ? state.externalMappings : undefined;
            resourceInputs["internalMappings"] = state ? state.internalMappings : undefined;
            resourceInputs["ipConfigurationId"] = state ? state.ipConfigurationId : undefined;
            resourceInputs["mode"] = state ? state.mode : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["resourceGroupName"] = state ? state.resourceGroupName : undefined;
            resourceInputs["type"] = state ? state.type : undefined;
            resourceInputs["virtualNetworkGatewayId"] = state ? state.virtualNetworkGatewayId : undefined;
        }
        else {
            const args = argsOrState;
            if ((!args || args.externalMappings === undefined) && !opts.urn) {
                throw new Error("Missing required property 'externalMappings'");
            }
            if ((!args || args.internalMappings === undefined) && !opts.urn) {
                throw new Error("Missing required property 'internalMappings'");
            }
            if ((!args || args.resourceGroupName === undefined) && !opts.urn) {
                throw new Error("Missing required property 'resourceGroupName'");
            }
            if ((!args || args.virtualNetworkGatewayId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'virtualNetworkGatewayId'");
            }
            resourceInputs["externalMappings"] = args ? args.externalMappings : undefined;
            resourceInputs["internalMappings"] = args ? args.internalMappings : undefined;
            resourceInputs["ipConfigurationId"] = args ? args.ipConfigurationId : undefined;
            resourceInputs["mode"] = args ? args.mode : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["resourceGroupName"] = args ? args.resourceGroupName : undefined;
            resourceInputs["type"] = args ? args.type : undefined;
            resourceInputs["virtualNetworkGatewayId"] = args ? args.virtualNetworkGatewayId : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(VirtualNetworkGatewayNatRule.__pulumiType, name, resourceInputs, opts);
    }
    /**
     * Get an existing VirtualNetworkGatewayNatRule resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    static get(name, id, state, opts) {
        return new VirtualNetworkGatewayNatRule(name, state, Object.assign(Object.assign({}, opts), { id: id }));
    }
    /**
     * Returns true if the given object is an instance of VirtualNetworkGatewayNatRule.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    static isInstance(obj) {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === VirtualNetworkGatewayNatRule.__pulumiType;
    }
}
exports.VirtualNetworkGatewayNatRule = VirtualNetworkGatewayNatRule;
/** @internal */
VirtualNetworkGatewayNatRule.__pulumiType = 'azure:network/virtualNetworkGatewayNatRule:VirtualNetworkGatewayNatRule';
//# sourceMappingURL=virtualNetworkGatewayNatRule.js.map