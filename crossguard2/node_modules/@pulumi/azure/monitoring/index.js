"use strict";
// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***
Object.defineProperty(exports, "__esModule", { value: true });
exports.Workspace = exports.SmartDetectorAlertRule = exports.ScheduledQueryRulesLog = exports.ScheduledQueryRulesAlertV2 = exports.ScheduledQueryRulesAlert = exports.PrivateLinkScopedService = exports.PrivateLinkScope = exports.MetricAlert = exports.getWorkspaceOutput = exports.getWorkspace = exports.getScheduledQueryRulesLogOutput = exports.getScheduledQueryRulesLog = exports.getScheduledQueryRulesAlertOutput = exports.getScheduledQueryRulesAlert = exports.getDiagnosticCategoriesOutput = exports.getDiagnosticCategories = exports.getDataCollectionRuleOutput = exports.getDataCollectionRule = exports.getDataCollectionEndpointOutput = exports.getDataCollectionEndpoint = exports.getActionGroupOutput = exports.getActionGroup = exports.DiagnosticSetting = exports.DataCollectionRuleAssociation = exports.DataCollectionRule = exports.DataCollectionEndpoint = exports.AutoscaleSetting = exports.AlertPrometheusRuleGroup = exports.AlertProcessingRuleSuppression = exports.AlertProcessingRuleActionGroup = exports.ActivityLogAlert = exports.ActionGroup = exports.AadDiagnosticSetting = void 0;
const pulumi = require("@pulumi/pulumi");
const utilities = require("../utilities");
exports.AadDiagnosticSetting = null;
utilities.lazyLoad(exports, ["AadDiagnosticSetting"], () => require("./aadDiagnosticSetting"));
exports.ActionGroup = null;
utilities.lazyLoad(exports, ["ActionGroup"], () => require("./actionGroup"));
exports.ActivityLogAlert = null;
utilities.lazyLoad(exports, ["ActivityLogAlert"], () => require("./activityLogAlert"));
exports.AlertProcessingRuleActionGroup = null;
utilities.lazyLoad(exports, ["AlertProcessingRuleActionGroup"], () => require("./alertProcessingRuleActionGroup"));
exports.AlertProcessingRuleSuppression = null;
utilities.lazyLoad(exports, ["AlertProcessingRuleSuppression"], () => require("./alertProcessingRuleSuppression"));
exports.AlertPrometheusRuleGroup = null;
utilities.lazyLoad(exports, ["AlertPrometheusRuleGroup"], () => require("./alertPrometheusRuleGroup"));
exports.AutoscaleSetting = null;
utilities.lazyLoad(exports, ["AutoscaleSetting"], () => require("./autoscaleSetting"));
exports.DataCollectionEndpoint = null;
utilities.lazyLoad(exports, ["DataCollectionEndpoint"], () => require("./dataCollectionEndpoint"));
exports.DataCollectionRule = null;
utilities.lazyLoad(exports, ["DataCollectionRule"], () => require("./dataCollectionRule"));
exports.DataCollectionRuleAssociation = null;
utilities.lazyLoad(exports, ["DataCollectionRuleAssociation"], () => require("./dataCollectionRuleAssociation"));
exports.DiagnosticSetting = null;
utilities.lazyLoad(exports, ["DiagnosticSetting"], () => require("./diagnosticSetting"));
exports.getActionGroup = null;
exports.getActionGroupOutput = null;
utilities.lazyLoad(exports, ["getActionGroup", "getActionGroupOutput"], () => require("./getActionGroup"));
exports.getDataCollectionEndpoint = null;
exports.getDataCollectionEndpointOutput = null;
utilities.lazyLoad(exports, ["getDataCollectionEndpoint", "getDataCollectionEndpointOutput"], () => require("./getDataCollectionEndpoint"));
exports.getDataCollectionRule = null;
exports.getDataCollectionRuleOutput = null;
utilities.lazyLoad(exports, ["getDataCollectionRule", "getDataCollectionRuleOutput"], () => require("./getDataCollectionRule"));
exports.getDiagnosticCategories = null;
exports.getDiagnosticCategoriesOutput = null;
utilities.lazyLoad(exports, ["getDiagnosticCategories", "getDiagnosticCategoriesOutput"], () => require("./getDiagnosticCategories"));
exports.getScheduledQueryRulesAlert = null;
exports.getScheduledQueryRulesAlertOutput = null;
utilities.lazyLoad(exports, ["getScheduledQueryRulesAlert", "getScheduledQueryRulesAlertOutput"], () => require("./getScheduledQueryRulesAlert"));
exports.getScheduledQueryRulesLog = null;
exports.getScheduledQueryRulesLogOutput = null;
utilities.lazyLoad(exports, ["getScheduledQueryRulesLog", "getScheduledQueryRulesLogOutput"], () => require("./getScheduledQueryRulesLog"));
exports.getWorkspace = null;
exports.getWorkspaceOutput = null;
utilities.lazyLoad(exports, ["getWorkspace", "getWorkspaceOutput"], () => require("./getWorkspace"));
exports.MetricAlert = null;
utilities.lazyLoad(exports, ["MetricAlert"], () => require("./metricAlert"));
exports.PrivateLinkScope = null;
utilities.lazyLoad(exports, ["PrivateLinkScope"], () => require("./privateLinkScope"));
exports.PrivateLinkScopedService = null;
utilities.lazyLoad(exports, ["PrivateLinkScopedService"], () => require("./privateLinkScopedService"));
exports.ScheduledQueryRulesAlert = null;
utilities.lazyLoad(exports, ["ScheduledQueryRulesAlert"], () => require("./scheduledQueryRulesAlert"));
exports.ScheduledQueryRulesAlertV2 = null;
utilities.lazyLoad(exports, ["ScheduledQueryRulesAlertV2"], () => require("./scheduledQueryRulesAlertV2"));
exports.ScheduledQueryRulesLog = null;
utilities.lazyLoad(exports, ["ScheduledQueryRulesLog"], () => require("./scheduledQueryRulesLog"));
exports.SmartDetectorAlertRule = null;
utilities.lazyLoad(exports, ["SmartDetectorAlertRule"], () => require("./smartDetectorAlertRule"));
exports.Workspace = null;
utilities.lazyLoad(exports, ["Workspace"], () => require("./workspace"));
const _module = {
    version: utilities.getVersion(),
    construct: (name, type, urn) => {
        switch (type) {
            case "azure:monitoring/aadDiagnosticSetting:AadDiagnosticSetting":
                return new exports.AadDiagnosticSetting(name, undefined, { urn });
            case "azure:monitoring/actionGroup:ActionGroup":
                return new exports.ActionGroup(name, undefined, { urn });
            case "azure:monitoring/activityLogAlert:ActivityLogAlert":
                return new exports.ActivityLogAlert(name, undefined, { urn });
            case "azure:monitoring/alertProcessingRuleActionGroup:AlertProcessingRuleActionGroup":
                return new exports.AlertProcessingRuleActionGroup(name, undefined, { urn });
            case "azure:monitoring/alertProcessingRuleSuppression:AlertProcessingRuleSuppression":
                return new exports.AlertProcessingRuleSuppression(name, undefined, { urn });
            case "azure:monitoring/alertPrometheusRuleGroup:AlertPrometheusRuleGroup":
                return new exports.AlertPrometheusRuleGroup(name, undefined, { urn });
            case "azure:monitoring/autoscaleSetting:AutoscaleSetting":
                return new exports.AutoscaleSetting(name, undefined, { urn });
            case "azure:monitoring/dataCollectionEndpoint:DataCollectionEndpoint":
                return new exports.DataCollectionEndpoint(name, undefined, { urn });
            case "azure:monitoring/dataCollectionRule:DataCollectionRule":
                return new exports.DataCollectionRule(name, undefined, { urn });
            case "azure:monitoring/dataCollectionRuleAssociation:DataCollectionRuleAssociation":
                return new exports.DataCollectionRuleAssociation(name, undefined, { urn });
            case "azure:monitoring/diagnosticSetting:DiagnosticSetting":
                return new exports.DiagnosticSetting(name, undefined, { urn });
            case "azure:monitoring/metricAlert:MetricAlert":
                return new exports.MetricAlert(name, undefined, { urn });
            case "azure:monitoring/privateLinkScope:PrivateLinkScope":
                return new exports.PrivateLinkScope(name, undefined, { urn });
            case "azure:monitoring/privateLinkScopedService:PrivateLinkScopedService":
                return new exports.PrivateLinkScopedService(name, undefined, { urn });
            case "azure:monitoring/scheduledQueryRulesAlert:ScheduledQueryRulesAlert":
                return new exports.ScheduledQueryRulesAlert(name, undefined, { urn });
            case "azure:monitoring/scheduledQueryRulesAlertV2:ScheduledQueryRulesAlertV2":
                return new exports.ScheduledQueryRulesAlertV2(name, undefined, { urn });
            case "azure:monitoring/scheduledQueryRulesLog:ScheduledQueryRulesLog":
                return new exports.ScheduledQueryRulesLog(name, undefined, { urn });
            case "azure:monitoring/smartDetectorAlertRule:SmartDetectorAlertRule":
                return new exports.SmartDetectorAlertRule(name, undefined, { urn });
            case "azure:monitoring/workspace:Workspace":
                return new exports.Workspace(name, undefined, { urn });
            default:
                throw new Error(`unknown resource type ${type}`);
        }
    },
};
pulumi.runtime.registerResourceModule("azure", "monitoring/aadDiagnosticSetting", _module);
pulumi.runtime.registerResourceModule("azure", "monitoring/actionGroup", _module);
pulumi.runtime.registerResourceModule("azure", "monitoring/activityLogAlert", _module);
pulumi.runtime.registerResourceModule("azure", "monitoring/alertProcessingRuleActionGroup", _module);
pulumi.runtime.registerResourceModule("azure", "monitoring/alertProcessingRuleSuppression", _module);
pulumi.runtime.registerResourceModule("azure", "monitoring/alertPrometheusRuleGroup", _module);
pulumi.runtime.registerResourceModule("azure", "monitoring/autoscaleSetting", _module);
pulumi.runtime.registerResourceModule("azure", "monitoring/dataCollectionEndpoint", _module);
pulumi.runtime.registerResourceModule("azure", "monitoring/dataCollectionRule", _module);
pulumi.runtime.registerResourceModule("azure", "monitoring/dataCollectionRuleAssociation", _module);
pulumi.runtime.registerResourceModule("azure", "monitoring/diagnosticSetting", _module);
pulumi.runtime.registerResourceModule("azure", "monitoring/metricAlert", _module);
pulumi.runtime.registerResourceModule("azure", "monitoring/privateLinkScope", _module);
pulumi.runtime.registerResourceModule("azure", "monitoring/privateLinkScopedService", _module);
pulumi.runtime.registerResourceModule("azure", "monitoring/scheduledQueryRulesAlert", _module);
pulumi.runtime.registerResourceModule("azure", "monitoring/scheduledQueryRulesAlertV2", _module);
pulumi.runtime.registerResourceModule("azure", "monitoring/scheduledQueryRulesLog", _module);
pulumi.runtime.registerResourceModule("azure", "monitoring/smartDetectorAlertRule", _module);
pulumi.runtime.registerResourceModule("azure", "monitoring/workspace", _module);
//# sourceMappingURL=index.js.map