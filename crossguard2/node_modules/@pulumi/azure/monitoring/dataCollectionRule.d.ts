import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
/**
 * Manages a Data Collection Rule.
 *
 * ## Import
 *
 * Data Collection Rules can be imported using the `resource id`, e.g.
 *
 * ```sh
 * $ pulumi import azure:monitoring/dataCollectionRule:DataCollectionRule example /subscriptions/12345678-1234-9876-4563-123456789012/resourceGroups/group1/providers/Microsoft.Insights/dataCollectionRules/rule1
 * ```
 */
export declare class DataCollectionRule extends pulumi.CustomResource {
    /**
     * Get an existing DataCollectionRule resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    static get(name: string, id: pulumi.Input<pulumi.ID>, state?: DataCollectionRuleState, opts?: pulumi.CustomResourceOptions): DataCollectionRule;
    /**
     * Returns true if the given object is an instance of DataCollectionRule.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    static isInstance(obj: any): obj is DataCollectionRule;
    /**
     * The resource ID of the Data Collection Endpoint that this rule can be used with.
     */
    readonly dataCollectionEndpointId: pulumi.Output<string | undefined>;
    /**
     * One or more `dataFlow` blocks as defined below.
     */
    readonly dataFlows: pulumi.Output<outputs.monitoring.DataCollectionRuleDataFlow[]>;
    /**
     * A `dataSources` block as defined below. This property is optional and can be omitted if the rule is meant to be used via direct calls to the provisioned endpoint.
     */
    readonly dataSources: pulumi.Output<outputs.monitoring.DataCollectionRuleDataSources | undefined>;
    /**
     * The description of the Data Collection Rule.
     */
    readonly description: pulumi.Output<string | undefined>;
    /**
     * A `destinations` block as defined below.
     */
    readonly destinations: pulumi.Output<outputs.monitoring.DataCollectionRuleDestinations>;
    /**
     * An `identity` block as defined below.
     */
    readonly identity: pulumi.Output<outputs.monitoring.DataCollectionRuleIdentity | undefined>;
    /**
     * The immutable ID of the Data Collection Rule.
     */
    readonly immutableId: pulumi.Output<string>;
    /**
     * The kind of the Data Collection Rule. Possible values are `Linux`, `Windows`, `AgentDirectToStore` and `WorkspaceTransforms`. A rule of kind `Linux` does not allow for `windowsEventLog` data sources. And a rule of kind `Windows` does not allow for `syslog` data sources. If kind is not specified, all kinds of data sources are allowed.
     *
     * > **NOTE** Once `kind` has been set, changing it forces a new Data Collection Rule to be created.
     */
    readonly kind: pulumi.Output<string | undefined>;
    /**
     * The Azure Region where the Data Collection Rule should exist. Changing this forces a new Data Collection Rule to be created.
     */
    readonly location: pulumi.Output<string>;
    /**
     * The name which should be used for this Data Collection Rule. Changing this forces a new Data Collection Rule to be created.
     */
    readonly name: pulumi.Output<string>;
    /**
     * The name of the Resource Group where the Data Collection Rule should exist. Changing this forces a new Data Collection Rule to be created.
     */
    readonly resourceGroupName: pulumi.Output<string>;
    /**
     * A `streamDeclaration` block as defined below.
     */
    readonly streamDeclarations: pulumi.Output<outputs.monitoring.DataCollectionRuleStreamDeclaration[] | undefined>;
    /**
     * A mapping of tags which should be assigned to the Data Collection Rule.
     */
    readonly tags: pulumi.Output<{
        [key: string]: string;
    } | undefined>;
    /**
     * Create a DataCollectionRule resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: DataCollectionRuleArgs, opts?: pulumi.CustomResourceOptions);
}
/**
 * Input properties used for looking up and filtering DataCollectionRule resources.
 */
export interface DataCollectionRuleState {
    /**
     * The resource ID of the Data Collection Endpoint that this rule can be used with.
     */
    dataCollectionEndpointId?: pulumi.Input<string>;
    /**
     * One or more `dataFlow` blocks as defined below.
     */
    dataFlows?: pulumi.Input<pulumi.Input<inputs.monitoring.DataCollectionRuleDataFlow>[]>;
    /**
     * A `dataSources` block as defined below. This property is optional and can be omitted if the rule is meant to be used via direct calls to the provisioned endpoint.
     */
    dataSources?: pulumi.Input<inputs.monitoring.DataCollectionRuleDataSources>;
    /**
     * The description of the Data Collection Rule.
     */
    description?: pulumi.Input<string>;
    /**
     * A `destinations` block as defined below.
     */
    destinations?: pulumi.Input<inputs.monitoring.DataCollectionRuleDestinations>;
    /**
     * An `identity` block as defined below.
     */
    identity?: pulumi.Input<inputs.monitoring.DataCollectionRuleIdentity>;
    /**
     * The immutable ID of the Data Collection Rule.
     */
    immutableId?: pulumi.Input<string>;
    /**
     * The kind of the Data Collection Rule. Possible values are `Linux`, `Windows`, `AgentDirectToStore` and `WorkspaceTransforms`. A rule of kind `Linux` does not allow for `windowsEventLog` data sources. And a rule of kind `Windows` does not allow for `syslog` data sources. If kind is not specified, all kinds of data sources are allowed.
     *
     * > **NOTE** Once `kind` has been set, changing it forces a new Data Collection Rule to be created.
     */
    kind?: pulumi.Input<string>;
    /**
     * The Azure Region where the Data Collection Rule should exist. Changing this forces a new Data Collection Rule to be created.
     */
    location?: pulumi.Input<string>;
    /**
     * The name which should be used for this Data Collection Rule. Changing this forces a new Data Collection Rule to be created.
     */
    name?: pulumi.Input<string>;
    /**
     * The name of the Resource Group where the Data Collection Rule should exist. Changing this forces a new Data Collection Rule to be created.
     */
    resourceGroupName?: pulumi.Input<string>;
    /**
     * A `streamDeclaration` block as defined below.
     */
    streamDeclarations?: pulumi.Input<pulumi.Input<inputs.monitoring.DataCollectionRuleStreamDeclaration>[]>;
    /**
     * A mapping of tags which should be assigned to the Data Collection Rule.
     */
    tags?: pulumi.Input<{
        [key: string]: pulumi.Input<string>;
    }>;
}
/**
 * The set of arguments for constructing a DataCollectionRule resource.
 */
export interface DataCollectionRuleArgs {
    /**
     * The resource ID of the Data Collection Endpoint that this rule can be used with.
     */
    dataCollectionEndpointId?: pulumi.Input<string>;
    /**
     * One or more `dataFlow` blocks as defined below.
     */
    dataFlows: pulumi.Input<pulumi.Input<inputs.monitoring.DataCollectionRuleDataFlow>[]>;
    /**
     * A `dataSources` block as defined below. This property is optional and can be omitted if the rule is meant to be used via direct calls to the provisioned endpoint.
     */
    dataSources?: pulumi.Input<inputs.monitoring.DataCollectionRuleDataSources>;
    /**
     * The description of the Data Collection Rule.
     */
    description?: pulumi.Input<string>;
    /**
     * A `destinations` block as defined below.
     */
    destinations: pulumi.Input<inputs.monitoring.DataCollectionRuleDestinations>;
    /**
     * An `identity` block as defined below.
     */
    identity?: pulumi.Input<inputs.monitoring.DataCollectionRuleIdentity>;
    /**
     * The kind of the Data Collection Rule. Possible values are `Linux`, `Windows`, `AgentDirectToStore` and `WorkspaceTransforms`. A rule of kind `Linux` does not allow for `windowsEventLog` data sources. And a rule of kind `Windows` does not allow for `syslog` data sources. If kind is not specified, all kinds of data sources are allowed.
     *
     * > **NOTE** Once `kind` has been set, changing it forces a new Data Collection Rule to be created.
     */
    kind?: pulumi.Input<string>;
    /**
     * The Azure Region where the Data Collection Rule should exist. Changing this forces a new Data Collection Rule to be created.
     */
    location?: pulumi.Input<string>;
    /**
     * The name which should be used for this Data Collection Rule. Changing this forces a new Data Collection Rule to be created.
     */
    name?: pulumi.Input<string>;
    /**
     * The name of the Resource Group where the Data Collection Rule should exist. Changing this forces a new Data Collection Rule to be created.
     */
    resourceGroupName: pulumi.Input<string>;
    /**
     * A `streamDeclaration` block as defined below.
     */
    streamDeclarations?: pulumi.Input<pulumi.Input<inputs.monitoring.DataCollectionRuleStreamDeclaration>[]>;
    /**
     * A mapping of tags which should be assigned to the Data Collection Rule.
     */
    tags?: pulumi.Input<{
        [key: string]: pulumi.Input<string>;
    }>;
}
