"use strict";
// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***
Object.defineProperty(exports, "__esModule", { value: true });
exports.DataCollectionRuleAssociation = void 0;
const pulumi = require("@pulumi/pulumi");
const utilities = require("../utilities");
/**
 * Manages a Data Collection Rule Association.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as azure from "@pulumi/azure";
 *
 * const example = new azure.core.ResourceGroup("example", {
 *     name: "example-resources",
 *     location: "West Europe",
 * });
 * const exampleVirtualNetwork = new azure.network.VirtualNetwork("example", {
 *     name: "virtualnetwork",
 *     addressSpaces: ["10.0.0.0/16"],
 *     location: example.location,
 *     resourceGroupName: example.name,
 * });
 * const exampleSubnet = new azure.network.Subnet("example", {
 *     name: "subnet",
 *     resourceGroupName: example.name,
 *     virtualNetworkName: exampleVirtualNetwork.name,
 *     addressPrefixes: ["10.0.2.0/24"],
 * });
 * const exampleNetworkInterface = new azure.network.NetworkInterface("example", {
 *     name: "nic",
 *     location: example.location,
 *     resourceGroupName: example.name,
 *     ipConfigurations: [{
 *         name: "internal",
 *         subnetId: exampleSubnet.id,
 *         privateIpAddressAllocation: "Dynamic",
 *     }],
 * });
 * const exampleLinuxVirtualMachine = new azure.compute.LinuxVirtualMachine("example", {
 *     name: "machine",
 *     resourceGroupName: example.name,
 *     location: example.location,
 *     size: "Standard_B1ls",
 *     adminUsername: "adminuser",
 *     networkInterfaceIds: [exampleNetworkInterface.id],
 *     adminPassword: "example-Password@7890",
 *     disablePasswordAuthentication: false,
 *     osDisk: {
 *         caching: "ReadWrite",
 *         storageAccountType: "Standard_LRS",
 *     },
 *     sourceImageReference: {
 *         publisher: "Canonical",
 *         offer: "0001-com-ubuntu-server-jammy",
 *         sku: "22_04-lts",
 *         version: "latest",
 *     },
 * });
 * const exampleDataCollectionRule = new azure.monitoring.DataCollectionRule("example", {
 *     name: "example-dcr",
 *     resourceGroupName: example.name,
 *     location: example.location,
 *     destinations: {
 *         azureMonitorMetrics: {
 *             name: "example-destination-metrics",
 *         },
 *     },
 *     dataFlows: [{
 *         streams: ["Microsoft-InsightsMetrics"],
 *         destinations: ["example-destination-metrics"],
 *     }],
 * });
 * const exampleDataCollectionEndpoint = new azure.monitoring.DataCollectionEndpoint("example", {
 *     name: "example-dce",
 *     resourceGroupName: example.name,
 *     location: example.location,
 * });
 * // associate to a Data Collection Rule
 * const example1 = new azure.monitoring.DataCollectionRuleAssociation("example1", {
 *     name: "example1-dcra",
 *     targetResourceId: exampleLinuxVirtualMachine.id,
 *     dataCollectionRuleId: exampleDataCollectionRule.id,
 *     description: "example",
 * });
 * // associate to a Data Collection Endpoint
 * const example2 = new azure.monitoring.DataCollectionRuleAssociation("example2", {
 *     targetResourceId: exampleLinuxVirtualMachine.id,
 *     dataCollectionEndpointId: exampleDataCollectionEndpoint.id,
 *     description: "example",
 * });
 * ```
 *
 * ## Import
 *
 * Data Collection Rules Association can be imported using the `resource id`, e.g.
 *
 * ```sh
 * $ pulumi import azure:monitoring/dataCollectionRuleAssociation:DataCollectionRuleAssociation example /subscriptions/12345678-1234-9876-4563-123456789012/resourceGroups/rg1/providers/Microsoft.Compute/virtualMachines/vm1/providers/Microsoft.Insights/dataCollectionRuleAssociations/dca1
 * ```
 */
class DataCollectionRuleAssociation extends pulumi.CustomResource {
    constructor(name, argsOrState, opts) {
        let resourceInputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState;
            resourceInputs["dataCollectionEndpointId"] = state ? state.dataCollectionEndpointId : undefined;
            resourceInputs["dataCollectionRuleId"] = state ? state.dataCollectionRuleId : undefined;
            resourceInputs["description"] = state ? state.description : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["targetResourceId"] = state ? state.targetResourceId : undefined;
        }
        else {
            const args = argsOrState;
            if ((!args || args.targetResourceId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'targetResourceId'");
            }
            resourceInputs["dataCollectionEndpointId"] = args ? args.dataCollectionEndpointId : undefined;
            resourceInputs["dataCollectionRuleId"] = args ? args.dataCollectionRuleId : undefined;
            resourceInputs["description"] = args ? args.description : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["targetResourceId"] = args ? args.targetResourceId : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(DataCollectionRuleAssociation.__pulumiType, name, resourceInputs, opts);
    }
    /**
     * Get an existing DataCollectionRuleAssociation resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    static get(name, id, state, opts) {
        return new DataCollectionRuleAssociation(name, state, Object.assign(Object.assign({}, opts), { id: id }));
    }
    /**
     * Returns true if the given object is an instance of DataCollectionRuleAssociation.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    static isInstance(obj) {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === DataCollectionRuleAssociation.__pulumiType;
    }
}
exports.DataCollectionRuleAssociation = DataCollectionRuleAssociation;
/** @internal */
DataCollectionRuleAssociation.__pulumiType = 'azure:monitoring/dataCollectionRuleAssociation:DataCollectionRuleAssociation';
//# sourceMappingURL=dataCollectionRuleAssociation.js.map